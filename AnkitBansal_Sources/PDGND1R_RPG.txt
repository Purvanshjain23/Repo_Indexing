     H/TITLE Dsp Product Availblty D1  Display record(1 screen)
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Display DBF file records, one at a time
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Display record(1 screen)
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISPPATE
     H* Date          : 02/21/11  Time  : 11:02:35
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDGND1R#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Dsp Product Availblty D1  Display record(1 screen)
      *
     FCABZREL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FCAADREL6IF  E           K        DISK
      * RSQ : Warehouse                 Typ/Whs
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDI8CPLCIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar                  Co/Date               NV
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAABREL1IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       V
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * KEY Screen: Field position and name array
     E                    W0BEG   3 003  5 0A
     E                    W0END   3 003  5 0A
     E                    W0NAM   3 003 10
      * DETAIL Screen: Field position and name array
     E                    W1BEG   7 075  5 0A
     E                    W1END   7 075  5 0A
     E                    W1NAM   7 075 10
      * Long constants
     E                    @CN#    1  04  6   @CN    25
     I@ADREOJ
      * Warehouse                 Typ/Whs
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
     I@I8CPDZ
      * PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WBAIC3
     I              I8V5ST                          WBV5ST
     I              I8ELDT                          WBELDT
     I              I8HGCD                          WBHGCD
     I              I8AJCD                          WBAJCD
     I              I8GPDT                          WBGPDT
     I              I8WTSP                          WBWTSP
     I              I8QTSP                          WBQTSP
     I              I8DJPC                          WBDJPC
     I              I8F8WG                          WBF8WG
     I              I8WTIN                          WBWTIN
     I              I8D5NB                          WBD5NB
     I              I8DXWG                          WBDXWG
     I              I8B2NB                          WBB2NB
     I              I8WTCN                          WBWTCN
     I              I8PSCV                          WBPSCV
     I              I8SAWT                          WBSAWT
     I              I8B9NB                          WBB9NB
     I              I8D1WG                          WBD1WG
     I              I8CBNB                          WBCBNB
     I              I8EZWG                          WBEZWG
     I              I8CCNB                          WBCCNB
     I              I8E0WG                          WBE0WG
     I              I8D6NB                          WBD6NB
     I              I8OAWT                          WBOAWT
     I              I8CDNB                          WBCDNB
     I              I8UNW2                          WBUNW2
     I              I8CENB                          WBCENB
     I              I8F9WG                          WBF9WG
     I              I8BPNB                          WBBPNB
     I              I8GAWG                          WBGAWG
     I              I8BQNB                          WBBQNB
     I              I8GBWG                          WBGBWG
     I              I8BRNB                          WBBRNB
     I              I8GCWG                          WBGCWG
     I              I8BSNB                          WBBSNB
     I              I8GDWG                          WBGDWG
     I              I8BWNB                          WBBWNB
     I              I8GEWG                          WBGEWG
     I              I8PS6U                          WBPS6U
     I              I8WCST                          WBWCST
     I              I8WPST                          WBWPST
     I              I8B5ST                          WBB5ST
     I              I8TFST                          WBTFST
     I              I8TEST                          WBTEST
     I              I8THST                          WBTHST
     I              I8UDST                          WBUDST
     I              I8UFST                          WBUFST
     I              I8UGST                          WBUGST
     I              I8UHST                          WBUHST
     I              I8B6ST                          WBB6ST
     I              I8B7ST                          WBB7ST
     I              I8DVWG                          WBDVWG
     I              I8D7NB                          WBD7NB
     I              I8FCAD                          WBFCAD
     I              I8D9NB                          WBD9NB
     I              I8DWWG                          WBDWWG
     I              I8EANB                          WBEANB
     I              I8SHWT                          WBSHWT
     I              I8EBNB                          WBEBNB
     I              I8AVWT                          WBAVWT
     I              I8ECNB                          WBECNB
     I              I8WTON                          WBWTON
     I              I8EDNB                          WBEDNB
     I              I8FNWT                          WBFNWT
     I              I8EENB                          WBEENB
     I              I8QTAS                          WBQTAS
     I              I8EFNB                          WBEFNB
     I              I8WAIO                          WBWAIO
     I              I8EGNB                          WBEGNB
     I              I8R3CD                          WBR3CD
     I              I8RGNB                          WBRGNB
     I              I8RHNB                          WBRHNB
     I              I8RINB                          WBRINB
     I              I8XRCD                          WBXRCD
     I              I8UVST                          WBUVST
     I              I8UWST                          WBUWST
     I              I8UXST                          WBUXST
     I              I8VSST                          WBVSST
     I              I8AATM                          WBAATM
     I              I8AYNA                          WBAYNA
     I              I8A0NA                          WBA0NA
     I              I8AXDT                          WBAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@AFREYY
      * Calendar                  Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          WDAIC3
     I              AFBCDT                          WDBCDT
     I              AFCQNB                          WDCQNB
     I              AFESNB                          WDESNB
     I              AFETNB                          WDETNB
     I              AFBZNB                          WDBZNB
     I              AFA9ST                          WDA9ST
     I              AFEINB                          WDEINB
     I              AFC5ST                          WDC5ST
     I              AFAQNB                          WDAQNB
     I              AFCMST                          WDCMST
     I              AFV9ST                          WDV9ST
     I              AFWAST                          WDWAST
     I              AFX2ST                          WDX2ST
     I              AFOJDT                          WDOJDT
     I              AFNQNX                          WDNQNX
     I              AFNRNX                          WDNRNX
     I              AFI9SX                          WDI9SX
     I              AFJASX                          WDJASX
     I              AFOKDT                          WDOKDT
     I              AFOLDT                          WDOLDT
     I              AFUVST                          WDUVST
     I              AFUWST                          WDUWST
     I              AFUXST                          WDUXST
     I              AFAATM                          WDAATM
     I              AFAYNA                          WDAYNA
     I              AFA0NA                          WDA0NA
     I              AFAXDT                          WDAXDT
      *
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WEAIC3
     I              AFBCDT                          WEBCDT
     I              AFCQNB                          WECQNB
     I              AFESNB                          WEESNB
     I              AFETNB                          WEETNB
     I              AFBZNB                          WEBZNB
     I              AFA9ST                          WEA9ST
     I              AFEINB                          WEEINB
     I              AFC5ST                          WEC5ST
     I              AFAQNB                          WEAQNB
     I              AFCMST                          WECMST
     I              AFV9ST                          WEV9ST
     I              AFWAST                          WEWAST
     I              AFX2ST                          WEX2ST
     I              AFOJDT                          WEOJDT
     I              AFNQNX                          WENQNX
     I              AFNRNX                          WENRNX
     I              AFI9SX                          WEI9SX
     I              AFJASX                          WEJASX
     I              AFOKDT                          WEOKDT
     I              AFOLDT                          WEOLDT
     I              AFUVST                          WEUVST
     I              AFUWST                          WEUWST
     I              AFUXST                          WEUXST
     I              AFAATM                          WEAATM
     I              AFAYNA                          WEAYNA
     I              AFA0NA                          WEA0NA
     I              AFAXDT                          WEAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      * Outward parameters
     IPARC        DS                             13
      * KEY : Order Detail Schedule     Co/Item/Whse/SchdDte
      * I : RST Company Number
     I                                    P   1   20PAAIC3
      * I : RST Item Code
     I                                    P   3   60PAHGCD
      * I : RST Warehouse Code
     I                                        7   9 PAAJCD
      *
      * Outward parameters
     IPBRC        DS                             27
      * KEY : Order Detail              CItm/PrWhs/SSD/Itm/DD+
      * I : RST Consumed Item Code
     I                                    P   1   40PBNUDT
      * I : RST Production Warehouse
     I                                        5   7 PBF6SX
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Item Code
     I                                    P   3   60P1HGCD
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Application Code
     I                                        1   6 P2DNCD
      * N :  Enterprise Code 1
     I                                        7  10 P2DQCD
      * N :  Enterprise Code 2
     I                                       11  22 P2DRCD
      * N :  Salesperson Code
     I                                       23  25 P2BCCD
      * N :  System Date Format
     I                                       26  28 P2B8NA
      * N :  User Profile Name
     I                                       29  38 P2AJVN
      * N :  Allow Multi-Company
     I                                       39  39 P2I6ST
      * N :  Default Printer
     I                                       40  49 P2MPNA
      * N :  First Time Flag
     I                                       50  50 P2TAST
     IP3PARM      DS
      * FLD: Company Name and Address
      * I : MAP Name
     I                                        1  30 P3ADTX
     IP4PARM      DS
      * FLD: Warehouse
      * I : MAP Warehouse Code
     I                                        1   3 P4AJCD
      * I : MAP Warehouse Description
     I                                        4  33 P4F8NA
      * I : MAP Warehouse Type
     I                                       34  35 P4WPST
     IP5PARM      DS
      * I : MAP Primary/Load Sts USR
     I                                        1   1 P5W4ST
     IP6PARM      DS
      * I : MAP Load Size USR
     I                                    P   1   40P6LDSZ
     IP7PARM      DS
      * FLD: *Arrays
      * I : MAP Avail Ship Date 1 USR
     I                                    P   1   40P7H6DT
      * I : MAP Avail Ship Date 2 USR
     I                                    P   5   80P7H7DT
      * I : MAP Avail Ship Date 3 USR
     I                                    P   9  120P7H8DT
      * I : MAP Avail Ship Date 4 USR
     I                                    P  13  160P7H9DT
      * I : MAP Avail Ship Date 5 USR
     I                                    P  17  200P7IADT
      * I : MAP Avail Ship Date 6 USR
     I                                    P  21  240P7IBDT
      * I : MAP Avail Ship Date 7 USR
     I                                    P  25  280P7INDT
      * N :  USR Day 1
     I                                    P  29  320P7FFDT
      * N :  USR Day 2
     I                                    P  33  360P7E1DT
      * N :  USR Day 3
     I                                    P  37  400P7E2DT
      * N :  USR Day 4
     I                                    P  41  440P7E3DT
      * N :  USR Day 5
     I                                    P  45  480P7E4DT
      * N :  USR Day 6
     I                                    P  49  520P7E5DT
      * N :  USR Day 7
     I                                    P  53  560P7E6DT
      * N :  USR Day 8
     I                                    P  57  600P7FKDT
      * N :  USR Day 9
     I                                    P  61  640P7FLDT
      * N :  USR Day 10
     I                                    P  65  680P7FGDT
      * N :  USR Day 11
     I                                    P  69  720P7FHDT
      * N :  USR Day 12
     I                                    P  73  760P7FIDT
      * N :  USR Day 13
     I                                    P  77  800P7FJDT
      * N :  USR Day 14
     I                                    P  81  840P7HPDT
      * N :  USR Day 15
     I                                    P  85  880P7HQDT
      * N :  USR Day 16
     I                                    P  89  920P7HRDT
      * N :  USR Day 17
     I                                    P  93  960P7HSDT
      * N :  USR Day 18
     I                                    P  97 1000P7HTDT
      * N :  USR Day 19
     I                                    P 101 1040P7HUDT
      * N :  USR Day 20
     I                                    P 105 1080P7HVDT
      * N :  USR Day 21
     I                                    P 109 1120P7HWDT
      * N :  Day 1 Inventory USR
     I                                    P 113 1161P7D1IN
      * N :  Day 2 Inventory USR
     I                                    P 117 1201P7D2IN
      * N :  Day 3 Inventory USR
     I                                    P 121 1241P7D3IN
      * N :  Day 4 Inventory USR
     I                                    P 125 1281P7D4IN
      * N :  Day 5 Inventory USR
     I                                    P 129 1321P7D5IN
      * N :  Day 6 Inventory USR
     I                                    P 133 1361P7D6IN
      * N :  Day 7 Inventory USR
     I                                    P 137 1401P7D7IN
      * N :  Day 8 Inventory USR
     I                                    P 141 1441P7GCNX
      * N :  Day 9 Inventory USR
     I                                    P 145 1481P7GDNX
      * N :  Day 10 Inventory USR
     I                                    P 149 1521P7GENX
      * N :  Day 11 Inventory USR
     I                                    P 153 1561P7GFNX
      * N :  Day 12 Inventory USR
     I                                    P 157 1601P7GGNX
      * N :  Day 13 Inventory USR
     I                                    P 161 1641P7GHNX
      * N :  Day 14 Inventory USR
     I                                    P 165 1681P7GINX
      * N :  Day 1 Production USR
     I                                    P 169 1721P7D1PD
      * N :  Day 2 Production USR
     I                                    P 173 1761P7D2PD
      * N :  Day 3 Production USR
     I                                    P 177 1801P7D3PD
      * N :  Day 4 Production USR
     I                                    P 181 1841P7D4PD
      * N :  Day 5 Production USR
     I                                    P 185 1881P7D5PD
      * N :  Day 6 Production USR
     I                                    P 189 1921P7D6PD
      * N :  Day 7 Production USR
     I                                    P 193 1961P7D7PD
      * N :  Day 8 Production USR
     I                                    P 197 2001P7D8PD
      * N :  Day 9 Production USR
     I                                    P 201 2041P7D9PD
      * N :  Day 10 Production USR
     I                                    P 205 2081P7D1PR
      * N :  Day 11 Production USR
     I                                    P 209 2121P7D2PR
      * N :  Day 12 Production USR
     I                                    P 213 2161P7D3PR
      * N :  Day 13 Production USR
     I                                    P 217 2201P7D4PR
      * N :  Day 14 Production USR
     I                                    P 221 2241P7D5PR
      * N :  Day 15 Production USR
     I                                    P 225 2281P7D6PR
      * N :  Day 16 Production USR
     I                                    P 229 2321P7D7PR
      * N :  Day 17 Production USR
     I                                    P 233 2361P7D8PR
      * N :  Day 18 Production USR
     I                                    P 237 2401P7RKNB
      * N :  Day 19 Production USR
     I                                    P 241 2441P7D1PT
      * N :  Day 20 Production USR
     I                                    P 245 2481P7D2PT
      * N :  Day 21 Production USR
     I                                    P 249 2521P7D3PT
      * N :  Day 1 Sales USR
     I                                    P 253 2561P7D1SL
      * N :  Day 2 Sales USR
     I                                    P 257 2601P7D2SL
      * N :  Day 3 Sales USR
     I                                    P 261 2641P7D3SL
      * N :  Day 4 Sales USR
     I                                    P 265 2681P7D4SL
      * N :  Day 5 Sales USR
     I                                    P 269 2721P7D5SL
      * N :  Day 6 Sales USR
     I                                    P 273 2761P7D6SL
      * N :  Day 7 Sales USR
     I                                    P 277 2801P7D7SL
      * N :  Day 8 Sales USR
     I                                    P 281 2841P7Z5NB
      * N :  Day 9 Sales USR
     I                                    P 285 2881P7D9SL
      * N :  Day 10 Sales USR
     I                                    P 289 2921P7DSLS
      * N :  Day 11 Sales USR
     I                                    P 293 2961P7D11S
      * N :  Day 12 Sales USR
     I                                    P 297 3001P7D12S
      * N :  Day 13 Sales USR
     I                                    P 301 3041P7D13S
      * N :  Day 14 Sales USR
     I                                    P 305 3081P7D14S
      * N :  Day 15 Sales USR
     I                                    P 309 3121P7D15S
      * N :  Day 16 Sales USR
     I                                    P 313 3161P7D16S
      * N :  Day 17 Sales USR
     I                                    P 317 3201P7D17S
      * N :  Day 18 Sales USR
     I                                    P 321 3241P7D18S
      * N :  Day 19 Sales USR
     I                                    P 325 3281P7D19S
      * N :  Day 20 Sales USR
     I                                    P 329 3321P7D20S
      * N :  Day 21 Sales USR
     I                                    P 333 3361P7D21S
      * N :  Day 1 Availability USR
     I                                    P 337 3401P7D1AV
      * N :  Day 2 Availability USR
     I                                    P 341 3441P7D2AV
      * N :  Day 3 Availability USR
     I                                    P 345 3481P7D3AV
      * N :  Day 4 Availability USR
     I                                    P 349 3521P7D4AV
      * N :  Day 5 Availability USR
     I                                    P 353 3561P7D5AV
      * N :  Day 6 Availability USR
     I                                    P 357 3601P7D6AV
      * N :  Day 7 Availability USR
     I                                    P 361 3641P7D7AV
      * N :  Day 8 Availability USR
     I                                    P 365 3681P7D8AV
      * N :  Day 9 Availability USR
     I                                    P 369 3721P7D9AV
      * N :  Day 10 Availability USR
     I                                    P 373 3761P7D1AB
      * N :  Day 11 Availability USR
     I                                    P 377 3801P7D2AB
      * N :  Day 12 Availability USR
     I                                    P 381 3841P7D3AB
      * N :  Day 13 Availability USR
     I                                    P 385 3881P7D4AB
      * N :  Day 14 Availability USR
     I                                    P 389 3921P7D5AB
      * N :  Day 15 Availability USR
     I                                    P 393 3961P7D6AB
      * N :  Day 16 Availability USR
     I                                    P 397 4001P7D7AB
      * N :  Day 17 Availability USR
     I                                    P 401 4041P7D8AB
      * N :  Day 18 Availability USR
     I                                    P 405 4081P7D9AB
      * N :  Day 19 Availability USR
     I                                    P 409 4121P7D1AL
      * N :  Day 20 Availability USR
     I                                    P 413 4161P7D2AL
      * N :  Day 21 Availability USR
     I                                    P 417 4201P7D3AL
      * N :  Day 1 Sched Shipments USR
     I                                    P 421 4241P7D1SS
      * N :  Day 2 Sched Shipments USR
     I                                    P 425 4281P7D2SS
      * N :  Day 3 Sched Shipments USR
     I                                    P 429 4321P7D3SS
      * N :  Day 4 Sched Shipments USR
     I                                    P 433 4361P7VNNB
      * N :  Day 5 Sched Shipments USR
     I                                    P 437 4401P7D5SS
      * N :  Day 6 Sched Shipments USR
     I                                    P 441 4441P7VWNB
      * N :  Day 7 Sched Shipments USR
     I                                    P 445 4481P7D7SS
      * N :  Day 8 Sched Shipments USR
     I                                    P 449 4521P7D8SS
      * N :  Day 9 Sched Shipments USR
     I                                    P 453 4561P7D9SS
      * N :  Day 10 Sched Shipment USR
     I                                    P 457 4601P7D0SS
      * N :  Day 11 Sched Shipment USR
     I                                    P 461 4641P7D1SH
      * N :  Day 12 Sched Shipment USR
     I                                    P 465 4681P7D2SH
      * N :  Day 13 Sched Shipment USR
     I                                    P 469 4721P7D3SH
      * N :  Day 14 Sched Shipment USR
     I                                    P 473 4761P7D4SH
      * N :  Day 15 Sched Shipment USR
     I                                    P 477 4801P7D5SH
      * N :  Day 16 Sched Shipment USR
     I                                    P 481 4841P7D6SH
      * N :  Day 17 Sched Shipment USR
     I                                    P 485 4881P7D7SH
      * N :  Day 18 Sched Shipment USR
     I                                    P 489 4921P7D8SH
      * N :  Day 19 Sched Shipment USR
     I                                    P 493 4961P7D9SH
      * N :  Day 20 Sched Shipment USR
     I                                    P 497 5001P7D0SP
      * N :  Day 21 Sched Shipment USR
     I                                    P 501 5041P7D1SM
      * N :  Day 1 Rsrvd Other Whse Fl
     I                                      505 505 P7GHSX
      * N :  Day 2 Rsrvd Other Whse Fl
     I                                      506 506 P7GISX
      * N :  Day 3 Rsrvd Other Whse Fl
     I                                      507 507 P7GJSX
      * N :  Day 4 Rsrvd Other Whse Fl
     I                                      508 508 P7GKSX
      * N :  Day 5 Rsrvd Other Whse Fl
     I                                      509 509 P7GLSX
      * N :  Day 6 Rsrvd Other Whse Fl
     I                                      510 510 P7GMSX
      * N :  Day 7 Rsrvd Other Whse Fl
     I                                      511 511 P7GNSX
      * N :  Day 8 Rsrvd Other Whse Fl
     I                                      512 512 P7GOSX
      * N :  Day 9 Rsrvd Other Whse Fl
     I                                      513 513 P7GPSX
      * N :  Day 10 Rsrv Other Whse Fl
     I                                      514 514 P7GQSX
      * N :  Day 11 Rsrv Other Whse Fl
     I                                      515 515 P7GRSX
      * N :  Day 12 Rsrv Other Whse Fl
     I                                      516 516 P7GSSX
      * N :  Day 13 Rsrv Other Whse Fl
     I                                      517 517 P7GTSX
      * N :  Day 14 Rsrv Other Whse Fl
     I                                      518 518 P7GUSX
      * N :  Day 15 Rsrv Other Whse Fl
     I                                      519 519 P7GVSX
      * N :  Day 16 Rsrv Other Whse Fl
     I                                      520 520 P7GWSX
      * N :  Day 17 Rsrv Other Whse Fl
     I                                      521 521 P7GXSX
      * N :  Day 18 Rsrv Other Whse Fl
     I                                      522 522 P7GYSX
      * N :  Day 19 Rsrv Other Whse Fl
     I                                      523 523 P7GZSX
      * N :  Day 20 Rsrv Other Whse Fl
     I                                      524 524 P7G0SX
      * N :  Day 21 Rsrv Other Whse Fl
     I                                      525 525 P7G1SX
      * N :  Order Hold Over  USR
     I                                    P 526 5280P7OHLO
      * N :  Order Hold Over Alloc USR
     I                                    P 529 5310P7C8NX
     IP8PARM      DS
      * B :  Week Number
     I                                    P   1   20P8EINB
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Warehouse not found f/typ'
      * Warehouse Code
     I                                        1   3 ZA0001
      * Warehouse Type
     I                                        4   5 ZA0002
      * Message data for 'Warehouse Code Required'
      * Warehouse Code
     I                                        1   3 ZA0003
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0004
      * Application Code
     I                                       11  16 ZA0005
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0006
      * Application Code
     I                                       11  16 ZA0007
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P3ADTX    PARM           WP0003 30        Name
     C           P4AJCD    PARM           WP0004  3        Warehouse Code
     C           P4F8NA    PARM           WP0005 30        Warehouse Descr
     C           P4WPST    PARM           WP0006  2        Warehouse Type
     C           P5W4ST    PARM           WP0007  1        Primary/Load St
     C           P6LDSZ    PARM           WP0008  70       Load Size USR
     C           P7H6DT    PARM           WP0009  70       Avail Ship Date
     C           P7H7DT    PARM           WP0010  70       Avail Ship Date
     C           P7H8DT    PARM           WP0011  70       Avail Ship Date
     C           P7H9DT    PARM           WP0012  70       Avail Ship Date
     C           P7IADT    PARM           WP0013  70       Avail Ship Date
     C           P7IBDT    PARM           WP0014  70       Avail Ship Date
     C           P7INDT    PARM           WP0015  70       Avail Ship Date
     C           P8EINB    PARM P8EINB    WP0016  20       Week Number
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
      *
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Convert internal to external form
     C                     EXSR MNCV#K
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1AIC3    IFEQ *ZERO                      Company Number
     C           #1HGCD    OREQ *ZERO                      Item Code
      * One or more key fields is blank
     C           *IN30     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFNE 'Y'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
     C           YPMTFD    CABNE*BLANKS   BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3
     C                     Z-ADD#1HGCD    BZHGCD
     C           KRTV      CHAIN@BZREJU              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     993132*
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, then signal error
     C           *IN90     IFEQ '1'
     C                     SETON                     993132*
      * Send message 'Company Item           NF'
     C                     MOVEL'USR0326' ZAMSID
     C                     EXSR ZASNMS
     C                     ELSE
     C                     EXSR MBFL#1
      * USER: Load detail screen from DBF record
      * Setup first time processing
      * CASE: WRK.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     MOVELP4WPST    #DR6ST           Warehouse Type
     C                     MOVELP4AJCD    #DT3CD           Warehouse Code
      * CASE: DTL.Base/Conv/Loss Item is Base
     C           #1QZCD    IFEQ 'B'                        *IF
     C                     MOVEL'**'      #DMVTX           USR Base flag
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PAJCD    WL0001    P      Warehouse Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDBZAIC3    WL0003           Company Number
     C                     MOVEL@CN,001   WL0004    P      Company Value C
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    WN0001           System Value Nu
     C                     Z-ADDWN0001    #1CHTM           Fresh Chilling
     C                     END                             *FI
      * Rtv PA Dtl SD-6 - ALL RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PWPST    WL0006    P      Warehouse Type
     C                     MOVEL#PAJCD    WL0007    P      Warehouse Code
     C                     Z-ADDBZAIC3    WL0008           Company Number
     C                     Z-ADDBZHGCD    WL0009           Item Code
     C                     Z-ADD#PH6DT    WL0010           PS Available Sh
     C                     Z-ADD#PH6DT    WL0011           Avail Ship Date
     C                     Z-ADD#PH7DT    WL0012           Avail Ship Date
     C                     Z-ADD#PH8DT    WL0013           Avail Ship Date
     C                     Z-ADD#PH9DT    WL0014           Avail Ship Date
     C                     Z-ADD#PIADT    WL0015           Avail Ship Date
     C                     Z-ADD#PIBDT    WL0016           Avail Ship Date
     C                     Z-ADD#PINDT    WL0017           Avail Ship Date
     C                     MOVEL#PW4ST    WL0025    P      Primary/Load St
     C                     Z-ADD#PLDSZ    WL0026           Load Size USR
     C                     MOVEL'D'       WL0027    P      Avail Dsp/Prt T
     C                     Z-ADD#DD1IN    WL0028           Day 1 Inventory
     C                     Z-ADD#DD2IN    WL0029           Day 2 Inventory
     C                     Z-ADD#DD3IN    WL0030           Day 3 Inventory
     C                     Z-ADD#DD4IN    WL0031           Day 4 Inventory
     C                     Z-ADD#DD5IN    WL0032           Day 5 Inventory
     C                     Z-ADD#DD6IN    WL0033           Day 6 Inventory
     C                     Z-ADD#DD7IN    WL0034           Day 7 Inventory
     C                     Z-ADD#DGCNX    WL0035           Day 8 Inventory
     C                     Z-ADD#DD1PD    WL0036           Day 1 Productio
     C                     Z-ADD#DD2PD    WL0037           Day 2 Productio
     C                     Z-ADD#DD3PD    WL0038           Day 3 Productio
     C                     Z-ADD#DD4PD    WL0039           Day 4 Productio
     C                     Z-ADD#DD5PD    WL0040           Day 5 Productio
     C                     Z-ADD#DD6PD    WL0041           Day 6 Productio
     C                     Z-ADD#DD7PD    WL0042           Day 7 Productio
     C                     Z-ADD#DD8PD    WL0043           Day 8 Productio
     C                     Z-ADD#DD1SS    WL0044           Day 1 Schd Ship
     C                     Z-ADD#DD2SS    WL0045           Day 2 Schd Ship
     C                     Z-ADD#DD3SS    WL0046           Day 3 Schd Ship
     C                     Z-ADD#DVNNB    WL0047           Day 4 Schd Ship
     C                     Z-ADD#DD5SS    WL0048           Day 5 Schd Ship
     C                     Z-ADD#DVWNB    WL0049           Day 6 Schd Ship
     C                     Z-ADD#DD7SS    WL0050           Day 7 Schd Ship
     C                     Z-ADD#DD8SS    WL0051           Day 8 Schd Ship
     C                     Z-ADD#DD1SL    WL0052           Day 1 Sales Tot
     C                     Z-ADD#DD2SL    WL0053           Day 2 Sales Tot
     C                     Z-ADD#DD3SL    WL0054           Day 3 Sales Tot
     C                     Z-ADD#DD4SL    WL0055           Day 4 Sales Tot
     C                     Z-ADD#DD5SL    WL0056           Day 5 Sales Tot
     C                     Z-ADD#DD6SL    WL0057           Day 6 Sales Tot
     C                     Z-ADD#DD7SL    WL0058           Day 7 Sales Tot
     C                     Z-ADD#DZ5NB    WL0059           Day 8 Sales Tot
     C                     Z-ADD#DD1AJ    WL0060           Day 1 Adj Total
     C                     Z-ADD#DD2AJ    WL0061           Day 2 Adj Total
     C                     Z-ADD#DD3AJ    WL0062           Day 3 Adj Total
     C                     Z-ADD#DD4AJ    WL0063           Day 4 Adj Total
     C                     Z-ADD#DD5AJ    WL0064           Day 5 Adj Total
     C                     Z-ADD#DD6AJ    WL0065           Day 6 Adj Total
     C                     Z-ADD#DD7AJ    WL0066           Day 7 Adj Total
     C                     Z-ADD#DD8AJ    WL0067           Day 8 Adj Total
     C                     Z-ADD#DD1AV    WL0068           Day 1 Avail Tot
     C                     Z-ADD#DD2AV    WL0069           Day 2 Avail Tot
     C                     Z-ADD#DD3AV    WL0070           Day 3 Avail Tot
     C                     Z-ADD#DD4AV    WL0071           Day 4 Avail Tot
     C                     Z-ADD#DD5AV    WL0072           Day 5 Avail Tot
     C                     Z-ADD#DD6AV    WL0073           Day 6 Avail Tot
     C                     Z-ADD#DD7AV    WL0074           Day 7 Avail Tot
     C                     Z-ADD#DD8AV    WL0075           Day 8 Avail Tot
     C                     MOVELBZADCD    WL0076    P      U/M - Primary
     C                     Z-ADDBZAIWG    WL0077           Unit Weight
     C                     Z-ADDBZCHTM    WL0078           Fresh Chilling
     C                     MOVELBZPCCT    WL0079    P      Piece Count Ite
     C                     Z-ADDBZBDNB    WL0080           Pieces Per Bag
     C                     Z-ADDBZBJNB    WL0081           Bags Per Unit
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0018    #DFFDT           USR Day 1
     C                     Z-ADDWL0019    #DE1DT           USR Day 2
     C                     Z-ADDWL0020    #DE2DT           USR Day 3
     C                     Z-ADDWL0021    #DE3DT           USR Day 4
     C                     Z-ADDWL0022    #DE4DT           USR Day 5
     C                     Z-ADDWL0023    #DE5DT           USR Day 6
     C                     Z-ADDWL0024    #DE6DT           USR Day 7
     C                     Z-ADDWL0028    #DD1IN           Day 1 Inventory
     C                     Z-ADDWL0029    #DD2IN           Day 2 Inventory
     C                     Z-ADDWL0030    #DD3IN           Day 3 Inventory
     C                     Z-ADDWL0031    #DD4IN           Day 4 Inventory
     C                     Z-ADDWL0032    #DD5IN           Day 5 Inventory
     C                     Z-ADDWL0033    #DD6IN           Day 6 Inventory
     C                     Z-ADDWL0034    #DD7IN           Day 7 Inventory
     C                     Z-ADDWL0035    #DGCNX           Day 8 Inventory
     C                     Z-ADDWL0036    #DD1PD           Day 1 Productio
     C                     Z-ADDWL0037    #DD2PD           Day 2 Productio
     C                     Z-ADDWL0038    #DD3PD           Day 3 Productio
     C                     Z-ADDWL0039    #DD4PD           Day 4 Productio
     C                     Z-ADDWL0040    #DD5PD           Day 5 Productio
     C                     Z-ADDWL0041    #DD6PD           Day 6 Productio
     C                     Z-ADDWL0042    #DD7PD           Day 7 Productio
     C                     Z-ADDWL0043    #DD8PD           Day 8 Productio
     C                     Z-ADDWL0044    #DD1SS           Day 1 Schd Ship
     C                     Z-ADDWL0045    #DD2SS           Day 2 Schd Ship
     C                     Z-ADDWL0046    #DD3SS           Day 3 Schd Ship
     C                     Z-ADDWL0047    #DVNNB           Day 4 Schd Ship
     C                     Z-ADDWL0048    #DD5SS           Day 5 Schd Ship
     C                     Z-ADDWL0049    #DVWNB           Day 6 Schd Ship
     C                     Z-ADDWL0050    #DD7SS           Day 7 Schd Ship
     C                     Z-ADDWL0051    #DD8SS           Day 8 Schd Ship
     C                     Z-ADDWL0052    #DD1SL           Day 1 Sales Tot
     C                     Z-ADDWL0053    #DD2SL           Day 2 Sales Tot
     C                     Z-ADDWL0054    #DD3SL           Day 3 Sales Tot
     C                     Z-ADDWL0055    #DD4SL           Day 4 Sales Tot
     C                     Z-ADDWL0056    #DD5SL           Day 5 Sales Tot
     C                     Z-ADDWL0057    #DD6SL           Day 6 Sales Tot
     C                     Z-ADDWL0058    #DD7SL           Day 7 Sales Tot
     C                     Z-ADDWL0059    #DZ5NB           Day 8 Sales Tot
     C                     Z-ADDWL0060    #DD1AJ           Day 1 Adj Total
     C                     Z-ADDWL0061    #DD2AJ           Day 2 Adj Total
     C                     Z-ADDWL0062    #DD3AJ           Day 3 Adj Total
     C                     Z-ADDWL0063    #DD4AJ           Day 4 Adj Total
     C                     Z-ADDWL0064    #DD5AJ           Day 5 Adj Total
     C                     Z-ADDWL0065    #DD6AJ           Day 6 Adj Total
     C                     Z-ADDWL0066    #DD7AJ           Day 7 Adj Total
     C                     Z-ADDWL0067    #DD8AJ           Day 8 Adj Total
     C                     Z-ADDWL0068    #DD1AV           Day 1 Avail Tot
     C                     Z-ADDWL0069    #DD2AV           Day 2 Avail Tot
     C                     Z-ADDWL0070    #DD3AV           Day 3 Avail Tot
     C                     Z-ADDWL0071    #DD4AV           Day 4 Avail Tot
     C                     Z-ADDWL0072    #DD5AV           Day 5 Avail Tot
     C                     Z-ADDWL0073    #DD6AV           Day 6 Avail Tot
     C                     Z-ADDWL0074    #DD7AV           Day 7 Avail Tot
     C                     Z-ADDWL0075    #DD8AV           Day 8 Avail Tot
      * Move to Zero Decimal fields
     C                     EXSR UASUBR                     Move to Zero De
      * Calculate the Available Loads from the Available qty and unit wei
      * day 1
      * DTL.Day 1 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 1 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ2NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DJ9NB           Day 1 Available
      * Day 2
      * DTL.Day 2 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 2 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ3NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKANB           Day 2 Available
      * Day 3
      * DTL.Day 3 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 3 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ4NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKBNB           Day 3 Available
      * Day 4
      * DTL.Day 4 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 4 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ5NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKDNB           Day 4 Available
      * Day 5
      * DTL.Day 5 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 5 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ6NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKENB           Day 5 Available
      * Day 6
      * DTL.Day 6 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 6 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ7NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKFNB           Day 6 Available
      * Day 7
      * DTL.Day 7 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 7 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ8NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKGNB           Day 7 Available
      * Day 8 - TOTAL
      * DTL.Day 8 Available Loads =
      *    *COMPUTE ( x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : DTL.Day 1 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x2    : DTL.Day 2 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x3    : DTL.Day 3 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x4    : DTL.Day 4 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x5    : DTL.Day 5 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x6    : DTL.Day 6 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x7    : DTL.Day 7 Available Loads
     C           #DJ9NB    ADD  #DKANB    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  #DKBNB    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  #DKDNB    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  #DKENB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  #DKFNB    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  #DKGNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DL2NX           Day 8 Available
     C                     END
      *
     C   99                GOTO BEEXIT
      * No error: Display and process details
     C                     EXSR CADSDA
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV1AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV1AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #1AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #1AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     SETON                     9931  *
     C                     END
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV1HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #1HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #1HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     MOVEL*BLANK    W0RTN
     C                     SETON                     9932  *
     C                     END
      * Select existing record
     C                     EXSR VACKRL
      * Company Number required
     C           #1AIC3    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Item Code required
     C           #1HGCD    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Convert internal to external form
     C                     EXSR MOCV#D
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
      * Process detail screen input
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   30                CAS            CCDSPV
      * Process key screen input
     C                     CAS            CFPRSC
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30                MOVEL'Y'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C                     MOVEL'Y'       W0TRN
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * Process record:
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate detail screen
      * F4=PROMPT
      * CASE: DTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse Type USR
     C           W0CFL     IFEQ '#DR6ST'                   *IF
      * SEL Warehouse Type-Int SR - Warehouse Type-Internal  * 
     C                     CALL 'PDSNSRR'              90  SEL Warehouse T
     C                     PARM *BLANK    W0RTN   7
     C           #DR6ST    PARM #DR6ST    WQ0493  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDSNSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     MOVEL#DR6ST    #PWPST           Warehouse Type
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse Code PASS   USR
     C           W0CFL     IFEQ '#DT3CD'                   *IF
      * SEL Warehouse by Type  SR - Warehouse  * 
     C                     CALL 'PDZNSRR'              90  SEL Warehouse b
     C                     PARM *BLANK    W0RTN   7
     C           #DT3CD    PARM *BLANK    WQ0494  3        Warehouse Code
     C                     PARM #DR6ST    WQ0495  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDZNSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     END
     C                     MOVEL#DT3CD    #PAJCD           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * validate warehouse code if entered
      * CASE: DTL.Warehouse Code PASS   USR is Warehouse Code not Blank
     C           #DT3CD    IFNE *BLANK                     *IF
      * Rtv Warehouse/type Val RT - Warehouse  * 
     C                     EXSR SIRVGN
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     MOVEL#DT3CD    ZA0001           Warehouse Code
     C                     MOVEL#DR6ST    ZA0002           Warehouse Type
      * Send message 'Warehouse not found f/typ'
     C                     MOVEL'USR2494' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993132*
      *
     C                     END                             *FI
     C                     END                             *FI
      * Reload subfile if warehouse or whse type change
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Warehouse Type USR NE DTL.Warehouse Type
      *   |- c2    : DTL.Warehouse Code PASS   USR NE DTL.Warehouse Code
      *   '-
     C           #DR6ST    IFNE #PWPST                     *IF
     C           #DT3CD    ORNE #PAJCD                     *OR
     C                     MOVEL#DR6ST    #PWPST           Warehouse Type
     C                     MOVEL#DT3CD    #PAJCD           Warehouse Code
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * USER: Process command keys
      * Refresh
      * CASE: DTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Display Item Orders
      * CASE: DTL.*CMD key is CF15
     C           *IN15     IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0010           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0496  30       Company Number
     C                     PARM #1HGCD    WQ0497  70       Item Code
     C                     PARM #PH6DT    WQ0498  70       Scheduled Ship
     C                     PARM #PADTX    WQ0499 30        Name
     C                     PARM #PAJCD    WQ0500  3        Warehouse Code
     C           YL0010    PARM YL0010    WQ0501  1        *Initial call
     C                     PARM #PWPST    WQ0502  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * F13=Toggle Unit Weight (Internal purpose only)
      * CASE: DTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * CASE: WRK.Display Flag is No
     C           WUQKST    IFEQ 'N'                        *IF
     C                     MOVEL'Y'       WUQKST           Display Flag
     C                     ELSE
      * CASE: WRK.Display Flag is Yes
     C           WUQKST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       WUQKST           Display Flag
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * F07=Previous Week
      * CASE: DTL.*CMD key is CF07
     C           *IN07     IFEQ '1'                        *IF
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -7        IFLT *ZERO                      *IF
     C           -7        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0185           Company Number
     C                     Z-ADD#PH6DT    WL0186           Post to G/L Dat
     C                     Z-ADD#PH6DT    WL0188           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0189           *Duration (fact
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0187    #PH6DT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -7        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0190           Company Number
     C                     Z-ADD#PH6DT    WL0191           Post to G/L Dat
     C                     Z-ADD#PH6DT    WL0193           *Date2 (beginni
     C                     Z-ADD-7        WL0194           *Duration (fact
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0192    #PH6DT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -7        IFEQ *ZERO                      *IF
     C                     Z-ADD#PH6DT    #PH6DT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * F08=Next Week
      * CASE: DTL.*CMD key is CF08
     C           *IN08     IFEQ '1'                        *IF
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           7         IFLT *ZERO                      *IF
     C           7         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0185           Company Number
     C                     Z-ADD#PH6DT    WL0186           Post to G/L Dat
     C                     Z-ADD#PH6DT    WL0188           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0189           *Duration (fact
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0187    #PH6DT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           7         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0190           Company Number
     C                     Z-ADD#PH6DT    WL0191           Post to G/L Dat
     C                     Z-ADD#PH6DT    WL0193           *Date2 (beginni
     C                     Z-ADD7         WL0194           *Duration (fact
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0192    #PH6DT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           7         IFEQ *ZERO                      *IF
     C                     Z-ADD#PH6DT    #PH6DT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * F09=Dsp Item/Whs Inq
      * CASE: DTL.*CMD key is CF09
     C           *IN09     IFEQ '1'                        *IF
      * CASE: DTL.Warehouse Code PASS   USR is Warehouse Code Blank
     C           #DT3CD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#DT3CD    ZA0003           Warehouse Code
      * Send message 'Warehouse Code Required'
     C                     MOVEL'USR2015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Lot Tracking Flag RT - Warehouse  * 
     C                     EXSR SLRVGN
     C                     MOVEL'Y'       YL0010           *Initial call
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0011    IFEQ 'Y'                        *IF
      * Dsp Item Lot Locs     DF - Item Lot Location  * 
     C                     CALL 'PDH2DFR'              90  Dsp Item Lot Lo
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0503  30       Company Number
     C                     PARM #1HGCD    WQ0504  70       Item Code
     C                     PARM #PAJCD    WQ0505  3        Warehouse Code
     C                     PARM *ZERO     WQ0506  70       Production Date
     C           YL0010    PARM YL0010    WQ0507  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDH2DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0508  30       Company Number
     C                     PARM #1HGCD    WQ0509  70       Item Code
     C                     PARM WUGENA    WQ0510 30        Description Lin
     C                     PARM #1ADCD    WQ0511  2        U/M - Primary
     C                     PARM #1AWPC    WQ0512  94       Conversion Fact
     C                     PARM #1LXST    WQ0513  1        Operation Facto
     C                     PARM #1AECD    WQ0514  2        U/M - Second
     C                     PARM #1AXPC    WQ0515  94       Conversion Fact
     C                     PARM #1LYST    WQ0516  1        Operation Facto
     C                     PARM #1AFCD    WQ0517  2        U/M - Third
     C                     PARM #1AIWG    WQ0518 112       Unit Weight
     C                     PARM #1FZST    WQ0519  1        Production Date
     C                     PARM #1AVST    WQ0520  1        Catch Weight St
     C                     PARM #DT3CD    WQ0521  3        Warehouse Code
     C                     PARM #PF8NA    WQ0522 30        Warehouse Descr
     C                     PARM #PADTX    WQ0523 30        Name
     C           YL0010    PARM YL0010    WQ0524  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * F10=Work With Inventory Allocation
      * CASE: DTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * WW Inv Allocation     DF - Order Detail Schedule  * 
     C                     CLEARPARC
     C                     Z-ADD#1AIC3    PAAIC3           Company Number
     C                     Z-ADD#1HGCD    PAHGCD           Item Code
     C                     MOVEL#PAJCD    PAAJCD    P      Warehouse Code
      *
     C                     CALL 'POP5DFR'              90  WW Inv Allocati
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Order Deta
     C                     PARM *ZERO     WQ0525  70       Order Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP5DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * F11=Work With Order Production Schedule
      * CASE: DTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * CASE: DTL.Base/Conv/Loss Item is Base
     C           #1QZCD    IFEQ 'B'                        *IF
     C                     Z-ADD#1HGCD    YL0012           Component Item
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0526  30       Company Number
     C                     PARM #1HGCD    WQ0527  70       Item Code
     C           YL0012    PARM *ZERO     WQ0528  70       Component Item
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * WW OrdPrdSch Edit     DF - Order Detail  * 
     C                     CLEARPBRC
     C                     Z-ADDYL0012    PBNUDT           Consumed Item C
     C                     MOVEL#PAJCD    PBF6SX    P      Production Ware
      *
     C                     CALL 'POQJDFR'              90  WW OrdPrdSch Ed
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Order Deta
     C                     PARM #1HGCD    WQ0529  70       Item Code
     C                     PARM *BLANK    WQ0530132        Message USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Rtv Ats ShpDte-21     RT - Calendar  * 
     C                     EXSR SMRVGN
      *
     C                     Z-ADD*ZERO     WN0140 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PAJCD    WL0001    P      Warehouse Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0003           Company Number
     C                     MOVEL@CN,001   WL0004    P      Company Value C
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    WN0140           System Value Nu
     C                     Z-ADDWN0140    #1CHTM           Fresh Chilling
     C                     END                             *FI
      * Rtv PA Dtl SD-6 - ALL RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DR6ST    WL0006    P      Warehouse Type
     C                     MOVEL#DT3CD    WL0007    P      Warehouse Code
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     Z-ADD#1HGCD    WL0009           Item Code
     C                     Z-ADD#PH6DT    WL0010           PS Available Sh
     C                     Z-ADD#PH6DT    WL0011           Avail Ship Date
     C                     Z-ADD#PH7DT    WL0012           Avail Ship Date
     C                     Z-ADD#PH8DT    WL0013           Avail Ship Date
     C                     Z-ADD#PH9DT    WL0014           Avail Ship Date
     C                     Z-ADD#PIADT    WL0015           Avail Ship Date
     C                     Z-ADD#PIBDT    WL0016           Avail Ship Date
     C                     Z-ADD#PINDT    WL0017           Avail Ship Date
     C                     MOVEL#PW4ST    WL0025    P      Primary/Load St
     C                     Z-ADD#PLDSZ    WL0026           Load Size USR
     C                     MOVEL'D'       WL0027    P      Avail Dsp/Prt T
     C                     Z-ADD#DD1IN    WL0028           Day 1 Inventory
     C                     Z-ADD#DD2IN    WL0029           Day 2 Inventory
     C                     Z-ADD#DD3IN    WL0030           Day 3 Inventory
     C                     Z-ADD#DD4IN    WL0031           Day 4 Inventory
     C                     Z-ADD#DD5IN    WL0032           Day 5 Inventory
     C                     Z-ADD#DD6IN    WL0033           Day 6 Inventory
     C                     Z-ADD#DD7IN    WL0034           Day 7 Inventory
     C                     Z-ADD#DGCNX    WL0035           Day 8 Inventory
     C                     Z-ADD#DD1PD    WL0036           Day 1 Productio
     C                     Z-ADD#DD2PD    WL0037           Day 2 Productio
     C                     Z-ADD#DD3PD    WL0038           Day 3 Productio
     C                     Z-ADD#DD4PD    WL0039           Day 4 Productio
     C                     Z-ADD#DD5PD    WL0040           Day 5 Productio
     C                     Z-ADD#DD6PD    WL0041           Day 6 Productio
     C                     Z-ADD#DD7PD    WL0042           Day 7 Productio
     C                     Z-ADD#DD8PD    WL0043           Day 8 Productio
     C                     Z-ADD#DD1SS    WL0044           Day 1 Schd Ship
     C                     Z-ADD#DD2SS    WL0045           Day 2 Schd Ship
     C                     Z-ADD#DD3SS    WL0046           Day 3 Schd Ship
     C                     Z-ADD#DVNNB    WL0047           Day 4 Schd Ship
     C                     Z-ADD#DD5SS    WL0048           Day 5 Schd Ship
     C                     Z-ADD#DVWNB    WL0049           Day 6 Schd Ship
     C                     Z-ADD#DD7SS    WL0050           Day 7 Schd Ship
     C                     Z-ADD#DD8SS    WL0051           Day 8 Schd Ship
     C                     Z-ADD#DD1SL    WL0052           Day 1 Sales Tot
     C                     Z-ADD#DD2SL    WL0053           Day 2 Sales Tot
     C                     Z-ADD#DD3SL    WL0054           Day 3 Sales Tot
     C                     Z-ADD#DD4SL    WL0055           Day 4 Sales Tot
     C                     Z-ADD#DD5SL    WL0056           Day 5 Sales Tot
     C                     Z-ADD#DD6SL    WL0057           Day 6 Sales Tot
     C                     Z-ADD#DD7SL    WL0058           Day 7 Sales Tot
     C                     Z-ADD#DZ5NB    WL0059           Day 8 Sales Tot
     C                     Z-ADD#DD1AJ    WL0060           Day 1 Adj Total
     C                     Z-ADD#DD2AJ    WL0061           Day 2 Adj Total
     C                     Z-ADD#DD3AJ    WL0062           Day 3 Adj Total
     C                     Z-ADD#DD4AJ    WL0063           Day 4 Adj Total
     C                     Z-ADD#DD5AJ    WL0064           Day 5 Adj Total
     C                     Z-ADD#DD6AJ    WL0065           Day 6 Adj Total
     C                     Z-ADD#DD7AJ    WL0066           Day 7 Adj Total
     C                     Z-ADD#DD8AJ    WL0067           Day 8 Adj Total
     C                     Z-ADD#DD1AV    WL0068           Day 1 Avail Tot
     C                     Z-ADD#DD2AV    WL0069           Day 2 Avail Tot
     C                     Z-ADD#DD3AV    WL0070           Day 3 Avail Tot
     C                     Z-ADD#DD4AV    WL0071           Day 4 Avail Tot
     C                     Z-ADD#DD5AV    WL0072           Day 5 Avail Tot
     C                     Z-ADD#DD6AV    WL0073           Day 6 Avail Tot
     C                     Z-ADD#DD7AV    WL0074           Day 7 Avail Tot
     C                     Z-ADD#DD8AV    WL0075           Day 8 Avail Tot
     C                     MOVEL#1ADCD    WL0076    P      U/M - Primary
     C                     Z-ADD#1AIWG    WL0077           Unit Weight
     C                     Z-ADD#1CHTM    WL0078           Fresh Chilling
     C                     MOVEL#1PCCT    WL0079    P      Piece Count Ite
     C                     Z-ADD#1BDNB    WL0080           Pieces Per Bag
     C                     Z-ADD#1BJNB    WL0081           Bags Per Unit
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0018    #DFFDT           USR Day 1
     C                     Z-ADDWL0019    #DE1DT           USR Day 2
     C                     Z-ADDWL0020    #DE2DT           USR Day 3
     C                     Z-ADDWL0021    #DE3DT           USR Day 4
     C                     Z-ADDWL0022    #DE4DT           USR Day 5
     C                     Z-ADDWL0023    #DE5DT           USR Day 6
     C                     Z-ADDWL0024    #DE6DT           USR Day 7
     C                     Z-ADDWL0028    #DD1IN           Day 1 Inventory
     C                     Z-ADDWL0029    #DD2IN           Day 2 Inventory
     C                     Z-ADDWL0030    #DD3IN           Day 3 Inventory
     C                     Z-ADDWL0031    #DD4IN           Day 4 Inventory
     C                     Z-ADDWL0032    #DD5IN           Day 5 Inventory
     C                     Z-ADDWL0033    #DD6IN           Day 6 Inventory
     C                     Z-ADDWL0034    #DD7IN           Day 7 Inventory
     C                     Z-ADDWL0035    #DGCNX           Day 8 Inventory
     C                     Z-ADDWL0036    #DD1PD           Day 1 Productio
     C                     Z-ADDWL0037    #DD2PD           Day 2 Productio
     C                     Z-ADDWL0038    #DD3PD           Day 3 Productio
     C                     Z-ADDWL0039    #DD4PD           Day 4 Productio
     C                     Z-ADDWL0040    #DD5PD           Day 5 Productio
     C                     Z-ADDWL0041    #DD6PD           Day 6 Productio
     C                     Z-ADDWL0042    #DD7PD           Day 7 Productio
     C                     Z-ADDWL0043    #DD8PD           Day 8 Productio
     C                     Z-ADDWL0044    #DD1SS           Day 1 Schd Ship
     C                     Z-ADDWL0045    #DD2SS           Day 2 Schd Ship
     C                     Z-ADDWL0046    #DD3SS           Day 3 Schd Ship
     C                     Z-ADDWL0047    #DVNNB           Day 4 Schd Ship
     C                     Z-ADDWL0048    #DD5SS           Day 5 Schd Ship
     C                     Z-ADDWL0049    #DVWNB           Day 6 Schd Ship
     C                     Z-ADDWL0050    #DD7SS           Day 7 Schd Ship
     C                     Z-ADDWL0051    #DD8SS           Day 8 Schd Ship
     C                     Z-ADDWL0052    #DD1SL           Day 1 Sales Tot
     C                     Z-ADDWL0053    #DD2SL           Day 2 Sales Tot
     C                     Z-ADDWL0054    #DD3SL           Day 3 Sales Tot
     C                     Z-ADDWL0055    #DD4SL           Day 4 Sales Tot
     C                     Z-ADDWL0056    #DD5SL           Day 5 Sales Tot
     C                     Z-ADDWL0057    #DD6SL           Day 6 Sales Tot
     C                     Z-ADDWL0058    #DD7SL           Day 7 Sales Tot
     C                     Z-ADDWL0059    #DZ5NB           Day 8 Sales Tot
     C                     Z-ADDWL0060    #DD1AJ           Day 1 Adj Total
     C                     Z-ADDWL0061    #DD2AJ           Day 2 Adj Total
     C                     Z-ADDWL0062    #DD3AJ           Day 3 Adj Total
     C                     Z-ADDWL0063    #DD4AJ           Day 4 Adj Total
     C                     Z-ADDWL0064    #DD5AJ           Day 5 Adj Total
     C                     Z-ADDWL0065    #DD6AJ           Day 6 Adj Total
     C                     Z-ADDWL0066    #DD7AJ           Day 7 Adj Total
     C                     Z-ADDWL0067    #DD8AJ           Day 8 Adj Total
     C                     Z-ADDWL0068    #DD1AV           Day 1 Avail Tot
     C                     Z-ADDWL0069    #DD2AV           Day 2 Avail Tot
     C                     Z-ADDWL0070    #DD3AV           Day 3 Avail Tot
     C                     Z-ADDWL0071    #DD4AV           Day 4 Avail Tot
     C                     Z-ADDWL0072    #DD5AV           Day 5 Avail Tot
     C                     Z-ADDWL0073    #DD6AV           Day 6 Avail Tot
     C                     Z-ADDWL0074    #DD7AV           Day 7 Avail Tot
     C                     Z-ADDWL0075    #DD8AV           Day 8 Avail Tot
      * Move to Zero Decimal fields
     C                     EXSR UCSUBR                     Move to Zero De
      * Calculate the Available Loads from the Available qty and unit wei
      * Day 1
      * DTL.Day 1 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 1 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ2NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DJ9NB           Day 1 Available
      * Day 2
      * DTL.Day 2 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 2 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ3NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKANB           Day 2 Available
      * Day 3
      * DTL.Day 3 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 3 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ4NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKBNB           Day 3 Available
      * Day 4
      * DTL.Day 4 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 4 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ5NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKDNB           Day 4 Available
      * Day 5
      * DTL.Day 5 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 5 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ6NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKENB           Day 5 Available
      * Day 6
      * DTL.Day 6 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 6 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ7NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKFNB           Day 6 Available
      * Day 7
      * DTL.Day 7 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : DTL.Day 7 Available Qty   USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DTL.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : DTL.Load Size USR
     C           #DJ8NB    MULT #1AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  #PLDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DKGNB           Day 7 Available
      * Day 8 - Total
      * DTL.Day 8 Available Loads =
      *    *COMPUTE ( x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : DTL.Day 1 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x2    : DTL.Day 2 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x3    : DTL.Day 3 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x4    : DTL.Day 4 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x5    : DTL.Day 5 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x6    : DTL.Day 6 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x7    : DTL.Day 7 Available Loads
     C           #DJ9NB    ADD  #DKANB    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  #DKBNB    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  #DKDNB    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  #DKENB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  #DKFNB    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  #DKGNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #DL2NX           Day 8 Available
      * *****************************************************************
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO EBEXIT                     *QUIT
      * Quit if error signalled
     C   99                GOTO EBEXIT
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1AIC3    IFEQ *ZERO                      Company Number
     C           P1HGCD    OREQ *ZERO                      Item Code
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUQKST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           #DGHSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           #DGISX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           #DGJSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           #DGKSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           #DGLSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
     C                     MOVEL'0'       *IN73
     C           #DGMSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
     C                     MOVEL'0'       *IN72
     C           #DJ2NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN72
     C                     END                             *FI
     C                     MOVEL'0'       *IN71
     C           #DJ3NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN71
     C                     END                             *FI
     C                     MOVEL'0'       *IN70
     C           #DJ4NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN70
     C                     END                             *FI
     C                     MOVEL'0'       *IN69
     C           #DJ5NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN69
     C                     END                             *FI
     C                     MOVEL'0'       *IN68
     C           #DJ6NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN68
     C                     END                             *FI
     C                     MOVEL'0'       *IN67
     C           #DJ7NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN67
     C                     END                             *FI
     C                     MOVEL'0'       *IN66
     C           #DJ9NB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN66
     C                     END                             *FI
     C                     MOVEL'0'       *IN65
     C           #DKANB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN65
     C                     END                             *FI
     C                     MOVEL'0'       *IN64
     C           #DKBNB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN64
     C                     END                             *FI
     C                     MOVEL'0'       *IN63
     C           #DKDNB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN63
     C                     END                             *FI
     C                     MOVEL'0'       *IN62
     C           #DKENB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN62
     C                     END                             *FI
     C                     MOVEL'0'       *IN61
     C           #DKFNB    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN61
     C                     END                             *FI
     C           W0RPT     IFEQ 'N'
      * Disable key screen - not applicable
     C                     SETOF                     87    *
     C                     ELSE
      * Enable key screen
     C                     SETON                     87    *
     C                     END
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP5W4ST    #PW4ST           Primary/Load St
     C                     MOVELP4WPST    #PWPST           Warehouse Type
     C                     MOVELP4AJCD    #PAJCD           Warehouse Code
     C                     MOVELP4F8NA    #PF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     #DD1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     #DD2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     #DD3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     #DD4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     #DD5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     #DD6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     #DD7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     #DGCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     #DD1PD           Day 1 Productio
     C                     Z-ADD*ZERO     #DD2PD           Day 2 Productio
     C                     Z-ADD*ZERO     #DD3PD           Day 3 Productio
     C                     Z-ADD*ZERO     #DD4PD           Day 4 Productio
     C                     Z-ADD*ZERO     #DD5PD           Day 5 Productio
     C                     Z-ADD*ZERO     #DD6PD           Day 6 Productio
     C                     Z-ADD*ZERO     #DD7PD           Day 7 Productio
     C                     Z-ADD*ZERO     #DD8PD           Day 8 Productio
     C                     Z-ADD*ZERO     #DD1SS           Day 1 Sched Shi
     C                     Z-ADD*ZERO     #DD2SS           Day 2 Sched Shi
     C                     Z-ADD*ZERO     #DD3SS           Day 3 Sched Shi
     C                     Z-ADD*ZERO     #DVNNB           Day 4 Sched Shi
     C                     Z-ADD*ZERO     #DD5SS           Day 5 Sched Shi
     C                     Z-ADD*ZERO     #DVWNB           Day 6 Sched Shi
     C                     Z-ADD*ZERO     #DD7SS           Day 7 Sched Shi
     C                     Z-ADD*ZERO     #DD8SS           Day 8 Sched Shi
     C                     Z-ADD*ZERO     #DD1SL           Day 1 Sales USR
     C                     MOVEL*BLANK    #DGHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    #DGISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    #DGJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    #DGKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    #DGLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    #DGMSX           Day 6 Rsrvd Oth
     C                     Z-ADD*ZERO     #DD2SL           Day 2 Sales USR
     C                     Z-ADD*ZERO     #DD3SL           Day 3 Sales USR
     C                     Z-ADD*ZERO     #DD4SL           Day 4 Sales USR
     C                     Z-ADD*ZERO     #DD5SL           Day 5 Sales USR
     C                     Z-ADD*ZERO     #DD6SL           Day 6 Sales USR
     C                     Z-ADD*ZERO     #DD7SL           Day 7 Sales USR
     C                     Z-ADD*ZERO     #DZ5NB           Day 8 Sales USR
     C                     Z-ADD*ZERO     #DD1AJ           Day 1 Adjustmen
     C                     Z-ADD*ZERO     #DD2AJ           Day 2 Adjustmen
     C                     Z-ADD*ZERO     #DD3AJ           Day 3 Adjustmen
     C                     Z-ADD*ZERO     #DD4AJ           Day 4 Adjustmen
     C                     Z-ADD*ZERO     #DD5AJ           Day 5 Adjustmen
     C                     Z-ADD*ZERO     #DD6AJ           Day 6 Adjustmen
     C                     Z-ADD*ZERO     #DD7AJ           Day 7 Adjustmen
     C                     Z-ADD*ZERO     #DD8AJ           Day 8 Adjustmen
     C                     Z-ADD*ZERO     #DD1PK           Day 1 Planned K
     C                     Z-ADD*ZERO     #DD2PK           Day 2 Planned K
     C                     Z-ADD*ZERO     #DD3PK           Day 3 Planned K
     C                     Z-ADD*ZERO     #DD4PK           Day 4 Planned K
     C                     Z-ADD*ZERO     #DD5PK           Day 5 Planned K
     C                     Z-ADD*ZERO     #DD6PK           Day 6 Planned K
     C                     Z-ADD*ZERO     #DD7PK           Day 7 Planned K
     C                     Z-ADD*ZERO     #DD1OD           Day 1 Orders US
     C                     Z-ADD*ZERO     #DD2OD           Day 2 Orders US
     C                     Z-ADD*ZERO     #DD3OD           Day 3 Orders US
     C                     Z-ADD*ZERO     #DD4OD           Day 4 Orders US
     C                     Z-ADD*ZERO     #DD5OD           Day 5 Orders US
     C                     Z-ADD*ZERO     #DD6OD           Day 6 Orders US
     C                     Z-ADD*ZERO     #DD7OD           Day 7 Orders US
     C                     Z-ADD*ZERO     #DD1PA           Day 1 Prdctn Ad
     C                     Z-ADD*ZERO     #DD2PA           Day 2 Prdctn Ad
     C                     Z-ADD*ZERO     #DD3PA           Day 3 Prdctn Ad
     C                     Z-ADD*ZERO     #DD4PA           Day 4 Prdctn Ad
     C                     Z-ADD*ZERO     #DD5PA           Day 5 Prdctn Ad
     C                     Z-ADD*ZERO     #DD6PA           Day 6 Prdctn Ad
     C                     Z-ADD*ZERO     #DD7PA           Day 7 Prdctn Ad
     C                     Z-ADD*ZERO     #DD1OA           Day 1 Order Adj
     C                     Z-ADD*ZERO     #DD2OA           Day 2 Order Adj
     C                     Z-ADD*ZERO     #DD3OA           Day 3 Order Adj
     C                     Z-ADD*ZERO     #DD4OA           Day 4 Order Adj
     C                     Z-ADD*ZERO     #DD5OA           Day 5 Order Adj
     C                     Z-ADD*ZERO     #DD6OA           Day 6 Order Adj
     C                     Z-ADD*ZERO     #DD7OA           Day 7 Order Adj
     C                     Z-ADD*ZERO     #DD1SA           Day 1 Ship Adj
     C                     Z-ADD*ZERO     #DD2SA           Day 2 Ship Adj
     C                     Z-ADD*ZERO     #DD3SA           Day 3 Ship Adj
     C                     Z-ADD*ZERO     #DD4SA           Day 4 Ship Adj
     C                     Z-ADD*ZERO     #DD5SA           Day 5 Ship Adj
     C                     Z-ADD*ZERO     #DD6SA           Day 6 Ship Adj
     C                     Z-ADD*ZERO     #DD7SA           Day 7 Ship Adj
     C                     Z-ADD*ZERO     #DD1AD           Day 1 Std Adj U
     C                     Z-ADD*ZERO     #DD2AD           Day 2 Std Adj U
     C                     Z-ADD*ZERO     #DD3AD           Day 3 Std Adj U
     C                     Z-ADD*ZERO     #DD4AD           Day 4 Std Adj U
     C                     Z-ADD*ZERO     #DD5AD           Day 5 Std Adj U
     C                     Z-ADD*ZERO     #DD6AD           Day 6 Std Adj U
     C                     Z-ADD*ZERO     #DD7AD           Day 7 Std Adj U
     C                     Z-ADD*ZERO     #DLENB           Day 1 Inv Adj U
     C                     Z-ADD*ZERO     #DLJNB           Day 2 Inv Adj U
     C                     Z-ADD*ZERO     #DLKNB           Day 3 Inv Adj U
     C                     Z-ADD*ZERO     #DD4IA           Day 4 Inv Adj U
     C                     Z-ADD*ZERO     #DD5IA           Day 5 Inv Adj U
     C                     Z-ADD*ZERO     #DD6IA           Day 6 Inv Adj U
     C                     Z-ADD*ZERO     #DL2NB           Day 7 Inv Adj U
     C                     Z-ADD*ZERO     #DD1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     #DD2AV           Day 2 Availabil
     C                     Z-ADD*ZERO     #DD3AV           Day 3 Availabil
     C                     Z-ADD*ZERO     #DD4AV           Day 4 Availabil
     C                     Z-ADD*ZERO     #DD5AV           Day 5 Availabil
     C                     Z-ADD*ZERO     #DD6AV           Day 6 Availabil
     C                     Z-ADD*ZERO     #DD7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     #DD8AV           Day 8 Availabil
     C                     MOVEL*BLANK    #1AWNA           Description Lin
     C                     MOVEL*BLANK    #1L6NA           Item Label Line
     C                     MOVEL*BLANK    #1MFNA           Item Label Line
     C                     MOVEL*BLANK    #1L7NA           Item Label Line
     C                     MOVEL*BLANK    #1L8NA           Item Label Line
     C                     Z-ADD*ZERO     #1AWPC           Conversion Fact
     C                     MOVEL*BLANK    #1LXST           Operation Facto
     C                     MOVEL*BLANK    #1AECD           U/M - Second
     C                     Z-ADD*ZERO     #1AXPC           Conversion Fact
     C                     MOVEL*BLANK    #1LYST           Operation Facto
     C                     MOVEL*BLANK    #1AFCD           U/M - Third
     C                     MOVEL*BLANK    #1AICD           U/M - Pricing
     C                     MOVEL*BLANK    #1HICD           Quality Level
     C                     MOVEL*BLANK    #1RBCD           Item Level
     C                     MOVEL*BLANK    #1FZST           Production Date
     C                     MOVEL*BLANK    #1AVST           Catch Weight St
     C                     Z-ADD*ZERO     #1CZWG           Minimum Weight
     C                     Z-ADD*ZERO     #1C0WG           Maximum Weight
     C                     Z-ADD*ZERO     #1URTN           Number Cases On
     C                     Z-ADD*ZERO     #1AJC8           Vendor - Item D
     C                     Z-ADD*ZERO     #1RINB           Item Structure
     C                     Z-ADD*ZERO     #1RHNB           Item Structure
     C                     Z-ADD*ZERO     #1RGNB           Item Structure
     C                     MOVEL*BLANK    #1LLCD           Packaging Code
     C                     MOVEL*BLANK    #1LMCD           Item Market Cod
     C                     Z-ADD*ZERO     #1SFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     #1A3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     #1SJNB           Production Lead
     C                     MOVEL*BLANK    #1P3ST           TF Co-Ownership
     C                     Z-ADD*ZERO     #1SKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     #1SLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     #1SMNB           Agrimetrics gra
     C                     MOVEL*BLANK    #1P4ST           PA Base Avail R
     C                     MOVEL*BLANK    #1LNCD           Default Commod
     C                     Z-ADD*ZERO     #1TFNB           Transportation
     C                     MOVEL*BLANK    #1N0CD           Item Type Code
     C                     MOVEL*BLANK    #1X4ST           Package Type Co
     C                     Z-ADD*ZERO     #1CFNB           PM Pounds per H
     C                     Z-ADD*ZERO     #1CGNB           Item Frt Overag
     C                     Z-ADD*ZERO     #1ILNB           PM % 2nds Facto
     C                     Z-ADD*ZERO     #1CHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     #1CINB           PM Batch Size
     C                     Z-ADD*ZERO     #1CJNB           PM Lot Size
     C                     Z-ADD*ZERO     #1CMNB           Partial Item Co
     C                     Z-ADD*ZERO     #1CNNB           WIP Item Code
     C                     Z-ADD*ZERO     #1CRNB           WIP Reject Code
     C                     Z-ADD*ZERO     #1CSNB           Std Costing Uni
     C                     Z-ADD*ZERO     #1CVNB           FP Std Green We
     C                     Z-ADD*ZERO     #1CWNB           PM Standard LBS
     C                     Z-ADD*ZERO     #1CXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     #1CZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     #1C0NB           PM Finished LBS
     C                     MOVEL*BLANK    #1N1CD           SH Unused (was
     C                     Z-ADD*ZERO     #1B4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     #1B5NB           PM Line Number
     C                     MOVEL*BLANK    #1X5ST           Seconds Item
     C                     MOVEL*BLANK    #1X6ST           Print on Realiz
     C                     MOVEL*BLANK    #1X7ST           Unit Weight Cha
     C                     MOVEL*BLANK    #1PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     #1BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     #1BJNB           Bags Per Unit
     C                     MOVEL*BLANK    #1SUST           Export/Domestic
     C                     MOVEL*BLANK    #1SVST           Print On Schedu
     C                     MOVEL*BLANK    #1SYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    #1SZST           Fresh Sched As
     C                     MOVEL*BLANK    #1S1ST           Frozen Inv Allo
     C                     MOVEL*BLANK    #1XRCD           Primal Group Co
     C                     MOVEL*BLANK    #1XTCD           UPC Code 1
     C                     MOVEL*BLANK    #1XUCD           UPC Code 2
     C                     Z-ADD*ZERO     #1F5WG           Item Target Pri
     C                     Z-ADD*ZERO     #1F6WG           Minimum Piece W
     C                     Z-ADD*ZERO     #1F7WG           Maximum Piece W
     C                     Z-ADD*ZERO     #1BLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     #1BNNB           Production Qty
     C                     MOVEL*BLANK    #1S2ST           Scheduling Posi
     C                     MOVEL*BLANK    #1S4ST           Sold 100% Froze
     C                     MOVEL*BLANK    #1S5ST           Maximum Shifts
     C                     MOVEL*BLANK    #1S6ST           Value Added Sts
     C                     MOVEL*BLANK    #1S8ST           Label Type
     C                     MOVEL*BLANK    #1S9ST           Item TF Exempt
     C                     MOVEL*BLANK    #1TCST           Item TF Classif
     C                     MOVEL*BLANK    #1TDST           Default Workcen
     C                     Z-ADD*ZERO     #1TMVA           Maximum Audit V
     C                     Z-ADD*ZERO     #1TNVA           Minimum Audit V
     C                     Z-ADD*ZERO     #1BLPR           Market Overage
     C                     Z-ADD*ZERO     #1BMPR           Standard Overag
     C                     MOVEL*BLANK    #1LRCD           Commodity Price
     C                     MOVEL*BLANK    #1U9ST           Item Pricing Op
     C                     Z-ADD*ZERO     #1CMCO           Item Pricing Co
     C                     MOVEL*BLANK    #1Q1CD           Default Warehou
     C                     MOVEL*BLANK    #1Q8CD           Price Method De
     C                     MOVEL*BLANK    #1QZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    #1XWST           Variety/Rendere
     C                     MOVEL*BLANK    #1XXST           Frozen Make to
     C                     MOVEL*BLANK    #1VMST           Credit Item Sta
     C                     Z-ADD*ZERO     #1SWGH           Std Weight/Head
     C                     Z-ADD*ZERO     #1PPHE           Pieces Per Head
     C                     MOVEL*BLANK    #1R3CD           Department Code
     C                     MOVEL*BLANK    #1SDCD           Group for Packa
     C                     Z-ADD*ZERO     #1ICN1           Item Category N
     C                     MOVEL*BLANK    #1SVCD           MTO Code
     C                     Z-ADD*ZERO     #1ICN2           Item Category N
     C                     MOVEL*BLANK    #1SWCD           Item Category C
     C                     Z-ADD*ZERO     #1V2NB           Item Category N
     C                     MOVEL*BLANK    #1SXCD           Item Category C
     C                     Z-ADD*ZERO     #1ITCN           Item Category N
     C                     MOVEL*BLANK    #1SYCD           G/L Sub Code
     C                     Z-ADD*ZERO     #1ITC5           Item Category N
     C                     MOVEL*BLANK    #1SZCD           Item Category C
     C                     Z-ADD*ZERO     #1ICN6           Item Category N
     C                     MOVEL*BLANK    #1S0CD           Item Category C
     C                     Z-ADD*ZERO     #1ICN7           Item Category N
     C                     MOVEL*BLANK    #1S1CD           Item Category C
     C                     Z-ADD*ZERO     #1ICN8           Item Category N
     C                     MOVEL*BLANK    #1S2CD           Item Category C
     C                     Z-ADD*ZERO     #1ICN9           Item Category N
     C                     MOVEL*BLANK    #1S3CD           Item Category C
     C                     Z-ADD*ZERO     #1ICN0           Item Category N
     C                     MOVEL*BLANK    #1S4CD           Item Category C
     C                     MOVEL*BLANK    #1UVST           EDI Status 1
     C                     MOVEL*BLANK    #1UWST           EDI Status 2
     C                     MOVEL*BLANK    #1UXST           EDI Status 3
     C                     MOVEL*BLANK    #1VSST           Record Status
     C                     Z-ADD*ZERO     #1AATM           Job Time
     C                     MOVEL*BLANK    #1AYNA           User Id
     C                     MOVEL*BLANK    #1A0NA           Job Name
     C                     Z-ADD*ZERO     #1AXDT           Job Date
     C                     MOVELP3ADTX    #PADTX           Name
     C                     MOVEL*BLANK    #1ADCD           U/M - Primary
     C                     MOVEL*BLANK    #DMVTX           USR Base flag
     C                     MOVEL*BLANK    #DT3CD           Warehouse Code
     C                     MOVEL*BLANK    #DR6ST           Warehouse Type
     C                     Z-ADDP6LDSZ    #PLDSZ           Load Size USR
     C                     MOVEL*BLANK    #1AVNA           Description Lin
     C                     Z-ADD*ZERO     #1CHTM           Fresh Chilling
     C                     Z-ADD*ZERO     #1AIWG           Unit Weight
     C                     Z-ADDP7H6DT    #PH6DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPH6DT
     C                     Z-ADDP7H7DT    #PH7DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPH7DT
     C                     Z-ADDP7H8DT    #PH8DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPH8DT
     C                     Z-ADDP7H9DT    #PH9DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPH9DT
     C                     Z-ADDP7IADT    #PIADT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPIADT
     C                     Z-ADDP7IBDT    #PIBDT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPIBDT
     C                     Z-ADDP7INDT    #PINDT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPINDT
     C                     Z-ADD*ZERO     #DKONB           Day 1 Inventory
     C                     Z-ADD*ZERO     #DKPNB           Day 2 Inventory
     C                     Z-ADD*ZERO     #DKQNB           Day 3 Inventory
     C                     Z-ADD*ZERO     #DKRNB           Day 4 Inventory
     C                     Z-ADD*ZERO     #DKSNB           Day 5 Inventory
     C                     Z-ADD*ZERO     #DKTNB           Day 6 Inventory
     C                     Z-ADD*ZERO     #DKVNB           Day 7 Inventory
     C                     Z-ADD*ZERO     #DPMNX           Day 8 Inventory
     C                     Z-ADD*ZERO     #DKWNB           Day 1 Productio
     C                     Z-ADD*ZERO     #DKXNB           Day 2 Productio
     C                     Z-ADD*ZERO     #DKYNB           Day 3 Productio
     C                     Z-ADD*ZERO     #DKZNB           Day 4 Productio
     C                     Z-ADD*ZERO     #DK0NB           Day 5 Productio
     C                     Z-ADD*ZERO     #DK1NB           Day 6 Productio
     C                     Z-ADD*ZERO     #DK2NB           Day 7 Productio
     C                     Z-ADD*ZERO     #DPJNX           Day 8 Productio
     C                     Z-ADD*ZERO     #DFFDT           USR Day 1
      * Clear external version also
     C                     Z-ADD*ZERO     VDFFDT
     C                     Z-ADD*ZERO     #DE1DT           USR Day 2
      * Clear external version also
     C                     Z-ADD*ZERO     VDE1DT
     C                     Z-ADD*ZERO     #DE2DT           USR Day 3
      * Clear external version also
     C                     Z-ADD*ZERO     VDE2DT
     C                     Z-ADD*ZERO     #DE3DT           USR Day 4
      * Clear external version also
     C                     Z-ADD*ZERO     VDE3DT
     C                     Z-ADD*ZERO     #DE4DT           USR Day 5
      * Clear external version also
     C                     Z-ADD*ZERO     VDE4DT
     C                     Z-ADD*ZERO     #DE5DT           USR Day 6
      * Clear external version also
     C                     Z-ADD*ZERO     VDE5DT
     C                     Z-ADD*ZERO     #DE6DT           USR Day 7
      * Clear external version also
     C                     Z-ADD*ZERO     VDE6DT
     C                     Z-ADD*ZERO     #DOHLO           Order Hold Over
     C                     Z-ADD*ZERO     #DK3NB           Day 1 Sched Shi
     C                     Z-ADD*ZERO     #DK4NB           Day 2 Sched Shi
     C                     Z-ADD*ZERO     #DK5NB           Day 3 Sched Shi
     C                     Z-ADD*ZERO     #DK6NB           Day 4 Sched Shi
     C                     Z-ADD*ZERO     #DK7NB           Day 5 Sched Shi
     C                     Z-ADD*ZERO     #DK8NB           Day 6 Sched Shi
     C                     Z-ADD*ZERO     #DK9NB           Day 7 Sched Shi
     C                     Z-ADD*ZERO     #DGMNY           Day 8 Sched Shi
     C                     Z-ADD*ZERO     #DC8NX           Order Hold Over
     C                     Z-ADD*ZERO     #DGTNX           Day 1 Sales 5,0
     C                     Z-ADD*ZERO     #DGUNX           Day 2 Sales 5,0
     C                     Z-ADD*ZERO     #DGVNX           Day 3 Sales 5,0
     C                     Z-ADD*ZERO     #DGWNX           Day 4 Sales 5,0
     C                     Z-ADD*ZERO     #DGXNX           Day 5 Sales 5,0
     C                     Z-ADD*ZERO     #DGYNX           Day 6 Sales 5,0
     C                     Z-ADD*ZERO     #DGZNX           Day 7 Sales 5,0
     C                     Z-ADD*ZERO     #DPQNX           Day 8 Sales 5,0
     C                     Z-ADD*ZERO     #DJ2NB           Day 1 Available
     C                     Z-ADD*ZERO     #DJ3NB           Day 2 Available
     C                     Z-ADD*ZERO     #DJ4NB           Day 3 Available
     C                     Z-ADD*ZERO     #DJ5NB           Day 4 Available
     C                     Z-ADD*ZERO     #DJ6NB           Day 5 Available
     C                     Z-ADD*ZERO     #DJ7NB           Day 6 Available
     C                     Z-ADD*ZERO     #DJ8NB           Day 7 Available
     C                     Z-ADD*ZERO     #DPONX           Day 8 Available
     C                     Z-ADD*ZERO     #DJ9NB           Day 1 Available
     C                     Z-ADD*ZERO     #DKANB           Day 2 Available
     C                     Z-ADD*ZERO     #DKBNB           Day 3 Available
     C                     Z-ADD*ZERO     #DKDNB           Day 4 Available
     C                     Z-ADD*ZERO     #DKENB           Day 5 Available
     C                     Z-ADD*ZERO     #DKFNB           Day 6 Available
     C                     Z-ADD*ZERO     #DKGNB           Day 7 Available
     C                     Z-ADD*ZERO     #DL2NX           Day 8 Available
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BZREJU fields to screen
      *================================================================
     C                     MOVELBZAWNA    #1AWNA           Description Lin
     C                     MOVELBZL6NA    #1L6NA           Item Label Line
     C                     MOVELBZMFNA    #1MFNA           Item Label Line
     C                     MOVELBZL7NA    #1L7NA           Item Label Line
     C                     MOVELBZL8NA    #1L8NA           Item Label Line
     C                     Z-ADDBZAWPC    #1AWPC           Conversion Fact
     C                     MOVELBZLXST    #1LXST           Operation Facto
     C                     MOVELBZAECD    #1AECD           U/M - Second
     C                     Z-ADDBZAXPC    #1AXPC           Conversion Fact
     C                     MOVELBZLYST    #1LYST           Operation Facto
     C                     MOVELBZAFCD    #1AFCD           U/M - Third
     C                     MOVELBZAICD    #1AICD           U/M - Pricing
     C                     MOVELBZHICD    #1HICD           Quality Level
     C                     MOVELBZRBCD    #1RBCD           Item Level
     C                     MOVELBZFZST    #1FZST           Production Date
     C                     MOVELBZAVST    #1AVST           Catch Weight St
     C                     Z-ADDBZCZWG    #1CZWG           Minimum Weight
     C                     Z-ADDBZC0WG    #1C0WG           Maximum Weight
     C                     Z-ADDBZURTN    #1URTN           Number Cases On
     C                     Z-ADDBZAJC8    #1AJC8           Vendor - Item D
     C                     Z-ADDBZRINB    #1RINB           Item Structure
     C                     Z-ADDBZRHNB    #1RHNB           Item Structure
     C                     Z-ADDBZRGNB    #1RGNB           Item Structure
     C                     MOVELBZLLCD    #1LLCD           Packaging Code
     C                     MOVELBZLMCD    #1LMCD           Item Market Cod
     C                     Z-ADDBZSFNB    #1SFNB           Pallet Tare Wei
     C                     Z-ADDBZA3WG    #1A3WG           Misc Tare Weigh
     C                     Z-ADDBZSJNB    #1SJNB           Production Lead
     C                     MOVELBZP3ST    #1P3ST           TF Co-Ownership
     C                     Z-ADDBZSKNB    #1SKNB           Agrimetrics gro
     C                     Z-ADDBZSLNB    #1SLNB           Agrimetrics pac
     C                     Z-ADDBZSMNB    #1SMNB           Agrimetrics gra
     C                     MOVELBZP4ST    #1P4ST           PA Base Avail R
     C                     MOVELBZLNCD    #1LNCD           Default Commod
     C                     Z-ADDBZTFNB    #1TFNB           Transportation
     C                     MOVELBZN0CD    #1N0CD           Item Type Code
     C                     MOVELBZX4ST    #1X4ST           Package Type Co
     C                     Z-ADDBZCFNB    #1CFNB           PM Pounds per H
     C                     Z-ADDBZCGNB    #1CGNB           Item Frt Overag
     C                     Z-ADDBZILNB    #1ILNB           PM % 2nds Facto
     C                     Z-ADDBZCHNB    #1CHNB           Use/Freeze/Sell
     C                     Z-ADDBZCINB    #1CINB           PM Batch Size
     C                     Z-ADDBZCJNB    #1CJNB           PM Lot Size
     C                     Z-ADDBZCMNB    #1CMNB           Partial Item Co
     C                     Z-ADDBZCNNB    #1CNNB           WIP Item Code
     C                     Z-ADDBZCRNB    #1CRNB           WIP Reject Code
     C                     Z-ADDBZCSNB    #1CSNB           Std Costing Uni
     C                     Z-ADDBZCVNB    #1CVNB           FP Std Green We
     C                     Z-ADDBZCWNB    #1CWNB           PM Standard LBS
     C                     Z-ADDBZCXNB    #1CXNB           PM Raw Meat LBS
     C                     Z-ADDBZCZNB    #1CZNB           PM Formula LBS/
     C                     Z-ADDBZC0NB    #1C0NB           PM Finished LBS
     C                     MOVELBZN1CD    #1N1CD           SH Unused (was
     C                     Z-ADDBZB4NB    #1B4NB           PM R/M Type Cod
     C                     Z-ADDBZB5NB    #1B5NB           PM Line Number
     C                     MOVELBZX5ST    #1X5ST           Seconds Item
     C                     MOVELBZX6ST    #1X6ST           Print on Realiz
     C                     MOVELBZX7ST    #1X7ST           Unit Weight Cha
     C                     MOVELBZPCCT    #1PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    #1BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    #1BJNB           Bags Per Unit
     C                     MOVELBZSUST    #1SUST           Export/Domestic
     C                     MOVELBZSVST    #1SVST           Print On Schedu
     C                     MOVELBZSYST    #1SYST           Fresh Inv Alloc
     C                     MOVELBZSZST    #1SZST           Fresh Sched As
     C                     MOVELBZS1ST    #1S1ST           Frozen Inv Allo
     C                     MOVELBZXRCD    #1XRCD           Primal Group Co
     C                     MOVELBZXTCD    #1XTCD           UPC Code 1
     C                     MOVELBZXUCD    #1XUCD           UPC Code 2
     C                     Z-ADDBZF5WG    #1F5WG           Item Target Pri
     C                     Z-ADDBZF6WG    #1F6WG           Minimum Piece W
     C                     Z-ADDBZF7WG    #1F7WG           Maximum Piece W
     C                     Z-ADDBZBLNB    #1BLNB           Seaboard Equiva
     C                     Z-ADDBZBNNB    #1BNNB           Production Qty
     C                     MOVELBZS2ST    #1S2ST           Scheduling Posi
     C                     MOVELBZS4ST    #1S4ST           Sold 100% Froze
     C                     MOVELBZS5ST    #1S5ST           Maximum Shifts
     C                     MOVELBZS6ST    #1S6ST           Value Added Sts
     C                     MOVELBZS8ST    #1S8ST           Label Type
     C                     MOVELBZS9ST    #1S9ST           Item TF Exempt
     C                     MOVELBZTCST    #1TCST           Item TF Classif
     C                     MOVELBZTDST    #1TDST           Default Workcen
     C                     Z-ADDBZTMVA    #1TMVA           Maximum Audit V
     C                     Z-ADDBZTNVA    #1TNVA           Minimum Audit V
     C                     Z-ADDBZBLPR    #1BLPR           Market Overage
     C                     Z-ADDBZBMPR    #1BMPR           Standard Overag
     C                     MOVELBZLRCD    #1LRCD           Commodity Price
     C                     MOVELBZU9ST    #1U9ST           Item Pricing Op
     C                     Z-ADDBZCMCO    #1CMCO           Item Pricing Co
     C                     MOVELBZQ1CD    #1Q1CD           Default Warehou
     C                     MOVELBZQ8CD    #1Q8CD           Price Method De
     C                     MOVELBZQZCD    #1QZCD           Base/Conv/Loss
     C                     MOVELBZXWST    #1XWST           Variety/Rendere
     C                     MOVELBZXXST    #1XXST           Frozen Make to
     C                     MOVELBZVMST    #1VMST           Credit Item Sta
     C                     Z-ADDBZSWGH    #1SWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    #1PPHE           Pieces Per Head
     C                     MOVELBZR3CD    #1R3CD           Department Code
     C                     MOVELBZSDCD    #1SDCD           Group for Packa
     C                     Z-ADDBZICN1    #1ICN1           Item Category N
     C                     MOVELBZSVCD    #1SVCD           MTO Code
     C                     Z-ADDBZICN2    #1ICN2           Item Category N
     C                     MOVELBZSWCD    #1SWCD           Item Category C
     C                     Z-ADDBZV2NB    #1V2NB           Item Category N
     C                     MOVELBZSXCD    #1SXCD           Item Category C
     C                     Z-ADDBZITCN    #1ITCN           Item Category N
     C                     MOVELBZSYCD    #1SYCD           G/L Sub Code
     C                     Z-ADDBZITC5    #1ITC5           Item Category N
     C                     MOVELBZSZCD    #1SZCD           Item Category C
     C                     Z-ADDBZICN6    #1ICN6           Item Category N
     C                     MOVELBZS0CD    #1S0CD           Item Category C
     C                     Z-ADDBZICN7    #1ICN7           Item Category N
     C                     MOVELBZS1CD    #1S1CD           Item Category C
     C                     Z-ADDBZICN8    #1ICN8           Item Category N
     C                     MOVELBZS2CD    #1S2CD           Item Category C
     C                     Z-ADDBZICN9    #1ICN9           Item Category N
     C                     MOVELBZS3CD    #1S3CD           Item Category C
     C                     Z-ADDBZICN0    #1ICN0           Item Category N
     C                     MOVELBZS4CD    #1S4CD           Item Category C
     C                     MOVELBZUVST    #1UVST           EDI Status 1
     C                     MOVELBZUWST    #1UWST           EDI Status 2
     C                     MOVELBZUXST    #1UXST           EDI Status 3
     C                     MOVELBZVSST    #1VSST           Record Status
     C                     Z-ADDBZAATM    #1AATM           Job Time
     C                     MOVELBZAYNA    #1AYNA           User Id
     C                     MOVELBZA0NA    #1A0NA           Job Name
     C                     Z-ADDBZAXDT    #1AXDT           Job Date
     C                     Z-ADDBZAIC3    #1AIC3           Company Number
     C                     MOVELBZADCD    #1ADCD           U/M - Primary
     C                     Z-ADDBZHGCD    #1HGCD           Item Code
     C                     MOVELBZAVNA    #1AVNA           Description Lin
     C                     Z-ADDBZCHTM    #1CHTM           Fresh Chilling
     C                     Z-ADDBZAIWG    #1AIWG           Unit Weight
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     Z-ADDP7INDT    #PINDT           Avail Ship Date
     C                     Z-ADDP7H6DT    #PH6DT           Avail Ship Date
     C                     Z-ADDP7H7DT    #PH7DT           Avail Ship Date
     C                     Z-ADDP7H8DT    #PH8DT           Avail Ship Date
     C                     Z-ADDP7H9DT    #PH9DT           Avail Ship Date
     C                     Z-ADDP7IADT    #PIADT           Avail Ship Date
     C                     Z-ADDP7IBDT    #PIBDT           Avail Ship Date
     C                     MOVELP4WPST    #PWPST           Warehouse Type
     C                     MOVELP5W4ST    #PW4ST           Primary/Load St
     C                     Z-ADDP6LDSZ    #PLDSZ           Load Size USR
     C                     MOVELP4AJCD    #PAJCD           Warehouse Code
     C                     MOVELP4F8NA    #PF8NA           Warehouse Descr
     C                     MOVELP3ADTX    #PADTX           Name
     C                     Z-ADDP1AIC3    #1AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V1AIC3
     C                     Z-ADDP1HGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
      * Check reference to Company Name and Address
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     9931  *
     C                     END
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         MNCV#K    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#D    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Avail Ship Date 1 USR to display format
      * Convert date
     C           1000000   ADD  #PH6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPH6DT
      * Convert Avail Ship Date 2 USR to display format
      * Convert date
     C           1000000   ADD  #PH7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPH7DT
      * Convert Avail Ship Date 3 USR to display format
      * Convert date
     C           1000000   ADD  #PH8DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPH8DT
      * Convert Avail Ship Date 4 USR to display format
      * Convert date
     C           1000000   ADD  #PH9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPH9DT
      * Convert Avail Ship Date 5 USR to display format
      * Convert date
     C           1000000   ADD  #PIADT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPIADT
      * Convert Avail Ship Date 6 USR to display format
      * Convert date
     C           1000000   ADD  #PIBDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPIBDT
      * Convert Avail Ship Date 7 USR to display format
      * Convert date
     C           1000000   ADD  #PINDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPINDT
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  #DFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  #DE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  #DE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  #DE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  #DE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE4DT
      * Convert USR Day 6 to display format
      * Convert date
     C           1000000   ADD  #DE5DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE5DT
      * Convert USR Day 7 to display format
      * Convert date
     C           1000000   ADD  #DE6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDE6DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0001    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSA     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Warehouse Type
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADWPST    WL0002           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0003    KMAIC3           Company Number
     C                     MOVELWL0004    KMV8CD           Company Value C
      * Establish starting position
     C           KRSSB     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKMM8NB    WL0005           System Value Nu
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv PA Dtl SD-6 - ALL RT - Warehouse  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  61       Day 1 Inventory
     C                     Z-ADD*ZERO     WN0003  61       Day 2 Inventory
     C                     Z-ADD*ZERO     WN0004  61       Day 3 Inventory
     C                     Z-ADD*ZERO     WN0005  61       Day 4 Inventory
     C                     Z-ADD*ZERO     WN0006  61       Day 5 Inventory
     C                     Z-ADD*ZERO     WN0007  61       Day 6 Inventory
     C                     Z-ADD*ZERO     WN0008  61       Day 7 Inventory
     C                     Z-ADD*ZERO     WN0009  61       Day 8 Inventory
     C                     Z-ADD*ZERO     WN0010  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0011  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0012  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0013  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0014  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0015  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0016  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0017  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0018  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0019  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0020  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0021  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0022  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0023  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0024  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0025  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0026  61       Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0027  61       Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0028  61       Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0029  61       Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0030  61       Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0031  61       Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0032  61       Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0033  61       Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0034  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0035  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0036  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0037  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0038  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0039  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0040  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0041  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0042  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0043  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0044  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0045  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0046  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0047  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0048  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0049  61       Day 8 Sched Shi
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0018           USR Day 1
     C                     Z-ADD*ZERO     WL0019           USR Day 2
     C                     Z-ADD*ZERO     WL0020           USR Day 3
     C                     Z-ADD*ZERO     WL0021           USR Day 4
     C                     Z-ADD*ZERO     WL0022           USR Day 5
     C                     Z-ADD*ZERO     WL0023           USR Day 6
     C                     Z-ADD*ZERO     WL0024           USR Day 7
     C                     Z-ADD*ZERO     WN0002           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0003           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0004           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0005           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0006           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0007           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0008           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0009           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0010           Day 1 Productio
     C                     Z-ADD*ZERO     WN0011           Day 2 Productio
     C                     Z-ADD*ZERO     WN0012           Day 3 Productio
     C                     Z-ADD*ZERO     WN0013           Day 4 Productio
     C                     Z-ADD*ZERO     WN0014           Day 5 Productio
     C                     Z-ADD*ZERO     WN0015           Day 6 Productio
     C                     Z-ADD*ZERO     WN0016           Day 7 Productio
     C                     Z-ADD*ZERO     WN0017           Day 8 Productio
     C                     Z-ADD*ZERO     WN0018           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0019           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0020           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0021           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0022           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0023           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0024           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0025           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0026           Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0027           Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0028           Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0029           Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0030           Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0031           Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0032           Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0033           Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0034           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0035           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0036           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0037           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0038           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0039           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0040           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0041           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0042           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0043           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0044           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0045           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0046           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0047           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0048           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0049           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WL0028           Day 1 Inventory
     C                     Z-ADD*ZERO     WL0029           Day 2 Inventory
     C                     Z-ADD*ZERO     WL0030           Day 3 Inventory
     C                     Z-ADD*ZERO     WL0031           Day 4 Inventory
     C                     Z-ADD*ZERO     WL0032           Day 5 Inventory
     C                     Z-ADD*ZERO     WL0033           Day 6 Inventory
     C                     Z-ADD*ZERO     WL0034           Day 7 Inventory
     C                     Z-ADD*ZERO     WL0035           Day 8 Inventory
     C                     Z-ADD*ZERO     WL0036           Day 1 Productio
     C                     Z-ADD*ZERO     WL0037           Day 2 Productio
     C                     Z-ADD*ZERO     WL0038           Day 3 Productio
     C                     Z-ADD*ZERO     WL0039           Day 4 Productio
     C                     Z-ADD*ZERO     WL0040           Day 5 Productio
     C                     Z-ADD*ZERO     WL0041           Day 6 Productio
     C                     Z-ADD*ZERO     WL0042           Day 7 Productio
     C                     Z-ADD*ZERO     WL0043           Day 8 Productio
     C                     Z-ADD*ZERO     WL0044           Day 1 Schd Ship
     C                     Z-ADD*ZERO     WL0045           Day 2 Schd Ship
     C                     Z-ADD*ZERO     WL0046           Day 3 Schd Ship
     C                     Z-ADD*ZERO     WL0047           Day 4 Schd Ship
     C                     Z-ADD*ZERO     WL0048           Day 5 Schd Ship
     C                     Z-ADD*ZERO     WL0049           Day 6 Schd Ship
     C                     Z-ADD*ZERO     WL0050           Day 7 Schd Ship
     C                     Z-ADD*ZERO     WL0051           Day 8 Schd Ship
     C                     Z-ADD*ZERO     WL0052           Day 1 Sales Tot
     C                     Z-ADD*ZERO     WL0053           Day 2 Sales Tot
     C                     Z-ADD*ZERO     WL0054           Day 3 Sales Tot
     C                     Z-ADD*ZERO     WL0055           Day 4 Sales Tot
     C                     Z-ADD*ZERO     WL0056           Day 5 Sales Tot
     C                     Z-ADD*ZERO     WL0057           Day 6 Sales Tot
     C                     Z-ADD*ZERO     WL0058           Day 7 Sales Tot
     C                     Z-ADD*ZERO     WL0059           Day 8 Sales Tot
     C                     Z-ADD*ZERO     WL0060           Day 1 Adj Total
     C                     Z-ADD*ZERO     WL0061           Day 2 Adj Total
     C                     Z-ADD*ZERO     WL0062           Day 3 Adj Total
     C                     Z-ADD*ZERO     WL0063           Day 4 Adj Total
     C                     Z-ADD*ZERO     WL0064           Day 5 Adj Total
     C                     Z-ADD*ZERO     WL0065           Day 6 Adj Total
     C                     Z-ADD*ZERO     WL0066           Day 7 Adj Total
     C                     Z-ADD*ZERO     WL0067           Day 8 Adj Total
     C                     Z-ADD*ZERO     WL0068           Day 1 Avail Tot
     C                     Z-ADD*ZERO     WL0069           Day 2 Avail Tot
     C                     Z-ADD*ZERO     WL0070           Day 3 Avail Tot
     C                     Z-ADD*ZERO     WL0071           Day 4 Avail Tot
     C                     Z-ADD*ZERO     WL0072           Day 5 Avail Tot
     C                     Z-ADD*ZERO     WL0073           Day 6 Avail Tot
     C                     Z-ADD*ZERO     WL0074           Day 7 Avail Tot
     C                     Z-ADD*ZERO     WL0075           Day 8 Avail Tot
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           WAWPST           Warehouse Type
      * Setup key
     C                     MOVELWL0006    WAWPST           Warehouse Type
      * Establish starting position
     C           KPSSC     SETLL@ADREOJ                    *
     C                     READ @ADREOJ                  90*
      * Data record not found
     C   90                MOVEL'USR0007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: Check Warehouse Type
      *  - c1 OR (c2 AND c3)
      *   |- c1    : PAR.Warehouse Type is Equal blank
      *   |- c2    : PAR.Warehouse Type is *ALL values
      *   |- c3    : PAR.Warehouse Type EQ DB1.Warehouse Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0006    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           WL0006    IFEQ 'FZ'                       *IF
     C           WL0006    OREQ 'FR'
     C           WL0006    OREQ *BLANK
     C           WL0006    IFEQ WAWPST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Warehouse Code is Warehouse Code Blank
     C           WL0007    IFEQ *BLANK                     *IF
      * Rtv PA Dtl SD-6       IF
      *
     C                     Z-ADD*ZERO     WN0050  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0051  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0052  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0053  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0054  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0055  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0056  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0057  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0058  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0059  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0060  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0061  92       PS Weight Sched
      *
      * Rtv PA In/Sh SD-6     IF
      * Retrieve Inventory and Scheduled Shipments
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0082           Company Number
     C                     MOVEL'S'       WL0083    P      Production Type
     C                     Z-ADD##JDT     WL0084           Production Date
     C                     Z-ADDWL0009    WL0085           Item Code
     C                     MOVELWAAJCD    WL0086    P      Warehouse Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0087    WN0050           PS Weight Inv O
     C                     Z-ADDWL0088    WN0051           PS Pieces Inv O
     C                     Z-ADDWL0089    WN0052           PS Weight Inv A
     C                     Z-ADDWL0090    WN0053           PS Pieces Inv A
     C                     Z-ADDWL0091    WN0054           PS Weight Ship
     C                     Z-ADDWL0092    WN0055           PS Pieces Ship
     C                     Z-ADDWL0093    WN0056           PS Weight Prod
     C                     Z-ADDWL0094    WN0057           PS Pieces Prod
     C                     Z-ADDWL0095    WN0058           PS Weight Inv A
     C                     Z-ADDWL0096    WN0059           PS Pieces Inv A
     C                     Z-ADDWL0097    WN0060           PS Weight Order
     C                     Z-ADDWL0098    WN0061           PS Weight Sched
      * Inventory / Sales if Chilling Time > 0
      * CASE: Primary
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0025    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0077    IFGT *ZERO                      *IF
     C           WL0079    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Unit Weight or Pieces
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           WL0011    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0062 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0063 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0062    WL0103           Weight Schedule
     C                     Z-ADDWN0063    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0062           Weight Schedule
     C                     Z-ADDWL0104    WN0063           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0002           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0018           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0018           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0062    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0042           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0026    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0002           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0018           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0018           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0018    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0018           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0063    WN0042           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0026    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0002    ADD  WN0026    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0018    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0034           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           WL0012    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0064 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0065 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0064    WL0103           Weight Schedule
     C                     Z-ADDWN0065    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0064           Weight Schedule
     C                     Z-ADDWL0104    WN0065           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0003           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0019           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0019           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0064    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0043           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0003           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0019           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0019           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0019    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0019           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0065    WN0043           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0003    ADD  WN0027    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0019    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0035           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           WL0013    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0066 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0067 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0066    WL0103           Weight Schedule
     C                     Z-ADDWN0067    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0066           Weight Schedule
     C                     Z-ADDWL0104    WN0067           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0004           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0020           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0020           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0066    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0044           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0004           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0020           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0020           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0020    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0020           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0067    WN0044           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0004    ADD  WN0028    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0020    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0036           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           WL0014    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0068 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0069 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0068    WL0103           Weight Schedule
     C                     Z-ADDWN0069    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0068           Weight Schedule
     C                     Z-ADDWL0104    WN0069           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0005           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0021           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0021           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0068    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0045           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0029    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0029           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0005           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0021           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0021           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0021    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0021           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0069    WN0045           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0029    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0029           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0005    ADD  WN0029    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0021    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0037           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           WL0015    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0070 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0071 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0070    WL0103           Weight Schedule
     C                     Z-ADDWN0071    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0070           Weight Schedule
     C                     Z-ADDWL0104    WN0071           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0006           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0022           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0022           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0070    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0046           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0030    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0030           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0006           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0022           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0022           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0022    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0022           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0071    WN0046           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0030    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0030           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0006    ADD  WN0030    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0022    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0038           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           WL0016    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0072 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0073 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0072    WL0103           Weight Schedule
     C                     Z-ADDWN0073    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0072           Weight Schedule
     C                     Z-ADDWL0104    WN0073           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0007           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0023           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0023           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0072    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0047           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0031    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0031           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0007           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0023           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0023           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0023    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0023           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0073    WN0047           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0031    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0031           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0007    ADD  WN0031    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0023    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0039           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           WL0017    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0074 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0075 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0074    WL0103           Weight Schedule
     C                     Z-ADDWN0075    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0074           Weight Schedule
     C                     Z-ADDWL0104    WN0075           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0050    ADD  WN0052    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0008           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0024           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0056    ADD  WN0058    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0024           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0074    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0048           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0054    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WN0032    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0032           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0051    ADD  WN0053    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0008           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0024           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0058    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0024           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0024    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0024           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0075    WN0048           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0032    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0032           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0008    ADD  WN0032    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0024    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0040           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0025    IFEQ 'L'                        *IF
     C           WL0026    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           WL0011    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0076 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0077 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0076    WL0103           Weight Schedule
     C                     Z-ADDWN0077    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0076           Weight Schedule
     C                     Z-ADDWL0104    WN0077           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0076    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0042           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0002           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0018           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0018           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0026    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0002    ADD  WN0026    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0018    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0034           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           WL0012    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0078 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0079 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0078    WL0103           Weight Schedule
     C                     Z-ADDWN0079    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0078           Weight Schedule
     C                     Z-ADDWL0104    WN0079           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0078    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0043           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0003           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0019           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0019           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0003    ADD  WN0027    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0019    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0035           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           WL0013    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0080 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0081 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0080    WL0103           Weight Schedule
     C                     Z-ADDWN0081    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0080           Weight Schedule
     C                     Z-ADDWL0104    WN0081           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0080    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0044           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0004           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0020           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0020           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0004    ADD  WN0028    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0020    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0036           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           WL0014    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0082 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0083 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0082    WL0103           Weight Schedule
     C                     Z-ADDWN0083    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0082           Weight Schedule
     C                     Z-ADDWL0104    WN0083           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0082    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0045           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0005           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0021           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0021           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0029    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0029           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0005    ADD  WN0029    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0021    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0037           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           WL0015    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0084 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0085 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0084    WL0103           Weight Schedule
     C                     Z-ADDWN0085    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0084           Weight Schedule
     C                     Z-ADDWL0104    WN0085           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0084    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0046           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0006           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0022           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0022           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0030    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0030           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0006    ADD  WN0030    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0022    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0038           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           WL0016    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0086 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0087 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0086    WL0103           Weight Schedule
     C                     Z-ADDWN0087    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0086           Weight Schedule
     C                     Z-ADDWL0104    WN0087           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0086    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0047           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0007           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0023           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0023           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0031    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0031           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0007    ADD  WN0031    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0023    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0039           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           WL0017    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0088 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0089 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0051    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0053    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0059    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0057    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0055    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0050    YL0001           PS Weight Inv O
     C                     Z-ADDWN0052    YL0002           PS Weight Inv A
     C                     Z-ADDWN0058    YL0003           PS Weight Inv A
     C                     Z-ADDWN0056    YL0004           PS Weight Prod
     C                     Z-ADDWN0054    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0088    WL0103           Weight Schedule
     C                     Z-ADDWN0089    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0088           Weight Schedule
     C                     Z-ADDWL0104    WN0089           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0088    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0048           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0008           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0024           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0024           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WN0032    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0032           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WN0008    ADD  WN0032    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0024    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0040           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Inventory
      * CASE: PAR.Avail Dsp/Prt Type USR is Display
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'T'
      * Total Inventory
      * PAR.Day 8 Inventory USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Inventory USR
     C           WN0002    ADD  WN0003    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  WN0004    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WN0005    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WN0006    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WN0007    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WN0008    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0009           Day 8 Inventory
     C                     END                             *FI
      * Rtv PA Dtl SD-6 WHS   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0109           Company Number
     C                     Z-ADDWL0009    WL0110           Item Code
     C                     MOVELWAAJCD    WL0111    P      Warehouse Code
     C                     Z-ADDWL0010    WL0112           PS Available Sh
     C                     Z-ADDWL0011    WL0113           Avail Ship Date
     C                     Z-ADDWL0012    WL0114           Avail Ship Date
     C                     Z-ADDWL0013    WL0115           Avail Ship Date
     C                     Z-ADDWL0014    WL0116           Avail Ship Date
     C                     Z-ADDWL0015    WL0117           Avail Ship Date
     C                     Z-ADDWL0016    WL0118           Avail Ship Date
     C                     Z-ADDWL0017    WL0119           Avail Ship Date
     C                     Z-ADDWN0002    WL0127           Day 1 Inventory
     C                     Z-ADDWN0003    WL0128           Day 2 Inventory
     C                     Z-ADDWN0004    WL0129           Day 3 Inventory
     C                     Z-ADDWN0005    WL0130           Day 4 Inventory
     C                     Z-ADDWN0006    WL0131           Day 5 Inventory
     C                     Z-ADDWN0007    WL0132           Day 6 Inventory
     C                     Z-ADDWN0008    WL0133           Day 7 Inventory
     C                     Z-ADDWN0010    WL0134           Day 1 Productio
     C                     Z-ADDWN0011    WL0135           Day 2 Productio
     C                     Z-ADDWN0012    WL0136           Day 3 Productio
     C                     Z-ADDWN0013    WL0137           Day 4 Productio
     C                     Z-ADDWN0014    WL0138           Day 5 Productio
     C                     Z-ADDWN0015    WL0139           Day 6 Productio
     C                     Z-ADDWN0016    WL0140           Day 7 Productio
     C                     Z-ADDWN0018    WL0141           Day 1 Sales USR
     C                     Z-ADDWN0019    WL0142           Day 2 Sales USR
     C                     Z-ADDWN0020    WL0143           Day 3 Sales USR
     C                     Z-ADDWN0021    WL0144           Day 4 Sales USR
     C                     Z-ADDWN0022    WL0145           Day 5 Sales USR
     C                     Z-ADDWN0023    WL0146           Day 6 Sales USR
     C                     Z-ADDWN0024    WL0147           Day 7 Sales USR
     C                     Z-ADDWN0026    WL0148           Day 1 Adjustmen
     C                     Z-ADDWN0027    WL0149           Day 2 Adjustmen
     C                     Z-ADDWN0028    WL0150           Day 3 Adjustmen
     C                     Z-ADDWN0029    WL0151           Day 4 Adjustmen
     C                     Z-ADDWN0030    WL0152           Day 5 Adjustmen
     C                     Z-ADDWN0031    WL0153           Day 6 Adjustmen
     C                     Z-ADDWN0032    WL0154           Day 7 Adjustmen
     C                     Z-ADDWN0034    WL0155           Day 1 Availabil
     C                     Z-ADDWN0035    WL0156           Day 2 Availabil
     C                     Z-ADDWN0036    WL0157           Day 3 Availabil
     C                     Z-ADDWN0037    WL0158           Day 4 Availabil
     C                     Z-ADDWN0038    WL0159           Day 5 Availabil
     C                     Z-ADDWN0039    WL0160           Day 6 Availabil
     C                     Z-ADDWN0040    WL0161           Day 7 Availabil
     C                     MOVELWL0025    WL0162    P      Primary/Load St
     C                     Z-ADDWL0026    WL0163           Load Size USR
     C                     Z-ADDWN0042    WL0164           Day 1 Sched Shi
     C                     Z-ADDWN0043    WL0165           Day 2 Sched Shi
     C                     Z-ADDWN0044    WL0166           Day 3 Sched Shi
     C                     Z-ADDWN0045    WL0167           Day 4 Sched Shi
     C                     Z-ADDWN0046    WL0168           Day 5 Sched Shi
     C                     Z-ADDWN0047    WL0169           Day 6 Sched Shi
     C                     Z-ADDWN0048    WL0170           Day 7 Sched Shi
     C                     MOVELWL0027    WL0171    P      Avail Dsp/Prt T
     C                     MOVELWL0076    WL0172    P      U/M - Primary
     C                     Z-ADDWL0077    WL0173           Unit Weight
     C                     Z-ADDWL0078    WL0174           Fresh Chilling
     C                     MOVELWL0079    WL0175    P      Piece Count Ite
     C                     Z-ADDWL0080    WL0176           Pieces Per Bag
     C                     Z-ADDWL0081    WL0177           Bags Per Unit
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0120    WL0018           USR Day 1
     C                     Z-ADDWL0121    WL0019           USR Day 2
     C                     Z-ADDWL0122    WL0020           USR Day 3
     C                     Z-ADDWL0123    WL0021           USR Day 4
     C                     Z-ADDWL0124    WL0022           USR Day 5
     C                     Z-ADDWL0125    WL0023           USR Day 6
     C                     Z-ADDWL0126    WL0024           USR Day 7
     C                     Z-ADDWL0134    WN0010           Day 1 Productio
     C                     Z-ADDWL0135    WN0011           Day 2 Productio
     C                     Z-ADDWL0136    WN0012           Day 3 Productio
     C                     Z-ADDWL0137    WN0013           Day 4 Productio
     C                     Z-ADDWL0138    WN0014           Day 5 Productio
     C                     Z-ADDWL0139    WN0015           Day 6 Productio
     C                     Z-ADDWL0140    WN0016           Day 7 Productio
     C                     Z-ADDWL0141    WN0018           Day 1 Sales USR
     C                     Z-ADDWL0142    WN0019           Day 2 Sales USR
     C                     Z-ADDWL0143    WN0020           Day 3 Sales USR
     C                     Z-ADDWL0144    WN0021           Day 4 Sales USR
     C                     Z-ADDWL0145    WN0022           Day 5 Sales USR
     C                     Z-ADDWL0146    WN0023           Day 6 Sales USR
     C                     Z-ADDWL0147    WN0024           Day 7 Sales USR
     C                     Z-ADDWL0148    WN0026           Day 1 Adjustmen
     C                     Z-ADDWL0149    WN0027           Day 2 Adjustmen
     C                     Z-ADDWL0150    WN0028           Day 3 Adjustmen
     C                     Z-ADDWL0151    WN0029           Day 4 Adjustmen
     C                     Z-ADDWL0152    WN0030           Day 5 Adjustmen
     C                     Z-ADDWL0153    WN0031           Day 6 Adjustmen
     C                     Z-ADDWL0154    WN0032           Day 7 Adjustmen
     C                     Z-ADDWL0155    WN0034           Day 1 Availabil
     C                     Z-ADDWL0156    WN0035           Day 2 Availabil
     C                     Z-ADDWL0157    WN0036           Day 3 Availabil
     C                     Z-ADDWL0158    WN0037           Day 4 Availabil
     C                     Z-ADDWL0159    WN0038           Day 5 Availabil
     C                     Z-ADDWL0160    WN0039           Day 6 Availabil
     C                     Z-ADDWL0161    WN0040           Day 7 Availabil
     C                     Z-ADDWL0164    WN0042           Day 1 Sched Shi
     C                     Z-ADDWL0165    WN0043           Day 2 Sched Shi
     C                     Z-ADDWL0166    WN0044           Day 3 Sched Shi
     C                     Z-ADDWL0167    WN0045           Day 4 Sched Shi
     C                     Z-ADDWL0168    WN0046           Day 5 Sched Shi
     C                     Z-ADDWL0169    WN0047           Day 6 Sched Shi
     C                     Z-ADDWL0170    WN0048           Day 7 Sched Shi
      * Total Production
      * PAR.Day 8 Production USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Production USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Production USR
     C           WN0010    ADD  WN0011    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WN0012    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WN0013    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WN0014    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WN0015    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WN0016    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0017           Day 8 Productio
      * Total Sched SHipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Sched Shipments USR
     C           WN0042    ADD  WN0043    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WN0044    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WN0045    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WN0046    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WN0047    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WN0048    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0049           Day 8 Sched Shi
      * Total Sales
      * PAR.Day 8 Sales USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Sales USR
     C           WN0018    ADD  WN0019    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WN0020    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WN0021    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WN0022    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WN0023    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WN0024    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0025           Day 8 Sales USR
      * Total Adjustments
      * PAR.Day 8 Adjustments USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Adjustments USR
     C           WN0026    ADD  WN0027    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WN0028    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WN0029    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WN0030    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WN0031    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WN0032    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0033           Day 8 Adjustmen
      * Total Availability
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Availability USR
     C           WN0034    ADD  WN0035    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WN0036    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WN0037    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WN0038    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WN0039    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WN0040    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0041           Day 8 Availabil
     C                     ADD  WN0002    WL0028           Day 1 Inventory
     C                     ADD  WN0003    WL0029           Day 2 Inventory
     C                     ADD  WN0004    WL0030           Day 3 Inventory
     C                     ADD  WN0005    WL0031           Day 4 Inventory
     C                     ADD  WN0006    WL0032           Day 5 Inventory
     C                     ADD  WN0007    WL0033           Day 6 Inventory
     C                     ADD  WN0008    WL0034           Day 7 Inventory
     C                     ADD  WN0009    WL0035           Day 8 Inventory
     C                     ADD  WN0010    WL0036           Day 1 Productio
     C                     ADD  WN0011    WL0037           Day 2 Productio
     C                     ADD  WN0012    WL0038           Day 3 Productio
     C                     ADD  WN0013    WL0039           Day 4 Productio
     C                     ADD  WN0014    WL0040           Day 5 Productio
     C                     ADD  WN0015    WL0041           Day 6 Productio
     C                     ADD  WN0016    WL0042           Day 7 Productio
     C                     ADD  WN0017    WL0043           Day 8 Productio
     C                     ADD  WN0042    WL0044           Day 1 Schd Ship
     C                     ADD  WN0043    WL0045           Day 2 Schd Ship
     C                     ADD  WN0044    WL0046           Day 3 Schd Ship
     C                     ADD  WN0045    WL0047           Day 4 Schd Ship
     C                     ADD  WN0046    WL0048           Day 5 Schd Ship
     C                     ADD  WN0047    WL0049           Day 6 Schd Ship
     C                     ADD  WN0048    WL0050           Day 7 Schd Ship
     C                     ADD  WN0049    WL0051           Day 8 Schd Ship
     C                     ADD  WN0018    WL0052           Day 1 Sales Tot
     C                     ADD  WN0019    WL0053           Day 2 Sales Tot
     C                     ADD  WN0020    WL0054           Day 3 Sales Tot
     C                     ADD  WN0021    WL0055           Day 4 Sales Tot
     C                     ADD  WN0022    WL0056           Day 5 Sales Tot
     C                     ADD  WN0023    WL0057           Day 6 Sales Tot
     C                     ADD  WN0024    WL0058           Day 7 Sales Tot
     C                     ADD  WN0025    WL0059           Day 8 Sales Tot
     C                     ADD  WN0026    WL0060           Day 1 Adj Total
     C                     ADD  WN0027    WL0061           Day 2 Adj Total
     C                     ADD  WN0028    WL0062           Day 3 Adj Total
     C                     ADD  WN0029    WL0063           Day 4 Adj Total
     C                     ADD  WN0030    WL0064           Day 5 Adj Total
     C                     ADD  WN0031    WL0065           Day 6 Adj Total
     C                     ADD  WN0032    WL0066           Day 7 Adj Total
     C                     ADD  WN0033    WL0067           Day 8 Adj Total
     C                     ADD  WN0034    WL0068           Day 1 Avail Tot
     C                     ADD  WN0035    WL0069           Day 2 Avail Tot
     C                     ADD  WN0036    WL0070           Day 3 Avail Tot
     C                     ADD  WN0037    WL0071           Day 4 Avail Tot
     C                     ADD  WN0038    WL0072           Day 5 Avail Tot
     C                     ADD  WN0039    WL0073           Day 6 Avail Tot
     C                     ADD  WN0040    WL0074           Day 7 Avail Tot
     C                     ADD  WN0041    WL0075           Day 8 Avail Tot
      * Zero out accumulators
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
     C                     Z-ADD*ZERO     WN0002           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0003           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0004           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0005           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0006           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0007           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0008           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0009           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0010           Day 1 Productio
     C                     Z-ADD*ZERO     WN0011           Day 2 Productio
     C                     Z-ADD*ZERO     WN0012           Day 3 Productio
     C                     Z-ADD*ZERO     WN0013           Day 4 Productio
     C                     Z-ADD*ZERO     WN0014           Day 5 Productio
     C                     Z-ADD*ZERO     WN0015           Day 6 Productio
     C                     Z-ADD*ZERO     WN0016           Day 7 Productio
     C                     Z-ADD*ZERO     WN0017           Day 8 Productio
     C                     Z-ADD*ZERO     WN0042           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0043           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0044           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0045           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0046           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0047           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0048           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0049           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0018           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0019           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0020           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0021           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0022           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0023           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0024           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0025           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0026           Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0027           Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0028           Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0029           Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0030           Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0031           Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0032           Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0033           Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0034           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0035           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0036           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0037           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0038           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0039           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0040           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0041           Day 8 Availabil
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Warehouse Code EQ DB1.Warehouse Code
     C           WL0007    IFEQ WAAJCD                     *IF
      * Rtv PA Dtl SD-6       IF
      *
     C                     Z-ADD*ZERO     WN0100  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0101  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0102  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0103  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0104  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0105  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0106  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0107  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0108  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0109  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0110  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0111  92       PS Weight Sched
      *
      * Rtv PA In/Sh SD-6     IF
      * Retrieve Inventory and Scheduled Shipments
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0082           Company Number
     C                     MOVEL'S'       WL0083    P      Production Type
     C                     Z-ADD##JDT     WL0084           Production Date
     C                     Z-ADDWL0009    WL0085           Item Code
     C                     MOVELWAAJCD    WL0086    P      Warehouse Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0087    WN0100           PS Weight Inv O
     C                     Z-ADDWL0088    WN0101           PS Pieces Inv O
     C                     Z-ADDWL0089    WN0102           PS Weight Inv A
     C                     Z-ADDWL0090    WN0103           PS Pieces Inv A
     C                     Z-ADDWL0091    WN0104           PS Weight Ship
     C                     Z-ADDWL0092    WN0105           PS Pieces Ship
     C                     Z-ADDWL0093    WN0106           PS Weight Prod
     C                     Z-ADDWL0094    WN0107           PS Pieces Prod
     C                     Z-ADDWL0095    WN0108           PS Weight Inv A
     C                     Z-ADDWL0096    WN0109           PS Pieces Inv A
     C                     Z-ADDWL0097    WN0110           PS Weight Order
     C                     Z-ADDWL0098    WN0111           PS Weight Sched
      * Inventory / Sales if Chilling Time > 0
      * CASE: Primary
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0025    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0077    IFGT *ZERO                      *IF
     C           WL0079    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Unit Weight or Pieces
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           WL0011    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0112 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0113 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0112    WL0103           Weight Schedule
     C                     Z-ADDWN0113    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0112           Weight Schedule
     C                     Z-ADDWL0104    WN0113           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0028           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0052           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0052           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0112    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0044           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0060    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0060           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0028           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0052           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0052           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0052    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0052           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0113    WL0044           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0060    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0060           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0028    ADD  WL0060    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0052    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0068           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           WL0012    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0114 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0115 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0114    WL0103           Weight Schedule
     C                     Z-ADDWN0115    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0114           Weight Schedule
     C                     Z-ADDWL0104    WN0115           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0029           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0053           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0053           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0114    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0045           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0061    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0061           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0029           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0053           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0053           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0053    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0053           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0115    WL0045           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0061    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0061           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0029    ADD  WL0061    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0053    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0069           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           WL0013    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0116 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0117 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0116    WL0103           Weight Schedule
     C                     Z-ADDWN0117    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0116           Weight Schedule
     C                     Z-ADDWL0104    WN0117           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0030           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0054           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0054           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0116    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0046           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0062    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0062           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0030           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0054           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0054           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0054    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0054           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0117    WL0046           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0062    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0062           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0030    ADD  WL0062    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0054    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0070           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           WL0014    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0118 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0119 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0118    WL0103           Weight Schedule
     C                     Z-ADDWN0119    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0118           Weight Schedule
     C                     Z-ADDWL0104    WN0119           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0031           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0055           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0055           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0118    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0047           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0063    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0063           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0031           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0055           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0055           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0055    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0055           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0119    WL0047           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0063    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0063           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0031    ADD  WL0063    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0055    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0071           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           WL0015    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0120 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0121 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0120    WL0103           Weight Schedule
     C                     Z-ADDWN0121    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0120           Weight Schedule
     C                     Z-ADDWL0104    WN0121           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0032           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0056           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0056           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0120    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0048           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0064    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0064           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0032           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0056           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0056           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0056    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0056           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0121    WL0048           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0064    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0064           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0032    ADD  WL0064    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0056    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0072           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           WL0016    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0122 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0123 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0122    WL0103           Weight Schedule
     C                     Z-ADDWN0123    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0122           Weight Schedule
     C                     Z-ADDWL0104    WN0123           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0033           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0057           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0057           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0122    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0049           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0065    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0065           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0033           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0057           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0057           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0057    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0057           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0123    WL0049           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0065    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0065           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0033    ADD  WL0065    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0057    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0073           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           WL0017    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0124 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0125 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0124    WL0103           Weight Schedule
     C                     Z-ADDWN0125    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0124           Weight Schedule
     C                     Z-ADDWL0104    WN0125           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ *BLANK                     *IF
     C           WL0079    OREQ 'N'
     C           WL0077    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0100    ADD  WN0102    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0034           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0058           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0106    ADD  WN0108    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0058           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0124    DIV  WL0077    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0050           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0104    DIV  WL0077    W0WJ01    H      *Synon (15,0) w
     C           WL0066    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0066           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0101    ADD  WN0103    W0WJ01           *Synon (15,0) w
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0034           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0058           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0108    DIV  WL0077    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0058           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0058    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0058           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0125    WL0050           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WL0066    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0066           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0034    ADD  WL0066    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0058    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0074           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0025    IFEQ 'L'                        *IF
     C           WL0026    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           WL0011    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0126 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0127 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0126    WL0103           Weight Schedule
     C                     Z-ADDWN0127    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0126           Weight Schedule
     C                     Z-ADDWL0104    WN0127           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0126    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0044           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0028           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0052           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0052           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0060    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0060           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0028    ADD  WL0060    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0052    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0068           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           WL0012    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0128 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0129 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0128    WL0103           Weight Schedule
     C                     Z-ADDWN0129    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0128           Weight Schedule
     C                     Z-ADDWL0104    WN0129           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0128    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0045           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0029           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0053           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0053           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0061    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0061           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0029    ADD  WL0061    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0053    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0069           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           WL0013    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0130 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0131 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0130    WL0103           Weight Schedule
     C                     Z-ADDWN0131    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0130           Weight Schedule
     C                     Z-ADDWL0104    WN0131           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0130    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0046           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0030           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0054           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0054           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0062    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0062           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0030    ADD  WL0062    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0054    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0070           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           WL0014    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0132 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0133 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0132    WL0103           Weight Schedule
     C                     Z-ADDWN0133    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0132           Weight Schedule
     C                     Z-ADDWL0104    WN0133           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0132    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0047           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0031           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0055           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0055           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0063    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0063           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0031    ADD  WL0063    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0055    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0071           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           WL0015    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0134 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0135 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0134    WL0103           Weight Schedule
     C                     Z-ADDWN0135    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0134           Weight Schedule
     C                     Z-ADDWL0104    WN0135           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0134    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0048           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0032           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0056           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0056           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0064    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0064           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0032    ADD  WL0064    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0056    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0072           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           WL0016    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0136 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0137 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0136    WL0103           Weight Schedule
     C                     Z-ADDWN0137    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0136           Weight Schedule
     C                     Z-ADDWL0104    WN0137           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0136    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0049           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0033           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0057           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0057           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0065    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0065           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0033    ADD  WL0065    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0057    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0073           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           WL0017    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0138 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0139 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * ---- 02/21/11 PKD Calculate Weight based on Unit Weight. ----
      * OVERRIDE: Weight
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0079    IFEQ 'Y'                        *IF
     C           WL0080    IFGT *ZERO                      *IF
     C           WL0081    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PS Weight Inv On-Hand
      * LCL.PS Weight Inv On-Hand =
      *    *COMPUTE (((x1) / (x2 * x4)) * x10)
      * x1    : PAR.PS Pieces Inv On-Hand
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0101    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0001           PS Weight Inv O
      * PS Weight Inv Adj
      * LCL.PS Weight Inv Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0103    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0002           PS Weight Inv A
      * PS Weight Inv Allocated
      * LCL.PS Weight Inv Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0109    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0003           PS Weight Inv A
      * PS Weight Prod Allocated
      * LCL.PS Weight Prod Allocated =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0107    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0004           PS Weight Prod
      * PS Weight Ship Cut Adj
      * LCL.PS Weight Ship Cut Adj =
      *    *COMPUTE (((x3) / (x2 * x4)) * x10)
      * x3    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x10   : PAR.Unit Weight
     C           WL0080    MULT WL0081    W0WD02           *Synon (17,7) w
     C           WN0105    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WL0077    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0005           PS Weight Ship
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0100    YL0001           PS Weight Inv O
     C                     Z-ADDWN0102    YL0002           PS Weight Inv A
     C                     Z-ADDWN0108    YL0003           PS Weight Inv A
     C                     Z-ADDWN0106    YL0004           PS Weight Prod
     C                     Z-ADDWN0104    YL0005           PS Weight Ship
     C                     END                             *FI
      * -------------------------------------------------------------
      * Scheduled Shipments
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0099           Company Number
     C                     Z-ADDWL0009    WL0100           Item Code
     C                     MOVELWAAJCD    WL0101    P      Warehouse Code
     C                     Z-ADD##JDT     WL0102           Scheduled Ship
     C                     Z-ADDWN0138    WL0103           Weight Schedule
     C                     Z-ADDWN0139    WL0104           Quantity Schedu
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0103    WN0138           Weight Schedule
     C                     Z-ADDWL0104    WN0139           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0138    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0050           Quantity Sched
     C                     END                             *FI
      * 02/21/11 PKD Replaced with LCL context instead of PAR.
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0001    ADD  YL0002    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0034           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           WL0078    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : LCL.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0058           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : LCL.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : LCL.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           YL0003    ADD  YL0004    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  WL0026    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0058           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : LCL.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0005    DIV  WL0026    W0WJ01    H      *Synon (15,0) w
     C           WL0066    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0066           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           WL0034    ADD  WL0066    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WL0058    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0074           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Inventory
      * CASE: PAR.Avail Dsp/Prt Type USR is Display
     C           WL0027    IFEQ 'D'                        *IF
     C           WL0027    OREQ 'T'
      * Total Inventory
      * PAR.Day 8 Inventory USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Inventory USR
     C           WL0028    ADD  WL0029    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  WL0030    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WL0031    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WL0032    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WL0033    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WL0034    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0035           Day 8 Inventory
     C                     END                             *FI
      * Rtv PA Dtl SD-6 WHS   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0008    WL0109           Company Number
     C                     Z-ADDWL0009    WL0110           Item Code
     C                     MOVELWAAJCD    WL0111    P      Warehouse Code
     C                     Z-ADDWL0010    WL0112           PS Available Sh
     C                     Z-ADDWL0011    WL0113           Avail Ship Date
     C                     Z-ADDWL0012    WL0114           Avail Ship Date
     C                     Z-ADDWL0013    WL0115           Avail Ship Date
     C                     Z-ADDWL0014    WL0116           Avail Ship Date
     C                     Z-ADDWL0015    WL0117           Avail Ship Date
     C                     Z-ADDWL0016    WL0118           Avail Ship Date
     C                     Z-ADDWL0017    WL0119           Avail Ship Date
     C                     Z-ADDWL0028    WL0127           Day 1 Inventory
     C                     Z-ADDWL0029    WL0128           Day 2 Inventory
     C                     Z-ADDWL0030    WL0129           Day 3 Inventory
     C                     Z-ADDWL0031    WL0130           Day 4 Inventory
     C                     Z-ADDWL0032    WL0131           Day 5 Inventory
     C                     Z-ADDWL0033    WL0132           Day 6 Inventory
     C                     Z-ADDWL0034    WL0133           Day 7 Inventory
     C                     Z-ADDWL0036    WL0134           Day 1 Productio
     C                     Z-ADDWL0037    WL0135           Day 2 Productio
     C                     Z-ADDWL0038    WL0136           Day 3 Productio
     C                     Z-ADDWL0039    WL0137           Day 4 Productio
     C                     Z-ADDWL0040    WL0138           Day 5 Productio
     C                     Z-ADDWL0041    WL0139           Day 6 Productio
     C                     Z-ADDWL0042    WL0140           Day 7 Productio
     C                     Z-ADDWL0052    WL0141           Day 1 Sales USR
     C                     Z-ADDWL0053    WL0142           Day 2 Sales USR
     C                     Z-ADDWL0054    WL0143           Day 3 Sales USR
     C                     Z-ADDWL0055    WL0144           Day 4 Sales USR
     C                     Z-ADDWL0056    WL0145           Day 5 Sales USR
     C                     Z-ADDWL0057    WL0146           Day 6 Sales USR
     C                     Z-ADDWL0058    WL0147           Day 7 Sales USR
     C                     Z-ADDWL0060    WL0148           Day 1 Adjustmen
     C                     Z-ADDWL0061    WL0149           Day 2 Adjustmen
     C                     Z-ADDWL0062    WL0150           Day 3 Adjustmen
     C                     Z-ADDWL0063    WL0151           Day 4 Adjustmen
     C                     Z-ADDWL0064    WL0152           Day 5 Adjustmen
     C                     Z-ADDWL0065    WL0153           Day 6 Adjustmen
     C                     Z-ADDWL0066    WL0154           Day 7 Adjustmen
     C                     Z-ADDWL0068    WL0155           Day 1 Availabil
     C                     Z-ADDWL0069    WL0156           Day 2 Availabil
     C                     Z-ADDWL0070    WL0157           Day 3 Availabil
     C                     Z-ADDWL0071    WL0158           Day 4 Availabil
     C                     Z-ADDWL0072    WL0159           Day 5 Availabil
     C                     Z-ADDWL0073    WL0160           Day 6 Availabil
     C                     Z-ADDWL0074    WL0161           Day 7 Availabil
     C                     MOVELWL0025    WL0162    P      Primary/Load St
     C                     Z-ADDWL0026    WL0163           Load Size USR
     C                     Z-ADDWL0044    WL0164           Day 1 Sched Shi
     C                     Z-ADDWL0045    WL0165           Day 2 Sched Shi
     C                     Z-ADDWL0046    WL0166           Day 3 Sched Shi
     C                     Z-ADDWL0047    WL0167           Day 4 Sched Shi
     C                     Z-ADDWL0048    WL0168           Day 5 Sched Shi
     C                     Z-ADDWL0049    WL0169           Day 6 Sched Shi
     C                     Z-ADDWL0050    WL0170           Day 7 Sched Shi
     C                     MOVELWL0027    WL0171    P      Avail Dsp/Prt T
     C                     MOVELWL0076    WL0172    P      U/M - Primary
     C                     Z-ADDWL0077    WL0173           Unit Weight
     C                     Z-ADDWL0078    WL0174           Fresh Chilling
     C                     MOVELWL0079    WL0175    P      Piece Count Ite
     C                     Z-ADDWL0080    WL0176           Pieces Per Bag
     C                     Z-ADDWL0081    WL0177           Bags Per Unit
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0120    WL0018           USR Day 1
     C                     Z-ADDWL0121    WL0019           USR Day 2
     C                     Z-ADDWL0122    WL0020           USR Day 3
     C                     Z-ADDWL0123    WL0021           USR Day 4
     C                     Z-ADDWL0124    WL0022           USR Day 5
     C                     Z-ADDWL0125    WL0023           USR Day 6
     C                     Z-ADDWL0126    WL0024           USR Day 7
     C                     Z-ADDWL0134    WL0036           Day 1 Productio
     C                     Z-ADDWL0135    WL0037           Day 2 Productio
     C                     Z-ADDWL0136    WL0038           Day 3 Productio
     C                     Z-ADDWL0137    WL0039           Day 4 Productio
     C                     Z-ADDWL0138    WL0040           Day 5 Productio
     C                     Z-ADDWL0139    WL0041           Day 6 Productio
     C                     Z-ADDWL0140    WL0042           Day 7 Productio
     C                     Z-ADDWL0141    WL0052           Day 1 Sales USR
     C                     Z-ADDWL0142    WL0053           Day 2 Sales USR
     C                     Z-ADDWL0143    WL0054           Day 3 Sales USR
     C                     Z-ADDWL0144    WL0055           Day 4 Sales USR
     C                     Z-ADDWL0145    WL0056           Day 5 Sales USR
     C                     Z-ADDWL0146    WL0057           Day 6 Sales USR
     C                     Z-ADDWL0147    WL0058           Day 7 Sales USR
     C                     Z-ADDWL0148    WL0060           Day 1 Adjustmen
     C                     Z-ADDWL0149    WL0061           Day 2 Adjustmen
     C                     Z-ADDWL0150    WL0062           Day 3 Adjustmen
     C                     Z-ADDWL0151    WL0063           Day 4 Adjustmen
     C                     Z-ADDWL0152    WL0064           Day 5 Adjustmen
     C                     Z-ADDWL0153    WL0065           Day 6 Adjustmen
     C                     Z-ADDWL0154    WL0066           Day 7 Adjustmen
     C                     Z-ADDWL0155    WL0068           Day 1 Availabil
     C                     Z-ADDWL0156    WL0069           Day 2 Availabil
     C                     Z-ADDWL0157    WL0070           Day 3 Availabil
     C                     Z-ADDWL0158    WL0071           Day 4 Availabil
     C                     Z-ADDWL0159    WL0072           Day 5 Availabil
     C                     Z-ADDWL0160    WL0073           Day 6 Availabil
     C                     Z-ADDWL0161    WL0074           Day 7 Availabil
     C                     Z-ADDWL0164    WL0044           Day 1 Sched Shi
     C                     Z-ADDWL0165    WL0045           Day 2 Sched Shi
     C                     Z-ADDWL0166    WL0046           Day 3 Sched Shi
     C                     Z-ADDWL0167    WL0047           Day 4 Sched Shi
     C                     Z-ADDWL0168    WL0048           Day 5 Sched Shi
     C                     Z-ADDWL0169    WL0049           Day 6 Sched Shi
     C                     Z-ADDWL0170    WL0050           Day 7 Sched Shi
      * Total Production
      * PAR.Day 8 Production USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Production USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Production USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Production USR
     C           WL0036    ADD  WL0037    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WL0038    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WL0039    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WL0040    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WL0041    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WL0042    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0043           Day 8 Productio
      * Total Sched SHipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Sched Shipments USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Sched Shipments USR
     C           WL0044    ADD  WL0045    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WL0046    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WL0047    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WL0048    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WL0049    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WL0050    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0051           Day 8 Sched Shi
      * Total Sales
      * PAR.Day 8 Sales USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Sales USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Sales USR
     C           WL0052    ADD  WL0053    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WL0054    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WL0055    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WL0056    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WL0057    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WL0058    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0059           Day 8 Sales USR
      * Total Adjustments
      * PAR.Day 8 Adjustments USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Adjustments USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Adjustments USR
     C           WL0060    ADD  WL0061    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WL0062    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WL0063    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WL0064    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WL0065    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WL0066    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0067           Day 8 Adjustmen
      * Total Availability
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.Day 2 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.Day 3 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x4    : PAR.Day 4 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x5    : PAR.Day 5 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x6    : PAR.Day 6 Availability USR
      * +     : PGM.*Synon (15,2) work field
      * x7    : PAR.Day 7 Availability USR
     C           WL0068    ADD  WL0069    W0WA05           *Synon (15,2) w
     C           W0WA05    ADD  WL0070    W0WA04           *Synon (15,2) w
     C           W0WA04    ADD  WL0071    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WL0072    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WL0073    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WL0074    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0075           Day 8 Availabil
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @ADREOJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN I8AIC3    WQSD01           Company Number
     C           *LIKE     DEFN I8HGCD    WQSD02           Item Code
     C           *LIKE     DEFN I8AJCD    WQSD03           Warehouse Code
     C           *LIKE     DEFN I8ELDT    WQSD04           Production Date
     C           *LIKE     DEFN I8V5ST    WQSD05           Production Type
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
     C                     KFLD           WQSD04           Production Date
     C                     KFLD           WQSD05           Production Type
      * Setup key
     C                     Z-ADDWL0082    WQSD01           Company Number
     C                     Z-ADDWL0085    WQSD02           Item Code
     C                     MOVELWL0086    WQSD03           Warehouse Code
     C                     Z-ADDWL0084    WQSD04           Production Date
     C                     MOVELWL0083    WQSD05           Production Type
      * Establish starting position
     C           KRSSD     SETLL@I8CPXP                    *
     C           KRSSD     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0087           PS Weight Inv O
     C                     Z-ADD*ZERO     WL0088           PS Pieces Inv O
     C                     Z-ADD*ZERO     WL0089           PS Weight Inv A
     C                     Z-ADD*ZERO     WL0090           PS Pieces Inv A
     C                     Z-ADD*ZERO     WL0091           PS Weight Ship
     C                     Z-ADD*ZERO     WL0092           PS Pieces Ship
     C                     Z-ADD*ZERO     WL0093           PS Weight Prod
     C                     Z-ADD*ZERO     WL0094           PS Pieces Prod
     C                     Z-ADD*ZERO     WL0095           PS Weight Inv A
     C                     Z-ADD*ZERO     WL0096           PS Pieces Inv A
     C                     Z-ADD*ZERO     WL0097           PS Weight Order
     C                     Z-ADD*ZERO     WL0098           PS Weight Sched
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDI8WTIN    WL0087           PS Weight Inv O
     C                     Z-ADDI8D5NB    WL0088           PS Pieces Inv O
     C                     Z-ADDI8EZWG    WL0089           PS Weight Inv A
     C                     Z-ADDI8CCNB    WL0090           PS Pieces Inv A
     C                     Z-ADDI8E0WG    WL0091           PS Weight Ship
     C                     Z-ADDI8D6NB    WL0092           PS Pieces Ship
     C                     Z-ADDI8OAWT    WL0093           PS Weight Prod
     C                     Z-ADDI8CDNB    WL0094           PS Pieces Prod
     C                     Z-ADDI8UNW2    WL0095           PS Weight Inv A
     C                     Z-ADDI8CENB    WL0096           PS Pieces Inv A
     C                     Z-ADDI8DVWG    WL0097           PS Weight Order
     C                     Z-ADDI8SHWT    WL0098           PS Weight Sched
     C           KRSSD     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0103           Weight Schedule
     C                     Z-ADD*ZERO     WL0104           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSE01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSE02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSE03           Warehouse Code
      * Define keylist
     C           KPSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Item Code
     C                     KFLD           WQSE03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Item Code
     C                     KFLD           WQSE03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0099    WQSE01           Company Number
     C                     Z-ADDWL0100    WQSE02           Item Code
     C                     MOVELWL0101    WQSE03           Warehouse Code
     C                     Z-ADDWL0102    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSE     SETLL@BGWKKG                    *
     C           KRSSE     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0105           Company Number
     C                     Z-ADDOMC4NB    WL0106           Order Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0107    WUGWST    P      Header Status
     C                     MOVELWL0108    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  OMAUWG    WL0103           Weight Schedule
     C                     ADD  OMCCQT    WL0104           Quantity Schedu
     C                     END                             *FI
     C           KRSSE     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0105    BEAIC3           Company Number
     C                     Z-ADDWL0106    BEC4NB           Order Number
      * Establish starting position
     C           KRSSF     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0107           Header Status
     C                     MOVELBEOBST    WL0108           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv PA Dtl SD-6 WHS   RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0090  1        Status Flag 1
     C                     MOVEL*BLANK    WN0091  1        Status Flag 2
     C                     MOVEL*BLANK    WN0092  1        Status Flag 3
     C                     MOVEL*BLANK    WN0093  1        Status Flag 4
     C                     MOVEL*BLANK    WN0094  1        Status Flag 5
     C                     MOVEL*BLANK    WN0095  1        Status Flag 6
     C                     MOVEL*BLANK    WN0096  1        Status Flag 7
     C                     MOVEL*BLANK    WN0097  1        Ord/Sch Sts USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WN0090           Status Flag 1
     C                     MOVEL'N'       WN0091           Status Flag 2
     C                     MOVEL'N'       WN0092           Status Flag 3
     C                     MOVEL'N'       WN0093           Status Flag 4
     C                     MOVEL'N'       WN0094           Status Flag 5
     C                     MOVEL'N'       WN0095           Status Flag 6
     C                     MOVEL'N'       WN0096           Status Flag 7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSG01           Company Number
     C           *LIKE     DEFN WBHGCD    WQSG02           Item Code
     C           *LIKE     DEFN WBAJCD    WQSG03           Warehouse Code
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Item Code
     C                     KFLD           WQSG03           Warehouse Code
     C                     KFLD           WBGPDT           PS Available Sh
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Item Code
     C                     KFLD           WQSG03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0109    WQSG01           Company Number
     C                     Z-ADDWL0110    WQSG02           Item Code
     C                     MOVELWL0111    WQSG03           Warehouse Code
     C                     Z-ADDWL0112    WBGPDT           PS Available Sh
      * Establish starting position
     C           KPSSG     SETLL@I8CPDZ                    *
     C           KRSSG     READE@I8CPDZ                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Quit:  Available Ship Date > Day 7
      * CASE: DB1.PS Available Ship Date GT PAR.Avail Ship Date 7 USR
     C           WBGPDT    IFGT WL0119                     *IF
      *
     C                     MOVEL*BLANK    WN0098  1        Ord/Sch Sts USR
      *
      * Rtv PA Ship Only-21  IF
      * 02/21/11 PKD Do not need to Override Weight for Piece Count Items
     C                     MOVEL'S'       WN0098           Ord/Sch Sts USR
      * day 1
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 1 USR is Entered
      *   |- c2    : PAR.Status Flag 1  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0113    IFNE *ZERO                      *IF
     C           WN0090    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0113    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 1
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0164           Day 1 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0164           Day 1 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0164           Day 1 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 2
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 2 USR is Entered
      *   |- c2    : PAR.Status Flag 2  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0114    IFNE *ZERO                      *IF
     C           WN0091    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0114    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 2
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0165           Day 2 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0165           Day 2 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0165           Day 2 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 3
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 3 USR is Entered
      *   |- c2    : PAR.Status Flag 3  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0115    IFNE *ZERO                      *IF
     C           WN0092    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0115    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 3
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0166           Day 3 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0166           Day 3 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0166           Day 3 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 4
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 4 USR is Entered
      *   |- c2    : PAR.Status Flag 4  Y/N is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0116    IFNE *ZERO                      *IF
     C           WN0093    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0116    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 4
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0167           Day 4 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0167           Day 4 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0167           Day 4 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 5
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 5 USR is Entered
      *   |- c2    : PAR.Status Flag 5  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0117    IFNE *ZERO                      *IF
     C           WN0094    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0117    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 5
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0168           Day 5 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0168           Day 5 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0168           Day 5 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 6 USR is Entered
      *   |- c2    : PAR.Status Flag 6  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0118    IFNE *ZERO                      *IF
     C           WN0095    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0118    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 6
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0169           Day 6 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0169           Day 6 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0169           Day 6 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 7
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 7 USR is Entered
      *   |- c2    : PAR.Status Flag 7  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0119    IFNE *ZERO                      *IF
     C           WN0096    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0119    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 7
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0170           Day 7 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0170           Day 7 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0170           Day 7 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 8
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 8 USR is Entered
      *   |- c2    : PAR.Status Flag 8  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 8
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 8 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 8 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 8 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 9
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 9 USR is Entered
      *   |- c2    : PAR.Status Flag 9  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 9
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 9 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 9 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 9 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 10
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 10 USR is Entered
      *   |- c2    : PAR.Status Flag 10 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 10
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 10 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 10 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 10 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 11
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 11 USR is Entered
      *   |- c2    : PAR.Status Flag 11 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 11
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 11 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 11 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 11 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 12
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 12 USR is Entered
      *   |- c2    : PAR.Status Flag 12 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 12
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 12 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 12 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 12 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 13
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 13 USR is Entered
      *   |- c2    : PAR.Status Flag 13 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 13
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 13 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 13 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 13 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 14
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 14 USR is Entered
      *   |- c2    : PAR.Status Flag 14 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 14
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 14 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 14 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 14 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 15
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 15 USR is Entered
      *   |- c2    : PAR.Status Flag 15 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 15
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 15 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 15 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 15 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 16
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 16 USR is Entered
      *   |- c2    : PAR.Status Flag 16 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 16
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 16 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 16 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 16 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 17
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 17 USR is Entered
      *   |- c2    : PAR.Status Flag 17 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 17
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 17 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 17 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 17 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 18
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 18 USR is Entered
      *   |- c2    : PAR.Status Flag 18 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 18
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 18 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 18 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 18 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 19
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 19 USR is Entered
      *   |- c2    : PAR.Status Flag 19 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 19
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 19 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 19 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 19 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 20
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 20 USR is Entered
      *   |- c2    : PAR.Status Flag 20 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 20
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 20 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 20 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 20 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 21
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 21 USR is Entered
      *   |- c2    : PAR.Status Flag 21 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0098    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 21
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 21 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 21 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 21 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO SGEXIT                     *QUIT
     C                     END                             *FI
      * CASE: DB1.PS Available Ship Date GE JOB.*Job date
     C           WBGPDT    IFGE ##JDT                      *IF
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * calculate PA with Unit Weight
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PS Available Ship Date
     C           WL0113    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0113    WQ0001  70       Avail Ship Date
     C           WL0120    PARM *ZERO     WQ0002  70       Production Date
     C                     PARM WL0127    WQ0003  61       Quantity Invent
     C           WL0134    PARM WL0134    WQ0004  61       Quantity Produc
     C           WL0141    PARM WL0141    WQ0005  61       Quantity Sales
     C           WL0148    PARM WL0148    WQ0006  61       Quantity Adjust
     C           WL0155    PARM WL0155    WQ0007  61       Quantity Availa
     C           WL0164    PARM WL0164    WQ0008  61       Quantity Sched
     C                     PARM WBAIC3    WQ0009  30       Company Number
     C                     PARM WBV5ST    WQ0010  1        Production Type
     C                     PARM WBELDT    WQ0011  70       Production Date
     C                     PARM WBHGCD    WQ0012  70       Item Code
     C                     PARM WBAJCD    WQ0013  3        Warehouse Code
     C                     PARM WBDXWG    WQ0014  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0015  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0016  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0017  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0018  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0019  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0020  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0021  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0022  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0023  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0024  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0025 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0026  92       PS Weight Order
     C                     PARM WBQTAS    WQ0027  92       PS Weight Sched
     C                     PARM WL0172    WQ0028  2        U/M - Primary
     C                     PARM WL0173    WQ0029 112       Unit Weight
     C                     PARM WL0174    WQ0030  52       Fresh Chilling
     C                     PARM WL0175    WQ0031  1        Piece Count Ite
     C                     PARM WL0176    WQ0032  70       Pieces Per Bag
     C                     PARM WL0177    WQ0033  70       Bags Per Unit
     C                     PARM WL0171    WQ0034  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0090           Status Flag 1
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PS Available Ship Date
     C           WL0114    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0114    WQ0035  70       Avail Ship Date
     C           WL0121    PARM *ZERO     WQ0036  70       Production Date
     C                     PARM WL0128    WQ0037  61       Quantity Invent
     C           WL0135    PARM WL0135    WQ0038  61       Quantity Produc
     C           WL0142    PARM WL0142    WQ0039  61       Quantity Sales
     C           WL0149    PARM WL0149    WQ0040  61       Quantity Adjust
     C           WL0156    PARM WL0156    WQ0041  61       Quantity Availa
     C           WL0165    PARM WL0165    WQ0042  61       Quantity Sched
     C                     PARM WBAIC3    WQ0043  30       Company Number
     C                     PARM WBV5ST    WQ0044  1        Production Type
     C                     PARM WBELDT    WQ0045  70       Production Date
     C                     PARM WBHGCD    WQ0046  70       Item Code
     C                     PARM WBAJCD    WQ0047  3        Warehouse Code
     C                     PARM WBDXWG    WQ0048  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0049  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0050  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0051  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0052  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0053  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0054  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0055  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0056  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0057  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0058  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0059 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0060  92       PS Weight Order
     C                     PARM WBQTAS    WQ0061  92       PS Weight Sched
     C                     PARM WL0172    WQ0062  2        U/M - Primary
     C                     PARM WL0173    WQ0063 112       Unit Weight
     C                     PARM WL0174    WQ0064  52       Fresh Chilling
     C                     PARM WL0175    WQ0065  1        Piece Count Ite
     C                     PARM WL0176    WQ0066  70       Pieces Per Bag
     C                     PARM WL0177    WQ0067  70       Bags Per Unit
     C                     PARM WL0171    WQ0068  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0091           Status Flag 2
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PS Available Ship Date
     C           WL0115    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0115    WQ0069  70       Avail Ship Date
     C           WL0122    PARM *ZERO     WQ0070  70       Production Date
     C                     PARM WL0129    WQ0071  61       Quantity Invent
     C           WL0136    PARM WL0136    WQ0072  61       Quantity Produc
     C           WL0143    PARM WL0143    WQ0073  61       Quantity Sales
     C           WL0150    PARM WL0150    WQ0074  61       Quantity Adjust
     C           WL0157    PARM WL0157    WQ0075  61       Quantity Availa
     C           WL0166    PARM WL0166    WQ0076  61       Quantity Sched
     C                     PARM WBAIC3    WQ0077  30       Company Number
     C                     PARM WBV5ST    WQ0078  1        Production Type
     C                     PARM WBELDT    WQ0079  70       Production Date
     C                     PARM WBHGCD    WQ0080  70       Item Code
     C                     PARM WBAJCD    WQ0081  3        Warehouse Code
     C                     PARM WBDXWG    WQ0082  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0083  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0084  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0085  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0086  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0087  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0088  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0089  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0090  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0091  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0092  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0093 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0094  92       PS Weight Order
     C                     PARM WBQTAS    WQ0095  92       PS Weight Sched
     C                     PARM WL0172    WQ0096  2        U/M - Primary
     C                     PARM WL0173    WQ0097 112       Unit Weight
     C                     PARM WL0174    WQ0098  52       Fresh Chilling
     C                     PARM WL0175    WQ0099  1        Piece Count Ite
     C                     PARM WL0176    WQ0100  70       Pieces Per Bag
     C                     PARM WL0177    WQ0101  70       Bags Per Unit
     C                     PARM WL0171    WQ0102  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0092           Status Flag 3
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PS Available Ship Date
     C           WL0116    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0116    WQ0103  70       Avail Ship Date
     C           WL0123    PARM *ZERO     WQ0104  70       Production Date
     C                     PARM WL0130    WQ0105  61       Quantity Invent
     C           WL0137    PARM WL0137    WQ0106  61       Quantity Produc
     C           WL0144    PARM WL0144    WQ0107  61       Quantity Sales
     C           WL0151    PARM WL0151    WQ0108  61       Quantity Adjust
     C           WL0158    PARM WL0158    WQ0109  61       Quantity Availa
     C           WL0167    PARM WL0167    WQ0110  61       Quantity Sched
     C                     PARM WBAIC3    WQ0111  30       Company Number
     C                     PARM WBV5ST    WQ0112  1        Production Type
     C                     PARM WBELDT    WQ0113  70       Production Date
     C                     PARM WBHGCD    WQ0114  70       Item Code
     C                     PARM WBAJCD    WQ0115  3        Warehouse Code
     C                     PARM WBDXWG    WQ0116  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0117  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0118  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0119  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0120  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0121  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0122  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0123  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0124  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0125  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0126  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0127 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0128  92       PS Weight Order
     C                     PARM WBQTAS    WQ0129  92       PS Weight Sched
     C                     PARM WL0172    WQ0130  2        U/M - Primary
     C                     PARM WL0173    WQ0131 112       Unit Weight
     C                     PARM WL0174    WQ0132  52       Fresh Chilling
     C                     PARM WL0175    WQ0133  1        Piece Count Ite
     C                     PARM WL0176    WQ0134  70       Pieces Per Bag
     C                     PARM WL0177    WQ0135  70       Bags Per Unit
     C                     PARM WL0171    WQ0136  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0093           Status Flag 4
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PS Available Ship Date
     C           WL0117    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0117    WQ0137  70       Avail Ship Date
     C           WL0124    PARM *ZERO     WQ0138  70       Production Date
     C                     PARM WL0131    WQ0139  61       Quantity Invent
     C           WL0138    PARM WL0138    WQ0140  61       Quantity Produc
     C           WL0145    PARM WL0145    WQ0141  61       Quantity Sales
     C           WL0152    PARM WL0152    WQ0142  61       Quantity Adjust
     C           WL0159    PARM WL0159    WQ0143  61       Quantity Availa
     C           WL0168    PARM WL0168    WQ0144  61       Quantity Sched
     C                     PARM WBAIC3    WQ0145  30       Company Number
     C                     PARM WBV5ST    WQ0146  1        Production Type
     C                     PARM WBELDT    WQ0147  70       Production Date
     C                     PARM WBHGCD    WQ0148  70       Item Code
     C                     PARM WBAJCD    WQ0149  3        Warehouse Code
     C                     PARM WBDXWG    WQ0150  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0151  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0152  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0153  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0154  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0155  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0156  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0157  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0158  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0159  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0160  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0161 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0162  92       PS Weight Order
     C                     PARM WBQTAS    WQ0163  92       PS Weight Sched
     C                     PARM WL0172    WQ0164  2        U/M - Primary
     C                     PARM WL0173    WQ0165 112       Unit Weight
     C                     PARM WL0174    WQ0166  52       Fresh Chilling
     C                     PARM WL0175    WQ0167  1        Piece Count Ite
     C                     PARM WL0176    WQ0168  70       Pieces Per Bag
     C                     PARM WL0177    WQ0169  70       Bags Per Unit
     C                     PARM WL0171    WQ0170  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0094           Status Flag 5
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PS Available Ship Date
     C           WL0118    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0118    WQ0171  70       Avail Ship Date
     C           WL0125    PARM *ZERO     WQ0172  70       Production Date
     C                     PARM WL0132    WQ0173  61       Quantity Invent
     C           WL0139    PARM WL0139    WQ0174  61       Quantity Produc
     C           WL0146    PARM WL0146    WQ0175  61       Quantity Sales
     C           WL0153    PARM WL0153    WQ0176  61       Quantity Adjust
     C           WL0160    PARM WL0160    WQ0177  61       Quantity Availa
     C           WL0169    PARM WL0169    WQ0178  61       Quantity Sched
     C                     PARM WBAIC3    WQ0179  30       Company Number
     C                     PARM WBV5ST    WQ0180  1        Production Type
     C                     PARM WBELDT    WQ0181  70       Production Date
     C                     PARM WBHGCD    WQ0182  70       Item Code
     C                     PARM WBAJCD    WQ0183  3        Warehouse Code
     C                     PARM WBDXWG    WQ0184  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0185  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0186  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0187  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0188  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0189  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0190  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0191  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0192  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0193  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0194  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0195 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0196  92       PS Weight Order
     C                     PARM WBQTAS    WQ0197  92       PS Weight Sched
     C                     PARM WL0172    WQ0198  2        U/M - Primary
     C                     PARM WL0173    WQ0199 112       Unit Weight
     C                     PARM WL0174    WQ0200  52       Fresh Chilling
     C                     PARM WL0175    WQ0201  1        Piece Count Ite
     C                     PARM WL0176    WQ0202  70       Pieces Per Bag
     C                     PARM WL0177    WQ0203  70       Bags Per Unit
     C                     PARM WL0171    WQ0204  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0095           Status Flag 6
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PS Available Ship Date
     C           WL0119    IFEQ WBGPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0119    WQ0205  70       Avail Ship Date
     C           WL0126    PARM *ZERO     WQ0206  70       Production Date
     C                     PARM WL0133    WQ0207  61       Quantity Invent
     C           WL0140    PARM WL0140    WQ0208  61       Quantity Produc
     C           WL0147    PARM WL0147    WQ0209  61       Quantity Sales
     C           WL0154    PARM WL0154    WQ0210  61       Quantity Adjust
     C           WL0161    PARM WL0161    WQ0211  61       Quantity Availa
     C           WL0170    PARM WL0170    WQ0212  61       Quantity Sched
     C                     PARM WBAIC3    WQ0213  30       Company Number
     C                     PARM WBV5ST    WQ0214  1        Production Type
     C                     PARM WBELDT    WQ0215  70       Production Date
     C                     PARM WBHGCD    WQ0216  70       Item Code
     C                     PARM WBAJCD    WQ0217  3        Warehouse Code
     C                     PARM WBDXWG    WQ0218  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0219  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0220  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0221  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0222  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0223  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0224  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0225  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0226  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0227  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0228  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0229 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0230  92       PS Weight Order
     C                     PARM WBQTAS    WQ0231  92       PS Weight Sched
     C                     PARM WL0172    WQ0232  2        U/M - Primary
     C                     PARM WL0173    WQ0233 112       Unit Weight
     C                     PARM WL0174    WQ0234  52       Fresh Chilling
     C                     PARM WL0175    WQ0235  1        Piece Count Ite
     C                     PARM WL0176    WQ0236  70       Pieces Per Bag
     C                     PARM WL0177    WQ0237  70       Bags Per Unit
     C                     PARM WL0171    WQ0238  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0096           Status Flag 7
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate PA with Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PS Available Ship Date
     C           WL0113    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0113    WQ0239  70       Avail Ship Date
     C           WL0120    PARM *ZERO     WQ0240  70       Production Date
     C                     PARM WL0127    WQ0241  61       Quantity Invent
     C           WL0134    PARM WL0134    WQ0242  61       Quantity Produc
     C           WL0141    PARM WL0141    WQ0243  61       Quantity Sales
     C           WL0148    PARM WL0148    WQ0244  61       Quantity Adjust
     C           WL0155    PARM WL0155    WQ0245  61       Quantity Availa
     C           WL0164    PARM WL0164    WQ0246  61       Quantity Sched
     C                     PARM WBAIC3    WQ0247  30       Company Number
     C                     PARM WBV5ST    WQ0248  1        Production Type
     C                     PARM WBELDT    WQ0249  70       Production Date
     C                     PARM WBHGCD    WQ0250  70       Item Code
     C                     PARM WBAJCD    WQ0251  3        Warehouse Code
     C                     PARM WBDXWG    WQ0252  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0253  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0254  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0255  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0256  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0257  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0258  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0259  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0260  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0261  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0262  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0263 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0264  92       PS Weight Order
     C                     PARM WBD7NB    WQ0265  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0266  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0267  70       PS Pieces Sched
     C                     PARM WL0163    WQ0268  70       Load Size USR
     C                     PARM WL0171    WQ0269  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0270  52       Fresh Chilling
     C                     PARM WL0173    WQ0271 112       Unit Weight
     C                     PARM WL0175    WQ0272  1        Piece Count Ite
     C                     PARM WL0176    WQ0273  70       Pieces Per Bag
     C                     PARM WL0177    WQ0274  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0090           Status Flag 1
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PS Available Ship Date
     C           WL0114    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0114    WQ0275  70       Avail Ship Date
     C           WL0121    PARM *ZERO     WQ0276  70       Production Date
     C                     PARM WL0128    WQ0277  61       Quantity Invent
     C           WL0135    PARM WL0135    WQ0278  61       Quantity Produc
     C           WL0142    PARM WL0142    WQ0279  61       Quantity Sales
     C           WL0149    PARM WL0149    WQ0280  61       Quantity Adjust
     C           WL0156    PARM WL0156    WQ0281  61       Quantity Availa
     C           WL0165    PARM WL0165    WQ0282  61       Quantity Sched
     C                     PARM WBAIC3    WQ0283  30       Company Number
     C                     PARM WBV5ST    WQ0284  1        Production Type
     C                     PARM WBELDT    WQ0285  70       Production Date
     C                     PARM WBHGCD    WQ0286  70       Item Code
     C                     PARM WBAJCD    WQ0287  3        Warehouse Code
     C                     PARM WBDXWG    WQ0288  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0289  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0290  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0291  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0292  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0293  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0294  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0295  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0296  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0297  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0298  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0299 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0300  92       PS Weight Order
     C                     PARM WBD7NB    WQ0301  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0302  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0303  70       PS Pieces Sched
     C                     PARM WL0163    WQ0304  70       Load Size USR
     C                     PARM WL0171    WQ0305  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0306  52       Fresh Chilling
     C                     PARM WL0173    WQ0307 112       Unit Weight
     C                     PARM WL0175    WQ0308  1        Piece Count Ite
     C                     PARM WL0176    WQ0309  70       Pieces Per Bag
     C                     PARM WL0177    WQ0310  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0091           Status Flag 2
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PS Available Ship Date
     C           WL0115    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0115    WQ0311  70       Avail Ship Date
     C           WL0122    PARM *ZERO     WQ0312  70       Production Date
     C                     PARM WL0129    WQ0313  61       Quantity Invent
     C           WL0136    PARM WL0136    WQ0314  61       Quantity Produc
     C           WL0143    PARM WL0143    WQ0315  61       Quantity Sales
     C           WL0150    PARM WL0150    WQ0316  61       Quantity Adjust
     C           WL0157    PARM WL0157    WQ0317  61       Quantity Availa
     C           WL0166    PARM WL0166    WQ0318  61       Quantity Sched
     C                     PARM WBAIC3    WQ0319  30       Company Number
     C                     PARM WBV5ST    WQ0320  1        Production Type
     C                     PARM WBELDT    WQ0321  70       Production Date
     C                     PARM WBHGCD    WQ0322  70       Item Code
     C                     PARM WBAJCD    WQ0323  3        Warehouse Code
     C                     PARM WBDXWG    WQ0324  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0325  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0326  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0327  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0328  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0329  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0330  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0331  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0332  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0333  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0334  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0335 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0336  92       PS Weight Order
     C                     PARM WBD7NB    WQ0337  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0338  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0339  70       PS Pieces Sched
     C                     PARM WL0163    WQ0340  70       Load Size USR
     C                     PARM WL0171    WQ0341  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0342  52       Fresh Chilling
     C                     PARM WL0173    WQ0343 112       Unit Weight
     C                     PARM WL0175    WQ0344  1        Piece Count Ite
     C                     PARM WL0176    WQ0345  70       Pieces Per Bag
     C                     PARM WL0177    WQ0346  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0092           Status Flag 3
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PS Available Ship Date
     C           WL0116    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0116    WQ0347  70       Avail Ship Date
     C           WL0123    PARM *ZERO     WQ0348  70       Production Date
     C                     PARM WL0130    WQ0349  61       Quantity Invent
     C           WL0137    PARM WL0137    WQ0350  61       Quantity Produc
     C           WL0144    PARM WL0144    WQ0351  61       Quantity Sales
     C           WL0151    PARM WL0151    WQ0352  61       Quantity Adjust
     C           WL0158    PARM WL0158    WQ0353  61       Quantity Availa
     C           WL0167    PARM WL0167    WQ0354  61       Quantity Sched
     C                     PARM WBAIC3    WQ0355  30       Company Number
     C                     PARM WBV5ST    WQ0356  1        Production Type
     C                     PARM WBELDT    WQ0357  70       Production Date
     C                     PARM WBHGCD    WQ0358  70       Item Code
     C                     PARM WBAJCD    WQ0359  3        Warehouse Code
     C                     PARM WBDXWG    WQ0360  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0361  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0362  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0363  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0364  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0365  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0366  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0367  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0368  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0369  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0370  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0371 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0372  92       PS Weight Order
     C                     PARM WBD7NB    WQ0373  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0374  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0375  70       PS Pieces Sched
     C                     PARM WL0163    WQ0376  70       Load Size USR
     C                     PARM WL0171    WQ0377  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0378  52       Fresh Chilling
     C                     PARM WL0173    WQ0379 112       Unit Weight
     C                     PARM WL0175    WQ0380  1        Piece Count Ite
     C                     PARM WL0176    WQ0381  70       Pieces Per Bag
     C                     PARM WL0177    WQ0382  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0093           Status Flag 4
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PS Available Ship Date
     C           WL0117    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0117    WQ0383  70       Avail Ship Date
     C           WL0124    PARM *ZERO     WQ0384  70       Production Date
     C                     PARM WL0131    WQ0385  61       Quantity Invent
     C           WL0138    PARM WL0138    WQ0386  61       Quantity Produc
     C           WL0145    PARM WL0145    WQ0387  61       Quantity Sales
     C           WL0152    PARM WL0152    WQ0388  61       Quantity Adjust
     C           WL0159    PARM WL0159    WQ0389  61       Quantity Availa
     C           WL0168    PARM WL0168    WQ0390  61       Quantity Sched
     C                     PARM WBAIC3    WQ0391  30       Company Number
     C                     PARM WBV5ST    WQ0392  1        Production Type
     C                     PARM WBELDT    WQ0393  70       Production Date
     C                     PARM WBHGCD    WQ0394  70       Item Code
     C                     PARM WBAJCD    WQ0395  3        Warehouse Code
     C                     PARM WBDXWG    WQ0396  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0397  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0398  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0399  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0400  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0401  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0402  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0403  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0404  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0405  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0406  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0407 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0408  92       PS Weight Order
     C                     PARM WBD7NB    WQ0409  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0410  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0411  70       PS Pieces Sched
     C                     PARM WL0163    WQ0412  70       Load Size USR
     C                     PARM WL0171    WQ0413  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0414  52       Fresh Chilling
     C                     PARM WL0173    WQ0415 112       Unit Weight
     C                     PARM WL0175    WQ0416  1        Piece Count Ite
     C                     PARM WL0176    WQ0417  70       Pieces Per Bag
     C                     PARM WL0177    WQ0418  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0094           Status Flag 5
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PS Available Ship Date
     C           WL0118    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0118    WQ0419  70       Avail Ship Date
     C           WL0125    PARM *ZERO     WQ0420  70       Production Date
     C                     PARM WL0132    WQ0421  61       Quantity Invent
     C           WL0139    PARM WL0139    WQ0422  61       Quantity Produc
     C           WL0146    PARM WL0146    WQ0423  61       Quantity Sales
     C           WL0153    PARM WL0153    WQ0424  61       Quantity Adjust
     C           WL0160    PARM WL0160    WQ0425  61       Quantity Availa
     C           WL0169    PARM WL0169    WQ0426  61       Quantity Sched
     C                     PARM WBAIC3    WQ0427  30       Company Number
     C                     PARM WBV5ST    WQ0428  1        Production Type
     C                     PARM WBELDT    WQ0429  70       Production Date
     C                     PARM WBHGCD    WQ0430  70       Item Code
     C                     PARM WBAJCD    WQ0431  3        Warehouse Code
     C                     PARM WBDXWG    WQ0432  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0433  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0434  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0435  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0436  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0437  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0438  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0439  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0440  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0441  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0442  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0443 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0444  92       PS Weight Order
     C                     PARM WBD7NB    WQ0445  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0446  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0447  70       PS Pieces Sched
     C                     PARM WL0163    WQ0448  70       Load Size USR
     C                     PARM WL0171    WQ0449  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0450  52       Fresh Chilling
     C                     PARM WL0173    WQ0451 112       Unit Weight
     C                     PARM WL0175    WQ0452  1        Piece Count Ite
     C                     PARM WL0176    WQ0453  70       Pieces Per Bag
     C                     PARM WL0177    WQ0454  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0095           Status Flag 6
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PS Available Ship Date
     C           WL0119    IFEQ WBGPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WBB2NB' defaulted for 'PS Pieces Standard'.
      * Field '(DB1) WBPSCV' defaulted for 'PS Pieces Converted'.
      * Field '(DB1) WBB9NB' defaulted for 'PS Pieces Shipping Adj'.
      * Field '(DB1) WBCBNB' defaulted for 'PS Pieces Prod Adj'.
      * Field '(DB1) WBCDNB' defaulted for 'PS Pieces Prod Allocated'.
      * Field '(DB1) WBD7NB' defaulted for 'PS Pieces Ordered'.
      * Field '(DB1) WBEFNB' defaulted for 'PS Pieces Sched Prod'.
      * Field '(PAR) WL0173' defaulted for 'Unit Weight'.
      * Field '(PAR) WL0175' defaulted for 'Piece Count Item'.
      * Field '(PAR) WL0176' defaulted for 'Pieces Per Bag'.
      * Field '(PAR) WL0177' defaulted for 'Bags Per Unit'.
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0119    WQ0455  70       Avail Ship Date
     C           WL0126    PARM *ZERO     WQ0456  70       Production Date
     C                     PARM WL0133    WQ0457  61       Quantity Invent
     C           WL0140    PARM WL0140    WQ0458  61       Quantity Produc
     C           WL0147    PARM WL0147    WQ0459  61       Quantity Sales
     C           WL0154    PARM WL0154    WQ0460  61       Quantity Adjust
     C           WL0161    PARM WL0161    WQ0461  61       Quantity Availa
     C           WL0170    PARM WL0170    WQ0462  61       Quantity Sched
     C                     PARM WBAIC3    WQ0463  30       Company Number
     C                     PARM WBV5ST    WQ0464  1        Production Type
     C                     PARM WBELDT    WQ0465  70       Production Date
     C                     PARM WBHGCD    WQ0466  70       Item Code
     C                     PARM WBAJCD    WQ0467  3        Warehouse Code
     C                     PARM WBDXWG    WQ0468  92       PS Weight Stand
     C                     PARM WBB2NB    WQ0469  70       PS Pieces Stand
     C                     PARM WBWTCN    WQ0470  92       PS Weight Conve
     C                     PARM WBPSCV    WQ0471  70       PS Pieces Conve
     C                     PARM WBSAWT    WQ0472  92       PS Weight Shipp
     C                     PARM WBB9NB    WQ0473  70       PS Pieces Shipp
     C                     PARM WBD1WG    WQ0474  92       PS Weight Prod
     C                     PARM WBCBNB    WQ0475  70       PS Pieces Prod
     C                     PARM WBOAWT    WQ0476  92       PS Weight Prod
     C                     PARM WBCDNB    WQ0477  70       PS Pieces Prod
     C                     PARM WBBPNB    WQ0478  70       PS Pieces Whse
     C                     PARM WBGAWG    WQ0479 112       PS Weight Whse
     C                     PARM WBDVWG    WQ0480  92       PS Weight Order
     C                     PARM WBD7NB    WQ0481  70       PS Pieces Order
     C                     PARM WBQTAS    WQ0482  92       PS Weight Sched
     C                     PARM WBEFNB    WQ0483  70       PS Pieces Sched
     C                     PARM WL0163    WQ0484  70       Load Size USR
     C                     PARM WL0171    WQ0485  1        Avail Dsp/Prt T
     C                     PARM WL0174    WQ0486  52       Fresh Chilling
     C                     PARM WL0173    WQ0487 112       Unit Weight
     C                     PARM WL0175    WQ0488  1        Piece Count Ite
     C                     PARM WL0176    WQ0489  70       Pieces Per Bag
     C                     PARM WL0177    WQ0490  70       Bags Per Unit
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       WN0096           Status Flag 7
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSG     READE@I8CPDZ                  90*
     C                     ENDDO
      * USER: Exit processing
      *
     C                     MOVEL*BLANK    WN0099  1        Ord/Sch Sts USR
      *
      * Rtv PA Ship Only-21  IF
      * 02/21/11 PKD Do not need to Override Weight for Piece Count Items
     C                     MOVEL'S'       WN0099           Ord/Sch Sts USR
      * day 1
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 1 USR is Entered
      *   |- c2    : PAR.Status Flag 1  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0113    IFNE *ZERO                      *IF
     C           WN0090    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0113    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 1
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0164           Day 1 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0164           Day 1 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0164           Day 1 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 2
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 2 USR is Entered
      *   |- c2    : PAR.Status Flag 2  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0114    IFNE *ZERO                      *IF
     C           WN0091    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0114    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 2
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0165           Day 2 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0165           Day 2 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0165           Day 2 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 3
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 3 USR is Entered
      *   |- c2    : PAR.Status Flag 3  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0115    IFNE *ZERO                      *IF
     C           WN0092    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0115    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 3
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0166           Day 3 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0166           Day 3 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0166           Day 3 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 4
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 4 USR is Entered
      *   |- c2    : PAR.Status Flag 4  Y/N is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0116    IFNE *ZERO                      *IF
     C           WN0093    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0116    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 4
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0167           Day 4 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0167           Day 4 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0167           Day 4 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 5
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 5 USR is Entered
      *   |- c2    : PAR.Status Flag 5  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0117    IFNE *ZERO                      *IF
     C           WN0094    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0117    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 5
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0168           Day 5 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0168           Day 5 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0168           Day 5 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 6 USR is Entered
      *   |- c2    : PAR.Status Flag 6  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0118    IFNE *ZERO                      *IF
     C           WN0095    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0118    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 6
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0169           Day 6 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0169           Day 6 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0169           Day 6 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 7
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 7 USR is Entered
      *   |- c2    : PAR.Status Flag 7  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0119    IFNE *ZERO                      *IF
     C           WN0096    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADDWL0119    WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 7
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0170           Day 7 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0170           Day 7 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0170           Day 7 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 8
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 8 USR is Entered
      *   |- c2    : PAR.Status Flag 8  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 8
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 8 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 8 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 8 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 9
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 9 USR is Entered
      *   |- c2    : PAR.Status Flag 9  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 9
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 9 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 9 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 9 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 10
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 10 USR is Entered
      *   |- c2    : PAR.Status Flag 10 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 10
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 10 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 10 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 10 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 11
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 11 USR is Entered
      *   |- c2    : PAR.Status Flag 11 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 11
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 11 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 11 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 11 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 12
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 12 USR is Entered
      *   |- c2    : PAR.Status Flag 12 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 12
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 12 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 12 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 12 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 13
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 13 USR is Entered
      *   |- c2    : PAR.Status Flag 13 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 13
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 13 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 13 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 13 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 14
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 14 USR is Entered
      *   |- c2    : PAR.Status Flag 14 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 14
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 14 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 14 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 14 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 15
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 15 USR is Entered
      *   |- c2    : PAR.Status Flag 15 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 15
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 15 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 15 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 15 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 16
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 16 USR is Entered
      *   |- c2    : PAR.Status Flag 16 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 16
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 16 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 16 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 16 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 17
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 17 USR is Entered
      *   |- c2    : PAR.Status Flag 17 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 17
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 17 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 17 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 17 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 18
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 18 USR is Entered
      *   |- c2    : PAR.Status Flag 18 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 18
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 18 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 18 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 18 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 19
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 19 USR is Entered
      *   |- c2    : PAR.Status Flag 19 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 19
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 19 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 19 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 19 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 20
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 20 USR is Entered
      *   |- c2    : PAR.Status Flag 20 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 20
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 20 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 20 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 20 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 21
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 21 USR is Entered
      *   |- c2    : PAR.Status Flag 21 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *ZERO     IFNE *ZERO                      *IF
     C           YL0007    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0109    WL0178           Company Number
     C                     Z-ADDWL0110    WL0179           Item Code
     C                     MOVELWL0111    WL0180    P      Warehouse Code
     C                     Z-ADD*ZERO     WL0181           Scheduled Ship
     C                     Z-ADDYL0008    WL0182           Weight Schedule
     C                     Z-ADDYL0009    WL0183           Quantity Schedu
     C                     MOVELWN0099    WL0184    P      Ord/Sch Sts USR
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0182    YL0008           Weight Schedule
     C                     Z-ADDWL0183    YL0009           Quantity Schedu
      * Calculate Sales Quantity 21
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0173    IFGT *ZERO                      *IF
     C           WL0175    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0175    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    YL0006           Day 21 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0173    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0006           Day 21 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0162    IFEQ 'L'                        *IF
     C           WL0163    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0163    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0006           Day 21 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0182           Weight Schedule
     C                     Z-ADD*ZERO     WL0183           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSH01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSH02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSH03           Warehouse Code
     C           *LIKE     DEFN OMAODT    WQSH04           Scheduled Ship
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WQSH02           Item Code
     C                     KFLD           WQSH03           Warehouse Code
     C                     KFLD           WQSH04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0178    WQSH01           Company Number
     C                     Z-ADDWL0179    WQSH02           Item Code
     C                     MOVELWL0180    WQSH03           Warehouse Code
     C                     Z-ADDWL0181    WQSH04           Scheduled Ship
      * Establish starting position
     C           KRSSH     SETLL@BGWKKG                    *
     C           KRSSH     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0105           Company Number
     C                     Z-ADDOMC4NB    WL0106           Order Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0107    WUGWST    P      Header Status
     C                     MOVELWL0108    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0184    IFEQ 'S'                        *IF
     C                     ADD  OMAUWG    WL0182           Weight Schedule
     C                     ADD  OMCCQT    WL0183           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0184    IFEQ 'O'                        *IF
     C                     ADD  OMD0WG    WL0182           Weight Schedule
     C                     ADD  OMAVQT    WL0183           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSH     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Warehouse/type Val RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#DT3CD    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSI     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WUWXST           Record Found US
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUWXST           Record Found US
     C                     MOVELWCWPST    #DR6ST           Warehouse Type
     C                     GOTO SIEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Clc Date (descending) RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSJ01           Company Number
      * Define keylist
     C           KPSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
      * Setup key
     C                     Z-ADDWL0185    WQSJ01           Company Number
     C                     Z-ADDWL0186    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSJ     SETLL@AFREPU                    *
     C           KRSSJ     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0186    IFEQ AFBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0189                     *IF
     C                     Z-ADDAFBCDT    WL0187           *Date1 (ending)
     C                     GOTO SJEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSJ     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Clc Date (ascending)  RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSK01           Company Number
      * Define keylist
     C           KPSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WDBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
      * Setup key
     C                     Z-ADDWL0190    WQSK01           Company Number
     C                     Z-ADDWL0191    WDBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSK     SETLL@AFREYY                    *
     C           KRSSK     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0191    IFEQ WDBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0194                     *IF
     C                     Z-ADDWDBCDT    WL0192           *Date1 (ending)
     C                     GOTO SKEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSK     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#PAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSL     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0011           Lot Tracking Fl
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADVHST    YL0011           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Ats ShpDte-21     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEAIC3    WQSM01           Company Number
      * Define keylist
     C           KPSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WEBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Company Number
      * Setup key
     C                     Z-ADD#1AIC3    WQSM01           Company Number
     C                     Z-ADD#PH6DT    WEBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSM     SETLL@AFREBE                    *
     C           KRSSM     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DOC: Change log
     C                     EXSR UBSUBR                     DOC: Change log
      * CASE: WRK.Count USR is GT 21
     C           WUCNTU    IFGT 21                         *IF
     C                     GOTO SMEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * 04/11/07 PKD Sunday will now be included.
      * Move Date
      * CASE: WRK.Count USR is One
     C           WUCNTU    IFEQ 1                          *IF
     C                     Z-ADDWEBCDT    #PH6DT           USR Day 1
      * WRK.Condition Desc. 1  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUCNTU    IFEQ 2                          *IF
     C                     Z-ADDWEBCDT    #PH7DT           USR Day 2
      * WRK.Condition Desc. 2  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUCNTU    IFEQ 3                          *IF
     C                     Z-ADDWEBCDT    #PH8DT           USR Day 3
      * WRK.Condition Desc. 3  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUCNTU    IFEQ 4                          *IF
     C                     Z-ADDWEBCDT    #PH9DT           USR Day 4
      * WRK.Condition Desc. 4  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUCNTU    IFEQ 5                          *IF
     C                     Z-ADDWEBCDT    #PIADT           USR Day 5
      * WRK.Condition Desc. 5  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHPTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUCNTU    IFEQ 6                          *IF
     C                     Z-ADDWEBCDT    #PIBDT           USR Day 6
      * WRK.Condition Desc. 6  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM WEA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHQTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUCNTU    IFEQ 7                          *IF
     C                     Z-ADDWEBCDT    #PINDT           USR Day 7
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUCNTU    IFEQ 8                          *IF
     C                     Z-ADDWEBCDT    YN0001           USR Day 8
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUCNTU    IFEQ 9                          *IF
     C                     Z-ADDWEBCDT    YN0002           USR Day 9
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUCNTU    IFEQ 10                         *IF
     C                     Z-ADDWEBCDT    YN0003           USR Day 10
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUCNTU    IFEQ 11                         *IF
     C                     Z-ADDWEBCDT    YN0004           USR Day 11
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUCNTU    IFEQ 12                         *IF
     C                     Z-ADDWEBCDT    YN0005           USR Day 12
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUCNTU    IFEQ 13                         *IF
     C                     Z-ADDWEBCDT    YN0006           USR Day 13
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUCNTU    IFEQ 14                         *IF
     C                     Z-ADDWEBCDT    YN0007           USR Day 14
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUCNTU    IFEQ 15                         *IF
     C                     Z-ADDWEBCDT    YN0008           USR Day 15
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUCNTU    IFEQ 16                         *IF
     C                     Z-ADDWEBCDT    YN0009           USR Day 16
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUCNTU    IFEQ 17                         *IF
     C                     Z-ADDWEBCDT    YN0010           USR Day 17
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUCNTU    IFEQ 18                         *IF
     C                     Z-ADDWEBCDT    YN0011           USR Day 18
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUCNTU    IFEQ 19                         *IF
     C                     Z-ADDWEBCDT    YN0012           USR Day 19
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUCNTU    IFEQ 20                         *IF
     C                     Z-ADDWEBCDT    YN0013           USR Day 20
     C                     ELSE
      * CASE: WRK.Count USR is Twenty One
     C           WUCNTU    IFEQ 21                         *IF
     C                     Z-ADDWEBCDT    YN0014           USR Day 21
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSM     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0141    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSN     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0013           Company Number
     C                     MOVELDRBUVN    WN0142           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0195    DTAJVN           User Profile Na
     C                     MOVELWL0196    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSO     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0197           Company Number
     C                     MOVELDTAJCD    WL0198           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSP01           Application Cod
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSP01           Application Cod
     C                     MOVEL'OMS'     WQSP01           Application Cod
      * Establish starting position
     C           KRSSP     SETLL@DNRESF                    *
     C           KRSSP     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SQRVGN
     C                     END                             *FI
     C           KRSSP     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSQ01           Application Cod
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSQ01           Application Cod
      * Establish starting position
     C           KRSSQ     SETLL@DNRESF                    *
     C           KRSSQ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSQ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Move to Zero Decimal fields
      *================================================================
     C                     Z-ADD#DD1IN    #DKONB           Day 1 Inventory
     C                     Z-ADD#DD2IN    #DKPNB           Day 2 Inventory
     C                     Z-ADD#DD3IN    #DKQNB           Day 3 Inventory
     C                     Z-ADD#DD4IN    #DKRNB           Day 4 Inventory
     C                     Z-ADD#DD5IN    #DKSNB           Day 5 Inventory
     C                     Z-ADD#DD6IN    #DKTNB           Day 6 Inventory
     C                     Z-ADD#DD7IN    #DKVNB           Day 7 Inventory
     C                     Z-ADD#DGCNX    #DPMNX           Day 8 Inventory
     C                     Z-ADD#DD1PD    #DKWNB           Day 1 Productio
     C                     Z-ADD#DD2PD    #DKXNB           Day 2 Productio
     C                     Z-ADD#DD3PD    #DKYNB           Day 3 Productio
     C                     Z-ADD#DD4PD    #DKZNB           Day 4 Productio
     C                     Z-ADD#DD5PD    #DK0NB           Day 5 Productio
     C                     Z-ADD#DD6PD    #DK1NB           Day 6 Productio
     C                     Z-ADD#DD7PD    #DK2NB           Day 7 Productio
     C                     Z-ADD#DD8PD    #DPJNX           Day 8 Productio
     C                     Z-ADD#DD1SS    #DK3NB           Day 1 Sched Shi
     C                     Z-ADD#DD2SS    #DK4NB           Day 2 Sched Shi
     C                     Z-ADD#DD3SS    #DK5NB           Day 3 Sched Shi
     C                     Z-ADD#DVNNB    #DK6NB           Day 4 Sched Shi
     C                     Z-ADD#DD5SS    #DK7NB           Day 5 Sched Shi
     C                     Z-ADD#DVWNB    #DK8NB           Day 6 Sched Shi
     C                     Z-ADD#DD7SS    #DK9NB           Day 7 Sched Shi
     C                     Z-ADD#DD8SS    #DGMNY           Day 8 Sched Shi
     C                     Z-ADD#DD1AV    #DJ2NB           Day 1 Available
     C                     Z-ADD#DD2AV    #DJ3NB           Day 2 Available
     C                     Z-ADD#DD3AV    #DJ4NB           Day 3 Available
     C                     Z-ADD#DD4AV    #DJ5NB           Day 4 Available
     C                     Z-ADD#DD5AV    #DJ6NB           Day 5 Available
     C                     Z-ADD#DD6AV    #DJ7NB           Day 6 Available
     C                     Z-ADD#DD7AV    #DJ8NB           Day 7 Available
     C                     Z-ADD#DD8AV    #DPONX           Day 8 Available
     C                     Z-ADD#DD1SL    #DGTNX           Day 1 Sales 5,0
     C                     Z-ADD#DD2SL    #DGUNX           Day 2 Sales 5,0
     C                     Z-ADD#DD3SL    #DGVNX           Day 3 Sales 5,0
     C                     Z-ADD#DD4SL    #DGWNX           Day 4 Sales 5,0
     C                     Z-ADD#DD5SL    #DGXNX           Day 5 Sales 5,0
     C                     Z-ADD#DD6SL    #DGYNX           Day 6 Sales 5,0
     C                     Z-ADD#DD7SL    #DGZNX           Day 7 Sales 5,0
     C                     Z-ADD#DZ5NB    #DPQNX           Day 8 Sales 5,0
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC: Change log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Move to Zero Decimal fields
      *================================================================
     C                     Z-ADD#DD1IN    #DKONB           Day 1 Inventory
     C                     Z-ADD#DD2IN    #DKPNB           Day 2 Inventory
     C                     Z-ADD#DD3IN    #DKQNB           Day 3 Inventory
     C                     Z-ADD#DD4IN    #DKRNB           Day 4 Inventory
     C                     Z-ADD#DD5IN    #DKSNB           Day 5 Inventory
     C                     Z-ADD#DD6IN    #DKTNB           Day 6 Inventory
     C                     Z-ADD#DD7IN    #DKVNB           Day 7 Inventory
     C                     Z-ADD#DGCNX    #DPMNX           Day 8 Inventory
     C                     Z-ADD#DD1PD    #DKWNB           Day 1 Productio
     C                     Z-ADD#DD2PD    #DKXNB           Day 2 Productio
     C                     Z-ADD#DD3PD    #DKYNB           Day 3 Productio
     C                     Z-ADD#DD4PD    #DKZNB           Day 4 Productio
     C                     Z-ADD#DD5PD    #DK0NB           Day 5 Productio
     C                     Z-ADD#DD6PD    #DK1NB           Day 6 Productio
     C                     Z-ADD#DD7PD    #DK2NB           Day 7 Productio
     C                     Z-ADD#DD8PD    #DPJNX           Day 8 Productio
     C                     Z-ADD#DD1SS    #DK3NB           Day 1 Sched Shi
     C                     Z-ADD#DD2SS    #DK4NB           Day 2 Sched Shi
     C                     Z-ADD#DD3SS    #DK5NB           Day 3 Sched Shi
     C                     Z-ADD#DVNNB    #DK6NB           Day 4 Sched Shi
     C                     Z-ADD#DD5SS    #DK7NB           Day 5 Sched Shi
     C                     Z-ADD#DVWNB    #DK8NB           Day 6 Sched Shi
     C                     Z-ADD#DD7SS    #DK9NB           Day 7 Sched Shi
     C                     Z-ADD#DD8SS    #DGMNY           Day 8 Sched Shi
     C                     Z-ADD#DD1AV    #DJ2NB           Day 1 Available
     C                     Z-ADD#DD2AV    #DJ3NB           Day 2 Available
     C                     Z-ADD#DD3AV    #DJ4NB           Day 3 Available
     C                     Z-ADD#DD4AV    #DJ5NB           Day 4 Available
     C                     Z-ADD#DD5AV    #DJ6NB           Day 5 Available
     C                     Z-ADD#DD6AV    #DJ7NB           Day 6 Available
     C                     Z-ADD#DD7AV    #DJ8NB           Day 7 Available
     C                     Z-ADD#DD8AV    #DPONX           Day 8 Available
     C                     Z-ADD#DD1SL    #DGTNX           Day 1 Sales 5,0
     C                     Z-ADD#DD2SL    #DGUNX           Day 2 Sales 5,0
     C                     Z-ADD#DD3SL    #DGVNX           Day 3 Sales 5,0
     C                     Z-ADD#DD4SL    #DGWNX           Day 4 Sales 5,0
     C                     Z-ADD#DD5SL    #DGXNX           Day 5 Sales 5,0
     C                     Z-ADD#DD6SL    #DGYNX           Day 6 Sales 5,0
     C                     Z-ADD#DD7SL    #DGZNX           Day 7 Sales 5,0
     C                     Z-ADD#DZ5NB    #DPQNX           Day 8 Sales 5,0
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVELV1AIC3    WK1X01  1
     C                     MOVELV1HGCD    WK1X02  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#1AIC3'
     C           WK1X02    OREQ '?'                        Item Code
     C           YPMTFD    OREQ '#1HGCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
      * Field '(DTL) #1HGCD' defaulted for 'Item Code'.
     C                     CALL 'PDJISRR'              90  SEL Company/Ite
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0491  30       Company Number
     C           #1HGCD    PARM #1HGCD    WQ0492  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDJISRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Company Name and Address
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVELV1AIC3    WK1X01  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#1AIC3'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1AIC3' defaulted for 'Company Number'.
     C                     CALL 'PDL7SRR'              90  SEL Co - Rtn 0
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0531  30       Company Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDL7SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      *
     C           #1AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1AIC3    IFEQ *ZERO                      Company Number
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBAB    KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#1AIC3    ABAIC3
     C           KLVBAB    CHAIN@ABREAK              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Company Name and Addre NF'
     C                     MOVEL'USR0003' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0003' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C                     ENDIF
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW1END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW1BEG,F
     C                     MOVELW1NAM,F   W0CFL
     C                     ENDIF
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 005
     C           ZHCSCL    ANDGE031
     C           ZHCSCL    ANDLE033
     C           @#DFMT    ANDEQ'#RCDKEY'
     C                     MOVEL'#1AIC3'  YPMTFD           Company Number
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDGE031
     C           ZHCSCL    ANDLE037
     C           @#DFMT    ANDEQ'#RCDKEY'
     C                     MOVEL'#1HGCD'  YPMTFD           Item Code
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2DQCD           Enterprise Code
     C                     MOVEL*BLANK    P2DRCD           Enterprise Code
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     Z-ADD*ZERO     P7FFDT           USR Day 1
     C                     Z-ADD*ZERO     P7E1DT           USR Day 2
     C                     Z-ADD*ZERO     P7E2DT           USR Day 3
     C                     Z-ADD*ZERO     P7E3DT           USR Day 4
     C                     Z-ADD*ZERO     P7E4DT           USR Day 5
     C                     Z-ADD*ZERO     P7E5DT           USR Day 6
     C                     Z-ADD*ZERO     P7E6DT           USR Day 7
     C                     Z-ADD*ZERO     P7FKDT           USR Day 8
     C                     Z-ADD*ZERO     P7FLDT           USR Day 9
     C                     Z-ADD*ZERO     P7FGDT           USR Day 10
     C                     Z-ADD*ZERO     P7FHDT           USR Day 11
     C                     Z-ADD*ZERO     P7FIDT           USR Day 12
     C                     Z-ADD*ZERO     P7FJDT           USR Day 13
     C                     Z-ADD*ZERO     P7HPDT           USR Day 14
     C                     Z-ADD*ZERO     P7HQDT           USR Day 15
     C                     Z-ADD*ZERO     P7HRDT           USR Day 16
     C                     Z-ADD*ZERO     P7HSDT           USR Day 17
     C                     Z-ADD*ZERO     P7HTDT           USR Day 18
     C                     Z-ADD*ZERO     P7HUDT           USR Day 19
     C                     Z-ADD*ZERO     P7HVDT           USR Day 20
     C                     Z-ADD*ZERO     P7HWDT           USR Day 21
     C                     Z-ADD*ZERO     P7D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P7D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P7D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P7D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P7D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P7D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P7D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P7GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     P7GDNX           Day 9 Inventory
     C                     Z-ADD*ZERO     P7GENX           Day 10 Inventor
     C                     Z-ADD*ZERO     P7GFNX           Day 11 Inventor
     C                     Z-ADD*ZERO     P7GGNX           Day 12 Inventor
     C                     Z-ADD*ZERO     P7GHNX           Day 13 Inventor
     C                     Z-ADD*ZERO     P7GINX           Day 14 Inventor
     C                     Z-ADD*ZERO     P7D1PD           Day 1 Productio
     C                     Z-ADD*ZERO     P7D2PD           Day 2 Productio
     C                     Z-ADD*ZERO     P7D3PD           Day 3 Productio
     C                     Z-ADD*ZERO     P7D4PD           Day 4 Productio
     C                     Z-ADD*ZERO     P7D5PD           Day 5 Productio
     C                     Z-ADD*ZERO     P7D6PD           Day 6 Productio
     C                     Z-ADD*ZERO     P7D7PD           Day 7 Productio
     C                     Z-ADD*ZERO     P7D8PD           Day 8 Productio
     C                     Z-ADD*ZERO     P7D9PD           Day 9 Productio
     C                     Z-ADD*ZERO     P7D1PR           Day 10 Producti
     C                     Z-ADD*ZERO     P7D2PR           Day 11 Producti
     C                     Z-ADD*ZERO     P7D3PR           Day 12 Producti
     C                     Z-ADD*ZERO     P7D4PR           Day 13 Producti
     C                     Z-ADD*ZERO     P7D5PR           Day 14 Producti
     C                     Z-ADD*ZERO     P7D6PR           Day 15 Producti
     C                     Z-ADD*ZERO     P7D7PR           Day 16 Producti
     C                     Z-ADD*ZERO     P7D8PR           Day 17 Producti
     C                     Z-ADD*ZERO     P7RKNB           Day 18 Producti
     C                     Z-ADD*ZERO     P7D1PT           Day 19 Producti
     C                     Z-ADD*ZERO     P7D2PT           Day 20 Producti
     C                     Z-ADD*ZERO     P7D3PT           Day 21 Producti
     C                     Z-ADD*ZERO     P7D1SL           Day 1 Sales USR
     C                     Z-ADD*ZERO     P7D2SL           Day 2 Sales USR
     C                     Z-ADD*ZERO     P7D3SL           Day 3 Sales USR
     C                     Z-ADD*ZERO     P7D4SL           Day 4 Sales USR
     C                     Z-ADD*ZERO     P7D5SL           Day 5 Sales USR
     C                     Z-ADD*ZERO     P7D6SL           Day 6 Sales USR
     C                     Z-ADD*ZERO     P7D7SL           Day 7 Sales USR
     C                     Z-ADD*ZERO     P7Z5NB           Day 8 Sales USR
     C                     Z-ADD*ZERO     P7D9SL           Day 9 Sales USR
     C                     Z-ADD*ZERO     P7DSLS           Day 10 Sales US
     C                     Z-ADD*ZERO     P7D11S           Day 11 Sales US
     C                     Z-ADD*ZERO     P7D12S           Day 12 Sales US
     C                     Z-ADD*ZERO     P7D13S           Day 13 Sales US
     C                     Z-ADD*ZERO     P7D14S           Day 14 Sales US
     C                     Z-ADD*ZERO     P7D15S           Day 15 Sales US
     C                     Z-ADD*ZERO     P7D16S           Day 16 Sales US
     C                     Z-ADD*ZERO     P7D17S           Day 17 Sales US
     C                     Z-ADD*ZERO     P7D18S           Day 18 Sales US
     C                     Z-ADD*ZERO     P7D19S           Day 19 Sales US
     C                     Z-ADD*ZERO     P7D20S           Day 20 Sales US
     C                     Z-ADD*ZERO     P7D21S           Day 21 Sales US
     C                     Z-ADD*ZERO     P7D1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     P7D2AV           Day 2 Availabil
     C                     Z-ADD*ZERO     P7D3AV           Day 3 Availabil
     C                     Z-ADD*ZERO     P7D4AV           Day 4 Availabil
     C                     Z-ADD*ZERO     P7D5AV           Day 5 Availabil
     C                     Z-ADD*ZERO     P7D6AV           Day 6 Availabil
     C                     Z-ADD*ZERO     P7D7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     P7D8AV           Day 8 Availabil
     C                     Z-ADD*ZERO     P7D9AV           Day 9 Availabil
     C                     Z-ADD*ZERO     P7D1AB           Day 10 Availabi
     C                     Z-ADD*ZERO     P7D2AB           Day 11 Availabi
     C                     Z-ADD*ZERO     P7D3AB           Day 12 Availabi
     C                     Z-ADD*ZERO     P7D4AB           Day 13 Availabi
     C                     Z-ADD*ZERO     P7D5AB           Day 14 Availabi
     C                     Z-ADD*ZERO     P7D6AB           Day 15 Availabi
     C                     Z-ADD*ZERO     P7D7AB           Day 16 Availabi
     C                     Z-ADD*ZERO     P7D8AB           Day 17 Availabi
     C                     Z-ADD*ZERO     P7D9AB           Day 18 Availabi
     C                     Z-ADD*ZERO     P7D1AL           Day 19 Availabi
     C                     Z-ADD*ZERO     P7D2AL           Day 20 Availabi
     C                     Z-ADD*ZERO     P7D3AL           Day 21 Availabi
     C                     Z-ADD*ZERO     P7D1SS           Day 1 Sched Shi
     C                     Z-ADD*ZERO     P7D2SS           Day 2 Sched Shi
     C                     Z-ADD*ZERO     P7D3SS           Day 3 Sched Shi
     C                     Z-ADD*ZERO     P7VNNB           Day 4 Sched Shi
     C                     Z-ADD*ZERO     P7D5SS           Day 5 Sched Shi
     C                     Z-ADD*ZERO     P7VWNB           Day 6 Sched Shi
     C                     Z-ADD*ZERO     P7D7SS           Day 7 Sched Shi
     C                     Z-ADD*ZERO     P7D8SS           Day 8 Sched Shi
     C                     Z-ADD*ZERO     P7D9SS           Day 9 Sched Shi
     C                     Z-ADD*ZERO     P7D0SS           Day 10 Sched Sh
     C                     Z-ADD*ZERO     P7D1SH           Day 11 Sched Sh
     C                     Z-ADD*ZERO     P7D2SH           Day 12 Sched Sh
     C                     Z-ADD*ZERO     P7D3SH           Day 13 Sched Sh
     C                     Z-ADD*ZERO     P7D4SH           Day 14 Sched Sh
     C                     Z-ADD*ZERO     P7D5SH           Day 15 Sched Sh
     C                     Z-ADD*ZERO     P7D6SH           Day 16 Sched Sh
     C                     Z-ADD*ZERO     P7D7SH           Day 17 Sched Sh
     C                     Z-ADD*ZERO     P7D8SH           Day 18 Sched Sh
     C                     Z-ADD*ZERO     P7D9SH           Day 19 Sched Sh
     C                     Z-ADD*ZERO     P7D0SP           Day 20 Sched Sh
     C                     Z-ADD*ZERO     P7D1SM           Day 21 Sched Sh
     C                     MOVEL*BLANK    P7GHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    P7GISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    P7GJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    P7GKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    P7GLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    P7GMSX           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    P7GNSX           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    P7GOSX           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    P7GPSX           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    P7GQSX           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    P7GRSX           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    P7GSSX           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    P7GTSX           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    P7GUSX           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    P7GVSX           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    P7GWSX           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    P7GXSX           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    P7GYSX           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    P7GZSX           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    P7G0SX           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    P7G1SX           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     P7OHLO           Order Hold Over
     C                     Z-ADD*ZERO     P7C8NX           Order Hold Over
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WABVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBELDT           Production Date
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WBWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WBQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WBDJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WBF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WBWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WBD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WBDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WBB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WBWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WBPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WBSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WBB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WBD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WBCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WBEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WBCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WBE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WBD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WBOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WBCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WBUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WBCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WBF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WBBPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WBGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WBBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WBGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WBBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WBGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WBBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WBGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WBBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WBGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WBPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WBDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WBD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WBFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WBD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WBDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WBEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WBSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WBEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WBAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WBECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WBWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WBEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WBFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WBEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WBQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WBEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WBWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WBEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Define work field Display Flag
     C                     MOVEL*BLANK    WUQKST  1
      * Define work field *Duration (factor)
     C                     Z-ADD*ZERO     WUDUF   80
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WDCQNB           Julian Date
     C                     Z-ADD*ZERO     WDESNB           Accounting Year
     C                     Z-ADD*ZERO     WDETNB           Accounting Peri
     C                     Z-ADD*ZERO     WDBZNB           OM Week
     C                     Z-ADD*ZERO     WDEINB           Week Number
     C                     Z-ADD*ZERO     WDAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WDOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WDNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WDNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WDOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WDOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Item Description
     C                     MOVEL*BLANK    WUGENA 30
      * Define work field Condition Desc. 1  USR
     C                     MOVEL*BLANK    WUHLTX 25
      * Define work field Condition Desc. 2  USR
     C                     MOVEL*BLANK    WUHMTX 25
      * Define work field Condition Desc. 3  USR
     C                     MOVEL*BLANK    WUHNTX 25
      * Define work field Condition Desc. 4  USR
     C                     MOVEL*BLANK    WUHOTX 25
      * Define work field Condition Desc. 5  USR
     C                     MOVEL*BLANK    WUHPTX 25
      * Define work field Condition Desc. 6  USR
     C                     MOVEL*BLANK    WUHQTX 25
      * Define work field Warehouse Code
     C                     MOVEL*BLANK    WUAJCD  3
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA05 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA04 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002  2
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     MOVEL*BLANK    WL0004 10
     C                     Z-ADD*ZERO     WL0005 155
      * Define local variables for subroutine SCRVGN.
     C                     MOVEL*BLANK    WL0006  2
     C                     MOVEL*BLANK    WL0007  3
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     Z-ADD*ZERO     WL0010  70
     C                     Z-ADD*ZERO     WL0011  70
     C                     Z-ADD*ZERO     WL0012  70
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014  70
     C                     Z-ADD*ZERO     WL0015  70
     C                     Z-ADD*ZERO     WL0016  70
     C                     Z-ADD*ZERO     WL0017  70
     C                     Z-ADD*ZERO     WL0018  70
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020  70
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023  70
     C                     Z-ADD*ZERO     WL0024  70
     C                     MOVEL*BLANK    WL0025  1
     C                     Z-ADD*ZERO     WL0026  70
     C                     MOVEL*BLANK    WL0027  1
     C                     Z-ADD*ZERO     WL0028  61
     C                     Z-ADD*ZERO     WL0029  61
     C                     Z-ADD*ZERO     WL0030  61
     C                     Z-ADD*ZERO     WL0031  61
     C                     Z-ADD*ZERO     WL0032  61
     C                     Z-ADD*ZERO     WL0033  61
     C                     Z-ADD*ZERO     WL0034  61
     C                     Z-ADD*ZERO     WL0035  61
     C                     Z-ADD*ZERO     WL0036  61
     C                     Z-ADD*ZERO     WL0037  61
     C                     Z-ADD*ZERO     WL0038  61
     C                     Z-ADD*ZERO     WL0039  61
     C                     Z-ADD*ZERO     WL0040  61
     C                     Z-ADD*ZERO     WL0041  61
     C                     Z-ADD*ZERO     WL0042  61
     C                     Z-ADD*ZERO     WL0043  61
     C                     Z-ADD*ZERO     WL0044  61
     C                     Z-ADD*ZERO     WL0045  61
     C                     Z-ADD*ZERO     WL0046  61
     C                     Z-ADD*ZERO     WL0047  61
     C                     Z-ADD*ZERO     WL0048  61
     C                     Z-ADD*ZERO     WL0049  61
     C                     Z-ADD*ZERO     WL0050  61
     C                     Z-ADD*ZERO     WL0051  61
     C                     Z-ADD*ZERO     WL0052  61
     C                     Z-ADD*ZERO     WL0053  61
     C                     Z-ADD*ZERO     WL0054  61
     C                     Z-ADD*ZERO     WL0055  61
     C                     Z-ADD*ZERO     WL0056  61
     C                     Z-ADD*ZERO     WL0057  61
     C                     Z-ADD*ZERO     WL0058  61
     C                     Z-ADD*ZERO     WL0059  61
     C                     Z-ADD*ZERO     WL0060  61
     C                     Z-ADD*ZERO     WL0061  61
     C                     Z-ADD*ZERO     WL0062  61
     C                     Z-ADD*ZERO     WL0063  61
     C                     Z-ADD*ZERO     WL0064  61
     C                     Z-ADD*ZERO     WL0065  61
     C                     Z-ADD*ZERO     WL0066  61
     C                     Z-ADD*ZERO     WL0067  61
     C                     Z-ADD*ZERO     WL0068  61
     C                     Z-ADD*ZERO     WL0069  61
     C                     Z-ADD*ZERO     WL0070  61
     C                     Z-ADD*ZERO     WL0071  61
     C                     Z-ADD*ZERO     WL0072  61
     C                     Z-ADD*ZERO     WL0073  61
     C                     Z-ADD*ZERO     WL0074  61
     C                     Z-ADD*ZERO     WL0075  61
     C                     MOVEL*BLANK    WL0076  2
     C                     Z-ADD*ZERO     WL0077 112
     C                     Z-ADD*ZERO     WL0078  52
     C                     MOVEL*BLANK    WL0079  1
     C                     Z-ADD*ZERO     WL0080  70
     C                     Z-ADD*ZERO     WL0081  70
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0082  30
     C                     MOVEL*BLANK    WL0083  1
     C                     Z-ADD*ZERO     WL0084  70
     C                     Z-ADD*ZERO     WL0085  70
     C                     MOVEL*BLANK    WL0086  3
     C                     Z-ADD*ZERO     WL0087  92
     C                     Z-ADD*ZERO     WL0088  70
     C                     Z-ADD*ZERO     WL0089  92
     C                     Z-ADD*ZERO     WL0090  70
     C                     Z-ADD*ZERO     WL0091  92
     C                     Z-ADD*ZERO     WL0092  70
     C                     Z-ADD*ZERO     WL0093  92
     C                     Z-ADD*ZERO     WL0094  70
     C                     Z-ADD*ZERO     WL0095  92
     C                     Z-ADD*ZERO     WL0096  70
     C                     Z-ADD*ZERO     WL0097  92
     C                     Z-ADD*ZERO     WL0098  92
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0099  30
     C                     Z-ADD*ZERO     WL0100  70
     C                     MOVEL*BLANK    WL0101  3
     C                     Z-ADD*ZERO     WL0102  70
     C                     Z-ADD*ZERO     WL0103 112
     C                     Z-ADD*ZERO     WL0104 112
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0105  30
     C                     Z-ADD*ZERO     WL0106  70
     C                     MOVEL*BLANK    WL0107  1
     C                     MOVEL*BLANK    WL0108  1
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0109  30
     C                     Z-ADD*ZERO     WL0110  70
     C                     MOVEL*BLANK    WL0111  3
     C                     Z-ADD*ZERO     WL0112  70
     C                     Z-ADD*ZERO     WL0113  70
     C                     Z-ADD*ZERO     WL0114  70
     C                     Z-ADD*ZERO     WL0115  70
     C                     Z-ADD*ZERO     WL0116  70
     C                     Z-ADD*ZERO     WL0117  70
     C                     Z-ADD*ZERO     WL0118  70
     C                     Z-ADD*ZERO     WL0119  70
     C                     Z-ADD*ZERO     WL0120  70
     C                     Z-ADD*ZERO     WL0121  70
     C                     Z-ADD*ZERO     WL0122  70
     C                     Z-ADD*ZERO     WL0123  70
     C                     Z-ADD*ZERO     WL0124  70
     C                     Z-ADD*ZERO     WL0125  70
     C                     Z-ADD*ZERO     WL0126  70
     C                     Z-ADD*ZERO     WL0127  61
     C                     Z-ADD*ZERO     WL0128  61
     C                     Z-ADD*ZERO     WL0129  61
     C                     Z-ADD*ZERO     WL0130  61
     C                     Z-ADD*ZERO     WL0131  61
     C                     Z-ADD*ZERO     WL0132  61
     C                     Z-ADD*ZERO     WL0133  61
     C                     Z-ADD*ZERO     WL0134  61
     C                     Z-ADD*ZERO     WL0135  61
     C                     Z-ADD*ZERO     WL0136  61
     C                     Z-ADD*ZERO     WL0137  61
     C                     Z-ADD*ZERO     WL0138  61
     C                     Z-ADD*ZERO     WL0139  61
     C                     Z-ADD*ZERO     WL0140  61
     C                     Z-ADD*ZERO     WL0141  61
     C                     Z-ADD*ZERO     WL0142  61
     C                     Z-ADD*ZERO     WL0143  61
     C                     Z-ADD*ZERO     WL0144  61
     C                     Z-ADD*ZERO     WL0145  61
     C                     Z-ADD*ZERO     WL0146  61
     C                     Z-ADD*ZERO     WL0147  61
     C                     Z-ADD*ZERO     WL0148  61
     C                     Z-ADD*ZERO     WL0149  61
     C                     Z-ADD*ZERO     WL0150  61
     C                     Z-ADD*ZERO     WL0151  61
     C                     Z-ADD*ZERO     WL0152  61
     C                     Z-ADD*ZERO     WL0153  61
     C                     Z-ADD*ZERO     WL0154  61
     C                     Z-ADD*ZERO     WL0155  61
     C                     Z-ADD*ZERO     WL0156  61
     C                     Z-ADD*ZERO     WL0157  61
     C                     Z-ADD*ZERO     WL0158  61
     C                     Z-ADD*ZERO     WL0159  61
     C                     Z-ADD*ZERO     WL0160  61
     C                     Z-ADD*ZERO     WL0161  61
     C                     MOVEL*BLANK    WL0162  1
     C                     Z-ADD*ZERO     WL0163  70
     C                     Z-ADD*ZERO     WL0164  61
     C                     Z-ADD*ZERO     WL0165  61
     C                     Z-ADD*ZERO     WL0166  61
     C                     Z-ADD*ZERO     WL0167  61
     C                     Z-ADD*ZERO     WL0168  61
     C                     Z-ADD*ZERO     WL0169  61
     C                     Z-ADD*ZERO     WL0170  61
     C                     MOVEL*BLANK    WL0171  1
     C                     MOVEL*BLANK    WL0172  2
     C                     Z-ADD*ZERO     WL0173 112
     C                     Z-ADD*ZERO     WL0174  52
     C                     MOVEL*BLANK    WL0175  1
     C                     Z-ADD*ZERO     WL0176  70
     C                     Z-ADD*ZERO     WL0177  70
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0178  30
     C                     Z-ADD*ZERO     WL0179  70
     C                     MOVEL*BLANK    WL0180  3
     C                     Z-ADD*ZERO     WL0181  70
     C                     Z-ADD*ZERO     WL0182 112
     C                     Z-ADD*ZERO     WL0183 112
     C                     MOVEL*BLANK    WL0184  1
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0185  30
     C                     Z-ADD*ZERO     WL0186  70
     C                     Z-ADD*ZERO     WL0187  70
     C                     Z-ADD*ZERO     WL0188  70
     C                     Z-ADD*ZERO     WL0189  80
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0190  30
     C                     Z-ADD*ZERO     WL0191  70
     C                     Z-ADD*ZERO     WL0192  70
     C                     Z-ADD*ZERO     WL0193  70
     C                     Z-ADD*ZERO     WL0194  80
      * Define local variables for subroutine SORVGN.
     C                     MOVEL*BLANK    WL0195 10
     C                     MOVEL*BLANK    WL0196  6
     C                     Z-ADD*ZERO     WL0197  30
     C                     MOVEL*BLANK    WL0198  3
      * Define local work field PS Weight Inv On-Hand
     C                     Z-ADD*ZERO     YL0001  92
      * Define local work field PS Weight Inv Adj
     C                     Z-ADD*ZERO     YL0002  92
      * Define local work field PS Weight Inv Allocated
     C                     Z-ADD*ZERO     YL0003  92
      * Define local work field PS Weight Prod Allocated
     C                     Z-ADD*ZERO     YL0004  92
      * Define local work field PS Weight Ship Cut Adj
     C                     Z-ADD*ZERO     YL0005  92
      * Define local work field ZERO
     C                     Z-ADD*ZERO     YL0006 305
      * Define local work field BLANK
     C                     MOVEL*BLANK    YL0007256
      * Define local work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     YL0008 112
      * Define local work field Quantity Scheduled SUM
     C                     Z-ADD*ZERO     YL0009 112
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0010  1
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0011  1
      * Define local work field Component Item Code
     C                     Z-ADD*ZERO     YL0012  70
      * Define null work field USR Day 8
     C                     Z-ADD*ZERO     YN0001  70
      * Define null work field USR Day 9
     C                     Z-ADD*ZERO     YN0002  70
      * Define null work field USR Day 10
     C                     Z-ADD*ZERO     YN0003  70
      * Define null work field USR Day 11
     C                     Z-ADD*ZERO     YN0004  70
      * Define null work field USR Day 12
     C                     Z-ADD*ZERO     YN0005  70
      * Define null work field USR Day 13
     C                     Z-ADD*ZERO     YN0006  70
      * Define null work field USR Day 14
     C                     Z-ADD*ZERO     YN0007  70
      * Define null work field USR Day 15
     C                     Z-ADD*ZERO     YN0008  70
      * Define null work field USR Day 16
     C                     Z-ADD*ZERO     YN0009  70
      * Define null work field USR Day 17
     C                     Z-ADD*ZERO     YN0010  70
      * Define null work field USR Day 18
     C                     Z-ADD*ZERO     YN0011  70
      * Define null work field USR Day 19
     C                     Z-ADD*ZERO     YN0012  70
      * Define null work field USR Day 20
     C                     Z-ADD*ZERO     YN0013  70
      * Define null work field USR Day 21
     C                     Z-ADD*ZERO     YN0014  70
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0013  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0014  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0141 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0141           User Profile Na
      *
     C                     MOVEL*BLANK    WN0142 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SNRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0141    ZA0004           User Profile Na
     C                     MOVEL'OMS'     ZA0005           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,004   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0142    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0141    WL0195    P      User Profile Na
     C                     MOVEL'OMS'     WL0196    P      Application Cod
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0197    WUAIC3           Company Number
     C                     MOVELWL0198    YL0014    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0142    WL0195    P      User Profile Na
     C                     MOVEL'OMS'     WL0196    P      Application Cod
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0197    WUAIC3           Company Number
     C                     MOVELWL0198    YL0014    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0014    WUAJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0141    ZA0006           User Profile Na
     C                     MOVEL'OMS'     ZA0007           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,004   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0013    IFNE *ZERO                      *IF
     C                     Z-ADDYL0013    WUAIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0014    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           WUAJCD    PARM *BLANK    WQ0532  3        Warehouse Code
     C                     PARM YL0013    WQ0533  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SPRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'N'       WUQKST           Display Flag
     C                     MOVEL'Y'       WUTAST           First Time Flag
      *================================================================
     CSR         ZZEXIT    ENDSR
** KEY Screen: Field position and name array
010550131101567
** W0END
010840131301573
** W0NAM
#PADTX    V1AIC3    V1HGCD
** W1BEG
01041010490109601100012970132001352
01553015610160901809023210233002339
02348023570236602375028350284402853
02862028710288002889028980334703356
03365033740338303392034010341003601
03610036190362803637036460365503852
03859038680387703886038950390403913
03922043640437104380043890439804407
04416044250443404883048920490104910
04919049280493704946051370514605155
0516405173051820519105200
** W1END
01043010780109701101012990132101359
01559015900161401821023280233702346
02355023640237302382028400284902858
02867028760288502894029030335203361
03370033790338803397034060341503608
03617036260363503644036530366203856
03864038730388203891039000390903918
03927043690437604385043940440304412
04421044300443904888048970490604915
04924049330494204951051440515305162
0517105180051890519805207
** W1NAM
V1AIC3    #PADTX    #1ADCD    #DMVTX    #DT3CD    #DR6ST    #PLDSZ
V1HGCD    #1AVNA    #1CHTM    #1AIWG    VPH6DT    VPH7DT    VPH8DT
VPH9DT    VPIADT    VPIBDT    VPINDT    #DKONB    #DKPNB    #DKQNB
#DKRNB    #DKSNB    #DKTNB    #DKVNB    #DPMNX    #DKWNB    #DKXNB
#DKYNB    #DKZNB    #DK0NB    #DK1NB    #DK2NB    #DPJNX    VDFFDT
VDE1DT    VDE2DT    VDE3DT    VDE4DT    VDE5DT    VDE6DT    #DOHLO
#DK3NB    #DK4NB    #DK5NB    #DK6NB    #DK7NB    #DK8NB    #DK9NB
#DGMNY    #DC8NX    #DGTNX    #DGUNX    #DGVNX    #DGWNX    #DGXNX
#DGYNX    #DGZNX    #DPQNX    #DJ2NB    #DJ3NB    #DJ4NB    #DJ5NB
#DJ6NB    #DJ7NB    #DJ8NB    #DPONX    #DJ9NB    #DKANB    #DKBNB
#DKDNB    #DKENB    #DKFNB    #DKGNB    #DL2NX
** @CN
00001 FZNCHLTME
00002 Y2U0005
00003 USR0752
00004 Y2U9999
