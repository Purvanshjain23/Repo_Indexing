// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKQVPVR
// ?Date: 14.08.2025 Time: 02:52:31
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Load screen

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

// DTL.TH Kill Date = PAR.PCS From Kill Date
DTL.TH_Kill_Date = PAR.PCS_From_Kill_Date;

// DTL.Kill Date Usr = PAR.PCS To Kill Date
DTL.Kill_Date_Usr = PAR.PCS_To_Kill_Date;

//?USER: Validate fields

//?Validate Kill Date Range
CASE;

// IF DTL.TH Kill Date EQ WRK.Zero USR
IF DTL.TH_Kill_Date = WRK.Zero_USR;

// Send error message - 'Date is Required'
ERROR(PRK0641);
MSGPARM(DTL.TH_Kill_Date);

//?Validate Kill Date Range
// IF DTL.Kill Date Usr EQ WRK.Zero USR
IF DTL.Kill_Date_Usr = WRK.Zero_USR;

// Send error message - 'Date is Required'
ERROR(PRK0641);
MSGPARM(DTL.Kill_Date_Usr);

//?Validate Kill Date Range
// IF DTL.TH Kill Date GT DTL.Kill Date Usr
IF DTL.TH_Kill_Date > DTL.Kill_Date_Usr;

// Send error message - '&1 must be less than or equal to &2'
ERROR(PRK0635);
MSGPARM(DTL.TH_Kill_Date);
MSGPARM(DTL.Kill_Date_Usr);

ENDIF;

//?Validate Tattoo Number
CASE;

// IF DTL.TH Tattoo Number is Zero
IF DTL.TH_Tattoo_Number = *ZERO;

//?Validate Tattoo Number
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Tattoo            RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1217490;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(PAR.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF PAR.Record Found USR is Record Not Found
IF PAR.Record_Found_USR = 'N';

// Send error message - 'Tattoo not found.'
ERROR(PRK0061);

ENDIF;

EXECUTE FUNCTION(Val Crcss Dtl/Tatto  RT) TYPE(RTVOBJ) FILE(PKB1CPP)            AB1160924;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Carcass Detail not found.'
ERROR(PRK0138);

ENDIF;

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Print Comparison Sum/Dtl');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('HPE');
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('PRTCMPCSD');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(*JOBD *JOBD *JOBD);
PARAMETER(*NO);

// Call program Prt Comp Crc Sum/Dtl  UP.
SBMJOB;
CALL PROGRAM(Prt Comp Crc Sum/Dtl  UP) ('PKQXUPR');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.PCS_Code);
PARAMETER(PAR.PCS_From_Kill_Date);
PARAMETER(PAR.PCS_To_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.Kill_Date_Usr);
PARAMETER('Y');
SBMJOBEND;

// Send information message - 'Job &1 has been submitted to job queue &2.'
MESSAGE(PRK0813 *INFO);
MSGPARM('PRTCMPCSD');
MSGPARM(PAR.PRT_Night_Queue);

ENDIF;

