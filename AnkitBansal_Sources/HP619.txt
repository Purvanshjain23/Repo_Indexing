      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP619
      * TITLE:       HPE/HPS Comparison Listing
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     09/05/00
      *
      *
      * FUNCTION:  Batch program to list check detail records for
      *            comparison to HPE's Purchase Journal by Date.
      *
      ****************************************************************
      * MODIFICATIONS:
      * ***************************************************************************************
      * Date:     PROGRAMMER
      * ***************************************************************************************
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 11/08/17  Brad Baden  E010812
      *           Changed Check Detail file to a Join Logical of HSP064
      *           and HSP034 to get the Business Office that is stored
      *           in the Hog Group File.  Added Business Office to LDA
      *           positions 17 - 21.
      *
      *  2/20/18  Brad Baden  E010812
      *           Added selection process for the business office.
      *
      * 01/22/21  ISE                TSN593
      *           Replaced *loval with *start
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034d   if   e           k disk
      *    Hog group
      *
      *
     Fhsj064j   if   e           k disk
      *    Check Detail + Hog Group
      *    (records selected/keyed in opnqry)
      *
      *
     Fhsl065c   if   e           k disk
      *    Check adjustments
      *
      *
     Fqprint    o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D customer        c                   'TOTAL FOR CUSTOMER'
     D date            c                   '                    TOTAL FOR DATE:'
     D type            c                   '                    TOTAL FOR TYPE:'
     D report          c                   '                      REPORT TOTAL:'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s            198    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields and save fields
      *
     D first           s              1    inz('Y')
     D firstrsl        s              1    inz('Y')
     D forcetotfl      s              1    inz('N')
     D svcvno          s                   like(cdcvno)
     D svkldt          s                   like(cdkldt)
     D svtpcd          s                   like(cdtpcd)
      *
      *
      * Print fields
      *
     D t1desc          s             35
     D t1cvno          s              8  0
      *
     D h1tpds          s             13
     D h1cvno          s              8  0
      *
     D d1hgcd          s                   like(hghgcd)
     D d1fscd          s                   like(hgfscd)
     D d1blcd          s                   like(hgblcd)
     D d1rmcd          s                   like(hgrmcd)
     D d1moddohd       s                   like(cddohd)
     D d1moddolb       s                   like(cddolb)
     D d1modlvhd       s                   like(cdlvhd)
     D d1modlvlb       s                   like(cdlvlb)
     D d1ntam          s             +2    like(cdgram)
     D d1chdt          s                   like(ldfmdy)
     D d1kldt          s                   like(ldfmdy)
      *
      *
      * Workfields
      *
     D wkdaam          s                   like(cdgram)
     D wkpdam          s                   like(cdgram)
      *
      * Array indexs
      *
     D x               s              1  0
     D p               s              2  0
     D q               s              2  0
     D d               s              2  0
     D f               s              2  0
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  DEDUCTION/ADDS AND PREMIUM/DISCOUNTS CODES AND AMOUNTS FOR
      *  A CHECK DETAIL LINE -- USED TO PRINT
      *---------------------------------------------------------------
      *
     D dd              s              5    dim(20)                              DED/add CD/AMT
     D da              s              7  2 dim(20)
     D pd              s              5    dim(20)                              PRM/DIS CD/AMT
     D pa              s              7  2 dim(20)
      *
      *---------------------------------------------------------------
      * Arrays for total lines
      *---------------------------------------------------------------
      *
     D lvhd            s              9  0 dim(4)
     D dohd            s              9  0 dim(4)
     D lvlb            s             11  0 dim(4)
     D dolb            s             11  0 dim(4)
     D crlb            s             11  0 dim(4)
     D baam            s             11  2 dim(4)
     D pdam            s             11  2 dim(4)
     D gram            s             11  2 dim(4)
     D daam            s             11  2 dim(4)
     D ntam            s             11  2 dim(4)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfcymd                1      8  0
     D  ldtcymd                9     16  0
     D  ldfsbo                17     21
      *
     D  ldfmdy               104    109  0
     D  ldtmdy               110    115  0
      *
      *---------------------------------------------------------------
      *  Date formats for flipping dates
      *---------------------------------------------------------------
      *
      * Date in MMDDYY format
      *
     D                 ds
     D  wkmdy                  1      6  0
     D  wkmm                   1      2  0
     D  wkdd                   3      4  0
     D  wkyy                   5      6  0
      *
      * Date in CCYYMMDD format
      *
     D                 ds
     D  wkcymd                 1      8  0
     D  wkcen                  1      2  0
     D  wkyer                  3      4  0
     D  wkmon                  5      6  0
     D  wkday                  7      8  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * In order to print all 'resales' at the end of the listing, we will
      * process the check detail file twice---once for live and carcass merit
      * records and a second time for resale records.
      *
      *
      * Carcass and live
     C                   dou       *in90 = *on                                  Do live/carcass
     C                   read      hsj064j                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             cdclcd <> 'RSL'
     C                   exsr      $proc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do live/carcass
      *
      *
      * Resale
593  C*    *loval        setll     hsj064j
593  C     *start        setll     hsj064j
     C                   dou       *in90 = *on                                  Do resale
     C                   read      hsj064j                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             cdclcd = 'RSL'
      *
     C                   if        firstrsl = yes
     C                   move      no            firstrsl
     C                   if        first = no
     C                   move      yes           forcetotfl
     C                   exsr      $break
     C                   move      no            forcetotfl
     C                   endif
     C                   endif
      *
     C                   exsr      $proc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do resale
      *
      *----------------------------------------------------------------
      * EOF PROCESSING
      *----------------------------------------------------------------
      *
      * If no records matched the selection criteria,
      *    print the standard 'NO DATA...' message
      * Otherwise, print the total lines for:
      *    a) the customer
      *    b) the last kill date
      *    c) the last payment type
      *    d) the report
      *
     C                   select
     C                   when      first = yes and firstrsl = yes
     C                   except    h1hdr
     C                   except    nodata
     C                   other
      *
     C                   z-add     1             x
     C                   eval      *in12 = *on
     C                   exsr      $total
     C                   eval      *in12 = *off
      *
     C                   z-add     2             x
     C                   move      date          t1desc
     C                   exsr      $total
      *
     C                   z-add     3             x
     C                   move      type          t1desc
     C                   exsr      $total
      *
     C                   z-add     4             x
     C                   move      report        t1desc
     C                   exsr      $total
      *
     C                   endsl
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------
      * Processing logic
      *----------------------------------------------------------------
      *
     C     $proc         begsr
      *
      * Only process records for the user selected Business Office
      *
     C                   if        hgfsbo = ldfsbo
      *
      * First time logic
      *
     C                   if        first = yes
     C                   exsr      $first
     C                   endif
      *
      *
      * Perform break logic when a) payment type or b) kill date or c) customer changes
      *
     C                   if        cdtpcd <> svtpcd or                          If break
     C                             cdkldt <> svkldt or
     C                             cdcvno <> svcvno
     C                   exsr      $break
     C                   endif                                                  If break
      *
      *-------------------------------------------------------------------
      * Detail processing
      *-------------------------------------------------------------------
      *
      * Flip check date from CCYYMMDD to MMDDYY
      *
     C                   z-add     cdchdt        wkcymd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         d1chdt
      *
      * Add condemned and yard dead head into the DOA head
      *
     C                   eval      d1moddohd = cddohd + cdcdhd + cdydhd
     C                   add       d1moddohd     dohd
      *
      * Add condemned and yard dead pounds into the DOA pounds
      *
     C                   eval      d1moddolb = cddolb + cdcdlb + cdydlb
     C                   add       d1moddolb     dolb
      *
      * Subtract the yard dead and condemned head from live head
      *
     C                   eval      d1modlvhd = cdlvhd - cdcdhd - cdydhd
     C                   add       d1modlvhd     lvhd
      *
      * Subtract the yard dead and condemned pounds from live pounds
      *
     C                   eval      d1modlvlb = cdlvlb - cdcdlb - cdydlb
     C                   add       d1modlvlb     lvlb
      *
     C                   add       cdcrlb        crlb
     C                   add       cdbaam        baam
     C                   add       cdgram        gram
      *
      * Retrieve group info
      *
     C     cdhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off                                 If group hit
     C                   z-add     hgfscd        d1fscd
     C                   movel     hghgcd        d1hgcd
     C                   movel     hgblcd        d1blcd
     C                   movel     hgrmcd        d1rmcd
     C                   endif                                                  If group hit
      *
      *  Load deduction/adds & premium/discounts into arrays for printing
      *
     C                   exsr      $totda
     C                   xfoot     da            wkdaam
     C                   xfoot     pa            wkpdam
      *
      * Calculate net amount
      *
     C     cdgram        add       wkdaam        d1ntam
      *
      *
      * Accumulate for totals
      *
     C                   add       d1ntam        ntam
     C                   add       wkdaam        daam
     C                   add       wkpdam        pdam
      *
      * Print detail line
      *
     C                   if        *inof = *on
     C                   seton                                        10
     C                   except    h1hdr
     C                   endif
      *
     C                   except    d1dtl
     C                   setoff                                       10
      *
      * Print check adjustment arrays
      *
     C                   exsr      $prtda
      *
     C                   endif                                                  fi hgfsbo <> ldfsbo
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Control break logic
      *----------------------------------------------------------------
      *
     C     $break        begsr
      *
      * Always print 'customer' total at break.
      *
     C                   z-add     1             x
     C                   eval      *in12 = *on
     C                   eval      t1cvno = svcvno
     C                   move      customer      t1desc
     C                   exsr      $total
     C                   eval      *in12 = *off
      *
     C                   if        cdtpcd = svtpcd
     C                   eval      *in11 = *on
     C                   endif
      *
     C                   z-add     cdcvno        svcvno
      *
      * If 'kill date' has changed
      *
     C                   if        cdkldt <> svkldt
     C                   z-add     2             x
     C                   move      date          t1desc
     C                   exsr      $total
     C                   z-add     cdkldt        svkldt
      *
      * Flip the new kill date from CCYYMMDD to MMDDYY
      *
     C                   seton                                        10
     C                   z-add     cdkldt        wkcymd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         d1kldt
     C                   endif
      *
      * If payment type has changed or you are forcing the print of totals
      * for the carcass merit/live section before going on to RESALE records:
      *   a) print total for payment type
      *   b) retrieve the description for the new payment type
      *   c) set on overflow so that the next payment type will print
      *      on a new page
      *
     C                   if        cdtpcd <> svtpcd or                          If type total
     C                             forcetotfl = yes
     C                   z-add     3             x
     C                   move      type          t1desc
     C                   exsr      $total
     C                   move      cdtpcd        svtpcd
     C                   exsr      $tpds
     C                   seton                                        of
     C                   eval      h1cvno = cdcvno
     C                   endif                                                  If type total
      *
      * Print customer number because of break
      *
     C                   if        *in11 = *on
     C                   eval      h1cvno = svcvno
     C                   except    cust
     C                   eval      *in11 = *off
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Populate the 'type of payment' description for printing
      *----------------------------------------------------------------
      *
     C     $tpds         begsr
      *
     C                   select
     C                   when      cdclcd = 'RSL'
     C                   eval      h1tpds = 'Resale'
      *
     C                   when      cdtpcd = 'L'
     C                   eval      h1tpds = 'Live'
      *
     C                   when      cdtpcd = 'C'
     C                   eval      h1tpds = 'Carcass Merit'
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Build array of deduction/add-ons and premium/discounts
      *----------------------------------------------------------------
      *
     C     $totda        begsr
      *
     C                   move      *blank        dd
     C                   z-add     0             da
     C                   z-add     0             f
     C                   move      *blank        pd
     C                   z-add     0             pa
     C                   z-add     0             q
      *
     C     key01         setll     hsl065c
      *
     C                   setoff                                       70
     C                   dow       *in70 = *off                                 Do loop
     C     key01         reade     hsl065c                                70
     C                   if        *in70 = *off                                 If hit
      *
      * Load deductions/add-on in array
      *
     C                   select
     C                   when      cjcjfl = 'D'
     C                   z-add     1             d
     C     cjcjcd        lookup    dd(d)                                  50
     C                   if        *in50 = *off                                 If DA found
     C                   add       1             f
     C                   movel     cjcjcd        dd(f)
     C                   z-add     cjcjam        da(f)
     C                   else
     C                   add       cjcjam        da(d)
     C                   endif                                                  If DA found
     C                   other
      *
      * Load premium/discounts into array
      *
     C                   z-add     1             p
     C     cjcjcd        lookup    pd(p)                                  50
     C                   if        *in50 = *off                                 If PD found
     C                   add       1             q
     C                   movel     cjcjcd        pd(q)
     C                   z-add     cjcjam        pa(q)
     C                   else
     C                   add       cjcjam        pa(p)
     C                   endif                                                  If PD found
     C                   endsl
      *
     C                   endif                                                  If hit
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Print array of deduction/add-ons and premiums/discounts
      *----------------------------------------------------------------
      *
     C     $prtda        begsr
      *
      * Start at element 2 since element 1 was print in detail line one.
      *
     C                   z-add     1             d
      *
     C     2             do        20            p
     C                   add       1             d
     C                   if        pa(p) <> 0 or
     C                             da(d) <> 0
     C                   except    d2dtl
     C                   endif
     C                   enddo
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Flip dates from YYMMDD to MMDDYY
      *----------------------------------------------------------------
      *
     C     $tomdy        begsr
      *
     C                   z-add     wkmon         wkmm
     C                   z-add     wkday         wkdd
     C                   z-add     wkyer         wkyy
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Print total line
      *----------------------------------------------------------------
      *
     C     $total        begsr
      *
     C                   if        *inof = *on
     C                   seton                                        10
     C                   except    h1hdr
     C                   endif
      *
     C                   except    t1tot
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * First time processing
      *---------------------------------------------------------------
      *
      * Flip kill date from CCYYMMDD to MMDDYY
      *
     C     $first        begsr
      *
      * Retrieve type of payment description
      *
     C                   move      cdcvno        h1cvno
      *
      * Flip kill date for printing and set on the indicator that
      * controls printing of the kill date.
      *
     C                   seton                                        10
     C                   z-add     cdkldt        wkcymd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         d1kldt
      *
      * Retrieve type of payment description
      *
     C                   exsr      $tpds
      *
      * Print report headings
      *
     C                   except    h1hdr
      *
      * Save control break values.
      *
     C                   move      cdtpcd        svtpcd
     C                   z-add     cdkldt        svkldt
     C                   z-add     cdcvno        svcvno
     C                   move      no            first
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
     C                   kfld                    cdlnno
      *
     C                   time                    rtime
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report headings
      *-------------------------------------------------------------
      *
     Oqprint    e            h1hdr          1 01
     O                       sdpgm               10
     O                                          108 'HOG PRODUCTION SYSTEM'
     O                                          188 'DATE'
     O                       udate         Y    198
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                                          110 'HPE/HPS COMPARISON LISTING'
     O                                          188 'TIME'
     O                       rtime              198 '  :  :  '
      *
     O          e            h1hdr          1
     O                                          188 'PAGE'
     O                       page          Z    198
      *
     O          e            h1hdr          1
     O                                           16 'FROM KILL DATE:'
     O                       ldfmdy        Y     25
      *
     O          e            h1hdr          2
     O                                           16 'TO KILL DATE:'
     O                       ldtmdy        Y     25
      *
     O          e            h1hdr          3
     O                                           16 'BUSINESS OFFICE:'
     O                       ldfsbo              22
      *
      *
      *-------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------
     O          e            h1hdr          1
     O                                            6 'KILL'
     O                                           27 'CHECK'
     O                                           37 'CHECK'
     O                                           48 'MOVEMENT'
     O                                           55 'FARM'
     O                                           94 'LIVE - Y/D & CD'
     O                                          111 'DOA + Y/D & CD'
     O                                          121 'CARCASS'
     O                                          135 'BASE'
     O                                          166 'GROSS'
     O                                          196 'NET'
     O          E            h1hdr          1
     O                                            6 'DATE'
     O                                           18 'TATTOO'
     O                                           27 'NUMBER'
     O                                           36 'DATE'
     O                                           48 'NUMBER'
     O                                           55 'SITE'
     O                                           62 'GROUP'
     O                                           71 'BLDNG'
     O                                           76 'ROOM'
     O                                           84 'HEAD'
     O                                           94 'POUNDS'
     O                                          101 'HEAD'
     O                                          111 'POUNDS'
     O                                          121 'POUNDS'
     O                                          135 'AMOUNT'
     O                                          153 'PREMIUM/DISCOUNT'
     O                                          166 'AMOUNT'
     O                                          184 'DEDUCTION/ADD-ON'
     O                                          197 'AMOUNT'
     O          E            h1hdr          2
     O                       DASH               198
      *
     O          E            h1hdr          1
     O                       h1tpds              13
      *
     O          E            h1hdr          1
     O                       h1cvno        z      8
      *
      *-------------------------------------------------------------
      * Customer number changed
      *-------------------------------------------------------------
     O          E            cust           1
     O                       h1cvno        z      8
      *
      *-------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------
     O          E            d1dtl          1
     O               10      d1kldt        y      8
     O                       cdtano        zb    18
     O                       cdchno        z     27
     O                       d1chdt        y     38
     O                       cdmvsn        zb    48
     O                       d1fscd        mb    56
     O                       d1hgcd         b    64
     O                       d1blcd         b    71
     O                       d1rmcd         b    77
      *
     O                       d1modlvhd     kb    85
     O                       d1modlvlb     kb    95
     O                       d1moddohd     kb   102
     O                       d1moddolb     kb   112
      *
     O                       cdcrlb        kb   122
     O                       cdbaam        kb   136
     O                       pd(1)              142
     O                       pa(1)         k    153
     O                       cdgram        kb   167
     O                       dd(1)              173
     O                       da(1)         k    184
     O                       d1ntam        kb   198
      *
     O          E            d2dtl          1
     O                       pd(p)              142
     O                       pa(p)         k    153
     O                       dd(d)              173
     O                       da(d)         k    184
      *
      *-------------------------------------------------------------
      * Total lines
      *-------------------------------------------------------------
     O          E            t1tot       1  1
     O               12      customer            60
     O               12      t1cvno        z     69
     O               12                          70 ':'
     O              N12      t1desc              70
     O                       lvhd(x)       kb    85
     O                       dohd(x)       kb   102
      *
     O                       crlb(x)       kb   122
     O                       pdam(x)       kb   153
     O                       daam(x)       kb   184
      *
     O          E            t1tot       0  2
     O                       lvlb(x)       kb    95
     O                       dolb(x)       kb   112
      *
     O                       baam(x)       kb   136
     O                       gram(x)       kb   167
     O                       ntam(x)       kb   198
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      2
     O                                           19 'NO DATA MEETS YOUR'
     O                                           38 'SELECTION CRITERIA'
