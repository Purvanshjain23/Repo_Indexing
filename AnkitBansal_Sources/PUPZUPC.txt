/*********************************************************************/
/* PROGRAM : PUPZUPC                                                 */
/* DESC    : Exc QSH to Get Beg Bal CL EXECUTE USER PROGRAM          */
/* DATE    : 02/21/2020                                              */
/* PROJECT : S16166 - ADD STEP TO THE POST ORDER ALLOCATION TO KICK  */
/*           OFF INFORMATICA WORKFLOW SCRIPT.                        */
/* BY      : DANNY NGUYEN                                            */
/* PURPOSE : Execute the QSH workflow from Informatica to run the    */
/*           Post Inventory Restoration & Post Order Allocation      */
/*           script. This will give Business to get the current      */
/*           inventory counts between the 2 Post script jobs.        */
/*                                                                   */
/*           Files to get the beginning balance from:                */
/*           POCWCPP - PS Prod Item Inventory                        */
/*           POB5CPP - Order Detail Sched-Inv                        */
/*           PDKNCPP - Order Detail Schedule                         */
/*                                                                   */
/*           Program is called from JS:                              */
/*           TEST env: 'INVBLDALC'.                                  */
/*           PROD env: 'INVBUILDPS' & 'INVBUILDPX'.                  */
/*                                                                   */
/* PARAMETER:                                                        */
/*           &CALLJOB - 'R' to call Restoration script.              */
/*                      'A' to call Allocation script.               */
/*                                                                   */
/*********************************************************************/
/* MAINTENANCE LOG:                                                  */
/*-------------------------------------------------------------------*/
/* DATE     BY  CHANGE DESCRIPTION                                   */
/* -------- --- ---------------------------------------------------- */
/* 05/28/20 DN  S16603 - Add MONMSG CPF0000 to prevent any hold up   */
/*              when running from the build Order Detail Schedule    */
/*              job PMD1XFR.                                         */
/* 04/07/24 Santosh Task: SDN972 CM Project: SDN972                  */
/*          1. Hardcoded Password is commented/removed and decrypted */
/*             password is received from PVGJXFR.                    */
/*          2. Passwords are managed by Security team in the Cross   */
/*             Application Menu CAS002/29 (WW Security Controls).    */
/*                                                                   */
/*********************************************************************/

             PGM        PARM(&CALLJOB)

             DCL        VAR(&CALLJOB) TYPE(*CHAR) LEN(1)

             DCL        VAR(&DTALIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(150)
           /*DCL        VAR(&PSWD) TYPE(*CHAR) LEN(10)   */

             /* SDN972 Changes start */
                      DCL        VAR(&PSWD) TYPE(*CHAR) LEN(20)
                      DCL        VAR(&USRID) TYPE(*CHAR) LEN(12)
                      DCL        VAR(&IPADDRS) TYPE(*CHAR) LEN(60)
             /* SDN972 Changes End */


             MONMSG     MSGID(CPF0000)

/*-------------------------------------------------------------------*/
/* Get Data Library to Determine if in TEST or PROD Env.             */
/*-------------------------------------------------------------------*/
             CALL       PGM(PPJXXFR) PARM(' ' 'DTALIB' &DTALIB)

/*-------------------------------------------------------------------*/
/* Build & Execute the Informatica Workflow Qshell Script.           */
/*-------------------------------------------------------------------*/
             CHGVAR     VAR(&CMD) VALUE(*BLANKS)

/*Call Inventory Restoration Script */
             IF         COND(&CALLJOB *EQ 'R') THEN(DO)

    /* Set TEST or PROD Workflow Directory - Is Case Sensitive. */
             IF         COND(&DTALIB *NE 'PRKFLIB') THEN(DO)
      /* SDN972 - Changes Begin - Comment & remove hardcoded password.      */
      /*          Get Password from PVGJXFR.                                */
      /*     CHGVAR     VAR(&PSWD) VALUE(' '')      */
      /*     CHGVAR     VAR(&CMD) +
                          VALUE('/QOpenSys/infawf/FRESH_POST_INVENTOR+
                          Y_RESTORATION_TST.sh')                            */
             CALL       PGM(PVGJXFR) PARM((' ') ('INVRSTALLOC') +
                          ('QAT') (&CMD) (&USRID) (&PSWD) (&IPADDRS))
      /* SDN972 - Changes End                                               */
             ENDDO
             ELSE       CMD(DO)
      /* SDN972 - Changes Begin - Comment & remove hardcoded password.      */
      /*          Get Password from PVGJXFR.                                */
      /*     CHGVAR     VAR(&PSWD) VALUE(' ') */
      /*     CHGVAR     VAR(&CMD) +
                          VALUE('/QOpenSys/infawf/FRESH_POST_INVENTOR+
                          Y_RESTORATION_PRD.sh')                      */
             CALL       PGM(PVGJXFR) PARM((' ') ('INVRSTALLOC') +
                          ('PROD') (&CMD) (&USRID) (&PSWD) (&IPADDRS))
      /* SDN972 - Changes End                                               */
             ENDDO
             ENDDO      /* &CALLJOB='R' */

/*Call Order Allocation Script */
             IF         COND(&CALLJOB *EQ 'A') THEN(DO)

    /* Set TEST or PROD Workflow Directory - Is Case Sensitive. */
             IF         COND(&DTALIB *NE 'PRKFLIB') THEN(DO)
    /* SDN972 - Changes Begin - Comment & remove hardcoded password.      */
    /*          Get Password from PVGJXFR.                                */
    /*       CHGVAR     VAR(&PSWD) VALUE(' ')                             */
    /*       CHGVAR     VAR(&CMD) +
                          VALUE('/QOpenSys/infawf/FRESH_POST_ORDER_AL+
    /*                    LOCATION_TST.sh')                             */
             CALL       PGM(PVGJXFR) PARM((' ') ('POSTORDALLOC') +
                          ('QAT') (&CMD) (&USRID) (&PSWD) (&IPADDRS))
    /* SDN972 - Changes End                                               */
             ENDDO
             ELSE       CMD(DO)
    /* SDN972 - Changes Begin - Comment & remove hardcoded password.      */
    /*          Get Password from PVGJXFR.                                */
    /*       CHGVAR     VAR(&PSWD) VALUE(' ')                             */
    /*       CHGVAR     VAR(&CMD) +
                          VALUE('/QOpenSys/infawf/FRESH_POST_ORDER_AL+
                          LOCATION_PRD.sh')                             */
             CALL       PGM(PVGJXFR) PARM((' ') ('POSTORDALLOC') +
                          ('PROD') (&CMD) (&USRID) (&PSWD) (&IPADDRS))
    /* SDN972 - Changes End                                               */
             ENDDO
             ENDDO      /* &CALLJOB='A' */


             CHGVAR     VAR(&CMD) VALUE(&CMD *BCAT &PSWD)

    /* Call Qshell Command */
             QSH        CMD(&CMD)


             ENDPGM
