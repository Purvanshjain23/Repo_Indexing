// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDEMXFR
// ?Date: 14.08.2025 Time: 03:31:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Count USR = CON.*ZERO
PAR.Count_USR = *ZERO;

EXECUTE FUNCTION(RTV Co. A/R Nite Batch RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1382062;
PARAMETER(PAR.Count_USR);
{
 //?USER: Process Data record

 //?Check the Existence of any Customers for company record
 CASE;

 // IF DB1.Company Number is not equal to zero
 IF DB1.Company_Number <> *ZERO;

 EXECUTE FUNCTION(RTV Chk A/R Nite Batch RT) TYPE(RTVOBJ) FILE(ARBCREP)          AC1382063;
 PARAMETER(DB1.Company_Number);
 {
  //?USER: Process Data record

  QUIT;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // Call program Rtv Plant Co/Org      XF.
 CALL PROGRAM(Rtv Plant Co/Org      XF) ('PMOVXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Plant_Company_Sts);
 PARAMETER(NLL.Company_Organization);

 //?Only process a Plant Company record
 CASE;

 // IF LCL.Plant Company Sts is Plant Company
 IF LCL.Plant_Company_Sts = 'P';

 //?Age A/R & Report.
 DO;

 //?** Get Default Printer
 EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
 PARAMETER(DB1.Company_Number);
 PARAMETER('DFTARAGE');
 PARAMETER(PAR.PRT_Printer_Device);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?** Count the number of companies that go through this routine
 //?** Pass the count to the UPD A/R Sum Nite Aging CL
 // PAR.Count USR = PAR.Count USR + CON.1
 PAR.Count_USR = PAR.Count_USR + 1;

 //?** Retrieve the Default Record from the A/R Aging Control file
 //?** and pass to the Aging Program
 // PAR.Company Number Pass   USR = DB1.Company Number
 PAR.Company_Number_Pass_USR = DB1.Company_Number;

 EXECUTE FUNCTION(RTV Default Aging Code RT) TYPE(RTVOBJ) FILE(PMADCPP)          AC1801040;
 PARAMETER(WRK.A_R_Aging_Code);
 PARAMETER(WRK.A_R_Aging_Days_1);
 PARAMETER(WRK.A_R_Aging_Days_2);
 PARAMETER(WRK.A_R_Aging_Days_3);
 PARAMETER(WRK.A_R_Aging_Days_4);
 PARAMETER(WRK.Age_by_Trans_or_Due_Date);
 PARAMETER(WRK.Default_Y_N);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Initialize routine

  // PAR.A/R Aging Code = CND.Not Entered
  PAR.A_R_Aging_Code = *BLANK;

  //?USER: Process Data record

  // PAR.A/R Aging Code = DB1.A/R Aging Code
  PAR.A_R_Aging_Code = DB1.A_R_Aging_Code;

  CASE;

  // IF DB1.Default Y/N is yes
  IF DB1.Default_Y_N = 'Y';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 // Call program UPD A/R Sum Nite Aging CL.
 CALL PROGRAM(UPD A/R Sum Nite Aging CL) ('PDYDUPR');
 PARAMETER(PAR.Company_Number_Pass_USR);
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(WRK.A_R_Aging_Code);
 PARAMETER(PAR.Count_USR);

 ENDDO;

 ENDIF;

 ENDIF;

 ENDIF;

}


//?Purge A/R Headers to History
EXECUTE FUNCTION(CHG Purge Status/Hist  RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1380980;
PARAMETER(*ZERO);
{
 //?USER: Process Data record

 //?A/R Header Record is Paid in Full
 CASE;

 // IF DB1.Remaining Balance Due is equal to zero
 IF DB1.Remaining_Balance_Due = *ZERO;

 // AND DB1.Paid in Full Date is entered
 AND DB1.Paid_in_Full_Date <> *ZERO;

 // PAR.USR Due Date - ATR = DB1.Paid in Full Date + CON.30 *DAYS
 PAR.USR_Due_Date_ATR = DATEINCR(DB1.Paid_in_Full_Date 30 'DY' 1111111 'NONE' 'N' 1);

 CASE;

 // IF JOB.*Job date GT PAR.USR Due Date - ATR
 IF JOB.*Job_date > PAR.USR_Due_Date_ATR;

 // WRK.Purge Status = CND.History
 WRK.Purge_Status = 'H';

 EXECUTE FUNCTION(CHG Purge Status       CH) TYPE(CHGOBJ) FILE(ARBDCPP)          AC1381033;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(WRK.Purge_Status);
 ENDIF;

 ENDIF;

}


//?Credit Check Open Orders
// Call program CRT Nite Cred.Chk Wrkf XF.
CALL PROGRAM(CRT Nite Cred.Chk Wrkf XF) ('PDSDXFR');
PARAMETER('Y');
PARAMETER(*ZERO);

