      *These two lines here to aid in debugging when needed***************
     H debug(*yes)
     H option(*srcstmt:*nodebugio)
      * SYSTEM:      Hog Production
      * PROGRAM:     HP1023
      * TITLE:       Revise Targets for Nur/Fin Target Table/Year
      * PROGRAMMER:  Sharon Zurn
      * CREATED:     01/05/07
      *
      * FUNCTION: This is an edit record function that revises the targets
      *           for a specify target table/year.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'dfmode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           dfmode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           Restrictors:
      *                Origin BGF Cell
      *                Origin BGF Pod
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      *
      * 12/10/08  LeAnne Ramsey
      *           Added GF "GDU" targets to the Nur/Fin Yearly Targets file.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1023   cf   e             workstn infds(iofeed)
      *
      *
     Fhsl123b   uf a e           k disk
      *  Nur/Fin yearly targets
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
     D notflg          s              1    inz('Y')
      *
      *
      * Parm fields
      *
     D xxobcell        s                   like(d1obcell)
     D xxobpod         s                   like(d1obpod)
     D xxcdyr          s                   like(nycdyr)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $update
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * If the user is in CREATE mode, clear the fields
      *
     C                   select                                                 Main select
     C                   when      mode = create
     C                   exsr      $clear
     C                   move      yes           notflg
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * records using the parms passed in.  Do not lock the records.
      * Typically, in DELETE mode these retrieved values will not be
      * displayed. However, if there is an error on the delete action
      * the panel will be displayed.
      *
     C                   when      mode = revise or mode = delete
      *
     C     key01         setll     hsl123b
     C                   dou       *in91 = *on                                  Do 4 qtrs
     C     key01         reade(n)  hsl123b                                91
     C                   if        *in91 = *off                                 If not EOF
     C                   move      no            notflg
      *
     C                   select
     C                   when      nycdqr = 1
     C                   z-add     nyntlspr      d1ntlspr1
     C                   z-add     nygtlspr      d1gtlspr1
     C                   z-add     nygcupr       d1gcupr1
     C                   z-add     nyggtlspr     d1ggtlspr1
     C                   z-add     nyggcupr      d1ggcupr1
      *
     C                   when      nycdqr = 2
     C                   z-add     nyntlspr      d1ntlspr2
     C                   z-add     nygtlspr      d1gtlspr2
     C                   z-add     nygcupr       d1gcupr2
     C                   z-add     nyggtlspr     d1ggtlspr2
     C                   z-add     nyggcupr      d1ggcupr2
      *
     C                   when      nycdqr = 3
     C                   z-add     nyntlspr      d1ntlspr3
     C                   z-add     nygtlspr      d1gtlspr3
     C                   z-add     nygcupr       d1gcupr3
     C                   z-add     nyggtlspr     d1ggtlspr3
     C                   z-add     nyggcupr      d1ggcupr3
      *
     C                   when      nycdqr = 4
     C                   z-add     nyntlspr      d1ntlspr4
     C                   z-add     nygtlspr      d1gtlspr4
     C                   z-add     nygcupr       d1gcupr4
     C                   z-add     nyggtlspr     d1ggtlspr4
     C                   z-add     nyggcupr      d1ggcupr4
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do 4 qtrs
      *
      * Record does not exist.
      *
     C                   if        notflg = yes
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif
     C                   endif
     C                   endsl                                                  Main select
      *
      * If the user is deleting, go on to the update routine and don't
      * display the screen. Otherwise, display screen 1.
      *
     C                   if        error = 0 and action = delete
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear the fields on screen 1
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Quarter 1
     C                   z-add     0             d1ntlspr1
     C                   z-add     0             d1gtlspr1
     C                   z-add     0             d1gcupr1
     C                   z-add     0             d1ggtlspr1
     C                   z-add     0             d1ggcupr1
      * Quarter 2
     C                   z-add     0             d1ntlspr2
     C                   z-add     0             d1gtlspr2
     C                   z-add     0             d1gcupr2
     C                   z-add     0             d1ggtlspr2
     C                   z-add     0             d1ggcupr2
      * Quarter 3
     C                   z-add     0             d1ntlspr3
     C                   z-add     0             d1gtlspr3
     C                   z-add     0             d1gcupr3
     C                   z-add     0             d1ggtlspr3
     C                   z-add     0             d1ggcupr3
      * Quarter 4
     C                   z-add     0             d1ntlspr4
     C                   z-add     0             d1gtlspr4
     C                   z-add     0             d1gcupr4
     C                   z-add     0             d1ggtlspr4
     C                   z-add     0             d1ggcupr4
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1023k1
     C                   write     hp1023ec
     C                   exfmt     hp1023r1
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Process user's entry and set routine
      *
     C                   select                                                 Select response
     C                   when      *in03 = *on                                  F3-exit
     C                   move      *blank        rtncd
     C                   eval      routne = exit
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in11 = *on                                  F11-delete
     C                   movel     delete        action
     C                   exsr      $update
      *
     C                   when      *in09 = *on                                  f9=accept
     C                   exsr      $edit1
      *
     C                   select
     C                   when      error > 0
     C                   eval      routne = scrn1
      *
     C                   when      error = 0
     C                   exsr      $update
     C                   endsl
     C                   other
      *
      * User has pressed ENTER
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * When creating, validate:
      *   1) year
     C                   if        mode = create
     C                   exsr      $cdyr
     C                   endif
      *
      * Always validate target values:
      *
     C                   exsr      $targets
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Reset indicators for all screens
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      *  Set up for mode
      *
     C                   select
     C                   when      dfmode = create
     C                   seton                                        61
      *
     C                   when      dfmode = revise
     C                   seton                                        60
      *
     C                   when      dfmode = delete
     C                   seton                                        62
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate year  (only in Create mode)
      *---------------------------------------------------------------
      *
     C     $cdyr         begsr
      *
      * Validate year
     C                   select
     C                   when      d1cdyr = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1cdyr < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1cdyr < 1998 or d1cdyr > 2025
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09028'
     C                   endif
     C                   endsl
      *
      * If Year is valid, check that you do not already have records for this
      * Cell/Pod/Year.
      *
     C                   if        *in31 = *off                                 If OK
     C     key01         chain(n)  hsl123b                            92
     C                   if        *in92 = *off                                 If exists
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS02025'     mgid(e)
     C                   endif
     C                   endif                                                  If exists
     C                   endif                                                  If OK
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Target values
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) No value can be negative
      *
     C     $targets      begsr
      *
      * Quarter 1
     C                   if        d1ntlspr1 < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gtlspr1 < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gcupr1 < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggtlspr1 < 0
     C                   seton                                        70
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggcupr1 < 0
     C                   seton                                        71
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Quarter 2
     C                   if        d1ntlspr2 < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gtlspr2 < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gcupr2 < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggtlspr2 < 0
     C                   seton                                        72
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggcupr2 < 0
     C                   seton                                        73
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Quarter 3
     C                   if        d1ntlspr3 < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gtlspr3 < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gcupr3 < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggtlspr3 < 0
     C                   seton                                        74
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggcupr3 < 0
     C                   seton                                        75
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      * Quarter 4
     C                   if        d1ntlspr4 < 0
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gtlspr4 < 0
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1gcupr4 < 0
     C                   seton                                        42
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggtlspr4 < 0
     C                   seton                                        76
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   if        d1ggcupr4 < 0
     C                   seton                                        77
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update record
      *---------------------------------------------------------------
      *
     C     $update       begsr
      *
      * If there are no errors, delete/revise/create
      *
     C                   if        error = 0                                    If no error
      * Revise/Delete
     C                   if        action = delete or action = revise
     C                   exsr      $delete
     C                   endif
      *
      * Move DSPF fields to database file fields and write 4 records.
      *
     C                   if        action = create or action = revise
     C                   exsr      $wrt123
     C                   endif
     C                   endif                                                  If no error
      *
      *  If there are any errors, redisplay the screen; otherwise, exit.
      *
     C                   select
     C                   when      error  > 0
     C                   eval      routne = scrn1
     C                   other
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write 4 "quarter" reocrds
      *---------------------------------------------------------------
      *
     C     $wrt123       begsr
      *
      * Quarter 1
     C                   z-add     1             nycdqr
     C                   z-add     d1cdyr        nycdyr
     C                   z-add     d1obcell      nyobcell
     C                   z-add     d1obpod       nyobpod
     C                   z-add     d1ntlspr1     nyntlspr
     C                   z-add     d1gtlspr1     nygtlspr
     C                   z-add     d1gcupr1      nygcupr
     C                   z-add     d1ggtlspr1    nyggtlspr
     C                   z-add     d1ggcupr1     nyggcupr
     C                   write     nyrec
      *
      * Quarter 2
     C                   z-add     2             nycdqr
     C                   z-add     d1cdyr        nycdyr
     C                   z-add     d1obcell      nyobcell
     C                   z-add     d1obpod       nyobpod
     C                   z-add     d1ntlspr2     nyntlspr
     C                   z-add     d1gtlspr2     nygtlspr
     C                   z-add     d1gcupr2      nygcupr
     C                   z-add     d1ggtlspr2    nyggtlspr
     C                   z-add     d1ggcupr2     nyggcupr
     C                   write     nyrec
      *
      * Quarter 3
     C                   z-add     3             nycdqr
     C                   z-add     d1cdyr        nycdyr
     C                   z-add     d1obcell      nyobcell
     C                   z-add     d1obpod       nyobpod
     C                   z-add     d1ntlspr3     nyntlspr
     C                   z-add     d1gtlspr3     nygtlspr
     C                   z-add     d1gcupr3      nygcupr
     C                   z-add     d1ggtlspr3    nyggtlspr
     C                   z-add     d1ggcupr3     nyggcupr
     C                   write     nyrec
      *
      * Quarter 4
     C                   z-add     4             nycdqr
     C                   z-add     d1cdyr        nycdyr
     C                   z-add     d1obcell      nyobcell
     C                   z-add     d1obpod       nyobpod
     C                   z-add     d1ntlspr4     nyntlspr
     C                   z-add     d1gtlspr4     nygtlspr
     C                   z-add     d1gcupr4      nygcupr
     C                   z-add     d1ggtlspr4    nyggtlspr
     C                   z-add     d1ggcupr4     nyggcupr
     C                   write     nyrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Delete the 4 "quarter" records for this table/year
      *---------------------------------------------------------------
      *
     C     $delete       begsr
      *
     C     key01         setll     hsl123b
     C                   dou       *in91 = *on
     C     key01         reade     hsl123b                                91
     C                   if        *in91 = *off
     C                   delete    nyrec
     C                   endif
     C                   enddo
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     dfmode        parm                    mode
     C     d1obcell      parm                    xxobcell
     C     d1obpod       parm                    xxobpod
     C     d1cdyr        parm                    xxcdyr
     C                   parm                    rtncd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1obcell
     C                   kfld                    d1obpod
     C                   kfld                    d1cdyr
      *
     C                   movel     mode          action
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
