// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDXYDFR
// ?Date: 14.08.2025 Time: 03:36:29
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E4057 JJH 04/27/15 - Price Credit Memo Fixes
//?- Pass in new parm: Attach to Order Number to Post Credit/Debit
//?  IF - Order Header TRG
ENDDO;

//?USER: Initialize subfile control

// CTL.Actual Shipped Date = PAR.Actual Shipped Date
CTL.Actual_Shipped_Date = PAR.Actual_Shipped_Date;

//?USER: Initialize subfile record from DBF record

CASE;

// IF RCD.Header Status is Cancelled
IF RCD.Header_Status = 'X';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Re-read Subfile Record = CND.*YES
PGM.*Re_read_Subfile_Record = 1;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.Order Type Print Status is yes
IF RCD.Order_Type_Print_Status = 'Y';

// PAR.Reverse Image Flag USR = CND.No
PAR.Reverse_Image_Flag_USR = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Memo not eligible for Post-not printed on Pre-Invoice Reg.'
ERROR(USR2895);
MSGPARM(RCD.Order_Type_Print_Status);
MSGPARM(RCD.Order_Number);

// PAR.Reverse Image Flag USR = CND.Yes
PAR.Reverse_Image_Flag_USR = 'Y';

ENDIF;

// PGM.*Re-read Subfile Record = CND.*YES
PGM.*Re_read_Subfile_Record = 1;

//?USER: Process subfile record (Post-confirm)

//?E4057 JJH 04/27/15 - New I Parm:  Attach to Order Number
EXECUTE FUNCTION(Post Credit/Debit      IF) TYPE(EXCINTFUN)                     AC1574185;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(RCD.Header_Status);
PARAMETER(RCD.Date_of_Original_Entry);
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Absorbed_Freight_Rate_CWT);
PARAMETER(RCD.Affect_Auto_Accruals);
PARAMETER(RCD.Attach_to_Order_Number);
PARAMETER(RCD.Invoice_Number);
PARAMETER(RCD.Invoice_Suffix);
PARAMETER(RCD.Billing_Activity_Type);
PARAMETER(RCD.Claim_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 //?E4057 JJH 04/27/15 - New I Parm: Attach to Order Number
 EXECUTE FUNCTION(UPD Event,Sts Ship Dtl RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1367535;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('R');
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG Act Shp,Sts,Evt    CH) TYPE(CHGOBJ) FILE(OPBGWKP)          AC1437412;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Detail_Line_Status);
  PARAMETER(DB1.Detail_Line_Status_Last);
  PARAMETER(PAR.Actual_Shipped_Date);
  PARAMETER(PAR.Event_Code);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 // PAR.Event Number = CON.*ZERO
 PAR.Event_Number = *ZERO;

 EXECUTE FUNCTION(RTV Next Event Number  RT) TYPE(RTVOBJ) FILE(OPEYCPP)          AC1306444;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.Event Number = CON.1
  PAR.Event_Number = 1;

  //?USER: Process Data record

  // PAR.Event Number = DB1.Event Number
  PAR.Event_Number = DB1.Event_Number;

 }

 // PAR.Event Number = PAR.Event Number + CON.1
 PAR.Event_Number = PAR.Event_Number + 1;

 EXECUTE FUNCTION(CRT OP Order Events    CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1170141;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Event_Number);
 PARAMETER('06');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(JOB.*Job_date);
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER('Y');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Ship_To_Customer);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Invc#,Dte,Evt,PrtS CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1345003;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('R');
 PARAMETER(PAR.Header_Status);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER('06');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PAR.Company Number Pass   USR = PAR.Company Number
 PAR.Company_Number_Pass_USR = PAR.Company_Number;

 // PAR.Invoice Number PASS = PAR.Invoice Number
 PAR.Invoice_Number_PASS = PAR.Invoice_Number;

 //?Order selection
 //?05/30/08 PKD/RMC FP1110 Needed to call the accruals rountine here also.
 CASE;

 // IF PAR.Affect Auto Accruals is Affect Auto Accruals
 IF PAR.Affect_Auto_Accruals = 'Y';

 //?E4057 JJH 04/23/15 - New I parm for: Attach to Order Number
 // Call program UPD Auto Accruals      XF.
 CALL PROGRAM(UPD Auto Accruals      XF) ('PDT5XFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(PAR.Date_of_Original_Entry);
 PARAMETER(PAR.Load_ID);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 PARAMETER(PAR.Attach_to_Order_Number);
 PARAMETER(PAR.Actual_Shipped_Date);
 PARAMETER(PAR.Billing_Activity_Type);

 ENDIF;

 // Call program UPD Post InvoicesSBMCLUP.
 CALL PROGRAM(UPD Post InvoicesSBMCLUP) ('PDIPSUPR');
 PARAMETER(PGM.*Return_code);
 PARAMETER('PDIPSPCL');
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
 PARAMETER(PAR.PRT_Night_Queue);
 PARAMETER(PAR.Company_Number_Pass_USR);
 PARAMETER(PAR.Invoice_Number_PASS);
 PARAMETER(PAR.System_Value_Numeric);
 PARAMETER('OR');

 //?Update Claim.
 DO;

 CASE;

 // IF PAR.Claim Number is Not Zero
 IF PAR.Claim_Number <> *ZERO;

 EXECUTE FUNCTION(CHG Status only        CH) TYPE(CHGOBJ) FILE(PDMKCPP)          AC1573743;
 PARAMETER(PAR.Claim_Number);
 PARAMETER('C');
 {
  //?USER: Processing after Data read

  CASE;

  // IF PAR.Claim Status is Completed
  IF PAR.Claim_Status = 'C';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Post Date = JOB.*Job date
  DB1.Memo_Post_Date = JOB.*Job_date;

  // DB1.Memo Post Time = JOB.*Job time
  DB1.Memo_Post_Time = JOB.*Job_time;

  // IF PAR.Claim Status is Memo Processing
  IF PAR.Claim_Status = 'M';

  // AND PAR.Claim Status NE DB1.Claim Status
  AND PAR.Claim_Status <> DB1.Claim_Status;

  // DB1.Memo Created = CND.Yes
  DB1.Memo_Created = 'Y';

  // DB1.Memo Created Date = JOB.*Job date
  DB1.Memo_Created_Date = JOB.*Job_date;

  // DB1.Memo Created Time = JOB.*Job time
  DB1.Memo_Created_Time = JOB.*Job_time;

  // DB1.Memo Created User = JOB.*USER
  DB1.Memo_Created_User = JOB.*USER;

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDDO;

}


//?USER: Final processing (Post-confirm)

// PAR.Post Flag USR = CND.Yes
PAR.Post_Flag_USR = 'Y';

RETURN;

