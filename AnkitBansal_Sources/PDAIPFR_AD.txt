// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDAIPFR
// ?Date: 14.08.2025 Time: 12:03:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Process before print of first page format

MOVE *ALL (To: 1PG From: PAR);

EXECUTE FUNCTION(Rtv Hog Volume         RT) TYPE(RTVOBJ) FILE(PDJCCPP)          AC1373728;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Production_Type);
PARAMETER(X1PG_Production_Date);
PARAMETER(X1PG_Hog_Volume_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process before print of detail format

// CUR.USR Description 20 = DB1.Primal Group Desc
CUR.USR_Description_20 = DB1.Primal_Group_Desc;

EXECUTE FUNCTION(Rtv Prd/Act Pcs/Wgt   RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1475618;
PARAMETER(PAR.Company_Number);
PARAMETER(CUR.Primal_Group_Code);
PARAMETER(CUR.Pieces_Avail_Production);
PARAMETER(CUR.Weight_Potential_USR);
PARAMETER(CUR.Pieces_Sched_Production);
PARAMETER(CUR.Weight_Scheduled);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(CUR.Cases_Scheduled_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Item Type Code is Raw Materials
 IF DB1.Item_Type_Code = 'RM';

 EXECUTE FUNCTION(Rtv Primal Prediction RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1475622;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Pieces_Avail_Production);
 PARAMETER(PAR.Weight_Potential_USR);
 {
  //?USER: Process Data record

  // Pieces Predicted
  PAR.Pieces_Avail_Production = PAR.Pieces_Avail_Production + DB1.PS_Pieces_Planned_Prod;

  // Weight Predicted
  PAR.Weight_Potential_USR = PAR.Weight_Potential_USR + DB1.PS_Weight_Planned_Prod;

 }

 // IF DB1.Item Type Code is Finished Goods
 IF DB1.Item_Type_Code = 'FG';

 EXECUTE FUNCTION(Rtv Primal Act Prod   RT) TYPE(RTVOBJ) FILE(CAB7CPP)           AC1475648;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Pieces_Sched_Production);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER(DB1.Credit_Item_Status);
 PARAMETER(DB1.Piece_Count_Item);
 PARAMETER(DB1.Pieces_Per_Bag);
 PARAMETER(DB1.Bags_Per_Unit);
 PARAMETER(PAR.Cases_Scheduled_USR);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.Reason Code is Production from Accu-Sort
  IF DB1.Reason_Code = 'PRD';

  // Weight Produced
  PAR.Weight_Scheduled = PAR.Weight_Scheduled + DB1.Transaction_Weight;

  CASE;

  // IF PAR.Credit Item Status is Not Yes
  IF PAR.Credit_Item_Status = *BLANK/'N';

  //?Pieces Produced
  CASE;

  // IF PAR.Piece Count Item is yes
  IF PAR.Piece_Count_Item = 'Y';

  // Pieces Produced
  PAR.Pieces_Sched_Production = PAR.Pieces_Sched_Production + ( DB1.Transaction_Quantity * (
  PAR.Pieces_Per_Bag * PAR.Bags_Per_Unit 'H' ) 'H' );

  ENDIF;

  ENDIF;

  // Cases Scheduled
  PAR.Cases_Scheduled_USR = PAR.Cases_Scheduled_USR + DB1.Transaction_Quantity;

  ENDIF;

 }

 ENDIF;

}


// CUR.Pieces Adjusted = CUR.Pieces Sched Production - CUR.Pieces Avail Production
CUR.Pieces_Adjusted = CUR.Pieces_Sched_Production - CUR.Pieces_Avail_Production;

// CUR.Weight 9.2 USR = CUR.Weight Scheduled - CUR.Weight Potential USR
CUR.Weight_9_2_USR = CUR.Weight_Scheduled - CUR.Weight_Potential_USR;

