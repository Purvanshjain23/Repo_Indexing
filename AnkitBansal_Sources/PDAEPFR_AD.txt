// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDAEPFR
// ?Date: 14.08.2025 Time: 12:03:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Process before print of first page format

MOVE *ALL (To: 1PG From: PAR);

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number header format

ENDIF;

CASE;

IF NEW Department_Code;
// SUPPRESSED PRINT Department Code header format

ENDIF;

CASE;

IF NEW Production_Type;
// SUPPRESSED PRINT Production Type header format

ENDIF;

CASE;

IF NEW Production_Date;
// SUPPRESSED PRINT Production Date header format

ENDIF;

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Warehouse Code header format

//?USER: Process before print of detail format

EXECUTE FUNCTION(Rtv Item Description   RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1325690;
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

NXT.Pieces_Sched_Prod_SUM = SUM(CUR.PS_Pieces_Planned_Prod);

NXT.Weight_Sched_Prod_SUM = SUM(CUR.PS_Weight_Planned_Prod);

//?USER: Print required level totals

// SUPPRESSED PRINT Warehouse Code totals format

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Production Date totals format

// SUPPRESSED PRINT Production Type totals format

CASE;

IF NEW Department_Code;
// CUR.Department Type = PAR.CDS Department Type
CUR.Department_Type = PAR.CDS_Department_Type;

EXECUTE FUNCTION(Rtv BngRte/Pcs/Wgt    RT) TYPE(RTVOBJ) FILE(PDI7CPP)           AC1475502;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Department_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(CUR.Pieces_Per_Day);
PARAMETER(CUR.Weight_Per_Day);
PARAMETER(CUR.Boning_Rate);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// PAR.CDS RM Pieces Avail = CUR.Pieces Sched Prod SUM
PAR.CDS_RM_Pieces_Available = CUR.Pieces_Sched_Prod_SUM;

// PAR.CDS RM Weight Avail = CUR.Weight Sched Prod SUM
PAR.CDS_RM_Weight_Available = CUR.Weight_Sched_Prod_SUM;

//?CDS Average Piece Weight
CASE;

// IF CUR.Pieces Sched Prod SUM is GT Zero
IF CUR.Pieces_Sched_Prod_SUM > *ZERO;

// AND PAR.CDS Department Type is Piece Converting
AND PAR.CDS_Department_Type = 'P';

// CUR.CDS Avg Piece Wgt = CUR.Weight Sched Prod SUM / CUR.Pieces Sched Prod SUM *R
CUR.CDS_Average_Piece_Weight = CUR.Weight_Sched_Prod_SUM / CUR.Pieces_Sched_Prod_SUM 'H';

//?CDS Average Piece Weight
// IF *OTHERWISE
IF *OTHERWISE;

// CUR.CDS Avg Piece Wgt = CON.*ZERO
CUR.CDS_Average_Piece_Weight = *ZERO;

ENDIF;

//?Calculate Converting Pieces/Weight
CASE;

// IF PAR.CDS Department Type is Piece Converting
IF PAR.CDS_Department_Type = 'P';

// Conv Pieces Avail
CUR.CDS_CV_Pieces_Available = PAR.CDS_RM_Pieces_Available * ( CUR.Boning_Rate / 100 'H' )          +
'H';

CASE;

// IF CUR.CDS CV Pieces Avail GT CUR.Pieces Per Day
IF CUR.CDS_CV_Pieces_Available > CUR.Pieces_Per_Day;

// CUR.CDS CV Pieces Avail = CUR.Pieces Per Day
CUR.CDS_CV_Pieces_Available = CUR.Pieces_Per_Day;

ENDIF;

// Conv Weight Avail
CUR.CDS_CV_Weight_Available = CUR.CDS_CV_Pieces_Available * CUR.CDS_Average_Piece_Weight           +
'H';

//?Calculate Converting Pieces/Weight
// IF PAR.CDS Department Type is Weight Converting
IF PAR.CDS_Department_Type = 'W';

// Conv weight Avail
CUR.CDS_CV_Weight_Available = PAR.CDS_RM_Weight_Available * ( CUR.Boning_Rate / 100 'H' )          +
'H';

CASE;

// IF CUR.CDS CV Weight Avail GT CUR.Weight Per Day
IF CUR.CDS_CV_Weight_Available > CUR.Weight_Per_Day;

// CUR.CDS CV Weight Avail = CUR.Weight Per Day
CUR.CDS_CV_Weight_Available = CUR.Weight_Per_Day;

ENDIF;

//?Conv Pieces Avail
CASE;

// IF CUR.CDS Avg Piece Wgt is GT Zero
IF CUR.CDS_Average_Piece_Weight > *ZERO;

// Conv Pieces Avail
CUR.CDS_CV_Pieces_Available = CUR.CDS_CV_Weight_Available / CUR.CDS_Average_Piece_Weight;

ENDIF;

ENDIF;

// Print Department Code totals format
PRINT Department Code totals format;

EXECUTE FUNCTION(BPS Upd Dept Sch/Pln  RT) TYPE(RTVOBJ) FILE(PDLMCPP)           AC1476013;
PARAMETER(CUR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(CUR.Department_Code);
PARAMETER(PAR.CDS_RM_Pieces_Available);
PARAMETER(PAR.CDS_RM_Weight_Available);
PARAMETER(CUR.CDS_Average_Piece_Weight);
PARAMETER(CUR.CDS_CV_Pieces_Available);
PARAMETER(CUR.CDS_CV_Weight_Available);
PARAMETER(PAR.CDS_Department_Type);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Create PS Prod Dept Sched) TYPE(CRTOBJ) FILE(PDLMCPP)          AC1475024;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.CDS_RM_Pieces_Available);
 PARAMETER(PAR.CDS_RM_Weight_Available);
 PARAMETER(PAR.CDS_Average_Piece_Weight);
 PARAMETER(PAR.CDS_CV_Pieces_Available);
 PARAMETER(PAR.CDS_CV_Weight_Available);
 PARAMETER(PAR.CDS_Pieces_Unused_1);
 PARAMETER(PAR.CDS_Weight_Unused_1);
 PARAMETER(PAR.CDS_Pieces_Unused_2);
 PARAMETER(PAR.CDS_Weight_Unused_2);
 PARAMETER(PAR.CDS_Pieces_Unused_3);
 PARAMETER(PAR.CDS_Weight_Unused_3);
 PARAMETER(PAR.CDS_Pieces_Unused_4);
 PARAMETER(PAR.CDS_Weight_Unused_4);
 PARAMETER(PAR.CDS_Pieces_Unused_5);
 PARAMETER(PAR.CDS_Weight_Unused_5);
 PARAMETER(PAR.CDS_Department_Type);
 PARAMETER(PAR.CDS_Unused_Sts_1);
 PARAMETER(PAR.CDS_Unused_Sts_2);
 PARAMETER(PAR.CDS_Unused_Sts_3);
 PARAMETER(PAR.CDS_Unused_Sts_4);
 PARAMETER(PAR.CDS_Unused_Sts_5);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(BPS Chg Dept Sch/Pln  CH) TYPE(CHGOBJ) FILE(PDLMCPP)           AC1476014;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Department_Code);
 PARAMETER(PAR.CDS_RM_Pieces_Available);
 PARAMETER(PAR.CDS_RM_Weight_Available);
 PARAMETER(PAR.CDS_Average_Piece_Weight);
 PARAMETER(PAR.CDS_CV_Pieces_Available);
 PARAMETER(PAR.CDS_CV_Weight_Available);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

// SUPPRESSED PRINT Company Number totals format

