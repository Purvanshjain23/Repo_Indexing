     H/TITLE BLD WF Excess Frt Chgs XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/23/10  Time  : 08:58:21
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FOPBFCPNJIF  E           K        DISK
      * RSQ : Order Header TRG          InvDt/SlsRt/Carr/LdId/Or
      *
     FOMFJCPL0IF  E           K        DISK
      * RTV : Load Header               Retrieval index
      *
     FOMFLCPL5IF  E           K        DISK
      * RSQ : Load Detail               Co/Load/Order
      *
     FOPBGWKL1IF  E           K        DISK
      * RTV : Order Detail              Retrieval index
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FPOBCCPL1IF  E           K        DISK
      * RTV : Load Freight Charge       Retrieval index
      *
     FPMEAREL1IF  E           K        DISK
      * RTV : Freight Group Charge      Retrieval index
      *
     FOPBFCPMKIF  E           K        DISK
      * RSQ : Order Header TRG          InvDt/Carr/SlsRt/LID/Ord
      *
     FOPBFCPNKIF  E           K        DISK
      * RSQ : Order Header TRG          InvDt/Cust#/Order#
      *
     FOMHSTPOFIF  E           K        DISK
      * RSQ : Sales History             InvDt/Whse/Invoice
      *
     FPMAICPL0IF  E           K        DISK                      A
      * UPD : WF Excessive Freight Chgs Update index
      *
     I@BFCPIO
      * Order Header TRG          InvDt/SlsRt/Carr/LdId/Or
      * Renamed input format fields
     I              BEAIC3                          WAAIC3
     I              BEC4NB                          WAC4NB
     I              BEJNCD                          WAJNCD
     I              BEANC7                          WAANC7
     I              BEBKC7                          WABKC7
     I              BEBRTX                          WABRTX
     I              BEHMNA                          WAHMNA
     I              BEHONA                          WAHONA
     I              BEHPNA                          WAHPNA
     I              BEHNNA                          WAHNNA
     I              BEDBCD                          WADBCD
     I              BECKTX                          WACKTX
     I              BEB0C7                          WAB0C7
     I              BEAETX                          WAAETX
     I              BEB1NA                          WAB1NA
     I              BEB3NA                          WAB3NA
     I              BEB4NA                          WAB4NA
     I              BEB2NA                          WAB2NA
     I              BEBHCD                          WABHCD
     I              BEC8TX                          WAC8TX
     I              BEBCNA                          WABCNA
     I              BEA0DT                          WAA0DT
     I              BEA5DT                          WAA5DT
     I              BEGNDT                          WAGNDT
     I              BEACDT                          WAACDT
     I              BEAQCD                          WAAQCD
     I              BEB6NA                          WAB6NA
     I              BEBYNA                          WABYNA
     I              BEBZNA                          WABZNA
     I              BEGTST                          WAGTST
     I              BEGVST                          WAGVST
     I              BEGUST                          WAGUST
     I              BEQFST                          WAQFST
     I              BECQCD                          WACQCD
     I              BEGJST                          WAGJST
     I              BEGWST                          WAGWST
     I              BEGXST                          WAGXST
     I              BEGYST                          WAGYST
     I              BEAODT                          WAAODT
     I              BEAIVN                          WAAIVN
     I              BECXDT                          WACXDT
     I              BEJZVA                          WAJZVA
     I              BEA1WG                          WAA1WG
     I              BEXIST                          WAXIST
     I              BEXJST                          WAXJST
     I              BEXKST                          WAXKST
     I              BEEIDT                          WAEIDT
     I              BEAFTM                          WAAFTM
     I              BEE8CD                          WAE8CD
     I              BEE9CD                          WAE9CD
     I              BERMNB                          WARMNB
     I              BETBNB                          WATBNB
     I              BER1NB                          WAR1NB
     I              BEPJST                          WAPJST
     I              BEU0ST                          WAU0ST
     I              BEU1ST                          WAU1ST
     I              BEQ2CD                          WAQ2CD
     I              BEU2ST                          WAU2ST
     I              BEVEST                          WAVEST
     I              BEVFST                          WAVFST
     I              BEVGST                          WAVGST
     I              BERPCD                          WARPCD
     I              BERNNB                          WARNNB
     I              BEVDST                          WAVDST
     I              BEATIN                          WAATIN
     I              BEU4ST                          WAU4ST
     I              BEU5ST                          WAU5ST
     I              BERSRN                          WARSRN
     I              BEMHNA                          WAMHNA
     I              BEMINA                          WAMINA
     I              BEWBST                          WAWBST
     I              BER4CD                          WAR4CD
     I              BEBFCD                          WABFCD
     I              BEQ4CD                          WAQ4CD
     I              BET3NB                          WAT3NB
     I              BESICD                          WASICD
     I              BECONB                          WACONB
     I              BECEST                          WACEST
     I              BEAWDT                          WAAWDT
     I              BEJPCD                          WAJPCD
     I              BEXUST                          WAXUST
     I              BEZ1ST                          WAZ1ST
     I              BEVRVA                          WAVRVA
     I              BEOBST                          WAOBST
     I              BEBCST                          WABCST
     I              BEBDST                          WABDST
     I              BEB7VL                          WAB7VL
     I              BEGASX                          WAGASX
     I              BEGBSX                          WAGBSX
     I              BEGCSX                          WAGCSX
     I              BEGDSX                          WAGDSX
     I              BEFNSX                          WAFNSX
     I              BEFOSX                          WAFOSX
     I              BEFPSX                          WAFPSX
     I              BEFQSX                          WAFQSX
     I              BEFRSX                          WAFRSX
     I              BEFSSX                          WAFSSX
     I              BEFTSX                          WAFTSX
     I              BEFUSX                          WAFUSX
     I              BEFVSX                          WAFVSX
     I              BEFWSX                          WAFWSX
     I              BEFXSX                          WAFXSX
     I              BEFYSX                          WAFYSX
     I              BENODT                          WANODT
     I              BENPDT                          WANPDT
     I              BENQDT                          WANQDT
     I              BENRDT                          WANRDT
     I              BENSDT                          WANSDT
     I              BEBPTM                          WABPTM
     I              BEBQTM                          WABQTM
     I              BEBRTM                          WABRTM
     I              BEBSTM                          WABSTM
     I              BEBTTM                          WABTTM
     I              BEH0NX                          WAH0NX
     I              BEH1NX                          WAH1NX
     I              BEH2NX                          WAH2NX
     I              BEH3NX                          WAH3NX
     I              BEH4NX                          WAH4NX
     I              BEC0C7                          WAC0C7
     I              BEUVST                          WAUVST
     I              BEUWST                          WAUWST
     I              BEUXST                          WAUXST
     I              BEAATM                          WAAATM
     I              BEAYNA                          WAAYNA
     I              BEA0NA                          WAA0NA
     I              BEAXDT                          WAAXDT
      *
     I@FJCPBN
      * Load Header               Retrieval index
      * Renamed input format fields
     I              FJRMNB                          WBRMNB
     I              FJAIC3                          WBAIC3
     I              FJAODT                          WBAODT
     I              FJPJST                          WBPJST
     I              FJPKST                          WBPKST
     I              FJRNNB                          WBRNNB
     I              FJDMTX                          WBDMTX
     I              FJDNTX                          WBDNTX
     I              FJDOTX                          WBDOTX
     I              FJWTTX                          WBWTTX
     I              FJWUTX                          WBWUTX
     I              FJRPNB                          WBRPNB
     I              FJFLAM                          WBFLAM
     I              FJXQST                          WBXQST
     I              FJRRNB                          WBRRNB
     I              FJDXTX                          WBDXTX
     I              FJDYTX                          WBDYTX
     I              FJSBNB                          WBSBNB
     I              FJBZNA                          WBBZNA
     I              FJRONB                          WBRONB
     I              FJSQNB                          WBSQNB
     I              FJR1NB                          WBR1NB
     I              FJVCST                          WBVCST
     I              FJVDST                          WBVDST
     I              FJSDNB                          WBSDNB
     I              FJPAOU                          WBPAOU
     I              FJDGWG                          WBDGWG
     I              FJSXNB                          WBSXNB
     I              FJHADT                          WBHADT
     I              FJAART                          WBAART
     I              FJDHWG                          WBDHWG
     I              FJDIWG                          WBDIWG
     I              FJAQDT                          WBAQDT
     I              FJS6NB                          WBS6NB
     I              FJT4NB                          WBT4NB
     I              FJPRTM                          WBPRTM
     I              FJNPSV                          WBNPSV
     I              FJJ8TX                          WBJ8TX
     I              FJTLMI                          WBTLMI
     I              FJJ9TX                          WBJ9TX
     I              FJQ2CD                          WBQ2CD
     I              FJVPCD                          WBVPCD
     I              FJDBCD                          WBDBCD
     I              FJGRWE                          WBGRWE
     I              FJXCCD                          WBXCCD
     I              FJU2ST                          WBU2ST
     I              FJF9DT                          WBF9DT
     I              FJONTM                          WBONTM
     I              FJJ4DT                          WBJ4DT
     I              FJTRTM                          WBTRTM
     I              FJJ5DT                          WBJ5DT
     I              FJSPTM                          WBSPTM
     I              FJJ6DT                          WBJ6DT
     I              FJLFTM                          WBLFTM
     I              FJJ7DT                          WBJ7DT
     I              FJBOTM                          WBBOTM
     I              FJJ8DT                          WBJ8DT
     I              FJBLTM                          WBBLTM
     I              FJKIDT                          WBKIDT
     I              FJASTM                          WBASTM
     I              FJKADT                          WBKADT
     I              FJAJCM                          WBAJCM
     I              FJXACD                          WBXACD
     I              FJOANA                          WBOANA
     I              FJK4TX                          WBK4TX
     I              FJVOAG                          WBVOAG
     I              FJKBDT                          WBKBDT
     I              FJNBBO                          WBNBBO
     I              FJW4CD                          WBW4CD
     I              FJEFDT                          WBEFDT
     I              FJCNTN                          WBCNTN
     I              FJKCDT                          WBKCDT
     I              FJTMIN                          WBTMIN
     I              FJKDDT                          WBKDDT
     I              FJVMNB                          WBVMNB
     I              FJOCFR                          WBOCFR
     I              FJKJDT                          WBKJDT
     I              FJATTM                          WBATTM
     I              FJOTRS                          WBOTRS
     I              FJRNST                          WBRNST
     I              FJBRBK                          WBBRBK
     I              FJEIDT                          WBEIDT
     I              FJRMST                          WBRMST
     I              FJAJCD                          WBAJCD
     I              FJKKDT                          WBKKDT
     I              FJAVTM                          WBAVTM
     I              FJKZDT                          WBKZDT
     I              FJAXTM                          WBAXTM
     I              FJLHOS                          WBLHOS
     I              FJLHOR                          WBLHOR
     I              FJWNTX                          WBWNTX
     I              FJOITX                          WBOITX
     I              FJOJTX                          WBOJTX
     I              FJLLDT                          WBLLDT
     I              FJLSHG                          WBLSHG
     I              FJYPST                          WBYPST
     I              FJK0DT                          WBK0DT
     I              FJAYTM                          WBAYTM
     I              FJKNNX                          WBKNNX
     I              FJICWG                          WBICWG
     I              FJIDWG                          WBIDWG
     I              FJH9SX                          WBH9SX
     I              FJWOTX                          WBWOTX
     I              FJK1DT                          WBK1DT
     I              FJAZTM                          WBAZTM
     I              FJK2DT                          WBK2DT
     I              FJA0TM                          WBA0TM
     I              FJROST                          WBROST
     I              FJRPST                          WBRPST
     I              FJRQST                          WBRQST
     I              FJRRST                          WBRRST
     I              FJZBVA                          WBZBVA
     I              FJWPTX                          WBWPTX
     I              FJWQTX                          WBWQTX
     I              FJWRTX                          WBWRTX
     I              FJWSTX                          WBWSTX
     I              FJRVSX                          WBRVSX
     I              FJRUSX                          WBRUSX
     I              FJRWSX                          WBRWSX
     I              FJRXSX                          WBRXSX
     I              FJRYSX                          WBRYSX
     I              FJRZSX                          WBRZSX
     I              FJR0SX                          WBR0SX
     I              FJR1SX                          WBR1SX
     I              FJR2SX                          WBR2SX
     I              FJR3SX                          WBR3SX
     I              FJR4SX                          WBR4SX
     I              FJPYDT                          WBPYDT
     I              FJCKTM                          WBCKTM
     I              FJPZDT                          WBPZDT
     I              FJCLTM                          WBCLTM
     I              FJP0DT                          WBP0DT
     I              FJCMTM                          WBCMTM
     I              FJP1DT                          WBP1DT
     I              FJCNTM                          WBCNTM
     I              FJP2DT                          WBP2DT
     I              FJCOTM                          WBCOTM
     I              FJP3DT                          WBP3DT
     I              FJCQTM                          WBCQTM
     I              FJUVST                          WBUVST
     I              FJUWST                          WBUWST
     I              FJUXST                          WBUXST
     I              FJAATM                          WBAATM
     I              FJAYNA                          WBAYNA
     I              FJA0NA                          WBA0NA
     I              FJAXDT                          WBAXDT
      *
     I@FLCPKF
      * Load Detail               Co/Load/Order
      * Renamed input format fields
     I              FLRMNB                          WCRMNB
     I              FLRUNB                          WCRUNB
     I              FLRVNB                          WCRVNB
     I              FLDQTX                          WCDQTX
     I              FLRWNB                          WCRWNB
     I              FLRXNB                          WCRXNB
     I              FLSQNB                          WCSQNB
     I              FLT0NB                          WCT0NB
     I              FLT1NB                          WCT1NB
     I              FLR1NB                          WCR1NB
     I              FLAIC3                          WCAIC3
     I              FLC4NB                          WCC4NB
     I              FLVCST                          WCVCST
     I              FLKEDT                          WCKEDT
     I              FLSXNB                          WCSXNB
     I              FLKFDT                          WCKFDT
     I              FLACTM                          WCACTM
     I              FLK5TX                          WCK5TX
     I              FLW5CD                          WCW5CD
     I              FLEJDT                          WCEJDT
     I              FLAGTM                          WCAGTM
     I              FLKJDT                          WCKJDT
     I              FLATTM                          WCATTM
     I              FLHDDT                          WCHDDT
     I              FLAUTM                          WCAUTM
     I              FLKKDT                          WCKKDT
     I              FLAVTM                          WCAVTM
     I              FLZ4NB                          WCZ4NB
     I              FLY7ST                          WCY7ST
     I              FLY2ST                          WCY2ST
     I              FLWHTX                          WCWHTX
     I              FLWITX                          WCWITX
     I              FLWJTX                          WCWJTX
     I              FLWKTX                          WCWKTX
     I              FLWLTX                          WCWLTX
     I              FLN7DT                          WCN7DT
     I              FLN8DT                          WCN8DT
     I              FLN9DT                          WCN9DT
     I              FLB3TM                          WCB3TM
     I              FLB4TM                          WCB4TM
     I              FLB5TM                          WCB5TM
     I              FLIASX                          WCIASX
     I              FLIBSX                          WCIBSX
     I              FLICSX                          WCICSX
     I              FLWVTX                          WCWVTX
     I              FLWWTX                          WCWWTX
     I              FLWXTX                          WCWXTX
     I              FLUVST                          WCUVST
     I              FLUWST                          WCUWST
     I              FLUXST                          WCUXST
     I              FLAATM                          WCAATM
     I              FLAYNA                          WCAYNA
     I              FLA0NA                          WCA0NA
     I              FLAXDT                          WCAXDT
      *
     I@BGWKL1
      * Order Detail              Retrieval index
      * Renamed input format fields
     I              OMAIC3                          WDAIC3
     I              OMC4NB                          WDC4NB
     I              OMDPNB                          WDDPNB
     I              OMUENB                          WDUENB
     I              OMHGCD                          WDHGCD
     I              OMAJCD                          WDAJCD
     I              OMBKC7                          WDBKC7
     I              OMCFC7                          WDCFC7
     I              OMGMST                          WDGMST
     I              OMGNST                          WDGNST
     I              OMMAVA                          WDMAVA
     I              OMKDVA                          WDKDVA
     I              OML8VA                          WDL8VA
     I              OML9VA                          WDL9VA
     I              OMGTST                          WDGTST
     I              OMGVST                          WDGVST
     I              OMGUST                          WDGUST
     I              OMQFST                          WDQFST
     I              OMAYVA                          WDAYVA
     I              OMEXDT                          WDEXDT
     I              OMLQCD                          WDLQCD
     I              OMRDCD                          WDRDCD
     I              OMQ7CD                          WDQ7CD
     I              OMBZPR                          WDBZPR
     I              OML6NB                          WDL6NB
     I              OMU1ST                          WDU1ST
     I              OMGIDT                          WDGIDT
     I              OMCRCD                          WDCRCD
     I              OMAGCD                          WDAGCD
     I              OMRZST                          WDRZST
     I              OMR0ST                          WDR0ST
     I              OMR1ST                          WDR1ST
     I              OMG7NA                          WDG7NA
     I              OMG8NA                          WDG8NA
     I              OMRPCD                          WDRPCD
     I              OMVEST                          WDVEST
     I              OMVGST                          WDVGST
     I              OMAVST                          WDAVST
     I              OMU0ST                          WDU0ST
     I              OMRFCD                          WDRFCD
     I              OMFZST                          WDFZST
     I              OMR1NB                          WDR1NB
     I              OMAVQT                          WDAVQT
     I              OMD0WG                          WDD0WG
     I              OMCCQT                          WDCCQT
     I              OMAUWG                          WDAUWG
     I              OMCBQT                          WDCBQT
     I              OMATWG                          WDATWG
     I              OMAQCS                          WDAQCS
     I              OMAGCS                          WDAGCS
     I              OMAKPR                          WDAKPR
     I              OMALPR                          WDALPR
     I              OMAUPR                          WDAUPR
     I              OMAVWG                          WDAVWG
     I              OMA4WG                          WDA4WG
     I              OMA5DT                          WDA5DT
     I              OMAODT                          WDAODT
     I              OMGNDT                          WDGNDT
     I              OMAMST                          WDAMST
     I              OMANST                          WDANST
     I              OMVAST                          WDVAST
     I              OMRGNB                          WDRGNB
     I              OMRHNB                          WDRHNB
     I              OMRINB                          WDRINB
     I              OMRBCD                          WDRBCD
     I              OMHICD                          WDHICD
     I              OMRNCD                          WDRNCD
     I              OMROCD                          WDROCD
     I              OMCXDT                          WDCXDT
     I              OMAJVN                          WDAJVN
     I              OMKXCD                          WDKXCD
     I              OMJPCD                          WDJPCD
     I              OMCQCD                          WDCQCD
     I              OMR4CD                          WDR4CD
     I              OMZ1ST                          WDZ1ST
     I              OMZ3ST                          WDZ3ST
     I              OMZ4ST                          WDZ4ST
     I              OMDUPR                          WDDUPR
     I              OMB6VL                          WDB6VL
     I              OMA1AA                          WDA1AA
     I              OMFZSX                          WDFZSX
     I              OMF0SX                          WDF0SX
     I              OMF1SX                          WDF1SX
     I              OMF2SX                          WDF2SX
     I              OMF3SX                          WDF3SX
     I              OMF4SX                          WDF4SX
     I              OMF5SX                          WDF5SX
     I              OMF6SX                          WDF6SX
     I              OMF7SX                          WDF7SX
     I              OMNTDT                          WDNTDT
     I              OMNUDT                          WDNUDT
     I              OMNVDT                          WDNVDT
     I              OMNWDT                          WDNWDT
     I              OMNXDT                          WDNXDT
     I              OMBUTM                          WDBUTM
     I              OMBVTM                          WDBVTM
     I              OMBWTM                          WDBWTM
     I              OMBXTM                          WDBXTM
     I              OMBYTM                          WDBYTM
     I              OMH5NX                          WDH5NX
     I              OMH6NX                          WDH6NX
     I              OMH7NX                          WDH7NX
     I              OMH8NX                          WDH8NX
     I              OMH9NX                          WDH9NX
     I              OMDVPR                          WDDVPR
     I              OMDWPR                          WDDWPR
     I              OMDXPR                          WDDXPR
     I              OMDYPR                          WDDYPR
     I              OMDZPR                          WDDZPR
     I              OMGSPR                          WDGSPR
     I              OMGTPR                          WDGTPR
     I              OMGUPR                          WDGUPR
     I              OMHOST                          WDHOST
     I              OMHPST                          WDHPST
     I              OMIOST                          WDIOST
     I              OMPEWG                          WDPEWG
     I              OMRINY                          WDRINY
     I              OMTIDT                          WDTIDT
     I              OMTJDT                          WDTJDT
     I              OMH2ST                          WDH2ST
     I              OMH0ST                          WDH0ST
     I              OMH1ST                          WDH1ST
     I              OMTKDT                          WDTKDT
     I              OMTLDT                          WDTLDT
     I              OMTMDT                          WDTMDT
     I              OMUVST                          WDUVST
     I              OMUWST                          WDUWST
     I              OMUXST                          WDUXST
     I              OMAATM                          WDAATM
     I              OMAYNA                          WDAYNA
     I              OMA0NA                          WDA0NA
     I              OMAXDT                          WDAXDT
      *
     I@BBREE9
      * Customer                  Retrieval index       NV
      * Renamed input format fields
     I              BBBKC7                          WEBKC7
     I              BBAYTX                          WEAYTX
     I              BBACNA                          WEACNA
     I              BBADNA                          WEADNA
     I              BBAENA                          WEAENA
     I              BBAJNA                          WEAJNA
     I              BBBGCD                          WEBGCD
     I              BBG5CD                          WEG5CD
     I              BBBTTX                          WEBTTX
     I              BBBVTX                          WEBVTX
     I              BBBWTX                          WEBWTX
     I              BBABTX                          WEABTX
     I              BBA2NA                          WEA2NA
     I              BBCBST                          WECBST
     I              BBB0NA                          WEB0NA
     I              BBP3NB                          WEP3NB
     I              BBAXNA                          WEAXNA
     I              BBI6DT                          WEI6DT
     I              BBAYDT                          WEAYDT
     I              BBANC7                          WEANC7
     I              BBBTC7                          WEBTC7
     I              BBK6ST                          WEK6ST
     I              BBUZST                          WEUZST
     I              BBKXCD                          WEKXCD
     I              BBLTCD                          WELTCD
     I              BBQNST                          WEQNST
     I              BBS2NB                          WES2NB
     I              BBVHVA                          WEVHVA
     I              BBI7DT                          WEI7DT
     I              BBRJST                          WERJST
     I              BBRKST                          WERKST
     I              BBQWST                          WEQWST
     I              BBQXST                          WEQXST
     I              BBQYST                          WEQYST
     I              BBUNCS                          WEUNCS
     I              BBUVST                          WEUVST
     I              BBUWST                          WEUWST
     I              BBUXST                          WEUXST
     I              BBVSST                          WEVSST
     I              BBAATM                          WEAATM
     I              BBAYNA                          WEAYNA
     I              BBA0NA                          WEA0NA
     I              BBAXDT                          WEAXDT
      *
     I@BCCPJ8
      * Load Freight Charge       Retrieval index
      * Renamed input format fields
     I              BCRMNB                          WFRMNB
     I              BCCDAA                          WFCDAA
     I              BCEPNY                          WFEPNY
     I              BCC5VL                          WFC5VL
     I              BCKBSX                          WFKBSX
     I              BCCFAA                          WFCFAA
     I              BCKDSX                          WFKDSX
     I              BCKESX                          WFKESX
     I              BCKFSX                          WFKFSX
     I              BCKGSX                          WFKGSX
     I              BCKSSX                          WFKSSX
     I              BCKTSX                          WFKTSX
     I              BCKHSX                          WFKHSX
     I              BCKISX                          WFKISX
     I              BCKJSX                          WFKJSX
     I              BCEQNY                          WFEQNY
     I              BCVSST                          WFVSST
     I              BCMJDT                          WFMJDT
     I              BCBETM                          WFBETM
     I              BCCCVN                          WFCCVN
     I              BCCDVN                          WFCDVN
     I              BCMKDT                          WFMKDT
     I              BCBFTM                          WFBFTM
     I              BCCEVN                          WFCEVN
     I              BCCFVN                          WFCFVN
      *
     I@EAREU3
      * Freight Group Charge      Retrieval index
      * Renamed input format fields
     I              EAJ9AA                          WGJ9AA
     I              EACDAA                          WGCDAA
     I              EAVSST                          WGVSST
     I              EAMJDT                          WGMJDT
     I              EABETM                          WGBETM
     I              EACCVN                          WGCCVN
     I              EACDVN                          WGCDVN
     I              EAMKDT                          WGMKDT
     I              EABFTM                          WGBFTM
     I              EACEVN                          WGCEVN
     I              EACFVN                          WGCFVN
      *
     I@AICPIM
      * WF Excessive Freight Chgs Update index
      * Renamed input format fields
     I              AIRMNB                          WHRMNB
     I              AICDAA                          WHCDAA
     I              AIAIC3                          WHAIC3
     I              AIBZNA                          WHBZNA
     I              AIBCCD                          WHBCCD
     I              AIC5VL                          WHC5VL
     I              AIJ7DT                          WHJ7DT
     I              AICONB                          WHCONB
     I              AIAWDT                          WHAWDT
     I              AIAJCD                          WHAJCD
     I              AIBKC7                          WHBKC7
     I              AIBTC7                          WHBTC7
     I              AIR0SX                          WHR0SX
      *
     I@BFCPIT
      * Order Header TRG          InvDt/Carr/SlsRt/LID/Ord
      * Renamed input format fields
     I              BEAIC3                          WIAIC3
     I              BEC4NB                          WIC4NB
     I              BEJNCD                          WIJNCD
     I              BEANC7                          WIANC7
     I              BEBKC7                          WIBKC7
     I              BEBRTX                          WIBRTX
     I              BEHMNA                          WIHMNA
     I              BEHONA                          WIHONA
     I              BEHPNA                          WIHPNA
     I              BEHNNA                          WIHNNA
     I              BEDBCD                          WIDBCD
     I              BECKTX                          WICKTX
     I              BEB0C7                          WIB0C7
     I              BEAETX                          WIAETX
     I              BEB1NA                          WIB1NA
     I              BEB3NA                          WIB3NA
     I              BEB4NA                          WIB4NA
     I              BEB2NA                          WIB2NA
     I              BEBHCD                          WIBHCD
     I              BEC8TX                          WIC8TX
     I              BEBCNA                          WIBCNA
     I              BEA0DT                          WIA0DT
     I              BEA5DT                          WIA5DT
     I              BEGNDT                          WIGNDT
     I              BEACDT                          WIACDT
     I              BEAQCD                          WIAQCD
     I              BEB6NA                          WIB6NA
     I              BEBYNA                          WIBYNA
     I              BEBZNA                          WIBZNA
     I              BEGTST                          WIGTST
     I              BEGVST                          WIGVST
     I              BEGUST                          WIGUST
     I              BEQFST                          WIQFST
     I              BECQCD                          WICQCD
     I              BEGJST                          WIGJST
     I              BEGWST                          WIGWST
     I              BEGXST                          WIGXST
     I              BEGYST                          WIGYST
     I              BEAODT                          WIAODT
     I              BEAIVN                          WIAIVN
     I              BECXDT                          WICXDT
     I              BEJZVA                          WIJZVA
     I              BEA1WG                          WIA1WG
     I              BEXIST                          WIXIST
     I              BEXJST                          WIXJST
     I              BEXKST                          WIXKST
     I              BEEIDT                          WIEIDT
     I              BEAFTM                          WIAFTM
     I              BEE8CD                          WIE8CD
     I              BEE9CD                          WIE9CD
     I              BERMNB                          WIRMNB
     I              BETBNB                          WITBNB
     I              BER1NB                          WIR1NB
     I              BEPJST                          WIPJST
     I              BEU0ST                          WIU0ST
     I              BEU1ST                          WIU1ST
     I              BEQ2CD                          WIQ2CD
     I              BEU2ST                          WIU2ST
     I              BEVEST                          WIVEST
     I              BEVFST                          WIVFST
     I              BEVGST                          WIVGST
     I              BERPCD                          WIRPCD
     I              BERNNB                          WIRNNB
     I              BEVDST                          WIVDST
     I              BEATIN                          WIATIN
     I              BEU4ST                          WIU4ST
     I              BEU5ST                          WIU5ST
     I              BERSRN                          WIRSRN
     I              BEMHNA                          WIMHNA
     I              BEMINA                          WIMINA
     I              BEWBST                          WIWBST
     I              BER4CD                          WIR4CD
     I              BEBFCD                          WIBFCD
     I              BEQ4CD                          WIQ4CD
     I              BET3NB                          WIT3NB
     I              BESICD                          WISICD
     I              BECONB                          WICONB
     I              BECEST                          WICEST
     I              BEAWDT                          WIAWDT
     I              BEJPCD                          WIJPCD
     I              BEXUST                          WIXUST
     I              BEZ1ST                          WIZ1ST
     I              BEVRVA                          WIVRVA
     I              BEOBST                          WIOBST
     I              BEBCST                          WIBCST
     I              BEBDST                          WIBDST
     I              BEB7VL                          WIB7VL
     I              BEGASX                          WIGASX
     I              BEGBSX                          WIGBSX
     I              BEGCSX                          WIGCSX
     I              BEGDSX                          WIGDSX
     I              BEFNSX                          WIFNSX
     I              BEFOSX                          WIFOSX
     I              BEFPSX                          WIFPSX
     I              BEFQSX                          WIFQSX
     I              BEFRSX                          WIFRSX
     I              BEFSSX                          WIFSSX
     I              BEFTSX                          WIFTSX
     I              BEFUSX                          WIFUSX
     I              BEFVSX                          WIFVSX
     I              BEFWSX                          WIFWSX
     I              BEFXSX                          WIFXSX
     I              BEFYSX                          WIFYSX
     I              BENODT                          WINODT
     I              BENPDT                          WINPDT
     I              BENQDT                          WINQDT
     I              BENRDT                          WINRDT
     I              BENSDT                          WINSDT
     I              BEBPTM                          WIBPTM
     I              BEBQTM                          WIBQTM
     I              BEBRTM                          WIBRTM
     I              BEBSTM                          WIBSTM
     I              BEBTTM                          WIBTTM
     I              BEH0NX                          WIH0NX
     I              BEH1NX                          WIH1NX
     I              BEH2NX                          WIH2NX
     I              BEH3NX                          WIH3NX
     I              BEH4NX                          WIH4NX
     I              BEC0C7                          WIC0C7
     I              BEUVST                          WIUVST
     I              BEUWST                          WIUWST
     I              BEUXST                          WIUXST
     I              BEAATM                          WIAATM
     I              BEAYNA                          WIAYNA
     I              BEA0NA                          WIA0NA
     I              BEAXDT                          WIAXDT
      *
     I@BFCPPF
      * Order Header TRG          InvDt/Cust#/Order#
      * Renamed input format fields
     I              BEAIC3                          WJAIC3
     I              BEC4NB                          WJC4NB
     I              BEJNCD                          WJJNCD
     I              BEANC7                          WJANC7
     I              BEBKC7                          WJBKC7
     I              BEBRTX                          WJBRTX
     I              BEHMNA                          WJHMNA
     I              BEHONA                          WJHONA
     I              BEHPNA                          WJHPNA
     I              BEHNNA                          WJHNNA
     I              BEDBCD                          WJDBCD
     I              BECKTX                          WJCKTX
     I              BEB0C7                          WJB0C7
     I              BEAETX                          WJAETX
     I              BEB1NA                          WJB1NA
     I              BEB3NA                          WJB3NA
     I              BEB4NA                          WJB4NA
     I              BEB2NA                          WJB2NA
     I              BEBHCD                          WJBHCD
     I              BEC8TX                          WJC8TX
     I              BEBCNA                          WJBCNA
     I              BEA0DT                          WJA0DT
     I              BEA5DT                          WJA5DT
     I              BEGNDT                          WJGNDT
     I              BEACDT                          WJACDT
     I              BEAQCD                          WJAQCD
     I              BEB6NA                          WJB6NA
     I              BEBYNA                          WJBYNA
     I              BEBZNA                          WJBZNA
     I              BEGTST                          WJGTST
     I              BEGVST                          WJGVST
     I              BEGUST                          WJGUST
     I              BEQFST                          WJQFST
     I              BECQCD                          WJCQCD
     I              BEGJST                          WJGJST
     I              BEGWST                          WJGWST
     I              BEGXST                          WJGXST
     I              BEGYST                          WJGYST
     I              BEAODT                          WJAODT
     I              BEAIVN                          WJAIVN
     I              BECXDT                          WJCXDT
     I              BEJZVA                          WJJZVA
     I              BEA1WG                          WJA1WG
     I              BEXIST                          WJXIST
     I              BEXJST                          WJXJST
     I              BEXKST                          WJXKST
     I              BEEIDT                          WJEIDT
     I              BEAFTM                          WJAFTM
     I              BEE8CD                          WJE8CD
     I              BEE9CD                          WJE9CD
     I              BERMNB                          WJRMNB
     I              BETBNB                          WJTBNB
     I              BER1NB                          WJR1NB
     I              BEPJST                          WJPJST
     I              BEU0ST                          WJU0ST
     I              BEU1ST                          WJU1ST
     I              BEQ2CD                          WJQ2CD
     I              BEU2ST                          WJU2ST
     I              BEVEST                          WJVEST
     I              BEVFST                          WJVFST
     I              BEVGST                          WJVGST
     I              BERPCD                          WJRPCD
     I              BERNNB                          WJRNNB
     I              BEVDST                          WJVDST
     I              BEATIN                          WJATIN
     I              BEU4ST                          WJU4ST
     I              BEU5ST                          WJU5ST
     I              BERSRN                          WJRSRN
     I              BEMHNA                          WJMHNA
     I              BEMINA                          WJMINA
     I              BEWBST                          WJWBST
     I              BER4CD                          WJR4CD
     I              BEBFCD                          WJBFCD
     I              BEQ4CD                          WJQ4CD
     I              BET3NB                          WJT3NB
     I              BESICD                          WJSICD
     I              BECONB                          WJCONB
     I              BECEST                          WJCEST
     I              BEAWDT                          WJAWDT
     I              BEJPCD                          WJJPCD
     I              BEXUST                          WJXUST
     I              BEZ1ST                          WJZ1ST
     I              BEVRVA                          WJVRVA
     I              BEOBST                          WJOBST
     I              BEBCST                          WJBCST
     I              BEBDST                          WJBDST
     I              BEB7VL                          WJB7VL
     I              BEGASX                          WJGASX
     I              BEGBSX                          WJGBSX
     I              BEGCSX                          WJGCSX
     I              BEGDSX                          WJGDSX
     I              BEFNSX                          WJFNSX
     I              BEFOSX                          WJFOSX
     I              BEFPSX                          WJFPSX
     I              BEFQSX                          WJFQSX
     I              BEFRSX                          WJFRSX
     I              BEFSSX                          WJFSSX
     I              BEFTSX                          WJFTSX
     I              BEFUSX                          WJFUSX
     I              BEFVSX                          WJFVSX
     I              BEFWSX                          WJFWSX
     I              BEFXSX                          WJFXSX
     I              BEFYSX                          WJFYSX
     I              BENODT                          WJNODT
     I              BENPDT                          WJNPDT
     I              BENQDT                          WJNQDT
     I              BENRDT                          WJNRDT
     I              BENSDT                          WJNSDT
     I              BEBPTM                          WJBPTM
     I              BEBQTM                          WJBQTM
     I              BEBRTM                          WJBRTM
     I              BEBSTM                          WJBSTM
     I              BEBTTM                          WJBTTM
     I              BEH0NX                          WJH0NX
     I              BEH1NX                          WJH1NX
     I              BEH2NX                          WJH2NX
     I              BEH3NX                          WJH3NX
     I              BEH4NX                          WJH4NX
     I              BEC0C7                          WJC0C7
     I              BEUVST                          WJUVST
     I              BEUWST                          WJUWST
     I              BEUXST                          WJUXST
     I              BEAATM                          WJAATM
     I              BEAYNA                          WJAYNA
     I              BEA0NA                          WJA0NA
     I              BEAXDT                          WJAXDT
      *
     I@HSTPX7
      * Sales History             InvDt/Whse/Invoice
      * Renamed input format fields
     I              F4AIC3                          WKAIC3
     I              F4C4NB                          WKC4NB
     I              F4DPNB                          WKDPNB
     I              F4UENB                          WKUENB
     I              F4MONA                          WKMONA
     I              F4RJCD                          WKRJCD
     I              F4RKCD                          WKRKCD
     I              F4GPTX                          WKGPTX
     I              F4ABTX                          WKABTX
     I              F4KXCD                          WKKXCD
     I              F4BOCD                          WKBOCD
     I              F4BTC7                          WKBTC7
     I              F4ANC7                          WKANC7
     I              F4AQTX                          WKAQTX
     I              F4BKC7                          WKBKC7
     I              F4BRTX                          WKBRTX
     I              F4HNNA                          WKHNNA
     I              F4DBCD                          WKDBCD
     I              F4CKTX                          WKCKTX
     I              F4BCNA                          WKBCNA
     I              F4A0DT                          WKA0DT
     I              F4ACDT                          WKACDT
     I              F4R4CD                          WKR4CD
     I              F4R5CD                          WKR5CD
     I              F4BFCD                          WKBFCD
     I              F4Q4CD                          WKQ4CD
     I              F4AQCD                          WKAQCD
     I              F4TBNB                          WKTBNB
     I              F4BZNA                          WKBZNA
     I              F4RLCD                          WKRLCD
     I              F4JNCD                          WKJNCD
     I              F4Q2CD                          WKQ2CD
     I              F4U2ST                          WKU2ST
     I              F4ATIN                          WKATIN
     I              F4T3NB                          WKT3NB
     I              F4RSRN                          WKRSRN
     I              F4ORIT                          WKORIT
     I              F4AJCD                          WKAJCD
     I              F4AVQT                          WKAVQT
     I              F4D0WG                          WKD0WG
     I              F4CCQT                          WKCCQT
     I              F4AUWG                          WKAUWG
     I              F4AGCD                          WKAGCD
     I              F4AKPR                          WKAKPR
     I              F4AUPR                          WKAUPR
     I              F4CRCD                          WKCRCD
     I              F4A5DT                          WKA5DT
     I              F4AWDT                          WKAWDT
     I              F4HDDT                          WKHDDT
     I              F4AGCS                          WKAGCS
     I              F4AQCS                          WKAQCS
     I              F4AVWG                          WKAVWG
     I              F4AYVA                          WKAYVA
     I              F4AMST                          WKAMST
     I              F4ANST                          WKANST
     I              F4VAST                          WKVAST
     I              F4L6NB                          WKL6NB
     I              F4UMCD                          WKUMCD
     I              F4HCDT                          WKHCDT
     I              F4ESNB                          WKESNB
     I              F4ETNB                          WKETNB
     I              F4BZNB                          WKBZNB
     I              F4EXQT                          WKEXQT
     I              F4BYWG                          WKBYWG
     I              F4S5NB                          WKS5NB
     I              F4MAVA                          WKMAVA
     I              F4KDVA                          WKKDVA
     I              F4USVA                          WKUSVA
     I              F4UTVA                          WKUTVA
     I              F4A4WG                          WKA4WG
     I              F4CKNB                          WKCKNB
     I              F4BMST                          WKBMST
     I              F4R8NB                          WKR8NB
     I              F4RMCD                          WKRMCD
     I              F4BZPR                          WKBZPR
     I              F4RDCD                          WKRDCD
     I              F4Q7CD                          WKQ7CD
     I              F4EXDT                          WKEXDT
     I              F4LQCD                          WKLQCD
     I              F4HICD                          WKHICD
     I              F4RBCD                          WKRBCD
     I              F4RGNB                          WKRGNB
     I              F4RHNB                          WKRHNB
     I              F4RINB                          WKRINB
     I              F4R1NB                          WKR1NB
     I              F4CONB                          WKCONB
     I              F4CEST                          WKCEST
     I              F4GNDT                          WKGNDT
     I              F4RMNB                          WKRMNB
     I              F4AODT                          WKAODT
     I              F4LLCD                          WKLLCD
     I              F4LMCD                          WKLMCD
     I              F4SKNB                          WKSKNB
     I              F4SLNB                          WKSLNB
     I              F4SMNB                          WKSMNB
     I              F4G7NA                          WKG7NA
     I              F4ONVA                          WKONVA
     I              F4N0CD                          WKN0CD
     I              F4B4NB                          WKB4NB
     I              F4B5NB                          WKB5NB
     I              F4N1CD                          WKN1CD
     I              F4GIDT                          WKGIDT
     I              F4Z1ST                          WKZ1ST
     I              F4ULVA                          WKULVA
     I              F4UNVA                          WKUNVA
     I              F4UOVA                          WKUOVA
     I              F4UPVA                          WKUPVA
     I              F4UQVA                          WKUQVA
     I              F4SDCD                          WKSDCD
     I              F4QZCD                          WKQZCD
     I              F4XWST                          WKXWST
     I              F4T9CD                          WKT9CD
     I              F4UBCD                          WKUBCD
     I              F4CFC7                          WKCFC7
     I              F4X1CD                          WKX1CD
     I              F4GASX                          WKGASX
     I              F4DUPR                          WKDUPR
     I              F4B6VL                          WKB6VL
     I              F4IANX                          WKIANX
     I              F4IBNX                          WKIBNX
     I              F4RPCD                          WKRPCD
     I              F4NYDT                          WKNYDT
     I              F4BZTM                          WKBZTM
     I              F4Z4NB                          WKZ4NB
     I              F4XACD                          WKXACD
     I              F4OANA                          WKOANA
     I              F4OKTX                          WKOKTX
     I              F4K4TX                          WKK4TX
     I              F4NBBO                          WKNBBO
     I              F4OCFR                          WKOCFR
     I              F4C0C7                          WKC0C7
     I              F4A1AA                          WKA1AA
     I              F4VEST                          WKVEST
     I              F4A5PR                          WKA5PR
     I              F4CDPR                          WKCDPR
     I              F4D0PR                          WKD0PR
     I              F4D0VL                          WKD0VL
     I              F4IRSX                          WKIRSX
     I              F4CEVL                          WKCEVL
     I              F4ISSX                          WKISSX
     I              F4ITSX                          WKITSX
     I              F4IUSX                          WKIUSX
     I              F4OHDT                          WKOHDT
     I              F4D9PR                          WKD9PR
     I              F4CFVL                          WKCFVL
     I              F4UVST                          WKUVST
     I              F4UWST                          WKUWST
     I              F4UXST                          WKUXST
     I              F4AATM                          WKAATM
     I              F4AYNA                          WKAYNA
     I              F4A0NA                          WKA0NA
     I              F4AXDT                          WKAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IQPMAI1    E DSPMAICPL0
      * UPD : WF Excessive Freight Chgs Update index
      * Renamed input format fields
     I              AIRMNB                          WHRMNB
     I              AICDAA                          WHCDAA
     I              AIAIC3                          WHAIC3
     I              AIBZNA                          WHBZNA
     I              AIBCCD                          WHBCCD
     I              AIC5VL                          WHC5VL
     I              AIJ7DT                          WHJ7DT
     I              AICONB                          WHCONB
     I              AIAWDT                          WHAWDT
     I              AIAJCD                          WHAJCD
     I              AIBKC7                          WHBKC7
     I              AIBTC7                          WHBTC7
     I              AIR0SX                          WHR0SX
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: WF Excessive Freight Chgs
      * I :  FC Code
     I                                        1   6 P1CDAA
      * I :  Company Number
     I                                    P   7   80P1AIC3
      * I :  Carrier Code
     I                                        9  11 P1BZNA
      * I :  Salesperson Code
     I                                       12  14 P1BCCD
      * I :  Invoice Date
     I                                    P  15  180P1AWDT
      * I :  Ship To Customer
     I                                    P  19  220P1BKC7
      * I :  Parent Customer
     I                                    P  23  260P1BTC7
     IP2PARM      DS
      * I :  Thru Date             USR
     I                                    P   1   40P2OADT
     IP3PARM      DS
      * FLD: Freight Group
      * I :  FCG Group Code
     I                                        1   6 P3J9AA
     IP4PARM      DS
      * FLD: *Arrays
      * B :  USR Warehouse Code
     I                                        1   3 P4CPCD
      * B :  USR CDE Parm 1
     I                                        4   6 P4VSCD
      * B :  USR CDE Parm 2
     I                                        7   9 P4VTCD
      * B :  USR CDE Parm 3
     I                                       10  12 P4VUCD
      * B :  USR CDE Parm 4
     I                                       13  15 P4VVCD
      * B :  USR CDE Parm 5
     I                                       16  18 P4VWCD
      * B :  USR CDE Parm 6
     I                                       19  21 P4VXCD
      * B :  USR CDE Parm 7
     I                                       22  24 P4VYCD
      * B :  USR CDE Parm 8
     I                                       25  27 P4VZCD
      * B :  USR CDE Parm 9
     I                                       28  30 P4V0CD
      * B :  USR Select/Omit Flag
     I                                       31  31 P4CYST
     IP5PARM      DS
      * I :  Select Option
     I                                        1   1 P5OPTI
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1CDAA    PARM           WP0001  6        FC Code
     C           P1AIC3    PARM           WP0002  30       Company Number
     C           P1BZNA    PARM           WP0003  3        Carrier Code
     C           P1BCCD    PARM           WP0004  3        Salesperson Cod
     C           P1AWDT    PARM           WP0005  70       Invoice Date
     C           P1BKC7    PARM           WP0006  70       Ship To Custome
     C           P1BTC7    PARM           WP0007  70       Parent Customer
     C           P2OADT    PARM           WP0008  70       Thru Date
     C           P3J9AA    PARM           WP0009  6        FCG Group Code
     C           P4CPCD    PARM P4CPCD    WP0010  3        USR Warehouse C
     C           P4VSCD    PARM P4VSCD    WP0011  3        USR CDE Parm 1
     C           P4VTCD    PARM P4VTCD    WP0012  3        USR CDE Parm 2
     C           P4VUCD    PARM P4VUCD    WP0013  3        USR CDE Parm 3
     C           P4VVCD    PARM P4VVCD    WP0014  3        USR CDE Parm 4
     C           P4VWCD    PARM P4VWCD    WP0015  3        USR CDE Parm 5
     C           P4VXCD    PARM P4VXCD    WP0016  3        USR CDE Parm 6
     C           P4VYCD    PARM P4VYCD    WP0017  3        USR CDE Parm 7
     C           P4VZCD    PARM P4VZCD    WP0018  3        USR CDE Parm 8
     C           P4V0CD    PARM P4V0CD    WP0019  3        USR CDE Parm 9
     C           P4CYST    PARM P4CYST    WP0020  1        USR Select/Omit
     C           P5OPTI    PARM           WP0021  1        Select Option
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * BLD WF Excess Frt Chgs XF
      * ** Build work file based on the option
      * CASE: PAR.Select Option is Option 1
     C           P5OPTI    IFEQ '1'                        *IF
      * ** by Salesperson
      * RTV InvDt/SlsRt/Carr   RT - Order Header TRG  * 
     C                     EXSR SARVGN
     C                     ELSE
      * CASE: PAR.Select Option is Option 2
     C           P5OPTI    IFEQ '2'                        *IF
      * ** by Carrier
      * RTV InvDt/Carr/SlsRt   RT - Order Header TRG  * 
     C                     EXSR SIRVGN
     C                     ELSE
      * CASE: PAR.Select Option is Option 3
     C           P5OPTI    IFEQ '3'                        *IF
      * ** by Customer
      * RTV InvDt/Cust#        RT - Order Header TRG  * 
     C                     EXSR SJRVGN
     C                     ELSE
      * CASE: PAR.Select Option is Option 4
     C           P5OPTI    IFEQ '4'                        *IF
      * ** by Warehouse
      * RTV InvDt/Whs/Inv      RT - Sales History  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ***** Change Log and Comments
     C                     EXSR UESUBR                     ***** Change Lo
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV InvDt/SlsRt/Carr   RT - Order Header TRG  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       Load ID
     C                     MOVEL*BLANK    WN0002  3        Salesperson Cod
     C                     Z-ADD*ZERO     WN0003  72       LFC Amount
     C                     Z-ADD*ZERO     WN0004  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0005  70       Invoice Number
     C                     MOVEL*BLANK    WN0006  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0007  70       Parent Customer
     C                     MOVEL*BLANK    WN0008  2        Load U/M
     C                     Z-ADD*ZERO     WN0009  30       Company
     C                     MOVEL*BLANK    WN0010  3        USR Carrier Cod
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WAAWDT           Invoice Date
      * Setup key
     C                     Z-ADDP1AWDT    WAAWDT           Invoice Date
      * Establish starting position
     C           KPSSA     SETLL@BFCPIO                    *
     C                     READ @BFCPIO                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0001           Record Selected
      * ** Exit if Invoice Date is beyond Thru Date
      * CASE: DB1.Invoice Date GT PAR.Thru Date             USR
     C           WAAWDT    IFGT P2OADT                     *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     Z-ADDWARMNB    WURMNB           Load ID
      * ** If Co# entered, file co# must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1AIC3    IFNE *ZERO                      *IF
     C           WAAIC3    IFNE P1AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0001           Record Selected
     C                     END                             *FI
      * ** If Salesperson entered, file Sales Route must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Sales Route Code is entered
      *   |- c2    : DB1.Sales Route Code NE PAR.Sales Route Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BCCD    IFNE *BLANK                     *IF
     C           WAR4CD    IFNE P1BCCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0001           Record Selected
     C                     END                             *FI
      * ** If Carrier entered, file Carrier must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Carrier Code is entered
      *   |- c2    : DB1.Carrier Code NE PAR.Carrier Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BZNA    IFNE *BLANK                     *IF
     C           WABZNA    IFNE P1BZNA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0001           Record Selected
     C                     END                             *FI
      * ** If Ship To entered, file ship to must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Ship To Customer is not equal to zero
      *   |- c2    : DB1.Ship To Customer NE PAR.Ship To Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BKC7    IFNE *ZERO                      *IF
     C           WABKC7    IFNE P1BKC7                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0001           Record Selected
     C                     END                             *FI
      * ** Process this record if *Record Selected still = Yes
      * CASE: LCL.Record Selected       USR is yes
     C           YL0001    IFEQ 'Y'                        *IF
      * PAR = DB1 By name
     C                     Z-ADDWARMNB    WN0001           Load ID
     C                     Z-ADDWACONB    WN0005           Invoice Number
     C                     Z-ADDWAAIC3    WN0009           Company
     C                     MOVELWAR4CD    WN0002           Salesperson Cod
      * ** Don't pass carrier code if none was passed in
      * CASE: PAR.Carrier Code is not entered
     C           P1BZNA    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    WN0010           USR Carrier Cod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELWABZNA    WN0010           USR Carrier Cod
     C                     END                             *FI
      * ** Get Warehouse # from Load Detail and BOL Date from Load Header
      * RTV Excessv Frt info  RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWARMNB    WL0001           Load ID
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    YN0001           BOL Time
     C                     Z-ADDWL0003    WN0004           BOL Complete Da
     C                     Z-ADDWL0004    YN0002           BOL Complete Ti
     C                     Z-ADDWL0005    YN0003           BOL Received Da
     C                     Z-ADDWL0006    YN0004           BOL Received Ti
     C                     Z-ADDWL0007    YN0005           Deadline Depart
     C                     Z-ADDWL0008    YN0006           Deadline Depart
     C                     MOVELWL0009    WN0008    P      Load U/M
      * RTV Warehouse for Orders - Load Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWARMNB    WL0010           Load ID
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    WN0006    P      Warehouse Code
     C                     MOVELWL0012    YN0007    P      Default Load Se
      * ** If Sel/Omit = omit and whse code matches, omit the warehouse
      * ** If Sel/Omit = select and whse code matches, select the warehou
      * ** and skip any other warehouses
      * RTV Multi Warehouses   IF
      * ** Process Whse if Select/Omit flag has an entry
      * CASE: PAR.USR Select/Omit Flag is *Entered
     C           P4CYST    IFEQ 'O'                        *IF
     C           P4CYST    OREQ 'S'
     C                     MOVELYL0001    YL0002           Record Selected
      * ** Process based on Select or Omit
      * CASE: PAR.USR Select/Omit Flag is Omit
     C           P4CYST    IFEQ 'O'                        *IF
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0006                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.USR Select/Omit Flag is Select
     C           P4CYST    IFEQ 'S'                        *IF
      * ** Set the flag to No then set to yes if warehouse is found
     C                     MOVEL'N'       YL0002           Record Selected
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELYL0002    YL0001           Record Selected
     C                     END                             *FI
      * ** Continue to process if select flag is still Yes              E
      * CASE: LCL.Record Selected       USR is yes
     C           YL0001    IFEQ 'Y'                        *IF
      * RTV Parent Customer    RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWABKC7    WL0013           Ship To Custome
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    WN0007           Parent Customer
      * ** Get Load Freight Charge code and amount from Load Freight
      * ** Charge file. If record exists, write WF Excessive Freight reco
      * ** Pass parent customer number    FP1225
      * RTV LdFrt Chg for Load RT - Load Freight Charge  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWARMNB    WL0015           Load ID
     C                     MOVELP1CDAA    WL0016    P      FC Code
     C                     Z-ADDWN0009    WL0017           Company Number
     C                     MOVELWN0010    WL0018    P      Carrier Code
     C                     MOVELWN0002    WL0019    P      Salesperson Cod
     C                     Z-ADDWN0003    WL0020           LFC Amount
     C                     Z-ADDWN0004    WL0021           BOL Complete Da
     C                     Z-ADDWACONB    WL0022           Invoice Number
     C                     Z-ADDWAAWDT    WL0023           Invoice Date
     C                     MOVELWN0006    WL0024    P      Warehouse Code
     C                     Z-ADDWABKC7    WL0025           Ship To Custome
     C                     Z-ADDWN0007    WL0026           Parent Customer
     C                     MOVELWN0008    WL0027    P      Load U/M
     C                     MOVELP3J9AA    WL0028    P      FCG Group Code
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @BFCPIO                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Excessv Frt info  RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBRMNB           Load ID
      * Setup key
     C                     Z-ADDWL0001    WBRMNB           Load ID
      * Establish starting position
     C           KRSSB     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBSBNB    WL0002           BOL Time
     C                     Z-ADDWBJ7DT    WL0003           BOL Complete Da
     C                     Z-ADDWBBOTM    WL0004           BOL Complete Ti
     C                     Z-ADDWBJ8DT    WL0005           BOL Received Da
     C                     Z-ADDWBBLTM    WL0006           BOL Received Ti
     C                     Z-ADDWBKZDT    WL0007           Deadline Depart
     C                     Z-ADDWBAXTM    WL0008           Deadline Depart
     C                     MOVELWBR0SX    WL0009           Load U/M
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Warehouse for Orders - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0011           Warehouse Code
     C                     MOVEL*BLANK    WL0012           Default Load Se
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCRMNB    WQSC02           Load ID
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC02           Load ID
      * Setup key
     C                     Z-ADDWL0010    WQSC02           Load ID
      * Establish starting position
     C           KRSSC     SETLL@FLCPKF                    *
     C           KRSSC     READE@FLCPKF                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CHK for warehouse codes - Order Detail  * 
     C                     EXSR SDRVGN
     C                     MOVELWUAJCD    WL0011           Warehouse Code
     C           KRSSC     READE@FLCPKF                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * CHK for warehouse codes - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WUTMST           USR First Time
     C                     MOVEL*BLANK    WUAJCD           Warehouse Code
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDC4NB    WQSD02           Order Number
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Order Number
      * Setup key
     C                     Z-ADDWCAIC3    WQSD01           Company Number
     C                     Z-ADDWCC4NB    WQSD02           Order Number
      * Establish starting position
     C           KRSSD     SETLL@BGWKL1                    *
     C           KRSSD     READE@BGWKL1                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.USR First Time is Yes
     C           WUTMST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       WUTMST           USR First Time
     C                     MOVELWDAJCD    WUAJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Warehouse Code EQ DB1.Warehouse Code
     C           WUAJCD    IFEQ WDAJCD                     *IF
     C                     MOVEL'Y'       WL0012           Default Load Se
     C                     MOVELWDAJCD    WUAJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WL0012           Default Load Se
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@BGWKL1                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Parent Customer    RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WEBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0013    WEBKC7           Ship To Custome
      * Establish starting position
     C           KRSSE     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEBTC7    WL0014           Parent Customer
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV LdFrt Chg for Load RT - Load Freight Charge  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFRMNB    WQSF01           Load ID
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Load ID
      * Setup key
     C                     Z-ADDWL0015    WQSF01           Load ID
      * Establish starting position
     C           KRSSF     SETLL@BCCPJ8                    *
     C           KRSSF     READE@BCCPJ8                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3058' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUZZST           Record Selected
      * SEL: Freight Charge Code
      * CASE: PAR.FC Code is Entered
     C           WL0016    IFNE *BLANK                     *IF
      * CASE: DB1.FC Code NE PAR.FC Code
     C           WFCDAA    IFNE WL0016                     *IF
     C                     MOVEL'N'       WUZZST           Record Selected
     C                     END                             *FI
     C                     END                             *FI
      * SEL: Freight Group
      * CASE: PAR.FCG Group Code is Entered
     C           WL0028    IFNE *BLANK                     *IF
      * Rtv Frt Grp Chrg Exst RT - Freight Group Charge  * 
     C                     EXSR SGRVGN
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0003    IFEQ 'N'                        *IF
     C                     MOVEL'N'       WUZZST           Record Selected
     C                     END                             *FI
     C                     END                             *FI
      * CASE: WRK.Record Selected       USR is yes
     C           WUZZST    IFEQ 'Y'                        *IF
      * CASE: PAR.Carrier Code is not entered
     C           WL0018    IFEQ *BLANK                     *IF
     C                     MOVELWFCFAA    WUBZNA           Carrier Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELWL0018    WUBZNA           Carrier Code
     C                     END                             *FI
      * ** Pass parent customer number  FP1225
      * CRT WF Excess Frt Chgs CR - WF Excessive Freight Chgs  * 
     C                     EXSR SHCRRC
     C                     END                             *FI
     C           KRSSF     READE@BCCPJ8                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Frt Grp Chrg Exst RT - Freight Group Charge  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       YL0003           Record Found US
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WGJ9AA           FCG Group Code
     C                     KFLD           WGCDAA           FC Code
      * Setup key
     C                     MOVELWL0028    WGJ9AA           FCG Group Code
     C                     MOVELWFCDAA    WGCDAA           FC Code
      * Establish starting position
     C           KRSSG     CHAIN@EAREU3              90    *
      * Data record not found
     C   90                MOVEL'USR4004' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0003           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCRRC    BEGSR
      *================================================================
      * CRT WF Excess Frt Chgs CR - WF Excessive Freight Chgs  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @AICPIM
     C                     Z-ADDWL0015    WHRMNB           Load ID
     C                     MOVELWFCDAA    WHCDAA           FC Code
     C                     Z-ADDWL0017    WHAIC3           Company Number
     C                     MOVELWUBZNA    WHBZNA           Carrier Code
     C                     MOVELWL0019    WHBCCD           Salesperson Cod
     C                     Z-ADDWFC5VL    WHC5VL           LFC Amount
     C                     Z-ADDWL0021    WHJ7DT           BOL Complete Da
     C                     Z-ADDWL0022    WHCONB           Invoice Number
     C                     Z-ADDWL0023    WHAWDT           Invoice Date
     C                     MOVELWL0024    WHAJCD           Warehouse Code
     C                     Z-ADDWL0025    WHBKC7           Ship To Custome
     C                     Z-ADDWL0026    WHBTC7           Parent Customer
     C                     MOVELWL0027    WHR0SX           Load U/M
      *
     C           KLCRSH    KLIST
     C                     KFLD           WHRMNB           Load ID
     C                     KFLD           WHCDAA           FC Code
      * Check for duplicate primary key
     C           KLCRSH    SETLL@AICPIM                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3688' W0RTN   7
      * Send message 'WF Excessive Freight C EX'
     C                     MOVEL'USR3688' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     WRITE@AICPIM                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV InvDt/Carr/SlsRt   RT - Order Header TRG  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0011  70       Load ID
     C                     MOVEL*BLANK    WN0012  3        Salesperson Cod
     C                     Z-ADD*ZERO     WN0013  72       LFC Amount
     C                     Z-ADD*ZERO     WN0014  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0015  70       Invoice Number
     C                     MOVEL*BLANK    WN0016  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0017  70       Parent Customer
     C                     MOVEL*BLANK    WN0018  2        Load U/M
     C                     Z-ADD*ZERO     WN0019  30       Company
     C                     MOVEL*BLANK    WN0020  3        USR Carrier Cod
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change log and Comments
     C                     EXSR UCSUBR                     ***** Change lo
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WIAWDT           Invoice Date
      * Setup key
     C                     Z-ADDP1AWDT    WIAWDT           Invoice Date
      * Establish starting position
     C           KPSSI     SETLL@BFCPIT                    *
     C                     READ @BFCPIT                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0004           Record Selected
      * ** Exit if Invoice Date is beyond Thru Date
      * CASE: DB1.Invoice Date GT PAR.Thru Date             USR
     C           WIAWDT    IFGT P2OADT                     *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     Z-ADDWIRMNB    WURMNB           Load ID
      * ** If Co# entered, file co# must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1AIC3    IFNE *ZERO                      *IF
     C           WIAIC3    IFNE P1AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0004           Record Selected
     C                     END                             *FI
      * ** If Carrier entered, file Carrier must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Carrier Code is entered
      *   |- c2    : DB1.Carrier Code NE PAR.Carrier Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BZNA    IFNE *BLANK                     *IF
     C           WIBZNA    IFNE P1BZNA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0004           Record Selected
     C                     END                             *FI
      * ** If Salesperson entered, file Sales Route must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Sales Route Code is entered
      *   |- c2    : DB1.Sales Route Code NE PAR.Sales Route Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BCCD    IFNE *BLANK                     *IF
     C           WIR4CD    IFNE P1BCCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0004           Record Selected
     C                     END                             *FI
      * ** If Ship To entered, file Ship To must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Ship To Customer is not equal to zero
      *   |- c2    : DB1.Ship To Customer NE PAR.Ship To Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BKC7    IFNE *ZERO                      *IF
     C           WIBKC7    IFNE P1BKC7                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0004           Record Selected
     C                     END                             *FI
      * ** Process this record if *Record Selected still = Yes
      * CASE: LCL.Record Selected       USR is yes
     C           YL0004    IFEQ 'Y'                        *IF
      * PAR = DB1 By name
     C                     Z-ADDWIRMNB    WN0011           Load ID
     C                     Z-ADDWICONB    WN0015           Invoice Number
     C                     Z-ADDWIAIC3    WN0019           Company
     C                     MOVELWIR4CD    WN0012           Salesperson Cod
      * ** Don't pass carrier code if none was passed in
      * CASE: PAR.Carrier Code is not entered
     C           P1BZNA    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    WN0020           USR Carrier Cod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELWIBZNA    WN0020           USR Carrier Cod
     C                     END                             *FI
      * ** Get Warehouse # from Load Detail and BOL Date from Load Header
      * RTV Excessv Frt info  RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIRMNB    WL0001           Load ID
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    YN0008           BOL Time
     C                     Z-ADDWL0003    WN0014           BOL Complete Da
     C                     Z-ADDWL0004    YN0009           BOL Complete Ti
     C                     Z-ADDWL0005    YN0010           BOL Received Da
     C                     Z-ADDWL0006    YN0011           BOL Received Ti
     C                     Z-ADDWL0007    YN0012           Deadline Depart
     C                     Z-ADDWL0008    YN0013           Deadline Depart
     C                     MOVELWL0009    WN0018    P      Load U/M
      * RTV Warehouse for Orders - Load Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIRMNB    WL0010           Load ID
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    WN0016    P      Warehouse Code
     C                     MOVELWL0012    YN0014    P      Default Load Se
      * ** If Sel/Omit = omit and whse code matches, omit the warehouse
      * ** If Sel/Omit = select and whse code matches, select the warehou
      * ** and skip any other warehouses
      * RTV Multi Warehouses   IF
      * ** Process Whse if Select/Omit flag has an entry
      * CASE: PAR.USR Select/Omit Flag is *Entered
     C           P4CYST    IFEQ 'O'                        *IF
     C           P4CYST    OREQ 'S'
     C                     MOVELYL0004    YL0002           Record Selected
      * ** Process based on Select or Omit
      * CASE: PAR.USR Select/Omit Flag is Omit
     C           P4CYST    IFEQ 'O'                        *IF
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0016                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.USR Select/Omit Flag is Select
     C           P4CYST    IFEQ 'S'                        *IF
      * ** Set the flag to No then set to yes if warehouse is found
     C                     MOVEL'N'       YL0002           Record Selected
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0016                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELYL0002    YL0004           Record Selected
     C                     END                             *FI
      * ** If *Record Selected still = Yes, continue processing
      * CASE: LCL.Record Selected       USR is yes
     C           YL0004    IFEQ 'Y'                        *IF
      * RTV Parent Customer    RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIBKC7    WL0013           Ship To Custome
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    WN0017           Parent Customer
      * ** Get Load Freight Charge code and amount from Load Freight
      * ** Charge file. If record exists, write WF Excessive Freight reco
      * RTV LdFrt Chg for Load RT - Load Freight Charge  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIRMNB    WL0015           Load ID
     C                     MOVELP1CDAA    WL0016    P      FC Code
     C                     Z-ADDWN0019    WL0017           Company Number
     C                     MOVELWN0020    WL0018    P      Carrier Code
     C                     MOVELWN0012    WL0019    P      Salesperson Cod
     C                     Z-ADDWN0013    WL0020           LFC Amount
     C                     Z-ADDWN0014    WL0021           BOL Complete Da
     C                     Z-ADDWN0015    WL0022           Invoice Number
     C                     Z-ADDWIAWDT    WL0023           Invoice Date
     C                     MOVELWN0016    WL0024    P      Warehouse Code
     C                     Z-ADDWIBKC7    WL0025           Ship To Custome
     C                     Z-ADDWN0017    WL0026           Parent Customer
     C                     MOVELWN0018    WL0027    P      Load U/M
     C                     MOVELP3J9AA    WL0028    P      FCG Group Code
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @BFCPIT                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV InvDt/Cust#        RT - Order Header TRG  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0021  70       Bill to Custome
     C                     Z-ADD*ZERO     WN0022  70       Load ID
     C                     MOVEL*BLANK    WN0023  3        Salesperson Cod
     C                     Z-ADD*ZERO     WN0024  72       LFC Amount
     C                     Z-ADD*ZERO     WN0025  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0026  70       Invoice Number
     C                     MOVEL*BLANK    WN0027  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0028  70       Parent Customer
     C                     MOVEL*BLANK    WN0029  2        Load U/M
     C                     Z-ADD*ZERO     WN0030  30       Company
     C                     Z-ADD*ZERO     WN0031  70       USR Customer Nu
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UDSUBR                     ***** Change Lo
      * Define keylist
     C           KPSSJ     KLIST
     C                     KFLD           WJAWDT           Invoice Date
      * Setup key
     C                     Z-ADDP1AWDT    WJAWDT           Invoice Date
      * Establish starting position
     C           KPSSJ     SETLL@BFCPPF                    *
     C                     READ @BFCPPF                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0005           Record Selected
      * ** Exit if Invoice Date is beyond Thru Date
      * CASE: DB1.Invoice Date GT PAR.Thru Date             USR
     C           WJAWDT    IFGT P2OADT                     *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     Z-ADDWJRMNB    WURMNB           Load ID
      * ** If Customer# entered, file customer# must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Ship To Customer is not equal to zero
      *   |- c2    : DB1.Ship To Customer NE PAR.Ship To Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BKC7    IFNE *ZERO                      *IF
     C           WJBKC7    IFNE P1BKC7                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0005           Record Selected
     C                     END                             *FI
      * ** If Parent Cust# entered, bill to cust# must match    FP1225
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Parent Customer is not equal to zero
      *   |- c2    : DB1.Bill to Customer NE PAR.Parent Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0028    IFNE *ZERO                      *IF
     C           WJB0C7    IFNE WN0028                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0005           Record Selected
     C                     END                             *FI
      * ** If Carrier entered, file carrier must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Carrier Code is entered
      *   |- c2    : DB1.Carrier Code NE PAR.Carrier Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BZNA    IFNE *BLANK                     *IF
     C           WJBZNA    IFNE P1BZNA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0005           Record Selected
     C                     END                             *FI
      * ** If Salesperson entered, file salesperson must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Sales Route Code is entered
      *   |- c2    : DB1.Sales Route Code NE PAR.Sales Route Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BCCD    IFNE *BLANK                     *IF
     C           WJR4CD    IFNE P1BCCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0005           Record Selected
     C                     END                             *FI
      * ** If Co# entered, file co# must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1AIC3    IFNE *ZERO                      *IF
     C           WJAIC3    IFNE P1AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0005           Record Selected
     C                     END                             *FI
      * ** Process this record if *Record Selected still = Yes
      * CASE: LCL.Record Selected       USR is yes
     C           YL0005    IFEQ 'Y'                        *IF
      * PAR = DB1 By name
     C                     Z-ADDWJB0C7    WN0021           Bill to Custome
     C                     Z-ADDWJRMNB    WN0022           Load ID
     C                     Z-ADDWJCONB    WN0026           Invoice Number
     C                     Z-ADDWJAIC3    WN0030           Company
      * ** Load customer number if it is passed in
      * CASE: PAR.Ship To Customer is equal to zero
     C           P1BKC7    IFEQ *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0031           USR Customer Nu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1BKC7    WN0031           USR Customer Nu
     C                     END                             *FI
      * ** Get Warehouse # from Load Detail and BOL Date from Load Header
      * RTV Excessv Frt info  RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWJRMNB    WL0001           Load ID
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    YN0015           BOL Time
     C                     Z-ADDWL0003    WN0025           BOL Complete Da
     C                     Z-ADDWL0004    YN0016           BOL Complete Ti
     C                     Z-ADDWL0005    YN0017           BOL Received Da
     C                     Z-ADDWL0006    YN0018           BOL Received Ti
     C                     Z-ADDWL0007    YN0019           Deadline Depart
     C                     Z-ADDWL0008    YN0020           Deadline Depart
     C                     MOVELWL0009    WN0029    P      Load U/M
      * RTV Warehouse for Orders - Load Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWJRMNB    WL0010           Load ID
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    WN0027    P      Warehouse Code
     C                     MOVELWL0012    YN0021    P      Default Load Se
      * ** If Sel/Omit = omit and whse code matches, omit the warehouse
      * ** If Sel/Omit = select and whse code matches, select the warehou
      * ** and skip any other warehouses
      * RTV Multi Warehouses   IF
      * ** Process Whse if Select/Omit flag has an entry
      * CASE: PAR.USR Select/Omit Flag is *Entered
     C           P4CYST    IFEQ 'O'                        *IF
     C           P4CYST    OREQ 'S'
     C                     MOVELYL0005    YL0002           Record Selected
      * ** Process based on Select or Omit
      * CASE: PAR.USR Select/Omit Flag is Omit
     C           P4CYST    IFEQ 'O'                        *IF
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0027                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.USR Select/Omit Flag is Select
     C           P4CYST    IFEQ 'S'                        *IF
      * ** Set the flag to No then set to yes if warehouse is found
     C                     MOVEL'N'       YL0002           Record Selected
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WN0027                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELYL0002    YL0005           Record Selected
     C                     END                             *FI
      * ** Get Load Freight Charge code and amount from Load Freight
      * ** Charge file. If record exists, write WF Excessive Freight reco
      * ** Pass bill to customer number    FP1225
      * RTV LdFrt Chg for Load RT - Load Freight Charge  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWJRMNB    WL0015           Load ID
     C                     MOVELP1CDAA    WL0016    P      FC Code
     C                     Z-ADDWN0030    WL0017           Company Number
     C                     MOVELWJBZNA    WL0018    P      Carrier Code
     C                     MOVELWJR4CD    WL0019    P      Salesperson Cod
     C                     Z-ADDWN0024    WL0020           LFC Amount
     C                     Z-ADDWN0025    WL0021           BOL Complete Da
     C                     Z-ADDWJCONB    WL0022           Invoice Number
     C                     Z-ADDWJAWDT    WL0023           Invoice Date
     C                     MOVELWN0027    WL0024    P      Warehouse Code
     C                     Z-ADDWJBKC7    WL0025           Ship To Custome
     C                     Z-ADDWJB0C7    WL0026           Parent Customer
     C                     MOVELWN0029    WL0027    P      Load U/M
     C                     MOVELP3J9AA    WL0028    P      FCG Group Code
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     READ @BFCPPF                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV InvDt/Whs/Inv      RT - Sales History  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0032  70       Load ID
     C                     Z-ADD*ZERO     WN0033  72       LFC Amount
     C                     Z-ADD*ZERO     WN0034  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0035  70       Invoice Number
     C                     Z-ADD*ZERO     WN0036  70       Parent Customer
     C                     MOVEL*BLANK    WN0037  2        Load U/M
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSK     KLIST
     C                     KFLD           WKAWDT           Invoice Date
      * Setup key
     C                     Z-ADDP1AWDT    WKAWDT           Invoice Date
      * Establish starting position
     C           KPSSK     SETLL@HSTPX7                    *
     C                     READ @HSTPX7                  90*
      * Data record not found
     C   90                MOVEL'USR1241' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0006           Record Selected
      * ** Exit if Invoice Date is beyond Thru Date
      * CASE: DB1.Invoice Date GT PAR.Thru Date             USR
     C           WKAWDT    IFGT P2OADT                     *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     Z-ADDWKRMNB    WURMNB           Load ID
      * RTV Parent Customer    RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWKBKC7    WL0013           Ship To Custome
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    WN0036           Parent Customer
      * ** Get BOL Date & U/M from Load Header
      * RTV Excessv Frt info  RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWKRMNB    WL0001           Load ID
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    YN0022           BOL Time
     C                     Z-ADDWL0003    WN0034           BOL Complete Da
     C                     Z-ADDWL0004    YN0023           BOL Complete Ti
     C                     Z-ADDWL0005    YN0024           BOL Received Da
     C                     Z-ADDWL0006    YN0025           BOL Received Ti
     C                     Z-ADDWL0007    YN0026           Deadline Depart
     C                     Z-ADDWL0008    YN0027           Deadline Depart
     C                     MOVELWL0009    WN0037    P      Load U/M
      * ** If Co# entered, co# must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1AIC3    IFNE *ZERO                      *IF
     C           WKAIC3    IFNE P1AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0006           Record Selected
     C                     END                             *FI
      * ** If Ship To entered, ship to must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Ship To Customer is not equal to zero
      *   |- c2    : DB1.Ship To Customer NE PAR.Ship To Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BKC7    IFNE *ZERO                      *IF
     C           WKBKC7    IFNE P1BKC7                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0006           Record Selected
     C                     END                             *FI
      * ** If Carrier entered, file carrier must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Carrier Code is entered
      *   |- c2    : DB1.Carrier Code NE PAR.Carrier Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BZNA    IFNE *BLANK                     *IF
     C           WKBZNA    IFNE P1BZNA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0006           Record Selected
     C                     END                             *FI
      * ** If Salesperson entered, sales route must match
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Salesperson Code is entered
      *   |- c2    : DB1.Sales Route Code NE PAR.Salesperson Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BCCD    IFNE *BLANK                     *IF
     C           WKR4CD    IFNE P1BCCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0006           Record Selected
     C                     END                             *FI
      * ** If *Record Selected = Yes, if Select/Omit whse, then process w
      * CASE: LCL.Record Selected       USR is yes
     C           YL0006    IFEQ 'Y'                        *IF
      * ** If Select/Omit is entered, process only the selected whse(s)
      * CASE: PAR.USR Select/Omit Flag is *Entered
     C           P4CYST    IFEQ 'O'                        *IF
     C           P4CYST    OREQ 'S'
      * ** If Sel/Omit = omit and whse code matches, omit the warehouse
      * ** If Sel/Omit = select and whse code matches, select the warehou
      * ** and skip any other warehouses
      * RTV Multi Warehouses   IF
      * ** Process Whse if Select/Omit flag has an entry
      * CASE: PAR.USR Select/Omit Flag is *Entered
     C           P4CYST    IFEQ 'O'                        *IF
     C           P4CYST    OREQ 'S'
     C                     MOVELYL0006    YL0002           Record Selected
      * ** Process based on Select or Omit
      * CASE: PAR.USR Select/Omit Flag is Omit
     C           P4CYST    IFEQ 'O'                        *IF
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   |- c3    : LCL.Record Selected       USR is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WKAJCD                     *IF
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       YL0002           Record Selected
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.USR Select/Omit Flag is Select
     C           P4CYST    IFEQ 'S'                        *IF
      * ** Set the flag to No then set to yes if warehouse is found
     C                     MOVEL'N'       YL0002           Record Selected
      * Test 1st warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.USR Warehouse Code EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4CPCD    IFNE *BLANK                     *IF
     C           P4CPCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 2nd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 1 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 1 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VSCD    IFNE *BLANK                     *IF
     C           P4VSCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 3rd warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 2 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 2 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VTCD    IFNE *BLANK                     *IF
     C           P4VTCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 4th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 3 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 3 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VUCD    IFNE *BLANK                     *IF
     C           P4VUCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 5th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 4 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 4 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VVCD    IFNE *BLANK                     *IF
     C           P4VVCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 6th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 5 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 5 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VWCD    IFNE *BLANK                     *IF
     C           P4VWCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 7th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 6 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 6 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VXCD    IFNE *BLANK                     *IF
     C           P4VXCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 8th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 7 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 7 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VYCD    IFNE *BLANK                     *IF
     C           P4VYCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 9th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 8 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 8 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4VZCD    IFNE *BLANK                     *IF
     C           P4VZCD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
      * Test 10th warehouse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR CDE Parm 9 is Warehouse Code not Blank
      *   |- c2    : PAR.USR CDE Parm 9 EQ PAR.Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4V0CD    IFNE *BLANK                     *IF
     C           P4V0CD    IFEQ WKAJCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0002           Record Selected
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELYL0002    YL0006           Record Selected
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ** Continue to process if select flag is still Yes
      * CASE: LCL.Record Selected       USR is yes
     C           YL0006    IFEQ 'Y'                        *IF
      * ** Get Load Freight Charge code and amount from Load Freight
      * ** Charge file. If record exists, write WF Excessive Freight reco
      * ** Pass parent customer number
      * RTV LdFrt Chg for Load RT - Load Freight Charge  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWKRMNB    WL0015           Load ID
     C                     MOVELP1CDAA    WL0016    P      FC Code
     C                     Z-ADDWKAIC3    WL0017           Company Number
     C                     MOVELWKBZNA    WL0018    P      Carrier Code
     C                     MOVELWKR4CD    WL0019    P      Salesperson Cod
     C                     Z-ADDWN0033    WL0020           LFC Amount
     C                     Z-ADDWN0034    WL0021           BOL Complete Da
     C                     Z-ADDWKCONB    WL0022           Invoice Number
     C                     Z-ADDWKAWDT    WL0023           Invoice Date
     C                     MOVELWKAJCD    WL0024    P      Warehouse Code
     C                     Z-ADDWKBKC7    WL0025           Ship To Custome
     C                     Z-ADDWN0036    WL0026           Parent Customer
     C                     MOVELWN0037    WL0027    P      Load U/M
     C                     MOVELP3J9AA    WL0028    P      FCG Group Code
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     READ @HSTPX7                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * 04/13/08 LJB E00385 - Parms have been changed, process based on
      *   those parms. None or 1 or more warehouse codes may have been
      *   passed in as well as a flag to either select or omit that
      *   warehouse. Test the flag, then test the warehouse parms.
      * 05/19/08 LJB FP1225-Add Parent Customer Number
      * 08/22/08 PKD S00383-Added Freight Group as a selection
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 04/16/2009 LJB E00384
      * ** Load UM was added as an input parm
      * ** 05/19/2008 LJB FP1225
      * ** Pass parent customer number
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * ***** Change log and Comments
      *================================================================
      * ** 04/13/2009 LJB E00384
      * ** If warehouse select/omit flag has an entry, process the order
      * ** detail file warehouse based on the flag and whether or not
      * ** the rtv'd whse code matches
      * ** 05/19/2008 LJB FP1225
      * ** Pass parent customer number
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 04/13/2009 LJB E00384
      * ** If warehouse select/omit flag has an entry, process the order
      * ** detail file warehouse based on the flag and whether or not
      * ** the rtv'd whse code matches
      * ** 05/19/2008 LJB FP1225
      * ** Pass parent customer number (bill to)
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 04/16/2009 LJB E00384
      * ** Added Load UM as a parm, rtv from the Load ID, add to the wf c
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAC4NB           Order Number
     C                     Z-ADD*ZERO     WAANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WAB0C7           Bill to Custome
     C                     Z-ADD*ZERO     WAA0DT           Order Date
     C                     Z-ADD*ZERO     WAA5DT           Requested Ship
     C                     Z-ADD*ZERO     WAGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WAACDT           Cancel Date
     C                     Z-ADD*ZERO     WAAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WACXDT           Date of Origina
     C                     Z-ADD*ZERO     WAJZVA           Order Value Tot
     C                     Z-ADD*ZERO     WAA1WG           Order Weight To
     C                     Z-ADD*ZERO     WAEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WAAFTM           Requested Deliv
     C                     Z-ADD*ZERO     WARMNB           Load ID
     C                     Z-ADD*ZERO     WATBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WAR1NB           Rated Freight
     C                     Z-ADD*ZERO     WARNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WAATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WARSRN           Resell Referenc
     C                     Z-ADD*ZERO     WAT3NB           Attach to Order
     C                     Z-ADD*ZERO     WACONB           Invoice Number
     C                     Z-ADD*ZERO     WAAWDT           Invoice Date
     C                     Z-ADD*ZERO     WAVRVA           A/R order Value
     C                     Z-ADD*ZERO     WAB7VL           Invoice Order V
     C                     Z-ADD*ZERO     WANODT           OH Unused Date
     C                     Z-ADD*ZERO     WANPDT           OH Unused Date
     C                     Z-ADD*ZERO     WANQDT           OH Unused Date
     C                     Z-ADD*ZERO     WANRDT           OH Unused Date
     C                     Z-ADD*ZERO     WANSDT           OH Unused Date
     C                     Z-ADD*ZERO     WABPTM           Maximum Gross W
     C                     Z-ADD*ZERO     WABQTM           Time of Origina
     C                     Z-ADD*ZERO     WABRTM           OH Unused Time
     C                     Z-ADD*ZERO     WABSTM           OH Unused Time
     C                     Z-ADD*ZERO     WABTTM           OH Unused Time
     C                     Z-ADD*ZERO     WAH0NX           Act Frt Referen
     C                     Z-ADD*ZERO     WAH1NX           Act Non-Ref Frt
     C                     Z-ADD*ZERO     WAH2NX           OH Fuel Surchar
     C                     Z-ADD*ZERO     WAH3NX           OH Total Non-Re
     C                     Z-ADD*ZERO     WAH4NX           OH Total Ref Fr
     C                     Z-ADD*ZERO     WAC0C7           Claim Number
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Load ID
     C                     Z-ADD*ZERO     WURMNB  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBRMNB           Load ID
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WBRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WBRPNB           Total Load Orde
     C                     Z-ADD*ZERO     WBFLAM           Flat Amount
     C                     Z-ADD*ZERO     WBRRNB           Total Stops
     C                     Z-ADD*ZERO     WBSBNB           BOL Time
     C                     Z-ADD*ZERO     WBSQNB           Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WBR1NB           Rated Freight
     C                     Z-ADD*ZERO     WBSDNB           Number Pallets
     C                     Z-ADD*ZERO     WBPAOU           Number Pallets
     C                     Z-ADD*ZERO     WBDGWG           Load Carrier Pa
     C                     Z-ADD*ZERO     WBSXNB           Estimated Arriv
     C                     Z-ADD*ZERO     WBHADT           Actual Arrival
     C                     Z-ADD*ZERO     WBAART           Actual Arrival
     C                     Z-ADD*ZERO     WBDHWG           Trailer IN Weig
     C                     Z-ADD*ZERO     WBDIWG           Trailer OUT Wei
     C                     Z-ADD*ZERO     WBAQDT           Actual Departur
     C                     Z-ADD*ZERO     WBS6NB           Departure Time
     C                     Z-ADD*ZERO     WBT4NB           Schedule Sequen
     C                     Z-ADD*ZERO     WBPRTM           Product Tempera
     C                     Z-ADD*ZERO     WBNPSV           Number Pallets
     C                     Z-ADD*ZERO     WBTLMI           Total Load Mile
     C                     Z-ADD*ZERO     WBGRWE           Gross Weight
     C                     Z-ADD*ZERO     WBF9DT           Actual Ship Dat
     C                     Z-ADD*ZERO     WBJ4DT           Truck Ready Dat
     C                     Z-ADD*ZERO     WBTRTM           Truck Ready Tim
     C                     Z-ADD*ZERO     WBJ5DT           Spotted Date
     C                     Z-ADD*ZERO     WBSPTM           Spotted Time
     C                     Z-ADD*ZERO     WBJ6DT           Load Finished D
     C                     Z-ADD*ZERO     WBLFTM           Load Finished T
     C                     Z-ADD*ZERO     WBJ7DT           BOL Complete Da
     C                     Z-ADD*ZERO     WBBOTM           BOL Complete Ti
     C                     Z-ADD*ZERO     WBJ8DT           BOL Received Da
     C                     Z-ADD*ZERO     WBBLTM           BOL Received Ti
     C                     Z-ADD*ZERO     WBKIDT           Truck Departure
     C                     Z-ADD*ZERO     WBASTM           Truck Departure
     C                     Z-ADD*ZERO     WBKADT           Adjusted Depart
     C                     Z-ADD*ZERO     WBAJCM           Adjusted Depart
     C                     Z-ADD*ZERO     WBVOAG           Voyage
     C                     Z-ADD*ZERO     WBKBDT           Sail Date
     C                     Z-ADD*ZERO     WBEFDT           Arrival Date
     C                     Z-ADD*ZERO     WBKCDT           Date In
     C                     Z-ADD*ZERO     WBTMIN           Time In
     C                     Z-ADD*ZERO     WBKDDT           Date Out
     C                     Z-ADD*ZERO     WBVMNB           Time Out
     C                     Z-ADD*ZERO     WBOCFR           Load Total Frei
     C                     Z-ADD*ZERO     WBKJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     WBATTM           Scheduled Deliv
     C                     Z-ADD*ZERO     WBBRBK           Bring Back Mile
     C                     Z-ADD*ZERO     WBEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WBKKDT           On Yard Date
     C                     Z-ADD*ZERO     WBAVTM           On Yard Time
     C                     Z-ADD*ZERO     WBKZDT           Deadline Depart
     C                     Z-ADD*ZERO     WBAXTM           Deadline Depart
     C                     Z-ADD*ZERO     WBLLDT           Express Mail Da
     C                     Z-ADD*ZERO     WBK0DT           Product Complet
     C                     Z-ADD*ZERO     WBAYTM           Product Complet
     C                     Z-ADD*ZERO     WBKNNX           Pallets Loaded
     C                     Z-ADD*ZERO     WBICWG           Avg Pallet Tare
     C                     Z-ADD*ZERO     WBIDWG           Tot Pallet Tare
     C                     Z-ADD*ZERO     WBK1DT           Load Confirmati
     C                     Z-ADD*ZERO     WBAZTM           Load Door 1
     C                     Z-ADD*ZERO     WBK2DT           Override Total
     C                     Z-ADD*ZERO     WBA0TM           Load Door 2
     C                     Z-ADD*ZERO     WBZBVA           Load Actual Fre
     C                     Z-ADD*ZERO     WBPYDT           LH Carrier Paid
     C                     Z-ADD*ZERO     WBCKTM           LH Carrier Paid
     C                     Z-ADD*ZERO     WBPZDT           LH Unused Date
     C                     Z-ADD*ZERO     WBCLTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP0DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCMTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP1DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCNTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP2DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCOTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP3DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCQTM           LH Unused Time
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCRMNB           Load ID
     C                     Z-ADD*ZERO     WCRUNB           Stop/Drop Seque
     C                     Z-ADD*ZERO     WCRVNB           Stop/Drop
     C                     Z-ADD*ZERO     WCRWNB           Miles to next s
     C                     Z-ADD*ZERO     WCRXNB           Freight Charge
     C                     Z-ADD*ZERO     WCSQNB           Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WCT0NB           Freight Misc. C
     C                     Z-ADD*ZERO     WCT1NB           Freight Stop Ch
     C                     Z-ADD*ZERO     WCR1NB           Rated Freight
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCKEDT           Estimated Arriv
     C                     Z-ADD*ZERO     WCSXNB           Estimated Arriv
     C                     Z-ADD*ZERO     WCKFDT           Appointment Con
     C                     Z-ADD*ZERO     WCACTM           Appointment Con
     C                     Z-ADD*ZERO     WCEJDT           Actual Delivery
     C                     Z-ADD*ZERO     WCAGTM           Actual Delivery
     C                     Z-ADD*ZERO     WCKJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     WCATTM           Scheduled Deliv
     C                     Z-ADD*ZERO     WCHDDT           Deadline Depart
     C                     Z-ADD*ZERO     WCAUTM           Deadline Depart
     C                     Z-ADD*ZERO     WCKKDT           On Yard Date
     C                     Z-ADD*ZERO     WCAVTM           On Yard Time
     C                     Z-ADD*ZERO     WCZ4NB           MPC Number
     C                     Z-ADD*ZERO     WCN7DT           LD Carrier Appt
     C                     Z-ADD*ZERO     WCN8DT           LD Unused Date
     C                     Z-ADD*ZERO     WCN9DT           LD Unused Date
     C                     Z-ADD*ZERO     WCB3TM           LD Carrier Appt
     C                     Z-ADD*ZERO     WCB4TM           LD Unused Time
     C                     Z-ADD*ZERO     WCB5TM           LD Unused Time
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Warehouse Code
     C                     MOVEL*BLANK    WUAJCD  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDC4NB           Order Number
     C                     Z-ADD*ZERO     WDDPNB           Order Sequence
     C                     Z-ADD*ZERO     WDUENB           Order Secondary
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WDCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WDMAVA           Billing Detail
     C                     Z-ADD*ZERO     WDKDVA           Billing Detail
     C                     Z-ADD*ZERO     WDL8VA           Billing Detail
     C                     Z-ADD*ZERO     WDL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WDAYVA           Extended Amount
     C                     Z-ADD*ZERO     WDEXDT           Market Pricing
     C                     Z-ADD*ZERO     WDBZPR           Price Overage O
     C                     Z-ADD*ZERO     WDL6NB           Contract Number
     C                     Z-ADD*ZERO     WDGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WDR1NB           Rated Freight
     C                     Z-ADD*ZERO     WDAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WDD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WDCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WDAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WDCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WDATWG           Weight Shipped
     C                     Z-ADD*ZERO     WDAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WDAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WDAKPR           Unit Price
     C                     Z-ADD*ZERO     WDALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WDAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WDAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WDA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WDA5DT           Requested Ship
     C                     Z-ADD*ZERO     WDAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WDGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDCXDT           Date of Origina
     C                     Z-ADD*ZERO     WDDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WDB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WDA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WDNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WDNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WDNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WDNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WDNXDT           OD Unused Date
     C                     Z-ADD*ZERO     WDBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WDBVTM           Price Code
     C                     Z-ADD*ZERO     WDBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WDBXTM           Substitution Li
     C                     Z-ADD*ZERO     WDBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WDH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WDH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WDH7NX           OD Item Target
     C                     Z-ADD*ZERO     WDH8NX           OD Minimum Unit
     C                     Z-ADD*ZERO     WDH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WDDVPR           Order Gate Pric
     C                     Z-ADD*ZERO     WDDWPR           OD Base MKT Ovr
     C                     Z-ADD*ZERO     WDDXPR           OD Unused Prc 3
     C                     Z-ADD*ZERO     WDDYPR           OD Unused Prc 4
     C                     Z-ADD*ZERO     WDDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WDGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WDGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WDGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WDPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WDRINY           Delv Ageing Day
     C                     Z-ADD*ZERO     WDTIDT           Production Ovr
     C                     Z-ADD*ZERO     WDTJDT           Production Ovr
     C                     Z-ADD*ZERO     WDTKDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDTLDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDTMDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field USR First Time
     C                     MOVEL*BLANK    WUTMST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WEP3NB           D & B Number
     C                     Z-ADD*ZERO     WEI6DT           Date of D & B R
     C                     Z-ADD*ZERO     WEAYDT           Credit Line Exp
     C                     Z-ADD*ZERO     WEANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WEBTC7           Parent Customer
     C                     Z-ADD*ZERO     WES2NB           Parent Credit L
     C                     Z-ADD*ZERO     WEVHVA           A/R Credit Limi
     C                     Z-ADD*ZERO     WEI7DT           Order Entry Hol
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFRMNB           Load ID
     C                     Z-ADD*ZERO     WFEPNY           LFC Sequence Nu
     C                     Z-ADD*ZERO     WFC5VL           LFC Amount
     C                     Z-ADD*ZERO     WFEQNY           LFC TFP Carrier
     C                     Z-ADD*ZERO     WFMJDT           Create Date
     C                     Z-ADD*ZERO     WFBETM           Create Time
     C                     Z-ADD*ZERO     WFMKDT           Change Date
     C                     Z-ADD*ZERO     WFBFTM           Change Time
      * Define work field Record Selected       USR
     C                     MOVEL*BLANK    WUZZST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGMJDT           Create Date
     C                     Z-ADD*ZERO     WGBETM           Create Time
     C                     Z-ADD*ZERO     WGMKDT           Change Date
     C                     Z-ADD*ZERO     WGBFTM           Change Time
      * Define work field Carrier Code
     C                     MOVEL*BLANK    WUBZNA  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHRMNB           Load ID
     C                     Z-ADD*ZERO     WHAIC3           Company Number
     C                     Z-ADD*ZERO     WHC5VL           LFC Amount
     C                     Z-ADD*ZERO     WHJ7DT           BOL Complete Da
     C                     Z-ADD*ZERO     WHCONB           Invoice Number
     C                     Z-ADD*ZERO     WHAWDT           Invoice Date
     C                     Z-ADD*ZERO     WHBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WHBTC7           Parent Customer
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WKAIC3           Company Number
     C                     Z-ADD*ZERO     WKC4NB           Order Number
     C                     Z-ADD*ZERO     WKDPNB           Order Sequence
     C                     Z-ADD*ZERO     WKUENB           Order Secondary
     C                     Z-ADD*ZERO     WKBTC7           Parent Customer
     C                     Z-ADD*ZERO     WKANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WKBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WKA0DT           Order Date
     C                     Z-ADD*ZERO     WKACDT           Cancel Date
     C                     Z-ADD*ZERO     WKTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WKATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WKT3NB           Attach to Order
     C                     Z-ADD*ZERO     WKRSRN           Resell Referenc
     C                     Z-ADD*ZERO     WKORIT           Original Item
     C                     Z-ADD*ZERO     WKAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WKD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WKCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WKAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WKAKPR           Unit Price
     C                     Z-ADD*ZERO     WKAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WKA5DT           Requested Ship
     C                     Z-ADD*ZERO     WKAWDT           Invoice Date
     C                     Z-ADD*ZERO     WKHDDT           Deadline Depart
     C                     Z-ADD*ZERO     WKAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WKAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WKAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WKAYVA           Extended Amount
     C                     Z-ADD*ZERO     WKL6NB           Contract Number
     C                     Z-ADD*ZERO     WKHCDT           LD Arrival Date
     C                     Z-ADD*ZERO     WKESNB           Accounting Year
     C                     Z-ADD*ZERO     WKETNB           Accounting Peri
     C                     Z-ADD*ZERO     WKBZNB           OM Week
     C                     Z-ADD*ZERO     WKEXQT           Quantity Billed
     C                     Z-ADD*ZERO     WKBYWG           Weight Billed
     C                     Z-ADD*ZERO     WKS5NB           Shipped Item Co
     C                     Z-ADD*ZERO     WKMAVA           Billing Detail
     C                     Z-ADD*ZERO     WKKDVA           Billing Detail
     C                     Z-ADD*ZERO     WKUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     WKUTVA           Standard Overag
     C                     Z-ADD*ZERO     WKA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WKCKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WKR8NB           Shipping Compan
     C                     Z-ADD*ZERO     WKBZPR           Price Overage O
     C                     Z-ADD*ZERO     WKEXDT           Market Pricing
     C                     Z-ADD*ZERO     WKRGNB           Item Structure
     C                     Z-ADD*ZERO     WKRHNB           Item Structure
     C                     Z-ADD*ZERO     WKRINB           Item Structure
     C                     Z-ADD*ZERO     WKR1NB           Rated Freight
     C                     Z-ADD*ZERO     WKCONB           Invoice Number
     C                     Z-ADD*ZERO     WKGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WKRMNB           Load ID
     C                     Z-ADD*ZERO     WKAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WKSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WKSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WKSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WKONVA           Actual Freight
     C                     Z-ADD*ZERO     WKB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WKB5NB           PM Line Number
     C                     Z-ADD*ZERO     WKGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WKULVA           Absorbed Freigh
     C                     Z-ADD*ZERO     WKUNVA           Ledgrd Trd Fund
     C                     Z-ADD*ZERO     WKUOVA           Commission Amou
     C                     Z-ADD*ZERO     WKUPVA           Financials Amou
     C                     Z-ADD*ZERO     WKUQVA           Financials Amou
     C                     Z-ADD*ZERO     WKCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WKDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WKB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WKIANX           Req Shipping Te
     C                     Z-ADD*ZERO     WKIBNX           Actual Shipping
     C                     Z-ADD*ZERO     WKNYDT           Req Delivery Da
     C                     Z-ADD*ZERO     WKBZTM           Req Delivery Ti
     C                     Z-ADD*ZERO     WKZ4NB           MPC Number
     C                     Z-ADD*ZERO     WKOCFR           Load Total Frei
     C                     Z-ADD*ZERO     WKC0C7           Claim Number
     C                     Z-ADD*ZERO     WKA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WKA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WKCDPR           Market Value
     C                     Z-ADD*ZERO     WKD0PR           Default Cmdty M
     C                     Z-ADD*ZERO     WKD0VL           Raw Material Co
     C                     Z-ADD*ZERO     WKCEVL           Sales Expense T
     C                     Z-ADD*ZERO     WKOHDT           LD Sail Date
     C                     Z-ADD*ZERO     WKD9PR           NonLedgrd TrdFn
     C                     Z-ADD*ZERO     WKCFVL           HST Item Target
     C                     Z-ADD*ZERO     WKAATM           Job Time
     C                     Z-ADD*ZERO     WKAXDT           Job Date
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0001  70
     C                     Z-ADD*ZERO     WL0002  40
     C                     Z-ADD*ZERO     WL0003  70
     C                     Z-ADD*ZERO     WL0004  60
     C                     Z-ADD*ZERO     WL0005  70
     C                     Z-ADD*ZERO     WL0006  60
     C                     Z-ADD*ZERO     WL0007  70
     C                     Z-ADD*ZERO     WL0008  60
     C                     MOVEL*BLANK    WL0009  2
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0010  70
     C                     MOVEL*BLANK    WL0011  3
     C                     MOVEL*BLANK    WL0012  1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014  70
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0015  70
     C                     MOVEL*BLANK    WL0016  6
     C                     Z-ADD*ZERO     WL0017  30
     C                     MOVEL*BLANK    WL0018  3
     C                     MOVEL*BLANK    WL0019  3
     C                     Z-ADD*ZERO     WL0020  72
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023  70
     C                     MOVEL*BLANK    WL0024  3
     C                     Z-ADD*ZERO     WL0025  70
     C                     Z-ADD*ZERO     WL0026  70
     C                     MOVEL*BLANK    WL0027  2
     C                     MOVEL*BLANK    WL0028  6
      * Define local work field Record Selected       USR
     C                     MOVEL*BLANK    YL0001  1
      * Define null work field BOL Time
     C                     Z-ADD*ZERO     YN0001  40
      * Define null work field BOL Complete Time
     C                     Z-ADD*ZERO     YN0002  60
      * Define null work field BOL Received Date
     C                     Z-ADD*ZERO     YN0003  70
      * Define null work field BOL Received Time
     C                     Z-ADD*ZERO     YN0004  60
      * Define null work field Deadline Departure Date
     C                     Z-ADD*ZERO     YN0005  70
      * Define null work field Deadline Departure Time
     C                     Z-ADD*ZERO     YN0006  60
      * Define null work field Default Load Sequence
     C                     MOVEL*BLANK    YN0007  1
      * Define local work field Record Selected       USR
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Record Selected       USR
     C                     MOVEL*BLANK    YL0004  1
      * Define null work field BOL Time
     C                     Z-ADD*ZERO     YN0008  40
      * Define null work field BOL Complete Time
     C                     Z-ADD*ZERO     YN0009  60
      * Define null work field BOL Received Date
     C                     Z-ADD*ZERO     YN0010  70
      * Define null work field BOL Received Time
     C                     Z-ADD*ZERO     YN0011  60
      * Define null work field Deadline Departure Date
     C                     Z-ADD*ZERO     YN0012  70
      * Define null work field Deadline Departure Time
     C                     Z-ADD*ZERO     YN0013  60
      * Define null work field Default Load Sequence
     C                     MOVEL*BLANK    YN0014  1
      * Define local work field Record Selected       USR
     C                     MOVEL*BLANK    YL0005  1
      * Define null work field BOL Time
     C                     Z-ADD*ZERO     YN0015  40
      * Define null work field BOL Complete Time
     C                     Z-ADD*ZERO     YN0016  60
      * Define null work field BOL Received Date
     C                     Z-ADD*ZERO     YN0017  70
      * Define null work field BOL Received Time
     C                     Z-ADD*ZERO     YN0018  60
      * Define null work field Deadline Departure Date
     C                     Z-ADD*ZERO     YN0019  70
      * Define null work field Deadline Departure Time
     C                     Z-ADD*ZERO     YN0020  60
      * Define null work field Default Load Sequence
     C                     MOVEL*BLANK    YN0021  1
      * Define local work field Record Selected       USR
     C                     MOVEL*BLANK    YL0006  1
      * Define null work field BOL Time
     C                     Z-ADD*ZERO     YN0022  40
      * Define null work field BOL Complete Time
     C                     Z-ADD*ZERO     YN0023  60
      * Define null work field BOL Received Date
     C                     Z-ADD*ZERO     YN0024  70
      * Define null work field BOL Received Time
     C                     Z-ADD*ZERO     YN0025  60
      * Define null work field Deadline Departure Date
     C                     Z-ADD*ZERO     YN0026  70
      * Define null work field Deadline Departure Time
     C                     Z-ADD*ZERO     YN0027  60
      *================================================================
     CSR         ZZEXIT    ENDSR
