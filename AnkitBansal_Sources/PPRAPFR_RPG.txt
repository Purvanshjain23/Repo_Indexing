     H/TITLE Prt Inv Stk Value Rpt PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 02/20/17  Time  : 13:01:18
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPPBTCPL3IF  E           K        DISK
      * RSQ : Inventory Value File      Group/WeekEnd/G/L Sub/It
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FPPBSCPLAIF  E           K        DISK
      * RSQ : Inventory Stock Closing   Group/WeekEnd/Item
      *
     FPDJIREL0IF  E           K        DISK
      * RTV : Item Category             Retrieval index
      *
     FPPB3CPL0IF  E           K        DISK                      A
      * UPD : WF Inventory Value Dwnld  Update index
      *
     FPPRAPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Inv Stk Value Rpt PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IQPPB31    E DSPPB3CPL0
      * UPD : WF Inventory Value Dwnld  Update index
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Inventory Value File
      * I : RST IVF Valuation Grouping
     I                                        1   1 P1WQSX
      * I : RST IVF Week Ending Date
     I                                    P   2   60P1AJDX
     IP2PARM      DS
      * I :  ISC Warehouse Company
     I                                    P   1   20P2B2C3
     IP3PARM      DS
      * I :  ISC Warehouse Code
     I                                        1   3 P3GRAA
     IP4PARM      DS
      * FLD: *Arrays
      * I :  Print Zeros USR
     I                                        1   1 P4PTZR
      * I :  Status - Y or N
     I                                        2   2 P4B8ST
      * I :  Inv Valuation Group Desc
     I                                        3  32 P4GBU1
     IP5PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P5AJCD
      * N :  Company Number
     I                                    P   4   50P5AIC3
      * N :  Application Code
     I                                        6  11 P5DNCD
      * N :  Enterprise Code 1
     I                                       12  15 P5DQCD
      * N :  Enterprise Code 2
     I                                       16  27 P5DRCD
      * N :  Salesperson Code
     I                                       28  30 P5BCCD
      * N :  System Date Format
     I                                       31  33 P5B8NA
      * N :  User Profile Name
     I                                       34  43 P5AJVN
      * N :  Allow Multi-Company
     I                                       44  44 P5I6ST
      * N :  Allow Multi Warehouse
     I                                       45  45 P5I8ST
      * N :  Default Printer
     I                                       46  55 P5MPNA
      * N :  First Time Flag
     I                                       56  56 P5TAST
     IP6PARM      DS
      * FLD: WF Inventory Value Dwnld
      * N :  IVF Beg Inv Price/CWT
     I                                    P   1   54P6FSVL
      * N :  WF Beginning Inv Weight
     I                                    P   6  102P6NEWG
      * N :  WF Beginning Inv Amount
     I                                    P  11  152P6GTVL
      * N :  IVF Sales Price/CWT
     I                                    P  16  204P6FTVL
      * N :  WF Sales Weight
     I                                    P  21  252P6NFWG
      * N :  WF Sales Amount
     I                                    P  26  302P6GUVL
      * N :  IVF Curr Wk Prod Price/CW
     I                                    P  31  354P6FXVL
      * N :  WF Prod Weight
     I                                    P  36  402P6NGWG
      * N :  WF Prod Amount
     I                                    P  41  452P6GVVL
      * N :  IVF Cur Wk Inv Val Prc/CW
     I                                    P  46  504P6FZVL
      * N :  WF Ending Inv Weight
     I                                    P  51  552P6NCWG
      * N :  WF Ending Inv Amount
     I                                    P  56  602P6NDWG
      * N :  WF Weight Profit Loss
     I                                    P  61  652P6NHWG
      * N :  WF Amount Profit Loss
     I                                    P  66  702P6GWVL
     IP7PARM      DS
      * N :  ISC Item U/M - Pricing
     I                                        1   2 P7GTAA
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1WQSX    PARM           WP0001  1        IVF Valuation G
     C           P1AJDX    PARM           WP0002  80       IVF Week Ending
     C           P2B2C3    PARM           WP0003  30       ISC Warehouse C
     C           P3GRAA    PARM           WP0004  3        ISC Warehouse C
     C           P4PTZR    PARM           WP0005  1        Print Zeros USR
     C           P4B8ST    PARM           WP0006  1        Status - Y or N
     C           P4GBU1    PARM           WP0007 30        Inv Valuation G
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Inv Stk Value Rpt PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Inv Stk Value Rpt PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN BTWQSX    WQKA01           IVF Valuation G
     C           *LIKE     DEFN BTAJDX    WQKA02           IVF Week Ending
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           IVF Valuation G
     C                     KFLD           WQKA02           IVF Week Ending
      * Setup key
     C                     MOVELP1WQSX    WQKA01           IVF Valuation G
     C                     Z-ADDP1AJDX    WQKA02           IVF Week Ending
      * Establish starting position
     C           KRSA      SETLL@BTCPDD                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        IVF Valuation G
     C                     MOVEL'Y'       W0AL01  1        IVF Week Ending
     C                     MOVEL'Y'       W0AL02  1        IVF Item G/L Su
     C                     MOVEL'Y'       W0AL03  1        IVF Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CAJDX           IVF Week Ending
     C                     MOVEL*BLANK    $CWQSX           IVF Valuation G
     C                     MOVEL*BLANK    $CGBU1           Inv Valuation G
     C                     Z-ADD*ZERO     $CB2C3           ISC Warehouse C
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     MOVEL*BLANK    $CGRAA           ISC Warehouse C
     C                     MOVEL*BLANK    $CO6NA           Warehouse Desc
     C                     MOVEL*BLANK    $CPTZR           Print Zeros USR
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDBTAJDX    $DAJDX           IVF Week Ending
      * Load related totals format
     C                     Z-ADDBTAJDX    $GAJDX           IVF Week Ending
     C                     Z-ADD*ZERO     $GCENY           Weight Sales SU
     C                     Z-ADD*ZERO     $GGGVL           Amount Sales SU
     C                     Z-ADD*ZERO     $GGHVL           Sales Price CWT
     C                     Z-ADD*ZERO     $GCBNY           Weight End Inv
     C                     Z-ADD*ZERO     $GGDVL           Amount End Inv
     C                     Z-ADD*ZERO     $GGJVL           End Inv Price C
     C                     Z-ADD*ZERO     $GCCNY           Weight Prod SUM
     C                     Z-ADD*ZERO     $GGEVL           Amount Prod SUM
     C                     Z-ADD*ZERO     $GGKVL           Prod Price CWT
     C                     Z-ADD*ZERO     $GCANY           Weight Beg Inv
     C                     Z-ADD*ZERO     $GGCVL           Amount Beg Inv
     C                     Z-ADD*ZERO     $GGIVL           Beg Inv Price C
     C                     Z-ADD*ZERO     $GCDNY           Weight Profit/l
     C                     Z-ADD*ZERO     $GGFVL           Amount Profit/L
     C                     Z-ADD*ZERO     $GCINY           Weight Gain SUM
     C                     Z-ADD*ZERO     $GCJNY           Weight Sales v
     C                     Z-ADD*ZERO     $GCKNY           Weight Appr/Dep
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDBTAJDX    $FAJDX           IVF Week Ending
     C                     Z-ADDBTEKC7    $FEKC7           IVF Item Code
     C                     Z-ADDBTELC7    $FELC7           IVF WIP - FG It
     C                     MOVELBTWHSX    $FWHSX           IVF Item Type
     C                     MOVELBTWFSX    $FWFSX           IVF Unused Sts
     C                     MOVELBTGUAA    $FGUAA           IVF Item Cmdty
     C                     MOVELBTGVAA    $FGVAA           IVF Item Dft Cm
     C                     Z-ADDBTBVNY    $FBVNY           IVF Item Struct
     C                     Z-ADDBTBWNY    $FBWNY           IVF Item Struct
     C                     Z-ADDBTBXNY    $FBXNY           IVF Item Struct
     C                     Z-ADDBTF5PR    $FF5PR           IVF Item Market
     C                     MOVELBTGWAA    $FGWAA           IVF Item G/L Su
     C                     MOVEL*BLANK    $FQYNA           G/L Sub Code De
     C                     Z-ADD*ZERO     $FCENY           Weight Sales SU
     C                     Z-ADD*ZERO     $FGGVL           Amount Sales SU
     C                     Z-ADD*ZERO     $FGHVL           Sales Price CWT
     C                     Z-ADD*ZERO     $FCBNY           Weight End Inv
     C                     Z-ADD*ZERO     $FGDVL           Amount End Inv
     C                     Z-ADD*ZERO     $FGJVL           End Inv Price C
     C                     Z-ADD*ZERO     $FCCNY           Weight Prod SUM
     C                     Z-ADD*ZERO     $FGEVL           Amount Prod SUM
     C                     Z-ADD*ZERO     $FGKVL           Prod Price CWT
     C                     Z-ADD*ZERO     $FCANY           Weight Beg Inv
     C                     Z-ADD*ZERO     $FGCVL           Amount Beg Inv
     C                     Z-ADD*ZERO     $FGIVL           Beg Inv Price C
     C                     Z-ADD*ZERO     $FCDNY           Weight Profit/l
     C                     Z-ADD*ZERO     $FGFVL           Amount Profit/L
     C                     Z-ADD*ZERO     $FCINY           Weight Gain SUM
     C                     Z-ADD*ZERO     $FCJNY           Weight Sales v
     C                     Z-ADD*ZERO     $FCKNY           Weight Appr/Dep
     C                     MOVEL*BLANK    $FOTTX           Blank for 4
     C                     MOVELBTGXAA    $FGXAA           IVF Item U/M -
     C                     MOVELBTWISX    $FWISX           IVF Inventory V
     C                     MOVELBTWJSX    $FWJSX           IVF Production
     C                     Z-ADDBTFSVL    $FFSVL           IVF Beg Inv Pri
     C                     Z-ADDBTFTVL    $FFTVL           IVF Sales Price
     C                     Z-ADDBTAKDX    $FAKDX           IVF Sales Price
     C                     Z-ADDBTFUVL    $FFUVL           IVF Market Pric
     C                     Z-ADDBTM8WG    $FM8WG           IVF Warehouse P
     C                     Z-ADDBTFVVL    $FFVVL           IVF Warehouse P
     C                     Z-ADDBTFWVL    $FFWVL           IVF Ovrrde Prod
     C                     MOVELBTRGNA    $FRGNA           IVF Ovrrde Prod
     C                     Z-ADDBTFXVL    $FFXVL           IVF Curr Wk Pro
     C                     MOVELBTWKSX    $FWKSX           IVF Curr Wk Pro
     C                     Z-ADDBTFYVL    $FFYVL           IVF Ovrrde Inv
     C                     MOVELBTRFNA    $FRFNA           IVF Ovrrde Inv
     C                     Z-ADDBTFZVL    $FFZVL           IVF Cur Wk Inv
     C                     MOVELBTWLSX    $FWLSX           IVF Cur Wk Inv
     C                     Z-ADDBTM9WG    $FM9WG           IVF Unused Weig
     C                     MOVELBTWPSX    $FWPSX           IVF Post Invent
     C                     MOVELBTWQSX    $FWQSX           IVF Valuation G
     C                     Z-ADDBTQDDT    $FQDDT           IVF Unused Date
     C                     MOVELBTVSST    $FVSST           Record Status
     C                     Z-ADDBTMJDT    $FMJDT           Create Date
     C                     Z-ADDBTBETM    $FBETM           Create Time
     C                     MOVELBTCCVN    $FCCVN           Create User
     C                     MOVELBTCDVN    $FCDVN           Create Program
     C                     Z-ADDBTMKDT    $FMKDT           Change Date
     C                     Z-ADDBTBFTM    $FBFTM           Change Time
     C                     MOVELBTCEVN    $FCEVN           Change User
     C                     MOVELBTCFVN    $FCFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDBTAJDX    $EAJDX           IVF Week Ending
     C                     Z-ADDBTEKC7    $EEKC7           IVF Item Code
     C                     MOVEL*BLANK    $EOONA           Item Desc DRV
     C                     Z-ADD*ZERO     $EB5NY           Weight Sales us
     C                     Z-ADD*ZERO     $EF7VL           Amount Sales us
     C                     Z-ADD*ZERO     $EGHVL           Sales Price CWT
     C                     Z-ADDBTFTVL    $EFTVL           IVF Sales Price
     C                     Z-ADD*ZERO     $EB6NY           Weight End Inv
     C                     Z-ADD*ZERO     $EF8VL           Amount End Inv
     C                     Z-ADD*ZERO     $EGJVL           End Inv Price C
     C                     Z-ADD*ZERO     $EB9NY           Weight Prod usr
     C                     Z-ADD*ZERO     $EF9VL           Amount Prod Usr
     C                     Z-ADD*ZERO     $EGKVL           Prod Price CWT
     C                     Z-ADDBTFXVL    $EFXVL           IVF Curr Wk Pro
     C                     Z-ADDBTFUVL    $EFUVL           IVF Market Pric
     C                     Z-ADD*ZERO     $EB7NY           Weight Beg Inv
     C                     Z-ADD*ZERO     $EGAVL           Amount Beg Inv
     C                     Z-ADD*ZERO     $EGIVL           Beg Inv Price C
     C                     Z-ADDBTFSVL    $EFSVL           IVF Beg Inv Pri
     C                     Z-ADD*ZERO     $EB8NY           Weight Profit/l
     C                     Z-ADD*ZERO     $EGBVL           Amount Profit/L
     C                     Z-ADD*ZERO     $ECFNY           Weight Gain Usr
     C                     Z-ADD*ZERO     $ECGNY           Weight sales v.
     C                     Z-ADD*ZERO     $ECHNY           Weight Appr/Dep
     C                     Z-ADDBTFZVL    $EFZVL           IVF Cur Wk Inv
     C                     Z-ADDBTELC7    $EELC7           IVF WIP - FG It
     C                     Z-ADDBTAKDX    $EAKDX           IVF Sales Price
     C                     Z-ADDBTFVVL    $EFVVL           IVF Warehouse P
     C                     Z-ADDBTM8WG    $EM8WG           IVF Warehouse P
     C                     MOVELBTWHSX    $EWHSX           IVF Item Type
     C                     MOVELBTWFSX    $EWFSX           IVF Unused Sts
     C                     MOVELBTGUAA    $EGUAA           IVF Item Cmdty
     C                     MOVELBTGVAA    $EGVAA           IVF Item Dft Cm
     C                     Z-ADDBTBVNY    $EBVNY           IVF Item Struct
     C                     Z-ADDBTBWNY    $EBWNY           IVF Item Struct
     C                     Z-ADDBTBXNY    $EBXNY           IVF Item Struct
     C                     Z-ADDBTF5PR    $EF5PR           IVF Item Market
     C                     MOVELBTGWAA    $EGWAA           IVF Item G/L Su
     C                     MOVELBTGXAA    $EGXAA           IVF Item U/M -
     C                     MOVELBTWISX    $EWISX           IVF Inventory V
     C                     Z-ADDBTFYVL    $EFYVL           IVF Ovrrde Inv
     C                     MOVELBTWJSX    $EWJSX           IVF Production
     C                     Z-ADDBTFWVL    $EFWVL           IVF Ovrrde Prod
     C                     MOVELBTRGNA    $ERGNA           IVF Ovrrde Prod
     C                     MOVELBTWKSX    $EWKSX           IVF Curr Wk Pro
     C                     MOVELBTRFNA    $ERFNA           IVF Ovrrde Inv
     C                     MOVELBTWLSX    $EWLSX           IVF Cur Wk Inv
     C                     Z-ADDBTM9WG    $EM9WG           IVF Unused Weig
     C                     MOVELBTWPSX    $EWPSX           IVF Post Invent
     C                     MOVELBTWQSX    $EWQSX           IVF Valuation G
     C                     Z-ADDBTQDDT    $EQDDT           IVF Unused Date
     C                     MOVELBTVSST    $EVSST           Record Status
     C                     Z-ADDBTMJDT    $EMJDT           Create Date
     C                     Z-ADDBTBETM    $EBETM           Create Time
     C                     MOVELBTCCVN    $ECCVN           Create User
     C                     MOVELBTCDVN    $ECDVN           Create Program
     C                     Z-ADDBTMKDT    $EMKDT           Change Date
     C                     Z-ADDBTBFTM    $EBFTM           Change Time
     C                     MOVELBTCEVN    $ECEVN           Change User
     C                     MOVELBTCFVN    $ECFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $EB5NY    $FCENY           Weight Sales SU
     C                     ADD  $EB6NY    $FCBNY           Weight End Inv
     C                     ADD  $EB9NY    $FCCNY           Weight Prod SUM
     C                     ADD  $EB7NY    $FCANY           Weight Beg Inv
     C                     ADD  $EB8NY    $FCDNY           Weight Profit/l
     C                     ADD  $EF7VL    $FGGVL           Amount Sales SU
     C                     ADD  $EF8VL    $FGDVL           Amount End Inv
     C                     ADD  $EF9VL    $FGEVL           Amount Prod SUM
     C                     ADD  $EGAVL    $FGCVL           Amount Beg Inv
     C                     ADD  $EGBVL    $FGFVL           Amount Profit/L
     C                     ADD  $ECFNY    $FCINY           Weight Gain SUM
     C                     ADD  $ECGNY    $FCJNY           Weight Sales v
     C                     ADD  $ECHNY    $FCKNY           Weight Appr/Dep
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BTWQSX    WZA001           IVF Valuation G
     C                     MOVELBTWQSX    WZA001
     C           *LIKE     DEFN BTAJDX    WZA002           IVF Week Ending
     C                     Z-ADDBTAJDX    WZA002
     C           *LIKE     DEFN BTGWAA    WZA003           IVF Item G/L Su
     C                     MOVELBTGWAA    WZA003
     C           *LIKE     DEFN BTEKC7    WZA004           IVF Item Code
     C                     Z-ADDBTEKC7    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@BTCPDD                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        IVF Valuation G
     C                     MOVEL*BLANK    W0AL01  1        IVF Week Ending
     C                     MOVEL*BLANK    W0AL02  1        IVF Item G/L Su
     C                     MOVEL*BLANK    W0AL03  1        IVF Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        IVF Valuation G
     C                     MOVEL'Y'       W0AL01  1        IVF Week Ending
     C                     MOVEL'Y'       W0AL02  1        IVF Item G/L Su
     C                     MOVEL'Y'       W0AL03  1        IVF Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           BTWQSX    IFNE WZA001                     IVF Valuation G
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           BTAJDX    IFNE WZA002                     IVF Week Ending
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           BTGWAA    IFNE WZA003                     IVF Item G/L Su
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           BTEKC7    IFNE WZA004                     IVF Item Code
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of IVF Item G/L Sub Code format
      * Dont print zero weights      1/13/06
      * CASE: PAR.Print Zeros USR is no
     C           P4PTZR    IFEQ 'N'                        *IF
      * CASE:
      *  - c1ANDc2ANDc3ANDc4
      *   |- c1    : CUR.Weight Sales SUM is Not Entered
      *   |- c2    : CUR.Weight End Inv SUM is Not Entered
      *   |- c3    : CUR.Weight Prod SUM is Not Entered
      *   |- c4    : CUR.Weight Beg Inv SUM is Not Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $FCENY    IFEQ *ZERO                      *IF
     C           $FCBNY    IFEQ *ZERO                      *IF
     C           $FCCNY    IFEQ *ZERO                      *IF
     C           $FCANY    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    $FQYNA           G/L Sub Code De
      * G/L Sub Code Desc DRV
      * Rtv Item Ctg Desc     RT - Item Category  * 
     C                     EXSR SHRVGN
      * CASE: CUR.Weight Sales SUM is Entered
     C           $FCENY    IFNE 0                          *IF
      * Compute: Sales CWT
      * CUR.Sales Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Sales SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Sales SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $FGGVL    DIV  $FCENY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $FGHVL           Sales Price CWT
     C                     END                             *FI
      * CASE: CUR.Weight End Inv SUM is Entered
     C           $FCBNY    IFNE 0                          *IF
      * Compute: End Inv CWT
      * CUR.End Inv Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount End Inv SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight End Inv SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $FGDVL    DIV  $FCBNY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $FGJVL           End Inv Price C
     C                     END                             *FI
      * CASE: CUR.Weight Prod SUM is Entered
     C           $FCCNY    IFNE 0                          *IF
      * Compute: Prod Price CWT
      * CUR.Prod Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Prod SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Prod SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $FGEVL    DIV  $FCCNY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $FGKVL           Prod Price CWT
     C                     END                             *FI
      * CASE: CUR.Weight Beg Inv SUM is Entered
     C           $FCANY    IFNE 0                          *IF
      * Compute: Beg Inv prc cwt
      * CUR.Beg Inv Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Beg Inv SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Beg Inv SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $FGCVL    DIV  $FCANY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $FGIVL           Beg Inv Price C
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of IVF Item G/L Sub Code format
     C                     ADD  $FCENY    $GCENY           Weight Sales SU
     C                     ADD  $FGGVL    $GGGVL           Amount Sales SU
     C                     ADD  $FCBNY    $GCBNY           Weight End Inv
     C                     ADD  $FGDVL    $GGDVL           Amount End Inv
     C                     ADD  $FCCNY    $GCCNY           Weight Prod SUM
     C                     ADD  $FGEVL    $GGEVL           Amount Prod SUM
     C                     ADD  $FCANY    $GCANY           Weight Beg Inv
     C                     ADD  $FGCVL    $GGCVL           Amount Beg Inv
     C                     ADD  $FCDNY    $GCDNY           Weight Profit/l
     C                     ADD  $FGFVL    $GGFVL           Amount Profit/L
     C                     ADD  $FCINY    $GCINY           Weight Gain SUM
     C                     ADD  $FCJNY    $GCJNY           Weight Sales v
     C                     ADD  $FCKNY    $GCKNY           Weight Appr/Dep
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of IVF Week Ending Date format
      * CASE: CUR.Weight Sales SUM is Entered
     C           $GCENY    IFNE 0                          *IF
      * Compute: Sales CWT
      * CUR.Sales Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Sales SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Sales SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $GGGVL    DIV  $GCENY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GGHVL           Sales Price CWT
     C                     END                             *FI
      * CASE: CUR.Weight End Inv SUM is Entered
     C           $GCBNY    IFNE 0                          *IF
      * Compute: End Inv CWT
      * CUR.End Inv Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount End Inv SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight End Inv SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $GGDVL    DIV  $GCBNY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GGJVL           End Inv Price C
     C                     END                             *FI
      * CASE: CUR.Weight Prod SUM is Entered
     C           $GCCNY    IFNE 0                          *IF
      * Compute: Prod Price CWT
      * CUR.Prod Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Prod SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Prod SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $GGEVL    DIV  $GCCNY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GGKVL           Prod Price CWT
     C                     END                             *FI
      * CASE: CUR.Weight Beg Inv SUM is Entered
     C           $GCANY    IFNE 0                          *IF
      * Compute: Beg Inv prc cwt
      * CUR.Beg Inv Price CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : CUR.Amount Beg Inv SUM
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Weight Beg Inv SUM
      * *     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $GGCVL    DIV  $GCANY    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GGIVL           Beg Inv Price C
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert IVF Week Ending Date to display format
      * Convert date
     C                     Z-ADD$GAJDX    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    VGAJDX
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * R9083 02/20/17 DN-Move All PAR to 1PG Format.
      * 1PG = PAR By name
     C                     Z-ADDP1AJDX    $CAJDX           IVF Week Ending
     C                     MOVELP1WQSX    $CWQSX           IVF Valuation G
     C                     MOVELP4GBU1    $CGBU1           Inv Valuation G
     C                     Z-ADDP2B2C3    $CB2C3           ISC Warehouse C
     C                     MOVELP3GRAA    $CGRAA           ISC Warehouse C
     C                     MOVELP4PTZR    $CPTZR           Print Zeros USR
      * CASE: 1PG.ISC Warehouse Company is not equal to zero
     C           $CB2C3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     MOVEL'All'     $CSQTX           Company Name DR
     C                     END                             *FI
      * CASE: 1PG.ISC Warehouse Code is Warehouse Code not Blank
     C           $CGRAA    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    $CO6NA           Warehouse Desc
      * Warehouse Desc DRV
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CO6NA           Warehouse Desc
     C                     MOVEL'All'     $CO6NA           Warehouse Desc
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert IVF Week Ending Date to display format
      * Convert date
     C                     Z-ADD$CAJDX    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    VCAJDX
      * Convert ISC Warehouse Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CB2C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CB2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCB2C3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCB2C3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print IVF Valuation Grouping of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print IVF Week Ending Date of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP01
     C                     END                             FI
      * Print IVF Item G/L Sub Code of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print IVF Item Code of Prt Inv Stk Value Rpt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Inv Stk Value Rpt PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVEL*BLANK    $EOONA           Item Desc DRV
      * Item Desc DRV
      * Rtv Item Descriptions  RT - OM Item  * 
     C                     EXSR SERVGN
      * R9083 02/20/17 DN-Modified to Also RST by Grouping.
      * Rtv Item Weights Sum  RT - Inventory Stock Closing  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAJDX    WL0001           ISC Week Ending
     C                     Z-ADDP2B2C3    WL0002           ISC Warehouse C
     C                     MOVELP3GRAA    WL0003    P      ISC Warehouse C
     C                     Z-ADD$EEKC7    WL0004           ISC Item Code
     C                     MOVEL$EWQSX    WL0005    P      ISC Valuation G
     C                     Z-ADD$EB5NY    WL0006           Weight Sales us
     C                     Z-ADD$EB6NY    WL0007           Weight End Inv
     C                     Z-ADD$EB9NY    WL0008           Weight Prod usr
     C                     Z-ADD$EB7NY    WL0009           Weight Beg Inv
     C                     Z-ADDP6NEWG    WL0010           WF Beginning In
     C                     Z-ADDP6NFWG    WL0011           WF Sales Weight
     C                     Z-ADDP6NGWG    WL0012           WF Prod Weight
     C                     Z-ADDP6NCWG    WL0013           WF Ending Inv W
     C                     MOVELP4B8ST    WL0014    P      Status - Y or N
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0006    $EB5NY           Weight Sales us
     C                     Z-ADDWL0007    $EB6NY           Weight End Inv
     C                     Z-ADDWL0008    $EB9NY           Weight Prod usr
     C                     Z-ADDWL0009    $EB7NY           Weight Beg Inv
     C                     Z-ADDWL0010    P6NEWG           WF Beginning In
     C                     Z-ADDWL0011    P6NFWG           WF Sales Weight
     C                     Z-ADDWL0012    P6NGWG           WF Prod Weight
     C                     Z-ADDWL0013    P6NCWG           WF Ending Inv W
      * CASE: PAR.Print Zeros USR is no
     C           P4PTZR    IFEQ 'N'                        *IF
      * CASE:
      *  - c1ANDc2ANDc3ANDc4
      *   |- c1    : CUR.Weight Sales usr is Not Entered
      *   |- c2    : CUR.Weight End Inv usr is Not Entered
      *   |- c3    : CUR.Weight Prod usr is Not Entered
      *   |- c4    : CUR.Weight Beg Inv usr is Not Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $EB5NY    IFEQ *ZERO                      *IF
     C           $EB6NY    IFEQ *ZERO                      *IF
     C           $EB9NY    IFEQ *ZERO                      *IF
     C           $EB7NY    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD$EFTVL    $EGHVL           Sales Price CWT
     C                     Z-ADD$EFTVL    P6FTVL           IVF Sales Price
      * Compute: Amt sales usr
      * CUR.Amount Sales usr =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : DB1.IVF Sales Price/CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Weight Sales usr
     C           BTFTVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB5NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EF7VL           Amount Sales us
      * CASE: CUR.Weight End Inv usr is Not Equal to Zero
     C           $EB6NY    IFNE *ZERO                      *IF
      * End Inv Price CWT
      * CASE: DB1.IVF Ovrrde Inv Val Prc/CW is Entered
     C           BTFYVL    IFNE *ZERO                      *IF
      * Compute: Amt end inv usr
      * CUR.Amount End Inv usr =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : CUR.IVF Ovrrde Inv Val Prc/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Weight End Inv usr
     C           $EFYVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB6NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EF8VL           Amount End Inv
     C                     Z-ADDBTFYVL    $EGJVL           End Inv Price C
     C                     Z-ADDBTFYVL    P6FZVL           IVF Cur Wk Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute: Amt end inv usr
      * CUR.Amount End Inv usr =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : CUR.IVF Cur Wk Inv Val Prc/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Weight End Inv usr
     C           $EFZVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB6NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EF8VL           Amount End Inv
     C                     Z-ADDBTFZVL    $EGJVL           End Inv Price C
     C                     Z-ADDBTFZVL    P6FZVL           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CUR.Weight Prod usr is Not Equal to Zero
     C           $EB9NY    IFNE *ZERO                      *IF
      * Prod Price CWT
      * CASE: DB1.IVF Ovrrde Prod Price/CWT is Entered
     C           BTFWVL    IFNE *ZERO                      *IF
     C                     Z-ADDBTFWVL    $EGKVL           Prod Price CWT
      * Compute: Amt prod usr
      * CUR.Amount Prod Usr =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : CUR.IVF Ovrrde Prod Price/CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Weight Prod usr
     C           $EFWVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB9NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EF9VL           Amount Prod Usr
     C                     Z-ADDBTFWVL    P6FXVL           IVF Curr Wk Pro
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDBTFXVL    $EGKVL           Prod Price CWT
      * Compute: Amt prod usr
      * CUR.Amount Prod Usr =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : CUR.IVF Curr Wk Prod Price/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Weight Prod usr
     C           $EFXVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB9NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EF9VL           Amount Prod Usr
     C                     Z-ADDBTFXVL    P6FXVL           IVF Curr Wk Pro
     C                     END                             *FI
     C                     END                             *FI
      * Beg Inv Price CWT
      * CASE: CUR.Weight Beg Inv usr is Not Equal to Zero
     C           $EB7NY    IFNE *ZERO                      *IF
     C                     Z-ADDBTFSVL    $EGIVL           Beg Inv Price C
      * Compute:Amt beg inv usr
      * CUR.Amount Beg Inv usr =
      *    *COMPUTE ((x2/x3) * x1)
      * x2    : CUR.IVF Beg Inv Price/CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x1    : CUR.Weight Beg Inv usr
     C           $EFSVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT $EB7NY    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EGAVL           Amount Beg Inv
     C                     Z-ADDBTFSVL    P6FSVL           IVF Beg Inv Pri
     C                     END                             *FI
      * Compute:Profit loss wgt
      * CUR.Weight Profit/loss usr =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : CUR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : CUR.Weight End Inv usr
      * -     : PGM.*Synon (15,0) work field
      * x3    : CUR.Weight Prod usr
      * -     : PGM.*Synon (15,0) work field
      * x4    : CUR.Weight Beg Inv usr
     C           $EB5NY    ADD  $EB6NY    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  $EB9NY    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  $EB7NY    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EB8NY           Weight Profit/l
      * Compute:Profit loss Amt
      * CUR.Amount Profit/Loss usr =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : CUR.Amount Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : CUR.Amount End Inv usr
      * -     : PGM.*Synon (15,0) work field
      * x3    : CUR.Amount Prod Usr
      * -     : PGM.*Synon (15,0) work field
      * x4    : CUR.Amount Beg Inv usr
     C           $EF7VL    ADD  $EF8VL    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  $EF9VL    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  $EGAVL    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EGBVL           Amount Profit/L
      * Gain Shrink $ Calc
      * CASE: CUR.Weight Prod usr is Not Equal to Zero
     C           $EB9NY    IFNE *ZERO                      *IF
      * CUR.Weight Gain Usr =
      *    *COMPUTE (x1 *(x2/x3))
      * x1    : CUR.Weight Profit/loss usr
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Prod Price CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $EGKVL    DIV  100       W0WD01           *Synon (17,7) w
     C           $EB8NY    MULT W0WD01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $ECFNY           Weight Gain Usr
     C                     ELSE
      * CASE: *OTHERWISE
      * CUR.Weight Gain Usr =
      *    *COMPUTE (x1 *(x2/x3))
      * x1    : CUR.Weight Profit/loss usr
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : CUR.Beg Inv Price CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $EGIVL    DIV  100       W0WD01           *Synon (17,7) w
     C           $EB8NY    MULT W0WD01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $ECFNY           Weight Gain Usr
     C                     END                             *FI
     C           $EGBVL    SUB  $ECFNY    $ECGNY           Weight sales v.
      * CASE: PGM.*Print format is Print format
     C           W0PFM     IFEQ 'Y'                        *IF
      * Create outfile for download if Status is Y           01/23/06
      * CASE: PAR.Status - Y or N is yes
     C           P4B8ST    IFEQ 'Y'                        *IF
      * Compute: WF End Inv Amt
      * PAR.WF Ending Inv Amount =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : PAR.IVF Cur Wk Inv Val Prc/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.WF Ending Inv Weight
     C           P6FZVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT P6NCWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P6NDWG           WF Ending Inv A
      * Compute:WF Beg Inv Amt
      * PAR.WF Beginning Inv Amount =
      *    *COMPUTE ((x2/x3) * x1)
      * x2    : PAR.IVF Beg Inv Price/CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x1    : PAR.WF Beginning Inv Weight
     C           P6FSVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT P6NEWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P6GTVL           WF Beginning In
      * Compute: WF Sales Amt
      * PAR.WF Sales Amount =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : PAR.IVF Sales Price/CWT
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.WF Sales Weight
     C           P6FTVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT P6NFWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P6GUVL           WF Sales Amount
      * Compute: Prod Amt
      * PAR.WF Prod Amount =
      *    *COMPUTE ((x1/x3) * x2)
      * x1    : PAR.IVF Curr Wk Prod Price/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.WF Prod Weight
     C           P6FXVL    DIV  100       W0WD01           *Synon (17,7) w
     C           W0WD01    MULT P6NGWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    P6GVVL           WF Prod Amount
      * Compute:WF Profit Weight
      * PAR.WF Weight Profit Loss =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : PAR.WF Sales Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.WF Ending Inv Weight
      * -     : PGM.*Synon (15,2) work field
      * x3    : PAR.WF Prod Weight
      * -     : PGM.*Synon (15,2) work field
      * x4    : PAR.WF Beginning Inv Weight
     C           P6NFWG    ADD  P6NCWG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  P6NGWG    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  P6NEWG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P6NHWG           WF Weight Profi
      * Compute:WF Profit Amt
      * PAR.WF Amount Profit Loss =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : PAR.WF Sales Amount
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.WF Ending Inv Amount
      * -     : PGM.*Synon (15,2) work field
      * x3    : PAR.WF Prod Amount
      * -     : PGM.*Synon (15,2) work field
      * x4    : PAR.WF Beginning Inv Amount
     C           P6GUVL    ADD  P6NDWG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  P6GVVL    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  P6GTVL    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P6GWVL           WF Amount Profi
      * R9083 02/20/17 DN-Modified to Set Grouping.
      * Crt WF Inv Value      CR - WF Inventory Value Dwnld  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL$EWQSX    WL0015    P      IVF Valuation G
     C                     Z-ADD$EAJDX    WL0016           IVF Week Ending
     C                     Z-ADD$EEKC7    WL0017           IVF Item Code
     C                     MOVEL$EGWAA    WL0018    P      IVF Item G/L Su
     C                     MOVEL$EGXAA    WL0019    P      IVF Item U/M -
     C                     MOVEL$EWISX    WL0020    P      IVF Inventory V
     C                     MOVEL$EWJSX    WL0021    P      IVF Production
     C                     Z-ADDP6FSVL    WL0022           IVF Beg Inv Pri
     C                     Z-ADDP6NEWG    WL0023           WF Beginning In
     C                     Z-ADDP6GTVL    WL0024           WF Beginning In
     C                     Z-ADDP6FTVL    WL0025           IVF Sales Price
     C                     Z-ADDP6NFWG    WL0026           WF Sales Weight
     C                     Z-ADDP6GUVL    WL0027           WF Sales Amount
     C                     Z-ADDP6FXVL    WL0028           IVF Curr Wk Pro
     C                     Z-ADDP6NGWG    WL0029           WF Prod Weight
     C                     Z-ADDP6GVVL    WL0030           WF Prod Amount
     C                     Z-ADDP6FZVL    WL0031           IVF Cur Wk Inv
     C                     Z-ADDP6NCWG    WL0032           WF Ending Inv W
     C                     Z-ADDP6NDWG    WL0033           WF Ending Inv A
     C                     Z-ADDP6NHWG    WL0034           WF Weight Profi
     C                     Z-ADDP6GWVL    WL0035           WF Amount Profi
     C                     EXSR SGCRRC
     C                     Z-ADD*ZERO     P6FSVL           IVF Beg Inv Pri
     C                     Z-ADD*ZERO     P6FTVL           IVF Sales Price
     C                     Z-ADD*ZERO     P6FXVL           IVF Curr Wk Pro
     C                     Z-ADD*ZERO     P6FZVL           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert IVF Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EEKC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EEKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEEKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEEKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Inv Stk Value Rpt PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  7         W0FSUM
     C                     END                             FI
      *
      * * IVF Valuation Grouping of Prt Inv Stk Value Rpt PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * IVF Week Ending Date of Prt Inv Stk Value Rpt PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * IVF Item G/L Sub Code of Prt Inv Stk Value Rpt PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * IVF Item Code of Prt Inv Stk Value Rpt PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Inv Stk Value Rpt PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'I/C'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CB2C3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CSQTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $CSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$CGRAA    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $CO6NA           Warehouse Descr
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $CO6NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - OM Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD$EEKC7    BYHGCD           Item Code
      * Establish starting position
     C           KRSSE     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $EOONA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    $EOONA           Description Lin
     C                     MOVELBYAWNA    WUAWNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Weights Sum  RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Added Company and Whse selection. Blank is ALL             1/12/0
      * Added WF accumulators with decimal places.                 1/23/0
     C                     Z-ADD0         WL0010           WF Beginning In
     C                     Z-ADD0         WL0011           WF Sales Weight
     C                     Z-ADD0         WL0012           WF Prod Weight
     C                     Z-ADD0         WL0013           WF Ending Inv W
      * Declare restrictor key work fields
     C           *LIKE     DEFN BSWCSX    WQSF01           ISC Valuation G
     C           *LIKE     DEFN BSAIDX    WQSF02           ISC Week Ending
     C           *LIKE     DEFN BSEJC7    WQSF03           ISC Item Code
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           ISC Valuation G
     C                     KFLD           WQSF02           ISC Week Ending
     C                     KFLD           WQSF03           ISC Item Code
      * Setup key
     C                     MOVELWL0005    WQSF01           ISC Valuation G
     C                     Z-ADDWL0001    WQSF02           ISC Week Ending
     C                     Z-ADDWL0004    WQSF03           ISC Item Code
      * Establish starting position
     C           KRSSF     SETLL@BSCPZC                    *
     C           KRSSF     READE@BSCPZC                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0006           Weight Sales us
     C                     Z-ADD*ZERO     WL0007           Weight End Inv
     C                     Z-ADD*ZERO     WL0008           Weight Prod usr
     C                     Z-ADD*ZERO     WL0009           Weight Beg Inv
     C                     Z-ADD*ZERO     WL0010           WF Beginning In
     C                     Z-ADD*ZERO     WL0011           WF Sales Weight
     C                     Z-ADD*ZERO     WL0012           WF Prod Weight
     C                     Z-ADD*ZERO     WL0013           WF Ending Inv W
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUZZST           Record Selected
      * Sel Company
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.ISC Warehouse Company is not equal to zero
      *   |- c2    : PAR.ISC Warehouse Company NE DB1.ISC Warehouse Compa
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0002    IFNE 0                          *IF
     C           WL0002    IFNE BSB2C3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WUZZST           Record Selected
     C                     END                             *FI
      * Sel Whse
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.ISC Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.ISC Warehouse Code NE DB1.ISC Warehouse Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0003    IFNE *BLANK                     *IF
     C           WL0003    IFNE BSGRAA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WUZZST           Record Selected
     C                     END                             *FI
      * CASE: WRK.Record Selected       USR is yes
     C           WUZZST    IFEQ 'Y'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.ISC Item U/M - Pricing is Head Set
      *   |- c2    : DB1.ISC Item U/M - Pricing is Each
      *   '-
     C           BSGTAA    IFEQ 'HS'                       *IF
     C           BSGTAA    OREQ 'EA'                       *OR
      * For Casings -- use qty
      * Compute: qty    sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSOLQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0006    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0006           Weight Sales us
      * Compute: qty    End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x1)
      * x2    : DB1.ISC End Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x1    : PAR.Weight End Inv usr
     C           BSOTQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WL0007    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0007           Weight End Inv
      * Compute: Qty    prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Qty
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           BSOHQT    ADD  BSOWQT    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0008    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0008           Weight Prod usr
      * Compute: Qty   beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSOEQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0009    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0009           Weight Beg Inv
      * Create workf if Yes        1/23/06
      * CASE: PAR.Status - Y or N is yes
     C           WL0014    IFEQ 'Y'                        *IF
      * Compute: qty    sales usr
      * PAR.WF Sales Weight =
      *    *COMPUTE (x1 + x2)
      * x1    : PAR.WF Sales Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Shipment Final Qty
     C           WL0011    ADD  BSOLQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0011           WF Sales Weight
      * Compute: qty    End inv
      * PAR.WF Ending Inv Weight =
      *    *COMPUTE (x1+x2)
      * x1    : PAR.WF Ending Inv Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Final Qty
     C           WL0013    ADD  BSOTQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0013           WF Ending Inv W
      * Compute: Qty    prod usr
      * PAR.WF Prod Weight =
      *    *COMPUTE (x1 + (x2 + x3))
      * x1    : PAR.WF Prod Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Floor Production Qty
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Floor Prod Adj Qty
     C           BSOHQT    ADD  BSOWQT    W0WA01           *Synon (15,2) w
     C           WL0012    ADD  W0WA01    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0012           WF Prod Weight
      * Compute: Qty   beg inv us
      * PAR.WF Beginning Inv Weight =
      *    *COMPUTE (x1 + x2)
      * x1    : PAR.WF Beginning Inv Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Beg Inv Final Qty
     C           WL0010    ADD  BSOEQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0010           WF Beginning In
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute: weight sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSMWWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0006    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0006           Weight Sales us
      * Compute: weight End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x3)
      * x2    : DB1.ISC End Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.Weight End Inv usr
     C           BSM5WG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WL0007    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0007           Weight End Inv
      * Compute: Weight prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Lbs
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           BSMSWG    ADD  BSNAWG    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0008    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0008           Weight Prod usr
      * Compute weight beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSMQWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WL0009    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0009           Weight Beg Inv
      * Create Workf if Yes     1/23/06
      * CASE: PAR.Status - Y or N is yes
     C           WL0014    IFEQ 'Y'                        *IF
      * Compute: weight sales usr
      * PAR.WF Sales Weight =
      *    *COMPUTE (x1 + x2)
      * x1    : PAR.WF Sales Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Shipment Final Lbs
     C           WL0011    ADD  BSMWWG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0011           WF Sales Weight
      * Compute: weight End inv
      * PAR.WF Ending Inv Weight =
      *    *COMPUTE (x1 + x2)
      * x1    : PAR.WF Ending Inv Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Final Lbs
     C           WL0013    ADD  BSM5WG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0013           WF Ending Inv W
      * Compute: Weight prod usr
      * PAR.WF Prod Weight =
      *    *COMPUTE (x1 + (x2 + x3))
      * x1    : PAR.WF Prod Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Floor Production Lbs
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Floor Prod Adj Lbs
     C           BSMSWG    ADD  BSNAWG    W0WA01           *Synon (15,2) w
     C           WL0012    ADD  W0WA01    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0012           WF Prod Weight
      * Compute weight beg inv us
      * PAR.WF Beginning Inv Weight =
      *    *COMPUTE (x1 + x2)
      * x1    : PAR.WF Beginning Inv Weight
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC Beg Inv Final Lbs
     C           WL0010    ADD  BSMQWG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0010           WF Beginning In
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@BSCPZC                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCRRC    BEGSR
      *================================================================
      * Crt WF Inv Value      CR - WF Inventory Value Dwnld  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B3CPFM
     C                     MOVELWL0015    B3WQSX           IVF Valuation G
     C                     Z-ADDWL0016    B3AJDX           IVF Week Ending
     C                     Z-ADDWL0017    B3EKC7           IVF Item Code
     C                     MOVELWL0018    B3GWAA           IVF Item G/L Su
     C                     MOVELWL0019    B3GXAA           IVF Item U/M -
     C                     MOVELWL0020    B3WISX           IVF Inventory V
     C                     MOVELWL0021    B3WJSX           IVF Production
     C                     Z-ADDWL0022    B3FSVL           IVF Beg Inv Pri
     C                     Z-ADDWL0023    B3NEWG           WF Beginning In
     C                     Z-ADDWL0024    B3GTVL           WF Beginning In
     C                     Z-ADDWL0025    B3FTVL           IVF Sales Price
     C                     Z-ADDWL0026    B3NFWG           WF Sales Weight
     C                     Z-ADDWL0027    B3GUVL           WF Sales Amount
     C                     Z-ADDWL0028    B3FXVL           IVF Curr Wk Pro
     C                     Z-ADDWL0029    B3NGWG           WF Prod Weight
     C                     Z-ADDWL0030    B3GVVL           WF Prod Amount
     C                     Z-ADDWL0031    B3FZVL           IVF Cur Wk Inv
     C                     Z-ADDWL0032    B3NCWG           WF Ending Inv W
     C                     Z-ADDWL0033    B3NDWG           WF Ending Inv A
     C                     Z-ADDWL0034    B3NHWG           WF Weight Profi
     C                     Z-ADDWL0035    B3GWVL           WF Amount Profi
      *
     C           KLCRSG    KLIST
     C                     KFLD           B3WQSX           IVF Valuation G
     C                     KFLD           B3AJDX           IVF Week Ending
     C                     KFLD           B3EKC7           IVF Item Code
     C                     KFLD           B3GWAA           IVF Item G/L Su
      * Check for duplicate primary key
     C           KLCRSG    SETLL@B3CPFM                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3616' W0RTN   7
      * Send message 'WF Inventory Value Dwn EX'
     C                     MOVEL'USR3616' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C                     WRITE@B3CPFM                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Item Ctg Desc     RT - Item Category  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           JIAIC3           Company Number
     C                     KFLD           JIUSNB           Item Category N
     C                     KFLD           JISLCD           Item Category C
      * Setup key
     C                     Z-ADDP5AIC3    JIAIC3           Company Number
     C                     Z-ADD4         JIUSNB           Item Category N
     C                     MOVEL$FGWAA    JISLCD           Item Category C
      * Establish starting position
     C           KRSSH     CHAIN@JIREXX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1854' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $FQYNA           Description
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJIAUNA    $FQYNA           Description
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         XDV84T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX01           DD
     C                     Z-ADDXDI8MM    XDEX02           MM
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX01           MM
     C                     Z-ADDXDI8DD    XDEX02           DD
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
      * YMD format
     C           1000      MULT XDI8CC    XDEY01           Y
     C                     ADD  XDI8YY    XDEY01            YYY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV84E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P5AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P5AIC3           Company Number
     C                     MOVEL*BLANK    P5DNCD           Application Cod
     C                     MOVEL*BLANK    P5DQCD           Enterprise Code
     C                     MOVEL*BLANK    P5DRCD           Enterprise Code
     C                     MOVEL*BLANK    P5BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P5B8NA           System Date For
     C                     MOVEL*BLANK    P5AJVN           User Profile Na
     C                     MOVEL*BLANK    P5I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P5I8ST           Allow Multi War
     C                     MOVEL*BLANK    P5MPNA           Default Printer
     C                     MOVEL*BLANK    P5TAST           First Time Flag
     C                     Z-ADD*ZERO     P6FSVL           IVF Beg Inv Pri
     C                     Z-ADD*ZERO     P6NEWG           WF Beginning In
     C                     Z-ADD*ZERO     P6GTVL           WF Beginning In
     C                     Z-ADD*ZERO     P6FTVL           IVF Sales Price
     C                     Z-ADD*ZERO     P6NFWG           WF Sales Weight
     C                     Z-ADD*ZERO     P6GUVL           WF Sales Amount
     C                     Z-ADD*ZERO     P6FXVL           IVF Curr Wk Pro
     C                     Z-ADD*ZERO     P6NGWG           WF Prod Weight
     C                     Z-ADD*ZERO     P6GVVL           WF Prod Amount
     C                     Z-ADD*ZERO     P6FZVL           IVF Cur Wk Inv
     C                     Z-ADD*ZERO     P6NCWG           WF Ending Inv W
     C                     Z-ADD*ZERO     P6NDWG           WF Ending Inv A
     C                     Z-ADD*ZERO     P6NHWG           WF Weight Profi
     C                     Z-ADD*ZERO     P6GWVL           WF Amount Profi
     C                     MOVEL*BLANK    P7GTAA           ISC Item U/M -
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BTWQSX           IVF Valuation G
     C                     MOVEL*LOVAL    BTAJDX           IVF Week Ending
     C                     MOVEL*LOVAL    BTGWAA           IVF Item G/L Su
     C                     MOVEL*LOVAL    BTEKC7           IVF Item Code
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field Record Selected       USR
     C                     MOVEL*BLANK    WUZZST  1
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB00 155       *Synon (15,5) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0001  80
     C                     Z-ADD*ZERO     WL0002  30
     C                     MOVEL*BLANK    WL0003  3
     C                     Z-ADD*ZERO     WL0004  70
     C                     MOVEL*BLANK    WL0005  1
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007  70
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009  70
     C                     Z-ADD*ZERO     WL0010  92
     C                     Z-ADD*ZERO     WL0011  92
     C                     Z-ADD*ZERO     WL0012  92
     C                     Z-ADD*ZERO     WL0013  92
     C                     MOVEL*BLANK    WL0014  1
      * Define local variables for subroutine SGCRRC.
     C                     MOVEL*BLANK    WL0015  1
     C                     Z-ADD*ZERO     WL0016  80
     C                     Z-ADD*ZERO     WL0017  70
     C                     MOVEL*BLANK    WL0018  3
     C                     MOVEL*BLANK    WL0019  2
     C                     MOVEL*BLANK    WL0020  1
     C                     MOVEL*BLANK    WL0021  1
     C                     Z-ADD*ZERO     WL0022  94
     C                     Z-ADD*ZERO     WL0023  92
     C                     Z-ADD*ZERO     WL0024  92
     C                     Z-ADD*ZERO     WL0025  94
     C                     Z-ADD*ZERO     WL0026  92
     C                     Z-ADD*ZERO     WL0027  92
     C                     Z-ADD*ZERO     WL0028  94
     C                     Z-ADD*ZERO     WL0029  92
     C                     Z-ADD*ZERO     WL0030  92
     C                     Z-ADD*ZERO     WL0031  94
     C                     Z-ADD*ZERO     WL0032  92
     C                     Z-ADD*ZERO     WL0033  92
     C                     Z-ADD*ZERO     WL0034  92
     C                     Z-ADD*ZERO     WL0035  92
      * Define null work field Item Category Type Number
     C                     Z-ADD*ZERO     YN0001  20
      * Define null work field Item Category Type Code
     C                     MOVEL*BLANK    YN0002  3
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0003  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
