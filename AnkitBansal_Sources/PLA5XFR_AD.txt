// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLA5XFR
// ?Date: 14.08.2025 Time: 02:53:36
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification historu
DO;

//? 4/17/17 JBB C9426 - Accept new Ref fields on Template file.
//?                     Populate values on file create to blanks.
ENDDO;

//?Move to numeric field
// WRK.Day of Week USR = CVTVAR(PAR.DST Day of Week)
WRK.Day_of_Week_USR = CVTVAR(PAR.DST_Delivery_Day_of_Week);

// LCL.Day of Week USR = CVTVAR(PAR.End Day of Week USR)
LCL.Day_of_Week_USR = CVTVAR(PAR.End_Day_of_Week_USR);

// DOW WRK.Day of Week USR LE LCL.Day of Week USR
DOW WRK.Day_of_Week_USR <= LCL.Day_of_Week_USR;

// LCL.DST Day of Week = WRK.Day of Week USR
LCL.DST_Delivery_Day_of_Week = WRK.Day_of_Week_USR;

//?DOW is the start DOW
CASE;

// IF LCL.DST Day of Week EQ PAR.DST Day of Week
IF LCL.DST_Delivery_Day_of_Week = PAR.DST_Delivery_Day_of_Week;

// WRK.Time Beg USR = PAR.DST Delivery Time * CON.100 *
WRK.Time_Beg_USR = PAR.DST_Delivery_Time * 100;

ENDIF;

//?DOW is the Start Day of week, & not the end DOW
CASE;

// IF LCL.DST Day of Week EQ PAR.DST Day of Week
IF LCL.DST_Delivery_Day_of_Week = PAR.DST_Delivery_Day_of_Week;

// OR LCL.DST Day of Week NE PAR.End Day of Week USR
OR LCL.DST_Delivery_Day_of_Week <> PAR.End_Day_of_Week_USR;

// WRK.Time End USR = CON.240000
WRK.Time_End_USR = 240000;

ENDIF;

//?DOW is not Start Day of week, & not the end DOW
CASE;

// IF LCL.DST Day of Week NE PAR.DST Day of Week
IF LCL.DST_Delivery_Day_of_Week <> PAR.DST_Delivery_Day_of_Week;

// AND LCL.DST Day of Week NE PAR.End Day of Week USR
AND LCL.DST_Delivery_Day_of_Week <> PAR.End_Day_of_Week_USR;

// WRK.Time Beg USR = CON.*ZERO
WRK.Time_Beg_USR = 000000;

// WRK.Time Beg USR = WRK.Time Beg USR + PAR.Time MM USR *MINUTES
WRK.Time_Beg_USR = TIMEINCR(WRK.Time_Beg_USR PAR.Time_MM_USR 'MN');

// WRK.Time End USR = CON.240000
WRK.Time_End_USR = 240000;

ENDIF;

//?DOW is the end DOW and not the start
CASE;

// IF LCL.DST Day of Week EQ PAR.End Day of Week USR
IF LCL.DST_Delivery_Day_of_Week = PAR.End_Day_of_Week_USR;

// AND LCL.DST Day of Week NE PAR.DST Day of Week
AND LCL.DST_Delivery_Day_of_Week <> PAR.DST_Delivery_Day_of_Week;

// WRK.Time Beg USR = CON.*ZERO
WRK.Time_Beg_USR = 000000;

// WRK.Time Beg USR = WRK.Time Beg USR + PAR.Time MM USR *MINUTES
WRK.Time_Beg_USR = TIMEINCR(WRK.Time_Beg_USR PAR.Time_MM_USR 'MN');

ENDIF;

//?DOW is the end DOW
CASE;

// IF LCL.DST Day of Week EQ PAR.End Day of Week USR
IF LCL.DST_Delivery_Day_of_Week = PAR.End_Day_of_Week_USR;

// WRK.Time End USR = PAR.End Delivery Time USR * CON.100 *
WRK.Time_End_USR = PAR.End_Delivery_Time_USR * 100;

ENDIF;

// WRK.Time 6.0 USR = WRK.Time Beg USR
WRK.Time_6_0_USR = WRK.Time_Beg_USR;

// DOW WRK.Time 6.0 USR GE WRK.Time Beg USR
DOW WRK.Time_6_0_USR >= WRK.Time_Beg_USR;

// AND WRK.Time 6.0 USR LE WRK.Time End USR
AND WRK.Time_6_0_USR <= WRK.Time_End_USR;

// LCL.DST Delivery Time = WRK.Time 6.0 USR / CON.100 *
LCL.DST_Delivery_Time = WRK.Time_6_0_USR / 100;

EXECUTE FUNCTION(Crt Delv Sched Templt CR) TYPE(CRTOBJ) FILE(PLACREP)           AB1244652;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(LCL.DST_Delivery_Day_of_Week);
PARAMETER(LCL.DST_Delivery_Time);
PARAMETER(1);
PARAMETER(PAR.DST_Kill_Day_of_Week);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Blank_Usr_2);
PARAMETER(WRK.Blank_Usr_2);
PARAMETER(WRK.Blank_Usr_2);
PARAMETER(WRK.Blank_Usr_2);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(WRK.Blank_Usr_2);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('A');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


// WRK.Time Out USR = WRK.Time 6.0 USR
WRK.Time_Out_USR = WRK.Time_6_0_USR;

// WRK.Time 6.0 USR = WRK.Time 6.0 USR + PAR.Time MM USR *MINUTES
WRK.Time_6_0_USR = TIMEINCR(WRK.Time_6_0_USR PAR.Time_MM_USR 'MN');

//?Force fallout if time turns from 23:nn to 00:nn
CASE;

// IF WRK.Time 6.0 USR LT WRK.Time Out USR
IF WRK.Time_6_0_USR < WRK.Time_Out_USR;

// WRK.Time 6.0 USR = CON.*ZERO
WRK.Time_6_0_USR = 0;

ENDIF;

ENDDO;

// WRK.Day of Week USR = WRK.Day of Week USR + CON.1
WRK.Day_of_Week_USR = WRK.Day_of_Week_USR + 1;

ENDDO;

