      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP966
      * TITLE:       Purge Closed Hog Groups
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     05/22/97
      *
      * FUNCTION:    This batch program purges Closed groups
      /EJECT
      *****************************************************************************************
      * MODIFICATIONS:
      *****************************************************************************************
      * DATE      PROGRAMMER
      *
      * 02/15/08  LeAnne Ramsey
      *           In anticipation of actually purging something, cleaned up code.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 03/27/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      /EJECT
      ****************************************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************************************
      *
     Fhsp365    if   e           k disk
      *  Workfile of purge groups
      *
      *
     Fhsp033    uf   e           k disk
      *  Closed hog group
      *
      *
     Fhsl034d   uf   e           k disk
      *  Hog group
      *
      *
     Fhsl037a   uf   e           k disk
      *  Feed ticket header
      *
      *
     Fhsp038    uf   e           k disk
      *  Feed ticket detail
      *
      *
     Fhsl038e   if   e           k disk    rename(fdrec: fdrece)
      *  Feed ticket detail
      *
      *
     Fhsp039    uf   e           k disk
      *  Closed group equipment
      *
      *
     Fhsp047    uf   e           k disk
      *  Group period
      *
      *
     Fhsl048B   uf   e           k disk
      *  Expense ticket
      *
      *
     Fhsp055    uf   e           k disk
      *  Period costs for hogs moved out
      *
      *
     Fhsl058d   uf   e           k disk
      *  Movement event
      *
      *
     Fhsp059    uf   e           k disk
      *  Feed pickup ticket
      *
      *
     Fhsp063    uf   e           k disk
      *  Check header
      *
      *
     Fhsp064    uf   e           k disk
      *  Check detail
      *
      *
     Fhsl064i   if   e           k disk    rename(cdrec:cdreci)
      *  Check detail
      *
      *
     Fhsp065    uf   e           k disk
      *  Check adjustments
      *
      *
     Fhsl068d   uf   e           k disk
      *  Killed/dead hogs
      *
      *
     Fhsl069a   uf   e           k disk
      *  Inventory adjustments
      *
      *
     Fhsp074    uf   e           k disk
      *  Transfer movement header
      *
      *
     Fhsp075    uf   e           k disk
      *  Transfer movement detail
      *
      *
     Fhsp078    uf   e           k disk
      *  Rejected head with reasons
      *
      *
     Fhsp084    uf   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    uf   e           k disk
      *  Sales movement detail
      *
      *
     Fhsl085b   if   e           k disk    rename(sgrec:sgrecb)
      *  Sales movement detail
      *
      *
     Fhsp102    uf   e           k disk
      *  Reported weekly activity
      *
      *
     Fhsl118b   uf   e           k disk
      *  Cost movements: costed movements
      *
      *
     Fhsl118c   uf   e           k disk    rename(cmrec:cmrecc)
      *  Cost movements: costed movements
      *
      *
     Fhsl120b   uf   e           k disk
      *  Cost movements: expense codes
      *
      *
     Fhsl120c   uf   e           k disk    rename(cxrec:cxrecc)
      *  Cost movements: expense codes
      *
      *----------------------------------------------------------------
      * PURGE FILE OF GROUPS; KEPT ON SYSTEM
      *----------------------------------------------------------------
      *
     Fhsp934    o    e           k disk    rename(hgrec:hgrec934)
      *  Purged hog groups
      *
      *----------------------------------------------------------------
      * PURGE FILES THAT WILL BE BACKED UP TO TAPE
      *----------------------------------------------------------------
      *
     Fhsp033pr  o    e           k disk    rename(cgrec:cgrecpr)
      *  Closed hog group
      *
      *
     Fhsp034pr  o    e           k disk    rename(hgrec:hgrecpr)
      *  Hog group
      *
      *
     Fhsp037pr  o    e           k disk    rename(fhrec:fhrecpr)
      *  Feed ticket header
      *
      *
     Fhsp038pr  o    e           k disk    rename(fdrec:fdrecpr)
      *  Feed ticket detail
      *
      *
     Fhsp039pr  o    e           k disk    rename(cerec:cerecpr)
      *  Closed hog group equipment
      *
      *
     Fhsp047pr  o    e           k disk    rename(gprec:gprecpr)
      *  Group period
      *
      *
     Fhsp048pr  o    e           k disk    rename(xtrec:xtrecpr)
      *  Expense ticket
      *
      *
     Fhsp055pr  o    e           k disk    rename(pcrec:pcrecpr)
      *  Period costs
      *
      *
     Fhsp058pr  o    e           k disk    rename(merec:merecpr)
      *  Movement event
      *
      *
     Fhsp059pr  o    e           k disk    rename(fprec:fprecpr)
      *  Feed pickup ticket
      *
      *
     Fhsp063pr  o    e           k disk    rename(chrec:chrecpr)
      *  Check header
      *
      *
     Fhsp064pr  o    e           k disk    rename(cdrec:cdrecpr)
      *  Check detail
      *
      *
     Fhsp065pr  o    e           k disk    rename(cjrec:cjrecpr)
      *  Check adjustments
      *
      *
     Fhsp068pr  o    e           k disk    rename(kdrec:kdrecpr)
      *  Killed/Dead hogs
      *
      *
     Fhsp069pr  o    e           k disk    rename(iarec:iarecpr)
      *  Inventory adjustments
      *
      *
     Fhsp074pr  o    e           k disk    rename(mhrec:mhrecpr)
      *  Transfer movement header
      *
      *
     Fhsp075pr  o    e           k disk    rename(mdrec:mdrecpr)
      *  Transfer movement detail
      *
      *
     Fhsp078pr  o    e           k disk    rename(rjrec:rjrecpr)
      *  Rejected head with reasons
      *
      *
     Fhsp084pr  o    e           k disk    rename(shrec:shrecpr)
      *  Sales movement header
      *
      *
     Fhsp085pr  o    e           k disk    rename(sgrec:sgrecpr)
      *  Sales movement detail
      *
      *
     Fhsp102pr  o    e           k disk    rename(rwrec:rwrecpr)
      *  Reported weekly activity
      *
      *
     Fhsp118pr  o    e           k disk    rename(cmrec:cmrecpr)
      *  Cost movements: costed movements
      *
      *
     Fhsp120pr  o    e           k disk    rename(cxrec:cxrecpr)
      *  Cost movements: expense codes
      *
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Save/Control fields
      *
     d svrtno          s                   like(fdrtno)
     d svfmbo          s                   like(fdfmbo)
      *
      * Work fields for date manipulation
      *
     D wksysdt         s              8  0
     D wkcymdiso       s               D   datfmt(*iso)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  lddt                   1      8  0
     D  ldyr                   9     12  0
     D  ldpe                  13     14  0
      *
      * Definition for external data area 'DATFADSN' for assigning the next
      * Adjustment Number.
      *
     Dpurgedt          s              8  0 dtaara(dapurge)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Purge all data for each group in the workfile.
      *
     C     *loval        setll     hsp365
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp365                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Delete all Transfer and Sale Movements for the Group
      *
     C                   exsr      $tran
     C                   exsr      $sale
      *
      * Delete all Check info for the group
      *
     C                   exsr      $check
      *
      * Delete all Feed Tickets for the Group
      *
     C     wghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off
     C                   movel     fdfmbo        svfmbo
     C                   z-add     fdrtno        svrtno
     C                   exsr      $feed
     C                   endif
     C                   enddo
      *
      * Delete Daily Killed/Dead movements for a Group
      *
     C     wghgsn        setll     hsl068d
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl068D                                91
     C                   if        *in91 = *off
     C                   write     kdrecpr
     C                   delete    kdrec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Expense tickets for a Group
      *
     C     wghgsn        setll     hsl048b
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl048b                                91
     C                   if        *in91 = *off
     C                   write     xtrecpr
     C                   delete    xtrec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Inventory Adjustments for a Group
      *
     C     wghgsn        setll     hsl069a
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl069a                                91
     C                   if        *in91 = *off
     C                   write     iarecpr
     C                   delete    iarec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Movement Event records for a Group
      *
     C     wghgsn        setll     hsl058d
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl058d                                91
     C                   if        *in91 = *off
     C                   write     merecpr
     C                   delete    merec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Closed Group Equipment records for a Group
      *
     C     wghgsn        setll     hsp039
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsp039                                 91
     C                   if        *in91 = *off
     C                   write     cerecpr
     C                   delete    cerec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Group Period records for a Group
      *
     C     wghgsn        setll     hsp047
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsp047                                 91
     C                   if        *in91 = *off
     C                   write     gprecpr
     C                   delete    gprec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Period Cost records for a Group
      *
     C     wghgsn        setll     hsp055
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsp055                                 91
     C                   if        *in91 = *off
     C                   write     pcrecpr
     C                   delete    pcrec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Closed Group records for a Group
      *
     C     wghgsn        setll     hsp033
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsp033                                 91
     C                   if        *in91 = *off
     C                   write     cgrecpr
     C                   delete    cgrec
     C                   endif
     C                   enddo
      *
      *
      * Delete all Reported Weekly Activity records for a Group
      *
     C     wghgsn        setll     hsp102
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsp102                                 91
     C                   if        *in91 = *off
     C                   write     rwrecpr
     C                   delete    rwrec
     C                   endif
     C                   enddo
      *
      * Delete all Costed Movements where this Group is the Origin Group
      *
     C     wghgsn        setll     hsl118b
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl118b                                91
     C                   if        *in91 = *off
     C                   write     cmrecpr
     C                   delete    cmrec
     C                   endif
     C                   enddo
      *
      * Delete all Costed Movements where Group is the Destination Group
      *
     C     wghgsn        setll     hsl118c
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl118c                                91
     C                   if        *in91 = *off
     C                   write     cmrecpr
     C                   delete    cmrecc
     C                   endif
     C                   enddo
      *
      * Delete all Costed Movements:Expense Codes where this Group is the
      * Origin Group
      *
     C     wghgsn        setll     hsl120b
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl120b                                91
     C                   if        *in91 = *off
     C                   write     cxrecpr
     C                   delete    cxrec
     C                   endif
     C                   enddo
      *
      * Delete all Costed Movements:Expense Codes where the Group is the
      * Destination Group
      *
     C     wghgsn        setll     hsl120c
     C                   dou       *in91 = *on
     C     wghgsn        reade     hsl120c                                91
     C                   if        *in91 = *off
     C                   write     cxrecpr
     C                   delete    cxrecc
     C                   endif
     C                   enddo
      *
      *
      * Write Group to two files: permanent Purged Hog Group file
      *                           purge file backed up to tape
      * then, delete the group from the Hog Group file.
      *
     C     wghgsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   z-add     lddt          hglpudt
     C                   z-add     wksysdt       hgupdt
     C                   write     hgrec934
     C                   write     hgrecpr
     C                   delete    hgrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * This is the last program in the Purge Job Stream. So, update
      * the data area with the purge date.
      *
     C     *lock         in        purgedt
     C                   z-add     lddt          purgedt
     C                   out       purgedt
      *
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Delete all Header/Detail for the Reference Ticket
      *---------------------------------------------------------------------------------------
      *
     C     $feed         begsr
      *
     C     key01         setll     hsl037a
      *
     C                   dou       *in93 = *on                                  Do references
     C     key01         reade     hsl037a                                93
     C                   if        *in93 = *off                                 If not EOF
      *
      * Delete all Feed Detail records for the Header
      *
     C     key02         setll     hsp038
     C                   dou       *in94 = *on                                  Do detail
     C     key02         reade     hsp038                                 94
     C                   if        *in94 = *off
     C                   write     fdrecpr
     C                   delete    fdrec
     C                   endif
     C                   enddo                                                  Do detail
      *
      * If this is a Pickup Ticket, delete all records for the ticket in the
      * file that holds the "TO" side of the Pickup Ticket.
      *
     C                   if        fhtrcd = 'P'                                 If pickup
     C     key02         setll     hsp059
     C                   dou       *in94 = *on                                  Do to pickup
     C     key02         reade     hsp059                                 94
     C                   if        *in94 = *off
     C                   write     fprecpr
     C                   delete    fprec
     C                   endif
     C                   enddo                                                  Do to pickup
     C                   endif                                                  If pickup
      *
      * Delete the Feed Ticket Header record
      *
     C                   write     fhrecpr
     C                   delete    fhrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do references
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Delete all Transfer Movements for a Group
      *----------------------------------------------------------------------------------------
      *
     C     $tran         begsr
      *
      * Read/Process all Transfer Movements for this Group in the Movement
      * Event file.
      *
     C     wghgsn        setll     hsl058d
      *
     C                   dou       *in91 = *on                                  Do events
     C     wghgsn        reade(n)  hsl058d                                91
     C                   if        *in91 = *off and memtcd = 'T'                If transfer
      *
      * Retrieve Movement Header
      *
     C     memvsn        chain     hsp074                             92
     C                   if        *in92 = *off                                 If hit
      *
      * Delete all Detail records for this Movement
      *
     C     mhmvsn        setll     hsp075
     C                   dou       *in93 = *on                                  Do tran detail
     C     mhmvsn        reade     hsp075                                 93
     C                   if        *in93 = *off                                 If not EOF
     C                   write     mdrecpr
     C                   delete    mdrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do tran detail|
      *
      * Delete all Reject records for this Movement
      *
     C     mhmvsn        setll     hsp078
     C                   dou       *in93 = *on                                  Do rejects
     C     mhmvsn        reade     hsp078                                 93
     C                   if        *in93 = *off
     C                   write     rjrecpr
     C                   delete    rjrec
     C                   endif
     C                   enddo                                                  Do rejects
      *
      * Delete Movement Header
      *
     C                   write     mhrecpr
     C                   delete    mhrec
     C                   endif                                                  If hit
     C                   endif                                                  If transfer
      *
     C                   enddo                                                  Do events
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Process all Sales Movements for a Group
      *---------------------------------------------------------------------------------------
      *
     C     $sale         begsr
      *
     C     wghgsn        setll     hsl085b
      *
     C                   dou       *in91 = *on                                  Do sales
     C     wghgsn        reade     hsl085b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Retrieve Sales Movement Header
      *
     C     sgmvsn        chain     hsp084                             92
     C                   if        *in92 = *off                                 If hit
      *
      * Delete all Detail fro the Sales Movement
      *
     C     shmvsn        setll     hsp085
      *
     C                   dou       *in93 = *on                                  Do sales detail
     C     shmvsn        reade     hsp085                                 93
     C                   if        *in93 = *off
     C                   write     sgrecpr
     C                   delete    sgrec
     C                   endif
     C                   enddo                                                  Do sales detail
      *
      * Delete Sales Movement Header
      *
     C                   write     shrecpr
     C                   delete    shrec
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process all Checks for a Group
      *--------------------------------------------------------------------------------------
      *
     C     $check        begsr
      *
     C     wghgsn        setll     hsl064i
      *
     C                   dou       *in91 = *on                                  Do checks
     C     wghgsn        reade     hsl064i                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Retrieve Check Header
      *
     C     key03         chain     hsp063                             92
     C                   if        *in92 = *off                                 If hit
      *
      * Delete all Detail for the Check
      *
     C     key04         setll     hsp064
     C                   dou       *in93 = *on                                  Do check detail
     C     key04         reade     hsp064                                 93
     C                   if        *in93 = *off
     C                   write     cdrecpr
     C                   delete    cdrec
     C                   endif
     C                   enddo                                                  Do check detail
      *
      *
      * Delete all Check Adjustments
      *
     C     key04         setll     hsp065
     C                   dou       *in93 = *on                                  Do chk adjusts
     C     key04         reade     hsp065                                 93
     C                   if        *in93 = *off
     C                   write     cjrecpr
     C                   delete    cjrec
     C                   endif
     C                   enddo                                                  Do chk adjusts
      *
      * Delete Check Header
      *
     C                   write     chrecpr
     C                   delete    chrec
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do checks
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    svfmbo
     C                   kfld                    svrtno
      *
     C     key02         klist
     C                   kfld                    fhfmbo
     C                   kfld                    fhtkno
     C                   kfld                    fhtrcd
      *
     C     key03         klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
      *
     C     key04         klist
     C                   kfld                    chchdt
     C                   kfld                    chcvno
     C                   kfld                    chchno
      *
      * Get the system date into CCYYMMDD format.
      *
     C                   move      *date         wkcymdiso
     C                   move      wkcymdiso     wksysdt
      *
     C                   endsr
      /EJECT
