// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBRGXFR
// ?Date: 14.08.2025 Time: 03:49:06
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Bld Age Quantity  RTX) TYPE(RTVOBJ) FILE(CAB1REP)          AC2105737;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Job_Date_Usr);
PARAMETER(PAR.Include_Todays_Trans);
PARAMETER(PAR.Chill_Date_USR);
PARAMETER(PAR.Fresh_Chilling_Time);
PARAMETER(PAR.Record_Selected_USR);
PARAMETER(PAR.Quantity_Age_Day_1_USR);
PARAMETER(PAR.Quantity_Age_Day_2_USR);
PARAMETER(PAR.Quantity_Age_Day_3_USR);
PARAMETER(PAR.Quantity_Age_Day_4_USR);
PARAMETER(PAR.Quantity_Age_Day_5_USR);
PARAMETER(PAR.Quantity_Age_Day_6_USR);
PARAMETER(PAR.Quantity_Age_Day_7_USR);
PARAMETER(PAR.Quantity_Age_Day_8_USR);
PARAMETER(PAR.Quantity_Age_Day_9_USR);
PARAMETER(PAR.Quantity_Age_Day_10_USR);
PARAMETER(PAR.Quantity_Age_Day_11_USR);
PARAMETER(PAR.Quantity_Age_Day_12_USR);
PARAMETER(PAR.Quantity_Age_Day_13_USR);
PARAMETER(PAR.Quantity_Age_Day_14_USR);
PARAMETER(PAR.Quantity_Age_Day_15_USR);
PARAMETER(PAR.Quantity_Age_Day_16_USR);
PARAMETER(PAR.Quantity_Age_Day_17_USR);
PARAMETER(PAR.Quantity_Age_Day_18_USR);
PARAMETER(PAR.Quantity_Age_Day_19_USR);
PARAMETER(PAR.Quantity_Age_Day_20_USR);
PARAMETER(PAR.Quantity_Age_Day_21_USR);
PARAMETER(PAR.USR_Day_1);
PARAMETER(PAR.USR_Day_2);
PARAMETER(PAR.USR_Day_3);
PARAMETER(PAR.USR_Day_4);
PARAMETER(PAR.USR_Day_5);
PARAMETER(PAR.USR_Day_6);
PARAMETER(PAR.USR_Day_7);
PARAMETER(PAR.USR_Day_8);
PARAMETER(PAR.USR_Day_9);
PARAMETER(PAR.USR_Day_10);
PARAMETER(PAR.USR_Day_11);
PARAMETER(PAR.USR_Day_12);
PARAMETER(PAR.USR_Day_13);
PARAMETER(PAR.USR_Day_14);
PARAMETER(PAR.USR_Day_15);
PARAMETER(PAR.USR_Day_16);
PARAMETER(PAR.USR_Day_17);
PARAMETER(PAR.USR_Day_18);
PARAMETER(PAR.USR_Day_19);
PARAMETER(PAR.USR_Day_20);
PARAMETER(PAR.USR_Day_21);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 // LCL.Production Date USR = CND.Not Entered
 LCL.Production_Date_USR = *ZERO;

 // LCL.Quantity Age Day 1   USR = CON.*ZERO
 LCL.Quantity_Age_Day_1_USR = *ZERO;

 // LCL.Quantity Age Day 2   USR = CON.*ZERO
 LCL.Quantity_Age_Day_2_USR = *ZERO;

 // LCL.Quantity Age Day 3   USR = CON.*ZERO
 LCL.Quantity_Age_Day_3_USR = *ZERO;

 // LCL.Quantity Age Day 4   USR = CON.*ZERO
 LCL.Quantity_Age_Day_4_USR = *ZERO;

 // LCL.Quantity Age Day 5   USR = CON.*ZERO
 LCL.Quantity_Age_Day_5_USR = *ZERO;

 // LCL.Quantity Age Day 6   USR = CON.*ZERO
 LCL.Quantity_Age_Day_6_USR = *ZERO;

 // LCL.Quantity Age Day 7   USR = CON.*ZERO
 LCL.Quantity_Age_Day_7_USR = *ZERO;

 // LCL.Quantity Age Day 8   USR = CON.*ZERO
 LCL.Quantity_Age_Day_8_USR = *ZERO;

 // LCL.Quantity Age Day 9   USR = CON.*ZERO
 LCL.Quantity_Age_Day_9_USR = *ZERO;

 // LCL.Quantity Age Day 10  USR = CON.*ZERO
 LCL.Quantity_Age_Day_10_USR = *ZERO;

 // LCL.Quantity Age Day 11  USR = CON.*ZERO
 LCL.Quantity_Age_Day_11_USR = *ZERO;

 // LCL.Quantity Age Day 12  USR = CON.*ZERO
 LCL.Quantity_Age_Day_12_USR = *ZERO;

 // LCL.Quantity Age Day 13  USR = CON.*ZERO
 LCL.Quantity_Age_Day_13_USR = *ZERO;

 // LCL.Quantity Age Day 14  USR = CON.*ZERO
 LCL.Quantity_Age_Day_14_USR = *ZERO;

 // LCL.Quantity Age Day 15  USR = CON.*ZERO
 LCL.Quantity_Age_Day_15_USR = *ZERO;

 // LCL.Quantity Age Day 16  USR = CON.*ZERO
 LCL.Quantity_Age_Day_16_USR = *ZERO;

 // LCL.Quantity Age Day 17  USR = CON.*ZERO
 LCL.Quantity_Age_Day_17_USR = *ZERO;

 // LCL.Quantity Age Day 18  USR = CON.*ZERO
 LCL.Quantity_Age_Day_18_USR = *ZERO;

 // LCL.Quantity Age Day 19  USR = CON.*ZERO
 LCL.Quantity_Age_Day_19_USR = *ZERO;

 // LCL.Quantity Age Day 20  USR = CON.*ZERO
 LCL.Quantity_Age_Day_20_USR = *ZERO;

 // LCL.Quantity Age Day 21  USR = CON.*ZERO
 LCL.Quantity_Age_Day_21_USR = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Item Type Code     RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1704065;
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Item_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 //?Check record selection for include todays transactions
 CASE;

 // IF PAR.Include Todays Trans is no
 IF PAR.Include_Todays_Trans = 'N';

 // AND JOB.*Job date EQ DB1.Production Date
 AND JOB.*Job_date = DB1.Production_Date;

 // LCL.Record Selected       USR = CND.no
 LCL.Record_Selected_USR = 'N';

 //?Check record selection for include todays transactions
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Record Selected       USR = CND.yes
 LCL.Record_Selected_USR = 'Y';

 ENDIF;

 //?If record selected is yes then process
 CASE;

 // IF LCL.Record Selected       USR is yes
 IF LCL.Record_Selected_USR = 'Y';

 // AND LCL.Item Type Code is Finished Goods
 AND LCL.Item_Type_Code = 'FG';

 //?Put Qtys in correct bucket
 CASE;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 1
 IF DB1.Label_Date <= PAR.USR_Day_1;

 // AND DB1.Label Date GT PAR.USR Day 2
 AND DB1.Label_Date > PAR.USR_Day_2;

 // PAR.Quantity Age Day 1   USR = PAR.Quantity Age Day 1   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_1_USR = PAR.Quantity_Age_Day_1_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 2
 IF DB1.Label_Date <= PAR.USR_Day_2;

 // AND DB1.Label Date GT PAR.USR Day 3
 AND DB1.Label_Date > PAR.USR_Day_3;

 // PAR.Quantity Age Day 2   USR = PAR.Quantity Age Day 2   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_2_USR = PAR.Quantity_Age_Day_2_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 3
 IF DB1.Label_Date <= PAR.USR_Day_3;

 // AND DB1.Label Date GT PAR.USR Day 4
 AND DB1.Label_Date > PAR.USR_Day_4;

 // PAR.Quantity Age Day 3   USR = PAR.Quantity Age Day 3   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_3_USR = PAR.Quantity_Age_Day_3_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 4
 IF DB1.Label_Date <= PAR.USR_Day_4;

 // AND DB1.Label Date GT PAR.USR Day 5
 AND DB1.Label_Date > PAR.USR_Day_5;

 // PAR.Quantity Age Day 4   USR = PAR.Quantity Age Day 4   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_4_USR = PAR.Quantity_Age_Day_4_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 5
 IF DB1.Label_Date <= PAR.USR_Day_5;

 // AND DB1.Label Date GT PAR.USR Day 6
 AND DB1.Label_Date > PAR.USR_Day_6;

 // PAR.Quantity Age Day 5   USR = PAR.Quantity Age Day 5   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_5_USR = PAR.Quantity_Age_Day_5_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 6
 IF DB1.Label_Date <= PAR.USR_Day_6;

 // AND DB1.Label Date GT PAR.USR Day 7
 AND DB1.Label_Date > PAR.USR_Day_7;

 // PAR.Quantity Age Day 6   USR = PAR.Quantity Age Day 6   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_6_USR = PAR.Quantity_Age_Day_6_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 7
 IF DB1.Label_Date <= PAR.USR_Day_7;

 // AND DB1.Label Date GT PAR.USR Day 8
 AND DB1.Label_Date > PAR.USR_Day_8;

 // PAR.Quantity Age Day 7   USR = PAR.Quantity Age Day 7   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_7_USR = PAR.Quantity_Age_Day_7_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 8
 IF DB1.Label_Date <= PAR.USR_Day_8;

 // AND DB1.Label Date GT PAR.USR Day 9
 AND DB1.Label_Date > PAR.USR_Day_9;

 // PAR.Quantity Age Day 8   USR = PAR.Quantity Age Day 8   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_8_USR = PAR.Quantity_Age_Day_8_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 9
 IF DB1.Label_Date <= PAR.USR_Day_9;

 // AND DB1.Label Date GT PAR.USR Day 10
 AND DB1.Label_Date > PAR.USR_Day_10;

 // PAR.Quantity Age Day 9   USR = PAR.Quantity Age Day 9   USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_9_USR = PAR.Quantity_Age_Day_9_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 10
 IF DB1.Label_Date <= PAR.USR_Day_10;

 // AND DB1.Label Date GT PAR.USR Day 11
 AND DB1.Label_Date > PAR.USR_Day_11;

 // PAR.Quantity Age Day 10  USR = PAR.Quantity Age Day 10  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_10_USR = PAR.Quantity_Age_Day_10_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 11
 IF DB1.Label_Date <= PAR.USR_Day_11;

 // AND DB1.Label Date GT PAR.USR Day 12
 AND DB1.Label_Date > PAR.USR_Day_12;

 // PAR.Quantity Age Day 11  USR = PAR.Quantity Age Day 11  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_11_USR = PAR.Quantity_Age_Day_11_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 12
 IF DB1.Label_Date <= PAR.USR_Day_12;

 // AND DB1.Label Date GT PAR.USR Day 13
 AND DB1.Label_Date > PAR.USR_Day_13;

 // PAR.Quantity Age Day 12  USR = PAR.Quantity Age Day 12  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_12_USR = PAR.Quantity_Age_Day_12_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 13
 IF DB1.Label_Date <= PAR.USR_Day_13;

 // AND DB1.Label Date GT PAR.USR Day 14
 AND DB1.Label_Date > PAR.USR_Day_14;

 // PAR.Quantity Age Day 13  USR = PAR.Quantity Age Day 13  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_13_USR = PAR.Quantity_Age_Day_13_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 14
 IF DB1.Label_Date <= PAR.USR_Day_14;

 // AND DB1.Label Date GT PAR.USR Day 15
 AND DB1.Label_Date > PAR.USR_Day_15;

 // PAR.Quantity Age Day 14  USR = PAR.Quantity Age Day 14  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_14_USR = PAR.Quantity_Age_Day_14_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 15
 IF DB1.Label_Date <= PAR.USR_Day_15;

 // AND DB1.Label Date GT PAR.USR Day 16
 AND DB1.Label_Date > PAR.USR_Day_16;

 // PAR.Quantity Age Day 15  USR = PAR.Quantity Age Day 15  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_15_USR = PAR.Quantity_Age_Day_15_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 16
 IF DB1.Label_Date <= PAR.USR_Day_16;

 // AND DB1.Label Date GT PAR.USR Day 17
 AND DB1.Label_Date > PAR.USR_Day_17;

 // PAR.Quantity Age Day 16  USR = PAR.Quantity Age Day 16  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_16_USR = PAR.Quantity_Age_Day_16_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 17
 IF DB1.Label_Date <= PAR.USR_Day_17;

 // AND DB1.Label Date GT PAR.USR Day 18
 AND DB1.Label_Date > PAR.USR_Day_18;

 // PAR.Quantity Age Day 17  USR = PAR.Quantity Age Day 17  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_17_USR = PAR.Quantity_Age_Day_17_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 18
 IF DB1.Label_Date <= PAR.USR_Day_18;

 // AND DB1.Label Date GT PAR.USR Day 19
 AND DB1.Label_Date > PAR.USR_Day_19;

 // PAR.Quantity Age Day 18  USR = PAR.Quantity Age Day 18  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_18_USR = PAR.Quantity_Age_Day_18_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 19
 IF DB1.Label_Date <= PAR.USR_Day_19;

 // AND DB1.Label Date GT PAR.USR Day 20
 AND DB1.Label_Date > PAR.USR_Day_20;

 // PAR.Quantity Age Day 19  USR = PAR.Quantity Age Day 19  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_19_USR = PAR.Quantity_Age_Day_19_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 20
 IF DB1.Label_Date <= PAR.USR_Day_20;

 // AND DB1.Label Date GT PAR.USR Day 21
 AND DB1.Label_Date > PAR.USR_Day_21;

 // PAR.Quantity Age Day 20  USR = PAR.Quantity Age Day 20  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_20_USR = PAR.Quantity_Age_Day_20_USR + DB1.Quantity_on_Hand_UOM1;

 //?Put Qtys in correct bucket
 // IF DB1.Label Date LE PAR.USR Day 21
 IF DB1.Label_Date <= PAR.USR_Day_21;

 // PAR.Quantity Age Day 21  USR = PAR.Quantity Age Day 21  USR + DB1.Quantity on Hand - U/M1
 PAR.Quantity_Age_Day_21_USR = PAR.Quantity_Age_Day_21_USR + DB1.Quantity_on_Hand_UOM1;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 EXECUTE FUNCTION(RTV Read all by item) TYPE(RTVOBJ) FILE(POB5CPP)               AC2106077;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(VAL Item Bal Dtl Exist RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1477900;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.OD_Production_Date);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

  }

  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  EXECUTE FUNCTION(RTV Build Non-Alloc2  RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC2106139;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.OD_Production_Date);
  PARAMETER(DB1.OD_Quantity_Inv_Sched);
  PARAMETER('N');
  {
   //?USER: Initialize routine

   // LCL.Day 1 Sales USR = CON.*ZERO
   LCL.Day_1_Sales_USR = *ZERO;

   // LCL.Include Todays Trans = CND.no
   LCL.Include_Todays_Trans = 'N';

   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   // LCL.OD Production Date = DB1.OD Production Date
   LCL.OD_Production_Date = DB1.OD_Production_Date;

   //?If company is selected, rtv co/item else rtv item
   CASE;

   // IF DB1.Company Number is not equal to zero
   IF DB1.Company_Number <> *ZERO;

   EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Item_Code);
   PARAMETER(LCL.Item_Description);
   PARAMETER(WRK.Description_Line_Two);
   PARAMETER(WRK.UOM_Primary);
   PARAMETER(WRK.UOM_Second);
   PARAMETER(WRK.UOM_Third);
   {
    //?USER: Processing if Data record not found

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?If company is selected, rtv co/item else rtv item
   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
   PARAMETER(DB1.Item_Code);
   PARAMETER(LCL.Item_Description);
   PARAMETER(WRK.Description_Line_Two);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

   EXECUTE FUNCTION(RTV Order Status       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1131568;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(LCL.Header_Status);
   PARAMETER(LCL.Header_Status_Last);
   {
    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   EXECUTE FUNCTION(Rtv Item Type Code     RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1704065;
   PARAMETER(DB1.Item_Code);
   PARAMETER(LCL.Item_Type_Code);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Normal
    PGM.*Return_code = *BLANK;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

    // PGM.*Return code = CND.*Normal
    PGM.*Return_code = *BLANK;

   }

   // LCL.Record Selected       USR = CND.yes
   LCL.Record_Selected_USR = 'Y';

   //?Check record selection for include todays transactions
   CASE;

   // IF LCL.Include Todays Trans is no
   IF LCL.Include_Todays_Trans = 'N';

   // AND DB1.OD Production Date EQ JOB.*Job date
   AND DB1.OD_Production_Date = JOB.*Job_date;

   // LCL.Record Selected       USR = CND.no
   LCL.Record_Selected_USR = 'N';

   //?Check record selection for include todays transactions
   // IF *OTHERWISE
   IF *OTHERWISE;

   // LCL.Record Selected       USR = CND.yes
   LCL.Record_Selected_USR = 'Y';

   ENDIF;

   CASE;

   // IF LCL.Header Status is Avail/Entered/Held
   IF LCL.Header_Status = 'A'/'E'/'H';

   // AND LCL.Item Type Code is Finished Goods
   AND LCL.Item_Type_Code = 'FG';

   // AND LCL.Record Selected       USR is yes
   AND LCL.Record_Selected_USR = 'Y';

   // LCL.Day 1 Sales USR = LCL.Day 1 Sales USR + DB1.OD Quantity Inv Sched
   LCL.Day_1_Sales_USR = LCL.Day_1_Sales_USR + DB1.OD_Quantity_Inv_Sched;

   ENDIF;

   //?USER: Exit processing

   EXECUTE FUNCTION(Build History file    IF) TYPE(EXCINTFUN)                      AC2105562;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Warehouse_Code);
   PARAMETER(DB1.Item_Code);
   PARAMETER(JOB.*Job_date);
   PARAMETER(LCL.OD_Production_Date);
   PARAMETER(LCL.Item_Description);
   PARAMETER(LCL.Day_1_Sales_USR);
   PARAMETER(WRK.UOM_Primary);
   {
    //?Execute internal function

    CASE;

    // IF PAR.Age Quantity is Greater than zero
    IF PAR.Age_Quantity > *ZERO;

    // OR PAR.Age Quantity is Less than zero
    OR PAR.Age_Quantity < *ZERO;

    EXECUTE FUNCTION(RTV Build History     RT) TYPE(RTVOBJ) FILE(PBBZREP)           AC2104950;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Archive_Date);
    PARAMETER(PAR.Production_Date);
    PARAMETER(PAR.Item_Description);
    PARAMETER(PAR.Age_Quantity);
    PARAMETER(PAR.UOM_Primary);
    {
     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(Create Item Age Invent Hi) TYPE(CRTOBJ) FILE(PBBZREP)          AC2104580;
     PARAMETER(PAR.Company_Number);
     PARAMETER(PAR.Warehouse_Code);
     PARAMETER(PAR.Item_Code);
     PARAMETER(PAR.Archive_Date);
     PARAMETER(PAR.Production_Date);
     PARAMETER(PAR.Item_Description);
     PARAMETER(PAR.Age_Quantity);
     PARAMETER(PAR.UOM_Primary);
     PARAMETER('A');
     PARAMETER(JOB.*Job_date);
     PARAMETER(JOB.*Job_time);
     PARAMETER(JOB.*USER);
     PARAMETER(JOB.*PROGRAM);
     PARAMETER(*ZERO);
     PARAMETER(*ZERO);
     PARAMETER(*BLANK);
     PARAMETER(*BLANK);
     //?USER: Process Data record

     QUIT;

    }

    ENDIF;

   }

  }

  ENDIF;

 }

}


