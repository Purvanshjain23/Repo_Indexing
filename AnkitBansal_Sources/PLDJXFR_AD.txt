// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLDJXFR
// ?Date: 14.08.2025 Time: 02:53:50
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?11/05/2020 ISE H16853 Recompiled due to change in Buy Order Number
// WRK.Month Alpha USR = SUBSTRING(PAR.Date From Format USR,CON.1,CON.2)
WRK.Month_Alpha_USR = SUBSTRING(PAR.Date_From_Format_USR:1:2);

// WRK.Day Alpha USR = SUBSTRING(PAR.Date From Format USR,CON.4,CON.2)
WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_From_Format_USR:4:2);

// WRK.Year 2 USR = SUBSTRING(PAR.Date From Format USR,CON.7,CON.2)
WRK.Year_2_USR = SUBSTRING(PAR.Date_From_Format_USR:7:2);

// WRK.Cen + Yr USR = CONCAT(CON.1,WRK.Year 2 USR,CON.*ZERO)
WRK.Cen_+_Yr_USR = '1' + WRK.Year_2_USR (*ZERO);

// WRK.Cen + Yr + Mo USR = CONCAT(WRK.Cen + Yr USR,WRK.Month Alpha USR,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_USR = WRK.Cen_+_Yr_USR + WRK.Month_Alpha_USR (*ZERO);

// WRK.Cen + Yr + Mo + Dy USR = CONCAT(WRK.Cen + Yr + Mo USR,WRK.Day Alpha USR,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_+_Dy_USR = WRK.Cen_+_Yr_+_Mo_USR + WRK.Day_Alpha_USR (*ZERO);

// PAR.Date From USR = CVTVAR(WRK.Cen + Yr + Mo + Dy USR)
PAR.Date_From_USR = CVTVAR(WRK.Cen_+_Yr_+_Mo_+_Dy_USR);

// WRK.Month Alpha USR = SUBSTRING(PAR.Date To Format USR,CON.1,CON.2)
WRK.Month_Alpha_USR = SUBSTRING(PAR.Date_To_Format_USR:1:2);

// WRK.Day Alpha USR = SUBSTRING(PAR.Date To Format USR,CON.4,CON.2)
WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_To_Format_USR:4:2);

// WRK.Year 2 USR = SUBSTRING(PAR.Date To Format USR,CON.7,CON.2)
WRK.Year_2_USR = SUBSTRING(PAR.Date_To_Format_USR:7:2);

// WRK.Cen + Yr USR = CONCAT(CON.1,WRK.Year 2 USR,CON.*ZERO)
WRK.Cen_+_Yr_USR = '1' + WRK.Year_2_USR (*ZERO);

// WRK.Cen + Yr + Mo USR = CONCAT(WRK.Cen + Yr USR,WRK.Month Alpha USR,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_USR = WRK.Cen_+_Yr_USR + WRK.Month_Alpha_USR (*ZERO);

// WRK.Cen + Yr + Mo + Dy USR = CONCAT(WRK.Cen + Yr + Mo USR,WRK.Day Alpha USR,CON.*ZERO)
WRK.Cen_+_Yr_+_Mo_+_Dy_USR = WRK.Cen_+_Yr_+_Mo_USR + WRK.Day_Alpha_USR (*ZERO);

// PAR.Date To   USR = CVTVAR(WRK.Cen + Yr + Mo + Dy USR)
PAR.Date_To_USR = CVTVAR(WRK.Cen_+_Yr_+_Mo_+_Dy_USR);

// Call program Rtv Co for User       XF.
CALL PROGRAM(Rtv Co for User       XF) ('PLF8XFR');
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');

EXECUTE FUNCTION(Rtv Clear fields      RT) TYPE(RTVOBJ) FILE(PLAMCPP)           AB1254648;
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Change W002 Broken Back W) TYPE(CHGOBJ) FILE(PLAMCPP)          AB1254607;
 PARAMETER(DB1.BB_Min_Wgt);
 PARAMETER(DB1.BB_Max_Wgt);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
}


EXECUTE FUNCTION(Rtv CD for BrokenBck  RT) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1254623;
PARAMETER(WRK.CC_Company_Number);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_To_USR);
{
 //?USER: Process Data record

 //?Kill date
 CASE;

 // IF DB1.TH Kill Date GE PAR.Date From USR
 IF DB1.TH_Kill_Date >= PAR.Date_From_USR;

 // AND DB1.TH Kill Date LE PAR.Date To   USR
 AND DB1.TH_Kill_Date <= PAR.Date_To_USR;

 EXECUTE FUNCTION(Rtv Chg Count         RT) TYPE(RTVOBJ) FILE(PLAMCPP)           AB1254630;
 PARAMETER(DB1.CD_Carcass_Hot_Weight);
 PARAMETER(DB1.CD_Broken_Back_Sts);
 PARAMETER(DB1.CD_Shift);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.CD Shift is Shift 1
  IF PAR.CD_Shift = '1';

  // LCL.BB Head Killd Shift 1 = DB1.BB Head Killd Shift 1 + CON.1
  LCL.BB_Head_Killd_Shift_1 = DB1.BB_Head_Killd_Shift_1 + 1;

  // LCL.BB Head Count Shift 1 = DB1.BB Head Count Shift 1
  LCL.BB_Head_Count_Shift_1 = DB1.BB_Head_Count_Shift_1;

  CASE;

  // IF PAR.CD Broken Back Sts is Yes
  IF PAR.CD_Broken_Back_Sts = '1';

  // LCL.BB Head Count Shift 1 = DB1.BB Head Count Shift 1 + CON.1
  LCL.BB_Head_Count_Shift_1 = DB1.BB_Head_Count_Shift_1 + 1;

  ENDIF;

  EXECUTE FUNCTION(Change W002 Broken Back W) TYPE(CHGOBJ) FILE(PLAMCPP)          AB1254607;
  PARAMETER(DB1.BB_Min_Wgt);
  PARAMETER(DB1.BB_Max_Wgt);
  PARAMETER(LCL.BB_Head_Killd_Shift_1);
  PARAMETER(LCL.BB_Head_Count_Shift_1);
  PARAMETER(DB1.BB_Pct_Broken_Shift_1);
  PARAMETER(DB1.BB_Head_Killd_Shift_2);
  PARAMETER(DB1.BB_Head_Count_Shift_2);
  PARAMETER(DB1.BB_Pct_Broken_Shift_2);
  QUIT;

  // IF PAR.CD Shift is Shift 2
  IF PAR.CD_Shift = '2';

  // LCL.BB Head Killd Shift 2 = DB1.BB Head Killd Shift 2 + CON.1
  LCL.BB_Head_Killd_Shift_2 = DB1.BB_Head_Killd_Shift_2 + 1;

  // LCL.BB Head Count Shift 2 = DB1.BB Head Count Shift 2
  LCL.BB_Head_Count_Shift_2 = DB1.BB_Head_Count_Shift_2;

  CASE;

  // IF PAR.CD Broken Back Sts is Yes
  IF PAR.CD_Broken_Back_Sts = '1';

  // LCL.BB Head Count Shift 2 = DB1.BB Head Count Shift 2 + CON.1
  LCL.BB_Head_Count_Shift_2 = DB1.BB_Head_Count_Shift_2 + 1;

  ENDIF;

  EXECUTE FUNCTION(Change W002 Broken Back W) TYPE(CHGOBJ) FILE(PLAMCPP)          AB1254607;
  PARAMETER(DB1.BB_Min_Wgt);
  PARAMETER(DB1.BB_Max_Wgt);
  PARAMETER(DB1.BB_Head_Killd_Shift_1);
  PARAMETER(DB1.BB_Head_Count_Shift_1);
  PARAMETER(DB1.BB_Pct_Broken_Shift_1);
  PARAMETER(LCL.BB_Head_Killd_Shift_2);
  PARAMETER(LCL.BB_Head_Count_Shift_2);
  PARAMETER(DB1.BB_Pct_Broken_Shift_2);
  QUIT;

  ENDIF;

 }

 ENDIF;

}


EXECUTE FUNCTION(Rtv Clc Pcts          RT) TYPE(RTVOBJ) FILE(PLAMCPP)           AB1254631;
{
 //?USER: Process Data record

 CASE;

 // IF DB1.BB Head Killd Shift 1 is GT Zero
 IF DB1.BB_Head_Killd_Shift_1 > *ZERO;

 // LCL.BB Pct Broken Shift 1 =       *
 LCL.BB_Pct_Broken_Shift_1 = ( DB1.BB_Head_Count_Shift_1 / DB1.BB_Head_Killd_Shift_1 )
 * 100;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.BB Pct Broken Shift 1 = CON.*ZERO
 LCL.BB_Pct_Broken_Shift_1 = *ZERO;

 ENDIF;

 CASE;

 // IF DB1.BB Head Killd Shift 2 is GT Zero
 IF DB1.BB_Head_Killd_Shift_2 > *ZERO;

 // LCL.BB Pct Broken Shift 2 =       *
 LCL.BB_Pct_Broken_Shift_2 = ( DB1.BB_Head_Count_Shift_2 / DB1.BB_Head_Killd_Shift_2 )
 * 100;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.BB Pct Broken Shift 2 = CON.*ZERO
 LCL.BB_Pct_Broken_Shift_2 = *ZERO;

 ENDIF;

 EXECUTE FUNCTION(Change W002 Broken Back W) TYPE(CHGOBJ) FILE(PLAMCPP)          AB1254607;
 PARAMETER(DB1.BB_Min_Wgt);
 PARAMETER(DB1.BB_Max_Wgt);
 PARAMETER(DB1.BB_Head_Killd_Shift_1);
 PARAMETER(DB1.BB_Head_Count_Shift_1);
 PARAMETER(LCL.BB_Pct_Broken_Shift_1);
 PARAMETER(DB1.BB_Head_Killd_Shift_2);
 PARAMETER(DB1.BB_Head_Count_Shift_2);
 PARAMETER(LCL.BB_Pct_Broken_Shift_2);
}


