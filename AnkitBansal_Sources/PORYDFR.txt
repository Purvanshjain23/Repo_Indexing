// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PORYDFR
// ?Date: 14.08.2025 Time: 03:38:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
//?***** Change Log and Comments
DO;

//?CST/ITM Santosh 04/14/25 - Recompilation due to DDS to DDL conversion of
//?   "PDKLREP - Company Item Avail Group".
//?** 06/07/17 DN  T10731 - Inventory Visibility Enhancement-Intake Req 29
//?- Changed access path OPBGWKMC to SEL Order Type - Sales of OR/TR.
//?- Added column 'Qty/Wgt Inv' on screen & allow F13 Toggle functionality.
//?  Totals are derived from the Order Detail Schedule file.
//?- Changed column 'Qty/Wgt Sched' on screen to get totals from the OD
//?  Schedule file instead.
//?- Added Order Type - Sales to screen.
//?- Added 'F21=Export to Excel' to 'RTV WW Prod Itm Hld cmd 2'
//?  message content & allow to call SEQUEL to export to Excel.
//?**
//?05/23/16 RMC E4119 remove live with tpm check
//?**
//?** 04/03/2015 LJB E004019
//?**   Don't allow Load viewing or selection if Live w/TPM = Yes
//?** E2625 08/05/13 RMC Chg sched ship dt to Sched Load dt
//?** C001956 02/23/2012 LJB
//?**   If there are upload errors still pending after reallocate,
//?**   clear them
//?** E1773  10/01/11 RMC Show Sched override sts alieu PickSts
//?** W288    01/04/10 LJB     For Seaboard Only:
//?**  Add Access Limited flag for Edit Load/Orders to control test
//?**  of Deadline Depart time during Whse Control restricted times
//?** E00438  06/19/09 LJB Pass order number to Edit Load/Orders
//?** FP1054  10/22/08 RMC Changes as requested by Sales
//?**          6/15/09 exclude User Released orders from display
//?**          6/16/09 exclude just credit hold orders from display
//?** DLY029R 05/25/07 JRB Chg hard coded Co Num to RCD.Company Number opt 9
//?E3796 JJH 02/17/15 - Remove Option 19=WW Sched Ords-Sls
//? This option is no longer being used and it was decied to remove
//? it from Production.
//?11/20/2019 JBB E15817 - [ME] Req and Scheduled ship date on 4-12
//?                        Change the access path from:
//?                        Rte/Co/SSD/Ord/Itm to access path:
//?03/13/2023 Eric L 99656 Display option 77=Update Consumed Item
//?                  Call PUYGPVR Update Consumed Item Code
//?                  to confirm the update of the Consumed Item Code
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);

// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

// PGM.*Scan limit = CON.99999
PGM.*Scan_limit = 99999;

//?toggle quantity/weights -----> no = display quantities
// WRK.Status Flag 4  Y/N = CND.no
WRK.Status_Flag_4_Y_N = 'N';

//?** Default Access Limited flag for the Edit Load/Orders pgm W288
// PAR.Access Limited Sts USR = CND.yes
PAR.Access_Limited_Sts_USR = 'Y';

//?05/23/16 RMC E4119 remove live with tpm check
// Retrieve message - 'F3=Exit   F5=Refresh   F10=All/Base   F13=Toggle Qty/Wgt   F16=WW PA   F21=Ex
LCL.CMDKEY_Line_1_130_Char = RTVMSG(USR4793);

// Execute function Screen 132 Wide 2 CMDLN.
EXECUTE FUNCTION(Screen 132 Wide 2 CMDLN) TYPE(EXCUSRSRC) ('PNHBUFR');
PARAMETER(LCL.CMDKEY_Line_1_130_Char);
PARAMETER(*BLANK);

//?USER: Initialize subfile control

//?first time
CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// CTL.Sales Route Code = PAR.Salesperson Code
CTL.Sales_Route_Code = PAR.Salesperson_Code;

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

// LCL.All Products (Y/N) = CND.Yes
LCL.All_Products_Y_N = 'Y';

// CTL.Availability Group Code = CND.ALL
CTL.Availability_Group_Code = 'ALL';

// LCL.Availability Group Code = CTL.Availability Group Code
LCL.Availability_Group_Code = CTL.Availability_Group_Code;

//?all prod
CASE;

// IF LCL.All Products (Y/N) is No
IF LCL.All_Products_Y_N = 'N';

// CTL.Text USR = CON.BASE ONLY
CTL.Text_USR = 'BASE ONLY';

//?all prod
// IF LCL.All Products (Y/N) is Yes
IF LCL.All_Products_Y_N = 'Y';

// CTL.Text USR = CON.*ALL
CTL.Text_USR = *ALL;

ENDIF;

// CTL.Production Hold = CND.Yes
CTL.Production_Hold = 'Y';

// LCL.Production Hold = CTL.Production Hold
LCL.Production_Hold = CTL.Production_Hold;

ENDIF;

//?select Availability Group Code
CASE;

// IF CTL.Availability Group Code is Blank
IF CTL.Availability_Group_Code = *BLANK;

// CTL.Availability Group Code = CND.ALL
CTL.Availability_Group_Code = 'ALL';

ENDIF;

EXECUTE FUNCTION(RTV Group Description  RT) TYPE(RTVOBJ) FILE(PDKKREP)          AC1380777;
PARAMETER(CTL.Availability_Group_Code);
PARAMETER(CTL.Availability_Group_Desc);

//?Init Toggle Text field
CASE;

// IF CTL.Toggle Text 1         USR EQ WRK.BLANK 1               USR
IF CTL.Toggle_Text_1_USR = WRK.BLANK_1_USR;

// CTL.Toggle Text 1         USR = CON.Qty
CTL.Toggle_Text_1_USR = 'Qty';

// CTL.Toggle Text 2         USR = CON.Qty
CTL.Toggle_Text_2_USR = 'Qty';

// CTL.Toggle Text 3         USR = CON.Qty
CTL.Toggle_Text_3_USR = 'Qty';

//?06/07/17 DN T10731-Added 'Qty/Wgt Inv' Column.
// CTL.Toggle Text 4         USR = CON.Qty
CTL.Toggle_Text_4_USR = 'Qty';

ENDIF;

//?F13=Toggle quantity/weight
CASE;

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

CASE;

// IF WRK.Status Flag 4  Y/N is yes
IF WRK.Status_Flag_4_Y_N = 'Y';

//?no  = display quantities
// WRK.Status Flag 4  Y/N = CND.no
WRK.Status_Flag_4_Y_N = 'N';

// CTL.Toggle Text 1         USR = CON.Qty
CTL.Toggle_Text_1_USR = 'Qty';

// CTL.Toggle Text 2         USR = CON.Qty
CTL.Toggle_Text_2_USR = 'Qty';

// CTL.Toggle Text 3         USR = CON.Qty
CTL.Toggle_Text_3_USR = 'Qty';

//?06/07/17 DN T10731-Added 'Qty/Wgt Inv' Column.
// CTL.Toggle Text 4         USR = CON.Qty
CTL.Toggle_Text_4_USR = 'Qty';

// IF *OTHERWISE
IF *OTHERWISE;

//?yes = display weights
// WRK.Status Flag 4  Y/N = CND.yes
WRK.Status_Flag_4_Y_N = 'Y';

// CTL.Toggle Text 1         USR = CON.Wgt
CTL.Toggle_Text_1_USR = 'Wgt';

// CTL.Toggle Text 2         USR = CON.Wgt
CTL.Toggle_Text_2_USR = 'Wgt';

// CTL.Toggle Text 3         USR = CON.Wgt
CTL.Toggle_Text_3_USR = 'Wgt';

//?06/07/17 DN T10731-Added 'Qty/Wgt Inv' Column.
// CTL.Toggle Text 4         USR = CON.Wgt
CTL.Toggle_Text_4_USR = 'Wgt';

ENDIF;

ENDIF;

//?06/09/17 DN T10731-Initialize Display Asterisk Line Flag.
// PAR.Display Asterisk Line USR = CND.No
PAR.Display_Asterisk_Line_USR = 'N';

//?USER: Initialize subfile record from DBF record

//?SEL:  Regular Orders
CASE;

// IF RCD.Order Type - Sales is Regular Order
IF RCD.Order_Type_Sales = 'OR';

//?SEL:  Regular Orders
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.Order Type - Sales is Transfer Order
IF RCD.Order_Type_Sales = 'TR';

// AND RCD.OD Production Plan Sts is No
AND RCD.OD_Production_Plan_Sts = 'N';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Sel:  load id
CASE;

// IF CTL.Load ID is Blank
IF CTL.Load_ID = *ZERO;

// OR RCD.Load ID EQ CTL.Load ID
OR RCD.Load_ID = CTL.Load_ID;

//?Sel:  load id
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Prod Hold=Y
CASE;

// IF CTL.Production Hold is Yes
IF CTL.Production_Hold = 'Y';

//?Sel:  Qty ord <> qty sched
CASE;

// IF RCD.Quantity Ordered NE RCD.Quantity Scheduled
IF RCD.Quantity_Ordered <> RCD.Quantity_Scheduled;

//?Sel:  Qty ord <> qty sched
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Sel:  prod hold                            E1773 uncomment
CASE;

// IF CTL.Production Hold EQ WRK.Blank for 3          USR
IF CTL.Production_Hold = WRK.Blank_for_3_USR;

// OR RCD.Production Hold EQ CTL.Production Hold
OR RCD.Production_Hold = CTL.Production_Hold;

//?Sel:  prod hold                            E1773 uncomment
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Sel:  sched override sts                   E1773 new
CASE;

// IF CTL.OD Schedule Override Sts EQ WRK.Blank for 3          USR
IF CTL.OD_Schedule_Override_Sts = WRK.Blank_for_3_USR;

// OR RCD.OD Schedule Override Sts EQ CTL.OD Schedule Override Sts
OR RCD.OD_Schedule_Override_Sts = CTL.OD_Schedule_Override_Sts;

//?Sel:  sched override sts                   E1773 new
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL:  Warehouse
CASE;

// IF CTL.Warehouse Code is Warehouse Code not Blank
IF CTL.Warehouse_Code <> *BLANK;

CASE;

// IF RCD.Warehouse Code NE CTL.Warehouse Code
IF RCD.Warehouse_Code <> CTL.Warehouse_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL:  Requested Ship Date
CASE;

// IF CTL.Requested Ship Date is entered
IF CTL.Requested_Ship_Date <> *ZERO;

CASE;

// IF RCD.Requested Ship Date GT CTL.Requested Ship Date
IF RCD.Requested_Ship_Date > CTL.Requested_Ship_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL:  All/Base
CASE;

// IF LCL.All Products (Y/N) is No
IF LCL.All_Products_Y_N = 'N';

CASE;

// IF LCL.Consumed Item Code EQ RCD.Consumed Item Code
IF LCL.Consumed_Item_Code = RCD.Consumed_Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF LCL.Consumed Item Code NE RCD.Consumed Item Code
IF LCL.Consumed_Item_Code <> RCD.Consumed_Item_Code;

// LCL.Consumed Item Code = RCD.Consumed Item Code
LCL.Consumed_Item_Code = RCD.Consumed_Item_Code;

ENDIF;

ENDIF;

//?If Record Selected = Y
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(Val Existance         RT) TYPE(RTVOBJ) FILE(PDKLREP)           AC1390296;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(CTL.Availability_Group_Code);
PARAMETER(LCL.Record_Found_USR);

//?Avail Group match
CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

//?Avail Group match
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?If Record Selected is still = Y
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

CASE;

// IF RCD.Deadline Depart Date LH is not entered
IF RCD.Deadline_Depart_Date_LH = *ZERO;

EXECUTE FUNCTION(RTV LoadSts/Carrier    RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1648402;
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Load_Status);
PARAMETER(NLL.Carrier_Code);
PARAMETER(NLL.Export_Status);
PARAMETER(NLL.Load_Acceptance_Flag);
PARAMETER(LCL.Deadline_Departure_Date);
PARAMETER(LCL.Deadline_Departure_Time);

// RCD.Deadline Depart Date LH = LCL.Deadline Departure Date
RCD.Deadline_Depart_Date_LH = LCL.Deadline_Departure_Date;

// RCD.Deadline Depart Time LH = LCL.Deadline Departure Time
RCD.Deadline_Depart_Time_LH = LCL.Deadline_Departure_Time;

ENDIF;

// RCD.Quantity Ordered 5.0 USR = RCD.Quantity Ordered
RCD.Quantity_Ordered_5_0_USR = RCD.Quantity_Ordered;

//?06/07/17 DN T10731-Commented Out Quantity Sched & Moved Below.
//?06/07/17 DN T10731-Get Qty/Wgt from OD Schedule & Set Qty Screen Totals.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Qty/Wgt Sched TOT RT) TYPE(RTVOBJ) FILE(PDKNCPP)           AC2137545;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Quantity_Inv_Schd_TOT_USR);
PARAMETER(RCD.Quantity_Sched_TOT_USR);
PARAMETER(RCD.Weight_Inv_Schd_TOT_USR);
PARAMETER(RCD.Weight_Sched_TOT_USR);

//?**Qty Sched**
// RCD.Quantity Sched 5.0 USR = RCD.Quantity Sched TOT USR
RCD.Quantity_Sched_5_0_USR = RCD.Quantity_Sched_TOT_USR;

//?**Qty Inv**
// RCD.Qty/Wgt Inv Sched USR = RCD.Quantity Inv Schd TOT USR
RCD.Qty_Wgt_Inv_Sched_USR = RCD.Quantity_Inv_Schd_TOT_USR;

ENDIF;

// RCD.Qty 5.0 USR = RCD.Quantity Ordered - RCD.Quantity Scheduled
RCD.Qty_5_0_USR = RCD.Quantity_Ordered - RCD.Quantity_Scheduled;

//?Toggle show weights instead of qty
CASE;

// IF WRK.Status Flag 4  Y/N is yes
IF WRK.Status_Flag_4_Y_N = 'Y';

// RCD.Quantity Ordered 5.0 USR = RCD.Weight Ordered
RCD.Quantity_Ordered_5_0_USR = RCD.Weight_Ordered;

//?06/07/17 DN T10731-Commented Out Weight Sched & Moved Below.
//?06/07/17 DN T10731-Set 'Wgt Sched/Inv' Totals.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?**Wgt Sched**
// RCD.Quantity Sched 5.0 USR = RCD.Weight Sched TOT USR
RCD.Quantity_Sched_5_0_USR = RCD.Weight_Sched_TOT_USR;

//?**Wgt Inv**
// RCD.Qty/Wgt Inv Sched USR = RCD.Weight Inv Schd TOT USR
RCD.Qty_Wgt_Inv_Sched_USR = RCD.Weight_Inv_Schd_TOT_USR;

ENDIF;

// RCD.Qty 5.0 USR = RCD.Weight Ordered - RCD.Weight Scheduled
RCD.Qty_5_0_USR = RCD.Weight_Ordered - RCD.Weight_Scheduled;

ENDIF;

//?highlight age days if from date is populated
CASE;

// IF DB1.Production Ovr AgeDte Fr is not equal zero
IF DB1.Production_Ovr_AgeDte_Fr <> *ZERO;

// RCD.Override Age Dates StsUsr = CND.Age Dates are Entered
RCD.Override_Age_Dates_StsUsr = 'O';

//?highlight age days if from date is populated
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Override Age Dates StsUsr = CND.No Override Age Dates
RCD.Override_Age_Dates_StsUsr = *BLANK;

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F4=Prompt                 FP1054
CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Item Code
IF PGM.*Cursor_field = CTL.Item_Code;

// Call program SEL Item Default FG    SR.
CALL PROGRAM(SEL Item Default FG    SR) ('POMYSRR');
PARAMETER(CTL.Item_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> CTL.Sales Route Code
IF PGM.*Cursor_field = CTL.Sales_Route_Code;

// Call program SEL PD Sales Route Act SR.
CALL PROGRAM(SEL PD Sales Route Act SR) ('PDFWSRR');
PARAMETER(CTL.Sales_Route_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> CTL.Warehouse Code
IF PGM.*Cursor_field = CTL.Warehouse_Code;

// Call program SEL ShipCo/Warehouse   SR.
CALL PROGRAM(SEL ShipCo/Warehouse   SR) ('PPHQSRR');
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Company_Number);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> CTL.Availability Group Code
IF PGM.*Cursor_field = CTL.Availability_Group_Code;

// Call program SEL Avail Group        SR.
CALL PROGRAM(SEL Avail Group        SR) ('PDDVSRR');
PARAMETER(CTL.Availability_Group_Code);

ENDIF;

ENDIF;

//?F10=All/Base
CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

CASE;

// IF LCL.All Products (Y/N) is No
IF LCL.All_Products_Y_N = 'N';

// LCL.All Products (Y/N) = CND.Yes
LCL.All_Products_Y_N = 'Y';

// IF LCL.All Products (Y/N) is Yes
IF LCL.All_Products_Y_N = 'Y';

// LCL.All Products (Y/N) = CND.No
LCL.All_Products_Y_N = 'N';

ENDIF;

// LCL.Consumed Item Code = CON.*ZERO
LCL.Consumed_Item_Code = *ZERO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?avail change
CASE;

// IF CTL.Availability Group Code NE LCL.Availability Group Code
IF CTL.Availability_Group_Code <> LCL.Availability_Group_Code;

// LCL.Availability Group Code = CTL.Availability Group Code
LCL.Availability_Group_Code = CTL.Availability_Group_Code;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?load id change
CASE;

// IF CTL.Load ID NE LCL.Load ID
IF CTL.Load_ID <> LCL.Load_ID;

// LCL.Load ID = CTL.Load ID
LCL.Load_ID = CTL.Load_ID;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?prod hold chg
CASE;

// IF CTL.Production Hold NE LCL.Production Hold
IF CTL.Production_Hold <> LCL.Production_Hold;

// LCL.Production Hold = CTL.Production Hold
LCL.Production_Hold = CTL.Production_Hold;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?credit hold change
CASE;

// IF CTL.Credit Hold NE LCL.Credit Hold
IF CTL.Credit_Hold <> LCL.Credit_Hold;

// LCL.Credit Hold = CTL.Credit Hold
LCL.Credit_Hold = CTL.Credit_Hold;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?pick sts change
CASE;

// IF CTL.Pick Status USR NE LCL.Pick Status USR
IF CTL.Pick_Status_USR <> LCL.Pick_Status_USR;

// LCL.Pick Status USR = CTL.Pick Status USR
LCL.Pick_Status_USR = CTL.Pick_Status_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?F5=Refresh
CASE;

// IF CTL.*CMD key is CF05
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?F13=All/Base
CASE;

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

QUIT;

ENDIF;

//?F16 = Display Production Availability
CASE;

// IF CTL.*CMD key is CF16
IF CTL.*CMD_key = '16';

// Call program WW Product Availablty DF.
CALL PROGRAM(WW Product Availablty DF) ('PDFPDFR');
PARAMETER(CTL.Company_Number);
PARAMETER(WRK.Warehouse_Code_PASS_USR);

QUIT;

ENDIF;

//?F21=Export to Excel; 06/08/17 DN T10731
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Display Asterisk Line USR = CND.No
PAR.Display_Asterisk_Line_USR = 'N';

CASE;

// IF CTL.*CMD key is CF21
IF CTL.*CMD_key = '21';

//?Throw message if at least one field not entered else call SEQUEL to export
CASE;

// IF CTL.Sales Route Code is not entered
IF CTL.Sales_Route_Code = *BLANK;

// AND CTL.Company Number is Equal to zero
AND CTL.Company_Number = *ZERO;

// AND CTL.Requested Ship Date is not entered
AND CTL.Requested_Ship_Date = *ZERO;

// AND CTL.Order Number is Equal to zeros
AND CTL.Order_Number = *ZERO;

// AND CTL.Item Code is Zero
AND CTL.Item_Code = *ZERO;

// PAR.Display Asterisk Line USR = CND.Yes
PAR.Display_Asterisk_Line_USR = 'Y';

// Send error message - 'At least 1 value is required. (An '*' will show above the field.)'
ERROR(USR4987);

//?Throw message if at least one field not entered else call SEQUEL to export
// IF NOT CTL.Production Hold is Yes
IF ! CTL.Production_Hold = 'Y';

// LCL.Generic Message 80 USR = CONCAT(CON.Production Hold status,CON.must be 'Y' for F21 use.,CON.1
LCL.Generic_Message_80_USR = 'Production Hold status' + 'must be 'Y' for F21 use.' (1);

// Send error message - '&1'
ERROR(USR4977);
MSGPARM(LCL.Generic_Message_80_USR);

//?Throw message if at least one field not entered else call SEQUEL to export
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Address = CON.*BLANK
LCL.Email_Address = *BLANK;

// Call program Pmt Enter Email Addr  PV.
CALL PROGRAM(Pmt Enter Email Addr  PV) ('POWGPVR');
PARAMETER(LCL.Email_Address);

//?Export Data to Excel via SEQUEL.
CASE;

// IF LCL.Email Address is Entered
IF LCL.Email_Address <> *BLANK;

// LCL.Date (Alpha) USR = CVTVAR(CTL.Requested Ship Date)
LCL.Date_Alpha_USR = CVTVAR(CTL.Requested_Ship_Date);

// Call program Zzz Prd Itm Hld to XLS UP.
SBMJOB;
CALL PROGRAM(Zzz Prd Itm Hld to XLS UP) ('PUCYUPC');
PARAMETER(CTL.Company_Number);
PARAMETER(LCL.Date_Alpha_USR);
PARAMETER(CTL.Order_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Sales_Route_Code);
PARAMETER(CTL.Production_Hold);
PARAMETER(LCL.Email_Address);
SBMJOBOVR JOB(SQLPRITHLD);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

ENDIF;

ENDIF;

QUIT;

ENDIF;

ENDIF;

//?F22=Inventory Short report - excel; 07/27/17 RMC T10731
CASE;

// IF CTL.*CMD key is CF22
IF CTL.*CMD_key = '22';

// Execute command - 'EXECUTE SQL SCRIPT'
EXECUTE COMMAND(USR5014);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Chg Prods   FP1054 - new option 10/23/08
CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

EXECUTE FUNCTION(RTV Chk Detail Exists  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1425981;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);

//?Edit existing order details, etc. or issue error message
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Order has no products--Edit Order Header.'
ERROR(USR2064);
MSGPARM(RCD.*SFLSEL);

//?Edit existing order details, etc. or issue error message
// IF RCD.Event Code is 04 Shipped
IF RCD.Event_Code = '04';

// Send error message - 'Order &1 has been partially confirmed, no change allowed.'
ERROR(USR1334);
MSGPARM(RCD.Order_Number);
MSGPARM(RCD.*SFLSEL);

//?Edit existing order details, etc. or issue error message
// IF RCD.Order in Use is yes
IF RCD.Order_in_Use = 'Y';

// Send error message - 'Order &1 is in use by another user'
ERROR(USR0508);
MSGPARM(RCD.Order_Number);

//?Edit existing order details, etc. or issue error message
// IF RCD.Load Status is Lock
IF RCD.Load_Status = 'L';

// Send error message - 'Order &2 can't be changed:  on a locked load.'
ERROR(USR1891);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.Order_Number);

//?Edit existing order details, etc. or issue error message
// IF RCD.Pick Status USR is Picked
IF RCD.Pick_Status_USR = 'Y';

//?RMC PFS017 6/6/6 added this condition
// Send error message - 'Order &2 can't be changed:  on a locked load.'
ERROR(USR1891);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.Order_Number);

//?Edit existing order details, etc. or issue error message
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Process Control = CND.Process Change
WRK.Process_Control = 'C';

// Call program EDT Order Entry Home   XF.
CALL PROGRAM(EDT Order Entry Home   XF) ('PDSQXFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(WRK.Process_Control);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?5=Display Order
CASE;

// IF RCD.*SFLSEL is Option 5
IF RCD.*SFLSEL = '5'/'5';

// Call program DSP Ord Inquiry Detail DF.
CALL PROGRAM(DSP Ord Inquiry Detail DF) ('PDPZDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(LCL.Application_Code);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?7=Edt ShpDt/Whs
CASE;

// IF RCD.*SFLSEL is Option 7
IF RCD.*SFLSEL = '7'/'7';

//?Validate Option - FP1054 new opt here for Sales
CASE;

// IF RCD.Order in Use is yes
IF RCD.Order_in_Use = 'Y';

// Send error message - 'Order &2 in use by another user.'
ERROR(USR0664);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.Order_Number);

//?Validate Option - FP1054 new opt here for Sales
// IF *OTHERWISE
IF *OTHERWISE;

//?Validate Load Status
CASE;

// IF RCD.Load ID is NE Blank
IF RCD.Load_ID <> *ZERO;

//?08/19/08 PKD We shouldn't be changing ship date if on a load.
// Send error message - 'Order &1 is on a load.  Option is invalid.'
ERROR(USR2331);
MSGPARM(RCD.Order_Number);

//?Validate Load Status
// IF *OTHERWISE
IF *OTHERWISE;

//?** Add Access Limited Parm                            W288
// Call program EDT Schd Shp Dte/Whse  E1.
CALL PROGRAM(EDT Schd Shp Dte/Whse  E1) ('PDLQE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(PAR.Access_Limited_Sts_USR);

// CTL.Company Number = RCD.Company Number
CTL.Company_Number = RCD.Company_Number;

// CTL.Requested Ship Date = RCD.Requested Ship Date
CTL.Requested_Ship_Date = RCD.Requested_Ship_Date;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?8=Dsp Age
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

// Call program Dsp Age Information   DR.
CALL PROGRAM(Dsp Age Information   DR) ('PNQ0D1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?9=Display BOM
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

//?07/22/08 PKD S00360 Replaced Edit BOM with Display BOM.
// Call program DSP Bill of Material   ET.
CALL PROGRAM(DSP Bill of Material   ET) ('PPVMETR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?10=Work With Inventory Allocated
CASE;

// IF RCD.*SFLSEL is Option 10
IF RCD.*SFLSEL = '10';

// Call program WW Inv Allocation     DF.
CALL PROGRAM(WW Inv Allocation     DF) ('POP5DFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Order_Number);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?11=Work With Production Order Schedule
CASE;

// IF RCD.*SFLSEL is Option 11
IF RCD.*SFLSEL = '11';

// Call program WW OrdPrdSch Edit     DF.
CALL PROGRAM(WW OrdPrdSch Edit     DF) ('POQJDFR');
PARAMETER(RCD.Consumed_Item_Code);
PARAMETER(RCD.Production_Warehouse);
PARAMETER(RCD.Item_Code);
PARAMETER(*BLANK);

// CTL.Order Number = RCD.Order Number
CTL.Order_Number = RCD.Order_Number;

// CTL.Company Number = RCD.Company Number
CTL.Company_Number = RCD.Company_Number;

// CTL.Requested Ship Date = RCD.Requested Ship Date
CTL.Requested_Ship_Date = RCD.Requested_Ship_Date;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?12=Edit Load/Orders   Disable when Live w/TPM E004019
CASE;

// IF RCD.*SFLSEL is Option 12
IF RCD.*SFLSEL = '12';

//?08/18/08 PKD S00408 Validate the entire Load instead of just the
//?             order being processed.
//?05/23/16 RMC E4119 remove live with tpm check
//?Validate     FP1054 - new opt here for Sales
CASE;

// IF RCD.Load ID is Blank
IF RCD.Load_ID = *ZERO;

// Send error message - 'Order not assigned to load.'
ERROR(USR1874);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.Order_Number);

//?Validate     FP1054 - new opt here for Sales
// IF RCD.Load Status is Locked thru Invoiced
IF RCD.Load_Status = 'I'/'L'/'S';

// Send error message - 'The Load is Locked.  Option is invalid.'
ERROR(USR2308);
MSGPARM(RCD.*SFLSEL);

//?Validate     FP1054 - new opt here for Sales
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv InUse/Sts for Ld  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1895872;
PARAMETER(RCD.Load_ID);
PARAMETER(LCL.Access_Denied_Y_N);

CASE;

// IF LCL.Access Denied (Y/N) is yes
IF LCL.Access_Denied_Y_N = 'Y';

// Send error message - 'An Order on the Load is "In Use" or "Confirmed". Option Invalid.'
ERROR(USR3997);

// IF *OTHERWISE
IF *OTHERWISE;

//?** Pass order number to Edit Load/Orders     E00438
//?** Add Access Limited parm                   W288
// Call program Edt Load/Orders        DF.
CALL PROGRAM(Edt Load/Orders        DF) ('PDLTDFR');
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Scheduled_Ship_Date);
PARAMETER(WRK.Name);
PARAMETER(PAR.Access_Limited_Sts_USR);

// CTL.Load ID = RCD.Load ID
CTL.Load_ID = RCD.Load_ID;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?13=Display Load       Disable when Live w/TPM E004019
CASE;

// IF RCD.*SFLSEL is Option 13
IF RCD.*SFLSEL = '13';

//?05/23/16 RMC E4119 remove live with tpm check
// Call program WW Orders on Load      DF.
CALL PROGRAM(WW Orders on Load      DF) ('PDODDFR');
PARAMETER(RCD.Load_ID);
PARAMETER(LCL.USR_Weight_Accumulated);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?17=Reallocate
CASE;

// IF RCD.*SFLSEL is Option 17
IF RCD.*SFLSEL = '17';

EXECUTE FUNCTION(RTV Order in Use       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1646052;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(LCL.Order_in_Use);
PARAMETER(LCL.Header_Status);
PARAMETER(LCL.Load_ID);

CASE;

// IF LCL.Order in Use is yes
IF LCL.Order_in_Use = 'Y';

// Send error message - 'Order &1 is in use by another user'
ERROR(USR0508);
MSGPARM(RCD.Order_Number);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV for PA update val2RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1993258;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(LCL.Warehouse_Code_SavUsr);
PARAMETER(LCL.OD_Production_Plan_Sts);
PARAMETER(LCL.Quantity_Scheduled_1_USR);
PARAMETER(LCL.Weight_Scheduled_USR);
PARAMETER(LCL.OD_Schedule_Override_Sts);
PARAMETER(LCL.OD_Adj_Type_Override);
PARAMETER(LCL.Item_Age_Days);
PARAMETER(LCL.Production_Ovr_AgeDte_Fr);
PARAMETER(LCL.Production_Ovr_AgeDte_To);

//?Dont allow option if order data has changed
CASE;

// IF RCD.Warehouse Code NE LCL.Warehouse Code SavUsr
IF RCD.Warehouse_Code <> LCL.Warehouse_Code_SavUsr;

// OR RCD.Quantity Scheduled NE LCL.Quantity Scheduled 1 USR
OR RCD.Quantity_Scheduled <> LCL.Quantity_Scheduled_1_USR;

// OR RCD.Weight Scheduled NE LCL.Weight Scheduled USR
OR RCD.Weight_Scheduled <> LCL.Weight_Scheduled_USR;

// OR RCD.OD Schedule Override Sts NE LCL.OD Schedule Override Sts
OR RCD.OD_Schedule_Override_Sts <> LCL.OD_Schedule_Override_Sts;

// OR RCD.OD Adj Type Override NE LCL.OD Adj Type Override
OR RCD.OD_Adj_Type_Override <> LCL.OD_Adj_Type_Override;

// OR RCD.Item Age Days NE LCL.Item Age Days
OR RCD.Item_Age_Days <> LCL.Item_Age_Days;

// OR RCD.Production Ovr AgeDte Fr NE LCL.Production Ovr AgeDte Fr
OR RCD.Production_Ovr_AgeDte_Fr <> LCL.Production_Ovr_AgeDte_Fr;

// OR RCD.Production Ovr AgeDte To NE LCL.Production Ovr AgeDte To
OR RCD.Production_Ovr_AgeDte_To <> LCL.Production_Ovr_AgeDte_To;

// Send error message - 'Order has changed since display, option not allowed. Refresh screen.'
ERROR(USR4173);
MSGPARM(RCD.*SFLSEL);

//?Dont allow option if order data has changed
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Order in Use       CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1316259;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('Y');

// Send status message - 'Processing...'
MESSAGE(USR2303 *STATUS);

//?Deallocate
// LCL.Quantity Ordered = CON.*ZERO
LCL.Quantity_Ordered = *ZERO;

// LCL.Weight Ordered = CON.*ZERO
LCL.Weight_Ordered = *ZERO;

// LCL.Quantity Scheduled = RCD.Quantity Scheduled
LCL.Quantity_Scheduled = RCD.Quantity_Scheduled;

// LCL.Weight Scheduled = RCD.Weight Scheduled
LCL.Weight_Scheduled = RCD.Weight_Scheduled;

CASE;

// IF RCD.Released by User Sts Y/N is yes
IF RCD.Released_by_User_Sts_Y_N = 'Y';

EXECUTE FUNCTION(CHG Released by User  CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1920658;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER('N');

ENDIF;

// Call program UPD Avail-To-Sell  ORD XF.
CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Requested_Ship_Date);
PARAMETER(LCL.Quantity_Ordered);
PARAMETER(LCL.Weight_Ordered);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);
PARAMETER('OD');
PARAMETER(JOB.*PROGRAM);
PARAMETER(RCD.Item_Age_Days);
PARAMETER(RCD.Production_Ovr_AgeDte_Fr);
PARAMETER(RCD.Production_Ovr_AgeDte_To);

EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);

//?Allocate
// LCL.Quantity Ordered = RCD.Quantity Ordered
LCL.Quantity_Ordered = RCD.Quantity_Ordered;

// LCL.Weight Ordered = RCD.Weight Ordered
LCL.Weight_Ordered = RCD.Weight_Ordered;

// LCL.Quantity Scheduled = CON.*ZERO
LCL.Quantity_Scheduled = *ZERO;

// LCL.Weight Scheduled = CON.*ZERO
LCL.Weight_Scheduled = *ZERO;

// Call program UPD Avail-To-Sell  ORD XF.
CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Requested_Ship_Date);
PARAMETER(LCL.Quantity_Ordered);
PARAMETER(LCL.Weight_Ordered);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);
PARAMETER('OA');
PARAMETER(JOB.*PROGRAM);
PARAMETER(RCD.Item_Age_Days);
PARAMETER(RCD.Production_Ovr_AgeDte_Fr);
PARAMETER(RCD.Production_Ovr_AgeDte_To);

EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);

//?** If there are upload errors still pending, clear them   C001956
EXECUTE FUNCTION(CHG Ord Req Revw- flg CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC2036232;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(*BLANK);

EXECUTE FUNCTION(CHG Ord Line Err=no errRT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2036231;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);

//?* FP1054 Create rcd * RLCORD
// Call program CRT Load/Order Chg Log XF.
CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
PARAMETER(RCD.Load_ID);
PARAMETER(*ZERO);
PARAMETER('RLCORD');
PARAMETER('SLS');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*BLANK);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);

EXECUTE FUNCTION(CHG Order in Use       CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1316259;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER('N');

//?*
// CTL.Company Number = RCD.Company Number
CTL.Company_Number = RCD.Company_Number;

// CTL.Requested Ship Date = RCD.Requested Ship Date
CTL.Requested_Ship_Date = RCD.Requested_Ship_Date;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?E3796 JJH 02/17/15 - Remove option 19=WW Sched Ords-Sls
//?21=Dsp Alloc Simulator
CASE;

// IF RCD.*SFLSEL is Option 21
IF RCD.*SFLSEL = '21';

// Call program Dsp Ord Allc Simulate D1.
CALL PROGRAM(Dsp Ord Allc Simulate D1) ('PMFJD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?25=Update Consumed Item
CASE;

// IF RCD.*SFLSEL is Option 25
IF RCD.*SFLSEL = '25';

// Call program Rtv First Consumed Itm XF.
CALL PROGRAM(Rtv First Consumed Itm XF) ('POP1XFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(PAR.Component_Item_Code);

//?99656 - Call added to confirm update of "Consumed Item Code"
// Call program UPD Consumed ItemCode PV.
CALL PROGRAM(UPD Consumed ItemCode PV) ('PUYIPVR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Requested_Ship_Date);
PARAMETER(RCD.Order_Type_Sales);
PARAMETER(RCD.Consumed_Item_Code);
PARAMETER(RCD.Load_ID);
PARAMETER(PAR.Component_Item_Code);
PARAMETER(LCL.Component_Item_Code);

CASE;

// IF LCL.Component Item Code is Entered
IF LCL.Component_Item_Code <> *ZERO;

EXECUTE FUNCTION(Chg Consumed Itm Code CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1648750;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(LCL.Component_Item_Code);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

