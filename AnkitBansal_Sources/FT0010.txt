     H*OPTION(*SRCSTMT : *NODEBUGIO)
     H DFTACTGRP(*NO)
     H BNDDIR('RDB2000')
       //----------------------------------------------------------------------
       // Program To Get F0010 Records from E1 and Insert into EZ0010 Wordld
       // Programmer  :RST SoLution
       // Date : 5/8/20
       //----------------------------------------------------------------------
      //*******************************************************************************
     FEZ0010L0  UF A E           K DISK
     FF55PICK   IF A E             DISK
     FF55CONFIG1IF   E           K DISK
      // RDB Example program
      //
      // This program provides and example of the use of the RDB APIs
      //*******************************************************************************
      /COPY RDB50/RDBSRC,RDBPROTO
     D Id              S             10I 0
     D rc              S             10I 0
     D @ErrId          S              7A
     D @ErrText        S            100A
     D vBatch          S              8  0 inz
     D $$DOC           S             10  0 inz
     D vBatch1         S             15A
     D X_A7            S             30A   inz
     D X_A8            S             30A   inz
     d sFileSchema     s             30a   inz
     C     BDKY01        KLIST
     C                   KFLD                    BDCO
     C                   KFLD                    BDACTS
      //
      //     Connect to the remote system using created in the RDB
      //     configuration screen (RDBCFG)
      /FREE
           setll *start F55CONFIG1;
           READ F55CONFIG1;
           Dow Not %EOF(F55CONFIG1);
           X_A7=%TRIML(%TRIMR(S2DL01));
           X_A8=%TRIML(%TRIMR(S2DL02));
           READ F55CONFIG1;
           EndDo;
           BDACTS=%TIMESTAMP();                                                 //|Get a number
       Id = RdbConnect(X_A7);
       If Id >= 0;
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where FFEV01 = ?' +
             ' and FFPID = ?');
         rc = RdbSetStr(Id: 1: '1');
         rc = RdbSetStr(Id: 2: 'R580010');
         rc = RdbPrepExec(Id);
         //     Fetch the first record of the result set that was generated with the
         //     previously executed statement.
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           SSUKID= RdbGetNum(Id:1);                                             //|Get a number
           WRITE I55PICK;                                                       //|Get a number
           rc = RdbFetchNxt(Id);
         enddo;
       EndIf;
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
           sFileSchema = '[' + %trimr(X_A8) + '].[F580010]';
           setll *start F55PICK;
           READ F55PICK;
           Dow Not %EOF(F55PICK);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where CIUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           BDCO = RdbGetStr(Id:2);                                              //|Get a number
           BDNAME= RdbGetStr(Id:3);                                             //|Get a String
           BDALTC= RdbGetStr(Id:4);                                             //|Get a String
           BDDFYJ= RdbGetNum(Id:5);
           BDPNC = RdbGetNum(Id:6);                                             //|Get a Timestamp
           BDDOT1 = RdbGetStr(Id:7);
           BDCRYR = RdbGetStr(Id:8);
           BDCRYC = RdbGetStr(Id:9);
           BDDOT2 = RdbGetStr(Id:10);
           BDMCUA= RdbGetStr(Id:11);
           BDMCUD= RdbGetStr(Id:12);
           BDMCUC= RdbGetStr(Id:13);
           BDMCUB= RdbGetStr(Id:14);
           BDDPRC= RdbGetStr(Id:15);
           BDBKTX= RdbGetStr(Id:16);
           BDTXBM = RdbGetNum(Id:17);
           BDTXBO = RdbGetNum(Id:18);
           BDNWXJ = RdbGetNum(Id:19);
           BDGLIE= RdbGetStr(Id:20);
           BDABIN=RdbGetStr(Id:21);
           BDCALD=RdbGetStr(Id:22);
           BDDTPN=RdbGetStr(Id:23);
           BDPNF  = RdbGetNum(Id:24);
           BDDFF  = RdbGetNum(Id:25);
           BDCRCD= RdbGetStr(Id:26);
           BDSMI = RdbGetStr(Id:27);
           BDSMU = RdbGetStr(Id:28);
           BDSMS = RdbGetStr(Id:29);
           BDDNLT= RdbGetStr(Id:30);
           BDALGM= RdbGetStr(Id:33);
           BDATCS= RdbGetStr(Id:32);
           BDAGEM= RdbGetStr(Id:34);
           BDSTMT= RdbGetStr(Id:31);
           BDCRDY = RdbGetNum(Id:35);
           BDAGR1 = RdbGetNum(Id:36);
           BDAGR2 = RdbGetNum(Id:37);
           BDAGR3 = RdbGetNum(Id:38);
           BDAGR4 = RdbGetNum(Id:39);
           BDAGR5 = RdbGetNum(Id:40);
           BDAGR6 = RdbGetNum(Id:41);
           BDAGR7 = RdbGetNum(Id:42);
           BDFRY  = RdbGetNum(Id:43);
           BDFRP  = RdbGetNum(Id:44);
           BDNNP  = RdbGetNum(Id:45);
           BDFP   = RdbGetNum(Id:46);
           BDAGE= RdbGetStr(Id:47);
           BDDAG  = RdbGetNum(Id:48);
           BDARPN = RdbGetNum(Id:49);
           BDAPPN = RdbGetNum(Id:50);
           BDARFJ = RdbGetNum(Id:51);
           BDAPFJ = RdbGetNum(Id:52);
           BDAN8  = RdbGetNum(Id:53);
           BDSGBK= RdbGetStr(Id:54);
           BDPTCO=RdbGetStr(Id:55);
           BDX1= RdbGetStr(Id:56);
           BDX2= RdbGetStr(Id:57);
           BDUSER= RdbGetStr(Id:58);
           BDPID=RdbGetStr(Id:59);
           BDUPMJ=RdbGetNum(Id:60);
           BDJOBN=RdbGetStr(Id:61);
           BDUPMT= RdbGetNum(Id:62);
           BDFKNB=RdbGetNum(Id:63);
           BDH0TX=RdbGetStr(Id:64);
           BDH1TX=RdbGetStr(Id:65);
           BDKGNB= RdbGetNum(Id:66);
           BDIEST=RdbGetStr(Id:67);
           BDADDT=RdbGetNum(Id:68);
           BDADTM=RdbGetNum(Id:69);
           chain BDKY01 EZ0010L0;
           if not %found(EZ0010L0);
           WRITE @BDCPE2;
           else;
           UPDATE @BDCPE2;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
           setll *start F55PICK;
           READ F55PICK;
           Dow Not %EOF(F55PICK);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Update '+ %trimr(sFileSchema) +
             ' set FFEV01 = ? where FFUKID = ?');
         //
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 2: SSUKID);
         rc = RdbSetStr(Id: 1: '2');
         rc = RdbPrepExec(Id);
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK;
           EndDo;
         //
         //     Close the connection to the remote system.
         RdbClose(Id);
       //
       *Inlr = *On;
      /END-FREE
