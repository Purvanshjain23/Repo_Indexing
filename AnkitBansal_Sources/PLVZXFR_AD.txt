// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLVZXFR
// ?Date: 14.08.2025 Time: 02:55:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3503 JJH 11/11/14 - Authorized Gate Entry
//? This function will create System Generated (SYS) Buy Order Load
//? Comments in the format:
//? MM/DD/YYYY HH:MM ******** 43-Character Comment ********
//?H16853 ISE 11/02/2020 CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

//?Truck Authorized Entry Time
DO;

//?NOTE:  Company Value field will not allow Zero.  Therefore, 360
//?was set to 00.0001, and it is being reset to 0 Minutes.
// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER('HPETRKTME');
PARAMETER(LCL.System_Value_Numeric_USR);

CASE;

// IF LCL.System Value Numeric  USR is Less Than 1
IF LCL.System_Value_Numeric_USR < 1;

// LCL.Truck Auth Entry Time USR = CND.Zero
LCL.Truck_Auth_Entry_Time_USR = *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Truck Auth Entry Time USR = LCL.System Value Numeric  USR
LCL.Truck_Auth_Entry_Time_USR = LCL.System_Value_Numeric_USR;

ENDIF;

ENDDO;

//?Initialize Fields
// LCL.BOL Comment = CND.Blank
LCL.BOL_Comment = *BLANK;

//?Get System Date and System Time
// Call program Rtv System Date       UP.
CALL PROGRAM(Rtv System Date       UP) ('PKPSUPR');
PARAMETER(LCL.*Job_date);

// Execute function Rtv Current Time      US.
EXECUTE FUNCTION(Rtv Current Time      US) TYPE(EXCUSRSRC) ('PKM1UFR');
PARAMETER(LCL.*Job_time);
{
 C                     TIME           #OA1TM
}


//?Obtain Current Date
// LCL.Month USR = LCL.*Job date *MONTH
LCL.Month_USR = DATEDTLS(LCL.*Job_date 'MO' 1111111 'NONE' 'N' 1);

// LCL.Day of Month USR = LCL.*Job date *DAY OF MONTH
LCL.Day_of_Month_USR = DATEDTLS(LCL.*Job_date 'DM' 1111111 'NONE' 'N' 1);

// LCL.Year USR = LCL.*Job date *YEAR
LCL.Year_USR = DATEDTLS(LCL.*Job_date 'YR' 1111111 'NONE' 'N' 1);

// LCL.Month Alpha USR = CVTVAR(LCL.Month USR)
LCL.Month_Alpha_USR = CVTVAR(LCL.Month_USR);

// LCL.Day Alpha USR = CVTVAR(LCL.Day of Month USR)
LCL.Day_Alpha_USR = CVTVAR(LCL.Day_of_Month_USR);

// LCL.Year Alpha Usr = CVTVAR(LCL.Year USR)
LCL.Year_Alpha_Usr = CVTVAR(LCL.Year_USR);

//?Obtain Current Time
// LCL.Hour USR = LCL.*Job time *HOURS
LCL.Hour_USR = TIMEDTLS(LCL.*Job_time 'HR');

// LCL.Minute USR = LCL.*Job time *MINUTES
LCL.Minute_USR = TIMEDTLS(LCL.*Job_time 'MN');

// LCL.Hour Usr Alpha = CVTVAR(LCL.Hour USR)
LCL.Hour_Usr_Alpha = CVTVAR(LCL.Hour_USR);

// LCL.Minute Alpha USR = CVTVAR(LCL.Minute USR)
LCL.Minute_Alpha_USR = CVTVAR(LCL.Minute_USR);

//?Concatenate BOL Comment
// LCL.BOL Comment = CONCAT(LCL.Month Alpha USR,CON./,CND.*None)
LCL.BOL_Comment = LCL.Month_Alpha_USR + '/' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Day Alpha USR,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Day_Alpha_USR (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,CON./,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + '/' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Year Alpha Usr,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Year_Alpha_Usr (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Hour Usr Alpha,CND.*One)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Hour_Usr_Alpha (1);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,CON.:,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + ':' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Minute Alpha USR,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Minute_Alpha_USR (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,PAR.Buy Order Load Com 1-25,CND.*One)
LCL.BOL_Comment = LCL.BOL_Comment + PAR.Buy_Order_Load_Com_1_25 (1);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,PAR.Buy Order Load Com 26-43,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + PAR.Buy_Order_Load_Com_26_43 (*ZERO);

//?Truck Authorized Comment
CASE;

// IF PAR.Truck Authorized Comment is Yes
IF PAR.Truck_Authorized_Comment = 'Y';

// LCL.Buy Order Load Com 1-16 = LCL.BOL Comment
LCL.Buy_Order_Load_Com_1_16 = LCL.BOL_Comment;

// LCL.Buy Order Load Com 17-38 = PAR.Buy Order Load Com 1-25
LCL.Buy_Order_Load_Com_17_38 = PAR.Buy_Order_Load_Com_1_25;

// LCL.BOL Comment = CONCAT(LCL.Buy Order Load Com 1-16,LCL.Buy Order Load Com 17-38,CND.*One)
LCL.BOL_Comment = LCL.Buy_Order_Load_Com_1_16 + LCL.Buy_Order_Load_Com_17_38 (1);

// LCL.BOL Auth Gate Entry Date = LCL.*Job date
LCL.BOL_Auth_Gate_Entry_Date = LCL.*Job_date;

// LCL.Truck Auth Entry Time 6.0 = LCL.Truck Auth Entry Time USR * CON.100 *
LCL.Truck_Auth_Entry_Time_6_0 = LCL.Truck_Auth_Entry_Time_USR * 100;

// LCL.Time 6.0 USR = LCL.*Job time + LCL.Truck Auth Entry Time USR *MINUTES
LCL.Time_6_0_USR = TIMEINCR(LCL.*Job_time LCL.Truck_Auth_Entry_Time_USR 'MN');

CASE;

// IF LCL.Time 6.0 USR is EQ Zero
IF LCL.Time_6_0_USR = *ZERO;

// LCL.Time 6.0 USR = LCL.Time 6.0 USR + CON.1 *MINUTES
LCL.Time_6_0_USR = TIMEINCR(LCL.Time_6_0_USR 1 'MN');

// LCL.BOL Auth Gate Entry Date = LCL.BOL Auth Gate Entry Date + CON.1 *DAYS
LCL.BOL_Auth_Gate_Entry_Date = DATEINCR(LCL.BOL_Auth_Gate_Entry_Date 1 'DY' 1111111                +
'NONE' 'N' 1);

// IF LCL.Time 6.0 USR LT LCL.Truck Auth Entry Time 6.0
IF LCL.Time_6_0_USR < LCL.Truck_Auth_Entry_Time_6_0;

// LCL.BOL Auth Gate Entry Date = LCL.BOL Auth Gate Entry Date + CON.1 *DAYS
LCL.BOL_Auth_Gate_Entry_Date = DATEINCR(LCL.BOL_Auth_Gate_Entry_Date 1 'DY' 1111111                +
'NONE' 'N' 1);

ENDIF;

//?Obtain Current Date
// LCL.Month USR = LCL.BOL Auth Gate Entry Date *MONTH
LCL.Month_USR = DATEDTLS(LCL.BOL_Auth_Gate_Entry_Date 'MO' 1111111 'NONE' 'N' 1);

// LCL.Day of Month USR = LCL.BOL Auth Gate Entry Date *DAY OF MONTH
LCL.Day_of_Month_USR = DATEDTLS(LCL.BOL_Auth_Gate_Entry_Date 'DM' 1111111 'NONE' 'N' 1);

// LCL.Year USR = LCL.BOL Auth Gate Entry Date *YEAR
LCL.Year_USR = DATEDTLS(LCL.BOL_Auth_Gate_Entry_Date 'YR' 1111111 'NONE' 'N' 1);

// LCL.Month Alpha USR = CVTVAR(LCL.Month USR)
LCL.Month_Alpha_USR = CVTVAR(LCL.Month_USR);

// LCL.Day Alpha USR = CVTVAR(LCL.Day of Month USR)
LCL.Day_Alpha_USR = CVTVAR(LCL.Day_of_Month_USR);

// LCL.Year Alpha Usr = CVTVAR(LCL.Year USR)
LCL.Year_Alpha_Usr = CVTVAR(LCL.Year_USR);

//?Obtain Current Time
// LCL.Hour USR = LCL.Time 6.0 USR *HOURS
LCL.Hour_USR = TIMEDTLS(LCL.Time_6_0_USR 'HR');

// LCL.Minute USR = LCL.Time 6.0 USR *MINUTES
LCL.Minute_USR = TIMEDTLS(LCL.Time_6_0_USR 'MN');

// LCL.Hour Usr Alpha = CVTVAR(LCL.Hour USR)
LCL.Hour_Usr_Alpha = CVTVAR(LCL.Hour_USR);

// LCL.Minute Alpha USR = CVTVAR(LCL.Minute USR)
LCL.Minute_Alpha_USR = CVTVAR(LCL.Minute_USR);

//?Concatenate BOL Comment
CASE;

// IF LCL.Truck Auth Entry Time USR is GT Zero
IF LCL.Truck_Auth_Entry_Time_USR > *ZERO;

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Month Alpha USR,CND.*One)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Month_Alpha_USR (1);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,CON./,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + '/' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Day Alpha USR,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Day_Alpha_USR (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,CON./,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + '/' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Year Alpha Usr,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Year_Alpha_Usr (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Hour Usr Alpha,CND.*One)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Hour_Usr_Alpha (1);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,CON.:,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + ':' (*ZERO);

// LCL.BOL Comment = CONCAT(LCL.BOL Comment,LCL.Minute Alpha USR,CND.*None)
LCL.BOL_Comment = LCL.BOL_Comment + LCL.Minute_Alpha_USR (*ZERO);

//?Update Buy Order Load - BOL Auth Gate Entry Date/Time
// LCL.BOL Auth Gate Entry Time = LCL.Time 6.0 USR
LCL.BOL_Auth_Gate_Entry_Time = LCL.Time_6_0_USR;

EXECUTE FUNCTION(CHG BOL Auth Date/TimeCH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1322225;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.BOL_Auth_Gate_Entry_Time);
PARAMETER(LCL.BOL_Auth_Gate_Entry_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

ENDIF;

//?Get Next Comment Line Number
EXECUTE FUNCTION(Rtv Next Line Nbr      RT) TYPE(RTVOBJ) FILE(PLB1CPP)          AB1321687;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.BOL_Comment_Line_Number);
{
 //?USER: Processing if Data record not found

 // PAR.BOL Comment Line Number = CON.1
 PAR.BOL_Comment_Line_Number = 1;

 //?USER: Process Data record

 // PAR.BOL Comment Line Number = DB1.BOL Comment Line Number + CON.1
 PAR.BOL_Comment_Line_Number = DB1.BOL_Comment_Line_Number + 1;

 QUIT;

}


//?Create Buy Order Load Comment
EXECUTE FUNCTION(Crt Buy Order Load Com CR) TYPE(CRTOBJ) FILE(PLB1CPP)          AB1321666;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.BOL_Comment_Line_Number);
PARAMETER('S');
PARAMETER(LCL.BOL_Comment);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


