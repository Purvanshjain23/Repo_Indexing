// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for E1K3DFR
// ?Date: 14.08.2025 Time: 02:43:46
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/UserRP4IF) TYPE(EXCINTFUN)                     AA1100551;
PARAMETER(PAR.OMS_Warehouse_Code);
PARAMETER(PAR.OMS_Company_Number);
PARAMETER('A/R');
PARAMETER(PAR.OMS_Salesperson_Code);
PARAMETER(PAR.OMS_Allow_Multi_Company);
PARAMETER(PAR.OMS_Default_Printer);
PARAMETER(PAR.OMS_NAME);
PARAMETER(PAR.OMS_System_Value_Alpha);
PARAMETER(PAR.OMS_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.OMS_Warehouse_Code);
 PARAMETER(PAR.OMS_Company_Number);
 PARAMETER(PAR.OMS_Application_code);
 PARAMETER(PAR.OMS_Salesperson_Code);
 PARAMETER(PAR.OMS_Allow_Multi_Company);
 PARAMETER(PAR.OMS_Default_Printer);
 PARAMETER(PAR.OMS_NAME);
 PARAMETER(PAR.OMS_System_Value_Alpha);
 PARAMETER(PAR.OMS_Access_Denied_Y_N);

 CASE;

 // IF PAR.OMS Access Denied (Y/N) is Yes
 IF PAR.OMS_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(E1I0112);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to CompanyRP4US.
 EXECUTE FUNCTION(Mov ApplN to CompanyRP4US) TYPE(EXCUSRSRC) ('E1BHUFR');
 PARAMETER(PAR.OMS_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                   movel     #IkrTX        ##CMP
 }

 ENDIF;

}


//?USER: Initialize subfile control

// PGM.*Scan limit = CON.20000
PGM.*Scan_limit = 20000;

CASE;

// IF CTL.USR Date cyymmdd is Entered
IF CTL.USR_Date_cyymmdd > *ZERO;

// OR CTL.Batch Type NE WRK.Blank usr
OR CTL.Batch_Type <> WRK.Blank_usr;

// OR CTL.Batch Number is Entered
OR CTL.Batch_Number <> *ZERO;

// OR CTL.User ID NE WRK.Blank usr
OR CTL.User_ID <> WRK.Blank_usr;

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.USR Date cyymmdd = JOB.*Job date
CTL.USR_Date_cyymmdd = JOB.*Job_date;

ENDIF;

//?USER: Initialize subfile record from DBF record

// LCL.USR Date Julian 5.0 = RCD.Batch Date
LCL.USR_Date_Julian_5_0 = RCD.Batch_Date;

// Call program Get MDY from JUL    X0028.
CALL PROGRAM(Get MDY from JUL    X0028) ('E10028C');
PARAMETER(LCL.USR_Date_Julian_5_0);
PARAMETER(RCD.USR_Date_cyymmdd);

CASE;

// IF CTL.USR Date cyymmdd is Entered
IF CTL.USR_Date_cyymmdd > *ZERO;

CASE;

// IF CTL.USR Date cyymmdd EQ RCD.USR Date cyymmdd
IF CTL.USR_Date_cyymmdd = RCD.USR_Date_cyymmdd;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF PAR.Allow Update Y/N is Yes
IF PAR.Allow_Update_Y_N = 'Y';

//?set to unprocessed
CASE;

// IF RCD.*SFLSEL is Edit
IF RCD.*SFLSEL = '2';

EXECUTE FUNCTION(Chg Batch Ctl Sts     CH) TYPE(CHGOBJ) FILE(E10011)            AA1103020;
PARAMETER(RCD.Batch_Type);
PARAMETER(RCD.Batch_Number);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);

// LCL.EDI - Batch Number = CVTVAR(RCD.Batch Number)
LCL.EDI_Batch_Number = CVTVAR(RCD.Batch_Number);

EXECUTE FUNCTION(Rtv Set Batch to Unprc RT) TYPE(RTVOBJ) FILE(E10411)           AA1103991;
PARAMETER(RCD.User_ID);
PARAMETER(LCL.EDI_Batch_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg F0411 Proc Sts    CH) TYPE(CHGOBJ) FILE(E10411)            AA1103016;
 PARAMETER(DB1.EDI_User_ID);
 PARAMETER(DB1.EDI_Batch_Number);
 PARAMETER(DB1.EDI_Transaction_Nbr);
 PARAMETER(DB1.EDI_Line_Number);
 PARAMETER(0);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
}


EXECUTE FUNCTION(Rtv Set Batch to Unprc RT) TYPE(RTVOBJ) FILE(E10911)           AA1103992;
PARAMETER(RCD.User_ID);
PARAMETER(LCL.EDI_Batch_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Run Log Prc Sts    CH) TYPE(CHGOBJ) FILE(E10911)           AA1103013;
 PARAMETER(DB1.EDI_User_ID);
 PARAMETER(DB1.EDI_Batch_Number);
 PARAMETER(DB1.EDI_Transaction_Nbr);
 PARAMETER(DB1.EDI_Line_Number);
 PARAMETER(DB1.Type_Record);
 PARAMETER(0);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
}


ENDIF;

//?Process 011/0411/0911
CASE;

// IF RCD.*SFLSEL is Option 3
IF RCD.*SFLSEL = '3';

// LCL.EDI - Batch Number = CVTVAR(RCD.Batch Number)
LCL.EDI_Batch_Number = CVTVAR(RCD.Batch_Number);

// Call program Exc Write Batch to Zf  UP.
CALL PROGRAM(Exc Write Batch to Zf  UP) ('E1LBUPR');
PARAMETER(LCL.Return_Code_E1);
PARAMETER(RCD.Batch_Number);
PARAMETER(RCD.User_ID);
PARAMETER(RCD.Batch_Type);
PARAMETER(LCL.EDI_Batch_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?X to not process
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Chg Batch Ctl Sts     CH) TYPE(CHGOBJ) FILE(E10011)            AA1103020;
PARAMETER(RCD.Batch_Type);
PARAMETER(RCD.Batch_Number);
PARAMETER('X');
PARAMETER(RCD.E1_Process_Error_ID);
PARAMETER(RCD.E1_Process_Error_Text);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option Not Allowed'
ERROR(E1I0184);
MSGPARM(RCD.*SFLSEL);

ENDIF;

//?Dsp 0411
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// LCL.EDI - Batch Number = CVTVAR(RCD.Batch Number)
LCL.EDI_Batch_Number = CVTVAR(RCD.Batch_Number);

// Call program Dsp E10411 Voucher Ent DF.
CALL PROGRAM(Dsp E10411 Voucher Ent DF) ('E1BJDFR');
PARAMETER(RCD.User_ID);
PARAMETER(LCL.EDI_Batch_Number);

ENDIF;

//?Dsp 0911
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9';

// LCL.EDI - Batch Number = CVTVAR(RCD.Batch Number)
LCL.EDI_Batch_Number = CVTVAR(RCD.Batch_Number);

// Call program Dsp E10911 J/E       DF.
CALL PROGRAM(Dsp E10911 J/E       DF) ('E1BIDFR');
PARAMETER(RCD.User_ID);
PARAMETER(LCL.EDI_Batch_Number);

ENDIF;

//?Eml details
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8';

// LCL.EDI - Batch Number = CVTVAR(RCD.Batch Number)
LCL.EDI_Batch_Number = CVTVAR(RCD.Batch_Number);

// Call program Exc Search DistributionEX.
CALL PROGRAM(Exc Search DistributionEX) ('E1M1UPR');
PARAMETER(LCL.Email_ID_USR);

CASE;

// IF LCL.Email ID USR is Entered
IF LCL.Email_ID_USR <> *BLANK;

// Send information message - 'Email generated for batch &1.'
MESSAGE(E1I0186 *INFO);
MSGPARM(LCL.EDI_Batch_Number);

// Execute command - 'Exec Sql JDE Batch Script'
EXECUTE COMMAND(E1I0183);
PARAMETER(LCL.EDI_Batch_Number);
PARAMETER(LCL.EDI_Batch_Number);
PARAMETER(LCL.Email_ID_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'User is not enrolled in ESEND.'
ERROR(E1I0185);

QUIT;

ENDIF;

ENDIF;

//?USER: Final processing (Pre-confirm)

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?USER: Process command keys

CASE;

// IF CTL.*CMD key is CF05
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

CASE;

// IF PAR.Allow Update Y/N is Yes
IF PAR.Allow_Update_Y_N = 'Y';

// Call program Exc Rtv/Wrt E1 F0011   UP.
CALL PROGRAM(Exc Rtv/Wrt E1 F0011   UP) ('E1JZUPR');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option Not Allowed'
ERROR(E1I0184);
MSGPARM(WRK.Blank_usr);

ENDIF;

ENDIF;

