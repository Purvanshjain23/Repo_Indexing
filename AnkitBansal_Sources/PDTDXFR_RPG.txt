     H/TITLE Exc Send Dt Cllctn Msg XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by  : COOL:2E  Version:  1000
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/15/02  Time  : 16:51:05
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDMXCPL2IF  E           K        DISK
      * RSQ : AS Last Data Collection   Active Codes Only
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@MXCPYN
      * AS Last Data Collection   Active Codes Only
      * Renamed input format fields
     I              MXAIC3                          WAAIC3
     I              MXAQAA                          WAAQAA
     I              MXG5NX                          WAG5NX
     I              MXG8NX                          WAG8NX
     I              MXNIDT                          WANIDT
     I              MXBKTM                          WABKTM
     I              MXE7SX                          WAE7SX
     I              MXS7TX                          WAS7TX
     I              MXUVST                          WAUVST
     I              MXUWST                          WAUWST
     I              MXUXST                          WAUXST
     I              MXVSST                          WAVSST
     I              MXAATM                          WAAATM
     I              MXAYNA                          WAAYNA
     I              MXA0NA                          WAA0NA
     I              MXAXDT                          WAAXDT
      *
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WBAIC3
     I              AFBCDT                          WBBCDT
     I              AFCQNB                          WBCQNB
     I              AFESNB                          WBESNB
     I              AFETNB                          WBETNB
     I              AFBZNB                          WBBZNB
     I              AFA9ST                          WBA9ST
     I              AFEINB                          WBEINB
     I              AFC5ST                          WBC5ST
     I              AFAQNB                          WBAQNB
     I              AFCMST                          WBCMST
     I              AFV9ST                          WBV9ST
     I              AFWAST                          WBWAST
     I              AFX2ST                          WBX2ST
     I              AFOJDT                          WBOJDT
     I              AFNQNX                          WBNQNX
     I              AFNRNX                          WBNRNX
     I              AFI9SX                          WBI9SX
     I              AFJASX                          WBJASX
     I              AFOKDT                          WBOKDT
     I              AFOLDT                          WBOLDT
     I              AFUVST                          WBUVST
     I              AFUWST                          WBUWST
     I              AFUXST                          WBUXST
     I              AFAATM                          WBAATM
     I              AFAYNA                          WBAYNA
     I              AFA0NA                          WBA0NA
     I              AFAXDT                          WBAXDT
      *
     I@KMREHC
      * Company Values            Retrieval index
      * Renamed input format fields
     I              KMAIC3                          WCAIC3
     I              KMV8CD                          WCV8CD
     I              KMAUNA                          WCAUNA
     I              KMI5ST                          WCI5ST
     I              KMBXTX                          WCBXTX
     I              KMM8NB                          WCM8NB
     I              KMUVST                          WCUVST
     I              KMUWST                          WCUWST
     I              KMUXST                          WCUXST
     I              KMVSST                          WCVSST
     I              KMAATM                          WCAATM
     I              KMAYNA                          WCAYNA
     I              KMA0NA                          WCA0NA
     I              KMAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Accusort Collection Msg'
      * AS Data Collection Code
     I                                        1   6 ZA0001
      * AS Last Update Date
     I                                    P   7  100ZA0002
      * AS Last Update Time
     I                                    P  11  140ZA0003
      * Message data for 'SND Pager Message'
      * Pager Name USR
     I                                        1  10 ZA0004
      * Pager Msg USR
     I                                       11  90 ZA0005
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Exc Send Dt Cllctn Msg XF
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                     CALL 'PDGFUPC'              90  RTV System Date
     C           WUSDTE    PARM *ZERO     WQ0001 155       Current System
     C           WUZHNB    PARM *ZERO     WQ0002 155       Current System
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * WRK.Date - ATR = WRK.Current System Date
     C                     Z-ADDWUSDTE    WUMUDT           Date - ATR
      * Rtv Clc Last Dt Cllctn RT - AS Last Data Collection  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Clc Last Dt Cllctn RT - AS Last Data Collection  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Establish starting position
     C           *LOVAL    SETLL@MXCPYN                    *
     C                     READ @MXCPYN                  90*
      * Data record not found
     C   90                MOVEL'USR2810' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * See if elapsed time s/b calc'd and msg should be sent
      * CASE: DB1.AS Data Collection Code is Production
     C           WAAQAA    IFEQ 'PROD'                     *IF
      * Only send msg for Prod collection code if it's a Production Day
      * Rtv Prd Day Sts       RT - Calendar  * 
     C                     EXSR SBRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Do all the time for other Collection codes
     C                     MOVEL'Y'       WUWAST           Production Day
     C                     END                             *FI
      * Calc the elapsed time and send the msg
      * CASE: WRK.Production Day Status is yes
     C           WUWAST    IFEQ 'Y'                        *IF
      * Calculate the hour/minutes between the last update and now.
      * Add the elapsed hhmm to the ((elapsed days * 24 hrs) * 100))
      *   ( Do the * 100 to get the days into a hhhmm  5,0 format)
      * WRK.Number of Days = PAR.Date - ATR - DB1.AS Last Update Date *DA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WANIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WUMUDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUO6NB
     C                     ELSE
     C           XDURR     MULT -1        WUO6NB
     C                     END
      * WRK.Hours/Minutes         USR = JOB.*Job time - DB1.AS Last Updat
     C                     Z-ADDWABKTM    XTTIM2
     C                     Z-ADD##JTM     XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       WUG9NX
     C                     ADD  XTNN      WUG9NX
     C                     MULT XSGN      WUG9NX
      * Compute: Days elapsed
      * WRK.Days Elapsed in Hours USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : WRK.Number of Days
      * *     : WRK.Days Elapsed in Hours USR = WRK.Number of Days * CON.
      * x2    : CON.24
      * *     : PGM.*Synon (15,0) work field *
      * x3    : CON.100
     C           WUO6NB    MULT 24        WUHCNX           Days Elapsed in
     C           WUHCNX    MULT 100       W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WUHCNX           Days Elapsed in
      * (This stmt doesnt add the minutes correctly, but that's ok! we ju
      * We just want to know how much time has lapsed since the last upd.
     C           WUG9NX    ADD  WUHCNX    WUHANX           Hours/Minutes E
      * Put the db1 hour/minutes into 1 field--  5,0 hhhmm
     C           WAG5NX    MULT 100       WUHBNX           Time Between Co
     C                     ADD  WAG8NX    WUHBNX           Time Between Co
      * Send Msg if hours/minutes between last update and now is > db1 hr
      * CASE: WRK.Hours/Minutes Elapsed USR GT WRK.Time Between Collctns
     C           WUHANX    IFGT WUHBNX                     *IF
      * Setup message data for message
     C                     MOVELWAAQAA    ZA0001           AS Data Collect
      * Convert AS Last Update Date to display format
      * Convert date
     C           1000000   ADD  WANIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
     C                     Z-ADDWABKTM    ZA0003           AS Last Update
      * Retrieve message Accusort Collection Msg
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2812' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           WUKRTX    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * SND Pager Msg (MPLUS) UP - /UT User Programs  * 
     C                     CALL 'POMSUPC'              90  SND Pager Msg (
     C                     PARM 'PRKASCOL'WQ0003 10        DL List ID
     C                     PARM WUKRTX    WQ0004132        Office Message
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POMSUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * CASE: DB1.AS Data Collection Code is Production
     C           WAAQAA    IFEQ 'PROD'                     *IF
      * CASE: JOB.*Job time is Between 7am and Midnight
     C           ##JTM     IFGE 070000                     *IF
     C           ##JTM     ANDLE235900
      *
     C                     MOVEL*BLANK    WN0001 40        System Value Al
     C                     MOVEL*BLANK    WN0002 10        Pager Name USR
      *
      * Snd Pager Message     IF
      * RTV Alpha Value        RT - Company Values  * 
     C                     EXSR SCRVGN
     C                     MOVELWN0001    WN0002           Pager Name USR
      * Setup message data for message
     C                     MOVELWN0002    ZA0004           Pager Name USR
     C                     MOVEL@CN,01    ZA0005           Pager Msg USR
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR3006' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     99    *
     C                     END
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @MXCPYN                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWAAIC3    WBAIC3           Company Number
     C                     Z-ADD##JDT     WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSB     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUWAST           Production Day
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBWAST    WUWAST           Production Day
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Alpha Value        RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCAIC3           Company Number
     C                     KFLD           WCV8CD           Company Value C
      * Setup key
     C                     Z-ADDWAAIC3    WCAIC3           Company Number
     C                     MOVE *BLANK    WCV8CD           Company Value C
     C                     MOVEL'ASPRDUPL'WCV8CD           Company Value C
      * Establish starting position
     C           KRSSC     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCBXTX    WN0001           System Value Al
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Current System Date
     C                     Z-ADD*ZERO     WUSDTE 155
      * Define work field Current System Time
     C                     Z-ADD*ZERO     WUZHNB 155
      * Define work field Date - ATR
     C                     Z-ADD*ZERO     WUMUDT  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAG5NX           AS Hours Betwee
     C                     Z-ADD*ZERO     WAG8NX           AS Minutes Btwn
     C                     Z-ADD*ZERO     WANIDT           AS Last Update
     C                     Z-ADD*ZERO     WABKTM           AS Last Update
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Production Day Status
     C                     MOVEL*BLANK    WUWAST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WBCQNB           Julian Date
     C                     Z-ADD*ZERO     WBESNB           Accounting Year
     C                     Z-ADD*ZERO     WBETNB           Accounting Peri
     C                     Z-ADD*ZERO     WBBZNB           OM Week
     C                     Z-ADD*ZERO     WBEINB           Week Number
     C                     Z-ADD*ZERO     WBAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WBOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WBNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WBNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WBOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WBOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Number of Days
     C                     Z-ADD*ZERO     WUO6NB  50
      * Define work field Hours/Minutes         USR
     C                     Z-ADD*ZERO     WUG9NX  50
      * Define work field Days Elapsed in Hours USR
     C                     Z-ADD*ZERO     WUHCNX  50
      * Define work field Hours/Minutes Elapsed USR
     C                     Z-ADD*ZERO     WUHANX  50
      * Define work field Time Between Collctns USR
     C                     Z-ADD*ZERO     WUHBNX  50
      * Define work field Office Message USR
     C                     MOVEL*BLANK    WUKRTX132
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCM8NB           System Value Nu
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 400-200-000
