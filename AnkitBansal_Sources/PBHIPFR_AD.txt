// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBHIPFR
// ?Date: 14.08.2025 Time: 12:03:28
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.Print Yes/No          USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print (Yes/No) USR = CND.No
WRK.Print_Yes_No_USR = 'N';

//?USER: Process after print of first page format

// WRK.Yes/No Selection      USR = CND.Yes
WRK.Yes_No_Selection_USR = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Ship To Customer header format

// SUPPRESSED PRINT Scheduled Ship Date header format

//?USER: On print of detail format

CASE;

// IF DB1.Ship To State Code is Not International
IF DB1.Ship_To_State_Code <> '.';

// AND DB1.Ship To State Code is NE Ontario
AND DB1.Ship_To_State_Code <> 'ON';

// AND DB1.Ship To State Code is NE QB
AND DB1.Ship_To_State_Code <> 'QB';

// LCL.MPR Country = CND.USA
LCL.MPR_Country = 'USA';

// LCL.Text USR 5 = DB1.Ship To Zip/Postal Code
LCL.Text_USR_5 = DB1.Ship_To_Zip_Postal_Code;

// LCL.MPR Zip Code = CVTVAR(LCL.Text USR 5)
LCL.MPR_Zip_Code = CVTVAR(LCL.Text_USR_5);

EXECUTE FUNCTION(Rtv Rate per Zip      RT) TYPE(RTVOBJ) FILE(PBARCPP)           AC2056566;
PARAMETER(LCL.MPR_Country);
PARAMETER(DB1.Ship_To_State_Code);
PARAMETER(LCL.MPR_Zip_Code);
PARAMETER(LCL.MPR_FOB_Rate_per_Mile);
PARAMETER(LCL.MPR_FOB_Miles_to_Omaha);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.MPR FOB Miles to Omaha is Not Entered
IF LCL.MPR_FOB_Miles_to_Omaha = *ZERO;

// PGM.*Print format = CND.Print format
PGM.*Print_format = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Scheduled Ship Date totals format

// SUPPRESSED PRINT Ship To Customer totals format

// SUPPRESSED PRINT Company Number totals format

