// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLB5DFR
// ?Date: 14.08.2025 Time: 02:53:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

// LCL.Display Print Prompt  Usr = CND.Prompt is to be displayed
LCL.Display_Print_Prompt_Usr = 'Y';

// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?E2423 Transportation office must be from the list of conditions
//?USER: Initialize subfile control

CASE;

// IF PAR.Oms Allow Multi-Company is Yes
IF PAR.Oms_Allow_Multi_Company = 'Y';

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// CTL.CC Company Number = WRK.CC Company Number
CTL.CC_Company_Number = WRK.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.CC Company Number = WRK.CC Company Number
CTL.CC_Company_Number = WRK.CC_Company_Number;

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?Get the MTech Live Yes or No
DO;

//?Mtech Live Yes or no
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(CTL.CC_Company_Number);
PARAMETER('MTECHLIVE');
PARAMETER(WRK.System_Value_Alpha_USR);

// LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

ENDDO;

//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(Rtv Delv Sched Hd/day RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1245575;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(RCD.Scheduled_Head_USR);
{
 //?USER: Initialize routine

 // PAR.Scheduled Head USR = CON.*ZERO
 PAR.Scheduled_Head_USR = *ZERO;

 //?USER: Process Data record

 // PAR.Scheduled Head USR = PAR.Scheduled Head USR + DB1.DSD Scheduled Delv Head
 PAR.Scheduled_Head_USR = PAR.Scheduled_Head_USR + DB1.DSD_Scheduled_Delv_Head;

}


// RCD.DIFF Total Head = RCD.DSH Planned Kill Head - RCD.Scheduled Head USR
RCD.DIFF_Total_Head = RCD.DSH_Planned_Kill_Head - RCD.Scheduled_Head_USR;

// RCD.Condition Name USR = Condition name of RCD.DSH Status
RCD.Condition_Name_USR = RTVCND(RCD.DSH_Status);

//?USER: Process subfile control (Pre-confirm)

//?E2423 Remove select program on Transportation
//?E2423 Remove valadation program on transportation
// CTL.HPS Trans Ofc Desc USR = Condition name of CTL.DSD Transportation Office
CTL.HPS_Trans_Ofc_Desc_USR = RTVCND(CTL.DSD_Transportation_Office);

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF LCL.MTech Live Yes or No is No MTech not Live
IF LCL.MTech_Live_Yes_or_No = 'N';

//?5=WW Assign Farm/Bldg
CASE;

// IF RCD.*SFLSEL is *Work With/Display
IF RCD.*SFLSEL = '5';

// Call program WW Assign Farm/Bldg   DF.
CALL PROGRAM(WW Assign Farm/Bldg   DF) ('PLB6DFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(RCD.DSH_Planned_Kill_Head);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?8=WW Edit Transportation Info
CASE;

// IF RCD.*SFLSEL is *Option 8 request
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF CTL.DSD Transportation Office is *ALL values
IF CTL.DSD_Transportation_Office = 'COLO'/'HENN'/'LEOTI'/'OK/KS'/*BLANK/'IOWA';

// Call program WW Transportation Info DF.
CALL PROGRAM(WW Transportation Info DF) ('PLCADFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(CTL.DSD_Transportation_Office);
PARAMETER(RCD.DSH_Planned_Kill_Head);

// IF *OTHERWISE
IF *OTHERWISE;

//?E2423 Transportation must be one of the conditions
// Send error message - 'Transportation Office is required for this option.'
ERROR(PRK1073);
MSGPARM(CTL.DSD_Transportation_Office);

ENDIF;

ENDIF;

//?6=Print
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6';

CASE;

// IF LCL.Display Print Prompt  Usr is Prompt is to be displayed
IF LCL.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options WEB XF.
CALL PROGRAM(Pmt Print Options WEB XF) ('POT2PVR');
PARAMETER('Print Delivery Schedule');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('HPE');

// LCL.Display Print Prompt  Usr = CND.Do not display prompt
LCL.Display_Print_Prompt_Usr = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('PRTDELVSCH');
PARAMETER(*JOBD);
PARAMETER(*JOBD_JOBD_JOBD);
PARAMETER(*NO);

// Call program Prt Delivery Schedule CL.
SBMJOB;
CALL PROGRAM(Prt Delivery Schedule CL) ('PLBZUPR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
SBMJOBEND;

// Send information message - 'Delivery Schedule printed for &1'
MESSAGE(PRK1055 *INFO);
MSGPARM(RCD.DSH_Kill_Date);

ENDIF;

ENDIF;

// IF LCL.MTech Live Yes or No is Yes MTech is Live
IF LCL.MTech_Live_Yes_or_No = 'Y';

//?OPTION FROM PROGAM NOT ALLOWED IF LIVE WITH MTECH
ENDIF;

//?USER: Final processing (Pre-confirm)

// LCL.Display Print Prompt  Usr = CND.Prompt is to be displayed
LCL.Display_Print_Prompt_Usr = 'Y';

