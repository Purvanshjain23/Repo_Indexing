// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POQFPVR
// ?Date: 14.08.2025 Time: 03:38:29
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC pfs019 9/12/06 90+ changed to 120+
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// DTL.Company Number = PAR.Company Number
DTL.Company_Number = PAR.Company_Number;

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

// DTL.Production Date RGF = CON.*ZERO
DTL.Production_Date_RGF = *ZERO;

// DTL.Production Date RGT = CON.*ZERO
DTL.Production_Date_RGT = *ZERO;

// DTL.Production AgeDte Fr = CON.*ZERO
DTL.Production_AgeDte_Fr = *ZERO;

// DTL.Production AgeDte To = CON.*ZERO
DTL.Production_AgeDte_To = *ZERO;

ENDIF;

//?CALC: Screen function fields

//?CURRENT PRODUCTION
// DTL.Production Date RGF = CON.*ZERO
DTL.Production_Date_RGF = *ZERO;

// DTL.Production Date RGT = CON.*ZERO
DTL.Production_Date_RGT = *ZERO;

EXECUTE FUNCTION(CLC PA Age LimitsBefSavIF) TYPE(EXCINTFUN)                     AC1987099;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Fresh_Chilling_Time);
PARAMETER(DTL.Scheduled_Ship_Date);
PARAMETER(DTL.Age_Code);
PARAMETER(DTL.Production_Date_RGF);
PARAMETER(DTL.Production_Date_RGT);
{
 //?Execute internal function

 // WRK.Day NBR USR = CON.*ZERO
 WRK.Day_NBR_USR = *ZERO;

 //?04/27/09 FP1054 include sundays when calc RGT
 //?04/15/09 FP1054 split up H and I codes and make I = 2 yrs
 //?04/10/07 Effective 04/23/07 representation of Age Code changes
 //?         will be such that Age Code A will be 0 day for boxes
 //?         and combos.  The labels on the cartons will not print
 //?         a date that is offset by Sunday or Holiday.  Instead of
 //?         Code Date, it will be the Pack Date.
 //?Production Date RGT and Production Date RGF
 CASE;

 // IF PAR.Chilling Time is Not Entered
 IF PAR.Fresh_Chilling_Time = *ZERO;

 // PAR.Production Date RGT = PAR.Ship Date USR
 PAR.Production_Date_RGT = PAR.Ship_Date_USR;

 //?Production Date RGF
 CASE;

 // IF PAR.Age Code is A: 0 Day
 IF PAR.Age_Code = 'A';

 // PAR.Production Date RGF = PAR.Production Date RGT
 PAR.Production_Date_RGF = PAR.Production_Date_RGT;

 //?Production Date RGF
 // IF PAR.Age Code is B: 1 Day
 IF PAR.Age_Code = 'B';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-1' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is C: 2 Day
 IF PAR.Age_Code = 'C';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-2' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is D: 3 Day
 IF PAR.Age_Code = 'D';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-3' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is E: 4 Day
 IF PAR.Age_Code = 'E';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-4' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is F: 5 Day
 IF PAR.Age_Code = 'F';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-5' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is G: 6 Day
 IF PAR.Age_Code = 'G';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-6' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is H: 7 Days to 119 Days
 IF PAR.Age_Code = 'H';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-119' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is I: 120 Days +
 IF PAR.Age_Code = 'I';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-730' 'DY' 1111111 'NONE' 'N' 1);

 ENDIF;

 //?Production Date RGT and Production Date RGF
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Fresh Chilling Time = PAR.Fresh Chilling Time * CON.-1 *
 LCL.Fresh_Chilling_Time = PAR.Fresh_Chilling_Time * -1;

 // PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling Time *DAYS
 PAR.Production_Date_RGT = DATEINCR(PAR.Ship_Date_USR LCL.Fresh_Chilling_Time 'DY'
 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 CASE;

 // IF PAR.Age Code is A: 0 Day
 IF PAR.Age_Code = 'A';

 //?04/10/07 PKD We should not have chilled orders with A Age Code.
 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-1' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is B: 1 Day
 IF PAR.Age_Code = 'B';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-1' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is C: 2 Day
 IF PAR.Age_Code = 'C';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-2' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is D: 3 Day
 IF PAR.Age_Code = 'D';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-3' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is E: 4 Day
 IF PAR.Age_Code = 'E';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-4' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is F: 5 Day
 IF PAR.Age_Code = 'F';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-5' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is G: 6 Day
 IF PAR.Age_Code = 'G';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-6' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is H: 7 Days to 119 Days
 IF PAR.Age_Code = 'H';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-119' 'DY' 1111111 'NONE' 'N' 1);

 //?Production Date RGF
 // IF PAR.Age Code is I: 120 Days +
 IF PAR.Age_Code = 'I';

 // PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
 PAR.Production_Date_RGF = DATEINCR(PAR.Ship_Date_USR '-730' 'DY' 1111111 'NONE' 'N' 1);

 ENDIF;

 ENDIF;

}


//?FP1309
// DTL.Production AgeDte Fr = CON.*ZERO
DTL.Production_AgeDte_Fr = *ZERO;

// DTL.Production AgeDte To = CON.*ZERO
DTL.Production_AgeDte_To = *ZERO;

// LCL.Chilling Time USR = DTL.Fresh Chilling Time
LCL.Chilling_Time_USR = DTL.Fresh_Chilling_Time;

// Call program CLC PA Age FrmToDates XF.
CALL PROGRAM(CLC PA Age FrmToDates XF) ('PNO7XFR');
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Chilling_Time_USR);
PARAMETER(DTL.Scheduled_Ship_Date);
PARAMETER(DTL.Requested_Delivery_Date);
PARAMETER(DTL.Item_Age_Days);
PARAMETER(DTL.Production_Ovr_AgeDte_Fr);
PARAMETER(DTL.Production_Ovr_AgeDte_To);
PARAMETER(DTL.Production_AgeDte_Fr);
PARAMETER(DTL.Production_AgeDte_To);

