      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Fees and Payments
      * PROGRAM:     TF354 - Inventory: Workfile-Sales Timing Allocation Detail DWL/Report
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     11/12/10
      *
      * FUNCTION:    Build a workfile of the Sales Timing Allocation Detail for the DWL/Report
      *              function.
      *
      **********************************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel1  if   e           k disk
      *  Item default
      *
      *
     Ftfp151    if   e           k disk
      *    Sales timing allocation detail
      *
      *
     Ftfp354    o    e           k disk
      *    Workfile: Sales timing allocation detail report/DWL
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svwedt          s                   like(tdwedt)
     D svwbdt          s                   like(tdwedt)
     D svyr            s                   like(tdyr)
     D svwk            s                   like(tdwk)
      *
      *
      * Workfields for exceptions
      *
     D wkam            s                   like(w1texpuam)
      *
      *
      * Workfields for accumulating totals
      *
     D wksicactam      s                   like(w1ticactam)
     D wkticactam      s                   like(w1ticactam)
     D wkaicactam      s                   like(w1ticactam)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldwedt                29     36  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************************************
      * Mainline
      ****************************************************************************************
      *
      * Read all the Sales Timing Allocation Detail records for this Week.
      * Write a Workfile record for each record read.
      * Accumulate values for writing a "total" record.
      *
     C     ldwedt        setll     tfp151
      *
     C                   dou       *in90 = *on                                  Main do
     C     ldwedt        reade     tfp151                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Save date values for writing the 'total' record at EOF.
      *
     C                   if        first = yes
     C                   move      no            first
     C                   z-add     tdwbdt        svwbdt
     C                   z-add     tdwedt        svwedt
     C                   z-add     tdyr          svyr
     C                   z-add     tdwk          svwk
     C                   endif
      *
      * Detail processing
     C                   exsr      $wrt354
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing...write a 'total' record
      *
     C                   exsr      $total
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------
      * Write the workfile record for the Item
      *----------------------------------------------------------------
      *
     C     $wrt354       begsr
      *
     C                   z-add     tdwbdt        w1wbdt
     C                   z-add     tdwedt        w1wedt
     C                   z-add     tdyr          w1yr
     C                   z-add     tdwk          w1wk
      *
      * Retrieve Product Description
      *
     C     tdprcd        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If ok
     C                   move(p)   byavna        w1prds
     C                   endif
      *
     C                   z-add     tdprcd        w1prcd
     C                   move      tditycd       w1itycd
     C                   move      tdrcexfl      w1rcexfl
     C                   move      tdinvfl       w1invfl
     C                   move      tdcoownfl     w1coownfl
      *
      *         Seaboard
     C                   z-add     tdseiam       w1seiam
     C                   z-add     tdsnpram      w1snpram
     C                   z-add     tdspuam       w1spuam
     C                   z-add     tdsbiam       w1sbiam
     C                   z-add     tdsexnpram    w1sexnpram
     C                   z-add     tdsexpuam     w1sexpuam
      *
      *        Triumph
     C                   z-add     tdteiam       w1teiam
     C                   z-add     tdtnpram      w1tnpram
     C                   z-add     tdtpuam       w1tpuam
     C                   z-add     tdtbiam       w1tbiam
     C                   z-add     tdtexnpram    w1texnpram
     C                   z-add     tdtexpuam     w1texpuam
      *
      * Calc: Inventory Change Actual dollars as:
      *         Ending Inventory Amount
      *       + Net Product Revenue Amount
      *       - Produced Value Amount
      *       - Beginning Inventory Amount
      *       + Exception Net Product Revenue Amount
      *       - Exception Produced Value Amount
      *
      *       The users use this detail listing to 'prove' the dollars in TFP051.
      *       So, for the "Exception" values, I match the half-adjust logic used
      *       in TF251 to build the files.
      *
      *         Seaboard
     C                   add       tdseiam       w1sicactam
     C                   add       tdsnpram      w1sicactam
     C                   sub       tdspuam       w1sicactam
     C                   sub       tdsbiam       w1sicactam
      *
     C                   z-add     tdsexnpram    wkam
     C                   sub       tdsexpuam     wkam
     C                   add(h)    wkam          w1sicactam
     C
      *        Triumph
     C                   add       tdteiam       w1ticactam
     C                   add       tdtnpram      w1ticactam
     C                   sub       tdtpuam       w1ticactam
     C                   sub       tdtbiam       w1ticactam
      *
     C                   z-add     tdtexnpram    wkam
     C                   sub       tdtexpuam     wkam
     C                   add(h)    wkam          w1ticactam
      *
      *        Aggregate
      *
     C     w1sicactam    add       w1ticactam    w1aicactam
      *
      * Accumulate totals for writing a 'total' record at EOF.
      *
     C                   add       w1sicactam    wksicactam
     C                   add       w1ticactam    wkticactam
     C                   add       w1aicactam    wkaicactam
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------
      * Write a "total" record...for the Inventory Change Actual columns
      *----------------------------------------------------------------------------
      *
     C     $total        begsr
      *
     C                   z-add     svwbdt        w1wbdt
     C                   z-add     svwedt        w1wedt
     C                   z-add     svyr          w1yr
     C                   z-add     svwk          w1wk
      *
     C                   eval      w1prds = 'Inventory Change Actual Amount'
      *
     C                   z-add     wksicactam    w1sicactam
     C                   z-add     wkticactam    w1ticactam
     C                   z-add     wkaicactam    w1aicactam
      *
     C                   write     w1rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      *
