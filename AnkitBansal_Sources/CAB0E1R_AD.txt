// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAB0E1R
// ?Date: 14.08.2025 Time: 03:28:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E2438 2/19/13 RMC Req default sales channel- Seaboard foods only
EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
PARAMETER(LCL.Company_Organization);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Set to add mode if no salesperson # passed in
CASE;

// IF PAR.Salesperson Code is not entered
IF PAR.Salesperson_Code = *BLANK;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?USER: Initialize detail screen (existing record)

EXECUTE FUNCTION(Rtv All Field & sls chnRT) TYPE(RTVOBJ) FILE(PDNFREP)          AC2061372;
PARAMETER(DB1.Salesperson_Code);
PARAMETER(DTL.Email_Address);
PARAMETER(DTL.Availability_Group_Code);
PARAMETER(DTL.CB_Grouping_Code);
PARAMETER(DTL.SEC_Default_Sales_Channel);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Sales Type Desc    RT) TYPE(RTVOBJ) FILE(OME7REP)          AC1280866;
PARAMETER(DB1.Sales_Type_Code);
PARAMETER(DTL.Sales_Type_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(DB1.State_Code);
PARAMETER(DTL.Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Type Code Desc.    RT) TYPE(RTVOBJ) FILE(CAAJREP)          AC1249965;
PARAMETER(DTL.SEC_Default_Sales_Channel);
PARAMETER(DTL.Condition_Desc_1_USR);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Validate detail screen fields

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

ENDIF;

//?F4
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Availability Group Code
IF PGM.*Cursor_field = DTL.Availability_Group_Code;

// Call program SEL Avail Group        SR.
CALL PROGRAM(SEL Avail Group        SR) ('PDDVSRR');
PARAMETER(DTL.Availability_Group_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.SEC Default Sales Channel
IF PGM.*Cursor_field = DTL.SEC_Default_Sales_Channel;

// Call program SEL Type Codes         SR.
CALL PROGRAM(SEL Type Codes         SR) ('CABVSRR');
PARAMETER(DTL.SEC_Default_Sales_Channel);

ENDIF;

ENDIF;

// DTL.Condition Desc. 1  USR = CON.*BLANK
DTL.Condition_Desc_1_USR = *BLANK;

CASE;

// IF DTL.SEC Default Sales Channel is Entered
IF DTL.SEC_Default_Sales_Channel <> *BLANK;

EXECUTE FUNCTION(RTV Type Code Desc.    RT) TYPE(RTVOBJ) FILE(CAAJREP)          AC1249965;
PARAMETER(DTL.SEC_Default_Sales_Channel);
PARAMETER(DTL.Condition_Desc_1_USR);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

CASE;

// IF LCL.Company Organization is Seaboard
IF LCL.Company_Organization = 'S';

CASE;

// IF DTL.Condition Desc. 1  USR is Not Entered
IF DTL.Condition_Desc_1_USR = *BLANK;

// Send error message - 'Type Code &1 Not Found'
ERROR(USR3388);
MSGPARM(DTL.SEC_Default_Sales_Channel);

ENDIF;

ENDIF;

//?USER: Validate detail screen relations

EXECUTE FUNCTION(RTV Sales Type Desc    RT) TYPE(RTVOBJ) FILE(OME7REP)          AC1280866;
PARAMETER(DTL.Sales_Type_Code);
PARAMETER(DTL.Sales_Type_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(DTL.State_Code);
PARAMETER(DTL.Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Create DBF record

EXECUTE FUNCTION(CRT Salesperson        CR) TYPE(CRTOBJ) FILE(CAAPREP)          AC1102315;
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.Salesperson_Name);
PARAMETER(DTL.Address_Line_1);
PARAMETER(DTL.Address_Line_2);
PARAMETER(DTL.Address_Line_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State_Code);
PARAMETER(DTL.Zip_Postal_Code);
PARAMETER(DTL.Telephone_Number_FF);
PARAMETER(DTL.Fax_Number_FF);
PARAMETER(DTL.Salesmen_Car_Phone);
PARAMETER(DTL.Salesmen_Home_Phone);
PARAMETER(DTL.Salesmen_Work_Phone);
PARAMETER(DTL.AP_Vendor_Number);
PARAMETER(DTL.Sales_Type_Code);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.SH_Expense_Bucket);
PARAMETER(DTL.G_L_Sub_Account);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Email_Address);
PARAMETER(DTL.Availability_Group_Code);
PARAMETER(DTL.CB_Grouping_Code);
PARAMETER(DTL.SEC_Default_Sales_Channel);
{
 //?USER: Processing before Data update

 //?Create Salesperson Electronic Commerce file.
 EXECUTE FUNCTION(Crt Salesperson Elec   CR) TYPE(CRTOBJ) FILE(PDNFREP)          AC1570231;
 PARAMETER(DB1.Salesperson_Code);
 PARAMETER(PAR.Email_Address);
 PARAMETER(PAR.Availability_Group_Code);
 PARAMETER(PAR.CB_Grouping_Code);
 PARAMETER(PAR.SEC_Default_Sales_Channel);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG Salesperson        CH) TYPE(CHGOBJ) FILE(CAAPREP)          AC1102316;
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.Salesperson_Name);
PARAMETER(DTL.Address_Line_1);
PARAMETER(DTL.Address_Line_2);
PARAMETER(DTL.Address_Line_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State_Code);
PARAMETER(DTL.Zip_Postal_Code);
PARAMETER(DTL.Telephone_Number_FF);
PARAMETER(DTL.Fax_Number_FF);
PARAMETER(DTL.Salesmen_Car_Phone);
PARAMETER(DTL.Salesmen_Home_Phone);
PARAMETER(DTL.Salesmen_Work_Phone);
PARAMETER(DTL.AP_Vendor_Number);
PARAMETER(DTL.Sales_Type_Code);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.SH_Expense_Bucket);
PARAMETER(DTL.G_L_Sub_Account);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Email_Address);
PARAMETER(DTL.Availability_Group_Code);
PARAMETER(DTL.CB_Grouping_Code);
PARAMETER(DTL.SEC_Default_Sales_Channel);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Val Slsprsn Elec Comm  RT) TYPE(RTVOBJ) FILE(PDNFREP)          AC1570245;
 PARAMETER(DB1.Salesperson_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

 }

 //?Create or change Salesperson Electronic Commerce file.
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(Crt Salesperson Elec   CR) TYPE(CRTOBJ) FILE(PDNFREP)          AC1570231;
 PARAMETER(DB1.Salesperson_Code);
 PARAMETER(PAR.Email_Address);
 PARAMETER(PAR.Availability_Group_Code);
 PARAMETER(PAR.CB_Grouping_Code);
 PARAMETER(PAR.SEC_Default_Sales_Channel);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?Create or change Salesperson Electronic Commerce file.
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Chg Salesperson Elec   CH) TYPE(CHGOBJ) FILE(PDNFREP)          AC1570232;
 PARAMETER(DB1.Salesperson_Code);
 PARAMETER(PAR.Email_Address);
 PARAMETER(PAR.Availability_Group_Code);
 PARAMETER(PAR.CB_Grouping_Code);
 PARAMETER(PAR.SEC_Default_Sales_Channel);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

