// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKL4DFR
// ?Date: 14.08.2025 Time: 02:52:08
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E16428 JJH 04/06/20 - Change Job Queue of BLDPRDCMP
//?- Change Job Queue to TFDIVQ2
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// PAR.Display Print Prompt  Usr = CND.Prompt is to be displayed
PAR.Display_Print_Prompt_Usr = 'Y';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr is Yes
IF WRK.First_Time_Flag_Usr = 'Y';

// CTL.CC Company Number = PAR.CC Company Number
CTL.CC_Company_Number = PAR.CC_Company_Number;

// WRK.First Time Flag Usr = CND.No
WRK.First_Time_Flag_Usr = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

// RCD.Condition Name USR = Condition name of RCD.PCS Comp Process Sts
RCD.Condition_Name_USR = RTVCND(RCD.PCS_Comp_Process_Sts);

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// Call program Edt Prd Comp Sel      ER.
CALL PROGRAM(Edt Prd Comp Sel      ER) ('PKL5E1R');
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.PCS_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Edit
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

CASE;

// IF RCD.PCS Comp Process Sts is Unprocessed
IF RCD.PCS_Comp_Process_Sts = *BLANK;

// Call program Edt Prd Comp Sel      ER.
CALL PROGRAM(Edt Prd Comp Sel      ER) ('PKL5E1R');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option &1 not valid for Status &2.'
ERROR(PRK0771);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.PCS_Comp_Process_Sts);

ENDIF;

ENDIF;

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?5=Display
CASE;

// IF RCD.*SFLSEL is *WW/Display request
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp Prd Comp Sel      DR.
CALL PROGRAM(Dsp Prd Comp Sel      DR) ('PKL6D1R');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?6=Print Comparison
CASE;

// IF RCD.*SFLSEL is *Print request
IF RCD.*SFLSEL = '6'/'6';

CASE;

// IF RCD.PCS Comp Process Sts is Unprocessed
IF RCD.PCS_Comp_Process_Sts = *BLANK;

// Send error message - 'Option &1 not valid for Status &2.'
ERROR(PRK0771);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.PCS_Comp_Process_Sts);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Prt Prcrmnt Comp D,S  PV.
CALL PROGRAM(Prt Prcrmnt Comp D,S  PV) ('PKMBPVR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);
PARAMETER(RCD.PCS_Description);
PARAMETER(RCD.PCS_Comp_Selection_Type);
PARAMETER(RCD.PCS_From_Kill_Date);
PARAMETER(RCD.PCS_To_Kill_Date);
PARAMETER(PAR.Oms_System_Value_Alpha);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?7=Print Damage
CASE;

// IF RCD.*SFLSEL is *Option 7 request
IF RCD.*SFLSEL = '7'/'7';

CASE;

// IF RCD.PCS Comp Process Sts is Unprocessed
IF RCD.PCS_Comp_Process_Sts = *BLANK;

// Send error message - 'Option &1 not valid for Status &2.'
ERROR(PRK0771);
MSGPARM(RCD.*SFLSEL);
MSGPARM(RCD.PCS_Comp_Process_Sts);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Zzz Damage Rep/GM     PV.
CALL PROGRAM(Zzz Damage Rep/GM     PV) ('PKMHPVR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);
PARAMETER(RCD.PCS_Description);
PARAMETER(RCD.PCS_Comp_Selection_Type);
PARAMETER(RCD.PCS_From_Kill_Date);
PARAMETER(RCD.PCS_To_Kill_Date);
PARAMETER(RCD.PCS_Damage_Contract);
PARAMETER(PAR.Oms_System_Value_Alpha);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?9=Submit Producer Comparison
CASE;

// IF RCD.*SFLSEL is Select Option 9
IF RCD.*SFLSEL = '9'/'9';

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('BLDPRDCMP');
PARAMETER('TFDIVQ2');
PARAMETER('4 00 *SECLVL');
PARAMETER(*YES);

CASE;

// IF RCD.PCS Comp Selection Type is Daily
IF RCD.PCS_Comp_Selection_Type = 'DC'/'DD';

// PAR.PCS From Kill Date = CTL.PCS From Kill Date
PAR.PCS_From_Kill_Date = CTL.PCS_From_Kill_Date;

// PAR.PCS To Kill Date = CTL.PCS To Kill Date
PAR.PCS_To_Kill_Date = CTL.PCS_To_Kill_Date;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.PCS From Kill Date is NE Zero
IF CTL.PCS_From_Kill_Date <> *ZERO;

// AND CTL.PCS To Kill Date is NE Zero
AND CTL.PCS_To_Kill_Date <> *ZERO;

// PAR.PCS From Kill Date = CTL.PCS From Kill Date
PAR.PCS_From_Kill_Date = CTL.PCS_From_Kill_Date;

// PAR.PCS To Kill Date = CTL.PCS To Kill Date
PAR.PCS_To_Kill_Date = CTL.PCS_To_Kill_Date;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.PCS From Kill Date = RCD.PCS From Kill Date
PAR.PCS_From_Kill_Date = RCD.PCS_From_Kill_Date;

// PAR.PCS To Kill Date = RCD.PCS To Kill Date
PAR.PCS_To_Kill_Date = RCD.PCS_To_Kill_Date;

ENDIF;

ENDIF;

// Call program Bld Prd Cmp Dtl       XF.
SBMJOB;
CALL PROGRAM(Bld Prd Cmp Dtl       XF) ('PKNZXFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);
PARAMETER(PAR.PCS_From_Kill_Date);
PARAMETER(PAR.PCS_To_Kill_Date);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('N');
SBMJOBEND;

// Send information message - 'Job &1 has been submitted to job queue &2.'
MESSAGE(PRK0813 *INFO);
MSGPARM('BLDPRDCMP');
MSGPARM('TFDIVQ2');

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?10=Print Comparison Carcass Summary/Detail
CASE;

// IF RCD.*SFLSEL is *Option 10 (Reusable)
IF RCD.*SFLSEL = '10';

// Call program Zzz Comp Crc Sum/Dtl  PV.
CALL PROGRAM(Zzz Comp Crc Sum/Dtl  PV) ('PKQVPVR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);
PARAMETER(RCD.PCS_From_Kill_Date);
PARAMETER(RCD.PCS_To_Kill_Date);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?USER: Final processing (Pre-confirm)

// PAR.Display Print Prompt  Usr = CND.Prompt is to be displayed
PAR.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

// Send status message - 'Processing...'
MESSAGE(PRK0957 *STATUS);

// Call program Prg Prod Comparison   XF.
CALL PROGRAM(Prg Prod Comparison   XF) ('PKVKXFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.PCS_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

