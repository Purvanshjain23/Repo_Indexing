     H/TITLE Exc TRG CAB1REP ProcessXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 09/29/22  Time  : 10:47:30
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPUB0CPL0  IF A E           K DISK
      * UPD : Item Balance Detail TRG   Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUB01        E DS                  EXTNAME(PUB0CPL0)
      * UPD : Item Balance Detail TRG   Update index
      * Renamed input format fields
     D  WAAIC3       E                     EXTFLD(B0AIC3)
     D  WAHGCD       E                     EXTFLD(B0HGCD)
     D  WAAJCD       E                     EXTFLD(B0AJCD)
     D  WAELDT       E                     EXTFLD(B0ELDT)
     D  WAA7TS       E                     EXTFLD(B0A7TS)
     D  WAK1SC       E                     EXTFLD(B0K1SC)
     D  WAK2SC       E                     EXTFLD(B0K2SC)
     D  WABODX       E                     EXTFLD(B0BODX)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S              3
     D  WL0004         S              7  0
     D  WL0005         S              1
     D  WL0006         S              2
     D  WL0007         S              8  0
     D  WN0001         S             26
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  YL0001         S             15  5
     D  YL0002         S             15  5
     D  WQ0001         S             15  5
     D  WQ0002         S             15  5
     D  W0CLPG         S             10
     D  WUZHNB         S             15  5
     D  WQ0003         S             15  5
     D  WQ0004         S             15  5
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS           163
      * RCD: Item Balance Detail       Retrieval index       NV
      * I :  Company Number
     D  P1AIC3                 1      2P 0
      * I :  Item Code
     D  P1HGCD                 3      6P 0
      * I :  Warehouse Code
     D  P1AJCD                 7      9
      * I :  Production Date
     D  P1ELDT                10     13P 0
      * I :  Physical Count Weight
     D  P1ABWG                14     19P 2
      * I :  Physical Count Qty UOM1
     D  P1AGQT                20     25P 2
      * I :  Physical Count Qty UOM2
     D  P1AHQT                26     31P 2
      * I :  Physical Count Qty UOM3
     D  P1AIQT                32     37P 2
      * I :  Physical Count Status
     D  P1CTST                38     38
      * I :  Quantity on Hand_Weight
     D  P1ACWG                39     44P 2
      * I :  Quantity on Hand UOM1
     D  P1ARQT                45     50P 2
      * I :  Quantity on Hand UOM2
     D  P1ASQT                51     56P 2
      * I :  Quantity on Hand UOM3
     D  P1ATQT                57     62P 2
      * I :  Quantity In Chill
     D  P1HDQT                63     68P 2
      * I :  Weight In Chill
     D  P1HEQT                69     74P 2
      * I :  Update Exception Status
     D  P1F6ST                75     75
      * I :  Physical Start Weight
     D  P1BMWG                76     81P 2
      * I :  Physical Start UOM1
     D  P1DSQT                82     87P 2
      * I :  Physical Start UOM2
     D  P1DTQT                88     93P 2
      * I :  Physical Start UOM3
     D  P1DUQT                94     99P 2
      * I :  Physical Start Date
     D  P1DHDT               100    103P 0
      * I :  Unit Cost Per Pound
     D  P1AGCS               104    109P 4
      * I :  Last Cost
     D  P1AECS               110    115P 4
      * I :  Value of On Hand Inventor
     D  P1IDVA               116    121P 2
      * I :  Label Date
     D  P1K7DT               122    125P 0
      * I :  Item Structure Class Code
     D  P1RINB               126    127P 0
      * I :  Item Structure Group Code
     D  P1RHNB               128    129P 0
      * I :  Item Structure Type Code
     D  P1RGNB               130    131P 0
      * I :  EDI Status 1
     D  P1UVST               132    132
      * I :  EDI Status 2
     D  P1UWST               133    133
      * I :  EDI Status 3
     D  P1UXST               134    134
      * I :  Record Status
     D  P1VSST               135    135
      * I :  Job Time
     D  P1AATM               136    139P 0
      * I :  User Id
     D  P1AYNA               140    149
      * I :  Job Name
     D  P1A0NA               150    159
      * I :  Job Date
     D  P1AXDT               160    163P 0
     D P2PARM          DS           163
      * RCD: Item Balance Detail       Retrieval index       NV
      * I :  Company Number
     D  P2AIC3                 1      2P 0
      * I :  Item Code
     D  P2HGCD                 3      6P 0
      * I :  Warehouse Code
     D  P2AJCD                 7      9
      * I :  Production Date
     D  P2ELDT                10     13P 0
      * I :  Physical Count Weight
     D  P2ABWG                14     19P 2
      * I :  Physical Count Qty UOM1
     D  P2AGQT                20     25P 2
      * I :  Physical Count Qty UOM2
     D  P2AHQT                26     31P 2
      * I :  Physical Count Qty UOM3
     D  P2AIQT                32     37P 2
      * I :  Physical Count Status
     D  P2CTST                38     38
      * I :  Quantity on Hand_Weight
     D  P2ACWG                39     44P 2
      * I :  Quantity on Hand UOM1
     D  P2ARQT                45     50P 2
      * I :  Quantity on Hand UOM2
     D  P2ASQT                51     56P 2
      * I :  Quantity on Hand UOM3
     D  P2ATQT                57     62P 2
      * I :  Quantity In Chill
     D  P2HDQT                63     68P 2
      * I :  Weight In Chill
     D  P2HEQT                69     74P 2
      * I :  Update Exception Status
     D  P2F6ST                75     75
      * I :  Physical Start Weight
     D  P2BMWG                76     81P 2
      * I :  Physical Start UOM1
     D  P2DSQT                82     87P 2
      * I :  Physical Start UOM2
     D  P2DTQT                88     93P 2
      * I :  Physical Start UOM3
     D  P2DUQT                94     99P 2
      * I :  Physical Start Date
     D  P2DHDT               100    103P 0
      * I :  Unit Cost Per Pound
     D  P2AGCS               104    109P 4
      * I :  Last Cost
     D  P2AECS               110    115P 4
      * I :  Value of On Hand Inventor
     D  P2IDVA               116    121P 2
      * I :  Label Date
     D  P2K7DT               122    125P 0
      * I :  Item Structure Class Code
     D  P2RINB               126    127P 0
      * I :  Item Structure Group Code
     D  P2RHNB               128    129P 0
      * I :  Item Structure Type Code
     D  P2RGNB               130    131P 0
      * I :  EDI Status 1
     D  P2UVST               132    132
      * I :  EDI Status 2
     D  P2UWST               133    133
      * I :  EDI Status 3
     D  P2UXST               134    134
      * I :  Record Status
     D  P2VSST               135    135
      * I :  Job Time
     D  P2AATM               136    139P 0
      * I :  User Id
     D  P2AYNA               140    149
      * I :  Job Name
     D  P2A0NA               150    159
      * I :  Job Date
     D  P2AXDT               160    163P 0
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     I@B0CPHF
      * Item Balance Detail TRG   Update index
      * Renamed input format fields
     I              B0AIC3                      WAAIC3
     I              B0HGCD                      WAHGCD
     I              B0AJCD                      WAAJCD
     I              B0ELDT                      WAELDT
     I              B0A7TS                      WAA7TS
     I              B0K1SC                      WAK1SC
     I              B0K2SC                      WAK2SC
     I              B0BODX                      WABODX
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Item Balan
     C                   PARM                    P2PARM                         RCD: Item Balan
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc TRG CAB1REP ProcessXF
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Crt Item Bal Dtl TRG   CR - Item Balance Detail TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P2AJCD        WL0003                         Warehouse Code
     C                   Z-ADD     P2ELDT        WL0004                         Production Date
     C                   MOVEL(P)  P3D8SC        WL0005                         IBD TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         IBD Process Sta
     C                   Z-ADD     *ZERO         WL0007                         IBD Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
      * Update If Any Non-Key Fields Have Changed.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14OR
      *  - c15ORc16ORc17ORc18OR c19ORc20ORc21ORc22ORc23ORc24ORc25ORc26OR
      *  - c27ORc28
      *   |- c1    : PR1.Physical Count Weight NE PR2.Physical Count Weig
      *   |- c2    : PR1.Physical Count Qty - U/M1 NE PR2.Physical Count
      *   |- c3    : PR1.Physical Count Qty - U/M2 NE PR2.Physical Count
      *   |- c4    : PR1.Physical Count Qty - U/M3 NE PR2.Physical Count
      *   |- c5    : PR1.Physical Count Status NE PR2.Physical Count Stat
      *   |- c6    : PR1.Quantity on Hand - Weight NE PR2.Quantity on Han
      *   |- c7    : PR1.Quantity on Hand - U/M1 NE PR2.Quantity on Hand
      *   |- c8    : PR1.Quantity on Hand - U/M2 NE PR2.Quantity on Hand
      *   |- c9    : PR1.Quantity on Hand - U/M3 NE PR2.Quantity on Hand
      *   |- c10   : PR1.Quantity In Chill NE PR2.Quantity In Chill
      *   |- c11   : PR1.Weight In Chill NE PR2.Weight In Chill
      *   |- c12   : PR1.Update Exception Status NE PR2.Update Exception
      *   |- c13   : PR1.Physical Start Weight NE PR2.Physical Start Weig
      *   |- c14   : PR1.Physical Start U/M1 NE PR2.Physical Start U/M1
      *   |- c15   : PR1.Physical Start U/M2 NE PR2.Physical Start U/M2
      *   |- c16   : PR1.Physical Start U/M3 NE PR2.Physical Start U/M3
      *   |- c17   : PR1.Physical Start Date NE PR2.Physical Start Date
      *   |- c18   : PR1.Unit Cost Per Pound NE PR2.Unit Cost Per Pound
      *   |- c19   : PR1.Last Cost NE PR2.Last Cost
      *   |- c20   : PR1.Value of On Hand Inventor NE PR2.Value of On Han
      *   |- c21   : PR1.Label Date NE PR2.Label Date
      *   |- c22   : PR1.Item Structure Class Code NE PR2.Item Structure
      *   |- c23   : PR1.Item Structure Group Code NE PR2.Item Structure
      *   |- c24   : PR1.Item Structure Type Code NE PR2.Item Structure T
      *   |- c25   : PR1.EDI Status 1 NE PR2.EDI Status 1
      *   |- c26   : PR1.EDI Status 2 NE PR2.EDI Status 2
      *   |- c27   : PR1.EDI Status 3 NE PR2.EDI Status 3
      *   |- c28   : PR1.Record Status NE PR2.Record Status
      *   '-
     C                   IF        P3D8SC = '3'
      * Crt Item Bal Dtl TRG   CR - Item Balance Detail TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P1ABWG <> P2ABWG OR
     C                             P1AGQT <> P2AGQT OR
     C                             P1AHQT <> P2AHQT OR
     C                             P1AIQT <> P2AIQT OR
     C                             P1CTST <> P2CTST OR
     C                             P1ACWG <> P2ACWG OR
     C                             P1ARQT <> P2ARQT OR
     C                             P1ASQT <> P2ASQT OR
     C                             P1ATQT <> P2ATQT OR
     C                             P1HDQT <> P2HDQT OR
     C                             P1HEQT <> P2HEQT OR
     C                             P1F6ST <> P2F6ST OR
     C                             P1BMWG <> P2BMWG OR
     C                             P1DSQT <> P2DSQT OR
     C                             P1DTQT <> P2DTQT OR
     C                             P1DUQT <> P2DUQT OR
     C                             P1DHDT <> P2DHDT OR
     C                             P1AGCS <> P2AGCS OR
     C                             P1AECS <> P2AECS OR
     C                             P1IDVA <> P2IDVA OR
     C                             P1K7DT <> P2K7DT OR
     C                             P1RINB <> P2RINB OR
     C                             P1RHNB <> P2RHNB OR
     C                             P1RGNB <> P2RGNB OR
     C                             P1UVST <> P2UVST OR
     C                             P1UWST <> P2UWST OR
     C                             P1UXST <> P2UXST OR
     C                             P1VSST <> P2VSST
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P2AJCD        WL0003                         Warehouse Code
     C                   Z-ADD     P2ELDT        WL0004                         Production Date
     C                   MOVEL(P)  P3D8SC        WL0005                         IBD TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         IBD Process Sta
     C                   Z-ADD     *ZERO         WL0007                         IBD Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Crt Item Bal Dtl TRG   CR - Item Balance Detail TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   Z-ADD     P1HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P1AJCD        WL0003                         Warehouse Code
     C                   Z-ADD     P1ELDT        WL0004                         Production Date
     C                   MOVEL(P)  P3D8SC        WL0005                         IBD TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         IBD Process Sta
     C                   Z-ADD     *ZERO         WL0007                         IBD Process Dat
     C                   EXSR      SACRRC
      * W109570 DN 09/29/22-If Record Already Exist.
      * CASE: PGM.*Return code is *Record already exists
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   IF        W0RTN = @CN(002)
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0001                         Current System
     C     YL0002        PARM      *ZERO         WQ0002                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     YL0002        WUZHNB                         Current System
      * Loop Until System Time Changes.
      * DO WHILE: LCL.Current System Time EQ WRK.Current System Time
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                   DOW       YL0002 = WUZHNB
     C                   CALL      'PDGFUPC'                            90      RTV System Date
     C     YL0001        PARM      *ZERO         WQ0003                         Current System
     C     WUZHNB        PARM      *ZERO         WQ0004                         Current System
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *ITR
      * Crt Item Bal Dtl TRG   CR - Item Balance Detail TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   Z-ADD     P1HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P1AJCD        WL0003                         Warehouse Code
     C                   Z-ADD     P1ELDT        WL0004                         Production Date
     C                   MOVEL(P)  P3D8SC        WL0005                         IBD TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         IBD Process Sta
     C                   Z-ADD     *ZERO         WL0007                         IBD Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Crt Item Bal Dtl TRG   CR - Item Balance Detail TRG  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0001                         IBD Timestamp
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @B0CPHF
     C                   Z-ADD     WL0001        WAAIC3                         Company Number
     C                   Z-ADD     WL0002        WAHGCD                         Item Code
     C                   MOVEL     WL0003        WAAJCD                         Warehouse Code
     C                   Z-ADD     WL0004        WAELDT                         Production Date
     C                   MOVEL     WL0005        WAK1SC                         IBD TRG Databas
     C                   MOVEL     WL0006        WAK2SC                         IBD Process Sta
     C                   Z-ADD     WL0007        WABODX                         IBD Process Dat
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WAA7TS                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WAHGCD                         Item Code
     C                   KFLD                    WAAJCD                         Warehouse Code
     C                   KFLD                    WAELDT                         Production Date
     C                   KFLD                    WAA7TS                         IBD Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @B0CPHF                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5181'     W0RTN
      * Send message 'Item Balance Detail TR EX'
     C                   MOVEL     'USR5181'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @B0CPHF                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WAELDT                         Production Date
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WAA7TS                         IBD Timestamp
     C                   Z-ADD     *ZERO         WABODX                         IBD Process Dat
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field Current System Time
     C                   Z-ADD     *ZERO         WUZHNB
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   EVAL      WL0003 = ' '
     C                   Z-ADD     *ZERO         WL0004
     C                   EVAL      WL0005 = ' '
     C                   EVAL      WL0006 = ' '
     C                   Z-ADD     *ZERO         WL0007
      * Define local work field Current System Date
     C                   Z-ADD     *ZERO         YL0001
      * Define local work field Current System Time
     C                   Z-ADD     *ZERO         YL0002
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
00002 Y2U0003
