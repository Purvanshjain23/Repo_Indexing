// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDTDXFR
// ?Date: 14.08.2025 Time: 03:36:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(WRK.Current_System_Date);
PARAMETER(WRK.Current_System_Time);

// WRK.Date - ATR = WRK.Current System Date
WRK.Date_ATR = WRK.Current_System_Date;

EXECUTE FUNCTION(Rtv Clc Last Dt Cllctn RT) TYPE(RTVOBJ) FILE(PDMXCPP)          AC1547068;
PARAMETER(WRK.Date_ATR);
{
 //?USER: Process Data record

 //?See if elapsed time s/b calc'd and msg should be sent
 CASE;

 // IF DB1.AS Data Collection Code is Production
 IF DB1.AS_Data_Collection_Code = 'PROD';

 //?Only send msg for Prod collection code if it's a Production Day
 EXECUTE FUNCTION(Rtv Prd Day Sts       RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1393177;
 PARAMETER(DB1.Company_Number);
 PARAMETER(JOB.*Job_date);
 PARAMETER(WRK.Production_Day_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?See if elapsed time s/b calc'd and msg should be sent
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Do all the time for other Collection codes
 // WRK.Production Day Status = CND.yes
 WRK.Production_Day_Status = 'Y';

 ENDIF;

 //?Calc the elapsed time and send the msg
 CASE;

 // IF WRK.Production Day Status is yes
 IF WRK.Production_Day_Status = 'Y';

 //?Calculate the hour/minutes between the last update and now.
 //?Add the elapsed hhmm to the ((elapsed days * 24 hrs) * 100))
 //?  ( Do the * 100 to get the days into a hhhmm  5,0 format)
 // WRK.Number of Days = PAR.Date - ATR - DB1.AS Last Update Date *DAYS
 WRK.Number_of_Days = DURATION(PAR.Date_ATR DB1.AS_Last_Update_Date 'DY' 1111111 'NONE'
 'N' 1);

 // WRK.Hours/Minutes         USR = JOB.*Job time - DB1.AS Last Update Time *HHMM
 WRK.Hours_Minutes_USR = TIMELAPSED(JOB.*Job_time DB1.AS_Last_Update_Time 'HM');

 // Compute: Days elapsed
 WRK.Days_Elapsed_in_Hours_USR = ( WRK.Number_of_Days * 24 ) * 100;

 //?(This stmt doesnt add the minutes correctly, but that's ok! we just want
 //?We just want to know how much time has lapsed since the last upd.)
 // WRK.Hours/Minutes Elapsed USR = WRK.Hours/Minutes         USR + WRK.Days Elapsed
 WRK.Hours_Minutes_Elapsed_USR = WRK.Hours_Minutes_USR + WRK.Days_Elapsed_in_Hours_USR;

 //?Put the db1 hour/minutes into 1 field--  5,0 hhhmm
 // WRK.Time Between Collctns USR = DB1.AS Hours Between Cllctns * CON.100 *
 WRK.Time_Between_Collctns_USR = DB1.AS_Hours_Between_Cllctns * 100;

 // WRK.Time Between Collctns USR = WRK.Time Between Collctns USR + DB1.AS Minutes B
 WRK.Time_Between_Collctns_USR = WRK.Time_Between_Collctns_USR
 + DB1.AS_Minutes_Btwn_Cllctns;

 //?Send Msg if hours/minutes between last update and now is > db1 hrs, min
 CASE;

 // IF WRK.Hours/Minutes Elapsed USR GT WRK.Time Between Collctns USR
 IF WRK.Hours_Minutes_Elapsed_USR > WRK.Time_Between_Collctns_USR;

 // Retrieve message - 'Accusort Collection for &1 not run since &2 &3'
 WRK.Office_Message_USR = RTVMSG(USR2812);
 PARAMETER(DB1.AS_Data_Collection_Code);
 PARAMETER(DB1.AS_Last_Update_Date);
 PARAMETER(DB1.AS_Last_Update_Time);

 // Call program SND Pager Msg (MPLUS) UP.
 CALL PROGRAM(SND Pager Msg (MPLUS) UP) ('POMSUPC');
 PARAMETER('PRKASCOL');
 PARAMETER(WRK.Office_Message_USR);

 CASE;

 // IF DB1.AS Data Collection Code is Production
 IF DB1.AS_Data_Collection_Code = 'PROD';

 CASE;

 // IF JOB.*Job time is Between 7am and Midnight
 IF JOB.*Job_time >= 070000;
 AND JOB.*Job_time <= 235900;

 EXECUTE FUNCTION(Snd Pager Message     IF) TYPE(EXCINTFUN)                      AC1606816;
 PARAMETER(DB1.Company_Number);
 PARAMETER('ASPRDUPL');
 PARAMETER(400-200-000);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Company_Value_Code);
  PARAMETER(PAR.System_Value_Alpha);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Pager Name USR = PAR.System Value Alpha
  PAR.Pager_Name_USR = PAR.System_Value_Alpha;

  // Execute command - 'SND Pager Message'
  EXECUTE COMMAND(USR3006);
  PARAMETER(PAR.Pager_Name_USR);
  PARAMETER(PAR.Pager_Msg_USR);

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


