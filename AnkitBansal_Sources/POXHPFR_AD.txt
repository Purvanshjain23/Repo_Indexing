// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POXHPFR
// ?Date: 14.08.2025 Time: 12:06:26
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

CASE;

// IF DB1.Sales Route Code is Product Transfer
IF DB1.Sales_Route_Code = '000';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

// 1PG.From Date             USR = PAR.From Date             USR
X1PG_From_Date_USR = PAR.From_Date_USR;

// 1PG.Thru Date             USR = PAR.Date To               USR
X1PG_Thru_Date_USR = PAR.Date_To_USR;

// 1PG.Report Type = PAR.Report Type
X1PG_Report_Type = PAR.Report_Type;

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Report Type
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Report_Type);

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

CASE;

IF NEW Sales_Route_Code;
EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(CUR.Sales_Route_Desc_DRV);
PARAMETER(CUR.Sales_Route_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print Sales Route Code header format
PRINT Sales Route Code header format;

ENDIF;

// SUPPRESSED PRINT Scheduled Ship Date header format

// SUPPRESSED PRINT Load ID header format

//?USER: On print of detail format

// NXT.Count USR = NXT.Count USR + CON.1
NXT.Count_USR = NXT.Count_USR + 1;

CASE;

// IF PAR.Report Type is Summary
IF PAR.Report_Type = 'S';

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Load ID totals format

// SUPPRESSED PRINT Scheduled Ship Date totals format

CASE;

IF NEW Sales_Route_Code;
EXECUTE FUNCTION(RTV #Load per SSD,SLS  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1670647;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Sales_Route_Code);
PARAMETER(PAR.From_Date_USR);
PARAMETER(CUR.Count_USR_3);
PARAMETER(PAR.From_Date_USR);
PARAMETER(PAR.Date_To_USR);
{
 //?USER: Initialize routine

 // PAR.Count USR 3 = CON.*ZERO
 PAR.Count_USR_3 = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Scheduled Ship Date GE PAR.From Date             USR
 IF DB1.Scheduled_Ship_Date >= PAR.From_Date_USR;

 // AND DB1.Scheduled Ship Date LE PAR.Thru Date             USR
 AND DB1.Scheduled_Ship_Date <= PAR.Thru_Date_USR;

 CASE;

 // IF DB1.Load ID NE LCL.Load ID
 IF DB1.Load_ID <> LCL.Load_ID;

 // PAR.Count USR 3 = PAR.Count USR 3 + CON.1
 PAR.Count_USR_3 = PAR.Count_USR_3 + 1;

 // LCL.Load ID = DB1.Load ID
 LCL.Load_ID = DB1.Load_ID;

 ENDIF;

 ENDIF;

}


CASE;

// IF CUR.Count USR 3 is Zero
IF CUR.Count_USR_3 = *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Percent On Time Loads =       *
CUR.Percent_On_Time_Loads = ( CUR.Count_USR / CUR.Count_USR_3 ) * 100;

ENDIF;

// Print Sales Route Code totals format
PRINT Sales Route Code totals format;

// CUR.Count USR = CON.*ZERO
CUR.Count_USR = *ZERO;

// CUR.Count USR 3 = CON.*ZERO
CUR.Count_USR_3 = *ZERO;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

