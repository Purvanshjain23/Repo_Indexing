      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP1041
      * TITLE:       REVISE SHIP TO SBD CUSTOMER
      * PROGRAMMER:  BRAD BADEN
      * CREATED:     11/01/2017
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD OR CHANGE
      *           SHIP TO SBD CUSTOMER RECORDS
      *
      *           THIS PROGRAM IS CALLED FROM HP4041 - WORK WITH
      *           SHIP TO SBD CUSTOMER
      *
      *           THE FIELD 'MODE' CONTAINS THE VALUE PASSED INTO
      *           THIS PROGRAM FROM THE CALLING PROGRAM.  THE FIELD
      *           'DFMODE' IS THE SCREEN FIELD THAT DISPLAYS THE
      *           VALUE OF 'MODE'.  MODE WILL BE CREATE OR REVISE
      *           ONCE IN THE PROGRAM, MODE AND DFMODE WILL NEVER
      *           CHANGE.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 11/27/17  Brad Baden  E010812
      *           Recompiled for field changes in file HSL1951A
      *
      ****************************************************************
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD1041   CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSL195A   UF A E           K DISK
      *    SHIP TO SBD CUSTOMER
      *
     FHSL1951A  IF   E           K DISK
      *    SHIP TO SBD CUSTOMER REF
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  STAND ALONE FIELDS
      *---------------------------------------------------------------
      *
     D wkajd           S              8
     D wkcomp          S              3
     D wkupdt          s                   like(cuupdt)
     D wkuptm          s                   like(cuuptm)
     D wkupusr         s                   like(cuupusr)
     D wkisodate       s               D   datfmt(*iso)
     D jdefl           s              1                                         JDE Error Flag
     D inat1           s              3                                         JDE Address Type
     D inajd           s              8p 0                                      JDE Customer
     D ouajd           s              8p 0                                      JDE Customer
     D oualph          s             40                                         JDE Name
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     UPDATE        $UPD1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   MOVE      *BLANK        DFCNM
     C                   MOVE      *BLANK        DFPSTHPE
     C                   MOVE      *BLANK        DFCUST
      *
      * IF INCOMING MODE IS REVISE, THEN RETRIEVE DATABASE
      * RECORD USING THE CODE THAT WAS PASSED IN.  DO NOT LOCK
      * THE RECORD.
      *
     C     MODE          IFEQ      REVISE                                       IF REV/DEL
     C     DFAJD         CHAIN     CUREC                              90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     CUAJD         DFAJD
     C                   MOVEL     CUCNM         DFCNM
     C                   MOVEL     CUPSTHPE      DFPSTHPE
     C                   MOVEL     CUCUST        DFCUST
     C                   ELSE
      * NOT FOUND
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09254'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF REV/DEL
      *
      * IF YOU COULDN'T FIND THE RECORD, SET TO DISPLAY THE SCREEN
      * WITH THE ERROR MESSAGE.
      *
     C                   MOVEL     SCRN1         ROUTNE
     C*                  ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  SET DSPF INDICATORS TO CONTROL INPUT/OUT FIELDS AND AVAILABLE
      *  FUNCTION KEYS.
      *
     C                   SELECT
     C     MODE          WHENEQ    REVISE
     C                   SETON                                        60
     C     MODE          WHENEQ    CREATE
     C                   SETON                                        61
     C                   ENDSL
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP1041K1
     C                   WRITE     HP1041EC
     C                   EXFMT     HP1041R1
      *
     C                   EVAL      WKAJD = %CHAR(DFAJD)
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * RESET ACTION TO BE EQUAL TO THE INCOMING MODE.
      *
     C                   MOVEL     MODE          ACTION
      *
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4=PROMPT
     C                   EXSR      $F4S1
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * *IN62 WILL BE ON IF THE RECORD THE USER IS TRYING TO ACCESS
      * HAS BEEN DELETED BY ANOTHER USER.  SO, ONLY PERFORM THE
      * EDITS FOR THE FIELDS ON THE SCREEN IF *IN62 IS OFF
      *
     C     *IN62         IFEQ      *OFF                                         IF HERE
      *
      * IF YOU ARE CREATING A NEW RECORD, VALIDATE THAT:
      *  A CUSTOMER CODE AND DESCRIPTION WERE ENTERED &
      *  THE CODE DOES NOT ALREADY EXIST IN THE SHIP TO SBD CUSTOMER FILE
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   select
      *
      * When Customer Number = 0, send error message
     C                   when      dfajd = 0                                      when dfajd = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error                              if errmsg < max
     C*                  exsr      $err1
     C                   move      'HS09001'     mgid(e)
     C                   endif                                                      fi errmsg < max
      *
      * When Customer Number = 360516, send error message
     C                   when      dfajd = 360516                                 when dfajd=360516
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error                              if errmsg < max
     C*                  exsr      $err1
     C                   move      'HS00885'     mgid(e)
     C                   clear                   mgw
     C                   movea     'CREATE'      mgw(1)
     C                   movea     'MRKTS'       mgw(7)
     C*                  movel     dfajd         xxalphcusn
     C                   movea     wkajd         mgw(12)
     C                   movea     mgw           mgdt(e)
     C                   endif                                                      fi errmsg < max
      *
     C                   other                                                    other
      *
      * Check if customer number exists in JDE system
      *
     C                   z-add     dfajd         inajd
     C                   movel(p)  'C'           inat1
     C                   movel     no            jdefl                          JDE errors
      *
     C                   call      'HPJDEV'
     C                   parm                    mgi                            MSG ID'S
     C                   parm                    mgd                            MSG DATA FLD
     C                   parm                    error                          # ERR MSGS
     C                   parm                    inajd                          JDE ADDR #
     C                   parm                    inat1                          JDE ADDR TYP
     C                   parm                    jdefl                          error flag
     C                   parm      *blanks       oualph                         JDE name
      *
      *
     C     jdefl         ifeq      yes
     C                   eval      *in31 = *on
     C                   else
     C                   movel     oualph        dfcnm
     C                   endif
      *
     C                   endsl
      *
      * Does record already exist?
     C     DFAJD         CHAIN     CUREC                              91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09255'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF ERROR
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF CREATE
      *
      * ALWAYS EDIT FOR BLANKS IN THE NAME FIELD
      *
     C*    DFCNM         IFEQ      *BLANK
     C*                  SETON                                        32
     C*    ERROR         IFLT      MAXMSG
     C*                  ADD       1             ERROR
     C*                  MOVEL     'HS09001'     MGID(E)
     C*                  ENDIF
     C*                  ENDIF
      *
      * POST TO HPE FLAG MUST BE YES OR NO
      *
     C     DFPSTHPE      IFNE      'Y'                                          IF BAD HPE FLAG
     C     DFPSTHPE      ANDNE     'N'
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD HPE FLAG
      *
      *
      * STATUS MUST BE ACTIVE OR INACTIVEO
      *
     C     DFCUST        IFNE      'A'                                          IF BAD STAT
     C     DFCUST        ANDNE     'I'
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09105'     MGID(E)
     C                   ENDIF                                                  IF ERROR
     C                   ELSE

      *
      * IF STATUS IS VALID AND IF STATUS IS INACTIVE, VALIDATE THAT
      * THERE ARE NO ACTIVE SHIP TO SBD CUSTOMER REF RECORDS
      *
     C                   IF        DFCUST = 'I'                                 IF INACTIVE
     C     DFAJD         SETLL     HSL1951A
     C                   IF        %FOUND                                       IF %FOUND
     C                   DOW       NOT %EOF                                     DOW
     C     DFAJD         READE     HSL1951A
     C                   IF        CRCRST = 'A'                                 IF CRCRST
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09258'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   LEAVE
     C                   ENDIF                                                  IF ERROR
     C                   ENDIF                                                  IF CRCTST

     C                   ENDDO                                                  DOW
     C                   ENDIF                                                  IF %FOUND
      *
     C                   ENDIF                                                  IF INACTIVE
     C                   ENDIF                                                  IF BAD STAT
     C                   ENDIF                                                  IF HERE
      *
      * IF THERE ARE NO ERRORS, ATTEMPT THE WRITE/UPDATE; OTHERWISE,
      * REDISPLAY THE SCREEN.
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $UPD1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $UPD1  - SUBROUTINE TO WRITE/UPDATE/DELETE DATABASE FILE
      *----------------------------------------------------------------
      *
     C     $UPD1         BEGSR
      *
      * IF USER ACTION IS REVISING, DETERMINE THAT THE
      * RECORD HE IS ACCESSING STILL EXISTS PRIOR TO ATTEMPTING TO
      * UPDATE.  LOCK THE RECORD FOR UPDATE.
      *
     C     ERROR         IFEQ      0                                            IF GOOD
     C     ACTION        IFEQ      REVISE                                       IF D/R
     C     DFAJD         CHAIN     CUREC                              93
     C     *IN93         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09254'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF D/R
     C                   ENDIF                                                  IF GOOD
      *
      *  IF THERE ARE NO ERRORS, REVISE OR CREATE THE RECORD
      *
     C     ERROR         IFEQ      0                                            IF NO ERR
      *
      *  MOVE DSPF FIELDS TO DATABASE FILE FIELDS
      *
     C                   Z-ADD     DFAJD         CUAJD
     C                   MOVEL     DFCNM         CUCNM
     C                   MOVEL     DFPSTHPE      CUPSTHPE
     C                   MOVEL     DFCUST        CUCUST
      *
      *  MOVE TIMESTAMP VALUES TO DATABASE FIELDS
      *
     C                   Z-ADD     WKUPDT        CUUPDT
     C                   Z-ADD     WKUPTM        CUUPTM
     C                   MOVEL     WKUPUSR       CUUPUSR
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   WRITE     CUREC
     C                   ELSE
     C                   UPDATE    CUREC
     C                   ENDIF                                                  IF CREATE
     C                   ENDIF                                                  IF NO ERR
      *
      *  IF THERE ARE ANY ERRORS, REDISPLAY THE SCREEN; OTHERWISE, EXIT
      *  THE PROGRAM AUTOMATICALLY. (THE USER DOES NOT HAVE TO TAKE
      *  ANY FUNCTION KEY TO EXIT)
      *
     C     ERROR         IFGT      0
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *--------------------
      * JDE CUSTOMER NUMBER
      *--------------------
     C                   when      mode = create and                            when fld = d1ajd
     C                             fld = 'DFAJD'
     C                   movel(p)  'C'           inat1
     C                   call      'HP513'
     C                   parm      *blanks       wkcomp                             company
     C                   parm                    inat1                              search type
     C                   parm      *zero         ouajd                              jde number
     C                   parm      *BLANK        oualph                             jde name
      *
     C                   if        ouajd <> 0                                       if ouajd <> 0
     C                   z-add     ouajd         dfajd
     C                   endif                                                      fi ouajd <> 0
      *------------
      * POST TO HPE
      *------------
     C     FLD           WHENEQ    'DFPSTHPE'
     C                   MOVE      *BLANK        XXPSTHPE
     C                   CALL      'HP522'
     C                   PARM                    XXPSTHPE
     C                   SETON                                        53
     C     XXPSTHPE      IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPSTHPE      DFPSTHPE
     C                   ENDIF                                                  IF SELECTED
      *-----------
      * STATUS
      *-----------
     C     FLD           WHENEQ    'DFCUST'
     C                   MOVE      *BLANK        XXCUST
     C                   CALL      'HP512'
     C                   PARM                    XXCUST
     C                   SETON                                        54
     C     XXCUST        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXCUST        DFCUST
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *     NONE
      *
      * PARM LISTS
      *     MODE IS THE MODE COMING IN FROM THE WORK WITH.
      *     DFAJD IS THE SBD CUSTOMER PASSED FROM THE WORK WITH.
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFAJD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C     *LIKE         DEFINE    DFMODE        ACTION
     C     *LIKE         DEFINE    DFMODE        MODE
     C                   MOVEL     MODE          ACTION
     C                   MOVEL     MODE          DFMODE
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * PARMS FOR F4=PROMPT CALLS
      *
     C     *LIKE         DEFINE    CUCUST        XXCUST
     C     *LIKE         DEFINE    CUPSTHPE      XXPSTHPE
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * Set up the date/time/user/program for time-stamping the Movement Event record.
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkupdt
     C                   time                    wkuptm
     C                   move      sdusr         wkupusr
      *
     C                   ENDSR
      /EJECT
