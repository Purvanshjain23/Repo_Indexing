     H/TITLE WW No BOL Gate Log    DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 01:32:27
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPLNRDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW No BOL Gate Log    DF  Display file
      *
     FPLA9CPL5IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Security Gate             Co/SDte/DDte/EDte/ETme
      *
     FPKAZREL1IF  E           K        DISK
      * RTV : Company Control HPE       Retrieval index
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      * Outward parameters
     IPARC        DS                              9
      * KEY : Security Gate             Retrieval index
      * I : RST CC Company Number
     I                                    P   1   20PAHONB
      * I : MAP SG Date
     I                                    P   3   60PAGEDT
      * I : MAP SG Sequence Number
     I                                    P   7   90PASQA1
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             18
      * KEY: Security Gate             Co/SDte/DDte/EDte/ETme
      * I : RST CC Company Number
     I                                    P   1   20P1HONB
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Oms Warehouse Code
     I                                        1   3 P2J8NB
      * N :  Oms Application Code
     I                                        4   9 P2C7CD
      * N :  Oms SalesPerson Code
     I                                       10  12 P2C8CD
      * N :  Oms Allow Multi-Company
     I                                       13  13 P2G8ST
      * N :  Oms Default Printer
     I                                       14  23 P2G9ST
      * N :  Oms Name
     I                                       24  53 P2EUTX
      * N :  Oms System Value Alpha
     I                                       54  93 P2EVTX
      * N :  Oms Access Denied (Y/N)
     I                                       94  94 P2HAST
     IP3PARM      DS
      * I :  Allw Edit or Dsply Usr
     I                                        1   1 P3ORST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Opt not allowed'
      * *SFLSEL
     I                                        1   1 ZA0001
      * Message data for 'Opt not allowed'
      * *SFLSEL
     I                                        1   1 ZA0002
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Security G
     C           P3ORST    PARM           WP0001  1        Allw Edit or Ds
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           A9HONB           CC Company Numb
     C                     KFLD           A9GEDT           SG Date
     C                     KFLD           A9GADT           BOLS Depart Dat
     C                     KFLD           A9F9DT           BOLS Entry Date
     C                     KFLD           A9BRTM           BOLS Entry Time
      * Setup key
     C                     Z-ADD#2HONB    A9HONB
     C                     Z-ADD#2GEDT    A9GEDT
     C                     Z-ADD#2GADT    A9GADT
     C                     Z-ADD#2F9DT    A9F9DT
     C                     Z-ADD#2BRTM    A9BRTM
     C           KPOS      SETLL@A9CPPT
     C           KRST      KLIST
     C                     KFLD           A9HONB           CC Company Numb
      * Setup key
     C                     Z-ADD#2HONB    A9HONB
     C           KRST      READE@A9CPPT                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2GEDT    WZGEDT
     C                     MOVEL#2GEDT    WZGEDT           SG Date
     C           *LIKE     DEFN #2F9DT    WZF9DT
     C                     MOVEL#2F9DT    WZF9DT           BOLS Entry Date
     C           *LIKE     DEFN #2BRTM    WZBRTM
     C                     MOVEL#2BRTM    WZBRTM           BOLS Entry Time
     C           *LIKE     DEFN #2OSCD    WZOSCD
     C                     MOVEL#2OSCD    WZOSCD           BOLS Entry Guar
     C           *LIKE     DEFN #2GADT    WZGADT
     C                     MOVEL#2GADT    WZGADT           BOLS Depart Dat
     C           *LIKE     DEFN #2BSTM    WZBSTM
     C                     MOVEL#2BSTM    WZBSTM           BOLS Depart Tim
     C           *LIKE     DEFN #2OQCD    WZOQCD
     C                     MOVEL#2OQCD    WZOQCD           BOLS Depart Gua
     C           *LIKE     DEFN #2VUTX    WZVUTX
     C                     MOVEL#2VUTX    WZVUTX           BOLS Depart Com
     C           *LIKE     DEFN #2HONB    WZHONB
     C                     MOVEL#2HONB    WZHONB           CC Company Numb
     C           *LIKE     DEFN #2VVTX    WZVVTX
     C                     MOVEL#2VVTX    WZVVTX           BOLS Entry Comm
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@A9CPPT                  90*
     C  N82                READ @A9CPPT                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,32
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2GEDT    IFEQ *ZERO                      SG Date
     C           #2GADT    OREQ *ZERO                      BOLS Depart Dat
     C           #2F9DT    IFNE *ZERO                      BOLS Entry Date
     C           A9F9DT    CABNE#2F9DT    BB020            BOLS Entry Date
     C                     END
     C                     END
     C           #2GEDT    IFEQ *ZERO                      SG Date
     C           #2GADT    OREQ *ZERO                      BOLS Depart Dat
     C           #2F9DT    OREQ *ZERO                      BOLS Entry Date
     C           #2BRTM    IFNE *ZERO                      BOLS Entry Time
     C           A9BRTM    CABNE#2BRTM    BB020            BOLS Entry Time
     C                     END
     C                     END
     C           #2OSCD    IFNE *BLANK                     BOLS Entry Guar
     C           A9OSCD    CABNE#2OSCD    BB020            BOLS Entry Guar
     C                     END
     C           #2GEDT    IFEQ *ZERO                      SG Date
     C           #2GADT    IFNE *ZERO                      BOLS Depart Dat
     C           A9GADT    CABNE#2GADT    BB020            BOLS Depart Dat
     C                     END
     C                     END
     C           #2BSTM    IFNE *ZERO                      BOLS Depart Tim
     C           A9BSTM    CABNE#2BSTM    BB020            BOLS Depart Tim
     C                     END
     C           #2OQCD    IFNE *BLANK                     BOLS Depart Gua
     C           A9OQCD    CABNE#2OQCD    BB020            BOLS Depart Gua
     C                     END
     C           #2VUTX    IFNE *BLANK                     BOLS Depart Com
     C           A9VUTX    CABNE#2VUTX    BB020            BOLS Depart Com
     C                     END
     C           #2VVTX    IFNE *BLANK                     BOLS Entry Comm
     C           A9VVTX    CABNE#2VVTX    BB020            BOLS Entry Comm
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@A9CPPT                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZVVTX    CASNE#2VVTX    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,32
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 5=Depart
      * CASE: RCD.*SFLSEL is Select Option 5
     C           #1SEL     IFEQ '5'                        *IF
     C           #1SEL     OREQ ' 5'
      * CASE: RCD.BOLS Depart Date is Entered
     C           #1GADT    IFNE *ZERO                      *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'Opt not allowed'
     C                     MOVEL'PRK0648' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Edt No BOL Gate Log   ER - Security Gate  * 
     C                     CLEARPARC
     C                     Z-ADD#1HONB    PAHONB           CC Company Numb
     C                     Z-ADD#1GEDT    PAGEDT           SG Date
     C                     Z-ADD#1SQA1    PASQA1           SG Sequence Num
      *
     C                     CALL 'PLNOE1R'              90  Edt No BOL Gate
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Security G
     C                     PARM 'D'       WQ0001  1        Entry Status US
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLNOE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
      * 8=Display
      * CASE: RCD.*SFLSEL is Select Option 8
     C           #1SEL     IFEQ '8'                        *IF
     C           #1SEL     OREQ ' 8'
      * Edt No BOL Gate Log   ER - Security Gate  * 
     C                     CLEARPARC
     C                     Z-ADD#1HONB    PAHONB           CC Company Numb
     C                     Z-ADD#1GEDT    PAGEDT           SG Date
     C                     Z-ADD#1SQA1    PASQA1           SG Sequence Num
      *
     C                     CALL 'PLNOE1R'              90  Edt No BOL Gate
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Security G
     C                     PARM *BLANK    WQ0002  1        Entry Status US
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLNOE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * 9=Edit
      * CASE: RCD.*SFLSEL is Select Option 9
     C           #1SEL     IFEQ '9'                        *IF
     C           #1SEL     OREQ ' 9'
      * CASE: PAR.Allw Edit or Dsply Usr is Dispaly
     C           P3ORST    IFEQ 'D'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0002           *SFLSEL
      * Send message 'Opt not allowed'
     C                     MOVEL'PRK0648' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Edt No BOL Gate Log   ER - Security Gate  * 
     C                     CLEARPARC
     C                     Z-ADD#1HONB    PAHONB           CC Company Numb
     C                     Z-ADD#1GEDT    PAGEDT           SG Date
     C                     Z-ADD#1SQA1    PASQA1           SG Sequence Num
      *
     C                     CALL 'PLNOE1R'              90  Edt No BOL Gate
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Security G
     C                     PARM 'C'       WQ0003  1        Entry Status US
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLNOE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @A9CPPT fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDA9HONB    #1HONB           CC Company Numb
     C                     Z-ADDA9GEDT    #1GEDT           SG Date
     C                     Z-ADDA9SQA1    #1SQA1           SG Sequence Num
     C                     Z-ADDA9HMNB    #1HMNB           BOH Company Num
     C                     Z-ADDA9BNNB    #1BNNB           BOH Buy Order N
     C                     Z-ADDA9BONB    #1BONB           BOL Load Number
     C                     MOVELA9AAVN    #1AAVN           RS User Changed
     C                     Z-ADDA9AADT    #1AADT           RS Date Changed
     C                     Z-ADDA9AMTM    #1AMTM           RS Time Changed
     C                     MOVELA9AJST    #1AJST           RS Record Statu
     C                     MOVELA9AHVN    #1AHVN           RS Job
     C                     MOVELA9AGVN    #1AGVN           RS Program
     C                     MOVELA9ABVN    #1ABVN           RS User Added
     C                     Z-ADDA9ABDT    #1ABDT           RS Date Added
     C                     Z-ADDA9ABTM    #1ABTM           RS Time Added
     C                     MOVELA9VVTX    #1VVTX           BOLS Entry Comm
     C                     Z-ADDA9F9DT    #1F9DT           BOLS Entry Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1F9DT
     C                     Z-ADDA9BRTM    #1BRTM           BOLS Entry Time
     C                     MOVELA9OSCD    #1OSCD           BOLS Entry Guar
     C                     Z-ADDA9GADT    #1GADT           BOLS Depart Dat
      * Clear external version also
     C                     Z-ADD*ZERO     V1GADT
     C                     Z-ADDA9BSTM    #1BSTM           BOLS Depart Tim
     C                     MOVELA9OQCD    #1OQCD           BOLS Depart Gua
     C                     MOVELA9VUTX    #1VUTX           BOLS Depart Com
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2GEDT           SG Date
     C                     Z-ADD*ZERO     #2F9DT           BOLS Entry Date
     C                     Z-ADD*ZERO     #2BRTM           BOLS Entry Time
     C                     MOVEL*BLANK    #2OSCD           BOLS Entry Guar
     C                     Z-ADD*ZERO     #2GADT           BOLS Depart Dat
     C                     Z-ADD*ZERO     #2BSTM           BOLS Depart Tim
     C                     MOVEL*BLANK    #2OQCD           BOLS Depart Gua
     C                     MOVEL*BLANK    #2VUTX           BOLS Depart Com
     C                     Z-ADDP1HONB    #2HONB           CC Company Numb
     C                     MOVEL*BLANK    #2VVTX           BOLS Entry Comm
      * Check restriction within
     C                     EXSR VACKRL
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert BOLS Entry Date to display format
      * Convert date
     C           1000000   ADD  #1F9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1F9DT
      * Convert BOLS Depart Date to display format
      * Convert date
     C           1000000   ADD  #1GADT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1GADT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C           YPMTFD    IFEQ '#2HONB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2HONB' defaulted for 'CC Company Number'.
     W* Y2W0052 - One or more arguments defaulted to WRK/CON context.
      * Field '(WRK) WUBSNB' defaulted for 'Next Buy Order Number'.
      * Field '(WRK) WUB1DT' defaulted for 'Current Kill Date'.
      * Field '(WRK) WUB2DT' defaulted for 'Next Kill Date'.
      * Field '(WRK) WUH4NB' defaulted for 'Last Drive Card Number'.
     C                     CALL 'PKLFSRR'              90  Sel Company Con
     C                     PARM *BLANK    W0RTN   7
     C           #2HONB    PARM #2HONB    WQ0004  30       CC Company Numb
     C           WUBSNB    PARM *ZERO     WQ0005  70       Next Buy Order
     C           WUB1DT    PARM *ZERO     WQ0006  70       Current Kill Da
     C           WUB2DT    PARM *ZERO     WQ0007  70       Next Kill Date
     C           WUH4NB    PARM *ZERO     WQ0008  30       Last Drive Card
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKLFSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #2HONB    IFNE *ZERO                      CC Company Numb
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VA999
     C                     END
     C                     END
      *................................................................
      *
     C           KLVAAZ    KLIST
     C                     KFLD           AZHONB           CC Company Numb
      * Setup key
     C                     Z-ADD#2HONB    AZHONB
     C           KLVAAZ    CHAIN@AZCPCN              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
     C           VA999     TAG
      * Restrictor relation not satisfied
      * Send message 'Company Control HPE    NF'
     C                     MOVEL'PRK0055' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0055' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD9         ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD3         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2J8NB           Oms Warehouse C
     C                     MOVEL*BLANK    P2C7CD           Oms Application
     C                     MOVEL*BLANK    P2C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P2G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P2G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P2EUTX           Oms Name
     C                     MOVEL*BLANK    P2EVTX           Oms System Valu
     C                     MOVEL*BLANK    P2HAST           Oms Access Deni
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Next Buy Order Number
     C                     Z-ADD*ZERO     WUBSNB  70
      * Define work field Current Kill Date
     C                     Z-ADD*ZERO     WUB1DT  70
      * Define work field Next Kill Date
     C                     Z-ADD*ZERO     WUB2DT  70
      * Define work field Last Drive Card Number
     C                     Z-ADD*ZERO     WUH4NB  30
      * Define work field CC Company Number
     C                     Z-ADD*ZERO     WUHONB  30
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD04        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications
      * 11/05/2020 ISE H16853 - Recompiled due to change in Buy Order Num
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P2J8NB    PARM *BLANK    WQ0009  3        Oms Warehouse C
     C           WUHONB    PARM *ZERO     WQ0010  30       CC Company Numb
     C                     PARM 'HPE'     WQ0011  6        Oms Application
     C           P2C8CD    PARM *BLANK    WQ0012  3        Oms SalesPerson
     C           P2G8ST    PARM *BLANK    WQ0013  1        Oms Allow Multi
     C           P2G9ST    PARM *BLANK    WQ0014 10        Oms Default Pri
     C           P2EUTX    PARM *BLANK    WQ0015 30        Oms Name
     C           P2EVTX    PARM *BLANK    WQ0016 40        Oms System Valu
     C           P2HAST    PARM *BLANK    WQ0017  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
