      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP314 - Workfile: Build Wean Pig Rolling Averages
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/06/02
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/29/03  Barb Gutierrez
      *           Recompile only.
      *
      * 06/30/04  LeAnne Fedor
      *           Recompile only.
      *
      * 10/27/04  LeAnne Fedor
      *           Recompile only. New field "3-week average dead" added to file
      *           Datamart FIN: Weekly Group Detail.
      *
      * 12/28/04  LeAnne Fedor
      *           Recompile only. New field 'Farm Size' added to Datamart Farm Site
      *           file.
      *
      * 02/01/05  LeAnne Fedor
      *           Recompile only. New fields (Sire Line Company and Prime Line) added
      *           to Datamart FIN: Group Header and Datamart BGF: Weekly Production.
      *
      * 02/07/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *                    Added: Transferred In Open Gilts
      *                  Removed: Total Lactation Pounds
      *
      * 07/05/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *           Added 1 new field: Average Daily Beginning Piglet Inventory
      *
      * 08/23/05  LeAnne Fedor
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Man hours
      *
      * 03/23/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *
      * 04/24/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *                 Cognos Report Grouping
      *                 Weaning Cognos Report Grouping
      *                 Report PCP Cognos Report Grouping
      *                 Report Farrowed Cognos Report Grouping
      *
      * 06/15/06  LeAnne Ramsey
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Total Gilt Weight @ 28 Weeks
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *           Header file.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added to the Datamart FIN files:
      *              1) Weekly Group Detail
      *              2) Group Header
      *
      * 08/04/08  LeAnne Ramsey
      *           Recompile only. Fields deleted from Weekly Production file.
      *             BPPSGLSV - Nbr Gilts Bred w/Passed Date
      *             BPWSLB   - Weekly Ending Lbs Supplement Used
      *             BPP2LT   - Total P2 Litters Farrowed
      *             BPTDGB   - Total Days Gilt Breeding Age
      *
      * 11/07/08  LeAnne Ramsey
      *           Recompile only:
      *           Added 3 new fields to HPPB092-Datamart BGF: Weekly Production
      *            1) Target open gilt pool eligible
      *            2) Target litters farrowed/mated female/year
      *            3) Target pigs weaned/mated female/year
      *
      * 05/28/09  LeAnne Ramsey
      *           Recompile only. Added new field "Farrowing Crates" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 09/01/09  LeAnne Ramsey
      *           Recompile only. Added new field "Report Total Litters Farrowed" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 01/14/10  LeAnne Ramsey
      *           Recompile only. Changed text on BPLVHD and BPLVLB in:
      *                HPPB092-Datamart BGF: Weekly Production
      *
      * 05/24/10  LeAnne Ramsey
      *           Recompile only. Added 2 fields to HPPF075-Weekly Group Detail:
      *              WBWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *              WBPAJTIHD -Placement Adjusted Transfer In Head
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 11/10/10  LeAnne Ramsey (E1151)
      *           Sami Wilson had us increase the size of some 'Head' fields for the
      *           Quarter Targets from 5,0 to 6,0. She was adamant that 5,0 fields were
      *           still sufficient for Daily, Weekly, Period values. In this program we
      *           accumulate Born Alive Head for a 7 week period. I think we would have
      *           been fine leaving the Accumulator (WKBAHD) at 5,0. But, just to be safe,
      *           I increased it to 7,0.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields Sold days in phase, Avg Sold days in phase,
      *           Wgt open date, and company number to HPPF034.         E6136
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp032    if   e           k disk
      *  Production variables
      *
      *
     Fhppb018   if   e           k disk
      *  Datamart: BGF farm site
      *
      *
     Fhppf034   if   e           k disk
      *  Datamart FIN: group header
      *
      *
     Fhplf075d  if   e           k disk
      *  Datamart FIN: weekly group detail
      *
      *
     Fhplb092a  if   e           k disk
      *  Datamart: BGF weekly production
      *
      *
     Fhsp314    if a e           k disk
      *  Workfile: Wean Pig Rolling Averages
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Counters
      *
     D wkrollwk        s              3  0
     D wkremainwk      s              3  0
     D count           s              3  0
      *
      *
      * Save fields and control fields
      *
     D procfl          s              1
      *
      *
      * Workfields for accumulating values for calculating averages
      *
     D wkpmhd          s                   like(rapmhd)
     D wkbahd          s              7  0
     D wktosv          s                   like(ratosv)
     D wkrfgrhd        s                   like(rarfgrhd)
     D wkfpgrhd        s                   like(rafpgrhd)
     D wkrpgrhd        s                   like(rarpgrhd)
     D wkrsgrsv        s                   like(rarsgrsv)
     D wktolt          s                   like(ratolt)
     D wkfsgrhd        s                   like(rafsgrhd)
      *
     D wknbihd         s                   like(ranbihd)
     D wknavddhd       s                   like(ranavddhd)
     D wkfbihd         s                   like(rafbihd)
     D wkfavddhd       s                   like(rafavddhd)
      *
      * Workfields
      *
     D wkppcd          s                   like(hgppcd)
     D wknweeks        s              3  0
     D wkfweeks        s              3  0
     D wkpvcd          s                   like(pvpvcd)
     D wkfld155        s             15  5
     D wkfld152        s             15  2
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Retrieve the number of 'weeks' to roll. This value is stored
      * in our new Production Variables file...retrieve using a key field
      * value of '3'.  There should always be a record with a value; but,
      * if there isn't, get out of this program...you're done!
      *
     C                   z-add     3             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off and pvpvval > 0                 If roll weeks
     C                   z-add     pvpvval       wkrollwk
      *
      * Now, you are ready to start processing all the farms in the Datamart
      * BGF Farm Master.
      *
     C     *loval        setll     hppb018                                90
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hppb018                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      *
      * Step 1: We are not going to do 'rolling averages' for a farm if the farm
      *         does not have at least as many actual weekly records out there to
      *         roll as our number of 'roll weeks'.  So, read/count the actual
      *         weekly records to see if you have enough records to continue
      *         processing this farm.
      *
     C                   exsr      $actuals
      *
     C                   if        procfl = yes                                 If process
     C                   exsr      $farm
     C                   endif                                                  If process
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   endif                                                  If roll weeks
      *
     C                   seton                                        lr
      *
      /eject
      *-----------------------------------------------------------------------------------
      * Determine if you have at least as many actual weekly records for a farm as the
      * number of weeks you are to 'roll'.
      *-----------------------------------------------------------------------------------
      *
      * In addition to 'counting' actual weekly records, we also want to save the year/week
      * date of the first record we read. This will give us our starting point for rolling.
      *
     C     $actuals      begsr
      *
     C                   z-add     0             count
     C     fsfscd        setll     hplb092a
      *
     C                   dou       count = wkrollwk or *in91 = *on              Do actuals
     C     fsfscd        reade     hplb092a                               91
     C                   if        *in91 = *off                                 If record
     C                   add       1             count
     C                   endif                                                  If record
     C                   enddo                                                  Do actuals
      *
     C                   if        count >= wkrollwk
     C                   move      yes           procfl
     C                   else
     C                   move      no            procfl
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Logic to generate 'rolling average' records for a farm
      *-----------------------------------------------------------------------------------
      *
     C     $farm         begsr
      *
     C                   z-add     0             count
     C                   z-add     wkrollwk      wkremainwk
      *
     C                   do        wkrollwk                                     Do rolling weeks
     C     fsfscd        setll     hplb092a
      *
      * Accumulate values from the actual weekly records for the number of
      * 'remaining' weeks that you have.
      *
     C                   do        wkremainwk                                   Do actuals
     C     fsfscd        reade     hplb092a                               91
     C                   if        *in91 = *off                                 If got something
     C                   exsr      $accumact
     C                   endif                                                  If got something
     C                   enddo                                                  Do actuals
      *
      * Now, add in values from all 'average' records that you may have
      * already written.
      *
     C                   exsr      $accumavg
      *
      * Retrieve values for calculating the 'Nursery Removal Rate' for the week.
      *
     C                   move      'NUR  '       wkppcd
     C                   exsr      $removal
      *
      * Retrieve values for calculating the 'Grow Finish Removal Rate' for the week.
      *
     C                   move      'GF   '       wkppcd
     C                   exsr      $removal
      *
      *
      * Write the 'rolling averages' record and clear your accumulators.
      *
     C                   exsr      $write
     C                   exsr      $clear
      *
      * Set the 'remaining weeks' control field.
      *
     C     wkrollwk      sub       count         wkremainwk
      *
     C                   enddo                                                  Do rolling weeks
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Accumulate values from actual weekly record
      *-----------------------------------------------------------------------------------
      *
     C     $accumact     begsr
      *
      * Accumulate total services.
      *  1) sum of number of weaners + number of open sow pool served +
      *            number of returns + number of gilts
      *
     C                   add       bpwnsv        wktosv
     C                   add       bplwnsv       wktosv
     C                   add       bprtsv        wktosv
     C                   add       bpglsv        wktosv
      *
      *
      * Accumulate for conception rate calculation.
      *  1) report PCP services-group
      *  2) report PCP head-group
      *
     C                   add       bprsgrsv      wkrsgrsv
     C                   add       bprpgrhd      wkrpgrhd
      *
      *
      * Accumulate for farrowing and fallout rate calculations.
      *  1) report farrowed services-group
      *  2) report farrowed PCP head-group
      *  3) report farrowed head-group
      *
     C                   add       bpfsgrhd      wkfsgrhd
     C                   add       bpfpgrhd      wkfpgrhd
     C                   add       bprfgrhd      wkrfgrhd
      *
      *
      * Accumulate for born alive per litter calculation.
      *  1) total litters farrowed
      *  2) total born alive head
      *
     C                   add       bptolt        wktolt
     C                   add       bpbahd        wkbahd
      *
      *
      * Accumulate head for mortality rate calculation.
      *  1) total prewean losses + DOA + reported pigs weaned - quality head
      *     - reject head - live head from sales - DOA
      * (NOTE: I know it looks like this formula doubles up on DOA head.
      *  But, Alice has verified that it matches the COGNOS formula and is
      *  what we want to use here. It first accumulates the 'reported dead'--that
      *  is the 'total prewean losses' and the recorded DOAs. Then, it tosses any
      *  any discrepancy in head between what was shipped 'out' and what 'arrived'
      *  at the destinations.
      *
     C                   add       bptolshd      wkpmhd
     C                   add       bpdohd        wkpmhd
      *
     C                   add       bptownhd      wkpmhd
     C                   sub       bpqlhd        wkpmhd
     C                   sub       bprjhd        wkpmhd
     C                   sub       bplvhd        wkpmhd
     C                   sub       bpdohd        wkpmhd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve values for calculating the Removal Rate
      *-----------------------------------------------------------------------------------
      *
      * Accumulate 2 fields:
      *    1) beginning inventory
      *    2) 7-week average dead head
      *
      * Process all records in the Datmart FIN: Weekly Group Detail file where:
      *    1) the 'origin BGF farm site' is the farm being processed
      *    2) the calendar year/week equals the calendar year/week in the Datamart BGF:
      *       Weekly Production record that you have just read
      *    3) the group type is 'Nursery' or 'Grow Finish'-depending on which you
      *       are processing on this pass thru the subroutine
      *
     C     $removal      begsr
      *
     C     key01         setll     hplf075d
      *
     C                   dou       *in94 = *on                                  Do removal
     C     key01         reade     hplf075d                               94
     C                   if        *in94 = *off                                 If not EOF
      *
     C     wbhgcd        chain     hppf034                            92
     C                   if        *in92 = *off and hgppcd = wkppcd             If process
      *
     C                   select
     C                   when      wkppcd = 'NUR  '
     C                   add       wbavddhd      wknavddhd
     C                   add       wbbihd        wknbihd
      *
     C                   when      wkppcd = 'GF   '
     C                   add       wbavddhd      wkfavddhd
     C                   add       wbbihd        wkfbihd
     C                   endsl
      *
     C                   endif                                                  If process
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do removal
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Accumulate values from all averages records that you may have already written for
      * the farm
      *-----------------------------------------------------------------------------------
      *
     C     $accumavg     begsr
      *
     C     fsfscd        setll     hsp314
      *
     C                   dou       *in93 = *on                                  Do averages
     C     fsfscd        reade     hsp314                                 93
     C                   if        *in93 = *off                                 If record
      *
     C                   add       ratosv        wktosv
      *
     C                   add       rarsgrsv      wkrsgrsv
     C                   add       rarpgrhd      wkrpgrhd
      *
     C                   add       rafsgrhd      wkfsgrhd
     C                   add       rafpgrhd      wkfpgrhd
     C                   add       rarfgrhd      wkrfgrhd
      *
     C                   add       ratolt        wktolt
     C                   add       rabahd        wkbahd
     C                   add       rapmhd        wkpmhd
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do averages
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write your 'rolling average' weekly record for the farm
      *-----------------------------------------------------------------------------------
      *
     C     $write        begsr
      *
     C                   add       1             count
     C                   z-add     count         rarecno
      *
     C                   z-add     fsfscd        rafscd
     C                   z-add     bpcdyr        racdyr
     C                   z-add     bpcdwk        racdwk
      *
      * To get the 'rolling averages', divide each accumulated value by the
      * 'number of weeks to roll'.
      *
     C     wktosv        div(h)    wkrollwk      ratosv
      *
     C     wkrsgrsv      div(h)    wkrollwk      rarsgrsv
     C     wkrpgrhd      div(h)    wkrollwk      rarpgrhd
      *
     C     wkfsgrhd      div(h)    wkrollwk      rafsgrhd
     C     wkfpgrhd      div(h)    wkrollwk      rafpgrhd
     C     wkrfgrhd      div(h)    wkrollwk      rarfgrhd
      *
     C     wktolt        div(h)    wkrollwk      ratolt
     C     wkbahd        div(h)    wkrollwk      rabahd
     C     wkpmhd        div(h)    wkrollwk      rapmhd
      *
      * Populate 'removal rate' fields
      *
     C                   z-add     wknbihd       ranbihd
     C                   z-add     wknavddhd     ranavddhd
     C                   z-add     wkfbihd       rafbihd
     C                   z-add     wkfavddhd     rafavddhd
      *
      * Now, calculate your 'rate' fields.
      *
     C                   exsr      $calcs
      *
     C                   write     rarec
     C                   clear                   rarec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Calculate your 'rate' fields prior to writing your record
      *-----------------------------------------------------------------------------------
      *
     C     $calcs        begsr
      *
      * Conception rate percent
      *
     C                   if        rarsgrsv <> 0
     C     rarpgrhd      div       rarsgrsv      wkfld155
     C     wkfld155      mult(h)   100           racrpr
     C                   endif
      *
      * Farrowing rate percent
      *
     C                   if        rafsgrhd <> 0
     C     rarfgrhd      div       rafsgrhd      wkfld155
     C     wkfld155      mult(h)   100           rafrpr
     C                   endif
      *
      * Fallout rate percent
      *
     C                   if        rafpgrhd <> 0
     C     rarfgrhd      div       rafpgrhd      wkfld155
     C     wkfld155      mult(h)   100           rafopr
     C     100.00        sub       rafopr        rafopr
     C                   endif
      *
      *
      * Born alive per litter
      *
     C                   if        ratolt <> 0
     C     rabahd        div(h)    ratolt        raltbahd
     C                   endif
      *
      * Mortaltiy rate percent
      *
     C                   if        rabahd <> 0
     C     rapmhd        div       rabahd        wkfld155
     C     wkfld155      mult(h)   100           rapmpr
     C                   endif
      *
      * Nursery removal rate percent
      *
     C                   if        ranbihd <> 0
     C     ranavddhd     div       ranbihd       wkfld155
     C     wkfld155      mult(h)   100           ranrmpr
     C                   mult      wknweeks      ranrmpr
     C                   endif
      *
      * Grow finish removal rate percent
      *
     C                   if        rafbihd <> 0
     C     rafavddhd     div       rafbihd       wkfld155
     C     wkfld155      mult(h)   100           rafrmpr
     C                   mult      wkfweeks      rafrmpr
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Clear accumlators
      *-----------------------------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wktosv
      *
     C                   z-add     0             wkrsgrsv
     C                   z-add     0             wkrpgrhd
      *
     C                   z-add     0             wkfsgrhd
     C                   z-add     0             wkfpgrhd
     C                   z-add     0             wkrfgrhd
      *
     C                   z-add     0             wktolt
     C                   z-add     0             wkbahd
     C                   z-add     0             wkpmhd
      *
     C                   z-add     0             wknavddhd
     C                   z-add     0             wknbihd
      *
     C                   z-add     0             wkfavddhd
     C                   z-add     0             wkfbihd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    fsfscd
     C                   kfld                    bpcdyr
     C                   kfld                    bpcdwk
      *
      *
      * The calc of 'Nursery Removal Rate' requires the 'standard days in the Nursery'.
      * This value is stored in our new Production Variables file...retrieve using a key
      * value of '4'. But, convert this retrieved 'days' to 'weeks' for the formula.
      *
     C                   z-add     4             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off
     C     pvpvval       div       7             wknweeks
     C                   endif
      *
      *
      * The calc of 'Finisher Removal Rate' requires the 'standard days in Grow Finish'.
      * This value is stored in our new Production Variables file...retrieve using a key
      * value of '5'. But, we have to convert this 'days' to 'weeks' to fit the formula.
      *
     C                   z-add     5             wkpvcd
     C     wkpvcd        chain     hsp032                             92
     C                   if        *in92 = *off
     C     pvpvval       div       7             wkfweeks
     C                   endif
      *
     C                   endsr
      /eject
