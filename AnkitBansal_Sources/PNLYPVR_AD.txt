// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNLYPVR
// ?Date: 14.08.2025 Time: 03:45:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?** Documentation
DO;

//?Test Order Scheduled Ship Date and Load Scheduled Ship Date
//?They must match if order is assigned to a load
//?1. If no Load ID, set error flag to no error and exit
//?   without showing the prompt.
//?2. If Order SSD equals Load SSD then set error flag to no error
//?   and exit without showing the prompt.
//?3. If Order SSD does not equal Load SSD then set error flag
//?   to Error and display the prompt screen. Initials are required
//?   but not saved. Confirmation is required.
ENDDO;

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

// PAR.Status Flag 8  Y/N = CND.No
PAR.Status_Flag_8_Y_N = 'N';

//?Test possibilities, if no error, fall out, else display prompt
CASE;

// IF PAR.Load ID is Blank
IF PAR.Load_ID = *ZERO;

//?** No Error
// PAR.Status Flag 8  Y/N = CND.No
PAR.Status_Flag_8_Y_N = 'N';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

RETURN;

//?Test possibilities, if no error, fall out, else display prompt
// IF PAR.Load ID is GT Zero
IF PAR.Load_ID > *ZERO;

EXECUTE FUNCTION(RTV Sched ShipDte,Seq  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1451989;
PARAMETER(PAR.Load_ID);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(NLL.Schedule_Sequence_Number);
PARAMETER(NLL.Requested_Delivery_Date);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Scheduled Ship Date NE PAR.Scheduled Ship Date
IF LCL.Scheduled_Ship_Date <> PAR.Scheduled_Ship_Date;

//?** Error - Display the prompt
// PAR.Status Flag 8  Y/N = CND.Yes
PAR.Status_Flag_8_Y_N = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

//?** No Error
// PAR.Status Flag 8  Y/N = CND.No
PAR.Status_Flag_8_Y_N = 'N';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

//?Test possibilities, if no error, fall out, else display prompt
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Status Flag 8  Y/N = CND.No
PAR.Status_Flag_8_Y_N = 'N';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

//?USER: Load screen

// DTL.Company Number = PAR.Company Number
DTL.Company_Number = PAR.Company_Number;

// DTL.Scheduled Ship Date = PAR.Scheduled Ship Date
DTL.Scheduled_Ship_Date = PAR.Scheduled_Ship_Date;

// DTL.Scheduled Ship Date USR = LCL.Scheduled Ship Date
DTL.Scheduled_Ship_Date_USR = LCL.Scheduled_Ship_Date;

// DTL.Initials of Confirmation = CND.Not Entered
DTL.Transloader_Carrier_Code = *BLANK;

//?USER: Validate relations

CASE;

// IF DTL.Initials of Confirmation is Not Entered
IF DTL.Transloader_Carrier_Code = *BLANK;

// AND PAR.Status Flag 8  Y/N is Yes
AND PAR.Status_Flag_8_Y_N = 'Y';

CASE;

// IF WRK.First Time Flag is NO
IF WRK.First_Time_Flag = 'N';

//?** Initials must be entered, if blanks, send error message
CASE;

// IF DTL.Initials of Confirmation is Not Entered
IF DTL.Transloader_Carrier_Code = *BLANK;

// Send error message - 'Initials are required to complete.'
ERROR(USR4190);
MSGPARM(DTL.Transloader_Carrier_Code);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

ENDIF;

ENDIF;

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

CASE;

// IF PAR.Status Flag 8  Y/N is Yes
IF PAR.Status_Flag_8_Y_N = 'Y';

// AND DTL.Initials of Confirmation is Not Entered
AND DTL.Transloader_Carrier_Code = *BLANK;

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Initials of Confirmation = DTL.Initials of Confirmation
PAR.Transloader_Carrier_Code = DTL.Transloader_Carrier_Code;

ENDIF;

ENDIF;

