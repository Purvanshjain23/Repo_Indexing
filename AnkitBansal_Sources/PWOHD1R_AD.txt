// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWOHD1R
// ?Date: 14.08.2025 Time: 02:57:12
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 5/06/2021 JBB SDD619 - Repayments by Business User
//?                        Function created.  Display record values
//?                        of a Tattoo Repayment Detail record.
ENDDO;

//?USER: Load detail screen from DBF record

//?Retrieve current values of the editable fields.
EXECUTE FUNCTION(Rtv Tattoo All Fields RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1232364;
PARAMETER(DB1.BOH_Company_Number);
PARAMETER(DB1.BOH_Buy_Order_Number);
PARAMETER(DB1.BOL_Load_Number);
PARAMETER(DB1.TH_Tattoo_Number);
PARAMETER(DB1.TH_Kill_Date);
PARAMETER(NLL.TH_Purchase_Date);
PARAMETER(NLL.TH_Group_Reference);
PARAMETER(NLL.TH_Live_Purchase_UOM);
PARAMETER(NLL.TH_Live_Purchase_Price);
PARAMETER(NLL.TH_Live_Gross_Amt);
PARAMETER(NLL.TH_LIve_Net_Amt);
PARAMETER(NLL.TH_Resale_UOM);
PARAMETER(NLL.TH_Recalc_Live_Wgt_Yld);
PARAMETER(NLL.TH_Pricing_Date);
PARAMETER(NLL.TH_Resale_Spread_Sts);
PARAMETER(NLL.TH_Dead_On_Arrival);
PARAMETER(NLL.TH_Head_Received);
PARAMETER(NLL.TH_Yard_Deads);
PARAMETER(NLL.TH_Held_Over);
PARAMETER(NLL.TH_Head_Condemned);
PARAMETER(NLL.TH_Head_Killed);
PARAMETER(NLL.TH_Head_Adds);
PARAMETER(NLL.TH_Head_Accepted);
PARAMETER(NLL.TH_Live_Wgt);
PARAMETER(NLL.TH_Adj_Live_Wgt);
PARAMETER(NLL.TH_Hot_Wgt);
PARAMETER(NLL.TH_Tot_Loin_Eye_Depth);
PARAMETER(NLL.TH_Tot_Backfat_Inches);
PARAMETER(NLL.TH_Tot_Light_Reflectance);
PARAMETER(NLL.TH_Avg_Live_Wgt);
PARAMETER(NLL.TH_Avg_Hot_Wgt);
PARAMETER(NLL.TH_Avg_Light_Reflectance);
PARAMETER(NLL.TH_Avg_Lean_Percent);
PARAMETER(NLL.TH_Avg_Loin_Eye_Depth);
PARAMETER(NLL.TH_Avg_Backfat);
PARAMETER(NLL.TH_Std_Yield_Percent);
PARAMETER(NLL.TH_Actual_Yield);
PARAMETER(NLL.TH_Adj_Actual_Yield);
PARAMETER(NLL.TH_Yield_Difference);
PARAMETER(NLL.TH_Recalc_Live_Wgt);
PARAMETER(NLL.TH_CM_Market_Price);
PARAMETER(NLL.TH_CM_Base_Mkt_Price);
PARAMETER(NLL.TH_CM_Base_Mkt_Price_Amt);
PARAMETER(NLL.TH_CM_Sort_Discount_Amt);
PARAMETER(NLL.TH_CM_Yield_Gain_Loss_Amt);
PARAMETER(NLL.TH_CM_Base_Carcass_Value);
PARAMETER(NLL.TH_CM_LN_AddOn_Deduct_Amt);
PARAMETER(NLL.TH_CM_Carcass_Gross_Amt);
PARAMETER(NLL.TH_Deduction_Amt);
PARAMETER(NLL.TH_Total_Net_WO_Adds);
PARAMETER(NLL.TH_Carcass_Net_Amt);
PARAMETER(NLL.TH_Additions_Amt);
PARAMETER(NLL.TH_Payment_Gross);
PARAMETER(NLL.Th_Payment_Net_Amt);
PARAMETER(NLL.TH_AP_Voucher_Document#);
PARAMETER(NLL.TH_Freight_Amount);
PARAMETER(NLL.TH_Accrual_Amount);
PARAMETER(NLL.TH_Fixed_Cost_Amount);
PARAMETER(NLL.TH_Calc_Net_Sts);
PARAMETER(DTL.TH_Payment_Sts);
PARAMETER(NLL.TH_Header_Error_Sts);
PARAMETER(NLL.TH_Detail_Error_Sts);
PARAMETER(NLL.TH_Kill_Balancing_Sts);
PARAMETER(NLL.TH_Bal_to_Kill_Gen);
PARAMETER(NLL.TH_Commission_A_P_Voucher);
PARAMETER(NLL.TH_Voucher_Payment_Date);
PARAMETER(NLL.TH_User_Error_Override);
PARAMETER(NLL.TH_Held_Over_Record);
PARAMETER(NLL.TH_Sex);
PARAMETER(NLL.TH_Held_Ovr_Completed_Dte);
PARAMETER(NLL.TH_Commission_Paid_Date);
PARAMETER(NLL.TH_Actual_Check_Date);
PARAMETER(NLL.TH_Shipped_Weight);
PARAMETER(NLL.TH_Avg_Hot_Wgt_EXC_ADD);
PARAMETER(NLL.TH_FFLI);
PARAMETER(NLL.TH_Kill_Product_Value);
PARAMETER(NLL.TH_Cut_Product_Value);
PARAMETER(NLL.TH_Render_Product_Value);
PARAMETER(NLL.TH_Head_Excluded);
PARAMETER(NLL.TH_CM_Bse_Mkt_Live_CWT);
PARAMETER(NLL.TH_CM_Bse_Mkt_Carc_CWT);
PARAMETER(NLL.TH_CM_Srt_Dsc_Live_CWT);
PARAMETER(NLL.TH_CM_Srt_Dsc_Carc_CWT);
PARAMETER(NLL.TH_CM_Yld_G_L_Live_CWT);
PARAMETER(NLL.TH_CM_Yld_G_L_Carc_CWT);
PARAMETER(NLL.TH_CM_Crc_Val_Live_CWT);
PARAMETER(NLL.TH_CM_Crc_Val_Carc_CWT);
PARAMETER(NLL.TH_CM_Lean_Prem_Live_CWT);
PARAMETER(NLL.TH_CM_Lean_Prem_Carc_CWT);
PARAMETER(NLL.TH_CM_Gross_Live_CWT);
PARAMETER(NLL.TH_CM_Gross_Carc_CWT);
PARAMETER(NLL.TH_Source_Type);
PARAMETER(NLL.TH_Scale_Ticket_Sts);
PARAMETER(NLL.TH_Payment_Type);
PARAMETER(DTL.TH_HPS_Movement_Ref_#);
PARAMETER(NLL.TH_Source_Code);
PARAMETER(NLL.TH_Hog_Class_Type);
PARAMETER(NLL.TH_Posted_to_HPS_Flag);
PARAMETER(NLL.TH_Schedule_Kill_Shift);
PARAMETER(NLL.TH_Shift_Held_Over);
PARAMETER(NLL.TH_State);
PARAMETER(NLL.TH_Unused_Code);
PARAMETER(NLL.TH_Unused_Sts_2_Pos);
PARAMETER(NLL.TH_Commission_Status);
PARAMETER(NLL.TH_Paid_2_Week_Avg_Y_N);
PARAMETER(NLL.TH_Unused_Sts_1_Pos_3);
PARAMETER(NLL.TH_DOA_Weight);
PARAMETER(NLL.TH_Avg_Lean_EXC_ADD);
PARAMETER(NLL.TH_HPS_Farm_Site);
PARAMETER(NLL.TH_Shift_Held_Over_Head);
PARAMETER(NLL.TH_Sorting_Amount);
PARAMETER(NLL.TH_Head_Identified);
PARAMETER(NLL.TH_Percent_Identified);
PARAMETER(NLL.TH_Percent_Accepted);
PARAMETER(NLL.TH_Head_Adjusted_LN);
PARAMETER(NLL.TH_PHA_Head_Adds);
PARAMETER(NLL.TH_PHA_Add_Type);
PARAMETER(NLL.TH_PHA_Average_Type);
PARAMETER(NLL.TH_PHA_Add_Reason);
PARAMETER(NLL.TH_PHA_Yield_Percent);
PARAMETER(NLL.TH_PHA_Lean_Prm_Crc_CWT);
PARAMETER(NLL.TH_VC_Gross_Value_HD);
PARAMETER(NLL.TH_Excluded_Gross_Value);
PARAMETER(NLL.TH_Avg_Lean);
PARAMETER(NLL.TH_Broken_Back_Hd_Count);
PARAMETER(NLL.TH_Hot_Scl_Upload_Time);
PARAMETER(NLL.TH_Unused_Nbr_4);
PARAMETER(NLL.TH_Excluded_Carc_Val);
PARAMETER(NLL.TH_Excluded_Premium);
PARAMETER(NLL.TH_Unused_Nbr_7);
PARAMETER(NLL.TH_Unused_Nbr_8);
PARAMETER(NLL.TH_Unused_Nbr_9);
PARAMETER(NLL.TH_Unused_Nbr_10);
PARAMETER(NLL.TH_Break_Even_Price_CWT);
PARAMETER(NLL.TH_Meat_Value_Factor_Amt);
PARAMETER(NLL.TH_Yld_Parm_Adj_Yield);
PARAMETER(NLL.TH_PHA_Sort_Disc_Fctr);
PARAMETER(NLL.TH_Avg_Loin_Eye_2_dec);
PARAMETER(NLL.TH_Avg_Backfat_2_Dec);
PARAMETER(NLL.TH_HITCH_Old_Pay_Net_Amt);
PARAMETER(NLL.TH_MPR_Sort_Loss);
PARAMETER(NLL.TH_Unused_Nbr_19);
PARAMETER(NLL.TH_Unused_Nbr_20);
PARAMETER(NLL.TH_Cold_Scl_Upload_Date);
PARAMETER(NLL.TH_Cold_Scl_Upload_Time);
PARAMETER(NLL.TH_Head_LFT);
PARAMETER(NLL.TH_Head_EUT_KOA);
PARAMETER(NLL.TH_Unused_Date_5);
PARAMETER(NLL.TH_Unused_Sts_1);
PARAMETER(NLL.TH_Unused_Sts_2);
PARAMETER(NLL.TH_Unused_Sts_3);
PARAMETER(NLL.TH_Unused_Sts_4);
PARAMETER(NLL.TH_Unused_Sts_5);
PARAMETER(NLL.TH_Unused_Sts_6);
PARAMETER(NLL.TH_Unused_Sts_7);
PARAMETER(NLL.TH_Unused_Sts_8);
PARAMETER(NLL.DF_Defect_Code);
PARAMETER(DTL.THP_Process_Code);
PARAMETER(NLL.PD_Producer_Code);
PARAMETER(NLL.PL_Location_Code);
PARAMETER(NLL.HB_Buyer_Code);
PARAMETER(NLL.GN_Genetic_Code);
PARAMETER(NLL.HC_Class_Code);
PARAMETER(NLL.RS_User_Changed);
PARAMETER(NLL.RS_Date_Changed);
PARAMETER(NLL.RS_Time_Changed);
PARAMETER(NLL.RS_Record_Status);
PARAMETER(NLL.RS_Job);
PARAMETER(NLL.RS_Program);
PARAMETER(NLL.RS_User_Added);
PARAMETER(NLL.RS_Date_Added);
PARAMETER(NLL.RS_Time_Added);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // LCL.Net Amount           USR = LCL.Net Amount           USR + DB1.Th Payment Net Amt
 LCL.Net_Amount_USR = LCL.Net_Amount_USR + DB1.Th_Payment_Net_Amt;

 //?USER: Exit processing

 // PAR.Th Payment Net Amt = LCL.Th Payment Net Amt
 PAR.Th_Payment_Net_Amt = LCL.Th_Payment_Net_Amt;

}


EXECUTE FUNCTION(Rtv Accum Pen Head    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1366450;
PARAMETER(DB1.BOH_Company_Number);
PARAMETER(DB1.BOH_Buy_Order_Number);
PARAMETER(DB1.BOL_Load_Number);
PARAMETER(DB1.TH_Tattoo_Number);
PARAMETER(DB1.TH_Kill_Date);
PARAMETER(DTL.Pen_Head_New);
{
 //?USER: Initialize routine

 // PAR.TD Pen Head = CON.*ZERO
 PAR.TD_Pen_Head = *ZERO;

 //?USER: Process Data record

 // PAR.TD Pen Head = PAR.TD Pen Head + DB1.TD Pen Head
 PAR.TD_Pen_Head = PAR.TD_Pen_Head + DB1.TD_Pen_Head;

}


EXECUTE FUNCTION(Rtv Buy Ord Info ALL  RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1154917;
PARAMETER(DB1.BOH_Company_Number);
PARAMETER(DB1.BOH_Buy_Order_Number);
PARAMETER(NLL.BOH_Buy_Order_Date);
PARAMETER(NLL.BOH_Kill_Date);
PARAMETER(NLL.BOH_Payment_Type);
PARAMETER(NLL.BOH_Buy_Order_Type);
PARAMETER(NLL.BOH_Market_Add_Deduct);
PARAMETER(NLL.BOH_Status);
PARAMETER(NLL.BOH_Delv_Plan_Printed);
PARAMETER(NLL.BOH_Quote_Price_Type);
PARAMETER(NLL.BOH_Quoted_Base_Mkt_Price);
PARAMETER(NLL.PPWS_Company_Number);
PARAMETER(NLL.CW_Year);
PARAMETER(NLL.CW_Week_Number);
PARAMETER(DTL.Producer_Code_New);
PARAMETER(DTL.Location_Code_New);
PARAMETER(DTL.Contract_Code_New);
PARAMETER(DTL.Sub_Contract_Code_New);
PARAMETER(NLL.GN_Genetic_Code);
PARAMETER(NLL.PO_Option_Code);
PARAMETER(NLL.CMP_Program_Code);
PARAMETER(NLL.HB_Buyer_Code);
PARAMETER(NLL.RS_Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Site ID            RT) TYPE(RTVOBJ) FILE(PKDNCPP)          AB1268433;
PARAMETER(DB1.BOH_Company_Number);
PARAMETER(DB1.BOH_Buy_Order_Number);
PARAMETER(DB1.BOL_Load_Number);
PARAMETER(DB1.TH_Tattoo_Number);
PARAMETER(DB1.TH_Kill_Date);
PARAMETER(NLL.PD_Producer_Code);
PARAMETER(DTL.Site_Id_New);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.TRD Trucker Payment Sts = DB1.TRD Trucker Payment Sts
DTL.TRD_Trucker_Payment_Sts = DB1.TRD_Trucker_Payment_Sts;

//?Load Tattoo Repayment Status text
CASE;

// IF DTL.TRD Repayment Status is Created
IF DTL.TRD_Repayment_Status = 'C';

// DTL.Desc 15 USR = CON.Created
DTL.Desc_15_USR = 'Created';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Unpaid
IF DTL.TRD_Repayment_Status = 'U';

// DTL.Desc 15 USR = CON.Unpaid
DTL.Desc_15_USR = 'Unpaid';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Edited
IF DTL.TRD_Repayment_Status = 'E';

// DTL.Desc 15 USR = CON.Edited
DTL.Desc_15_USR = 'Edited';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Transfered
IF DTL.TRD_Repayment_Status = 'T';

// DTL.Desc 15 USR = CON.Transfered
DTL.Desc_15_USR = 'Transfered';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Payment Edit Complete
IF DTL.TRD_Repayment_Status = 'P';

// DTL.Desc 15 USR = CON.Pymt Edit Cmplt
DTL.Desc_15_USR = 'Pymt Edit Cmplt';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Payment Edit Error
IF DTL.TRD_Repayment_Status = 'Q';

// DTL.Desc 15 USR = CON.Pymt Edit Error
DTL.Desc_15_USR = 'Pymt Edit Error';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Payment Edit Executed
IF DTL.TRD_Repayment_Status = 'X';

// DTL.Desc 15 USR = CON.Pymt Edit Start
DTL.Desc_15_USR = 'Pymt Edit Start';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Payment Edit Incomplete
IF DTL.TRD_Repayment_Status = 'I';

// DTL.Desc 15 USR = CON.Pymt Edit Incml
DTL.Desc_15_USR = 'Pymt Edit Incml';

//?Load Tattoo Repayment Status text
// IF DTL.TRD Repayment Status is Repaid
IF DTL.TRD_Repayment_Status = 'R';

// DTL.Desc 15 USR = CON.Repaid
DTL.Desc_15_USR = 'Repaid';

ENDIF;

//?Change color of Before and After values if different
CASE;

// IF DTL.TRD Head Received NE DTL.Pen Head New
IF DTL.TRD_Pen_Head <> DTL.Pen_Head_New;

// LCL.Tattoo Repay Diff-Head = CND.Yes
LCL.Tattoo_Repay_Diff_Head = 'Y';

//?Change color of Before and After values if different
// IF DTL.PD Producer Code NE DTL.Producer Code New
IF DTL.PD_Producer_Code <> DTL.Producer_Code_New;

// LCL.Tattoo Repay Diff-Prdcr = CND.Yes
LCL.Tattoo_Repay_Diff_Prdcr = 'Y';

//?Change color of Before and After values if different
// IF DTL.PL Location Code NE DTL.Location Code New
IF DTL.PL_Location_Code <> DTL.Location_Code_New;

// LCL.Tattoo Repay Diff-Locatn = CND.Yes
LCL.Tattoo_Repay_Diff_Locatn = 'Y';

//?Change color of Before and After values if different
// IF DTL.PC Contract Code NE DTL.Contract Code New
IF DTL.PC_Contract_Code <> DTL.Contract_Code_New;

// LCL.Tattoo Repay Diff-CAK = CND.Yes
LCL.Tattoo_Repay_Diff_CAK = 'Y';

//?Change color of Before and After values if different
// IF DTL.PSC Sub-Contract Code NE DTL.Sub-Contract Code New
IF DTL.PSC_Sub_Contract_Code <> DTL.Sub_Contract_Code_New;

// LCL.Tattoo Repay Diff-Sub CAK = CND.Yes
LCL.Tattoo_Repay_Diff_Sub_CAK = 'Y';

//?Change color of Before and After values if different
// IF DTL.PS Site ID NE DTL.Site Id New
IF DTL.PS_Site_ID <> DTL.Site_Id_New;

// LCL.Tattoo Repay Diff-Site = CND.Yes
LCL.Tattoo_Repay_Diff_Site = 'Y';

ENDIF;

//?USER: Process command keys

//?F7=Display Comments
CASE;

// IF DTL.*CMD key is CF07
IF DTL.*CMD_key = '07';

// Call program Dsp Tattoo Repay Cmnt DF.
CALL PROGRAM(Dsp Tattoo Repay Cmnt DF) ('PWMGDFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);

ENDIF;

