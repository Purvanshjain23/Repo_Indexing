// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPPHXFR
// ?Date: 14.08.2025 Time: 03:41:31
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?INV100
//?RMC Get a company for the Grouping - for email
//?R12069 11/16/17 DN-Commented out & moved to Step 2. Do for Group G only.
//?******* POST IVF Group G & S *******
//?R12069 11/16/17 DN-Set Other IVF Group G or S to Process.
CASE;

// IF PAR.IVF Valuation Grouping is Guymon & Triumph
IF PAR.IVF_Valuation_Grouping = 'G';

// LCL.IVF Valuation Grouping = CND.Seaboard Triumph Foods
LCL.IVF_Valuation_Grouping = 'S';

// LCL.Inv Valuation Group Desc = Condition name of LCL.IVF Valuation Grouping
LCL.Inv_Valuation_Group_Desc = RTVCND(LCL.IVF_Valuation_Grouping);

//?R12069 11/16/17 DN-Set Other IVF Group G or S to Process.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.IVF Valuation Grouping = CND.Guymon & Triumph
LCL.IVF_Valuation_Grouping = 'G';

// LCL.Inv Valuation Group Desc = Condition name of LCL.IVF Valuation Grouping
LCL.Inv_Valuation_Group_Desc = RTVCND(LCL.IVF_Valuation_Grouping);

ENDIF;

//?1. Change Post Inventory Sts to Posted
EXECUTE FUNCTION(Rtv Chg Post Sts      RT) TYPE(RTVOBJ) FILE(PPBTCPP)           AC1740728;
PARAMETER(PAR.IVF_Valuation_Grouping);
PARAMETER(PAR.IVF_Week_Ending_Date);
PARAMETER(PAR.IVF_Post_Inventory_Sts);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.IVF Post Inventory Sts is Posted
 IF DB1.IVF_Post_Inventory_Sts = 'P';

 // WRK.IVF Post Inventory Sts = CND.Repost
 WRK.IVF_Post_Inventory_Sts = 'R';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.IVF Post Inventory Sts = PAR.IVF Post Inventory Sts
 WRK.IVF_Post_Inventory_Sts = PAR.IVF_Post_Inventory_Sts;

 ENDIF;

 EXECUTE FUNCTION(Chg Inventory Value   CH) TYPE(CHGOBJ) FILE(PPBTCPP)           AC1738125;
 PARAMETER(DB1.IVF_Valuation_Grouping);
 PARAMETER(DB1.IVF_Week_Ending_Date);
 PARAMETER(DB1.IVF_Item_Code);
 PARAMETER(DB1.IVF_WIP_FG_Item_Code);
 PARAMETER(DB1.IVF_Item_Type);
 PARAMETER(DB1.IVF_Unused_Sts_2);
 PARAMETER(DB1.IVF_Item_Cmdty_Price_Grp);
 PARAMETER(DB1.IVF_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(DB1.IVF_Item_Structure_Type);
 PARAMETER(DB1.IVF_Item_Structure_Group);
 PARAMETER(DB1.IVF_Item_Structure_Class);
 PARAMETER(DB1.IVF_Item_Market_Overage);
 PARAMETER(DB1.IVF_Item_GL_Sub_Code);
 PARAMETER(DB1.IVF_Item_UOM_Pricing);
 PARAMETER(DB1.IVF_Inventory_Value_Mthd);
 PARAMETER(DB1.IVF_Production_Value_Mthd);
 PARAMETER(DB1.IVF_Beg_Inv_Price_Per_CWT);
 PARAMETER(DB1.IVF_Sales_Price_Per_CWT);
 PARAMETER(DB1.IVF_Sales_Price_Per_LB_Dt);
 PARAMETER(DB1.IVF_Market_Price_Per_CWT);
 PARAMETER(DB1.IVF_Warehouse_Pounds);
 PARAMETER(DB1.IVF_Whs_Price_Per_CWT);
 PARAMETER(DB1.IVF_Ovrrde_Prod_Price_CWT);
 PARAMETER(DB1.IVF_Ovrrde_Prod_Comment);
 PARAMETER(DB1.IVF_Curr_Wk_Prod_Price_CW);
 PARAMETER(DB1.IVF_Curr_Wk_Prod_Status);
 PARAMETER(DB1.IVF_Ovrrde_Inv_Val_Prc_CW);
 PARAMETER(DB1.IVF_Ovrrde_Inv_Val_Commnt);
 PARAMETER(DB1.IVF_Cur_Wk_Inv_Val_Prc_CW);
 PARAMETER(DB1.IVF_Cur_Wk_Inv_Val_Status);
 PARAMETER(DB1.IVF_Unused_Weight);
 PARAMETER(WRK.IVF_Post_Inventory_Sts);
 PARAMETER(DB1.IVF_Unused_Date);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


EXECUTE FUNCTION(Rtv Chg Post Sts      RT) TYPE(RTVOBJ) FILE(PPBTCPP)           AC1740728;
PARAMETER(LCL.IVF_Valuation_Grouping);
PARAMETER(PAR.IVF_Week_Ending_Date);
PARAMETER(PAR.IVF_Post_Inventory_Sts);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.IVF Post Inventory Sts is Posted
 IF DB1.IVF_Post_Inventory_Sts = 'P';

 // WRK.IVF Post Inventory Sts = CND.Repost
 WRK.IVF_Post_Inventory_Sts = 'R';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.IVF Post Inventory Sts = PAR.IVF Post Inventory Sts
 WRK.IVF_Post_Inventory_Sts = PAR.IVF_Post_Inventory_Sts;

 ENDIF;

 EXECUTE FUNCTION(Chg Inventory Value   CH) TYPE(CHGOBJ) FILE(PPBTCPP)           AC1738125;
 PARAMETER(DB1.IVF_Valuation_Grouping);
 PARAMETER(DB1.IVF_Week_Ending_Date);
 PARAMETER(DB1.IVF_Item_Code);
 PARAMETER(DB1.IVF_WIP_FG_Item_Code);
 PARAMETER(DB1.IVF_Item_Type);
 PARAMETER(DB1.IVF_Unused_Sts_2);
 PARAMETER(DB1.IVF_Item_Cmdty_Price_Grp);
 PARAMETER(DB1.IVF_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(DB1.IVF_Item_Structure_Type);
 PARAMETER(DB1.IVF_Item_Structure_Group);
 PARAMETER(DB1.IVF_Item_Structure_Class);
 PARAMETER(DB1.IVF_Item_Market_Overage);
 PARAMETER(DB1.IVF_Item_GL_Sub_Code);
 PARAMETER(DB1.IVF_Item_UOM_Pricing);
 PARAMETER(DB1.IVF_Inventory_Value_Mthd);
 PARAMETER(DB1.IVF_Production_Value_Mthd);
 PARAMETER(DB1.IVF_Beg_Inv_Price_Per_CWT);
 PARAMETER(DB1.IVF_Sales_Price_Per_CWT);
 PARAMETER(DB1.IVF_Sales_Price_Per_LB_Dt);
 PARAMETER(DB1.IVF_Market_Price_Per_CWT);
 PARAMETER(DB1.IVF_Warehouse_Pounds);
 PARAMETER(DB1.IVF_Whs_Price_Per_CWT);
 PARAMETER(DB1.IVF_Ovrrde_Prod_Price_CWT);
 PARAMETER(DB1.IVF_Ovrrde_Prod_Comment);
 PARAMETER(DB1.IVF_Curr_Wk_Prod_Price_CW);
 PARAMETER(DB1.IVF_Curr_Wk_Prod_Status);
 PARAMETER(DB1.IVF_Ovrrde_Inv_Val_Prc_CW);
 PARAMETER(DB1.IVF_Ovrrde_Inv_Val_Commnt);
 PARAMETER(DB1.IVF_Cur_Wk_Inv_Val_Prc_CW);
 PARAMETER(DB1.IVF_Cur_Wk_Inv_Val_Status);
 PARAMETER(DB1.IVF_Unused_Weight);
 PARAMETER(WRK.IVF_Post_Inventory_Sts);
 PARAMETER(DB1.IVF_Unused_Date);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


//?2. Update Weekly Product Revenue Detail File (TFP010) (Final)
EXECUTE FUNCTION(RTV Co for value/alph RT) TYPE(RTVOBJ) FILE(PDKMREP)           AC2137015;
PARAMETER(LCL.Company_Number);
PARAMETER('IVFGROUP');
PARAMETER('G');
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Call program Rtv Alpha Value       XF.
CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
PARAMETER(LCL.Company_Number);
PARAMETER('FEEPAYPROC');
PARAMETER(LCL.Status_Y_or_N);

//?R12069 11/16/17 DN-Call Weekly Product Revenue Update if Group G Only.
CASE;

// IF LCL.Status - Y or N is yes
IF LCL.Status_Y_or_N = 'Y';

// AND PAR.IVF Valuation Grouping is Guymon & Triumph
AND ( PAR.IVF_Valuation_Grouping = 'G';

// OR LCL.IVF Valuation Grouping is Guymon & Triumph
OR LCL.IVF_Valuation_Grouping = 'G' );

// Call program Upd RvnDtl W Inv Value UP.
CALL PROGRAM(Upd RvnDtl W Inv Value UP) ('TF206');
PARAMETER(WRK.USR_Return_Code);
PARAMETER(PAR.IVF_Week_Ending_Date);

// Call program WKLY Product Rvn Rep/dwl.
CALL PROGRAM(WKLY Product Rvn Rep/dwl) ('TF411CL');

// Call program Yield Build (Weekly).
CALL PROGRAM(Yield Build (Weekly)) ('TF270CL');

ENDIF;

//?T10474 06/02/17 RMC call new pgm to roll week forward for ItemStdCost
CASE;

// IF PAR.IVF Valuation Grouping is Seaboard Triumph Foods
IF PAR.IVF_Valuation_Grouping = 'S';

// OR LCL.IVF Valuation Grouping is Seaboard Triumph Foods
OR LCL.IVF_Valuation_Grouping = 'S';

//?R12069 11/16/17 DN-Added c2 parm.
// WRK.To Date               USR = PAR.IVF Week Ending Date
WRK.To_Date_USR = PAR.IVF_Week_Ending_Date;

//?R12069 11/21/17 DN-Hard Coded Company Number 440.
// Call program Exc Roll to Current Wk XF.
CALL PROGRAM(Exc Roll to Current Wk XF) ('PUCXXFR');
PARAMETER(440);
PARAMETER(WRK.To_Date_USR);

ENDIF;

//?3. Print Post Reports: Prelim & Final
//?      A. Inventory Balance Report- lists inventory components & balances
//?      B. Inventory Value Report- lists inventory & production values
// WRK.Text USR 9 = CVTVAR(PAR.IVF Week Ending Date)
WRK.Text_USR_9 = CVTVAR(PAR.IVF_Week_Ending_Date);

// Execute function *Move-Right.
EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
PARAMETER(WRK.Date_Char_8_USR);
PARAMETER(WRK.Text_USR_9);
{
 C                     MOVE #IPANA    #OO9NA
}


//?RMC 6/26/06 pass in blanks for email addr
// Call program Prt Inv Stk Value Rpt UP.
CALL PROGRAM(Prt Inv Stk Value Rpt UP) ('PPRBUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(*ZERO);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(*BLANK);
PARAMETER(WRK.Date_Char_8_USR);
PARAMETER('Y');
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER('Y');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(PAR.IVF_Valuation_Grouping);
PARAMETER(PAR.Inv_Valuation_Group_Desc);

//?R12069 11/21/17 DN-Print Post Reports for Other Group G or S.
// Call program Prt Inv Stk Value Rpt UP.
CALL PROGRAM(Prt Inv Stk Value Rpt UP) ('PPRBUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(*ZERO);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(*BLANK);
PARAMETER(WRK.Date_Char_8_USR);
PARAMETER('Y');
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER('Y');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(LCL.IVF_Valuation_Grouping);
PARAMETER(LCL.Inv_Valuation_Group_Desc);

//?4. Email IVF Post Message
EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(LCL.Company_Number);
PARAMETER('PRKIVFPST');
PARAMETER(WRK.DL_List_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?R12069 11/16/17 DN-Added Both IVF Group G & S to Message.
// Retrieve message - 'Inventory Values have been posted for group G & S week &1.'
WRK.Office_Message_USR = RTVMSG(USR3622);
PARAMETER(PAR.IVF_Week_Ending_Date);

// Call program SND Pager Msg (MPLUS) UP.
CALL PROGRAM(SND Pager Msg (MPLUS) UP) ('POMSUPC');
PARAMETER(WRK.DL_List_ID);
PARAMETER(WRK.Office_Message_USR);

