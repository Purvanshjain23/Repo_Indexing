     H/TITLE Prt Schedule Variance PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 04/29/09  Time  : 15:28:27
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDI8CPLAIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Typ/Dte/Pwhs/Itm/Whs/Co
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FPNHWPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Schedule Variance PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     I@I8CPUS
      * PS Prod Item Schedule     Retrieval index
      * Renamed input format fields
     I              I8AIC3                          WAAIC3
     I              I8V5ST                          WAV5ST
     I              I8ELDT                          WAELDT
     I              I8HGCD                          WAHGCD
     I              I8AJCD                          WAAJCD
     I              I8GPDT                          WAGPDT
     I              I8WTSP                          WAWTSP
     I              I8QTSP                          WAQTSP
     I              I8DJPC                          WADJPC
     I              I8F8WG                          WAF8WG
     I              I8WTIN                          WAWTIN
     I              I8D5NB                          WAD5NB
     I              I8DXWG                          WADXWG
     I              I8B2NB                          WAB2NB
     I              I8WTCN                          WAWTCN
     I              I8PSCV                          WAPSCV
     I              I8SAWT                          WASAWT
     I              I8B9NB                          WAB9NB
     I              I8D1WG                          WAD1WG
     I              I8CBNB                          WACBNB
     I              I8EZWG                          WAEZWG
     I              I8CCNB                          WACCNB
     I              I8E0WG                          WAE0WG
     I              I8D6NB                          WAD6NB
     I              I8OAWT                          WAOAWT
     I              I8CDNB                          WACDNB
     I              I8UNW2                          WAUNW2
     I              I8CENB                          WACENB
     I              I8F9WG                          WAF9WG
     I              I8BPNB                          WABPNB
     I              I8GAWG                          WAGAWG
     I              I8BQNB                          WABQNB
     I              I8GBWG                          WAGBWG
     I              I8BRNB                          WABRNB
     I              I8GCWG                          WAGCWG
     I              I8BSNB                          WABSNB
     I              I8GDWG                          WAGDWG
     I              I8BWNB                          WABWNB
     I              I8GEWG                          WAGEWG
     I              I8PS6U                          WAPS6U
     I              I8WCST                          WAWCST
     I              I8WPST                          WAWPST
     I              I8B5ST                          WAB5ST
     I              I8TFST                          WATFST
     I              I8TEST                          WATEST
     I              I8THST                          WATHST
     I              I8UDST                          WAUDST
     I              I8UFST                          WAUFST
     I              I8UGST                          WAUGST
     I              I8UHST                          WAUHST
     I              I8B6ST                          WAB6ST
     I              I8B7ST                          WAB7ST
     I              I8DVWG                          WADVWG
     I              I8D7NB                          WAD7NB
     I              I8FCAD                          WAFCAD
     I              I8D9NB                          WAD9NB
     I              I8DWWG                          WADWWG
     I              I8EANB                          WAEANB
     I              I8SHWT                          WASHWT
     I              I8EBNB                          WAEBNB
     I              I8AVWT                          WAAVWT
     I              I8ECNB                          WAECNB
     I              I8WTON                          WAWTON
     I              I8EDNB                          WAEDNB
     I              I8FNWT                          WAFNWT
     I              I8EENB                          WAEENB
     I              I8QTAS                          WAQTAS
     I              I8EFNB                          WAEFNB
     I              I8WAIO                          WAWAIO
     I              I8EGNB                          WAEGNB
     I              I8R3CD                          WAR3CD
     I              I8RGNB                          WARGNB
     I              I8RHNB                          WARHNB
     I              I8RINB                          WARINB
     I              I8XRCD                          WAXRCD
     I              I8UVST                          WAUVST
     I              I8UWST                          WAUWST
     I              I8UXST                          WAUXST
     I              I8VSST                          WAVSST
     I              I8AATM                          WAAATM
     I              I8AYNA                          WAAYNA
     I              I8A0NA                          WAA0NA
     I              I8AXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: PS Prod Item Schedule
      * I : RST Production Type
     I                                        1   1 P1V5ST
      * I : RST Production Date
     I                                    P   2   50P1ELDT
      * I : RST PS Production Warehouse
     I                                        6   8 P1B7ST
     IP2PARM      DS
      * I :  Application Code
     I                                        1   6 P2DNCD
     IP3PARM      DS
      * FLD: Company Item
      * N :  Unit Weight
     I                                    P   1   62P3AIWG
      * N :  Piece Count Item
     I                                        7   7 P3PCCT
      * N :  Pieces Per Bag
     I                                    P   8  110P3BDNB
      * N :  Bags Per Unit
     I                                    P  12  150P3BJNB
      * I :  Print On Schedule
     I                                       16  16 P3SVST
     IP4PARM      DS
      * I :  Status Flag 1  Y/N
     I                                        1   1 P4Q1ST
     IP5PARM      DS
      * I :  Status Flag 10 Y/N
     I                                        1   1 P5DGTX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1V5ST    PARM           WP0001  1        Production Type
     C           P1ELDT    PARM           WP0002  70       Production Date
     C           P1B7ST    PARM           WP0003  3        PS Production W
     C           P2DNCD    PARM           WP0004  6        Application Cod
     C           P3SVST    PARM           WP0005  1        Print On Schedu
     C           P4Q1ST    PARM           WP0006  1        Status Flag 1
     C           P5DGTX    PARM           WP0007  1        Status Flag 10
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Schedule Variance PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$DENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Schedule Variance PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN I8V5ST    WQKA01           Production Type
     C           *LIKE     DEFN I8ELDT    WQKA02           Production Date
     C           *LIKE     DEFN I8B7ST    WQKA03           PS Production W
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Production Type
     C                     KFLD           WQKA02           Production Date
     C                     KFLD           WQKA03           PS Production W
      * Setup key
     C                     MOVELP1V5ST    WQKA01           Production Type
     C                     Z-ADDP1ELDT    WQKA02           Production Date
     C                     MOVELP1B7ST    WQKA03           PS Production W
      * Establish starting position
     C           KRSA      SETLL@I8CPBS                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Production Type
     C                     MOVEL'Y'       W0AL01  1        Production Date
     C                     MOVEL'Y'       W0AL02  1        PS Production W
     C                     MOVEL'Y'       W0AL03  1        Item Code
     C                     MOVEL'Y'       W0AL04  1        Warehouse Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDI8AIC3    $CAIC3           Company Number
     C                     MOVELI8V5ST    $CV5ST           Production Type
     C                     Z-ADDI8ELDT    $CELDT           Production Date
     C                     Z-ADDI8HGCD    $CHGCD           Item Code
     C                     MOVEL*BLANK    $CAVNA           Description Lin
     C                     MOVELI8R3CD    $CR3CD           Department Code
     C                     MOVELI8AJCD    $CAJCD           Warehouse Code
     C                     MOVEL*BLANK    $CADCD           U/M - Primary
     C                     Z-ADD*ZERO     $CHNQT           Qty Sched To Pr
     C                     Z-ADDI8DVWG    $CDVWG           PS Weight Order
     C                     Z-ADDI8D7NB    $CD7NB           PS Pieces Order
     C                     Z-ADDI8FCAD    $CFCAD           PS Weight FC Ad
     C                     Z-ADDI8D9NB    $CD9NB           PS Pieces FC Ad
     C                     Z-ADDI8DWWG    $CDWWG           PS Weight FX Ad
     C                     Z-ADDI8EANB    $CEANB           PS Pieces FX Ad
     C                     Z-ADDI8AVWT    $CAVWT           PS Weight Avail
     C                     Z-ADDI8ECNB    $CECNB           PS Pieces Avail
     C                     Z-ADDI8WTON    $CWTON           PS Weight Produ
     C                     Z-ADDI8EDNB    $CEDNB           PS Pieces Produ
     C                     Z-ADDI8WTCN    $CWTCN           PS Weight Conve
     C                     Z-ADDI8PSCV    $CPSCV           PS Pieces Conve
     C                     Z-ADDI8FNWT    $CFNWT           PS Weight Fab N
     C                     Z-ADDI8EENB    $CEENB           PS Pieces Fab N
     C                     Z-ADDI8DXWG    $CDXWG           PS Weight Stand
     C                     Z-ADDI8B2NB    $CB2NB           PS Pieces Stand
     C                     Z-ADDI8QTSP    $CQTSP           PS Pieces Plann
     C                     Z-ADDI8WAIO    $CWAIO           PS Weight Sched
     C                     Z-ADDI8EGNB    $CEGNB           PS Pieces Sched
     C                     Z-ADDI8UNW2    $CUNW2           PS Weight Inv A
     C                     Z-ADDI8CENB    $CCENB           PS Pieces Inv A
     C                     Z-ADDI8F9WG    $CF9WG           PS Unit Weight
     C                     Z-ADDI8BPNB    $CBPNB           PS Pieces Whse
     C                     Z-ADDI8GAWG    $CGAWG           PS Weight Whse
     C                     Z-ADDI8BQNB    $CBQNB           PS Pieces Unuse
     C                     Z-ADDI8GBWG    $CGBWG           PS Weight Unuse
     C                     Z-ADDI8BRNB    $CBRNB           PS Pieces Unuse
     C                     Z-ADDI8GCWG    $CGCWG           PS Weight Unuse
     C                     Z-ADDI8BSNB    $CBSNB           PS Pieces Unuse
     C                     Z-ADDI8GDWG    $CGDWG           PS Weight Unuse
     C                     Z-ADDI8BWNB    $CBWNB           PS Pieces Unuse
     C                     Z-ADDI8GEWG    $CGEWG           PS Weight Unuse
     C                     Z-ADDI8PS6U    $CPS6U           PS Pieces Unuse
     C                     Z-ADDI8E0WG    $CE0WG           PS Weight Ship
     C                     Z-ADDI8D6NB    $CD6NB           PS Pieces Ship
     C                     Z-ADDI8WTSP    $CWTSP           PS Weight Plann
     C                     Z-ADDI8WTIN    $CWTIN           PS Weight Inv O
     C                     Z-ADDI8D5NB    $CD5NB           PS Pieces Inv O
     C                     Z-ADDI8SHWT    $CSHWT           PS Weight Sched
     C                     Z-ADDI8EBNB    $CEBNB           PS Pieces Sched
     C                     Z-ADDI8DJPC    $CDJPC           PS % of Carcass
     C                     Z-ADDI8F8WG    $CF8WG           PS Avg Piece Wg
     C                     Z-ADDI8GPDT    $CGPDT           PS Available Sh
     C                     Z-ADDI8QTAS    $CQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     $CPIAC           Pieces Schedule
     C                     Z-ADDI8EFNB    $CEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     $CQS01           Quantity Schedu
     C                     Z-ADD*ZERO     $CF2WG           Weight Sched Pr
     C                     Z-ADD*ZERO     $CPIAL           Pieces Ordered
     C                     Z-ADD*ZERO     $CPQTY           Production Quan
     C                     Z-ADD*ZERO     $CFDWG           Production Weig
     C                     Z-ADD*ZERO     $CTQTC           Quantity 7.0 US
     C                     Z-ADD*ZERO     $CWTUS           Weight 9.2 USR
     C                     Z-ADD*ZERO     $CFUWG           Weight Producti
     C                     MOVEL*BLANK    $CSHTX           Text USR 40
     C                     Z-ADDI8OAWT    $COAWT           PS Weight Prod
     C                     Z-ADDI8CDNB    $CCDNB           PS Pieces Prod
     C                     Z-ADDI8SAWT    $CSAWT           PS Weight Shipp
     C                     Z-ADDI8B9NB    $CB9NB           PS Pieces Shipp
     C                     Z-ADDI8D1WG    $CD1WG           PS Weight Prod
     C                     Z-ADDI8CBNB    $CCBNB           PS Pieces Prod
     C                     Z-ADDI8EZWG    $CEZWG           PS Weight Inv A
     C                     Z-ADDI8CCNB    $CCCNB           PS Pieces Inv A
     C                     MOVELI8WCST    $CWCST           PS Item Id
     C                     MOVELI8WPST    $CWPST           Warehouse Type
     C                     MOVELI8B5ST    $CB5ST           PS Lock Status
     C                     MOVELI8TFST    $CTFST           PS Export/Domes
     C                     MOVELI8TEST    $CTEST           PS Print On Sch
     C                     MOVELI8THST    $CTHST           PS Piece Count
     C                     MOVELI8UDST    $CUDST           PS Unused Sts 1
     C                     MOVELI8UFST    $CUFST           PS Unused Sts 2
     C                     MOVELI8UGST    $CUGST           PS Unused Sts 3
     C                     MOVELI8UHST    $CUHST           PS Unused Sts 4
     C                     MOVELI8B6ST    $CB6ST           PS Item Sched N
     C                     MOVELI8B7ST    $CB7ST           PS Production W
     C                     Z-ADDI8RGNB    $CRGNB           Item Structure
     C                     Z-ADDI8RHNB    $CRHNB           Item Structure
     C                     Z-ADDI8RINB    $CRINB           Item Structure
     C                     MOVELI8XRCD    $CXRCD           Primal Group Co
     C                     MOVELI8UVST    $CUVST           EDI Status 1
     C                     MOVELI8UWST    $CUWST           EDI Status 2
     C                     MOVELI8UXST    $CUXST           EDI Status 3
     C                     MOVELI8VSST    $CVSST           Record Status
     C                     Z-ADDI8AATM    $CAATM           Job Time
     C                     MOVELI8AYNA    $CAYNA           User Id
     C                     MOVELI8A0NA    $CA0NA           Job Name
     C                     Z-ADDI8AXDT    $CAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN I8V5ST    WZA001           Production Type
     C                     MOVELI8V5ST    WZA001
     C           *LIKE     DEFN I8ELDT    WZA002           Production Date
     C                     Z-ADDI8ELDT    WZA002
     C           *LIKE     DEFN I8B7ST    WZA003           PS Production W
     C                     MOVELI8B7ST    WZA003
     C           *LIKE     DEFN I8HGCD    WZA004           Item Code
     C                     Z-ADDI8HGCD    WZA004
     C           *LIKE     DEFN I8AJCD    WZA005           Warehouse Code
     C                     MOVELI8AJCD    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@I8CPBS                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Print on Schedule selection
      * CASE: PAR.Print On Schedule is yes
     C           P3SVST    IFEQ 'Y'                        *IF
      * If item is marked as print on schedule "N"o then don't display
      * CASE: DB1.PS Print On Schedule is yes
     C           I8TEST    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Print On Schedule is no
     C           P3SVST    IFEQ 'N'                        *IF
      * If item is marked do not print on schedule select N only
      * CASE: DB1.PS Print On Schedule is no
     C           I8TEST    IFEQ 'N'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * par print on schedule is no value,  so do not check
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Plan Prod Sts     XF - Company Item Ext  * 
     C                     CALL 'PNHKXFR'              90  Rtv Plan Prod S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM I8AIC3    WQ0001  30       Company Number
     C                     PARM I8HGCD    WQ0002  70       Item Code
     C           YL0004    PARM *BLANK    WQ0003  1        Plan Production
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNHKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: LCL.Plan Production Sts is No
     C           YL0004    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Production Type
     C                     MOVEL*BLANK    W0AL01  1        Production Date
     C                     MOVEL*BLANK    W0AL02  1        PS Production W
     C                     MOVEL*BLANK    W0AL03  1        Item Code
     C                     MOVEL*BLANK    W0AL04  1        Warehouse Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Production Type
     C                     MOVEL'Y'       W0AL01  1        Production Date
     C                     MOVEL'Y'       W0AL02  1        PS Production W
     C                     MOVEL'Y'       W0AL03  1        Item Code
     C                     MOVEL'Y'       W0AL04  1        Warehouse Code
     C                     ELSE
      * Next record - Detect level breaks
     C           I8V5ST    IFNE WZA001                     Production Type
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           I8ELDT    IFNE WZA002                     Production Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           I8B7ST    IFNE WZA003                     PS Production W
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           I8HGCD    IFNE WZA004                     Item Code
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           I8AJCD    IFNE WZA005                     Warehouse Code
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Schedule Variance PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Production Type of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Production Date of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print PS Production Warehouse of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Item Code of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Warehouse Code of Prt Schedule Variance PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Schedule Variance PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Prd Sch Info   PS RT - Company Item  * 
     C                     EXSR SDRVGN
      * Weight Scheduled
      * CUR.PS Weight Sched Prod =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           I8DXWG    ADD  I8D1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8WTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8GAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $CQTAS           PS Weight Sched
      * Pieces Scheduled
      * CUR.PS Pieces Sched Prod =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           I8B2NB    ADD  I8CBNB    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8PSCV    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8BPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $CEFNB           PS Pieces Sched
      * Quantity Production
      * CASE: PAR.Piece Count Item is yes
     C           P3PCCT    IFEQ 'Y'                        *IF
      * Quantity Production
      * CUR.Quantity Scheduled 1 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : CUR.PS Pieces Sched Prod
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P3BDNB    MULT P3BJNB    W0WJ01           *Synon (15,0) w
     C           $CEFNB    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $CQS01           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wt is zeros, set prod schedule to zeros    FP1235
      * CASE: PAR.Unit Weight is Not equal zero
     C           P3AIWG    IFNE *ZERO                      *IF
      * Quantity Production
      * CUR.Quantity Scheduled 1 USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.PS Weight Sched Prod
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           $CQTAS    DIV  P3AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $CQS01           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $CQS01           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
      * Retrieve AM Sched production for the day from the "X" rcd   OR
      * Retrieve PLANNED production for the day from the "P" rcd
      * CASE: PAR.Status Flag 1  Y/N is No
     C           P4Q1ST    IFEQ 'N'                        *IF
      * Rtv Pland Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     MOVEL'X'       WL0002    P      Production Type
     C                     Z-ADD$CELDT    WL0003           Production Date
     C                     Z-ADD$CHGCD    WL0004           Item Code
     C                     MOVEL$CAJCD    WL0005    P      Warehouse Code
     C                     Z-ADDYL0002    WL0007           Weight Producti
     C                     Z-ADDYL0003    WL0008           Pieces Producti
     C                     Z-ADDWUCHTM    WL0009           Chilling Time U
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0006    YL0001           PS Avg Piece Wg
     C                     Z-ADDWL0007    YL0002           Weight Producti
     C                     Z-ADDWL0008    YL0003           Pieces Producti
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Pland Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     MOVEL'P'       WL0002    P      Production Type
     C                     Z-ADD$CELDT    WL0003           Production Date
     C                     Z-ADD$CHGCD    WL0004           Item Code
     C                     MOVEL$CAJCD    WL0005    P      Warehouse Code
     C                     Z-ADDYL0002    WL0007           Weight Producti
     C                     Z-ADDYL0003    WL0008           Pieces Producti
     C                     Z-ADDWUCHTM    WL0009           Chilling Time U
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0006    YL0001           PS Avg Piece Wg
     C                     Z-ADDWL0007    YL0002           Weight Producti
     C                     Z-ADDWL0008    YL0003           Pieces Producti
     C                     END                             *FI
      * Quantity Production from PLANNED rcd
      * CASE: PAR.Piece Count Item is yes
     C           P3PCCT    IFEQ 'Y'                        *IF
      * Quantity Production
      * CUR.Qty Sched To Produce USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : LCL.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P3BDNB    MULT P3BJNB    W0WJ01           *Synon (15,0) w
     C           YL0003    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $CHNQT           Qty Sched To Pr
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wt is zeros, set prod schedule to zeros    FP1235
      * CASE: PAR.Unit Weight is Not equal zero
     C           P3AIWG    IFNE *ZERO                      *IF
      * Quantity Production
      * CUR.Qty Sched To Produce USR =
      *    *COMPUTE (x1 / x2)
      * x1    : LCL.Weight Production USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           YL0002    DIV  P3AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $CHNQT           Qty Sched To Pr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $CHNQT           Qty Sched To Pr
     C                     END                             *FI
     C                     END                             *FI
     C           $CQS01    SUB  $CHNQT    $CTQTC           Quantity 7.0 US
      * CASE: PAR.Status Flag 10 Y/N is No
     C           P5DGTX    IFEQ 'N'                        *IF
      * If plan|Sched > 0
      * CASE: If Plan|Sched  < > 0
      *  - c1 OR c2
      *   |- c1    : CUR.Qty Sched To Produce USR is Greater than Zero
      *   |- c2    : CUR.Quantity Scheduled 1 USR is Greater than Zero
      *   '-
     C           $CHNQT    IFGT *ZERO                      *IF
     C           $CQS01    ORGT *ZERO                      *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * If schedule var <> 0
      * CASE: CUR.Quantity 7.0 USR is NE Zero
     C           $CTQTC    IFNE *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUEJST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$CCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$CDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Schedule Variance PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Production Type of Prt Schedule Variance PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Production Date of Prt Schedule Variance PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * PS Production Warehouse of Prt Schedule Variance PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Schedule Variance PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Warehouse Code of Prt Schedule Variance PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Schedule Variance PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * TOP = PAR By name
     C                     MOVELP1B7ST    $BB7ST           PS Production W
     C                     Z-ADDP1ELDT    $BELDT           Production Date
     C                     MOVELP3SVST    $BSVST           Print On Schedu
     C                     MOVELP5DGTX    $BDGTX           Status Flag 10
     C                     MOVEL*BLANK    $BO6NA           Warehouse Desc
      * Warehouse Desc DRV
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SCRVGN
      * CASE: PAR.Print On Schedule is blank
     C           P3SVST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL'ALL'     $BHLTX           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
      * TOP.Condition Desc. 1  USR = Condition name of TOP.Print On Sched
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BSVST    W0INVL 25        Print On Schedu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
      * CASE: PAR.Status Flag 1  Y/N is No
     C           P4Q1ST    IFEQ 'N'                        *IF
     C                     MOVEL*BLANK    $BSLTX           Text USR 20
     C                     MOVEL'AM Sched'$BSLTX           Text USR 20
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,01    $BSLTX           Text USR 20
     C                     END                             *FI
      * Convert fields to external form
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  $BELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBELDT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'P/S'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELI8B7ST    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BO6NA           Warehouse Descr
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BO6NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDI8AIC3    BZAIC3           Company Number
     C                     Z-ADDI8HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CAVNA           Description Lin
     C                     MOVEL*BLANK    $CADCD           U/M - Primary
     C                     Z-ADD*ZERO     P3AIWG           Unit Weight
     C                     Z-ADD*ZERO     WURINB           Item Structure
     C                     Z-ADD*ZERO     WURHNB           Item Structure
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     MOVEL*BLANK    WUQ1CD           Default Warehou
     C                     Z-ADD*ZERO     WUCHTM           Fresh Chilling
     C                     MOVEL*BLANK    WUQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    WUXWST           Variety/Rendere
     C                     MOVEL*BLANK    WUVMST           Credit Item Sta
     C                     Z-ADD*ZERO     WUSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WUPPHE           Pieces Per Head
     C                     MOVEL*BLANK    WUR3CD           Department Code
     C                     MOVEL*BLANK    WUSDCD           Group for Packa
     C                     MOVEL*BLANK    WUX5ST           Seconds Item
     C                     MOVEL*BLANK    P3PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P3BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P3BJNB           Bags Per Unit
     C                     MOVEL*BLANK    WUSUST           Export/Domestic
     C                     MOVEL*BLANK    WUSVST           Print On Schedu
     C                     MOVEL*BLANK    WUSYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    WUSZST           Fresh Sched As
     C                     MOVEL*BLANK    WUS1ST           Frozen Sched As
     C                     MOVEL*BLANK    WUXRCD           Primal Group Co
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $CAVNA           Description Lin
     C                     MOVELBZADCD    $CADCD           U/M - Primary
     C                     Z-ADDBZAIWG    P3AIWG           Unit Weight
     C                     Z-ADDBZRINB    WURINB           Item Structure
     C                     Z-ADDBZRHNB    WURHNB           Item Structure
     C                     Z-ADDBZRGNB    WURGNB           Item Structure
     C                     MOVELBZN0CD    WUN0CD           Item Type Code
     C                     MOVELBZQ1CD    WUQ1CD           Default Warehou
     C                     Z-ADDBZCHTM    WUCHTM           Fresh Chilling
     C                     MOVELBZQZCD    WUQZCD           Base/Conv/Loss
     C                     MOVELBZXWST    WUXWST           Variety/Rendere
     C                     MOVELBZVMST    WUVMST           Credit Item Sta
     C                     Z-ADDBZSWGH    WUSWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    WUPPHE           Pieces Per Head
     C                     MOVELBZR3CD    WUR3CD           Department Code
     C                     MOVELBZSDCD    WUSDCD           Group for Packa
     C                     MOVELBZX5ST    WUX5ST           Seconds Item
     C                     MOVELBZPCCT    P3PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    P3BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    P3BJNB           Bags Per Unit
     C                     MOVELBZSUST    WUSUST           Export/Domestic
     C                     MOVELBZSVST    WUSVST           Print On Schedu
     C                     MOVELBZSYST    WUSYST           Fresh Inv Alloc
     C                     MOVELBZSZST    WUSZST           Fresh Sched As
     C                     MOVELBZS1ST    WUS1ST           Frozen Sched As
     C                     MOVELBZXRCD    WUXRCD           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Pland Production  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0002  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0003 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0004  70       ATS Pieces Avai
     C                     MOVEL*BLANK    WN0005  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0006  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0007  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0008 112       OD Pieces Sched
     C                     Z-ADD*ZERO     WN0009 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0010  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0006           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0001           PS Weight Ship
     C                     Z-ADD*ZERO     WN0002           PS Pieces Ship
     C                     Z-ADD*ZERO     WN0003           ATS Weight Avai
     C                     Z-ADD*ZERO     WN0004           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0005           Piece Count Ite
     C                     Z-ADD*ZERO     WN0006           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0007           Bags Per Unit
     C                     Z-ADD*ZERO     WL0007           Weight Producti
     C                     Z-ADD*ZERO     WL0008           Pieces Producti
     C                     Z-ADD*ZERO     WN0008           OD Pieces Sched
     C                     Z-ADD*ZERO     WN0009           OD Weight Sched
     C                     Z-ADD*ZERO     WN0010           Pieces Allocate
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAV5ST           Production Type
     C                     KFLD           WAELDT           Production Date
     C                     KFLD           WAHGCD           Item Code
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0001    WAAIC3           Company Number
     C                     MOVELWL0002    WAV5ST           Production Type
     C                     Z-ADDWL0003    WAELDT           Production Date
     C                     Z-ADDWL0004    WAHGCD           Item Code
     C                     MOVELWL0005    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Production = Standard + Prod Adj - Converted  - whse txfr
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WAB5ST    IFEQ 'N'                        *IF
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           WADXWG    ADD  WAD1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  WAWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WAGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0007           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           WAB2NB    ADD  WACBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WAPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WABPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0008           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WL0007    ADD  WN0001    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WASAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WAOAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0003           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WL0008    ADD  WN0002    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WAB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WACDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0004           ATS Pieces Avai
      * Weight Avail
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WN0003    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0003           ATS Weight Avai
     C                     Z-ADD*ZERO     WN0004           ATS Pieces Avai
     C                     END                             *FI
     C                     Z-ADDWAF8WG    WL0006           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification History
      *================================================================
      * FP1054 RMC 4/27/09 new report
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P3AIWG           Unit Weight
     C                     MOVEL*BLANK    P3PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P3BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P3BJNB           Bags Per Unit
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    I8V5ST           Production Type
     C                     MOVEL*LOVAL    I8ELDT           Production Date
     C                     MOVEL*LOVAL    I8B7ST           PS Production W
     C                     MOVEL*LOVAL    I8HGCD           Item Code
     C                     MOVEL*LOVAL    I8AJCD           Warehouse Code
     C                     MOVEL*LOVAL    I8AIC3           Company Number
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Export/Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Print On Schedule
     C                     MOVEL*BLANK    WUSVST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Sched As Ordered
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAELDT           Production Date
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WAWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WAQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WADJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WAF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WAWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WAD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WADXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WAB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WAWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WAPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WASAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WAB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WAD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WACBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WAEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WACCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WAE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WAD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WAOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WACDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WAUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WACENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WAF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WABPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WAGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WABQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WAGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WABRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WAGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WABSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WAGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WABWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WAGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WAPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WADVWG           PS Weight Order
     C                     Z-ADD*ZERO     WAD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WAFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WAD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WADWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WAEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WASHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WAEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WAAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WAECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WAWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WAEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WAFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WAEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WAQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WAEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WAWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WAEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Item Piece Count Flag Chg
     C                     MOVEL*BLANK    WUEJST  1
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002  1
     C                     Z-ADD*ZERO     WL0003  70
     C                     Z-ADD*ZERO     WL0004  70
     C                     MOVEL*BLANK    WL0005  3
     C                     Z-ADD*ZERO     WL0006  92
     C                     Z-ADD*ZERO     WL0007  92
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009  52
      * Define local work field PS Avg Piece Wgt
     C                     Z-ADD*ZERO     YL0001  92
      * Define local work field Weight Production USR
     C                     Z-ADD*ZERO     YL0002  92
      * Define local work field Pieces Production USR
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Plan Production Sts
     C                     MOVEL*BLANK    YL0004  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Modification History
     C                     EXSR UASUBR                     Modification Hi
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Prior Day
