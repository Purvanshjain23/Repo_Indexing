// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYPXFR
// ?Date: 14.08.2025 Time: 03:36:32
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?If load is not zero check load Sts of E or C else cancel order
CASE;

// IF PAR.Load ID NE WRK.ZERO
IF PAR.Load_ID <> WRK.ZERO;

EXECUTE FUNCTION(RTV Load Status        RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1297640;
PARAMETER(PAR.Load_ID);
PARAMETER(WRK.Load_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 MOVE *ALL (To: PAR From: DB1);

}


//?If load status is S or I then can't cancel, else cancel order
CASE;

// IF WRK.Load Status is Shipped or Invoiced
IF WRK.Load_Status = 'I'/'S';

PGM.*Return_code = *BLANK;

RETURN;

//?If load status is S or I then can't cancel, else cancel order
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Load ID            CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1424581;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


// Call program UPD Cancel Order       XF.
CALL PROGRAM(UPD Cancel Order       XF) ('OPV9XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Billing_Activity_Type);

// WRK.Department Control Code = CND.Internal Control
WRK.Department_Control_Code = 'INT';

// WRK.Load Change Type = CND.Cancelled Order
WRK.Load_Change_Type = 'CANORD';

// WRK.Header Status USR = CND.Cancelled
WRK.Header_Status_USR = 'X';

// Call program CRT Load/Order Chg Log XF.
CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(PAR.Header_Status);
PARAMETER(WRK.Header_Status_USR);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);

//?NOTE:  Will only write log if order on load and load not in E status
EXECUTE FUNCTION(VAL Load ID on Orders  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1424592;
PARAMETER(PAR.Load_ID);
{
 //?USER: Initialize routine

 //?05/14/04 SLM PKTR01 Multi-Company - Funct chg remove Company RST or Pos
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


//?If no other orders on load then delete the load else change load
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// WRK.Department Control Code = CND.Internal Control
WRK.Department_Control_Code = 'INT';

// WRK.Load Change Type = CND.Delete Load
WRK.Load_Change_Type = 'DELOAD';

// Call program CRT Load/Order Chg Log XF.
CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(WRK.Load_Status);
PARAMETER('Deleted');
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(*ZERO);

//?NOTE:  Will only write log if order on load and load not in E status
EXECUTE FUNCTION(DLT Load Header        DL) TYPE(DLTOBJ) FILE(OMFJCPP)          AC1183331;
PARAMETER(PAR.Load_ID);

EXECUTE FUNCTION(DLT Load Detail       RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC1197338;
PARAMETER(PAR.Load_ID);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT Load Detail        DL) TYPE(DLTOBJ) FILE(OMFLCPP)          AC1183328;
 PARAMETER(PAR.Load_ID);
 PARAMETER(DB1.Stop_Drop_Sequence_Number);
}


//?If no other orders on load then delete the load else change load
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Sub Weight & Stop  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1424613;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Order_Weight_Total);
{
 //?USER: Process Data record

 // PAR.Total Weight = DB1.Total Weight - PAR.Order Weight Total
 PAR.Total_Load_Order_Weight = DB1.Total_Load_Order_Weight - PAR.Order_Weight_Total;

 // PAR.Total Stops = DB1.Total Stops - CON.1
 PAR.Total_Stops = DB1.Total_Stops - 1;

 EXECUTE FUNCTION(CHG Load Header        CH) TYPE(CHGOBJ) FILE(OMFJCPP)          AC1183330;
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Load_Status);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Seal_1);
 PARAMETER(DB1.Seal_2);
 PARAMETER(DB1.Seal_3);
 PARAMETER(PAR.Total_Load_Order_Weight);
 PARAMETER(DB1.Flat_Amount);
 PARAMETER(DB1.Allocate_Pounds_Miles);
 PARAMETER(PAR.Total_Stops);
 PARAMETER(DB1.Trailer_Id);
 PARAMETER(DB1.Transloader_Carrier_Code);
 PARAMETER(DB1.BOL_Time);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Truck_Size);
 PARAMETER(DB1.Ld_Hdr_Ld_Dtl_Unused);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.Ship_Status);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Number_Pallets_Received);
 PARAMETER(DB1.Number_Pallets_Loaded);
 PARAMETER(DB1.Load_Carrier_Pay_Amt);
 PARAMETER(DB1.Estimated_Arrival_Time);
 PARAMETER(DB1.Actual_Arrival_Date);
 PARAMETER(DB1.Actual_Arrival_Time);
 PARAMETER(DB1.Trailer_IN_Weight);
 PARAMETER(DB1.Trailer_OUT_Weight);
 PARAMETER(DB1.Actual_Departure_Date);
 PARAMETER(DB1.Departure_Time);
 PARAMETER(DB1.Schedule_Sequence_Number);
 PARAMETER(DB1.Product_Temperature);
 PARAMETER(DB1.Number_Spacers_Loaded);
 PARAMETER(DB1.Car_Veh_Initials);
 PARAMETER(DB1.Total_Load_Miles);
 PARAMETER(DB1.Recorder_ID);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Ship_From_Warehouse);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Gross_Weight);
 PARAMETER(DB1.Carrier_Broker);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Actual_Ship_Date);
 PARAMETER(DB1.On_Time_Y_N);
 PARAMETER(DB1.Truck_Ready_Date);
 PARAMETER(DB1.Truck_Ready_Time);
 PARAMETER(DB1.Spotted_Date);
 PARAMETER(DB1.Spotted_Time);
 PARAMETER(DB1.Load_Finished_Date);
 PARAMETER(DB1.Load_Finished_Time);
 PARAMETER(DB1.BOL_Complete_Date);
 PARAMETER(DB1.BOL_Complete_Time);
 PARAMETER(DB1.BOL_Received_Date);
 PARAMETER(DB1.BOL_Received_Time);
 PARAMETER(DB1.Truck_Departure_Date);
 PARAMETER(DB1.Truck_Departure_Time);
 PARAMETER(DB1.Adjusted_Departure_Date);
 PARAMETER(DB1.Adjusted_Departure_Time);
 PARAMETER(DB1.Shipping_Line);
 PARAMETER(DB1.Port_Delv_Terminal);
 PARAMETER(DB1.Vessel_Name);
 PARAMETER(DB1.Voyage);
 PARAMETER(DB1.Sail_Date);
 PARAMETER(DB1.Booking_Number);
 PARAMETER(DB1.Discharge_Port);
 PARAMETER(DB1.Arrival_Date);
 PARAMETER(DB1.Container_Number);
 PARAMETER(DB1.Date_In);
 PARAMETER(DB1.Time_In);
 PARAMETER(DB1.Date_Out);
 PARAMETER(DB1.Time_Out);
 PARAMETER(DB1.Load_Total_Freight);
 PARAMETER(DB1.Scheduled_Delivery_Date);
 PARAMETER(DB1.LH_Unused_Sts);
 PARAMETER(DB1.LH_Carrier_Payment_Sts);
 PARAMETER(DB1.Bring_Back_Miles);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Load_Acceptance_Flag);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.On_Yard_Date);
 PARAMETER(DB1.On_Yard_Time);
 PARAMETER(DB1.Deadline_Departure_Date);
 PARAMETER(DB1.Deadline_Departure_Time);
 PARAMETER(DB1.Load_Held_Over);
 PARAMETER(DB1.Load_Held_Over_Reason);
 PARAMETER(*MISSING);
 PARAMETER(DB1.Ocean_BOL_Number);
 PARAMETER(DB1.Express_Mail_Number);
 PARAMETER(DB1.Express_Mail_Date);
 PARAMETER(DB1.Load_Shag_Flag);
 PARAMETER(DB1.Load_Wash_Flag);
 PARAMETER(DB1.Product_Complete_Date);
 PARAMETER(DB1.Product_Complete_Time);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(DB1.Load_Confirmation_Time);
 PARAMETER(DB1.Load_Door_1);
 PARAMETER(DB1.Override_Total_Load_Miles);
 PARAMETER(DB1.Load_Door_2);
 PARAMETER(DB1.Partial_Load);
 PARAMETER(DB1.Load_Confirmation_Fax_Sts);
 PARAMETER(DB1.Export_Load_USDA_OK);
 PARAMETER(DB1.Late_Delivery_Email_Flag);
 PARAMETER(DB1.Load_Actual_Freight);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(DB1.LH_On_Time_Reason_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?***** Change Log and Comments
  DO;

  //?06/28/2006 LJB TRF011
  //?** Added 3 char LH On-Time Reason Code as an input parm to
  //?** replace the 1 char On Time Reason parm
  ENDDO;

 }

}


EXECUTE FUNCTION(CHG Del Order Off load RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1424620;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT Load Detail        DL) TYPE(DLTOBJ) FILE(OMFLCPP)          AC1183328;
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Stop_Drop_Sequence_Number);
}


ENDIF;

RETURN;

ENDIF;

//?If load is not zero check load Sts of E or C else cancel order
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Department Control Code = CND.Internal Control
WRK.Department_Control_Code = 'INT';

// WRK.Load Change Type = CND.Cancelled Order
WRK.Load_Change_Type = 'CANORD';

// WRK.Header Status USR = CND.Cancelled
WRK.Header_Status_USR = 'X';

// Call program CRT Load/Order Chg Log XF.
CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(PAR.Header_Status);
PARAMETER(WRK.Header_Status_USR);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);

//?NOTE:  Will only write log if order on load and load not in E status
// Call program UPD Cancel Order       XF.
CALL PROGRAM(UPD Cancel Order       XF) ('OPV9XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Billing_Activity_Type);

RETURN;

ENDIF;

