     H/TITLE Prt Inv Revaluation    PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 02/14/06  Time  : 15:27:38
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPDILREL0IF  E           K        DISK
      * RTV : Item Level                Retrieval index
      *
     FCAAIREL1IF  E           K        DISK
      * RTV : Quality Level             Retrieval index       NV
      *
     FPDKZCPL3IF  E           K        DISK
      * RSQ : Item Values               Co/Itm/Whs/RevDt-Dt-Tm(D
      *
     FCAB7CPL4IF  E           K        DISK
      * RSQ : Item Transaction Detail   Co/Item/Whse/TrnsDte (D)
      *
     FPDVEPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Inv Revaluation    PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Item Balance
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Item Code
     I                                    P   3   60P1HGCD
      * I :  Warehouse Code
     I                                        7   9 P1AJCD
      * I :  Item Structure Class Code
     I                                    P  10  110P1RINB
      * I :  Item Structure Group Code
     I                                    P  12  130P1RHNB
      * I :  Item Structure Type Code
     I                                    P  14  150P1RGNB
     IP2PARM      DS
      * FLD: *Arrays
      * I :  Item Type Code
     I                                        1   3 P2N0CD
      * I :  Prt Non-Zero Qty Only USR
     I                                        4   4 P2ZYST
      * I :  Item Level
     I                                        5   6 P2RBCD
      * I :  Quality Level
     I                                        7   8 P2HICD
     IP3PARM      DS
      * N :  USR Display 1
     I                                        1   1 P3TIST
     IP4PARM      DS
      * FLD: Company Item
      * N :  Production Date Control
     I                                        1   1 P4FZST
     IP5PARM      DS
      * I :  As of Date
     I                                    P   1   40P5BPDT
     IP6PARM      DS
      * FLD: Item Transaction Detail
      * N :  Transaction Quantity
     I                                    P   1   62P6A5QT
      * N :  Transaction Weight
     I                                    P   7  122P6AHWG
     IP7PARM      DS
      * FLD: Item Values
      * N :  Revaluation Eff. Date
     I                                    P   1   40P7GUDT
      * N :  Revaluation Eff. Time
     I                                    P   5   80P7AQTM
     IP8PARM      DS
      * N :  Revaluation Date
     I                                    P   1   40P8J0DT
     IP9PARM      DS
      * N :  USR Display field
     I                                        1   1 P9GGST
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P1AJCD    PARM           WP0003  3        Warehouse Code
     C           P1RINB    PARM           WP0004  30       Item Structure
     C           P1RHNB    PARM           WP0005  30       Item Structure
     C           P1RGNB    PARM           WP0006  30       Item Structure
     C           P2N0CD    PARM           WP0007  3        Item Type Code
     C           P2ZYST    PARM           WP0008  1        Prt Non-Zero Qt
     C           P2RBCD    PARM           WP0009  2        Item Level
     C           P2HICD    PARM           WP0010  2        Quality Level
     C           P5BPDT    PARM           WP0011  70       As of Date
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Inv Revaluation    PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$IENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Inv Revaluation    PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@B0REJX                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       P3TIST           USR Display 1
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BBPDT           As of Date
     C                     MOVEL*BLANK    $BZYST           Prt Non-Zero Qt
     C                     MOVEL*BLANK    $BHMTX           Condition Desc.
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL*BLANK    $BAJCD           Warehouse Code
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     $BHGCD           Item Code
     C                     MOVEL*BLANK    $BGENA           Item Descriptio
     C                     MOVEL*BLANK    $BN0CD           Item Type Code
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL*BLANK    $BRBCD           Item Level
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     MOVEL*BLANK    $BHICD           Quality Level
     C                     MOVEL*BLANK    $BDL01           Description. .
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     Z-ADD*ZERO     $BRINB           Item Structure
     C                     MOVEL*BLANK    $BDETX           Item Structure
      * Load related totals format
     C                     Z-ADD*ZERO     $HVAVA           Weight On Hand
     C                     Z-ADD*ZERO     $HABCD           USR amount 1  1
     C                     Z-ADD*ZERO     $HVBVA           Value On Hand
     C                     Z-ADD*ZERO     $HLUVA           On Hand Inv. Va
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB0AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CADTX           Name
      * Load related totals format
     C                     Z-ADDB0AIC3    $GAIC3           Company Number
     C                     Z-ADD*ZERO     $GVAVA           Weight On Hand
     C                     Z-ADD*ZERO     $GABCD           USR amount 1  1
     C                     Z-ADD*ZERO     $GVBVA           Value On Hand
     C                     Z-ADD*ZERO     $GLUVA           On Hand Inv. Va
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB0AIC3    $DAIC3           Company Number
     C                     Z-ADDB0HGCD    $DHGCD           Item Code
     C                     MOVEL*BLANK    $DGENA           Item Descriptio
      * Load related totals format
     C                     Z-ADDB0AIC3    $FAIC3           Company Number
     C                     Z-ADDB0HGCD    $FHGCD           Item Code
     C                     Z-ADD*ZERO     $FVAVA           Weight On Hand
     C                     Z-ADD*ZERO     $FABCD           USR amount 1  1
     C                     Z-ADD*ZERO     $FVBVA           Value On Hand
     C                     Z-ADD*ZERO     $FLUVA           On Hand Inv. Va
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDB0AIC3    $EAIC3           Company Number
     C                     Z-ADDB0HGCD    $EHGCD           Item Code
     C                     MOVELB0AJCD    $EAJCD           Warehouse Code
     C                     Z-ADDB0BOWG    $EBOWG           On Hand Weight
     C                     Z-ADDB0AGCS    $EAGCS           Unit Cost Per P
     C                     Z-ADDB0DDQT    $EDDQT           On Hand U/M1 Su
     C                     Z-ADDB0CTPR    $ECTPR           Last Revaluatio
     C                     Z-ADDB0G4DT    $EG4DT           Last Revaluatio
     C                     Z-ADDB0BACS    $EBACS           Cost per Primar
     C                     Z-ADDB0BBCS    $EBBCS           Cost per Pricin
     C                     Z-ADDB0CBPR    $ECBPR           Revaluation Cos
     C                     Z-ADDB0GUDT    $EGUDT           Revaluation Eff
     C                     MOVELB0XYST    $EXYST           Revaluation Cos
     C                     Z-ADD*ZERO     $ERVA1           Revaluation Amo
     C                     Z-ADDB0DEQT    $EDEQT           On Hand U/M2 Su
     C                     Z-ADDB0DFQT    $EDFQT           On Hand U/M3 Su
     C                     Z-ADDB0HDQT    $EHDQT           Quantity In Chi
     C                     Z-ADDB0HEQT    $EHEQT           Weight In Chill
     C                     Z-ADDB0EMQT    $EEMQT           Quantity on Tra
     C                     Z-ADDB0DOQT    $EDOQT           Quantity Avail.
     C                     Z-ADDB0IDVA    $EIDVA           Value of On Han
     C                     Z-ADD*ZERO     $ERVA2           Revaluation Amo
     C                     MOVELB0JVST    $EJVST           Inventory Plann
     C                     Z-ADDB0BZPC    $EBZPC           Safety Allowanc
     C                     Z-ADDB0DGQT    $EDGQT           Safety Allowanc
     C                     Z-ADDB0DIDT    $EDIDT           Stock Out Date
     C                     MOVELB0ALCD    $EALCD           Buyer Code
     C                     Z-ADDB0BFDY    $EBFDY           Lead Time - Las
     C                     Z-ADDB0DJDT    $EDJDT           Lead Time - Dat
     C                     Z-ADDB0BGDY    $EBGDY           Lead Time - Nex
     C                     Z-ADDB0DKDT    $EDKDT           Lead Time - Dat
     C                     MOVELB0J2ST    $EJ2ST           Lead Time - Exc
     C                     Z-ADDB0DJQT    $EDJQT           Usage Qty per C
     C                     Z-ADDB0BNWG    $EBNWG           Usage Weight pe
     C                     Z-ADDB0DLDT    $EDLDT           Inventory Manag
     C                     Z-ADDB0DPQT    $EDPQT           Minimum Quantit
     C                     Z-ADDB0DQQT    $EDQQT           Maximum Quantit
     C                     Z-ADDB0DMDT    $EDMDT           Last Physical C
     C                     MOVELB0M0ST    $EM0ST           Requisition Mod
     C                     MOVELB0J9ST    $EJ9ST           Cost Update Pen
     C                     MOVELB0KBST    $EKBST           Post G/L Status
     C                     Z-ADDB0AKC8    $EAKC8           Vendor - Item/W
     C                     Z-ADDB0RINB    $ERINB           Item Structure
     C                     Z-ADDB0RHNB    $ERHNB           Item Structure
     C                     Z-ADDB0RGNB    $ERGNB           Item Structure
     C                     MOVELB0UVST    $EUVST           EDI Status 1
     C                     MOVELB0UWST    $EUWST           EDI Status 2
     C                     MOVELB0UXST    $EUXST           EDI Status 3
     C                     MOVELB0VSST    $EVSST           Record Status
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $ERVA1    $FABCD           USR amount 1  1
     C                     ADD  $EBOWG    $FVAVA           Weight On Hand
     C                     ADD  $EIDVA    $FVBVA           Value On Hand
     C                     ADD  $ERVA2    $FLUVA           On Hand Inv. Va
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B0AIC3    WZA001           Company Number
     C                     Z-ADDB0AIC3    WZA001
     C           *LIKE     DEFN B0HGCD    WZA002           Item Code
     C                     Z-ADDB0HGCD    WZA002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @B0REJX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Rtv ItmTyp/ItmLv/QltLv RT - Item  * 
     C                     EXSR SNRVGN
      * Select item type code if entered
      * CASE: PAR.Item Type Code is Blank
     C           P2N0CD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Item Type Code NE WRK.Item Type Code
     C           P2N0CD    IFNE WUN0CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Select item level if entered
      * CASE: PAR.Item Level is Entered
     C           P2RBCD    IFNE *BLANK                     *IF
      * CASE: PAR.Item Level NE WRK.Item Level
     C           P2RBCD    IFNE WURBCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Select quality level if entered
      * CASE: PAR.Quality Level is Entered
     C           P2HICD    IFNE *BLANK                     *IF
      * CASE: PAR.Quality Level NE WRK.Quality Level
     C           P2HICD    IFNE WUHICD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Select non-zero quantities only if flag is yes
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Prt Non-Zero Qty Only USR is yes
      *   |- c2    : DB1.On Hand Weight Summary is Equal to zero
      *   |- c3    : DB1.On Hand U/M1 Summary is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2ZYST    IFEQ 'Y'                        *IF
     C           B0BOWG    IFEQ *ZERO                      *IF
     C           B0DDQT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           B0AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           B0HGCD    IFNE WZA002                     Item Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Item Code format
     C                     ADD  $FABCD    $GABCD           USR amount 1  1
     C                     ADD  $FVAVA    $GVAVA           Weight On Hand
     C                     ADD  $FVBVA    $GVBVA           Value On Hand
     C                     ADD  $FLUVA    $GLUVA           On Hand Inv. Va
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $GAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$GAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VGAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Company Number - 3 format
     C                     ADD  $GABCD    $HABCD           USR amount 1  1
     C                     ADD  $GVAVA    $HVAVA           Weight On Hand
     C                     ADD  $GVBVA    $HVBVA           Value On Hand
     C                     ADD  $GLUVA    $HLUVA           On Hand Inv. Va
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$HFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Inv Revaluation    PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Inv Revaluation    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $BADTX    P      Name
     C                     MOVELP1AJCD    $BAJCD           Warehouse Code
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SDRVGN
     C                     Z-ADDP1HGCD    $BHGCD           Item Code
      * If company is selected, rtv co/item else rtv item
      * CASE: PAR.Accounting Company Number is not equal to zero
     C           P1AIC3    IFNE *ZERO                      *IF
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0003           Company Number
     C                     Z-ADD$BHGCD    WL0004           Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0005    $BGENA    P      Description Lin
     C                     MOVELWL0006    WUAWNA    P      Description Lin
     C                     MOVELWL0007    WUADCD    P      U/M - Primary
     C                     MOVELWL0008    WUAECD    P      U/M - Second
     C                     MOVELWL0009    WUAFCD    P      U/M - Third
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Item Descriptions  RT - OM Item Default  * 
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     Z-ADDP1RGNB    $BRGNB           Item Structure
      * RTV  Description       RT - OM Item Structure Type  * 
     C                     EXSR SGRVGN
     C                     Z-ADDP1RHNB    $BRHNB           Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
     C                     EXSR SHRVGN
     C                     Z-ADDP1RINB    $BRINB           Item Structure
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
     C                     EXSR SIRVGN
     C                     MOVELP2N0CD    $BN0CD           Item Type Code
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Item Type Code
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1294118   Y2LSNO  70       List number
     C                     PARM $BN0CD    W0INVL 25        Item Type Code
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELP2ZYST    $BZYST           Prt Non-Zero Qt
      * 1PG.Condition Desc. 2  USR = Condition name of 1PG.Prt Non-Zero Q
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BZYST    W0INVL 25        Prt Non-Zero Qt
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELP2RBCD    $BRBCD           Item Level
      * RTV Item Level Descr   RT - PD Item Level  * 
     C                     EXSR SJRVGN
     C                     MOVELP2HICD    $BHICD           Quality Level
      * Rtv Quality Level Desc RT - Quality Level  * 
     C                     EXSR SKRVGN
     C                     Z-ADDP5BPDT    $BBPDT           As of Date
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert As of Date to display format
      * Convert date
     C           1000000   ADD  $BBPDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBBPDT
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $BHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$BHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VBHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P3TIST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Inv Revaluation    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number - 3 format
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $CADTX    P      Name
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Item Code of Prt Inv Revaluation    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Code format
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0003           Company Number
     C                     Z-ADD$DHGCD    WL0004           Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0005    $DGENA    P      Description Lin
     C                     MOVELWL0006    WUAWNA    P      Description Lin
     C                     MOVELWL0007    WUADCD    P      U/M - Primary
     C                     MOVELWL0008    WUAECD    P      U/M - Second
     C                     MOVELWL0009    WUAFCD    P      U/M - Third
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP01
     C                     END                             FI
      * Print Detail line. of Prt Inv Revaluation    PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Get Unit Cost/LB for AS OF Date
     C                     Z-ADDP5BPDT    $EGUDT           Revaluation Eff
     C                     Z-ADD9999999   P7GUDT           Revaluation Eff
     C                     Z-ADD999999    P7AQTM           Revaluation Eff
      * RTV Cost/Dte/Tme/Rev   RT - PD Item Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0010           Company Number
     C                     Z-ADDB0HGCD    WL0011           Item Code
     C                     MOVELB0AJCD    WL0012    P      Warehouse Code
     C                     Z-ADDP7GUDT    WL0013           Revaluation Eff
     C                     Z-ADDP7AQTM    WL0014           Revaluation Eff
     C                     Z-ADD$EGUDT    WL0018           Revaluation Dat
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    P7GUDT           Revaluation Eff
     C                     Z-ADDWL0014    P7AQTM           Revaluation Eff
     C                     Z-ADDWL0015    $ECBPR           Unit Cost Per P
     C                     Z-ADDWL0016    WUGIDT           Pricing Date Us
     C                     MOVELWL0017    $EXYST    P      Revaluation Cos
     C                     Z-ADDWL0018    $EGUDT           Revaluation Dat
      * If no pricing date or pricing date = revaluation date, hide "**"
      * CASE: WRK.Pricing Date Used EQ WRK.ZERO
     C           WUGIDT    IFEQ WUW0NB                     *IF
     C                     MOVEL'N'       P9GGST           USR Display fie
     C                     ELSE
      * CASE: WRK.Pricing Date Used EQ CUR.Revaluation Eff. Date
     C           WUGIDT    IFEQ $EGUDT                     *IF
     C                     MOVEL'N'       P9GGST           USR Display fie
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       P9GGST           USR Display fie
     C                     END                             *FI
     C                     END                             *FI
      * Get prior day's unit cost/lb (assume >1 per day is a mistake)
      * CUR.Last Revaluation Eff Date = CUR.Revaluation Eff. Date + CON.-
     C           $EGUDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     $EG4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   $EG4DT
     C                     END
     C                     Z-ADD9999999   P7GUDT           Revaluation Eff
     C                     Z-ADD999999    P7AQTM           Revaluation Eff
      * RTV Cost/Dte/Tme/Rev   RT - PD Item Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0010           Company Number
     C                     Z-ADDB0HGCD    WL0011           Item Code
     C                     MOVELB0AJCD    WL0012    P      Warehouse Code
     C                     Z-ADDP7GUDT    WL0013           Revaluation Eff
     C                     Z-ADDP7AQTM    WL0014           Revaluation Eff
     C                     Z-ADD$EG4DT    WL0018           Revaluation Dat
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    P7GUDT           Revaluation Eff
     C                     Z-ADDWL0014    P7AQTM           Revaluation Eff
     C                     Z-ADDWL0015    $ECTPR           Unit Cost Per P
     C                     Z-ADDWL0016    WUNFNN           Pricing Date Us
     C                     MOVELWL0017    WUXYST    P      Revaluation Cos
     C                     Z-ADDWL0018    $EG4DT           Revaluation Dat
      * Remove transactions that have occured after AS OF DATE
     C                     Z-ADD*ZERO     P6A5QT           Transaction Qua
     C                     Z-ADD*ZERO     P6AHWG           Transaction Wei
      * Rtv As Of Inv Itm/Whs  RT - IC Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0019           Company Number
     C                     Z-ADD$EHGCD    WL0020           Item Code
     C                     MOVEL$EAJCD    WL0021    P      Warehouse Code
     C                     Z-ADD9999999   WL0022           Transaction Dat
     C                     Z-ADDP6A5QT    WL0023           Transaction Qua
     C                     Z-ADDP6AHWG    WL0024           Transaction Wei
     C                     Z-ADDP5BPDT    WL0025           As of Date
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0023    P6A5QT           Transaction Qua
     C                     Z-ADDWL0024    P6AHWG           Transaction Wei
     C                     SUB  P6AHWG    $EBOWG           On Hand Weight
     C                     SUB  P6A5QT    $EDDQT           On Hand U/M1 Su
      * calculate "New" value
     C           $ECBPR    MULT $EBOWG    $ERVA1    H      Revaluation Amo
      * Remove transactions that have occured after Prior Revalue date
     C                     Z-ADD*ZERO     P6A5QT           Transaction Qua
     C                     Z-ADD*ZERO     P6AHWG           Transaction Wei
      * Rtv As Of Inv Itm/Whs  RT - IC Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0019           Company Number
     C                     Z-ADDB0HGCD    WL0020           Item Code
     C                     MOVELB0AJCD    WL0021    P      Warehouse Code
     C                     Z-ADD9999999   WL0022           Transaction Dat
     C                     Z-ADDP6A5QT    WL0023           Transaction Qua
     C                     Z-ADDP6AHWG    WL0024           Transaction Wei
     C                     Z-ADD$EG4DT    WL0025           As of Date
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0023    P6A5QT           Transaction Qua
     C                     Z-ADDWL0024    P6AHWG           Transaction Wei
     C           B0BOWG    SUB  P6AHWG    WUBOWG           On Hand Weight
     C           B0DDQT    SUB  P6A5QT    WUDDQT           On Hand U/M1 Su
      * Calculate "Old" value
      * CUR.Value of On Hand Inventor =
      *    *COMPUTE ((x1 - x2) * x3 + (x4 * x5))
      * x1    : CUR.On Hand Weight Summary
      * -     : PGM.*Synon (17,7) work field
      * x2    : WRK.On Hand Weight Summary
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.Revaluation Cost
      * +     : PGM.*Synon (17,7) work field
      * x4    : WRK.On Hand Weight Summary
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x5    : CUR.Last Revaluation Cost
     C           $EBOWG    SUB  WUBOWG    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT $ECBPR    W0WD01    H      *Synon (17,7) w
     C           WUBOWG    MULT $ECTPR    W0WD03           *Synon (17,7) w
     C           W0WD01    ADD  W0WD03    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EIDVA           Value of On Han
     C           $ERVA1    SUB  $EIDVA    $ERVA2           Revaluation Amo
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Last Revaluation Eff Date to display format
      * Convert date
     C           1000000   ADD  $EG4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEG4DT
      * Convert Revaluation Eff. Date to display format
      * Convert date
     C           1000000   ADD  $EGUDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEGUDT
     C                     MOVEL'0'       *IN79
     C           P9GGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP00    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Inv Revaluation    PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  14        W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Inv Revaluation    PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  8         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Inv Revaluation    PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Inv Revaluation    PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'I/C'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0002           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Descriptions      RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0003    BZAIC3           Company Number
     C                     Z-ADDWL0004    BZHGCD           Item Code
      * Establish starting position
     C           KRSSE     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0005           Description Lin
     C                     MOVELBZAWNA    WL0006           Description Lin
     C                     MOVELBZADCD    WL0007           U/M - Primary
     C                     MOVELBZAECD    WL0008           U/M - Second
     C                     MOVELBZAFCD    WL0009           U/M - Third
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - OM Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD$BHGCD    BYHGCD           Item Code
      * Establish starting position
     C           KRSSF     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BGENA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    $BGENA           Description Lin
     C                     MOVELBYAWNA    WUAWNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADD$BRGNB    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSG     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    $BRGNB           Item Structure
     C                     MOVELE8DCTX    $BDCTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADD$BRHNB    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSH     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WURGNB           Item Structure
     C                     MOVELE9DDTX    $BDDTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$BRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSI     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDETX           Item Structure
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $BDETX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Item Level Descr   RT - PD Item Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           ILRBCD           Item Level
      * Setup key
     C                     MOVEL$BRBCD    ILRBCD           Item Level
      * Establish starting position
     C           KRSSJ     CHAIN@ILRERK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1673' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELILAUNA    $BAUNA           Description
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Quality Level Desc RT - Quality Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           AIHICD           Quality Level
      * Setup key
     C                     MOVEL$BHICD    AIHICD           Quality Level
      * Establish starting position
     C           KRSSK     CHAIN@AIREBL              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0024' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDL01           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAIAUNA    $BDL01           Description
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Cost/Dte/Tme/Rev   RT - PD Item Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN KZAIC3    WQSL01           Company Number
     C           *LIKE     DEFN KZHGCD    WQSL02           Item Code
     C           *LIKE     DEFN KZAJCD    WQSL03           Warehouse Code
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
     C                     KFLD           KZJ0DT           Revaluation Dat
     C                     KFLD           KZGUDT           Revaluation Eff
     C                     KFLD           KZAQTM           Revaluation Eff
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0010    WQSL01           Company Number
     C                     Z-ADDWL0011    WQSL02           Item Code
     C                     MOVELWL0012    WQSL03           Warehouse Code
     C                     Z-ADDWL0018    KZJ0DT           Revaluation Dat
     C                     Z-ADDWL0013    KZGUDT           Revaluation Eff
     C                     Z-ADDWL0014    KZAQTM           Revaluation Eff
      * Establish starting position
     C           KPSSL     SETLL@KZCPJQ                    *
     C           KRSSL     READE@KZCPJQ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2347' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0013           Revaluation Eff
     C                     Z-ADD*ZERO     WL0014           Revaluation Eff
     C                     Z-ADD*ZERO     WL0015           Unit Cost Per P
     C                     Z-ADD*ZERO     WL0016           Pricing Date Us
     C                     MOVEL*BLANK    WL0017           Revaluation Cos
     C                     Z-ADD*ZERO     WL0018           Revaluation Dat
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKZGUDT    WL0013           Revaluation Eff
     C                     Z-ADDKZAQTM    WL0014           Revaluation Eff
     C                     Z-ADDKZAGCS    WL0015           Unit Cost Per P
     C                     Z-ADDKZGIDT    WL0016           Pricing Date Us
     C                     MOVELKZXYST    WL0017           Revaluation Cos
     C                     Z-ADDKZJ0DT    WL0018           Revaluation Dat
     C                     GOTO SLEXIT                     *QUIT
     C           KRSSL     READE@KZCPJQ                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv As Of Inv Itm/Whs  RT - IC Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0023           Transaction Qua
     C                     Z-ADD*ZERO     WL0024           Transaction Wei
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSM01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSM02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSM03           Warehouse Code
      * Define keylist
     C           KPSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WQSM02           Item Code
     C                     KFLD           WQSM03           Warehouse Code
     C                     KFLD           B7B4DT           Transaction Dat
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WQSM02           Item Code
     C                     KFLD           WQSM03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0019    WQSM01           Company Number
     C                     Z-ADDWL0020    WQSM02           Item Code
     C                     MOVELWL0021    WQSM03           Warehouse Code
     C                     Z-ADDWL0022    B7B4DT           Transaction Dat
      * Establish starting position
     C           KPSSM     SETLL@B7CPMO                    *
     C           KRSSM     READE@B7CPMO                  90*
      * Data record not found
     C   90                MOVEL'USR0344' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Transaction Date Code GT PAR.As of Date
     C           B7B4DT    IFGT WL0025                     *IF
      * CASE: DB1.Inventory Trans. Type is Change Qty/Weight/Amount
     C           B7BSST    IFEQ 'AP'                       *IF
     C           B7BSST    OREQ 'A'
     C           B7BSST    OREQ 'I'
     C           B7BSST    OREQ 'IO'
     C           B7BSST    OREQ 'R'
     C           B7BSST    OREQ 'RR'
     C           B7BSST    OREQ 'RP'
     C           B7BSST    OREQ 'RV'
     C           B7BSST    OREQ 'RW'
     C           B7BSST    OREQ 'S'
     C           B7BSST    OREQ 'T'
     C           B7BSST    OREQ 'TB'
     C           B7BSST    OREQ 'TW'
     C           B7BSST    OREQ 'OB'
     C           B7BSST    OREQ 'BO'
     C           B7BSST    OREQ 'SA'
     C           B7BSST    OREQ 'AW'
     C                     ADD  B7A5QT    WL0023           Transaction Qua
     C                     ADD  B7AHWG    WL0024           Transaction Wei
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     GOTO SMEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSM     READE@B7CPMO                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv ItmTyp/ItmLv/QltLv RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDB0AIC3    BZAIC3           Company Number
     C                     Z-ADDB0HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSN     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WUHICD           Quality Level
     C                     MOVEL*BLANK    WURBCD           Item Level
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZHICD    WUHICD           Quality Level
     C                     MOVELBZRBCD    WURBCD           Item Level
     C                     MOVELBZN0CD    WUN0CD           Item Type Code
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P3TIST           USR Display 1
     C                     MOVEL*BLANK    P4FZST           Production Date
     C                     Z-ADD*ZERO     P6A5QT           Transaction Qua
     C                     Z-ADD*ZERO     P6AHWG           Transaction Wei
     C                     Z-ADD*ZERO     P7GUDT           Revaluation Eff
     C                     Z-ADD*ZERO     P7AQTM           Revaluation Eff
     C                     Z-ADD*ZERO     P8J0DT           Revaluation Dat
     C                     MOVEL*BLANK    P9GGST           USR Display fie
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B0AIC3           Company Number
     C                     MOVEL*LOVAL    B0HGCD           Item Code
     C                     MOVEL*LOVAL    B0AJCD           Warehouse Code
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Pricing Date Used
     C                     Z-ADD*ZERO     WUGIDT  70
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Numeric Field Not Needed
     C                     Z-ADD*ZERO     WUNFNN  70
      * Define work field Revaluation Cost Type
     C                     MOVEL*BLANK    WUXYST  1
      * Define work field On Hand Weight Summary
     C                     Z-ADD*ZERO     WUBOWG 112
      * Define work field On Hand U/M1 Summary
     C                     Z-ADD*ZERO     WUDDQT 112
      * Define work field Quality Level
     C                     MOVEL*BLANK    WUHICD  2
      * Define work field Item Level
     C                     MOVEL*BLANK    WURBCD  2
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  70
     C                     MOVEL*BLANK    WL0005 30
     C                     MOVEL*BLANK    WL0006 30
     C                     MOVEL*BLANK    WL0007  2
     C                     MOVEL*BLANK    WL0008  2
     C                     MOVEL*BLANK    WL0009  2
      * Define local variables for subroutine SLRVGN.
     C                     Z-ADD*ZERO     WL0010  30
     C                     Z-ADD*ZERO     WL0011  70
     C                     MOVEL*BLANK    WL0012  3
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014  60
     C                     Z-ADD*ZERO     WL0015 114
     C                     Z-ADD*ZERO     WL0016  70
     C                     MOVEL*BLANK    WL0017  1
     C                     Z-ADD*ZERO     WL0018  70
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0019  30
     C                     Z-ADD*ZERO     WL0020  70
     C                     MOVEL*BLANK    WL0021  3
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023 112
     C                     Z-ADD*ZERO     WL0024 112
     C                     Z-ADD*ZERO     WL0025  70
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       P3TIST           USR Display 1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
