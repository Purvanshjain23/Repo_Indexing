// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVA9XFR
// ?Date: 14.08.2025 Time: 03:51:50
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Initialization.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
PARAMETER('WIMAPIFLBS');
PARAMETER(LCL.Email_Address_f_Bus_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
PARAMETER('WIMAPIFLIT');
PARAMETER(LCL.Email_Address_f_IT_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
PARAMETER('DTALIB');
PARAMETER(LCL.Library_List_Code);
PARAMETER(NLL.@Library_List_Code);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.System Value Code is Data File Library
 IF DB1.System_Value_Code = 'DTALIB';

 // PAR.Library List Code = DB1.System Value Alpha
 PAR.Library_List_Code = DB1.System_Value_Alpha;

 // IF DB1.System Value Code is History File Library
 IF DB1.System_Value_Code = 'HISLIB';

 // PAR.@Library List Code = DB1.System Value Alpha
 PAR.@Library_List_Code = DB1.System_Value_Alpha;

 QUIT;

 ENDIF;

}


//?Set Inv Trans Type Constant for Email Subject.
CASE;

// IF PAR.Called From Program is Edt Enter Rcpts/Strup  PV
IF PAR.Called_From_Program = 'ICQLPVR';

// LCL.Inventory Trans Type TxtU = CON.Receipts
LCL.Inventory_Trans_Type_TxtU = 'Receipts';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is Edt Enter Issu/Adj Dtl EF
IF PAR.Called_From_Program = 'ICQ7EFR';

// LCL.Inventory Trans Type TxtU = CON.Issue/Adj
LCL.Inventory_Trans_Type_TxtU = 'Issue/Adj';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is Edt Enter Transfer Dtl EF
IF PAR.Called_From_Program = 'OMHEEFR';

// OR PAR.Called From Program is Relocate Item         PV
OR PAR.Called_From_Program = 'PDH1PVR';

// LCL.Inventory Trans Type TxtU = CON.Transfer
LCL.Inventory_Trans_Type_TxtU = 'Transfer';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is Exc Upd EDI 944 Trsn   XF
IF PAR.Called_From_Program = 'PUDLXFR';

// LCL.Inventory Trans Type TxtU = CON.EDI944XFRA
LCL.Inventory_Trans_Type_TxtU = 'EDI944XFRA';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is Exc Proc 947 Whs InvAdjXF
IF PAR.Called_From_Program = 'PUGDXFR';

// LCL.Inventory Trans Type TxtU = CON.EDI947INVA
LCL.Inventory_Trans_Type_TxtU = 'EDI947INVA';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is Exc Upd EDI 945 Trsn   XF
IF PAR.Called_From_Program = 'PUEJXFR';

// LCL.Inventory Trans Type TxtU = CON.EDI945SHPA
LCL.Inventory_Trans_Type_TxtU = 'EDI945SHPA';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is EDT Confirm Ship Detl  DF
IF PAR.Called_From_Program = 'PDL8DFR';

// OR PAR.Called From Program is ADD Ready to Confirm  XL
OR PAR.Called_From_Program = 'PNTKXFR';

// LCL.Inventory Trans Type TxtU = CON.Shipping
LCL.Inventory_Trans_Type_TxtU = 'Shipping';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is WW Unship Orders       DF
IF PAR.Called_From_Program = 'PDMLDFR';

// LCL.Inventory Trans Type TxtU = CON.Unship Ord
LCL.Inventory_Trans_Type_TxtU = 'Unship Ord';

//?Set Inv Trans Type Constant for Email Subject.
// IF PAR.Called From Program is PFS Reopen Order      XL
IF PAR.Called_From_Program = 'PNTWXFR';

// LCL.Inventory Trans Type TxtU = CON.Reopen Ord
LCL.Inventory_Trans_Type_TxtU = 'Reopen Ord';

ENDIF;

ENDIF;

//?Format Email Subject Line.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Subject 2 USR = CONCAT(CON.WIM API Call was Not Succ,CON.essful for Inv Trans,CON.*ZERO
LCL.Email_Subject_2_USR = 'WIM API Call was Not Succ' + 'essful for Inv Trans' (*ZERO);

// LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Inventory Trans Type TxtU,CON.1)
LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Inventory_Trans_Type_TxtU (1);

//?If Not PROD Then Append 'TEST' to Email Subject Line.
CASE;

// IF LCL.Library List Code is Not PRKFLIB
IF LCL.Library_List_Code <> 'PRKFLIB';

// LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

ENDIF;

ENDIF;

//?Format/Send Email Message for Business.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Message 2 USR = CONCAT(CON.The WIM Outbound API (wim,CON..ordershipping.inventory),CON.
LCL.Email_Message_2_USR = 'The WIM Outbound API (wim' + '.ordershipping.inventory)' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.call had a hardstop error,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'call had a hardstop error' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.on the API,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'on the API' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.hence the inventory trans,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'hence the inventory trans' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.action did NOT updated,CON.*ZERO)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'action did NOT updated' (*ZERO);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.the WIM tables properly.,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'the WIM tables properly.' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Please open an IT Help,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Please open an IT Help' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Support ticket so it can,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Support ticket so it can' (1);

// LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.be investigated.,CON.1)
LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'be investigated.' (1);

// Call program Exc ESNDMAIL Generic2 CL.
CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
PARAMETER(LCL.Email_Address_f_Bus_USR);
PARAMETER(LCL.Email_Subject_2_USR);
PARAMETER(LCL.Email_Message_2_USR);

ENDIF;

//?01/10/24 DN SR08283-Commented Out 'Format/Send Email Message for IT'.
