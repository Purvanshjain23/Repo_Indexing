      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP245 - Create Kill Data for Business Office
      * PROGRAMMER:  Brad Baden
      * CREATED:     12/14/2017
      *
      * Function:    This program reads the Tattoo Header records selected
      *              in the OPNQRYF.  Records will be created in the Kill
      *              Data for Business Office workfile HSP3101. The DOA
      *              value on the HSP3101 file is the DOA + KOA on the
      *              PKA1CPQ2 file.  The KOA is stored in the Unused
      *              Date 4 field A1EDDT.
      *
      *              This program is called from HP453CL.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * xx/xx/xx  xxxxxxxxxxxxx   Exxxxxxx
      *           xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      *           xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      * 11/02/20  ISE             H16853
      *                           Recompile only. Buy Order Number length is changed from 5 to 7.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpka1cpq2  if   e           k disk
      *  Tattoo Header     (Records selected in OPNQRYF)
      *
      *
     Fhsp084    if   e           k disk
      *  Sales Header      (Key: Movement Number)
      *
      *
     Fhsp3101   uf a e             disk
      *   Kill Data for Business Office workfile
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      *  LDA - REPORT OPTIONS
      ****************************************************************
      *
     D LDA            UDS
     D  LDKLDT                 1     08  0
     D  LD0YMD                 9     15  0
     D  LDMDY                 16     21  0
     D  LDEFFL                22     22
     D  LDEFDS                23     32
     D  LDCONO                33     35  0
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
     D wkfsbo          s                   like(shfsbo)
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read the Tattoo Header records selected in the OPNQRYF
      *
     C     *loval        setll     pka1cpq2
     C                   dou       %eof(pka1cpq2)                               dou %eof
     C                   read      pka1cpq2
     C                   if        not %eof(pka1cpq2)                           if not %eof
      *
     C                   if        a1hmnb = ldcono                              if a1hmnb
      *
      * Retrieve the Business Office from the Sales Header file
      *
     C     a1oxnb        chain     hsp084
     C                   if        %found                                       if %found
     C                   eval      wkfsbo = shfsbo
     C                   else
     C                   eval      wkfsbo = *blanks
     C                   endif                                                  fi %found
      *
     C                   exsr      $wrtkd
      *
     C                   endif                                                  fi a1hmnb
     C                   endif                                                  fi not %eof
     C                   enddo                                                  dou %eof
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Write records to HSP3101
      *---------------------------------------------------------------
      *
     C     $wrtkd        begsr
      *
     C                   eval      w1bocd    = wkfsbo
     C                   eval      w1comp#   = a1hmnb
     C                   eval      w1bono    = a1bnnb
     C                   eval      w1boldno  = a1bonb
     C                   eval      w1tattoo  = a1cvnb
     C                   eval      w1kldt    = %dec(%char(%date(a1b0dt:*cymd):
     C                                         *iso0):8:0)
     C                   eval      w1grpref  = a1bicd
     C                   eval      w1hddoa   = a1cxnb + a1eddt
     C                   eval      w1hdrcvd  = a1cwnb
     C                   eval      w1yrddead = a1fcnb
     C                   eval      w1hldovr  = a1h9nb
     C                   eval      w1hdcndm  = a1fdnb
     C                   eval      w1livwgt  = a1cynb
     C                   eval      w1hotwgt  = a1e0nb
     C                   eval      w1avlvwgt = a1f7nb
     C                   eval      w1avglean = a1f4nb
     C                   eval      w1avgloin = a1f3nb
     C                   eval      w1avgbkft = a1f2nb
     C                   eval      w1bsmkt$  = a1anpr
     C                   eval      w1sortdsc = a1ayva
     C                   eval      w1yldgnls = a1awva
     C                   eval      w1adonded = a1axva
     C                   eval      w1pymtgrs = a1cbpr
     C                   eval      w1pymtnet = a1ccpr
     C                   eval      w1vchrdoc = a1lpnb
      *
     C                   eval      w1vchpydt = 0
     C                   if        a1bydt <> 0
     C                   eval      w1vchpydt = %dec(%char(%date(a1bydt:*cymd):
     C                                         *iso0):8:0)
     C                   endif
      *
     C                   eval      w1hlovcdt = 0
     C                   if        a1bsdt <> 0
     C                   eval      w1hlovcdt = %dec(%char(%date(a1bsdt:*cymd):
     C                                         *iso0):8:0)
     C                   endif
      *
     C                   eval      w1pmttyp  = a1j9st
     C                   eval      w1mvsn    = a1oxnb
     C                   eval      w1dfctcd  = a1bdcd
     C                   eval      w1clascd  = a1becd
      *
     C                   write     w1rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *dtaara       define    *lda          lda
     C                   in        lda
      *
     C                   endsr
      /eject
