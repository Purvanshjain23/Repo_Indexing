// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLNSPVR
// ?Date: 14.08.2025 Time: 02:54:50
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Call program Rtv User Group Profile UP.
CALL PROGRAM(Rtv User Group Profile UP) ('PWGZUPC');
PARAMETER(JOB.*USER);
PARAMETER(LCL.Group_Reference_Code_USR);

//?Default Company field protection flag
// LCL.Protect Ref fields = CND.Yes
LCL.Protect_Ref_fields = 'Y';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.PPWS_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?Determine action from security check
CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

//?Determine action from security check
// IF LCL.Group Reference Code  USR is Seaboard Programmer
IF LCL.Group_Reference_Code_USR = 'SBDPGMR';

// LCL.Protect Ref fields = CND.No
LCL.Protect_Ref_fields = 'N';

//?Determine action from security check
// IF JOB.*USER is Pork IS Repayment Users
IF JOB.*USER = 'ISJAMESB'/'ISDANNYN'/'ISJULIUSH'/'ISPURVAP'/'ISROSEM'/'ISSUSANM'                   +
/'ISBARBG';

// LCL.Protect Ref fields = CND.No
LCL.Protect_Ref_fields = 'N';

//?Determine action from security check
// IF PAR.Oms Allow Multi-Company is No
IF PAR.Oms_Allow_Multi_Company = 'N';

// LCL.Protect Ref fields = CND.Yes
LCL.Protect_Ref_fields = 'Y';

ENDIF;

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.PPWS Company Number
DTL.CC_Company_Number = WRK.PPWS_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

// DTL.Company Number USR = DTL.CC Company Number
DTL.Company_Number_USR = DTL.CC_Company_Number;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Validate relations

// DTL.CC Company Number = DTL.Company Number USR
DTL.CC_Company_Number = DTL.Company_Number_USR;

//?02/28/20 DN S16226-Display Co Name on Screen.
EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


CASE;

// IF DTL.CC Company Number is Greater Then *zero
IF DTL.CC_Company_Number > *ZERO;

EXECUTE FUNCTION(Chk Company Number    RT) TYPE(RTVOBJ) FILE(PKAZREP)           AB1345495;
PARAMETER(DTL.CC_Company_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Invalid Company Number'
ERROR(PRK0299);
MSGPARM(DTL.Company_Number_USR);

ENDIF;

ENDIF;

//?03/02/2020 DN S16226-Validate Email Address (LIVE).
CASE;

// IF DTL.Company Number USR is SBD Farms of Guymon, Ok
IF DTL.Company_Number_USR = 360;

// OR DTL.Company Number USR is Sioux City
OR DTL.Company_Number_USR = 440;

//?Send Info Message If Email Address (LIVE) Not Entered.
CASE;

// IF DTL.Email Address 1 is Not Entered
IF DTL.Email_Address_1 = *BLANK;

// LCL.Generic Message 80 USR = CONCAT(CON.Warning: Email Address fo,CON.r LIVE is not entered.,CON.
LCL.Generic_Message_80_USR = 'Warning: Email Address fo' + 'r LIVE is not entered.' (*ZERO);

// Send information message - '&1'
MESSAGE(PRK1554 *INFO);
MSGPARM(LCL.Generic_Message_80_USR);

ENDIF;

//?03/02/2020 DN S16226-Validate Email Address (LIVE).
// IF *OTHERWISE
IF *OTHERWISE;

//?Email Address (LIVE) Only Valid for Co 360/440.
CASE;

// IF DTL.Email Address 1 is Entered
IF DTL.Email_Address_1 <> *BLANK;

// LCL.Generic Message 80 USR = CONCAT(CON.Email Address for LIVE ca,CON.nnot be entered. Valid,CON.
LCL.Generic_Message_80_USR = 'Email Address for LIVE ca' + 'nnot be entered. Valid' (*ZERO);

// LCL.Generic Message 80 USR = CONCAT(LCL.Generic Message 80 USR,CON.for Co 360/440 only.,CON.1)
LCL.Generic_Message_80_USR = LCL.Generic_Message_80_USR + 'for Co 360/440 only.' (1);

// Send error message - '&1'
ERROR(PRK1553);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.Email_Address_1);

ENDIF;

ENDIF;

//?USER: User defined action

//?Get the HPE ReTstPay Sequel - HPERTSTPAY
// LCL.CC Company Num-Alpha = CVTVAR(DTL.CC Company Number)
LCL.CC_Company_Num_Alpha = CVTVAR(DTL.CC_Company_Number);

//?02/28/20 DN S16226-Passed in Email Address for LIVE Notification.
// Call program Prt Re-Payment Differ UP.
SBMJOB;
CALL PROGRAM(Prt Re-Payment Differ UP) ('PLNTUPRCLP');
PARAMETER(LCL.CC_Company_Num_Alpha);
PARAMETER(DTL.EMail_Address);
PARAMETER(DTL.Email_Address_1);
SBMJOBOVR JOB(REPYMTDIFF);
SBMJOBEND;

// Send information message - 'Job &1 has been submitted.'
MESSAGE(PRK1500 *INFO);
MSGPARM('REPYMTDIFF');

