     H/TITLE Prt Inv Trans Jrnl Adj PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 02/22/07  Time  : 10:58:53
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAB7CPMAIF  E           K        DISK
      * RSQ : Item Transaction Detail   Cp/Whs/Id/Typ/Rsn/Itm
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAEFREL1IF  E           K        DISK
      * RTV : Reason Codes              Retrieval index       NV
      *
     FPDKLREL1IF  E           K        DISK
      * RTV : Company Item Avail Group  Retrieval index
      *
     FPPHNPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Inv Trans Jrnl Adj PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item
      * N :  Pieces Per Bag
     I                                    P   1   40P1BDNB
      * N :  Bags Per Unit
     I                                    P   5   80P1BJNB
     IP2PARM      DS
      * FLD: Item Transaction Detail
      * I :  Company Number
     I                                    P   1   20P2AIC3
      * I :  Item Code
     I                                    P   3   60P2HGCD
      * I :  Warehouse Code
     I                                        7   9 P2AJCD
      * I :  Item Structure Class Code
     I                                    P  10  110P2RINB
      * I :  Item Structure Group Code
     I                                    P  12  130P2RHNB
      * I :  Item Structure Type Code
     I                                    P  14  150P2RGNB
      * I :  Shift Number
     I                                       16  16 P2XLCD
     IP3PARM      DS
      * I :  USR From Date
     I                                    P   1   40P3BDDT
     IP4PARM      DS
      * I :  USR To Date
     I                                    P   1   40P4FDDT
     IP5PARM      DS
      * FLD: *Arrays
      * I :  Trans Type 1 PASS     USR
     I                                        1   2 P5ZSST
      * I :  Trans Type 2 PASS     USR
     I                                        3   4 P5ZTST
      * I :  Trans Type 3 PASS     USR
     I                                        5   6 P5ZUST
      * I :  Trans Type 4 PASS     USR
     I                                        7   8 P5ZVST
      * I :  Reason Code 1 PASS    USR
     I                                        9  11 P5T4CD
      * I :  Reason Code 2 PASS    USR
     I                                       12  14 P5T5CD
      * I :  Reason Code 3 PASS    USR
     I                                       15  17 P5T6CD
      * I :  Reason Code 4 PASS    USR
     I                                       18  20 P5T7CD
      * I :  USR User ID Selected
     I                                       21  30 P5FJNA
      * I :  Dtl/Sum/Ttl/Typ Sts   USR
     I                                       31  31 P5BFST
      * I :  Status - Y or N
     I                                       32  32 P5B8ST
     IP6PARM      DS
      * I :  Date Type             USR
     I                                        1   1 P6R8ST
     IP7PARM      DS
      * FLD: *Arrays
      * I :  Export/Domestic
     I                                        1   1 P7SUST
      * I :  Availability Group Code
     I                                        2   4 P7V4CD
      * I :  USR From Time 6.0
     I                                    P   5   80P7HONX
      * I :  USR To Time 6.0
     I                                    P   9  120P7HPNX
      * I :  Inventory Trans. ID
     I                                       13  13 P7W9ST
     IP8PARM      DS
      * N :  USR Display 1
     I                                        1   1 P8TIST
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P2AIC3    PARM           WP0001  30       Company Number
     C           P2HGCD    PARM           WP0002  70       Item Code
     C           P2AJCD    PARM           WP0003  3        Warehouse Code
     C           P2RINB    PARM           WP0004  30       Item Structure
     C           P2RHNB    PARM           WP0005  30       Item Structure
     C           P2RGNB    PARM           WP0006  30       Item Structure
     C           P2XLCD    PARM           WP0007  1        Shift Number
     C           P3BDDT    PARM           WP0008  70       USR From Date
     C           P4FDDT    PARM           WP0009  70       USR To Date
     C           P5ZSST    PARM           WP0010  2        Trans Type 1 PA
     C           P5ZTST    PARM           WP0011  2        Trans Type 2 PA
     C           P5ZUST    PARM           WP0012  2        Trans Type 3 PA
     C           P5ZVST    PARM           WP0013  2        Trans Type 4 PA
     C           P5T4CD    PARM           WP0014  3        Reason Code 1 P
     C           P5T5CD    PARM           WP0015  3        Reason Code 2 P
     C           P5T6CD    PARM           WP0016  3        Reason Code 3 P
     C           P5T7CD    PARM           WP0017  3        Reason Code 4 P
     C           P5FJNA    PARM           WP0018 10        USR User ID Sel
     C           P5BFST    PARM           WP0019  1        Dtl/Sum/Ttl/Typ
     C           P5B8ST    PARM           WP0020  1        Status - Y or N
     C           P6R8ST    PARM           WP0021  1        Date Type
     C           P7SUST    PARM           WP0022  1        Export/Domestic
     C           P7V4CD    PARM           WP0023  3        Availability Gr
     C           P7HONX    PARM           WP0024  60       USR From Time 6
     C           P7HPNX    PARM           WP0025  60       USR To Time 6.0
     C           P7W9ST    PARM           WP0026  1        Inventory Trans
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Inv Trans Jrnl Adj PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$JENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Inv Trans Jrnl Adj PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@B7CPV8                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       P8TIST           USR Display 1
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Warehouse Code
     C                     MOVEL'Y'       W0AL02  1        Inventory Trans
     C                     MOVEL'Y'       W0AL03  1        Inventory Trans
     C                     MOVEL'Y'       W0AL04  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BBDDT           USR From Date
     C                     Z-ADD*ZERO     $BHMNX           USR From Time 4
     C                     Z-ADD*ZERO     $BFDDT           USR To Date
     C                     Z-ADD*ZERO     $BHLNX           USR To Time 4.0
     C                     MOVEL*BLANK    $BHMTX           Condition Desc.
     C                     MOVEL*BLANK    $BBFST           Dtl/Sum/Ttl/Typ
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL*BLANK    $BV4CD           Availability Gr
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     MOVEL*BLANK    $BAJCD           Warehouse Code
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     $BHGCD           Item Code
     C                     MOVEL*BLANK    $BGENA           Item Descriptio
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     Z-ADD*ZERO     $BRINB           Item Structure
     C                     MOVEL*BLANK    $BDETX           Item Structure
     C                     MOVEL*BLANK    $BW9ST           Inventory Trans
     C                     MOVEL*BLANK    $BHOTX           Condition Desc.
     C                     MOVEL*BLANK    $BZSST           Trans Type 1 PA
     C                     MOVEL*BLANK    $BZTST           Trans Type 2 PA
     C                     MOVEL*BLANK    $BZUST           Trans Type 3 PA
     C                     MOVEL*BLANK    $BZVST           Trans Type 4 PA
     C                     MOVEL*BLANK    $BB8ST           Status - Y or N
     C                     MOVEL*BLANK    $BT4CD           Reason Code 1 P
     C                     MOVEL*BLANK    $BT5CD           Reason Code 2 P
     C                     MOVEL*BLANK    $BT6CD           Reason Code 3 P
     C                     MOVEL*BLANK    $BT7CD           Reason Code 4 P
     C                     MOVEL*BLANK    $BFJNA           USR User ID Sel
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     MOVEL*BLANK    $BXLCD           Shift Number
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
      * Load related totals format
     C                     Z-ADD*ZERO     $IQTTO           Quantity Total
     C                     Z-ADD*ZERO     $IFCNB           Pieces Total  1
     C                     Z-ADD*ZERO     $IETWG           Weight Total 13
     C                     Z-ADD*ZERO     $IA3NB           USR Amount for
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB7AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CAGTX           USR Company Nam
      * Load related totals format
     C                     Z-ADDB7AIC3    $HAIC3           Company Number
     C                     Z-ADD*ZERO     $HQTTO           Quantity Total
     C                     Z-ADD*ZERO     $HFCNB           Pieces Total  1
     C                     Z-ADD*ZERO     $HETWG           Weight Total 13
     C                     Z-ADD*ZERO     $HA3NB           USR Amount for
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB7AIC3    $DAIC3           Company Number
     C                     MOVELB7AJCD    $DAJCD           Warehouse Code
     C                     MOVEL*BLANK    $DCCNA           USR Warehouse d
      * Load related totals format
     C                     Z-ADDB7AIC3    $GAIC3           Company Number
     C                     MOVELB7AJCD    $GAJCD           Warehouse Code
     C                     Z-ADD*ZERO     $GQTTO           Quantity Total
     C                     Z-ADD*ZERO     $GFCNB           Pieces Total  1
     C                     Z-ADD*ZERO     $GETWG           Weight Total 13
     C                     Z-ADD*ZERO     $GA3NB           USR Amount for
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDB7AIC3    $FAIC3           Company Number
     C                     MOVELB7AJCD    $FAJCD           Warehouse Code
     C                     MOVELB7W9ST    $FW9ST           Inventory Trans
     C                     MOVELB7BSST    $FBSST           Inventory Trans
     C                     Z-ADD*ZERO     $FQTTO           Quantity Total
     C                     Z-ADD*ZERO     $FFCNB           Pieces Total  1
     C                     Z-ADD*ZERO     $FETWG           Weight Total 13
     C                     Z-ADD*ZERO     $FA3NB           USR Amount for
     C                     MOVEL*BLANK    $FOTTX           Blank for 4
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDB7AIC3    $EAIC3           Company Number
     C                     MOVELB7W9ST    $EW9ST           Inventory Trans
     C                     MOVELB7BSST    $EBSST           Inventory Trans
     C                     Z-ADDB7HGCD    $EHGCD           Item Code
     C                     MOVEL*BLANK    $EGENA           Item Descriptio
     C                     MOVELB7AJCD    $EAJCD           Warehouse Code
     C                     Z-ADDB7ELDT    $EELDT           Production Date
     C                     Z-ADDB7K7DT    $EK7DT           Label Date
     C                     MOVELB7XLCD    $EXLCD           Shift Number
     C                     MOVELB7HVCD    $EHVCD           U/M - Transacti
     C                     Z-ADDB7A5QT    $EA5QT           Transaction Qua
     C                     Z-ADD*ZERO     $EJWQT           USR Pieces
     C                     Z-ADDB7AHWG    $EAHWG           Transaction Wei
     C                     Z-ADDB7AKCS    $EAKCS           USR Transaction
     C                     Z-ADDB7AYVA    $EAYVA           Extended Amount
     C                     MOVELB7BJNA    $EBJNA           Ticket Number
     C                     Z-ADD*ZERO     $EAIWG           Unit Weight
     C                     MOVELB7AUNA    $EAUNA           Description
     C                     MOVELB7F1ST    $EF1ST           Item Transactio
     C                     MOVEL*BLANK    $EHLTX           Condition Desc.
     C                     MOVELB7CQCD    $ECQCD           Reason Code
     C                     MOVEL*BLANK    $EM1NA           Reason Descript
     C                     Z-ADDB7B4DT    $EB4DT           Transaction Dat
     C                     Z-ADDB7C4NY    $EC4NY           ITD Sequence Nu
     C                     MOVELB7DTCD    $EDTCD           Reference Numbe
     C                     MOVELB7MGNA    $EMGNA           Lot ID
     C                     Z-ADDB7TRBN    $ETRBN           Transfer Batch
     C                     Z-ADDB7TRBS    $ETRBS           Transfer Batch
     C                     Z-ADDB7C4NB    $EC4NB           Order Number
     C                     Z-ADDB7RINB    $ERINB           Item Structure
     C                     Z-ADDB7RHNB    $ERHNB           Item Structure
     C                     Z-ADDB7RGNB    $ERGNB           Item Structure
     C                     MOVELB7M3NA    $EM3NA           Employee Badge
     C                     Z-ADDB7AWTM    $EAWTM           Production Time
     C                     MOVELB7UVST    $EUVST           EDI Status 1
     C                     MOVELB7UWST    $EUWST           EDI Status 2
     C                     MOVELB7UXST    $EUXST           EDI Status 3
     C                     MOVELB7VSST    $EVSST           Record Status
     C                     Z-ADDB7AATM    $EAATM           Job Time
     C                     MOVELB7AYNA    $EAYNA           User Id
     C                     MOVELB7A0NA    $EA0NA           Job Name
     C                     Z-ADDB7AXDT    $EAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $EA5QT    $FQTTO           Quantity Total
     C                     ADD  $EJWQT    $FFCNB           Pieces Total  1
     C                     ADD  $EAHWG    $FETWG           Weight Total 13
     C                     ADD  $EAYVA    $FA3NB           USR Amount for
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B7AIC3    WZA001           Company Number
     C                     Z-ADDB7AIC3    WZA001
     C           *LIKE     DEFN B7AJCD    WZA002           Warehouse Code
     C                     MOVELB7AJCD    WZA002
     C           *LIKE     DEFN B7W9ST    WZA003           Inventory Trans
     C                     MOVELB7W9ST    WZA003
     C           *LIKE     DEFN B7BSST    WZA004           Inventory Trans
     C                     MOVELB7BSST    WZA004
     C           *LIKE     DEFN B7HGCD    WZA005           Item Code
     C                     Z-ADDB7HGCD    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @B7CPV8                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE: DB1.Inventory Trans. Type is Physical Count
     C           B7BSST    IFEQ 'P'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Validate Export/Domestic from PA Group EXP
      * CASE: PAR.Export/Domestic is Export
     C           P7SUST    IFEQ 'E'                        *IF
      * Val Existance         RT - Company Item/Avail Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB7AIC3    WL0003           Company Number
     C                     Z-ADDB7HGCD    WL0004           Item Code
     C                     MOVEL'EXP'     WL0005    P      Availability Gr
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    WUWXST    P      Record Found US
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Export/Domestic is Domestic
     C           P7SUST    IFEQ 'D'                        *IF
      * Val Existance         RT - Company Item/Avail Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB7AIC3    WL0003           Company Number
     C                     Z-ADDB7HGCD    WL0004           Item Code
     C                     MOVEL'EXP'     WL0005    P      Availability Gr
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    WUWXST    P      Record Found US
      * CASE: WRK.Record Found USR is Record Found
     C           WUWXST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * 10/27/04 PKD Selection for Adjustment Transactions Report Type
      * SEL:  Adjustment Transactions
      * CASE: PAR.Dtl/Sum/Ttl/Typ Sts   USR is Adjustment Transactions
     C           P5BFST    IFEQ 'A'                        *IF
      * Inventory Transaction ID & Types
      * CASE: DB1.Inventory Trans. ID is Issue
     C           B7W9ST    IFEQ 'I'                        *IF
      * CASE: DB1.Inventory Trans. Type is Issue Order Process
     C           B7BSST    IFEQ 'IO'                       *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Inventory Trans. ID is Receipt
     C           B7W9ST    IFEQ 'R'                        *IF
      * CASE: DB1.Inventory Trans. Type is Receipt Production
     C           B7BSST    IFEQ 'RR'                       *IF
      * CASE: DB1.Reason Code is Production from Accu-Sort
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Do not print if Weight and Quantity are zero
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Transaction Quantity is Equal to zero
      *   |- c2    : DB1.Transaction Weight is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B7A5QT    IFEQ *ZERO                      *IF
     C           B7AHWG    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * ** 01/25/07 LJB Skip record if Include Zero Quantity flag = "N"
      * ** and the Transaction Quantity is zeros
      * ** Do not print if Transaction Quantity is zero
      * CASE:
      *  - c2 AND c1
      *   |- c2    : PAR.Status - Y or N is no
      *   |- c1    : DB1.Transaction Quantity is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P5B8ST    IFEQ 'N'                        *IF
     C           B7A5QT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Warehouse Code
     C                     MOVEL*BLANK    W0AL02  1        Inventory Trans
     C                     MOVEL*BLANK    W0AL03  1        Inventory Trans
     C                     MOVEL*BLANK    W0AL04  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Warehouse Code
     C                     MOVEL'Y'       W0AL02  1        Inventory Trans
     C                     MOVEL'Y'       W0AL03  1        Inventory Trans
     C                     MOVEL'Y'       W0AL04  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           B7AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           B7AJCD    IFNE WZA002                     Warehouse Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           B7W9ST    IFNE WZA003                     Inventory Trans
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           B7BSST    IFNE WZA004                     Inventory Trans
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           B7HGCD    IFNE WZA005                     Item Code
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of Inventory Trans. Type format
     C                     ADD  $FQTTO    $GQTTO           Quantity Total
     C                     ADD  $FFCNB    $GFCNB           Pieces Total  1
     C                     ADD  $FETWG    $GETWG           Weight Total 13
     C                     ADD  $FA3NB    $GA3NB           USR Amount for
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$GKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Warehouse Code format
     C                     ADD  $GQTTO    $HQTTO           Quantity Total
     C                     ADD  $GFCNB    $HFCNB           Pieces Total  1
     C                     ADD  $GETWG    $HETWG           Weight Total 13
     C                     ADD  $GA3NB    $HA3NB           USR Amount for
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $HAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$HAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VHAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$HKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Company Number - 3 format
     C                     ADD  $HQTTO    $IQTTO           Quantity Total
     C                     ADD  $HFCNB    $IFCNB           Pieces Total  1
     C                     ADD  $HETWG    $IETWG           Weight Total 13
     C                     ADD  $HA3NB    $IA3NB           USR Amount for
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP2AIC3    $BAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $BADTX    P      Name
     C                     MOVELP7V4CD    $BV4CD           Availability Gr
      * RTV Group Description  RT - Availability Group  * 
     C                     EXSR SDRVGN
     C                     MOVELP2AJCD    $BAJCD           Warehouse Code
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SERVGN
     C                     Z-ADDP2HGCD    $BHGCD           Item Code
      * If company is selected, rtv co/item else rtv item
      * CASE: PAR.Accounting Company Number is not equal to zero
     C           P2AIC3    IFNE *ZERO                      *IF
      * Rtv Descriptions      RT - Item  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Item Descriptions  RT - OM Item Default  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C                     Z-ADDP2RGNB    $BRGNB           Item Structure
      * RTV  Description       RT - OM Item Structure Type  * 
     C                     EXSR SHRVGN
     C                     Z-ADDP2RHNB    $BRHNB           Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
     C                     EXSR SIRVGN
     C                     Z-ADDP2RINB    $BRINB           Item Structure
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
     C                     EXSR SJRVGN
     C                     Z-ADDP3BDDT    $BBDDT           USR From Date
     C                     Z-ADDP4FDDT    $BFDDT           USR To Date
     C           P7HONX    DIV  100       $BHMNX           USR From Time 4
     C           P7HPNX    DIV  100       $BHLNX           USR To Time 4.0
     C                     MOVELP7W9ST    $BW9ST           Inventory Trans
      * CASE: 1PG.Inventory Trans. ID is *ALL values
     C           $BW9ST    IFEQ 'I'                        *IF
     C           $BW9ST    OREQ 'R'
     C           $BW9ST    OREQ 'A'
     C           $BW9ST    OREQ 'T'
      * 1PG.Condition Desc. 4  USR = Condition name of 1PG.Inventory Tran
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1304090   Y2LSNO  70       List number
     C                     PARM $BW9ST    W0INVL 25        Inventory Trans
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END                             *FI
     C                     MOVELP5ZSST    $BZSST           Trans Type 1 PA
     C                     MOVELP5ZTST    $BZTST           Trans Type 2 PA
     C                     MOVELP5ZUST    $BZUST           Trans Type 3 PA
     C                     MOVELP5ZVST    $BZVST           Trans Type 4 PA
     C                     MOVELP5T4CD    $BT4CD           Reason Code 1 P
     C                     MOVELP5T5CD    $BT5CD           Reason Code 2 P
     C                     MOVELP5T6CD    $BT6CD           Reason Code 3 P
     C                     MOVELP5T7CD    $BT7CD           Reason Code 4 P
      * ** Print "Zeros Quantities" on the report    L70125A LJB
     C                     MOVELP5B8ST    $BB8ST           Status - Y or N
     C                     MOVELP5FJNA    $BFJNA           USR User ID Sel
      * RTV Profile Desc.      RT - User Profile Control  * 
     C                     EXSR SKRVGN
     C                     MOVELP5BFST    $BBFST           Dtl/Sum/Ttl/Typ
      * 1PG.Condition Desc. 1  USR = Condition name of PAR.Dtl/Sum/Ttl/Ty
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1354554   Y2LSNO  70       List number
     C                     PARM P5BFST    W0INVL 25        Dtl/Sum/Ttl/Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
      * 1PG.Condition Desc. 2  USR = Condition name of PAR.Date Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1471936   Y2LSNO  70       List number
     C                     PARM P6R8ST    W0INVL 25        Date Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELP2XLCD    $BXLCD           Shift Number
      * Export or Domestic or ALL
      * CASE: PAR.Export/Domestic is *ALL values
     C           P7SUST    IFEQ 'E'                        *IF
     C           P7SUST    OREQ 'D'
      * 1PG.Condition Desc. 3  USR = Condition name of PAR.Export/Domesti
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1472213   Y2LSNO  70       List number
     C                     PARM P7SUST    W0INVL 25        Export/Domestic
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
     C                     MOVEL'ALL'     $BHNTX           Condition Desc.
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert USR From Date to display format
      * Convert date
     C           1000000   ADD  $BBDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBBDDT
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  $BFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBFDDT
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $BHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$BHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VBHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P8TIST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number - 3 format
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $CAGTX    P      Name
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Warehouse Code of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Warehouse Code format
      * RTV Warehouse          RT - Warehouse  * 
     C                     EXSR SLRVGN
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP01
     C                     END                             FI
      * Print Inventory Trans. ID of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Inventory Trans. Type of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Item Code of Prt Inv Trans Jrnl Adj PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Inv Trans Jrnl Adj PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Base Values        RT - Company/Item  * 
     C                     EXSR SMRVGN
      * Rtv Reason Code Desc.  RT - Reason Codes  * 
     C                     EXSR SNRVGN
      * Unit Cost
      * CASE: CUR.Transaction Weight EQ WRK.ZERO
     C           $EAHWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $EAKCS           USR Transaction
     C                     ELSE
      * CASE: *OTHERWISE
     C           $EAYVA    DIV  $EAHWG    $EAKCS    H      USR Transaction
     C                     END                             *FI
      * RTV Pces/Bag,Bag/Unit  RT - Company/Item  * 
     C                     EXSR SORVGN
      * Calculate Pieces
      * CUR.USR Pieces =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : CUR.Transaction Quantity
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           $EA5QT    MULT P1BDNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT P1BJNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EJWQT           USR Pieces
      * ** Don't print if transaction quantity is zeros
      * CASE: PAR.Status - Y or N is no
     C           P5B8ST    IFEQ 'N'                        *IF
      * CASE: CUR.Transaction Quantity is Equal to zero
     C           $EA5QT    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  $EELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  $EK7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEK7DT
     C                     MOVEL'0'       *IN79
     C           $ECQCD    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP01    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request all headings higher than this one
     C           W0SKP     IFEQ 'Y'
     C           W0AP00    ANDEQ*BLANK
     C                     MOVEL'P'       W0AP00
     C                     END
     C           W0AP00    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Inv Trans Jrnl Adj PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  20        W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Inv Trans Jrnl Adj PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * Warehouse Code of Prt Inv Trans Jrnl Adj PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Inventory Trans. ID of Prt Inv Trans Jrnl Adj PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Inventory Trans. Type of Prt Inv Trans Jrnl Adj PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Inv Trans Jrnl Adj PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Inv Trans Jrnl Adj PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD3         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'I/C'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0002           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Group Description  RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL$BV4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSD     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    $BNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Descriptions      RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$BAIC3    BZAIC3           Company Number
     C                     Z-ADD$BHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSF     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $BGENA           Description Lin
     C                     MOVELBZAWNA    WUAWNA           Description Lin
     C                     MOVELBZADCD    WUADCD           U/M - Primary
     C                     MOVELBZAECD    WUAECD           U/M - Second
     C                     MOVELBZAFCD    WUAFCD           U/M - Third
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - OM Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD$BHGCD    BYHGCD           Item Code
      * Establish starting position
     C           KRSSG     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BGENA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    $BGENA           Description Lin
     C                     MOVELBYAWNA    WUAWNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADD$BRGNB    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSH     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    $BRGNB           Item Structure
     C                     MOVELE8DCTX    $BDCTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADD$BRHNB    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSI     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WURGNB           Item Structure
     C                     MOVELE9DDTX    $BDDTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$BRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSJ     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDETX           Item Structure
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $BDETX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Profile Desc.      RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVEL$BFJNA    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSK     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRAUNA    $BAUNA           Description
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Warehouse          RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$DAJCD    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSSL     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $DCCNA           Warehouse Descr
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELWAF8NA    $DCCNA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Base Values        RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$EAIC3    BZAIC3           Company Number
     C                     Z-ADD$EHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSM     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $EGENA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     MOVEL*BLANK    WUADCD           U/M - Primary
     C                     Z-ADD*ZERO     WUAWPC           Conversion Fact
     C                     MOVEL*BLANK    WULXST           Operation Facto
     C                     MOVEL*BLANK    WUAECD           U/M - Second
     C                     Z-ADD*ZERO     WUAXPC           Conversion Fact
     C                     MOVEL*BLANK    WULYST           Operation Facto
     C                     MOVEL*BLANK    WUAFCD           U/M - Third
     C                     MOVEL*BLANK    WUAICD           U/M - Pricing
     C                     Z-ADD*ZERO     $EAIWG           Unit Weight
     C                     MOVEL*BLANK    WUFZST           Production Date
     C                     MOVEL*BLANK    WUAVST           Catch Weight St
     C                     Z-ADD*ZERO     WUCHTM           Fresh Chilling
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $EGENA           Description Lin
     C                     MOVELBZAWNA    WUAWNA           Description Lin
     C                     MOVELBZADCD    WUADCD           U/M - Primary
     C                     Z-ADDBZAWPC    WUAWPC           Conversion Fact
     C                     MOVELBZLXST    WULXST           Operation Facto
     C                     MOVELBZAECD    WUAECD           U/M - Second
     C                     Z-ADDBZAXPC    WUAXPC           Conversion Fact
     C                     MOVELBZLYST    WULYST           Operation Facto
     C                     MOVELBZAFCD    WUAFCD           U/M - Third
     C                     MOVELBZAICD    WUAICD           U/M - Pricing
     C                     Z-ADDBZAIWG    $EAIWG           Unit Weight
     C                     MOVELBZFZST    WUFZST           Production Date
     C                     MOVELBZAVST    WUAVST           Catch Weight St
     C                     Z-ADDBZCHTM    WUCHTM           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Reason Code Desc.  RT - Reason Codes  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           EFCQCD           Reason Code
      * Setup key
     C                     MOVEL$ECQCD    EFCQCD           Reason Code
      * Establish starting position
     C           KRSSN     CHAIN@EFREV2              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0858' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    $EM1NA           Description
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEFAUNA    $EM1NA           Description
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Pces/Bag,Bag/Unit  RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$EAIC3    BZAIC3           Company Number
     C                     Z-ADD$EHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSO     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $EGENA           Description Lin
     C                     Z-ADDBZAIWG    $EAIWG           Unit Weight
     C                     MOVELBZPCCT    WUPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    P1BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    P1BJNB           Bags Per Unit
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Val Existance         RT - Company Item/Avail Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLHGCD           Item Code
     C                     KFLD           KLV4CD           Availability Gr
      * Setup key
     C                     Z-ADDWL0003    KLAIC3           Company Number
     C                     Z-ADDWL0004    KLHGCD           Item Code
     C                     MOVELWL0005    KLV4CD           Availability Gr
      * Establish starting position
     C           KRSSP     CHAIN@KLREHH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2217' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0006           Record Found US
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0006           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ****** Maintenance Log ******
      *================================================================
      * ** 01/25/07 LJB L70125A  Added "Include Zero Quantities" flag.
      * **          Skip record if flag = "N" and Transaction Quantity
      * **          is zeros.
      * 10/27/04 PKD 1) Added Inventory Trans ID as an Input Parameter fo
      *                 printing in the Selection Criteria.
      *              2) Added selection for Adjustment Transaction Report
      *                 Type.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P1BJNB           Bags Per Unit
     C                     MOVEL*BLANK    P8TIST           USR Display 1
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B7AIC3           Company Number
     C                     MOVEL*LOVAL    B7AJCD           Warehouse Code
     C                     MOVEL*LOVAL    B7W9ST           Inventory Trans
     C                     MOVEL*LOVAL    B7BSST           Inventory Trans
     C                     MOVEL*LOVAL    B7HGCD           Item Code
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WABVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Conversion Factor 1
     C                     Z-ADD*ZERO     WUAWPC  94
      * Define work field Operation Factor 1
     C                     MOVEL*BLANK    WULXST  1
      * Define work field Conversion Factor 2
     C                     Z-ADD*ZERO     WUAXPC  94
      * Define work field Operation Factor 2
     C                     MOVEL*BLANK    WULYST  1
      * Define work field U/M - Pricing
     C                     MOVEL*BLANK    WUAICD  2
      * Define work field Production Date Control
     C                     MOVEL*BLANK    WUFZST  1
      * Define work field Catch Weight Status
     C                     MOVEL*BLANK    WUAVST  1
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Piece Count Item
     C                     MOVEL*BLANK    WUPCCT  1
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  70
     C                     MOVEL*BLANK    WL0005  3
     C                     MOVEL*BLANK    WL0006  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * ****** Maintenance Log ******
     C                     EXSR UASUBR                     ****** Maintena
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       P8TIST           USR Display 1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
