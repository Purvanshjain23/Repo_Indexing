// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAY3EFR
// ?Date: 14.08.2025 Time: 03:26:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(CTL.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.Display field = CND.no
PAR.USR_Display_field = 'N';

//?USER: Initialize subfile header

// CTL.Company Number - 3 = PAR.Company Number - 3
CTL.Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV and Fill Ref Num   IF) TYPE(EXCINTFUN)                     AC1143989;
PARAMETER(CTL.USR_Reference_Number_Txt);
PARAMETER('I');
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV Text Value         RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1142687;
 PARAMETER('REFMSTNAM');
 PARAMETER(PAR.System_Value_Alpha);
 {
  //?USER: Process Data record

  // PAR.System Value Alpha = DB1.System Value Alpha
  PAR.System_Value_Alpha = DB1.System_Value_Alpha;

 }

 // PAR.Reference Number Txt = PAR.System Value Alpha
 PAR.USR_Reference_Number_Txt = PAR.System_Value_Alpha;

 // Execute function CLC Reference Nbr Txt  US.
 EXECUTE FUNCTION(CLC Reference Nbr Txt  US) TYPE(EXCUSRSRC) ('USZFUFR');
 PARAMETER(PAR.USR_Reference_Number_Txt);
 PARAMETER(PAR.USR_Reference_No_Usage);
 {
  E                    UB3        12  1
  C                     MOVE *BLANKS   UB3
  C                     MOVEA#BB7TX    UB3
  C           #IJKST    IFEQ 'O'
  C                     MOVE ':'       UB3,12
  C                     ELSE
  C                     MOVE '.'       UB3,12
  C                     END
  C                     Z-ADD11        U3      20
  C                     SETOF                     75
  C                     DO   11
  C           UB3,U3    IFNE ' '
  C                     SETON                     75
  C                     ELSE
  C           *IN75     IFEQ '0'
  C           U3        IFEQ 2
  C           U3        OREQ 4
  C           U3        OREQ 6
  C           U3        OREQ 8
  C           U3        OREQ 10
  C                     MOVE '.'       UB3,U3
  C                     END
  C                     END
  C                     END
  C                     SUB  1         U3
  C                     END
  C                     MOVEAUB3       #BB7TX
 }

}


EXECUTE FUNCTION(RTV Reference Txt      IF) TYPE(EXCINTFUN)                     AC1143993;
PARAMETER(CTL.USR_Reference_Number_TxtA);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV Text Value         RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1142687;
 PARAMETER('REFMSTNAM');
 PARAMETER(PAR.System_Value_Alpha);
 {
  //?USER: Process Data record

  // PAR.System Value Alpha = DB1.System Value Alpha
  PAR.System_Value_Alpha = DB1.System_Value_Alpha;

 }

 // PAR.Reference Number Txt = PAR.System Value Alpha
 PAR.USR_Reference_Number_Txt = PAR.System_Value_Alpha;

}


//?USER: Validate subfile control

// PAR.Company Number - 3 = CTL.Company Number - 3
PAR.Company_Number = CTL.Company_Number;

//?Process enable/disable request
CASE;

// IF CTL.*CMD key is *Enable/Disable Options
IF CTL.*CMD_key = '08';

CASE;

// IF PAR.Display field is no
IF PAR.USR_Display_field = 'N';

// PAR.Display field = CND.yes
PAR.USR_Display_field = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Display field = CND.no
PAR.USR_Display_field = 'N';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT Reference Number M CR) TYPE(CRTOBJ) FILE(CADVREP)          AC1143790;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Reference_Number_Code);
PARAMETER(RCD.Reference_Number_Desc);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(DLT Reference Number M DL) TYPE(DLTOBJ) FILE(CADVREP)          AC1143792;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Reference_Number_Code);

//?USER: Change DBF record

EXECUTE FUNCTION(CHG Reference Number M CH) TYPE(CHGOBJ) FILE(CADVREP)          AC1143791;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Reference_Number_Code);
PARAMETER(RCD.Reference_Number_Desc);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


