     H/TITLE Prt Pricing Errors    PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISJBADE
     H* Date          : 02/22/21  Time  : 07:14:09
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKBBREL6IF  E           K        DISK
      * RSQ : Deduction/Addition        Ranking Sequence
      *
     FPKA1CPLPIF  E           K        DISK
      * RSQ : Tattoo Header
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKCDCPL7IF  E           K        DISK
      * RTV : Tattoo Ded/Add            Rtv Index - Prd's
      *
     FPKBBREL0IF  E           K        DISK
      * RTV : Deduction/Addition        Retrieval index
      *
     FPKAWCPL1IF  E           K        DISK
      * RTV : Buy Order Header          Retrieval index
      *
     FPKARREL0IF  E           K        DISK
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPWHYPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Pricing Errors    PF  Print file
      *
     E                    A1         10  1
     E                    A2         10  1
      * Long constants
     E                    @CN#    1  06  6   @CN    25
     I@BBRED5
      * Deduction/Addition        Retrieval index
      * Renamed input format fields
     I              BBBQCD                          WABQCD
     I              BBBLTX                          WABLTX
     I              BBB9ST                          WAB9ST
     I              BBCAST                          WACAST
     I              BBAEPR                          WAAEPR
     I              BBI9ST                          WAI9ST
     I              BBCBST                          WACBST
     I              BBI2ST                          WAI2ST
     I              BBF7TX                          WAF7TX
     I              BBE2CD                          WAE2CD
     I              BBOTNB                          WAOTNB
     I              BBNSST                          WANSST
     I              BBNTST                          WANTST
     I              BBNUST                          WANUST
     I              BBNVST                          WANVST
     I              BBNWST                          WANWST
     I              BBNXST                          WANXST
     I              BBNYST                          WANYST
     I              BBNZST                          WANZST
     I              BBN1ST                          WAN1ST
     I              BBN0ST                          WAN0ST
     I              BBRICD                          WARICD
     I              BBRJCD                          WARJCD
     I              BBBAT1                          WABAT1
     I              BBBBT1                          WABBT1
     I              BBAAVN                          WAAAVN
     I              BBAADT                          WAAADT
     I              BBAMTM                          WAAMTM
     I              BBAJST                          WAAJST
     I              BBAHVN                          WAAHVN
     I              BBAGVN                          WAAGVN
     I              BBABVN                          WAABVN
     I              BBABDT                          WAABDT
     I              BBABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I : MAP TH Kill Date
     I                                    P   3   60P1B0DT
      * I : RST TH Source Type
     I                                        7   7 P1KAST
     IP2PARM      DS
      * I : MAP @Status Edit/Post
     I                                        1   1 P2J2ST
     IP3PARM      DS
      * I : MAP Oms System Value Alpha
     I                                        1  40 P3EVTX
     IP4PARM      DS
      * I : MAP @Status Unpaid/All Usr
     I                                        1   1 P4J4ST
     IP5PARM      DS
      * FLD: *Arrays
      * N :  Heading 1 USR
     I                                        1  10 P5JLTX
      * N :  Heading 2 USR
     I                                       11  20 P5JMTX
      * N :  Heading 3 USR
     I                                       21  30 P5JNTX
      * N :  Heading 4 USR
     I                                       31  40 P5JOTX
      * N :  Heading 5 USR
     I                                       41  50 P5K4TX
      * N :  Rank 01 Usr
     I                                    P  51  520P5VYNB
      * N :  Rank 02 Usr
     I                                    P  53  540P5VZNB
      * N :  Rank 03 Usr
     I                                    P  55  560P5V0NB
      * N :  Rank 04 Usr
     I                                    P  57  580P5V1NB
      * N :  Rank 05 Usr
     I                                    P  59  600P5DQNB
     IP6PARM      DS
      * FLD: Buy Order Header
      * N :  BOH Quote Price Type
     I                                        1   2 P6B3ST
      * N :  BOH Commodity Market Code
     I                                        3   5 P6ETCD
      * N :  BOH Commodity Price Group
     I                                        6  12 P6EUCD
      * N :  CMP Program Code
     I                                       13  15 P6AMCD
     IP7PARM      DS
      * N :  Pricing UOM USR
     I                                        1   2 P7SNST
     IP8PARM      DS
      * FLD: Carcass Merit Program
      * N :  CMP Sort Basis
     I                                        1   1 P8DMST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1B0DT    PARM           WP0002  70       TH Kill Date
     C           P1KAST    PARM           WP0003  1        TH Source Type
     C           P2J2ST    PARM           WP0004  1        @Status Edit/Po
     C           P3EVTX    PARM           WP0005 40        Oms System Valu
     C           P4J4ST    PARM           WP0006  1        @Status Unpaid/
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Pricing Errors    PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$GENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Pricing Errors    PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
     C           *LIKE     DEFN A1KAST    WQKA02           TH Source Type
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           TH Source Type
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     MOVELP1KAST    WQKA02           TH Source Type
      * Establish starting position
     C           KRSA      SETLL@A1CPQB                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Source Type
     C                     MOVEL'Y'       W0AL02  1        TH Payment Type
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0AL04  1        TH Payment Sts
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $FP0NB           Count USR
     C                     Z-ADD*ZERO     $FJBVA           Excluded Value
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     MOVELA1KAST    $DKAST           TH Source Type
     C                     MOVELA1J9ST    $DJ9ST           TH Payment Type
     C                     MOVEL*BLANK    $DITTX           Payment type De
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVEL*BLANK    $EGYST           Error Type Foun
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     MOVELA1ABCD    $EABCD           PD Producer Cod
     C                     Z-ADDA1BNNB    $EBNNB           BOH Buy Order N
     C                     Z-ADDA1CVNB    $ECVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     $EB5NB           Head Total USR
     C                     Z-ADD*ZERO     $EV6NB           Avg Adj Live We
     C                     Z-ADDA1HGNB    $EHGNB           TH Shipped Weig
     C                     Z-ADDA1LRNB    $ELRNB           TH Adj Live Wgt
     C                     Z-ADDA1F7NB    $EF7NB           TH Avg Live Wgt
     C                     Z-ADDA1FENB    $EFENB           TH Head Killed
     C                     Z-ADDA1AWPC    $EAWPC           TH Actual Yield
     C                     Z-ADDA1CYNB    $ECYNB           TH Live Wgt
     C                     Z-ADDA1F4NB    $EF4NB           TH Avg Lean Per
     C                     Z-ADDA1ANPR    $EANPR           TH CM Base Mkt
     C                     Z-ADDA1AXVA    $EAXVA           TH CM LN AddOn/
     C                     Z-ADDA1AWVA    $EAWVA           TH CM Yield Gai
     C                     Z-ADDA1AYVA    $EAYVA           TH CM Sort Disc
     C                     Z-ADDA1TBPR    $ETBPR           TH Excluded Gro
     C                     Z-ADDA1AOPR    $EAOPR           TH CM Base Carc
     C                     Z-ADDA1CBPR    $ECBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $EETPR           Ded Amount 1 Us
     C                     Z-ADD*ZERO     $EEUPR           Ded Amount 2 Us
     C                     Z-ADD*ZERO     $EEVPR           Ded Amount 3 Us
     C                     Z-ADD*ZERO     $ELGPR           Ded Amount 4 US
     C                     Z-ADD*ZERO     $EEWPR           Ded Amount All
     C                     Z-ADD*ZERO     $EEXPR           DED/ADD TOTAL U
     C                     Z-ADDA1A5VA    $EA5VA           TH Additions Am
     C                     Z-ADDA1ASPR    $EASPR           TH Deduction Am
     C                     Z-ADDA1CCPR    $ECCPR           Th Payment Net
     C                     Z-ADD*ZERO     $ENVA1           LFT usr
     C                     Z-ADD*ZERO     $ENWA1           EUT/KOA Hogs us
     C                     Z-ADDA1FCNB    $EFCNB           TH Yard Deads
     C                     Z-ADDA1CXNB    $ECXNB           TH Dead On Arri
     C                     Z-ADDA1FDNB    $EFDNB           TH Head Condemn
     C                     Z-ADDA1ECDT    $EECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $EEDDT           TH Head EUT/KOA
     C                     MOVEL*BLANK    $EEKTX           Producer Name 1
     C                     MOVELA1BICD    $EBICD           TH Group Refere
     C                     MOVELA1CPST    $ECPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $EACPR           TH Live Purchas
     C                     Z-ADDA1HENB    $EHENB           TH Head Adds
     C                     Z-ADDA1HFNB    $EHFNB           TH Head Accepte
     C                     Z-ADDA1E0NB    $EE0NB           TH Hot Wgt
     C                     Z-ADDA1A5PC    $EA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $EFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $EA4PC           TH Tot Light Re
     C                     Z-ADDA1HDNB    $EHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1F5NB    $EF5NB           TH Avg Light Re
     C                     Z-ADDA1F3NB    $EF3NB           TH Avg Loin Eye
     C                     Z-ADDA1F2NB    $EF2NB           TH Avg Backfat
     C                     Z-ADDA1AVPC    $EAVPC           TH Std Yield Pe
     C                     Z-ADDA1CWPC    $ECWPC           TH Adj Actual Y
     C                     Z-ADDA1A8PC    $EA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $EA7PC           TH Recalc Live
     C                     Z-ADDA1B0DT    $EB0DT           TH Kill Date
     C                     Z-ADDA1AMPR    $EAMPR           TH CM Base Mkt
     C                     MOVELA1CWST    $ECWST           TH Payment Sts
     C                     Z-ADDA1B9PR    $EB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $ECAPR           TH LIve Net Amt
     C                     Z-ADDA1CWNB    $ECWNB           TH Head Receive
     C                     MOVELA1CSCD    $ECSCD           THP Process Cod
     C                     Z-ADDA1APPR    $EAPPR           TH CM Carcass G
     C                     Z-ADDA1ATPR    $EATPR           TH Carcass Net
     C                     Z-ADDA1H9NB    $EH9NB           TH Held Over
     C                     Z-ADDA1AWDT    $EAWDT           TH Purchase Dat
     C                     MOVELA1BECD    $EBECD           HC Class Code
     C                     Z-ADDA1B8PR    $EB8PR           TH CM Market Pr
     C                     Z-ADDA1A4VA    $EA4VA           TH Total Net WO
     C                     Z-ADDA1LPNB    $ELPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $ECDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $EA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $EA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $EJWST           TH Calc Net Sts
     C                     MOVELA1D7ST    $ED7ST           TH Header Error
     C                     MOVELA1D8ST    $ED8ST           TH Detail Error
     C                     MOVELA1DWST    $EDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $ED6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $EGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $EBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $EE0ST           TH User Error O
     C                     MOVELA1E1ST    $EE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $EE2ST           TH Sex
     C                     Z-ADDA1BSDT    $EBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $EBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $EBUDT           TH Actual Check
     C                     Z-ADDA1HHNB    $EHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $EHINB           TH FFLI
     C                     Z-ADDA1A3PR    $EA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $EA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $EA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $EJ9NB           TH Head Exclude
     C                     Z-ADDA1D7PR    $ED7PR           TH CM Bse Mkt C
     C                     Z-ADDA1EFPR    $EEFPR           TH CM Lean Prem
     C                     Z-ADDA1EBPR    $EEBPR           TH CM Yld G/L C
     C                     Z-ADDA1D9PR    $ED9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     $ECUPR           Gross Pay Amt T
     C                     MOVEL*BLANK    $EOETX           Text 25 1 USR
     C                     MOVEL*BLANK    $EJ6TX           Blank Usr 2
     C                     Z-ADDA1BONB    $EBONB           BOL Load Number
     C                     Z-ADDA1D6PR    $ED6PR           TH CM Bse Mkt L
     C                     Z-ADDA1ECPR    $EECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $EEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $EEEPR           TH CM Lean Prem
     C                     Z-ADDA1EAPR    $EEAPR           TH CM Yld G/L L
     C                     Z-ADDA1D8PR    $ED8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     $EFFPR           Live Gross Usr
     C                     Z-ADDA1EGPR    $EEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $EEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $EKAST           TH Source Type
     C                     MOVELA1J7ST    $EJ7ST           TH Scale Ticket
     C                     MOVELA1J8ST    $EJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $ELIST           TH Schedule Kil
     C                     MOVELA1LJST    $ELJST           TH Shift Held O
     C                     MOVELA1NZTX    $ENZTX           TH State
     C                     MOVELA1HJCD    $EHJCD           TH Unused Code
     C                     MOVELA1R4ST    $ER4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $ER5ST           TH Commission S
     C                     MOVELA1R6ST    $ER6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $ER7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $ETHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $ET2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $ETHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $ET2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $EOBPR           TH Sorting Amou
     C                     Z-ADDA1KOER    $EKOER           TH Head Identif
     C                     Z-ADDA1OPIR    $EOPIR           TH Percent Iden
     C                     Z-ADDA1OPEM    $EOPEM           TH Percent Acce
     C                     Z-ADDA1IORP    $EIORP           TH Head Adjuste
     C                     Z-ADDA1OWEO    $EOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $EOQET           TH PHA Add Type
     C                     MOVELA1URST    $EURST           TH PHA Average
     C                     MOVELA1USST    $EUSST           TH PHA Add Reas
     C                     Z-ADDA1HHPC    $EHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $ES9PR           TH PHA Lean Prm
     C                     Z-ADDA1TAPR    $ETAPR           TH VC Gross Val
     C                     Z-ADDA1JFUR    $EJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $EKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $EKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $EKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $EKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $EOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $EIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $EIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $EIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $EKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $EOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $EKFOR           TH Meat Value F
     C                     Z-ADDA1ORJK    $EORJK           TH Yld Parm Adj
     C                     Z-ADDA1OMVJ    $EOMVJ           TH PHA Sort Dis
     C                     Z-ADDA1MVNF    $EMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $EMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $ENCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $ENCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $EIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $EKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $EEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $EEBDT           TH Cold Scl Upl
     C                     Z-ADDA1EEDT    $EEEDT           TH Unused Date
     C                     MOVELA1U4ST    $EU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $EU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $EU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $EU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $EU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $EU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $EVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $EVBST           TH Unused Sts 8
     C                     MOVELA1J9ST    $EJ9ST           TH Payment Type
     C                     Z-ADDA1OXNB    $EOXNB           TH HPS Movement
     C                     MOVELA1LKST    $ELKST           TH Source Code
     C                     MOVELA1LLST    $ELLST           TH Hog Class Ty
     C                     MOVELA1AGCD    $EAGCD           GN Genetic Code
     C                     MOVELA1C4ST    $EC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $EAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $EA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $EC2ST           TH Resale Sprea
     C                     MOVELA1BDCD    $EBDCD           DF Defect Code
     C                     MOVELA1AECD    $EAECD           PL Location Cod
     C                     MOVELA1ACCD    $EACCD           HB Buyer Code
     C                     MOVELA1AAVN    $EAAVN           RS User Changed
     C                     Z-ADDA1AADT    $EAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $EAMTM           RS Time Changed
     C                     MOVELA1AJST    $EAJST           RS Record Statu
     C                     MOVELA1AHVN    $EAHVN           RS Job
     C                     MOVELA1AGVN    $EAGVN           RS Program
     C                     MOVELA1ABVN    $EABVN           RS User Added
     C                     Z-ADDA1ABDT    $EABDT           RS Date Added
     C                     Z-ADDA1ABTM    $EABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1KAST    WZA002           TH Source Type
     C                     MOVELA1KAST    WZA002
     C           *LIKE     DEFN A1J9ST    WZA003           TH Payment Type
     C                     MOVELA1J9ST    WZA003
     C           *LIKE     DEFN A1CVNB    WZA004           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA004
     C           *LIKE     DEFN A1CWST    WZA005           TH Payment Sts
     C                     MOVELA1CWST    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPQB                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Check Kill Date
      * CASE: DB1.TH Kill Date LE PAR.TH Kill Date
     C           A1B0DT    IFLE P1B0DT                     *IF
      * Check Held Overs
      * CASE: Held Over <> 0 AND Held Over Completed Date = 0
      *  - NOTc1 AND c2
      *   |- c1    : DB1.TH Held Over is *Zeros
      *   |- c2    : DB1.TH Held/Ovr Completed Dte is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           A1H9NB    IFEQ *ZERO                      *IF
     C                     ELSE
     C           A1BSDT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * If Head Killed > 0
      * CASE: DB1.TH Head Killed is GT Zero
     C           A1FENB    IFGT *ZERO                      *IF
      * Check for Price errors if Payment Type = Carcass Merit
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
     C                     MOVEL*BLANK    YL0004           Text 25 1 USR
      * Check Held Overs
      * CASE: DB1.TH Held Over NE WRK.Zero USR
     C           A1H9NB    IFNE WUE9NB                     *IF
      * Check Held Over Completed Date
      * CASE: DB1.TH Held/Ovr Completed Dte NE WRK.Zero USR
     C           A1BSDT    IFNE WUE9NB                     *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Check Base Market Price OR Base Carcass Value = 0
      * CASE: Base Mkt Price Amd OR Base Carcass Value = 0
      *  - c1 OR c2
      *   |- c1    : DB1.TH CM Base Mkt Price Amt is Zeros
      *   |- c2    : DB1.TH CM Base Carcass Value is Zeros
      *   '-
     C           A1ANPR    IFEQ *ZERO                      *IF
     C           A1AOPR    OREQ *ZERO                      *OR
     C                     MOVEL@CN,004   YL0004           Text 25 1 USR
     C                     END                             *FI
      * Check Gross Amount = 0
      * CASE: DB1.TH Payment Gross is Less/Equal Zeros
     C           A1CBPR    IFLE *ZERO                      *IF
      * Add Gross to text field
      * CASE: LCL.Text 25 1 USR is Entered
     C           YL0004    IFNE *BLANK                     *IF
     C                     Z-ADD1         ZQ      50
     C           YL0004    CAT  @CN,005:ZQYL0004    P      Text 25 1 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    YL0004           Text 25 1 USR
     C                     MOVEL'Gross'   YL0004           Text 25 1 USR
     C                     END                             *FI
     C                     END                             *FI
      * Check Net Amount values <= 0
      * CASE: DB1.Th Payment Net Amt is Less/Equal Zeros
     C           A1CCPR    IFLE *ZERO                      *IF
      * Add Net to text field
      * CASE: LCL.Text 25 1 USR is Entered
     C           YL0004    IFNE *BLANK                     *IF
     C                     Z-ADD1         ZQ      50
     C           YL0004    CAT  '/ Net':ZQYL0004    P      Text 25 1 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,006   YL0004           Text 25 1 USR
     C                     END                             *FI
     C                     END                             *FI
      * If Pricing error found, increment error counter
      * CASE: LCL.Text 25 1 USR is Entered
     C           YL0004    IFNE *BLANK                     *IF
     C                     ADD  1         YL0006           Count of Errors
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        TH Source Type
     C                     MOVEL*BLANK    W0AL02  1        TH Payment Type
     C                     MOVEL*BLANK    W0AL03  1        TH Tattoo Numbe
     C                     MOVEL*BLANK    W0AL04  1        TH Payment Sts
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Source Type
     C                     MOVEL'Y'       W0AL02  1        TH Payment Type
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0AL04  1        TH Payment Sts
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1KAST    IFNE WZA002                     TH Source Type
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1J9ST    IFNE WZA003                     TH Payment Type
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1CVNB    IFNE WZA004                     TH Tattoo Numbe
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           A1CWST    IFNE WZA005                     TH Payment Sts
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
     C                     Z-ADDYL0006    $FP0NB           Count USR
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print TH Source Type of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print TH Payment Type of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Payment Type format
      * CUR.Payment type Desc Usr 16 = Condition name of CUR.TH Payment T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM $DJ9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DITTX    PARM           W0CNNM 25        Payment type De
      *
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP02
     C                     END                             FI
      * Print TH Tattoo Number of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print TH Payment Sts of Prt Pricing Errors    PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Pricing Errors    PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVEL'N'       $EGYST           Error Type Foun
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SBRVGN
     C                     MOVELWUAGTX    $EEKTX           Producer Name 1
      * Rtv Tattoo D/A in Rnk RT - Tattoo Ded/Add  * 
     C                     EXSR SCRVGN
     C                     ADD  A1ECDT    $ENVA1           LFT usr
     C                     ADD  A1EDDT    $ENWA1           EUT/KOA Hogs us
      * Head live uses head received, carcass uses head killed
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C           A1CWNB    SUB  A1FCNB    WUF6NB           Net Head Usr
     C                     SUB  A1FDNB    WUF6NB           Net Head Usr
     C                     Z-ADDWUF6NB    $EB5NB           Head Total USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           A1CWNB    SUB  A1FCNB    WUF6NB           Net Head Usr
     C                     SUB  A1FDNB    WUF6NB           Net Head Usr
     C                     Z-ADDWUF6NB    $EB5NB           Head Total USR
     C                     END                             *FI
     C                     MOVEL'N'       $EGYST           Error Type Foun
     C                     MOVEL*BLANK    WUKGST           Print Held Over
      * CASE: CUR.TH Payment Type is Carcass Merit
     C           $EJ9ST    IFEQ 'C'                        *IF
      * CASE: CUR.TH Head Killed is Not Zero
     C           $EFENB    IFNE *ZERO                      *IF
      * Test special carcass fields
      * CASE: CUR.TH CM Base Mkt Price Amt is Zeros
     C           $EANPR    IFEQ *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.TH Payment Gross is Less/Equal Zeros
     C           $ECBPR    IFLE *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.Th Payment Net Amt is Less/Equal Zeros
     C           $ECCPR    IFLE *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: CUR.TH Payment Type is Live
     C           $EJ9ST    IFEQ 'L'                        *IF
      * CASE: CUR.TH Head Killed is Not Zero
     C           $EFENB    IFNE *ZERO                      *IF
      * Test special Live payment fields
      * CASE: CUR.TH Live Wgt is Zeros
     C           $ECYNB    IFEQ *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.TH Payment Gross is Less/Equal Zeros
     C           $ECBPR    IFLE *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.Th Payment Net Amt is Less/Equal Zeros
     C           $ECCPR    IFLE *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If Seaboard and NPPC is 0 & not RSL, then ERROR   ( call C6347)
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : CUR.PD Producer Code EQ WRK.Producer Code         US
      *   |- c2    : CUR.Ded Amount 1 Usr is Zeros
      *   |- c3    : CUR.TH Hog Class Type is Not Resale
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $EABCD    IFEQ WUARCD                     *IF
     C           $EETPR    IFEQ *ZERO                      *IF
     C           $ELLST    IFEQ 'M'                        *IF
     C           $ELLST    OREQ 'S'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     END                             *FI
      * Test for print held over flag
      * CASE: DB1.TH Held Over is greater than 0
     C           A1H9NB    IFGT *ZERO                      *IF
     C                     MOVEL'Y'       WUKGST           Print Held Over
     C                     ELSE
      * CASE: DB1.TH Held Over Record is Yes
     C           A1E1ST    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WUKGST           Print Held Over
     C                     END                             *FI
     C                     END                             *FI
      * If Error but held over and received head is zero then OK OK OK OK
      * CASE: WRK.Print Held Over Flag Usr is Yes
     C           WUKGST    IFEQ 'Y'                        *IF
      * CASE: CUR.Error Type Found is Critical Error
     C           $EGYST    IFEQ 'Y'                        *IF
      * CASE: DB1.TH Head Received is *Zeros
     C           A1CWNB    IFEQ *ZERO                      *IF
      * This means that all of received head was held over for next kill
     C                     MOVEL'N'       $EGYST           Error Type Foun
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Carcass special , and Live special
      * CASE: CUR.TH Payment Type is Carcass Merit
     C           $EJ9ST    IFEQ 'C'                        *IF
     C                     ADD  A1E0NB    WUPENB           Tot Hot Wgt Car
     C                     ADD  A1E0NB    WUPFNB           Tot Hot Wgt Car
     C                     ADD  A1E0NB    WUPGNB           Tot Hot Wgt Car
     C                     Z-ADDA1EHPR    $ECUPR           Gross Pay Amt T
     C                     Z-ADDA1EGPR    $EFFPR           Live Gross Usr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $EFFPR           Live Gross Usr
      * CASE: DB1.TH Live Wgt NE WRK.Zero USR
     C           A1CYNB    IFNE WUE9NB                     *IF
      * SUSAN MASON   1/17/96
     C                     Z-ADDA1ACPR    $ECUPR           Gross Pay Amt T
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ECUPR           Gross Pay Amt T
     C                     END                             *FI
     C                     END                             *FI
      * Accumulate totals
     C                     EXSR UCSUBR                     Accumulate tota
      * Calc avg adj LIVE WEIGHT
      * CASE: DB1.TH Adj Live Wgt NE WRK.Zero USR
     C           A1LRNB    IFNE WUE9NB                     *IF
      * adj LIVE WEIGHT BK 1
      * CUR.Avg Adj Live Weight Usr =
      *    *COMPUTE ((x1 / x2))
      * x1    : DB1.TH Adj Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.Head Total USR
     C           A1LRNB    DIV  $EB5NB    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $EV6NB           Avg Adj Live We
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $EV6NB           Avg Adj Live We
     C                     END                             *FI
      * Lean % * Wgt BK 1 USR
      * WRK.Tot Lean % Wgt BK 1 Usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : WRK.Tot Lean % Wgt BK 1 Usr
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Lean Percent
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F4NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WUPBNB    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUPBNB           Tot Lean % Wgt
      * Lean % * Wgt BK 3 USR
      * WRK.Tot Lean % Wgt BK 3 Usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : WRK.Tot Lean % Wgt BK 3 Usr
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Lean Percent
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F4NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WUPDNB    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUPDNB           Tot Lean % Wgt
      * Rtv PrchPrc Clc Info  RT - Buy Order Header  * 
     C                     EXSR SERVGN
      * Pricing UOM
      * CASE: PAR.BOH Quote Price Type is Entered
     C           P6B3ST    IFEQ 'CP'                       *IF
     C           P6B3ST    OREQ 'LP'
      * CASE: PAR.BOH Quote Price Type is Carcass Price
     C           P6B3ST    IFEQ 'CP'                       *IF
     C                     MOVEL'CW'      P7SNST           Pricing UOM USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'LW'      P7SNST           Pricing UOM USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Commod Group U/M  XF - STR Order Management Sys  * 
     C                     CALL 'PDUVXFR'              90  Rtv Commod Grou
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P6EUCD    WQ0007  7        BOH Commodity P
     C           P7SNST    PARM *BLANK    WQ0008  2        Pricing UOM USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDUVXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Rtv CMP Info          RT - Carcass Merit Program  * 
     C                     EXSR SFRVGN
      * Base Market Price/Yield Gain&Loss
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Pricing UOM USR is Carcass Hundred Weight
      *   |- c2    : PAR.CMP Sort Basis is None
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7SNST    IFEQ 'CW'                       *IF
     C           P8DMST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $EAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     $EEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     $EEBPR           TH CM Yld G/L C
      * If TH CM Base Mkt Price Amt > 0, move TH CM Base Carcass Value
      * CASE: DB1.TH CM Base Mkt Price Amt is Greater Than *Zeros
     C           A1ANPR    IFGT *ZERO                      *IF
     C                     Z-ADDA1AOPR    $EANPR           TH CM Base Mkt
     C                     END                             *FI
     C                     Z-ADDA1EDPR    $ED7PR           TH CM Bse Mkt C
     C                     Z-ADDA1ECPR    $ED6PR           TH CM Bse Mkt L
     C                     END                             *FI
     C                     MULT -1        $ETBPR           TH Excluded Gro
      * Display Pricing Error message if errors found
      * CASE: LCL.Text 25 1 USR is Entered
     C           YL0004    IFNE *BLANK                     *IF
     C                     MOVELYL0004    $EOETX           Text 25 1 USR
     C                     MOVEL'N'       YL0005           Do Not Display
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0005           Do Not Display
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
     C                     MOVEL'0'       *IN79
     C           $EJ9ST    IFEQ 'L'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUKGST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           YL0005    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP02    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Pricing Errors    PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Pricing Errors    PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Source Type of Prt Pricing Errors    PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Payment Type of Prt Pricing Errors    PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Pricing Errors    PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Payment Sts of Prt Pricing Errors    PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Pricing Errors    PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD4         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * TOP = PAR By name
     C                     Z-ADDP1B0DT    $BB0DT           TH Kill Date
     C                     MOVELP5JLTX    $BJLTX           Heading 1 USR
     C                     MOVELP5JMTX    $BJMTX           Heading 2 USR
     C                     MOVELP5JNTX    $BJNTX           Heading 3 USR
     C                     MOVELP5JOTX    $BJOTX           Heading 4 USR
     C                     MOVELP5K4TX    $BK4TX           Heading 5 USR
     C                     Z-ADDP1B0DT    $BB0DT           TH Kill Date
     C                     Z-ADDP1HMNB    $BHONB           CC Company Numb
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $BHONB    WQ0004  30       CC Company Numb
     C           $BEUTX    PARM *BLANK    WQ0005 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0006  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $BB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBB0DT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv D/A Hdg by Rank   RT - Deduction/Addition  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    P5JLTX           Heading 1 USR
     C                     MOVEL*BLANK    P5JMTX           Heading 2 USR
     C                     MOVEL*BLANK    P5JNTX           Heading 3 USR
     C                     MOVEL*BLANK    P5JOTX           Heading 4 USR
     C                     MOVEL*BLANK    P5K4TX           Heading 5 USR
     C                     Z-ADD*ZERO     P5VYNB           Rank 01 Usr
     C                     Z-ADD*ZERO     P5VZNB           Rank 02 Usr
     C                     Z-ADD*ZERO     P5V0NB           Rank 03 Usr
     C                     Z-ADD*ZERO     P5V1NB           Rank 04 Usr
     C                     Z-ADD*ZERO     P5DQNB           Rank 05 Usr
      * Establish starting position
     C           *LOVAL    SETLL@BBREQA                    *
     C                     READ @BBREQA                  90*
      * Data record not found
     C   90                MOVEL'PRK0081' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.DED Ranking is Ded Ranking 01
     C           BBOTNB    IFEQ 1                          *IF
     C                     MOVELBBBLTX    P5JLTX           Heading 1 USR
      * Jst Right 10 Alpha    US - STR User Source Functions  * 
     C                     MOVEAP5JLTX    A1
     C                     MOVEA*BLANKS   A2
     C                     MOVE 10        C1      20
     C                     MOVE 10        C2      20
     C           C1        DOWGT0
     C           A1,C1     IFNE ' '
     C                     MOVE A1,C1     A2,C2
     C           C2        SUB  1         C2
     C                     END
     C           C1        SUB  1         C1
     C                     END
     C                     MOVEAA2        P5JLTX
     C                     Z-ADD1         P5VYNB           Rank 01 Usr
     C                     ELSE
      * CASE: DB1.DED Ranking is Ded Ranking 02
     C           BBOTNB    IFEQ 2                          *IF
     C                     MOVELBBBLTX    P5JMTX           Heading 2 USR
      * Jst Right 10 Alpha    US - STR User Source Functions  * 
     C                     MOVEAP5JMTX    A1
     C                     MOVEA*BLANKS   A2
     C                     MOVE 10        C1      20
     C                     MOVE 10        C2      20
     C           C1        DOWGT0
     C           A1,C1     IFNE ' '
     C                     MOVE A1,C1     A2,C2
     C           C2        SUB  1         C2
     C                     END
     C           C1        SUB  1         C1
     C                     END
     C                     MOVEAA2        P5JMTX
     C                     Z-ADD2         P5VZNB           Rank 02 Usr
     C                     ELSE
      * CASE: DB1.DED Ranking is Ded Ranking 03
     C           BBOTNB    IFEQ 3                          *IF
     C                     MOVELBBBLTX    P5JNTX           Heading 3 USR
      * Jst Right 10 Alpha    US - STR User Source Functions  * 
     C                     MOVEAP5JNTX    A1
     C                     MOVEA*BLANKS   A2
     C                     MOVE 10        C1      20
     C                     MOVE 10        C2      20
     C           C1        DOWGT0
     C           A1,C1     IFNE ' '
     C                     MOVE A1,C1     A2,C2
     C           C2        SUB  1         C2
     C                     END
     C           C1        SUB  1         C1
     C                     END
     C                     MOVEAA2        P5JNTX
     C                     Z-ADD3         P5V0NB           Rank 03 Usr
     C                     ELSE
      * CASE: DB1.DED Ranking is Ded Ranking 04
     C           BBOTNB    IFEQ 4                          *IF
     C                     MOVELBBBLTX    P5JOTX           Heading 4 USR
      * Jst Right 10 Alpha    US - STR User Source Functions  * 
     C                     MOVEAP5JOTX    A1
     C                     MOVEA*BLANKS   A2
     C                     MOVE 10        C1      20
     C                     MOVE 10        C2      20
     C           C1        DOWGT0
     C           A1,C1     IFNE ' '
     C                     MOVE A1,C1     A2,C2
     C           C2        SUB  1         C2
     C                     END
     C           C1        SUB  1         C1
     C                     END
     C                     MOVEAA2        P5JOTX
     C                     Z-ADD4         P5V1NB           Rank 04 Usr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    P5K4TX           Heading 5 USR
     C                     MOVEL'Misc'    P5K4TX           Heading 5 USR
      * Jst Right 10 Alpha    US - STR User Source Functions  * 
     C                     MOVEAP5K4TX    A1
     C                     MOVEA*BLANKS   A2
     C                     MOVE 10        C1      20
     C                     MOVE 10        C2      20
     C           C1        DOWGT0
     C           A1,C1     IFNE ' '
     C                     MOVE A1,C1     A2,C2
     C           C2        SUB  1         C2
     C                     END
     C           C1        SUB  1         C1
     C                     END
     C                     MOVEAA2        P5K4TX
     C                     Z-ADD5         P5DQNB           Rank 05 Usr
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @BBREQA                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$EABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSB     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    WUAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Tattoo D/A in Rnk RT - Tattoo Ded/Add  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CDHMNB    WQSC01           BOH Company Num
     C           *LIKE     DEFN CDBNNB    WQSC02           BOH Buy Order N
     C           *LIKE     DEFN CDBONB    WQSC03           BOL Load Number
     C           *LIKE     DEFN CDCVNB    WQSC04           TH Tattoo Numbe
     C           *LIKE     DEFN CDB0DT    WQSC05           TH Kill Date
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           BOH Company Num
     C                     KFLD           WQSC02           BOH Buy Order N
     C                     KFLD           WQSC03           BOL Load Number
     C                     KFLD           WQSC04           TH Tattoo Numbe
     C                     KFLD           WQSC05           TH Kill Date
      * Setup key
     C                     Z-ADD$EHMNB    WQSC01           BOH Company Num
     C                     Z-ADD$EBNNB    WQSC02           BOH Buy Order N
     C                     Z-ADD$EBONB    WQSC03           BOL Load Number
     C                     Z-ADD$ECVNB    WQSC04           TH Tattoo Numbe
     C                     Z-ADD$EB0DT    WQSC05           TH Kill Date
      * Establish starting position
     C           KRSSC     SETLL@CDCPWX                    *
     C           KRSSC     READE@CDCPWX                  90*
      * Data record not found
     C   90                MOVEL'PRK0174' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv D/A Ranking       RT - Deduction/Addition  * 
     C                     EXSR SDRVGN
      * CASE: WRK.DED Ranking EQ PAR.Rank 01 Usr
     C           WUOTNB    IFEQ P5VYNB                     *IF
      * D/A Code 1  ranking 01
      * CASE: DB1.THD Unit Amt Sign is Add
     C           CDJBST    IFEQ '+'                        *IF
     C                     ADD  CDA0VA    $EETPR           Ded Amount 1 Us
     C                     ADD  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  CDA0VA    $EETPR           Ded Amount 1 Us
     C                     SUB  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.DED Ranking EQ PAR.Rank 02 Usr
     C           WUOTNB    IFEQ P5VZNB                     *IF
      * D/A Code 2   ranking 02
      * CASE: DB1.THD Unit Amt Sign is Add
     C           CDJBST    IFEQ '+'                        *IF
     C                     ADD  CDA0VA    $EEUPR           Ded Amount 2 Us
     C                     ADD  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  CDA0VA    $EEUPR           Ded Amount 2 Us
     C                     SUB  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.DED Ranking EQ PAR.Rank 03 Usr
     C           WUOTNB    IFEQ P5V0NB                     *IF
      * D/A Code 3 ranking 03
      * CASE: DB1.THD Unit Amt Sign is Add
     C           CDJBST    IFEQ '+'                        *IF
     C                     ADD  CDA0VA    $EEVPR           Ded Amount 3 Us
     C                     ADD  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  CDA0VA    $EEVPR           Ded Amount 3 Us
     C                     SUB  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.DED Ranking EQ PAR.Rank 04 Usr
     C           WUOTNB    IFEQ P5V1NB                     *IF
      * D/A Code 4 ranking 04
      * CASE: DB1.THD Unit Amt Sign is Add
     C           CDJBST    IFEQ '+'                        *IF
     C                     ADD  CDA0VA    $ELGPR           Ded Amount 4 US
     C                     ADD  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  CDA0VA    $ELGPR           Ded Amount 4 US
     C                     SUB  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Miscellaneous
      * CASE: DB1.THD Unit Amt Sign is Add
     C           CDJBST    IFEQ '+'                        *IF
     C                     ADD  CDA0VA    $EEWPR           Ded Amount All
     C                     ADD  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  CDA0VA    $EEWPR           Ded Amount All
     C                     SUB  CDA0VA    $EEXPR           DED/ADD TOTAL U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSC     READE@CDCPWX                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv D/A Ranking       RT - Deduction/Addition  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WABQCD           DED D/A Code
      * Setup key
     C                     MOVELCDBQCD    WABQCD           DED D/A Code
      * Establish starting position
     C           KRSSD     CHAIN@BBRED5              90    *
      * Data record not found
     C   90                MOVEL'PRK0081' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAOTNB    WUOTNB           DED Ranking
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv PrchPrc Clc Info  RT - Buy Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           AWHMNB           BOH Company Num
     C                     KFLD           AWBNNB           BOH Buy Order N
      * Setup key
     C                     Z-ADD$EHMNB    AWHMNB           BOH Company Num
     C                     Z-ADD$EBNNB    AWBNNB           BOH Buy Order N
      * Establish starting position
     C           KRSSE     CHAIN@AWCPBI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0049' W0RTN   7
      * USER: Processing if Data record not found
      * 1/28/08 SLM LEFT OVER INFORMATION MAY HAVE CAUSED ISSUES
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUH5NB           BOH Market Add/
     C                     MOVEL*BLANK    P6B3ST           BOH Quote Price
     C                     Z-ADD*ZERO     WUH5NB           BOH Quoted Base
     C                     MOVEL*BLANK    P6ETCD           BOH Commodity M
     C                     MOVEL*BLANK    P6EUCD           BOH Commodity P
     C                     MOVEL*BLANK    WUC6TX           BOH Market Date
     C                     MOVEL*BLANK    WUC6TX           PC Contract Cod
     C                     MOVEL*BLANK    WUC6TX           PSC Sub-Contrac
     C                     MOVEL*BLANK    WUC6TX           PO Option Code
     C                     MOVEL*BLANK    P6AMCD           CMP Program Cod
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAWAAPR    WUH5NB           BOH Market Add/
     C                     MOVELAWB3ST    P6B3ST           BOH Quote Price
     C                     Z-ADDAWALPR    WUH5NB           BOH Quoted Base
     C                     MOVELAWETCD    P6ETCD           BOH Commodity M
     C                     MOVELAWEUCD    P6EUCD           BOH Commodity P
     C                     MOVELAWJ5TX    WUC6TX           BOH Market Date
     C                     MOVELAWAKCD    WUC6TX           PC Contract Cod
     C                     MOVELAWALCD    WUC6TX           PSC Sub-Contrac
     C                     MOVELAWAICD    WUC6TX           PO Option Code
     C                     MOVELAWAMCD    P6AMCD           CMP Program Cod
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv CMP Info          RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Setup key
     C                     MOVELP6AMCD    ARAMCD           CMP Program Cod
      * Establish starting position
     C           KRSSF     CHAIN@ARREBF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUC6TX           CMP Description
     C                     MOVEL*BLANK    WUC6TX           CMP Grading Typ
     C                     MOVEL*BLANK    P8DMST           CMP Sort Basis
     C                     MOVEL*BLANK    WUC6TX           CMP Carc Wgt Ty
     C                     Z-ADD*ZERO     WUH5NB           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WUH5NB           CMP Lean Factor
     C                     MOVEL*BLANK    WUC6TX           CMP Optimal Row
     C                     MOVEL*BLANK    WUC6TX           CMP Type
     C                     Z-ADD*ZERO     WUH5NB           CMP Market Add/
     C                     MOVEL*BLANK    WUC6TX           RS Record Statu
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELARA3TX    WUC6TX           CMP Description
     C                     MOVELARDLST    WUC6TX           CMP Grading Typ
     C                     MOVELARDMST    P8DMST           CMP Sort Basis
     C                     MOVELARDQST    WUC6TX           CMP Carc Wgt Ty
     C                     Z-ADDARAZPC    WUH5NB           CMP Std Lean Pe
     C                     Z-ADDARA0PC    WUH5NB           CMP Lean Factor
     C                     MOVELARDTST    WUC6TX           CMP Optimal Row
     C                     MOVELARF5ST    WUC6TX           CMP Type
     C                     Z-ADDARI1PR    WUH5NB           CMP Market Add/
     C                     MOVELARAJST    WUC6TX           RS Record Statu
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  1/02/2018 JBB E14281 - Print Payment Errors Report
      *                         Print Tattoo Header records that are unpa
      *                         and the Payment Net Amount is <= 0.  Set
      *                         Payment Price Error flag to 'Y' if any
      *                         records are found with a price <= 0.
      * 01/23/2021 ISE H16853 - Increased the length from 5 to 7 and
      *                         corrected the alignment of Buy Order Numb
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  2/07/2019 JBB E14281 - Zero Prices on BOL
      *                         Function created.  This function retrieve
      *                         the Company Value record for HPEPYPRCERR.
      *                         Within the retrieved record, there are
      *                         three fields.  This function passes back
      *                         the three values.
      *                         Position  7 - Does the Company print the
      *                                       Price Errors report during
      *                                       the Payment Edit process.
      *                         Position 18 - What is the highest error
      *                                       level that will be checked.
      *                         Position 26 - What is the highest error
      *                                       level found during the
      *                                       Payment Edit process.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Accumulate totals
      *================================================================
     C                     ADD  A1E0NB    WUOYNB           TOT Hot Wgt Bk
     C                     ADD  A1E0NB    WUKEST           TOT Hot Wgt Bk
     C                     ADD  A1CWNB    WUO8NB           TOT Head Rec Bk
     C                     ADD  A1CWNB    WUPANB           TOT Head Rec Bk
     C                     ADD  A1FENB    WUO6NB           TOT Head Kill B
     C                     ADD  A1FENB    WUO2NB           TOT Head Kill B
     C                     ADD  $EB5NB    WUV4NB           Tot Net Head 1
     C                     ADD  $EB5NB    WUV5NB           Tot Net Head 3
     C                     ADD  A1LRNB    WUV2NB           Tot Adj Live Wg
     C                     ADD  A1LRNB    WUV3NB           Tot Adj Live Wg
     C                     ADD  A1CYNB    WUOZNB           TOT Live Wgt Bk
     C                     ADD  A1CYNB    WUO1NB           TOT Live Wgt Bk
     C                     ADD  A1FCNB    WUV7NB           Tot Yard Deads
     C                     ADD  A1FCNB    WUV8NB           Tot Yard Deads
     C                     ADD  A1ECDT    WUN5A1           Total LFT Head
     C                     ADD  A1ECDT    WUN7A1           Total LFT Head
     C                     ADD  A1EDDT    WUN6A1           Total EUT/KOA H
     C                     ADD  A1EDDT    WUN8A1           Total EUT/KOA H
     C                     ADD  A1FDNB    WUV9NB           Tot Condemds 1
     C                     ADD  A1FDNB    WUWANB           Tot Condemds 3
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P5JLTX           Heading 1 USR
     C                     MOVEL*BLANK    P5JMTX           Heading 2 USR
     C                     MOVEL*BLANK    P5JNTX           Heading 3 USR
     C                     MOVEL*BLANK    P5JOTX           Heading 4 USR
     C                     MOVEL*BLANK    P5K4TX           Heading 5 USR
     C                     Z-ADD*ZERO     P5VYNB           Rank 01 Usr
     C                     Z-ADD*ZERO     P5VZNB           Rank 02 Usr
     C                     Z-ADD*ZERO     P5V0NB           Rank 03 Usr
     C                     Z-ADD*ZERO     P5V1NB           Rank 04 Usr
     C                     Z-ADD*ZERO     P5DQNB           Rank 05 Usr
     C                     MOVEL*BLANK    P6B3ST           BOH Quote Price
     C                     MOVEL*BLANK    P6ETCD           BOH Commodity M
     C                     MOVEL*BLANK    P6EUCD           BOH Commodity P
     C                     MOVEL*BLANK    P6AMCD           CMP Program Cod
     C                     MOVEL*BLANK    P7SNST           Pricing UOM USR
     C                     MOVEL*BLANK    P8DMST           CMP Sort Basis
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Producer Code         USR
     C                     MOVEL*BLANK    WUARCD  6
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1KAST           TH Source Type
     C                     MOVEL*LOVAL    A1J9ST           TH Payment Type
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
     C                     MOVEL*LOVAL    A1CWST           TH Payment Sts
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Define work field PD Name
     C                     MOVEL*BLANK    WUAGTX 40
      * Define work field DED Ranking
     C                     Z-ADD*ZERO     WUOTNB  20
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAEPR           DED Fixed Unit
     C                     Z-ADD*ZERO     WAOTNB           DED Ranking
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define work field Net Head Usr
     C                     Z-ADD*ZERO     WUF6NB  50
      * Define work field Print Held Over Flag Usr
     C                     MOVEL*BLANK    WUKGST  1
      * Define work field Tot Hot Wgt Car Bk1 Usr
     C                     Z-ADD*ZERO     WUPENB  81
      * Define work field Tot Hot Wgt Car Bk2 Usr
     C                     Z-ADD*ZERO     WUPFNB  81
      * Define work field Tot Hot Wgt Car Bk3 Usr
     C                     Z-ADD*ZERO     WUPGNB  81
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field TOT Hot Wgt Bk 1 Usr
     C                     Z-ADD*ZERO     WUOYNB  81
      * Define work field TOT Hot Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUKEST  81
      * Define work field TOT Head Rec Bk 1 Usr
     C                     Z-ADD*ZERO     WUO8NB  70
      * Define work field TOT Head Rec Bk 3 Usr
     C                     Z-ADD*ZERO     WUPANB  70
      * Define work field TOT Head Kill Bk 1 Usr
     C                     Z-ADD*ZERO     WUO6NB  70
      * Define work field TOT Head Kill Bk 3 Usr
     C                     Z-ADD*ZERO     WUO2NB  70
      * Define work field Tot Net Head 1 Usr
     C                     Z-ADD*ZERO     WUV4NB  70
      * Define work field Tot Net Head 3 Usr
     C                     Z-ADD*ZERO     WUV5NB  70
      * Define work field Tot Adj Live Wgt 1 usr
     C                     Z-ADD*ZERO     WUV2NB  81
      * Define work field Tot Adj Live Wgt 3 usr
     C                     Z-ADD*ZERO     WUV3NB  81
      * Define work field TOT Live Wgt Bk 1 Usr
     C                     Z-ADD*ZERO     WUOZNB  81
      * Define work field TOT Live Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUO1NB  81
      * Define work field Tot Yard Deads 1 Usr
     C                     Z-ADD*ZERO     WUV7NB  70
      * Define work field Tot Yard Deads 3 Usr
     C                     Z-ADD*ZERO     WUV8NB  70
      * Define work field Total LFT Head 1 Usr
     C                     Z-ADD*ZERO     WUN5A1  70
      * Define work field Total LFT Head 2 Usr
     C                     Z-ADD*ZERO     WUN7A1  70
      * Define work field Total EUT/KOA Head 1 Usr
     C                     Z-ADD*ZERO     WUN6A1  70
      * Define work field Total EUT/KOA Head 2 Usr
     C                     Z-ADD*ZERO     WUN8A1  70
      * Define work field Tot Condemds 1 Usr
     C                     Z-ADD*ZERO     WUV9NB  70
      * Define work field Tot Condemds 3 Usr
     C                     Z-ADD*ZERO     WUWANB  70
      * Define work field Tot Lean % Wgt BK 1 Usr
     C                     Z-ADD*ZERO     WUPBNB 152
      * Define work field Tot Lean % Wgt BK 3 Usr
     C                     Z-ADD*ZERO     WUPDNB 152
      * Define work field #Num USR
     C                     Z-ADD*ZERO     WUH5NB  10
      * Define work field #Txt USR
     C                     MOVEL*BLANK    WUC6TX 80
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Error found Y/N
     C                     MOVEL*BLANK    YL0001  1
      * Define null work field Co Chks for Price Errors
     C                     MOVEL*BLANK    YN0001  1
      * Define local work field Error Level - Warn/Hard
     C                     MOVEL*BLANK    YL0002  1
      * Define null work field Error Level - Pricing
     C                     MOVEL*BLANK    YN0002  1
      * Define local work field System Value Alpha    USR
     C                     MOVEL*BLANK    YL0003 40
      * Define local work field Text 25 1 USR
     C                     MOVEL*BLANK    YL0004 25
      * Define local work field Do Not Display Value
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Count of Errors Found
     C                     Z-ADD*ZERO     YL0006 110
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modification history
     C                     EXSR UASUBR                     Modification hi
     C                     MOVEL'N'       YL0001           Error found Y/N
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP3EVTX    $ACMP
      * Rtv D/A Hdg by Rank   RT - Deduction/Addition  * 
     C                     EXSR SARVGN
     C                     MOVEL@CN,001   WUARCD           Producer Code
      * Rtv Price Err Comp Val IF
      * Modification history
     C                     EXSR UBSUBR                     Modification hi
      * Rtv Company Values    XF - STR Order Management Sys  * HPEPYPRERR
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0001  30       BOH Company Num
     C                     PARM @CN,002   WQ0002 10        Company Value C
     C           YL0003    PARM *BLANK    WQ0003 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Break out individual values from the Company Value record
      * CASE: *OTHERWISE
     C                     Z-ADD1         YRSW00
     C                     Z-ADD7         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0003:ZQ YN0001    P  90  Co Chks for Pri
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD18        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0003:ZQ YL0002    P  90  Error Level - W
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD26        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0003:ZQ YN0002    P  90  Error Level - P
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * Convert Highest Level to text
      * CASE: LCL.Error Level - Warn/Hard is Warning
     C           YL0002    IFEQ 'W'                        *IF
     C                     MOVEL@CN,003   $BSTTX           Text 7 USR
     C                     ELSE
      * CASE: LCL.Error Level - Warn/Hard is Hard
     C           YL0002    IFEQ 'H'                        *IF
     C                     MOVEL*BLANK    $BSTTX           Text 7 USR
     C                     MOVEL'HARD'    $BSTTX           Text 7 USR
     C                     END                             *FI
     C                     END                             *FI
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 SEABOA
00002 HPEPYPRERR
00003 WARNING
00004 Base Market
00005 / Gross
00006 Net Amount
