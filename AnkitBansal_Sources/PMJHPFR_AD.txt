// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMJHPFR
// ?Date: 14.08.2025 Time: 12:05:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Call program Rtv Field Security    XF.
CALL PROGRAM(Rtv Field Security    XF) ('PDL1XFR');
PARAMETER(WRK.Display_Flag);

//?***** Change Log and Comments
//?RMC 02/28/11 E01342 Print Order nbr if load id=0 (not ld planned order)
//?RMC 02/11/11 E01340 Print USA in header for dailys remit to & address,
//?    and print Currency "USD" after total $
//?03/29/10 LJB P000198  Fax/Email are now in new Cust Distribution
//?  Entry file.
//?9/25/2007 slm RTV WF INVOICE WORK FILE ADD BACK
//?JRB 05/31/07 DLY029 Replaced case Produced By: with
//?    Rtv Produced by co    RT - Company Defaults Internal
//?****
//?SLM 06/25/07 DLY029 CUSTOM program for Daily's
//?             uses special form and overlays
//?SLM 07/02/07 DLY029 CUSTOM program for Daily's
//?             this program was copied but does have changes
//?             so if the Customer Invoice changes then this
//?             program will have to also be changed
//?             This program will delete the records from
//?             the wf invoice work file
//?             and the parms on restrict and position are different
//?             from the invoice custom print program
//?             and due to level breaks the print formats are
//?             different
//?** Retrieve Field Security display flag. If it is "NO" then
//?** do not display selected fields. In this case, do not print
//?** dollar amount fields.                            2/3/2006 LJB
//?USER: Record selection processing

CASE;

// IF DB1.Order Value Total is equal to zero
IF DB1.Order_Value_Total = *ZERO;

// AND DB1.Order Weight Total is Equal to zero
AND DB1.Order_Weight_Total = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?9/25/2007 SLM ADD THIS ROUTINE BACK IN.
//?Check the work file for Fax printing
EXECUTE FUNCTION(VAL Rcd Exists For Job RT) TYPE(RTVOBJ) FILE(PDJ4CPP)          AC1474798;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(DB1.Order_Number);
PARAMETER(LCL.Standard_Only_Usr);
{
 //?USER: Initialize routine

 // PAR.Standard Only Usr = CND.Blank
 PAR.Standard_Only_Usr = *BLANK;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

EXECUTE FUNCTION(RTV Info for Invc Prt  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1324121;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Type_Sales);
PARAMETER(LCL.AR_Customer_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Ship_To_Name);
PARAMETER(PAR.Ship_To_Address_Line_1);
PARAMETER(PAR.Ship_To_Address_Line_2);
PARAMETER(PAR.Ship_To_Address_Line_3);
PARAMETER(PAR.Ship_To_City);
PARAMETER(PAR.Ship_To_State_Code);
PARAMETER(PAR.Ship_To_Zip_Postal_Code);
PARAMETER(PAR.Bill_to_Customer);
PARAMETER(PAR.Bill_to_Name);
PARAMETER(PAR.Bill_to_Address_Line_1);
PARAMETER(PAR.Bill_to_Address_Line_2);
PARAMETER(PAR.Bill_to_Address_Line_3);
PARAMETER(PAR.Bill_to_City);
PARAMETER(PAR.Bill_to_State_Code);
PARAMETER(PAR.Bill_to_Zip_Postal_Code);
PARAMETER(PAR.Customer_Purchase_Order_#);
PARAMETER(PAR.Order_Date);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Terms_Code);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Order_Value_Total);
PARAMETER(PAR.Order_Weight_Total);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Sales_Route_Code);
PARAMETER(PAR.Invoice_Number);
PARAMETER(PAR.Invoice_Date);
PARAMETER(PAR.Billing_Activity_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Ensure that there is an invoice date
CASE;

// IF PAR.Invoice Date EQ WRK.ZERO
IF PAR.Invoice_Date = WRK.ZERO;

// PAR.Invoice Date = JOB.*Job date
PAR.Invoice_Date = JOB.*Job_date;

ENDIF;

//?** Fax and email are now in Cust Distr Entry file     P000198
EXECUTE FUNCTION(RTV CDE 1st Fax only  IF) TYPE(EXCINTFUN)                      AC1981538;
PARAMETER(DB1.AR_Customer_Number);
PARAMETER('AR-INVOICE');
PARAMETER(*ZERO);
PARAMETER(LCL.CDE_Name);
PARAMETER(PAR.Credit_Contact_Fax_Number);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV CDE 1st Fax only  RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC1981532;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Distribution_Code);
 PARAMETER(PAR.CDE_Sequence_Number);
 PARAMETER(PAR.CDE_Name);
 PARAMETER(PAR.CDE_Destination);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?Return 1st active record with a fax number
  CASE;

  // IF DB1.CDE Destination Type is Fax
  IF DB1.CDE_Destination_Type = 'F';

  CASE;

  // IF DB1.Record Status is Active
  IF DB1.Record_Status = 'A';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

  ENDIF;

 }

}


// PAR.USR Display field = CND.yes
PAR.USR_Display_field = 'Y';

// LCL.Text USR 6 = CON.TOTALS
LCL.Text_USR_6 = 'TOTALS';

// LCL.Text USR 7 = CON.AMOUNT
LCL.Text_USR_7 = 'AMOUNT';

// TOP.Text USR 9 = CON.Remit to:
TOP_Text_USR_9 = 'Remit to:';

//?Get the Company name and address
EXECUTE FUNCTION(RTV Co Addr,Phone,CntryRT) TYPE(RTVOBJ) FILE(CAABREP)          AC1936785;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Telephone_Number_FF);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Country_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function CLC Conc Cty/St,2BlnksUS.
EXECUTE FUNCTION(CLC Conc Cty/St,2BlnksUS) TYPE(EXCUSRSRC) ('PNWGUFR');
PARAMETER(PAR.City_State_Zip_USR);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);
{
 E                    X          40  1
 C* SUPPRESS BLANKS BETWEEN CITY  STATE  ZIP
 C                     MOVE *BLANK    #OPGTX
 C                     Z-ADD0         BLANK
 C                     Z-ADD0         Z
 C                     MOVE *BLANKS   X
 C*
 C                     MOVEA#IHNNA    X,1
 C           Z         DOWNE20
 C                     ADD  1         Z       20
 C           X,Z       IFEQ ' '
 C                     ADD  1         BLANK   20
 C           BLANK     IFEQ 2
 C                     MOVEA#IDBCD    X,Z
 C                     ADD  3         Z
 C                     MOVEA#IBTTX    X,Z
 C                     MOVEAX         #OPGTX
 C                     Z-ADD20        Z                 FORCE QUIT
 C*                    GOTO END
 C                     END
 C                     ELSE
 C                     Z-ADD0         BLANK
 C                     END
 C                     END
 C*                    MOVE *BLANK    #OBXTX             DONT MOVE IT
 C*                    GOTO ENDIT
 C*          END       TAG
 C*                    MOVEAX         #OBXTX
 C*          ENDIT     TAG
}


CASE;

// IF PAR.City/State/Zip        USR is Blank
IF PAR.City_State_Zip_USR = *BLANK;

// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_21);
PARAMETER(TOP_USR_Compressed_Address_22);
PARAMETER(TOP_USR_Compressed_Address_23);
PARAMETER(TOP_USR_Compressed_Address_24);
PARAMETER(TOP_USR_Compressed_Address_25);
PARAMETER(TOP_USR_Compressed_Address_26);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


// IF *OTHERWISE
IF *OTHERWISE;

// Execute function RTV Comp Nme/Add/Ctr2 US.
EXECUTE FUNCTION(RTV Comp Nme/Add/Ctr2 US) TYPE(EXCUSRSRC) ('PNWIUFR');
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(PAR.City_State_Zip_USR);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_21);
PARAMETER(TOP_USR_Compressed_Address_22);
PARAMETER(TOP_USR_Compressed_Address_23);
PARAMETER(TOP_USR_Compressed_Address_24);
PARAMETER(TOP_USR_Compressed_Address_25);
PARAMETER(TOP_USR_Compressed_Address_26);
{
 * Use this function to compress name/address information
 *
 E                    UAS         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IPGTX    UUAJNZ 33        CitySTZP
 C*                    MOVEL#IEINA    UUEINA           State
 C*                    MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UG
 C                     MOVELUAS,1     #OEJNA
 C                     MOVELUAS,2     #OEKNA
 C                     MOVELUAS,3     #OELNA
 C                     MOVELUAS,4     #OEMNA
 C                     MOVELUAS,5     #OENNA
 C                     MOVELUAS,6     #OKSTX
 C           UJ1UG     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C*          *LIKE     DEFN #IADTX    UUADTX
 C*          *LIKE     DEFN #IACNA    UUACNA
 C*          *LIKE     DEFN #IADNA    UUADNA
 C*          *LIKE     DEFN #IAENA    UUAENA
 C*          *LIKE     DEFN #IAJNA    UUAJNA
 C*          *LIKE     DEFN #IEINA    UUEINA
 C*          *LIKE     DEFN #IBTTX    UUBTTX- 1
 C*          *LIKE     DEFN #IDATX    UUDATX
 * FILL OUTPUT ARRAY
 C                     MOVE *BLANK    UAS
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAS,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C*                    MOVE *BLANK    UUCSTZ 34
 C*                    MOVELUUAJNA    UUCST  23
 C*                    MOVE UUEINA    UUCST
 C*                    MOVELUUCST     UUCSTZ
 C*                    MOVE UUBTTX    UUCSTZ
 C*                    MOVELUUCSTZ    UAS,UX
 C                     MOVELUUAJNZ    UAS,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAS,UX
 C                     END
 C                     ENDSR
}


ENDIF;

// LCL.USR Compressed Address 27 = CONCAT(LCL.Telephone Number FF,CON. Fax,CON.1)
LCL.USR_Compressed_Address_27 = LCL.Telephone_Number_FF + ' Fax' (1);

// TOP.USR Compressed Address 27 = CONCAT(LCL.USR Compressed Address 27,LCL.Fax Number FF,CON.1)
TOP_USR_Compressed_Address_27 = LCL.USR_Compressed_Address_27 + LCL.Fax_Number_FF (1);

CASE;

// IF TOP.USR Compressed Address 26 is *blank
IF TOP_USR_Compressed_Address_26 = *BLANK;

// TOP.USR Compressed Address 26 = TOP.USR Compressed Address 27
TOP_USR_Compressed_Address_26 = TOP_USR_Compressed_Address_27;

// TOP.USR Compressed Address 27 = CON.*BLANK
TOP_USR_Compressed_Address_27 = *BLANK;

ENDIF;

EXECUTE FUNCTION(RTV Alt Remittance Flg RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1348485;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Bill_to_Customer);
PARAMETER(PAR.Alt_Remittance_Flag);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv A/R Remittance    RT) TYPE(RTVOBJ) FILE(POA7REP)           AC1621765;
PARAMETER(PAR.Alt_Remittance_Flag);
PARAMETER(PAR.Name);
PARAMETER(PAR.Address_Line_1);
PARAMETER(PAR.Address_Line_2);
PARAMETER(PAR.Address_Line_3);
PARAMETER(PAR.City);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Zip_Postal_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Execute function CLC Conc Cty/St,2BlnksUS.
EXECUTE FUNCTION(CLC Conc Cty/St,2BlnksUS) TYPE(EXCUSRSRC) ('PNWGUFR');
PARAMETER(PAR.City_State_Zip_USR);
PARAMETER(PAR.City);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Zip_Postal_Code);
{
 E                    X          40  1
 C* SUPPRESS BLANKS BETWEEN CITY  STATE  ZIP
 C                     MOVE *BLANK    #OPGTX
 C                     Z-ADD0         BLANK
 C                     Z-ADD0         Z
 C                     MOVE *BLANKS   X
 C*
 C                     MOVEA#IHNNA    X,1
 C           Z         DOWNE20
 C                     ADD  1         Z       20
 C           X,Z       IFEQ ' '
 C                     ADD  1         BLANK   20
 C           BLANK     IFEQ 2
 C                     MOVEA#IDBCD    X,Z
 C                     ADD  3         Z
 C                     MOVEA#IBTTX    X,Z
 C                     MOVEAX         #OPGTX
 C                     Z-ADD20        Z                 FORCE QUIT
 C*                    GOTO END
 C                     END
 C                     ELSE
 C                     Z-ADD0         BLANK
 C                     END
 C                     END
 C*                    MOVE *BLANK    #OBXTX             DONT MOVE IT
 C*                    GOTO ENDIT
 C*          END       TAG
 C*                    MOVEAX         #OBXTX
 C*          ENDIT     TAG
}


CASE;

// IF PAR.City/State/Zip        USR is Blank
IF PAR.City_State_Zip_USR = *BLANK;

// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(PAR.Name);
PARAMETER(PAR.Address_Line_1);
PARAMETER(PAR.Address_Line_2);
PARAMETER(PAR.Address_Line_3);
PARAMETER(PAR.City);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Zip_Postal_Code);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_11);
PARAMETER(TOP_USR_Compressed_Address_12);
PARAMETER(TOP_USR_Compressed_Address_13);
PARAMETER(TOP_USR_Compressed_Address_14);
PARAMETER(TOP_USR_Compressed_Address_15);
PARAMETER(WRK.USR_Country_Description);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


// IF *OTHERWISE
IF *OTHERWISE;

// Execute function RTV Comp Nme/Add/Ctr2 US.
EXECUTE FUNCTION(RTV Comp Nme/Add/Ctr2 US) TYPE(EXCUSRSRC) ('PNWIUFR');
PARAMETER(PAR.Name);
PARAMETER(PAR.Address_Line_1);
PARAMETER(PAR.Address_Line_2);
PARAMETER(PAR.Address_Line_3);
PARAMETER(PAR.City_State_Zip_USR);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_11);
PARAMETER(TOP_USR_Compressed_Address_12);
PARAMETER(TOP_USR_Compressed_Address_13);
PARAMETER(TOP_USR_Compressed_Address_14);
PARAMETER(TOP_USR_Compressed_Address_15);
PARAMETER(WRK.USR_Country_Description);
{
 * Use this function to compress name/address information
 *
 E                    UAS         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IPGTX    UUAJNZ 33        CitySTZP
 C*                    MOVEL#IEINA    UUEINA           State
 C*                    MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UG
 C                     MOVELUAS,1     #OEJNA
 C                     MOVELUAS,2     #OEKNA
 C                     MOVELUAS,3     #OELNA
 C                     MOVELUAS,4     #OEMNA
 C                     MOVELUAS,5     #OENNA
 C                     MOVELUAS,6     #OKSTX
 C           UJ1UG     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C*          *LIKE     DEFN #IADTX    UUADTX
 C*          *LIKE     DEFN #IACNA    UUACNA
 C*          *LIKE     DEFN #IADNA    UUADNA
 C*          *LIKE     DEFN #IAENA    UUAENA
 C*          *LIKE     DEFN #IAJNA    UUAJNA
 C*          *LIKE     DEFN #IEINA    UUEINA
 C*          *LIKE     DEFN #IBTTX    UUBTTX- 1
 C*          *LIKE     DEFN #IDATX    UUDATX
 * FILL OUTPUT ARRAY
 C                     MOVE *BLANK    UAS
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAS,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAS,UX
 C                     ADD  1         UX
 C                     END
 C*                    MOVE *BLANK    UUCSTZ 34
 C*                    MOVELUUAJNA    UUCST  23
 C*                    MOVE UUEINA    UUCST
 C*                    MOVELUUCST     UUCSTZ
 C*                    MOVE UUBTTX    UUCSTZ
 C*                    MOVELUUCSTZ    UAS,UX
 C                     MOVELUUAJNZ    UAS,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAS,UX
 C                     END
 C                     ENDSR
}


ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

CASE;

IF NEW AR_Customer_Number;
// Print A/R Customer Number header format
PRINT A/R Customer Number header format;

ENDIF;

CASE;

IF NEW Order_Number;
// CUR.Bill to Customer = DB1.Bill to Customer
CUR.Bill_to_Customer = DB1.Bill_to_Customer;

// CUR.Ship To Customer = DB1.Ship To Customer
CUR.Ship_To_Customer = DB1.Ship_To_Customer;

//?Ensure that there is an invoice date
CASE;

// IF CUR.Invoice Date EQ WRK.ZERO
IF CUR.Invoice_Date = WRK.ZERO;

// CUR.Invoice Date = JOB.*Job date
CUR.Invoice_Date = JOB.*Job_date;

ENDIF;

//?Calculate Due Date.
CASE;

// IF CUR.Billing Activity Type is Credit or Debit Memo
IF CUR.Billing_Activity_Type = '2'/'3';

//?**** CR/DR Memos use the Invoice Date to calc the Due Date. ****
// Call program CLC Terms Values       XF.
CALL PROGRAM(CLC Terms Values       XF) ('CAC9XFR');
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Terms_Code);
PARAMETER(WRK.Discount_Due_Date);
PARAMETER(LCL.Due_Date);
PARAMETER(CUR.Invoice_Date);
PARAMETER(CUR.Order_Value_Total);
PARAMETER(WRK.Discount_Amount);

//?Calculate Due Date.
// IF *OTHERWISE
IF *OTHERWISE;

//?**** All others use the Actual Ship Date to calc the Due Date. ****
// Call program CLC Terms Values       XF.
CALL PROGRAM(CLC Terms Values       XF) ('CAC9XFR');
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Terms_Code);
PARAMETER(WRK.Discount_Due_Date);
PARAMETER(LCL.Due_Date);
PARAMETER(CUR.Actual_Shipped_Date);
PARAMETER(CUR.Order_Value_Total);
PARAMETER(WRK.Discount_Amount);

ENDIF;

//?Ensure due date filled
CASE;

// IF LCL.Due Date EQ WRK.ZERO
IF LCL.Due_Date = WRK.ZERO;

// LCL.Due Date = CUR.Invoice Date
LCL.Due_Date = CUR.Invoice_Date;

ENDIF;

//?** Fax and email are now in Cust Distr Entry file     P000198
EXECUTE FUNCTION(RTV CDE 1st Fax only  IF) TYPE(EXCINTFUN)                      AC1981538;
PARAMETER(PAR.AR_Customer_Number);
PARAMETER('AR-INVOICE');
PARAMETER(*ZERO);
PARAMETER(LCL.CDE_Name);
PARAMETER(PAR.Credit_Contact_Fax_Number);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV CDE 1st Fax only  RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC1981532;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Distribution_Code);
 PARAMETER(PAR.CDE_Sequence_Number);
 PARAMETER(PAR.CDE_Name);
 PARAMETER(PAR.CDE_Destination);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?Return 1st active record with a fax number
  CASE;

  // IF DB1.CDE Destination Type is Fax
  IF DB1.CDE_Destination_Type = 'F';

  CASE;

  // IF DB1.Record Status is Active
  IF DB1.Record_Status = 'A';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

  ENDIF;

 }

}


EXECUTE FUNCTION(RTV Retrieve Terms     RT) TYPE(RTVOBJ) FILE(CAAOREP)          AC1255765;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Terms_Code);
PARAMETER(CUR.USR_Terms_Desc_Short);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Country Code       RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1395144;
PARAMETER(CUR.AR_Customer_Number);
PARAMETER(PAR.Country_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(PAR.Country_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(CUR.Bill_to_Name);
PARAMETER(CUR.Bill_to_Address_Line_1);
PARAMETER(CUR.Bill_to_Address_Line_2);
PARAMETER(CUR.Bill_to_Address_Line_3);
PARAMETER(CUR.Bill_to_City);
PARAMETER(CUR.Bill_to_State_Code);
PARAMETER(CUR.Bill_to_Zip_Postal_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(CUR.USR_Compressed_Address_1);
PARAMETER(CUR.USR_Compressed_Address_2);
PARAMETER(CUR.USR_Compressed_Address_3);
PARAMETER(CUR.USR_Compressed_Address_4);
PARAMETER(CUR.USR_Compressed_Address_5);
PARAMETER(CUR.USR_Compressed_Address_16);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


EXECUTE FUNCTION(RTV Country/ItemRefSts RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1631724;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.Item_Reference_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(PAR.Country_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(CUR.Ship_To_Name);
PARAMETER(CUR.Ship_To_Address_Line_1);
PARAMETER(CUR.Ship_To_Address_Line_2);
PARAMETER(CUR.Ship_To_Address_Line_3);
PARAMETER(CUR.Ship_To_City);
PARAMETER(CUR.Ship_To_State_Code);
PARAMETER(CUR.Ship_To_Zip_Postal_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(CUR.USR_Compressed_Address_6);
PARAMETER(CUR.USR_Compressed_Address_7);
PARAMETER(CUR.USR_Compressed_Address_8);
PARAMETER(CUR.USR_Compressed_Address_9);
PARAMETER(CUR.USR_Compressed_Address_10);
PARAMETER(CUR.USR_Compressed_Address_17);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


// PAR.Order Value Total = CUR.Order Value Total
PAR.Order_Value_Total = CUR.Order_Value_Total;

//?** Fax and email are now in Cust Distr Entry file     P000198
EXECUTE FUNCTION(RTV CDE 1st Fax only  IF) TYPE(EXCINTFUN)                      AC1981538;
PARAMETER(PAR.AR_Customer_Number);
PARAMETER('AR-INVOICE');
PARAMETER(*ZERO);
PARAMETER(LCL.CDE_Name);
PARAMETER(LCL.Fax_Invoice_Fax_Number);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV CDE 1st Fax only  RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC1981532;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Distribution_Code);
 PARAMETER(PAR.CDE_Sequence_Number);
 PARAMETER(PAR.CDE_Name);
 PARAMETER(PAR.CDE_Destination);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?Return 1st active record with a fax number
  CASE;

  // IF DB1.CDE Destination Type is Fax
  IF DB1.CDE_Destination_Type = 'F';

  CASE;

  // IF DB1.Record Status is Active
  IF DB1.Record_Status = 'A';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

  ENDIF;

 }

}


//?Print Fax Number
CASE;

// IF LCL.Fax Invoice Fax Number is Equal to blanks
IF LCL.Fax_Invoice_Fax_Number = *BLANK;

// LCL.Print (Yes/No) USR = CND.No
LCL.Print_Yes_No_USR = 'N';

//?Print Fax Number
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Print (Yes/No) USR = CND.Yes
LCL.Print_Yes_No_USR = 'Y';

ENDIF;

//?Print Attention
CASE;

// IF LCL.Fax Invoice Contact Name is Blank
IF LCL.Fax_Invoice_Contact_Name = *BLANK;

// LCL.Print Yes/No          USR = CND.No
LCL.Print_Yes_No_USR = 'N';

//?Print Attention
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Print Yes/No          USR = CND.Yes
LCL.Print_Yes_No_USR = 'Y';

ENDIF;

EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1801010;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Shipping_Company);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1801011;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Shipping_Company);
 PARAMETER(PAR.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 QUIT;

 ENDIF;

}


// CUR.Text 3 Length USR = CON.*BLANK
CUR.Text_3_Length_USR = *BLANK;

//?Print Order Nbr if load id=0, meaning order is NOT Load planned
CASE;

// IF DB1.Load ID is Blank
IF DB1.Load_ID = *ZERO;

// CUR.Load ID = DB1.Order Number
CUR.Load_ID = DB1.Order_Number;

// CUR.Text 3 Length USR = CON.OR#
CUR.Text_3_Length_USR = 'OR#';

ENDIF;

// Print Order Number header format
PRINT Order Number header format;

ENDIF;

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

//?set attr. so fax number only prints on page 1
// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

//?Print Original Inv and Order if CM/DM      7/23/02
CASE;

// IF CUR.Billing Activity Type is Credit or Debit Memo
IF CUR.Billing_Activity_Type = '2'/'3';

//?Print Original Inv and Order if CM/DM      7/23/02
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Inv/Fast FaxHdrCDlyPO
EXECUTE FUNCTION(PRT Inv/Fast FaxHdrCDlyPO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER('IN');
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Embedded PRTOBJ : PRT Inv/Fast FaxDtlDly PO
EXECUTE FUNCTION(PRT Inv/Fast FaxDtlDly PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(CUR.Billing_Activity_Type);
PARAMETER(LCL.USR_Quantity);
PARAMETER(NXT.USR_Quantity_Shipped_102);
PARAMETER(NXT.USR_Weight_102);
PARAMETER(LCL.USR_Last_Order_Seq_1);
PARAMETER(LCL.USR_Last_Order_Seq_2);
PARAMETER(PAR.Item_Reference_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Embedded PRTOBJ : PRT Inv/Fast Fax BrkDlyPO
EXECUTE FUNCTION(PRT Inv/Fast Fax BrkDlyPO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

EXECUTE FUNCTION(DLT PD Invoice List Wk DL) TYPE(DLTOBJ) FILE(PDJ4CPP)          AC1339741;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(CUR.Order_Number);

//?USER: Print required level totals

CASE;

IF NEW Order_Number;
//?Embedded PRTOBJ : Prt AddOn/Allow Total PO
EXECUTE FUNCTION(Prt AddOn/Allow Total PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER('IN');

// CUR.Description 21A Usr = CON.CUSTOMER COPY
CUR.Description_21A_Usr = 'CUSTOMER COPY';

// CUR.Text USR 6 = LCL.Text USR 6
CUR.Text_USR_6 = LCL.Text_USR_6;

// CUR.Text USR 7 = LCL.Text USR 7
CUR.Text_USR_7 = LCL.Text_USR_7;

CASE;

// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// CUR.Order Value Total = CON.*ZERO - PAR.Order Value Total
CUR.Order_Value_Total = *ZERO - PAR.Order_Value_Total;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Order Value Total = PAR.Order Value Total
CUR.Order_Value_Total = PAR.Order_Value_Total;

ENDIF;

EXECUTE FUNCTION(Rtv Inv AddOn/Allow   RT) TYPE(RTVOBJ) FILE(OMHRCPP)           AC1844822;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(LCL.USR_Amount_Applied);
{
 //?USER: Initialize routine

 // PAR.USR Amount Applied = CON.*ZERO
 PAR.USR_Amount_Applied = *ZERO;

 //?USER: Process Data record

 // PAR.USR Amount Applied = PAR.USR Amount Applied + DB1.Extended Amount
 PAR.USR_Amount_Applied = PAR.USR_Amount_Applied + DB1.Extended_Amount;

}


// CUR.Order Value Total = CUR.Order Value Total + LCL.USR Amount Applied
CUR.Order_Value_Total = CUR.Order_Value_Total + LCL.USR_Amount_Applied;

// CUR.Currency USD = CON.USD
CUR.Currency_USD = 'USD';

// Print Order Number totals format
PRINT Order Number totals format;

ENDIF;

// SUPPRESSED PRINT A/R Customer Number totals format

// SUPPRESSED PRINT Accounting Company Number totals format

//?USER: Process after print of final totals format

RETURN;

