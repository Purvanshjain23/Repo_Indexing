     H/TITLE Prt WIM API Outb ShipErXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 02/10/25  Time  : 15:51:28
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVADCPL5  IF   E           K DISK
      * RSQ : WIM API Failure Log       Surrogate # SEL Error
      *
     FPUCICPL3  IF   E           K DISK
      * RSQ : WIM Item Trans Detail     All Keys/Prod Date
      *
     FPVADCPL0  UF   E           K DISK
      * UPD : WIM API Failure Log       Update index
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPVAD1        E DS                  EXTNAME(PVADCPL0)
      * UPD : WIM API Failure Log       Update index
      * Renamed input format fields
     D  WCH1NZ       E                     EXTFLD(ADH1NZ)
     D  WCVJU1       E                     EXTFLD(ADVJU1)
     D  WCCNAB       E                     EXTFLD(ADCNAB)
     D  WCVKU1       E                     EXTFLD(ADVKU1)
     D  WCEIAB       E                     EXTFLD(ADEIAB)
     D  WCCOAB       E                     EXTFLD(ADCOAB)
     D  WCAIC3       E                     EXTFLD(ADAIC3)
     D  WCHGCD       E                     EXTFLD(ADHGCD)
     D  WCVPCD       E                     EXTFLD(ADVPCD)
     D  WCNOSC       E                     EXTFLD(ADNOSC)
     D  WCNPSC       E                     EXTFLD(ADNPSC)
     D  WCA9DT       E                     EXTFLD(ADA9DT)
     D  WCELDT       E                     EXTFLD(ADELDT)
     D  WCF1ST       E                     EXTFLD(ADF1ST)
     D  WCVQNA       E                     EXTFLD(ADVQNA)
     D  WCA1AB       E                     EXTFLD(ADA1AB)
     D  WCC4NB       E                     EXTFLD(ADC4NB)
     D  WCXLCD       E                     EXTFLD(ADXLCD)
     D  WCL9AA       E                     EXTFLD(ADL9AA)
     D  WCAHWG       E                     EXTFLD(ADAHWG)
     D  WCA5QT       E                     EXTFLD(ADA5QT)
     D  WCOSSC       E                     EXTFLD(ADOSSC)
     D  WCOTSC       E                     EXTFLD(ADOTSC)
     D  WCN6SC       E                     EXTFLD(ADN6SC)
     D  WCVSST       E                     EXTFLD(ADVSST)
     D  WCBGTS       E                     EXTFLD(ADBGTS)
     D  WCRUU1       E                     EXTFLD(ADRUU1)
     D  WCRVU1       E                     EXTFLD(ADRVU1)
     D  WCBHTS       E                     EXTFLD(ADBHTS)
     D  WCRWU1       E                     EXTFLD(ADRWU1)
     D  WCRXU1       E                     EXTFLD(ADRXU1)
      *
     D YARDCS          DS           392
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  YL0001         S              1
     D  YL0002         S              1
     D  WQSB01         S                   LIKE(WBAIC3)
     D  WQSB02         S                   LIKE(WBHGCD)
     D  WQSB03         S                   LIKE(WBAJCD)
     D  WQSB04         S                   LIKE(WBNDSC)
     D  WQSB05         S                   LIKE(WBNOSC)
     D  WQSB06         S                   LIKE(WBNPSC)
     D  WQSB07         S                   LIKE(WBA9DT)
     D  WQSB08         S                   LIKE(WBELDT)
     D  Y0CX01         S              1
     D  YL0003         S             11  2
     D  WN0001         S             45
     D  WN0002         S              7
     D  WN0003         S             50
     D  WN0004         S             10
     D  WN0005         S             10
     D  WN0006         S              3  0
     D  WN0007         S              7  0
     D  WN0008         S              3
     D  WN0009         S              3
     D  WN0010         S              3
     D  WN0011         S              7  0
     D  WN0012         S              7  0
     D  WN0013         S              2
     D  WN0014         S             30
     D  WN0015         S              3
     D  WN0016         S              7  0
     D  WN0017         S              1
     D  WN0018         S              3
     D  WN0019         S             11  2
     D  WN0020         S             11  2
     D  WN0021         S              1
     D  WN0022         S              1
     D  WN0023         S              1
     D  WN0024         S             26
     D  WN0025         S             50
     D  WN0026         S             15
     D  WN0027         S             26
     D  WN0028         S             50
     D  WN0029         S             15
     D  YARDC          S              1
     D  ##TMS          S             26
     D  W0CLPG         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
     I@ADCPW5
      * WIM API Failure Log       Surrogate # SEL Error
      * Renamed input format fields
     I              ADH1NZ                      WAH1NZ
     I              ADVJU1                      WAVJU1
     I              ADCNAB                      WACNAB
     I              ADVKU1                      WAVKU1
     I              ADEIAB                      WAEIAB
     I              ADCOAB                      WACOAB
     I              ADAIC3                      WAAIC3
     I              ADHGCD                      WAHGCD
     I              ADVPCD                      WAVPCD
     I              ADNOSC                      WANOSC
     I              ADNPSC                      WANPSC
     I              ADA9DT                      WAA9DT
     I              ADELDT                      WAELDT
     I              ADF1ST                      WAF1ST
     I              ADVQNA                      WAVQNA
     I              ADA1AB                      WAA1AB
     I              ADC4NB                      WAC4NB
     I              ADXLCD                      WAXLCD
     I              ADL9AA                      WAL9AA
     I              ADAHWG                      WAAHWG
     I              ADA5QT                      WAA5QT
     I              ADOSSC                      WAOSSC
     I              ADOTSC                      WAOTSC
     I              ADN6SC                      WAN6SC
     I              ADVSST                      WAVSST
     I              ADBGTS                      WABGTS
     I              ADRUU1                      WARUU1
     I              ADRVU1                      WARVU1
     I              ADBHTS                      WABHTS
     I              ADRWU1                      WARWU1
     I              ADRXU1                      WARXU1
      *
     I@CICPW4
      * WIM Item Trans Detail     All Keys/Prod Date
      * Renamed input format fields
     I              CIAIC3                      WBAIC3
     I              CIHGCD                      WBHGCD
     I              CIAJCD                      WBAJCD
     I              CINDSC                      WBNDSC
     I              CINOSC                      WBNOSC
     I              CINPSC                      WBNPSC
     I              CIA9DT                      WBA9DT
     I              CIC4NY                      WBC4NY
     I              CIELDT                      WBELDT
     I              CIBKTS                      WBBKTS
     I              CIBLTS                      WBBLTS
     I              CIAZAB                      WBAZAB
     I              CIF1ST                      WBF1ST
     I              CIVQNA                      WBVQNA
     I              CIA5QT                      WBA5QT
     I              CIAHWG                      WBAHWG
     I              CIA0AB                      WBA0AB
     I              CIA1AB                      WBA1AB
     I              CIXLCD                      WBXLCD
     I              CIC4NB                      WBC4NB
     I              CIRINB                      WBRINB
     I              CIRHNB                      WBRHNB
     I              CIRGNB                      WBRGNB
     I              CIVSST                      WBVSST
     I              CIBGTS                      WBBGTS
     I              CIRUU1                      WBRUU1
     I              CIRVU1                      WBRVU1
      *
     I@ADCPNK
      * WIM API Failure Log       Update index
      * Renamed input format fields
     I              ADH1NZ                      WCH1NZ
     I              ADVJU1                      WCVJU1
     I              ADCNAB                      WCCNAB
     I              ADVKU1                      WCVKU1
     I              ADEIAB                      WCEIAB
     I              ADCOAB                      WCCOAB
     I              ADAIC3                      WCAIC3
     I              ADHGCD                      WCHGCD
     I              ADVPCD                      WCVPCD
     I              ADNOSC                      WCNOSC
     I              ADNPSC                      WCNPSC
     I              ADA9DT                      WCA9DT
     I              ADELDT                      WCELDT
     I              ADF1ST                      WCF1ST
     I              ADVQNA                      WCVQNA
     I              ADA1AB                      WCA1AB
     I              ADC4NB                      WCC4NB
     I              ADXLCD                      WCXLCD
     I              ADL9AA                      WCL9AA
     I              ADAHWG                      WCAHWG
     I              ADA5QT                      WCA5QT
     I              ADOSSC                      WCOSSC
     I              ADOTSC                      WCOTSC
     I              ADN6SC                      WCN6SC
     I              ADVSST                      WCVSST
     I              ADBGTS                      WCBGTS
     I              ADRUU1                      WCRUU1
     I              ADRVU1                      WCRVU1
     I              ADBHTS                      WCBHTS
     I              ADRWU1                      WCRWU1
     I              ADRXU1                      WCRXU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Prt WIM API Outb ShipErXF
      * NOTE: The following JS calls this process every 15 min interval.
      *       From 5AM to 11:59PM.
      *       PROD: WIMAPIOBER
      * Prt WIM API Outb ShipErRT - WIM API Failure Log  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Prt WIM API Outb ShipErRT - WIM API Failure Log  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           YL0001                         USR Print Repor
      * Establish starting position
     C     *LOVAL        SETLL     @ADCPW5                                      *
     C                   READ      @ADCPW5                                90    *
      * Data record not found
     C   90              MOVEL     'USR5324'     W0RTN
      * USER: Process Data record
      * 02/10/25 DN SR26186-Revalidate Trans Exist in WIM Item Trans Deta
      * Val API Timeout Trsn ExRT - WIM Item Trans Detail  * 
     C                   DOW       NOT *IN90
     C                   EXSR      SBRVGN
      * CASE: LCL.Match Found USR is Yes
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
     C                   IF        YL0002 = 'Y'
     C                   EXSR      SCCHRC
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           YL0001                         USR Print Repor
     C                   END                                                    *FI
     C                   READ      @ADCPW5                                90    *
     C                   ENDDO
      * USER: Exit processing
      * 02/10/25 DN SR26186-Print Report?
      * CASE: LCL.USR Print Report is yes
      * Prt WIM API Outb ShipErCL - WIM API Failure Log  * 
     C                   IF        YL0001 = 'Y'
     C                   CALL      'PVJQUPC'                            90      Prt WIM API Out
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVJQUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Val API Timeout Trsn ExRT - WIM Item Trans Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           YL0002                         Match Found USR
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         Company Number
     C                   KFLD                    WQSB02                         Item Code
     C                   KFLD                    WQSB03                         Warehouse Code
     C                   KFLD                    WQSB04                         Inventory Item
     C                   KFLD                    WQSB05                         WIM Inventory T
     C                   KFLD                    WQSB06                         WIM Inventory T
     C                   KFLD                    WQSB07                         Transaction Dat
     C                   KFLD                    WQSB08                         Production Date
      * Setup key
     C                   Z-ADD     WAAIC3        WQSB01                         Company Number
     C                   Z-ADD     WAHGCD        WQSB02                         Item Code
     C                   MOVEL     WAVPCD        WQSB03                         Warehouse Code
     C                   MOVEL     'FG'          WQSB04                         Inventory Item
     C                   MOVEL     WANOSC        WQSB05                         WIM Inventory T
     C                   MOVEL     WANPSC        WQSB06                         WIM Inventory T
     C                   Z-ADD     WAA9DT        WQSB07                         Transaction Dat
     C                   Z-ADD     WAELDT        WQSB08                         Production Date
      * Establish starting position
     C     KRSSB         SETLL     @CICPW4                                      *
     C     KRSSB         READE     @CICPW4                                90    *
      * Data record not found
     C   90              MOVEL     'USR5255'     W0RTN
      * USER: Process Data record
      * Must Also Match.
      * CASE:
      *  - c1 AND c2 AND c3 AND c4
      *   |- c1    : DB1.Item Transaction Source EQ PAR.Item Transaction
      *   |- c2    : DB1.Transaction Description EQ PAR.Transaction Descr
      *   |- c3    : DB1.Shift Number EQ PAR.Shift Number
      *   |- c4    : DB1.Order Number EQ PAR.Order Number
      *   '-
     C                   DOW       NOT *IN90
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WBF1ST = WAF1ST
     C                   IF        WBVQNA = WAVQNA
     C                   IF        WBXLCD = WAXLCD
     C                   IF        WBC4NB = WAC4NB
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     WBA5QT        YL0003                         Transaction Qua
      * Use Absolute Value if Negative Qty.
      * CASE: DB1.Transaction Quantity is Less than zero
     C                   IF        WBA5QT < 0
     C     WBA5QT        MULT      -1            YL0003                         Transaction Qua
     C                   END                                                    *FI
      * Qty Must Match.
      * CASE: LCL.Transaction Quantity EQ PAR.Transaction Quantity
     C                   IF        YL0003 = WAA5QT
     C                   MOVEL     'Y'           YL0002                         Match Found USR
     C                   GOTO      SBEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSB         READE     @CICPW4                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCCHRC        BEGSR
      *================================================================
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 API Name
     C                   EVAL      WN0002 = ' '                                 API EccResult M
     C                   EVAL      WN0003 = ' '                                 API EccResult-M
     C                   EVAL      WN0004 = ' '                                 API Request Key
     C                   EVAL      WN0005 = ' '                                 Called From Pro
     C                   Z-ADD     *ZERO         WN0006                         Company Number
     C                   Z-ADD     *ZERO         WN0007                         Item Code
     C                   EVAL      WN0008 = ' '                                 Ship From Wareh
     C                   EVAL      WN0009 = ' '                                 WIM Inventory T
     C                   EVAL      WN0010 = ' '                                 WIM Inventory T
     C                   Z-ADD     *ZERO         WN0011                         Transaction Dat
     C                   Z-ADD     *ZERO         WN0012                         Production Date
     C                   EVAL      WN0013 = ' '                                 Item Transactio
     C                   EVAL      WN0014 = ' '                                 Transaction Des
     C                   EVAL      WN0015 = ' '                                 Transaction Rea
     C                   Z-ADD     *ZERO         WN0016                         Order Number
     C                   EVAL      WN0017 = ' '                                 Shift Number
     C                   EVAL      WN0018 = ' '                                 Ship To Warehou
     C                   Z-ADD     *ZERO         WN0019                         Transaction Wei
     C                   Z-ADD     *ZERO         WN0020                         Transaction Qua
     C                   EVAL      WN0021 = ' '                                 Unship Flag
     C                   EVAL      WN0022 = ' '                                 Inter Plant Tra
     C                   EVAL      WN0023 = ' '                                 Record Status
     C                   MOVEL     XDTSDL        WN0024                         Create Date Tim
     C                   EVAL      WN0025 = ' '                                 Create User ID
     C                   EVAL      WN0026 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0027                         Update Date Tim
     C                   EVAL      WN0028 = ' '                                 Update User Id
     C                   EVAL      WN0029 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @ADCPNK
     C                   Z-ADD     WAH1NZ        WCH1NZ                         Surrogate Nbr
      *
     C     KLCHSC        KLIST
     C                   KFLD                    WCH1NZ                         Surrogate Nbr
     C     KLCHSC        CHAIN     @ADCPNK                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PVADCPL0'    MDACP
     C                   MOVEL     '@ADCPNK'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPVAD1        YARDCS
      * Move non-key fields to @ADCPNK
     C                   MOVEL(P)  'Y'           WCN6SC                         Record Processe
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WCBHTS                         Update Date Tim
     C                   EVAL      WCRWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         WCRWU1                         Update User Id
     C                   EVAL      WCRXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         WCRXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @ADCPNK                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PVADCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAH1NZ                         Surrogate Nbr
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WAA9DT                         Transaction Dat
     C                   Z-ADD     *ZERO         WAELDT                         Production Date
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WAAHWG                         Transaction Wei
     C                   Z-ADD     *ZERO         WAA5QT                         Transaction Qua
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WABGTS                         Create Date Tim
     C                   MOVEL     XDTSDL        WABHTS                         Update Date Tim
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBAIC3                         Company Number
     C                   Z-ADD     *ZERO         WBHGCD                         Item Code
     C                   Z-ADD     *ZERO         WBA9DT                         Transaction Dat
     C                   Z-ADD     *ZERO         WBC4NY                         ITD Sequence Nu
     C                   Z-ADD     *ZERO         WBELDT                         Production Date
     C                   MOVEL     XDTSDL        WBBKTS                         Production Date
     C                   MOVEL     XDTSDL        WBBLTS                         Transaction Dt
     C                   Z-ADD     *ZERO         WBA5QT                         Transaction Qua
     C                   Z-ADD     *ZERO         WBAHWG                         Transaction Wei
     C                   Z-ADD     *ZERO         WBC4NB                         Order Number
     C                   Z-ADD     *ZERO         WBRINB                         Item Structure
     C                   Z-ADD     *ZERO         WBRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WBRGNB                         Item Structure
     C                   MOVEL     XDTSDL        WBBGTS                         Create Date Tim
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local work field USR Print Report
     C                   EVAL      YL0001 = ' '
      * Define local work field Match Found USR
     C                   EVAL      YL0002 = ' '
      * Define local work field Transaction Quantity
     C                   Z-ADD     *ZERO         YL0003
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
