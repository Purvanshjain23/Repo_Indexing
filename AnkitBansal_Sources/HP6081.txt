      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP6081
      * TITLE:       Negative Inventory Exception Report
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/10/03
      *
      * FUNCTION:  Batch program to highlight groups that have a negative inventory.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE       PROGRAMMER
      *
      * 05//19/04  LeAnne Fedor
      *            The on-demand version is now submitted from our new Preliminary EOP Edits
      *            function. So, the user can only specify a Cut-off Date now. He can no
      *            longer limit the report to Phase, Group Type, etc.
      *
      * 06/07//04  LeAnne Fedor
      *            We replaced the page break when Production Phase changes with just
      *            just printing a few blank lines to give some space.
      *
      * 09/24/08   LeAnne Ramsey
      *            Fixed bug: The Farm Site was not printing on the first detail line after
      *            a Phase break.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp011    if   e           k disk
      *  Production phase
      *
      *
     Fhsp018    if   e           k disk
      *  Farm Site
      *
      *
     Fhsl034d   if   e           k disk    rename(hgrec:hgrecd) prefix(p1)
      *  Hog group
      *
      *
     Fhsl034m   if   e           k disk
      *  Hog group   (records selected/keyed with open query)
      *
      *
     Fhsl058d   if   e           k disk
      *  Movement event   (records selected with open query)
      *
      *
     Fhsp068    if   e           k disk
      *  Killed/dead hogs
      *
      *
     Fhsp069    if   e           k disk
      *  Inventory adjustment
      *
      *
     Fhsl069c   if   e           k disk    rename(iarec:iarecc) prefix(p2)
      *  Inventory adjustment
      *
      *
     Fhsp074    if   e           k disk
      *  Transfer header
      *
      *
     Fhsp075    if   e           k disk
      *  Transfer movement detail
      *
      *
     Fhsp076    if   e           k disk
      *  Movement type code
      *
      *
     Fhsp084    if   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    if   e           k disk
      *  Sales movement detail
      *
      *
     Fqprint    o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s            198    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D phasebreak      s              1    inz('N')
     D quitfl          s              1    inz('N')
     D overfl          s              1    inz('N')
     D prtfl           s              1    inz('N')
     D svfscd          s                   like(fsfscd)
     D svppcd          s                   like(fsppcd)
      *
      *
      * Workfields/accumulators
      *
     D wkinhd          s                   like(gpihd)
      *
      *
      * Workfields for date manipulation
      *
     d wkcymdiso       s               d   datfmt(*iso)
      *
      *
      * Print fields
      *
     d h1ef            s              9
     D h1fmdy          s              6  0
     D h1tmdy          s              6  0
      *
     D h2ppds          s                   like(ppppds)
      *
     D l1mvsn          s                   like(memvsn)
     D l1cvno          s                   like(mecvno)
     D l1ophgcd        s                   like(hghgcd)
     D l1opfscd        s                   like(hgfscd)
     D l1mscd          s                   like(mhmscd)
     D l1ds            s                   like(mtsmds)
     D l1mdy           s              6  0
      *
     D l1hd            s                   like(mdqlhd)
     D l1shhd          s                   like(mdqlhd)
     D l1arhd          s                   like(mdqlhd)
     D l1dohd          s                   like(mdqlhd)
      *
     D l1lb            s                   like(mdqllb)
     D l1shlb          s                   like(mdqllb)
     D l1arlb          s                   like(mdqllb)
     D l1dolb          s                   like(mdqllb)
      *
      *
      *
      * Define parms for the generic movement program
      *
     D xxcymd          s                   like(hgopdt)
     D xxhgsn          s                   like(hghgsn)
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfcymd                1     08  0
     D  ldtcymd                9     16  0
     D  ldper                 17     18  0
     D  ldeffl                19     19
     D  ldccyy                20     23  0
     D  ldfmdy                60     66  0
     D  ldtmdy                70     76  0
     D  lderfl                80     80
     D  ldppacyr              81     84  0
     D  ldppacpe              85     86  0
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each group selected by the open query.
      *
593  C*    *loval        setll     hsl034m
593  C     *start        setll     hsl034m
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsl034m                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      no            quitfl
      *
      *
     C                   exsr      $group
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *---------------------------------------------------------------
      * EOF processing
      *---------------------------------------------------------------
      *
      * If nothing was printed, print the standard 'no data...' message
      *
     C                   if        prtfl = no
     C                   except    h1hdr
     C                   except    nodata
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Process the group
      *---------------------------------------------------------------
      *
      * For each group, calculate a beginning inventory head
      *     If this beginning head is negative,
      *          print the group and continue with the next group
      *     If the beginning head is positive,
      *          process movements for the group/date range until you
      *              1) process all movements for the date range or
      *              2) hit a negative inventory head
      *
     C     $group        begsr
      *
     C                   exsr      $beginv
      *
     C                   if        wkinhd < 0                                   If neg begin
     C                   exsr      $l1dtl
     C                   else
     C                   exsr      $moves
     C                   endif                                                  If neg begin
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Beginning Inventory
      *---------------------------------------------------------------
      *
      * Retrieve Beginning Inventory head (use the date 'previous' to the
      * 'From' date.)
      *
     C     $beginv       begsr
      *
     C                   move      ldfcymd       wkcymdiso
     C     wkcymdiso     subdur    1:*days       wkcymdiso
     C                   move      wkcymdiso     xxcymd
      *
     C                   z-add     hghgsn        xxhgsn
     C                   call      'HPMOVE'      plist01
      *
     C                   z-add     gpihd         wkinhd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process movements for the group/date range
      *---------------------------------------------------------------
      *
     C     $moves        begsr
      *
      *
     C     key01         setll     hsl058d
      *
     C                   dou       *in91 = *on or                               Do moves
     C                             memedt > ldtcymd or
     C                             quitfl = yes
      *
     C     hghgsn        reade     hsl058d                                91
     C                   if        *in91 = *off and memedt <= ldtcymd           If read
      *
      * Transfer
     C                   select
     C                   when      memtcd = 'T'
     C                   exsr      $tran
      * Sale
     C                   when      memtcd = 'S'
     C                   exsr      $sale
      * Adjustment
     C                   when      memtcd = 'A'
     C                   exsr      $adjust
      * Daily dead
     C                   when      memtcd = 'D'
     C                   exsr      $dead
     C                   endsl
      *
      *
      * If the inventory went negative,
      *  1) check for an overriding adjustment--you may need to skip the
      *     printing of this movement detail line
      *
     C                   if        wkinhd < 0                                   If neg inv
     C                   exsr      $override
      *
     C                   if        overfl = no
     C                   exsr      $misc
     C                   exsr      $l1dtl
     C                   endif
     C                   endif                                                  If neg inv
      *
      * Always clear all print fields
      *
     C                   exsr      $clear
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do moves
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process Transfer Movement
      *---------------------------------------------------------------
      *
     C     $tran         begsr
      *
      * Retrieve status from the Transfer Movement Header. Do not process
      * 'scheduled' movements.
      *
     C     memvsn        chain     hsp074                             92
     C                   if        *in92 = *on or mhmscd = 'SC'                 If scheduled
     C                   else
     C                   move      mhmscd        l1mscd
      *
      * Retrieve the Transfer Movement Detail record for this movment/line.
      *
     C     key02         chain     hsp075                             92
     C                   if        *in92 = *off                                 If detail hit
      *
      * Set up the values for the Shipped column
      *
     C                   z-add     mdshhd        l1shhd
     C                   z-add     mdshlb        l1shlb
      *
      * Set up the values for the Arrived column
      *
     C     mdqlhd        add       mdrjhd        l1arhd
     C                   add       mddohd        l1arhd
      *
     C     mdqllb        add       mdrjlb        l1arlb
     C                   add       mddolb        l1arlb
      *
      *
      * When the group is the ORIGIN group:
      *     Set up the 'generic' head and pounds columns reversing the signs so that
      *     the user sees the 'OUT' from the 'IN' easily. And, use 'arrived' values--
      *     not the shipped values.
      *     Also, populate DOA values.
      *
     C                   select
     C                   when      meodfl = 'O'
     C     mdqlhd        add       mdrjhd        l1hd
     C                   add       mddohd        l1hd
     C                   mult      -1            l1hd
      *
     C     mdqllb        add       mdrjlb        l1lb
     C                   add       mddolb        l1lb
     C                   mult      -1            l1lb
      * Dead-on-arrival
     C                   z-add     mddohd        l1dohd
     C                   z-add     mddolb        l1dolb
      *
      *
      * When the group is the DESTINATION group:
      *     Set up the 'generic' head and pounds columns.
      *
     C                   when      meodfl = 'D'
     C     mdqlhd        add       mdrjhd        l1hd
     C     mdqllb        add       mdrjlb        l1lb
     C                   endsl
      *
      * Accumulate the value of the print field for the Inventory
      *
     C                   add       l1hd          wkinhd
      *
     C                   endif                                                  If detail hit
     C                   endif                                                  If scheduled
      *
      *
      * If this detail line drives the group to a negative inventory,
      *    1) Get 'opposing' group info
      *
     C                   if        wkinhd < 0                                   If neg inv
     C     mehsn         chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   movel     p1hghgcd      l1ophgcd
     C                   z-add     p1hgfscd      l1opfscd
     C                   endif
     C                   endif                                                  If neg inv
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process Sales Movement
      *---------------------------------------------------------------
      *
     C     $sale         begsr
      *
      * Retrieve the Status and Sales Type from the Sales Movement Header.
      * (Do not process 'scheduled' sales movements.)
      *
     C     memvsn        chain     hsp084                             92
     C                   if        *in92 = *on or shmscd = 'SC'                 If scheduled
     C                   else
      *
     C                   movel     shmscd        l1mscd
     C                   movel     shstcd        l1ds
      *
      * Retrieve Sales Movement Detail record for this movement/line number.
      * Show both head and pounds as negative values to indicate movement out
      * of the group.
      *
     C     key03         chain     hsp085                             92
     C                   if        *in92 = *off                                 If detail hit
      *
      * Set up values for the Shipped column.
      *
     C                   z-add     sgshhd        l1shhd
     C                   z-add     sgshlb        l1shlb
      *
      * Set up values for the Arrived column.
      *
     C     sglvhd        add       sgdohd        l1arhd
     C     sglvlb        add       sgdolb        l1arlb
      *
      * Set up values for the Dead-on-arrival column
      *
     C                   z-add     sgdohd        l1dohd
     C                   z-add     sgdolb        l1dolb
      *
      * Use the 'Arrived' values on 'Paid-in-full' sales movements and the
      * 'shipped' values on all other sales movements.
      * Reverse the sign on the print fields and put them in the 'generic' head
      * and pounds columns. Reversing the sign makes it easy for the user to find
      * the 'OUT' values on the report.
      *
     C                   if        l1mscd = 'FP' or
     C                             l1mscd = 'PP' or
     C                             l1mscd = 'PG'
     C     sgdohd        add       sglvhd        l1hd
     C     sgdolb        add       sglvlb        l1lb
     C                   else
     C                   z-add     sgshhd        l1hd
     C                   z-add     sgshlb        l1lb
     C                   endif
      *
     C                   mult      -1            l1lb
     C                   mult      -1            l1hd
      *
      * Accumulate the head for Inventory
      *
     C                   add       l1hd          wkinhd
     C                   endif                                                  If detail hit
      *
     C                   endif                                                  If scheduled
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Process Inventory Adjustment movement
      *----------------------------------------------------------------------------------------
      *
     C     $adjust       begsr
      *
      * Retrieve status and head. For adjustments, there will only be one record
      * per movement. Please note that Inventory Adjustments do not have pounds.
      *
     C     memvsn        chain     hsp069                             92
     C                   if        *in92 = *off
     C                   movel     iamscd        l1mscd
     C                   z-add     iaiahd        l1hd
      *
      * Accumulate for Inventory head
      *
     C                   add       l1hd          wkinhd
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Process Daily Dead Movement
      *----------------------------------------------------------------------------------------
      *
     C     $dead         begsr
      *
      * Retrieve Status and Head. For Daily Deads, there will only be one record per
      * movement. Also, reverse the sign on the print field so that the 'daily dead'
      * values appear as negative numbers which indicates quickly to the user that
      * this is a movement out of the group.
      *
     C     memvsn        chain     hsp068                             92
     C                   if        *in92 = *off
     C                   movel     kdmscd        l1mscd
     C                   z-sub     kdkdhd        l1hd
     C                   z-sub     kdkdlb        l1lb
      *
      * Accumulate for Inventory
      *
     C                   add       l1hd          wkinhd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Populate miscellaneous print fields
      *---------------------------------------------------------------
      *
     C     $misc         begsr
      *
     C                   z-add     memvsn        l1mvsn
     C                   z-add     mecvno        l1cvno
      *
      * Flip event date to MMDDYY format
      *
     C     *iso          test(d)                 memedt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      memedt        wkcymdiso
     C     *mdy          move      wkcymdiso     l1mdy
     C                   endif                                                  If OK date
      *
      *
      * Retrieve a description to print for the non-sale movements.
      * (For sales, the Type of Sale will print.)
      *
     C                   if        memtcd <> 'S'
     C     memtcd        chain     hsp076                             92
     C                   if        *in92 = *off
     C                   movel(p)  mtsmds        l1ds
     C                   else
     C                   movel(p)  'Unknown'     l1ds
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Check to see if you need to override the printing
      *----------------------------------------------------------------------------------------
      *
      * Alice wants to omit groups if:
      *  The inventory went negative BUT there was an Inventory Adjustment on the SAME DAY
      *  that brought the inventory positive.
      *
      *
     C     $override     begsr
      *
     C                   move      no            overfl
      *
      * We WILL NOT print a negative record line if:
      *  The dispose date of the group equals the movement event date of the movement that
      *  drove the inventory negative.
      *
     C                   if        hgdsdt = memedt                              If date equal
     C                   move      yes           overfl
     C                   else
      *
      * If the movement that drove the inventory negative was not an Inventory Adjustment,
      * then check to see if we HAVE an Inventory Adjustment dated the SAME DAY.  If we do
      * and this Inventory Adjustment drives the negative inventory positive, then
      * we will override and NOT print the line.
      *
     C                   if        memtcd <> 'A'
     C     key04         chain     hsl069c                            92
     C                   if        *in92 = *off and
     C                             (wkinhd + p2iaiahd >= 0)
     C                   move      yes           overfl
     C                   endif
     C                   endif
      *
     C                   endif                                                  If date equal
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print detail
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
      * If Production Phase has changed, retrieve the Production Phase Description
      * and print some blank lines.
      *
     C                   if        svppcd <> hgppcd
     C                   exsr      $ppds
     C                   endif
      *
      *
      * Print headings
     C                   select
     C                   when      first = yes or *inof = *on
     C                   exsr      $h1hdr
      *
     C                   when      phasebreak = yes
     C                   except    h2hdr
     C                   move      no            phasebreak
     C                   z-add     hgfscd        svfscd
     C                   seton                                        97
      *
     C                   when      svfscd <> hgfscd
     C                   z-add     hgfscd        svfscd
     C                   except    blank
     C                   seton                                        97
     C                   endsl
      *
      * Print detail
     C                   except    l1dtl
      *
      * Set flags to control processing
      *
     C                   move      yes           quitfl
     C                   move      yes           prtfl
      *
      * Set off the indicator that controls the printing of 'farm site'
      *
     C                   setoff                                       97
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print header
      *---------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   except    h1hdr
     C                   except    h2hdr
      *
     C                   move      no            first
     C                   move      no            phasebreak
      *
      * Set fields/indicator to control printing of 'farm site'.
      *
     C                   z-add     hgfscd        svfscd
     C                   seton                                        97
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear all print fields.
      *---------------------------------------------------------------
      *
      * We populate the print fields as we process a movement--not knowing
      * at the time whether the movement will drive the inventory negative and
      * need to be printed or not.
      *
      * So, this clear routine will blank out the print fields when a line never
      * actually got printed.
      *
     C     $clear        begsr
      *
     C                   z-add     0             l1mvsn
     C                   z-add     0             l1cvno
     C                   z-add     0             l1mdy
     C                   z-add     0             l1hd
     C                   z-add     0             l1lb
     C                   z-add     0             l1shhd
     C                   z-add     0             l1shlb
     C                   z-add     0             l1arhd
     C                   z-add     0             l1arlb
     C                   z-add     0             l1dohd
     C                   z-add     0             l1dolb
     C                   z-add     0             l1opfscd
      *
     C                   move      *blank        l1mscd
     C                   move      *blank        l1ds
     C                   move      *blank        l1ophgcd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Production Phase description
      *---------------------------------------------------------------
      *
     C     $ppds         begsr
      *
     C                   move      hgppcd        svppcd
      *
     C     svppcd        chain     hsp011                             92
     C                   if        *in92 = *off
     C                   move      ppppds        h2ppds
     C                   else
     C                   eval      h2ppds = 'Unknown'
     C                   endif
      *
      * Print some blank lines.
      *
     C                   if        first = no                                   If not first
      *
     C                   do        4
     C                   if        *inof = *off
     C                   except    blank
     C                   move      yes           phasebreak
     C                   endif
     C                   enddo
      *
     C                   endif                                                  If not first
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    hghgsn
     C                   kfld                    ldfcymd
      *
      *
     C     key02         klist
     C                   kfld                    memvsn
     C                   kfld                    melnno
      *
      *
     C     key03         klist
     C                   kfld                    memvsn
     C                   kfld                    mehgsn
      *
      *
     C     key04         klist
     C                   kfld                    memedt
     C                   kfld                    hghgsn
      *
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    xxcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    todphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
      * Retrieve time for report heading.
      *
     C                   time                    rtime
      *
     C                   z-add     ldfmdy        h1fmdy
     C                   z-add     ldtmdy        h1tmdy
      *
      *
      * Edit/Final/On-demand
      *
     C                   select
     C                   when      ldeffl = 'D'
     C                   movel(p)  'ON-DEMAND'   h1ef
      *
     C                   when      ldeffl = 'E'
     C                   movel(p)  '  EDIT   '   h1ef
      *
     C                   when      ldeffl = 'F'
     C                   movel(p)  '  FINAL  '   h1ef
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oqprint    e            h1hdr          1 01
     O                       sdpgm               10
     O                                          107 'HOG PRODUCTION SYSTEM'
     O                                          188 'DATE'
     O                       udate         y    198
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                                           97 'NEGATIVE INVENTORY'
     O                                          114 ' EXCEPTION REPORT'
     O                                          188 'TIME'
     O                       rtime              198 '  :  :  '
      *
     O          e            h1hdr          2
     O                       h1ef               101
     O                                          188 'PAGE'
     O                       page          z    198
      *
      *
     O          e            h1hdr          1
     O                                           14 'From date ....'
     O                       h1fmdy              24 '  /  /  '
      *
      *
     O          e            h1hdr          1
     O                                           14 'To date ......'
     O                       h1tmdy              24 '  /  /  '
      *
      *
     O          e            h1hdr          1
     O                                           14 'Period/year ..'
     O                       ldper         z     18
     O                       ldccyy        z     24
      *
      *-------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------
      *
     O          e            h1hdr       1  1
     O                                            5 'FARM'
     O                                           10 'HOG'
     O                                           38 'MOVEMENT'
     O                                           60 'NEGATIVE'
     O                                          120 '--- SHIPPED  ---'
     O                                          141 '--- ARRIVED ----'
     O                                          165 'DOA AT DESTINATION'
     O                                          186 '-- DESTINATION --'
     O                                          198 'CUSTOMER'
      *
     O          e            h1hdr          1
     O                                            5 'SITE'
     O                                           12 'GROUP'
     O                                           26 'DATE'
     O                                           38 'NUMBER'
     O                                           42 'ST'
     O                                           48 'TYPE'
     O                                           60 'INV HEAD'
     O                                           70 'HEAD'
     O                                           80 'POUNDS'
      *
     O                                          110 'HEAD'
     O                                          120 'POUNDS'
     O                                          131 'HEAD'
     O                                          141 'POUNDS'
     O                                          153 'HEAD'
     O                                          165 'POUNDS'
     O                                          175 'FARM'
     O                                          184 'GROUP'
     O                                          198 'NUMBER'
      *
     O          e            h1hdr          1
     O                       dash               198
      *
      *-------------------------------------------------------------
      * Production phase heading
      *-------------------------------------------------------------
      *
     O          e            h2hdr       1  2
     O                                           17 'Production Phase:'
     O                       h2ppds              50
      *
      *-------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------
      *
     O          e            l1dtl       1
     O               97      hgfscd        z      5
     O                       hghgcd              14
      *
     O                       l1mdy          b    28 '  /  /  '
     O                       l1mvsn        zb    38
     O                       l1mscd         b    42
     O                       l1ds           b    50
     O                       wkinhd        kb    60
     O                       l1hd          kb    71
     O                       l1lb          kb    81
      *
     O                       l1shhd        KB   111
     O                       l1shlb        KB   121
     O                       l1arhd        KB   132
     O                       l1arlb        KB   142
     O                       l1dohd        KB   154
     O                       l1dolb        KB   166
      *
     O                       l1opfscd      mb   176
     O                       l1ophgcd       b   186
     O                       l1cvno        mb   198
      *
      *-------------------------------------------------------------
      * Blank line
      *-------------------------------------------------------------
      *
     O          e            blank       1
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           19 'NO DATA MEETS YOUR'
     O                                           38 'SELECTION CRITERIA'
