// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLWMXFR
// ?Date: 14.08.2025 Time: 02:55:37
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3773 JJH 12/28/14 Build Hot Weight Data Source - Detail
//? This function will create an XLS for each day in the Kill Date
//? range that has data.
ENDDO;

//?Create XLS for Daily Summary
CASE;

// IF PAR.Print Daily Summary USR is Yes
IF PAR.Print_Daily_Summary_USR = 'Y';

//?Convert Numeric to Alpha fields for input parameters
// LCL.Company Number Alpha Usr = CVTVAR(PAR.ER Company Number)
LCL.Company_Number_Alpha_Usr = CVTVAR(PAR.ER_Company_Number);

// LCL.Kill Date From Alpha USR = CVTVAR(PAR.Kill Date From USR)
LCL.Kill_Date_From_Alpha_USR = CVTVAR(PAR.Kill_Date_From_USR);

// LCL.Kill Date To Alpha USR = CVTVAR(PAR.Kill Date To USR)
LCL.Kill_Date_To_Alpha_USR = CVTVAR(PAR.Kill_Date_To_USR);

//?Format Kill Date Text USR
// LCL.Month USR = PAR.Kill Date From USR *MONTH
LCL.Month_USR = DATEDTLS(PAR.Kill_Date_From_USR 'MO' 1111111 'NONE' 'N' 1);

// LCL.Day of Month USR = PAR.Kill Date From USR *DAY OF MONTH
LCL.Day_of_Month_USR = DATEDTLS(PAR.Kill_Date_From_USR 'DM' 1111111 'NONE' 'N' 1);

// LCL.Year USR = PAR.Kill Date From USR *YEAR
LCL.Year_USR = DATEDTLS(PAR.Kill_Date_From_USR 'YR' 1111111 'NONE' 'N' 1);

// LCL.Month Alpha USR = LCL.Month USR
LCL.Month_Alpha_USR = LCL.Month_USR;

// LCL.Day Alpha USR = LCL.Day of Month USR
LCL.Day_Alpha_USR = LCL.Day_of_Month_USR;

// LCL.Year Alpha Usr = LCL.Year USR
LCL.Year_Alpha_Usr = LCL.Year_USR;

// LCL.Kill Date Range Text USR = CONCAT(LCL.Month Alpha USR,CON./,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Month_Alpha_USR + '/' (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,LCL.Day Alpha USR,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + LCL.Day_Alpha_USR (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,CON./,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + '/' (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,LCL.Year Alpha Usr,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + LCL.Year_Alpha_Usr (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,CON.to,CND.*One)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + 'to' (1);

// LCL.Month USR = PAR.Kill Date To USR *MONTH
LCL.Month_USR = DATEDTLS(PAR.Kill_Date_To_USR 'MO' 1111111 'NONE' 'N' 1);

// LCL.Day of Month USR = PAR.Kill Date To USR *DAY OF MONTH
LCL.Day_of_Month_USR = DATEDTLS(PAR.Kill_Date_To_USR 'DM' 1111111 'NONE' 'N' 1);

// LCL.Year USR = PAR.Kill Date To USR *YEAR
LCL.Year_USR = DATEDTLS(PAR.Kill_Date_To_USR 'YR' 1111111 'NONE' 'N' 1);

// LCL.Month Alpha USR = LCL.Month USR
LCL.Month_Alpha_USR = LCL.Month_USR;

// LCL.Day Alpha USR = LCL.Day of Month USR
LCL.Day_Alpha_USR = LCL.Day_of_Month_USR;

// LCL.Year Alpha Usr = LCL.Year USR
LCL.Year_Alpha_Usr = LCL.Year_USR;

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,LCL.Month Alpha USR,CND.*One)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + LCL.Month_Alpha_USR (1);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,CON./,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + '/' (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,LCL.Day Alpha USR,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + LCL.Day_Alpha_USR (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,CON./,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + '/' (*ZERO);

// LCL.Kill Date Range Text USR = CONCAT(LCL.Kill Date Range Text USR,LCL.Year Alpha Usr,CND.*None)
LCL.Kill_Date_Range_Text_USR = LCL.Kill_Date_Range_Text_USR + LCL.Year_Alpha_Usr (*ZERO);

//?Call CLP to create XLS of Eval Trans UPL Erp for  Kill Date
// Call program Clp Hot Scale DailySm UP.
CALL PROGRAM(Clp Hot Scale DailySm UP) ('PLWRUPC');
PARAMETER(LCL.Company_Number_Alpha_Usr);
PARAMETER(LCL.Kill_Date_From_Alpha_USR);
PARAMETER(LCL.Kill_Date_To_Alpha_USR);
PARAMETER(PAR.EMail_Address);
PARAMETER(LCL.Kill_Date_Range_Text_USR);

ENDIF;

//?Create XLS for Daily Detail
CASE;

// IF PAR.Print Daily Detail USR is Yes
IF PAR.Print_Daily_Detail_USR = 'Y';

EXECUTE FUNCTION(Bld Hot Scale DailyDt RT) TYPE(RTVOBJ) FILE(PLBUCPP)           AB1323545;
PARAMETER(PAR.ER_Company_Number);
PARAMETER(PAR.Kill_Date_From_USR);
PARAMETER(PAR.Kill_Date_To_USR);
PARAMETER(PAR.EMail_Address);
{
 //?USER: Initialize routine

 // LCL.First Time Usr = CND.Yes
 LCL.First_Time_Usr = 'Y';

 //?Set the LCL.ER Kill Date to Kill Date From
 // LCL.ER Kill Date = PAR.ER Kill Date
 LCL.ER_Kill_Date = PAR.ER_Kill_Date;

 //?USER: Process Data record

 //?Increment Next Kill Date
 CASE;

 // IF LCL.ER Kill Date EQ PAR.ER Kill Date
 IF LCL.ER_Kill_Date = PAR.ER_Kill_Date;

 CASE;

 // IF LCL.First Time Usr is Yes
 IF LCL.First_Time_Usr = 'Y';

 //?Do nothing
 // LCL.First Time Usr = CND.No
 LCL.First_Time_Usr = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ER Kill Date = LCL.ER Kill Date + CON.1 *DAYS
 LCL.ER_Kill_Date = DATEINCR(LCL.ER_Kill_Date 1 'DY' 1111111 'NONE' 'N' 1);

 ENDIF;

 //?Increment Next Kill Date
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ER Kill Date = LCL.ER Kill Date + CON.1 *DAYS
 LCL.ER_Kill_Date = DATEINCR(LCL.ER_Kill_Date 1 'DY' 1111111 'NONE' 'N' 1);

 ENDIF;

 //?Create XLS for Kill Date or QUIT after Kill Date To
 CASE;

 // IF LCL.ER Kill Date GT PAR.Kill Date To USR
 IF LCL.ER_Kill_Date > PAR.Kill_Date_To_USR;

 QUIT;

 //?Create XLS for Kill Date or QUIT after Kill Date To
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Check to see if there are any Eval Trans UPL ERP for Kill Date
 // Call program Rtv Hot Scale DailyDt XF.
 CALL PROGRAM(Rtv Hot Scale DailyDt XF) ('PLWNXFR');
 PARAMETER(DB1.ER_Company_Number);
 PARAMETER(DB1.ER_Kill_Date);
 PARAMETER(LCL.Record_Found_USR);

 CASE;

 // IF LCL.Record Found USR is Record Found
 IF LCL.Record_Found_USR = 'Y';

 //?Convert Numeric fields to Alpha for CLP
 // LCL.Company Number Alpha Usr = CVTVAR(PAR.ER Company Number)
 LCL.Company_Number_Alpha_Usr = CVTVAR(PAR.ER_Company_Number);

 // LCL.Kill Date Alpha USR = CVTVAR(LCL.ER Kill Date)
 LCL.Kill_Date_Alpha_USR = CVTVAR(LCL.ER_Kill_Date);

 //?Format Kill Date Txt USR
 // LCL.Month USR = LCL.ER Kill Date *MONTH
 LCL.Month_USR = DATEDTLS(LCL.ER_Kill_Date 'MO' 1111111 'NONE' 'N' 1);

 // LCL.Day of Month USR = LCL.ER Kill Date *DAY OF MONTH
 LCL.Day_of_Month_USR = DATEDTLS(LCL.ER_Kill_Date 'DM' 1111111 'NONE' 'N' 1);

 // LCL.Year USR = LCL.ER Kill Date *YEAR
 LCL.Year_USR = DATEDTLS(LCL.ER_Kill_Date 'YR' 1111111 'NONE' 'N' 1);

 // LCL.Month Alpha USR = LCL.Month USR
 LCL.Month_Alpha_USR = LCL.Month_USR;

 // LCL.Day Alpha USR = LCL.Day of Month USR
 LCL.Day_Alpha_USR = LCL.Day_of_Month_USR;

 // LCL.Year Alpha Usr = LCL.Year USR
 LCL.Year_Alpha_Usr = LCL.Year_USR;

 // LCL.Kill Date Text USR = CONCAT(LCL.Month Alpha USR,CON./,CND.*None)
 LCL.Kill_Date_Text_USR = LCL.Month_Alpha_USR + '/' (*ZERO);

 // LCL.Kill Date Text USR = CONCAT(LCL.Kill Date Text USR,LCL.Day Alpha USR,CND.*None)
 LCL.Kill_Date_Text_USR = LCL.Kill_Date_Text_USR + LCL.Day_Alpha_USR (*ZERO);

 // LCL.Kill Date Text USR = CONCAT(LCL.Kill Date Text USR,CON./,CND.*None)
 LCL.Kill_Date_Text_USR = LCL.Kill_Date_Text_USR + '/' (*ZERO);

 // LCL.Kill Date Text USR = CONCAT(LCL.Kill Date Text USR,LCL.Year Alpha Usr,CND.*None)
 LCL.Kill_Date_Text_USR = LCL.Kill_Date_Text_USR + LCL.Year_Alpha_Usr (*ZERO);

 //?Call CLP to create XLS of Eval Trans UPL Erp for  Kill Date
 // Call program Clp Hot Scale DailyDt UP.
 CALL PROGRAM(Clp Hot Scale DailyDt UP) ('PLWJUPR');
 PARAMETER(LCL.Company_Number_Alpha_Usr);
 PARAMETER(LCL.Kill_Date_Alpha_USR);
 PARAMETER(PAR.EMail_Address);
 PARAMETER(LCL.Kill_Date_Text_USR);

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Send Message to JOB LOG to indicate No Records for Kill Date
 // Send status message - 'No records for Kill Date &1.'
 MESSAGE(PRK1345 *STATUS);
 MSGPARM(LCL.ER_Kill_Date);

 ENDIF;

 ENDIF;

}


ENDIF;

