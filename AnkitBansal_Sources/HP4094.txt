      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4094
      * TITLE:       Specify Expense Code/Report Code Change
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/29/03
      *
      *
      * FUNCTION: This function is for I.S. personnel only.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4094   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp052    if   e           k disk
      *    Expense code
      *
      *
     Fhsp006    if   e           k disk
      *    Report code
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parm fields
      *
     D xxexcd          s                   like(d1excd)
     D xxexds          s                   like(d1exds)
     D xxrpcd          s                   like(rprpcd)
     D xxcacd          s                   like(rpcacd)
     D xxrsds          s                   like(rprsds)
     D xxucfl          s                   like(rpucfl)
      *
     D xxjobq          s             10     inz('*JOBD     ')
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldexcd                 1      5
     D  ldoldrpcd              6     10
     D  ldrpcd                11     15
     D  ldcacd                16     20
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4094k1
     C                   write     hp4094ec
     C                   exfmt     hp4094r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) expense code
      *   2) report code
      *
     C                   exsr      $excd
     C                   exsr      $rpcd
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
      *
     C                   if        error = 0                                    If no error
     C                   if        *in44 = *off                                 If no F8
     C                   seton                                        44
     C                   else
     C                   if        *in08 = *on                                  If F8=submit
     C                   exsr      $proc1
     C                   endif                                                  If F8=submit
     C                   endif                                                  If no F8
     C                   else
     C                   setoff                                       44
     C                   endif                                                  If no error
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Expense Code
      *----------------------------------------------------------------
      *
     C     $excd         begsr
      *
     C                   move      *blank        d1exds
     C                   move      *blank        d1eccd
     C                   move      *blank        d1escd
     C                   move      *blank        d1oldrpcd
     C                   move      *blank        d1oldcacd
      *
     C                   select
     C                   when      d1excd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1excd        chain     hsp052                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00301'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1excd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      exexds        d1exds
     C                   move      execcd        d1eccd
     C                   move      exescd        d1escd
     C                   move      exrpcd        d1oldrpcd
      *
     C     exrpcd        chain     hsp006                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00450'     mgid(e)
     C                   clear                   mgw
     C                   movea     exrpcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      rpcacd        d1oldcacd
      *
     C                   if        rpucfl = no                                  If not user
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00299'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1excd        mgw(1)
     C                   movea     rprpcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not user
     C                   endif                                                  If no hit
      *
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate new report code
      *----------------------------------------------------------------
      *
     C     $rpcd         begsr
      *
     C                   move      *blank        d1rsds
      *
     C                   select
     C                   when      d1rpcd = *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1rpcd = d1oldrpcd
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09210'
     C                   endif
     C                   other
      *
     C     d1rpcd        chain     hsp006                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00450'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1rpcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   movel     rpcacd        d1cacd
     C                   movel     rprsds        d1rsds
      *
     C                   if        rpucfl = no                                  If not user
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09211'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1rpcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not user
      *
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Expense code
     C                   select
     C                   when      fld = 'D1EXCD'
     C                   call      'HP564'
     C                   parm      *blank        xxexcd
     C                   parm      *blank        xxexds
     C                   seton                                        51
     C                   if        xxexcd <> *blank
     C                   movel     xxexcd        d1excd
     C                   movel     xxexds        d1exds
     C                   endif
      * Report code
     C                   when      fld = 'D1RPCD'
     C                   call      'HP559'
     C                   parm      *blank        xxcacd
     C                   parm      *blank        xxrpcd
     C                   parm      *blank        xxrsds
     C                   parm      'Y'           xxucfl
     C                   seton                                        52
     C                   if        xxrpcd <> *blank
     C                   movel     xxrpcd        d1rpcd
     C                   movel     xxrsds        d1rsds
     C                   endif
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      d1excd        ldexcd
     C                   move      d1oldrpcd     ldoldrpcd
     C                   move      d1rpcd        ldrpcd
     C                   move      d1cacd        ldcacd
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(49)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP3094)) JOB(EXPFRMTO) JOBQ(__________)
