      *****************  RPG PROGRAM HEADING  ***********************
     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP130
      * TITLE:       MAINTAIN UPLOADED FEED DELIVERY TICKET
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     04/30/97
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO MAINTAIN RECORDS
      *           IN THE UPLOADED FEED TICKET FILES (HEADER AND DETAIL)
      *           THAT ARE USED FOR EDITING PRIOR TO INTERFACING THE
      *           UPLOADED DATA TO THE HPS FILES.
      *
      *           ALL TICKETS ARE 'DELIVERY' TICKETS.
      *           NO PICKUP TICKET OR ADJUSTMENT TICKET LOGIC IS INVOLVED.
      *           A TICKET CAN BE REVISED/DELETED; NO NEW TICKETS CAN
      *           BE CREATED.
      *
      *           THIS PROGRAM IS CALLED FROM:
      *                HP430-WORK WITH UPLOADED FEED TICKETS.
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT HAS F4-PROMPT LOGIC.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/30/01  LeAnne Fedor
      *           Production type was removed from the feed ticket files.
      *           So, removed all production type logic from program.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 01/02/02  LeAnne Fedor
      *           added new edit. A ration cannot be fed to a group that is older than
      *           the 'maximum age (days)' associated with the ration.
      *
      * 01/07/02  LeAnne Fedor
      *           added new edit. The user cannot use a ticket number from the block
      *           of numbers reserved for system assignment.
      *
      * 01/28/02  LeAnne Fedor
      *           We added an additional check for determining a shared bin...rooms have
      *           to be 'active' ...not 'inactive'. Also, we now call a generic program
      *           to make the 'shared' bin determination.
      *
      * 07/15/02  LeAnne Fedor
      *           Removed 'production phase' from the Feed Ticket Header file.
      *
      * 10/20/03  LeAnne Fedor
      *           added an edit that the Feed Ticket Date cannot be prior to the
      *           Created Date of the group. Alice does not want any feed delivered
      *           to a group before it is created.
      *
      * 01/18/06  LeAnne Fedor
      *           Changed logic using HSP020-Building/Rooms to now use our new file
      *           HSP113-Rooms/Bin Sets.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 07/06/09  LeAnne Ramsey
      *           We added new field 'Continuous Flow Flag' to Hog Group file. If a Group is
      *           a 'Continuous Flow' group, we will noT do a "max age" check on the Ration.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. added new field 'Upload Date' to Feed Ticket Header.
      *
      * 10/26/09  LeAnne Ramsey
      *           David Weaver is rewriting the p.c. side.
      *           We have renamed the record/fields in HSP237 and HSP238.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/31/19  Brad Baden     E15736 - Upload Toll Mill Receipts
      *           Added file HSP089 to retrieve the Cost Through System
      *           Flag.  Check if Cost Through System Flag entered on the
      *           screen is the same as the value in the Feed Mill Alias
      *           file HSP089.  If not the same, send a warning message.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *           Changed array MGW beginning position for 2nd parm to support Bin Code 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd130    cf   e             workstn sfile(hp130s1:hdrrn1)
     F                                     infds(iofeed)
      *
      *
     Fhsp009    if   e           k disk
      *   Business office
      *
      *
     Fhsp014    if   e           k disk
      *   Group status codes
      *
      *
     Fhsp018    if   e           k disk
      *   Farm site
      *
      *
     Fhsp024    if   e           k disk
      *   Feed manufacturing type
      *
      *
     Fhsl034d   if   e           k disk
      *   Hog groups
      *
      *
     Fhsl034e   if   e           k disk    rename(hgrec:hgrece)
      *   Hog groups
      *
      *
     Fhsj034w   if   e           k disk    rename(hgrec:hgrecw)
      *   Hog Group + Rooms/Bin sets + Bin Set Bins
      *
      *
     Fhsl036b   if   e           k disk    rename(bnrec:bnrecb)
      *   Bin set bins
      *
      *
     Fhsj036a   if   e           k disk    rename(bnrec:bnreca)
      *   Bin set bins
      *   Building/rooms
      *   Hog groups
      *   Hog group status codes (select: gsfdfl = Y)
      *
      *
     Fhsp037    if   e           k disk
      *   Feed ticket header
      *
      *
     Fhsp071    if   e           k disk
      *   Rations
      *
      *
     Fhsp072    if   e           k disk
      *   Ration additive
      *
      *
     Fhsp089    if   e           k disk
      *   Feed Mill Alias
      *
      *
     Fhsl113a   if   e           k disk
      *  Rooms/Bin Sets
      *
      *
     Fhsp237    uf a e           k disk
      *  Uploaded feed ticekts: edit file-header
      *
      *
     Fhsp238    uf a e           k disk
      *  Uploaded feed ticekts: edit file-detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D update          c                   'UPDATE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D edit1           c                   'EDIT1 '
     D exit            c                   'EXIT  '
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D reset           s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
     D notflg          s              1    inz('N')
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkplin          s              2  0
     D wkrlin          s              2  0
     D wkdiff          s                   like(count)
     D wkfld           s                   like(count)
     D wkrmdr          s                   like(count)
     D editfl          s              1    inz('N')
     D wkedit          s              1    inz('N')
      *
      *
      *
      * Control/save fields
      *
     D warmsg          s              2  0
     D binfl           s              1    inz('Y')
     D svmdy           s                   like(c1mdy)
     D svtkno          s                   like(c1tkno)
      *
      *
      * Workfields
      *
     D wklnno          s                   like(udlnno)
     D wktype          s              1    inz('D')
     D wkfscd          s                   like(fsfscd)
     D wkdupcnt        s                   like(count)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkisotkdt       s               D   datfmt(*iso)
     D wkisoopdt       s               D   datfmt(*iso)
     D wkudat          s              8  0
     D wkdays          s              3  0
     D wkdaysalph      s              3
     D wktkdt          s              8  0
      *
      *
      * Parm fields
      *
     D iptkno          s                   like(uhtkno)
     D ipmdy           s              6  0
     D xxshared        s              1
     D xxtkno          s              9
     D xxbncd          s                   like(dfbncd)
     D xxhgcd          s                   like(dfhgcd)
     D xxrncd          s                   like(rnrncd)
     D xxrnds          s                   like(rnrnds)
     D xxadcd          s                   like(raadcd)
     D xxadds          s                   like(raadds)
     D xxftcd          s                   like(ftftcd)
     D xxftds          s                   like(ftftds)
     D xxfmbo          s                   like(c1fmbo)
     D xxbods          s                   like(bobods)
     D xxdvcd          s                   like(bodvcd)
     D xxfscd          s              5
     D xxfsnm          s                   like(c1fsnm)
     D xxprfl          s                   like(c1prfl)
     D xxcsfl          s                   like(c1csfl)
     D xxbicd          s                   like(bnbicd)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *--------------------------------------------------------------------------------
      * Definition for external data area DAFDSN--System-Assigned Feed Ticket Number
      *--------------------------------------------------------------------------------
      *
     D dafdsn          ds                  dtaara(dafdsn)
     D  dabegtkno             11     19  0
     D  daendtkno             21     29  0
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DAAPER'
      *---------------------------------------------------------------
     D
     D daaper          ds                  dtaara(daaper)
     D  daccyy                 1      4
     D  daper                  5      6
     D  dabpdt                 7     14  0
     D  daepdt                15     22  0
     D  dapgfl                23     23
     D  dappfl                24     24
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Verify that the Feed Ticket the user selected still exists.
      *
     C     c1tkno        chain(n)  hsp237                             90
     C                   if        *in90 = *on                                  If not found
     C                   movel     yes           notflg
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00827'     mgid(e)
     C                   clear                   mgw
     C                   movel     c1tkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     wktype        mgw(10)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   movel     uhfmbo        c1fmbo
     C                   z-add     uhmmno        c1mmno
     C                   z-add     uhfscd        c1fscd
     C                   movel     uhvino        c1vino
     C                   movel     uhprfl        c1prfl
     C                   movel     uhcsfl        c1csfl
     C                   move      *blank        c1fsnm
      *
      *
      * Retrieve the Farm Site Name
      *
     C                   if        c1fscd <> 0                                  If farm
     C     c1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel     fsfsnm        c1fsnm
     C                   else
     C                   movel     'Unknown'     c1fsnm
     C                   endif
     C                   endif                                                  If farm
     C                   endif                                                  If not found
      *
      * Clear/fill the subfile
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Perform operator I/O for screen 1
      *-------------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the page of the subfile to display
      *
     C                   select
     C                   when      wkflow = 0 and error = 0
     C                   z-add     1             hdpag1
      *
     C                   when      reset = yes and wkflow <= hdrrn1
     C                   z-add     wkflow        hdpag1
     C                   endsl
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to crt
      *
     C                   write     hp130k1
     C                   write     hp130ec
     C                   exfmt     hp130c1
      *
      * Reset the coun field for Warning Messages
      *
     C                   z-add     0             warmsg
      *
      *
      * Set off the error indicators in the control record
      *
     C                   setoff                                       303637
      *
      * 10/31/19 JBB E15736 - Added indicator 45 to stop continuous reverse image
     C                   setoff                                       383945
     C                   setoff                                       505659
      *
      * Set off the error indicators in the subfiel
      *
     C                   exsr      $setof
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   z-add     idflow        wkflow
     C                   movel     no            reset
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   move      '03'          rtncd
     C                   movel     exit          routne
      *
     C                   when      *in12 = *on                                  F12-PREVIOUS
     C                   movel     '12'          rtncd
     C                   movel     exit          routne
      *
     C                   when      notflg = yes                                 No records
     C                   movel     scrn1         routne
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
     C                   movel     scrn1         routne
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   z-add     svmdy         c1mdy
     C                   z-add     svtkno        c1tkno
     C                   movel     yes           reset
     C                   movel     set1          routne
      *
     C                   when      *in09 = *on                                  F9-revise
     C                   exsr      $edit1
     C                   if        error = 0 or error = warmsg
     C                   exsr      $revtk
     C                   movel     exit          routne
     C                   else
     C                   movel     scrn1         routne
     C                   endif
      *
     C                   when      *in11 = *on                                  F11-DELETE
     C                   exsr      $dltfh
     C                   exsr      $dltfd
     C                   movel     exit          routne
      *
     C                   when      *in25 = *on                                  F25-ROLLUP
     C     idflow        add       wkplin        wkdiff
     C                   if        hdrrn1 >= wkdiff                             IF SOMETHING
     C                   else
     C                   z-add     count         hdrrn1
     C                   do        wkplin                                       DO FILL
     C                   exsr      $blank
     C                   enddo                                                  DO FILL
     C                   endif                                                  IF SOMETHING
     C                   movel     scrn1         routne
     C                   other
      *
      * User pressed 'ENTER'
      *
     C                   exsr      $edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------
      * Edit input fields for Screen 1
      *---------------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Clear the Total accumulators at the top of the screen and then edit the
      * Control record.
      *
     C                   z-add     0             c1fdlb
     C                   z-add     0             c1inam
     C                   z-add     0             c1mdam
     C                   z-add     0             c1mfam
      *
     C                   exsr      $edc1
      * Edit subfile
     C                   if        error = 0
     C                   exsr      $eds1
     C                   if        error = 0
     C                   z-add     1             hdpag1
     C                   endif
     C                   else
     C                   exsr      $offsf
     C                   z-add     1             hdpag1
     C                   endif
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit the Control Record info on Screen 1
      *-------------------------------------------------------------------
      *
     C     $edc1         begsr
      *
      * Validate:
      *    Feed mill business office
      *    Farm site
      *    Ticket number
      *    Ticket date
      *    Produced flag
      *
     C                   exsr      $fmbo
     C                   exsr      $fscd
     C                   exsr      $tkno
     C                   exsr      $tkdt
      *
      * Produced flag
     C                   if        c1prfl <> yes and c1prfl <> no
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
     C                   endif
      *
      * Cost-through-system Flag
      *
     C                   exsr      $csfl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Feed Mill Business Office
      *----------------------------------------------------------------
      *
     C     $fmbo         begsr
      *
     C                   if        c1fmbo = *blank                              If blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   else
      *
     C     c1fmbo        chain     hsp009                             92
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00110'     mgid(e)
     C                   clear                   mgw
     C                   movea     c1fmbo        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      *in92 = *off and bodvcd <> 'FEED '
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00113'     mgid(e)
     C                   clear                   mgw
     C                   movea     c1fmbo        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endsl
     C                   endif                                                  If blank
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Farm Site
      *----------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        c1fsnm
      *
     C                   select
     C                   when      c1fscd = 0                                   WH no FARM
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
      * Check that Farm Site exists
      *
     C     c1fscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If good farm
     C                   movel     fsfsnm        c1fsnm
     C                   else
      *
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      c1fscd        xxfscd
     C                   movea     xxfscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If good farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Ticket Number
      *----------------------------------------------------------------
      *
     C     $tkno         begsr
      *
     C                   select
     C                   when      c1tkno = 0                                   WH no TICKET
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      c1tkno < 0                                   WH NEG TICK
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
      * Ticket cannot already exist in the HPS Feed Ticket file
      *
     C     key01         chain     hsp037                             92
     C                   if        *in92 = *off                                 If hit
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00805'     mgid(e)
     C                   clear                   mgw
     C                   movel     c1tkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     c1fmbo        mgw(10)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
      *
      * Do not allow duplicate Ticket Numbers in the Editing Header
      *
     C                   select
     C                   when      c1tkno = svtkno
     C                   z-add     0             wkdupcnt
     C     c1tkno        setll     hsp237
     C                   dou       *in91 = *on                                  Do dup check
     C     c1tkno        reade(n)  hsp237                                 91
     C                   if        *in91 = *off
     C                   add       1             wkdupcnt
     C                   endif
     C                   enddo                                                  Do dup check
      *
     C                   if        wkdupcnt > 1
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00807'     mgid(e)
     C                   clear                   mgw
     C                   movel     c1tkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      * If the user is changing the Ticket Number:
      * 1) Tne new Ticket cannot already exist in the Uploaded Editing file
      * 2) Tne ticket number cannot be a number in the block of reserved ticket
      *    numbers.
      *
     C                   when      c1tkno <> svtkno
     C     c1tkno        chain(n)  HSP237                             92
     C                   if        *in92 = *off                                 If exists
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00807'     mgid(e)
     C                   clear                   mgw
     C                   movel     c1tkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If exists
      *
      * The ticket number cannot be a number in the block of reserved ticket
      * numbers.
      *
     C                   if        c1tkno >= dabegtkno and                      If reserved
     C                             c1tkno <= daendtkno
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00836'     mgid(e)
     C                   clear                   mgw
     C                   movel     c1tkno        xxtkno
     C                   movea     xxtkno        mgw(1)
     C                   movel     dabegtkno     xxtkno
     C                   movea     xxtkno        mgw(10)
     C                   movel     daendtkno     xxtkno
     C                   movea     xxtkno        mgw(19)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If reserved
     C                   endsl
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Ticket Date
      *----------------------------------------------------------------
      *
     C     $tkdt         begsr
      *
     C                   z-add     0             wktkdt
      *
      * Test for a valid date.
      *
     C     *mdy          test(d)                 c1mdy                  92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD
      *
     C     *mdy          move      c1mdy         wkisodate
     C                   move      wkisodate     wktkdt
     C                   endif                                                  If bad date
      *
      *
      * If the Date is valid,
      *     Check that it is not greater than today's date
      *     Check that it is not in a Closed Period
      *     If it is in the Current Period,
      *         Check that the Period Close programs are not running.
      *
     C                   if        *in38 = *off                                 IF GOOD DATE
      *
      * Bring the Data Area that holds the current Accounting Period
      *
     C                   in        daaper
      *
     C                   select
     C                   when      wktkdt > wkudat
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00426'     mgid(e)
     C                   endif
      *
     C                   when      wktkdt < dabpdt
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09007'     mgid(e)
     C                   endif
      *
     C                   when      wktkdt >= dabpdt and
     C                             wktkdt <= daepdt and
     C                             dappfl <> *blank
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09016'     mgid(e)
     C                   endif
     C                   endsl
     C                   endif                                                  IF GOOD DATE
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Cost Through System Flag
      *----------------------------------------------------------------
      *
     C     $csfl         begsr
      *
     C                   select
     C                   when      c1csfl <> yes and c1csfl <> no
     C                   seton                                        45
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
      *
      * Tickets for Purchased feed cannot be 'costed thru the system'. So,
      * validate the user's combination of these values.
      *
     C                   when      c1prfl = no and c1csfl = yes
     C                   seton                                        45
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00305'     mgid(e)
     C                   endif
      *
      *
      * 10/31/2019 JBB E15736 - Upload Toll Mill Receipts
      * Check if Cost Through System Flag matches value in HSP089
     c                   other
     c     c1fmbo        chain     hsp089
     c                   if        %found(hsp089)                               if %found(hsp089)
     c                   if        c1csfl <> macsfl                             if c1csfl <> macsfl
     C                   add       1             error
     C                   add       1             warmsg
     c                   movel     'HS09273'     mgid(e)
     c                   endif                                                  fi c1csfl <> macsfl
     c                   endif                                                  fi %found(hsp089)
     c*                  endif                                                  fi c1fmbo <> blanks
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear the Screen 1 subfile
      *----------------------------------------------------------------
      *
     C     $clr1         begsr
      *
      * Clear the Total accumulators in the Control Record.
      *
     C                   z-add     0             c1fdlb
     C                   z-add     0             c1inam
     C                   z-add     0             c1mfam
     C                   z-add     0             c1mdam
      *
     C                   z-add     0             hdrrn1
     C                   z-add     0             count
      *
     C                   clear                   hp130s1
     C                   seton                                        83        SFLCLR
     C                   write     hp130c1
     C                   setoff                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Refresh/Fill the subfile on Screen 1
      *----------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Set indicators to control/protect screen fields.
      *
     C                   exsr      $ind
      *
      * Loading the sbufile in this program is different than in the shell
      * programs. This program is always in Revise Mode. We load a page of
      * database records and, if we hit EOF, we finish the page with Blank Lines.
      *
      * Set position in Feed Ticket Detail
      *
     C     c1tkno        setll     hsp238
      *
     C                   dou       *in82 = *on
     C                   exsr      $load1
     C                   enddo
     C                   setoff                                       82
      *
      * Fill up the subfile page with blank lines if necessary.
      *
     C                   if        wkplin <> 0 and wkplin <> count
     C     count         div       wkplin        wkfld
     C                   mvr                     wkrmdr
     C     wkplin        sub       wkrmdr        wkdiff
     C                   do        wkdiff
     C                   exsr      $blank
     C                   enddo
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clear the Subfile line
      *----------------------------------------------------------------
      *
     C     $clrln        begsr
      *
     C                   move      *blank        dfbncd
     C                   move      *blank        dfhgcd
     C                   move      *blank        dfrncd
     C                   move      *blank        dfadcd
     C                   move      *blank        dfftcd
     C                   z-add     0             dffdlb
     C                   z-add     0             dfinam
     C                   z-add     0             dfmdam
     C                   z-add     0             dfmfam
      *
     C                   move      *blank        hddir
     C                   z-add     0             hdhgsn
     C                   move      *blank        hdppcd
     C                   move      *blank        hdrmcd
     C                   move      *blank        hdblcd
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Load the subfile on Screen 1
      *----------------------------------------------------------------
      *
     C     $load1        begsr
      *
      * Clear the subfile line
      *
     C                   exsr      $clrln
      *
      * Retrieve the Feed Detail records
      *
     C     c1tkno        reade(n)  hsp238                                 82
     C                   if        *in82 = *off                                 If not EOF
     C                   seton                                        85
      *
      * If the Allocated Flag for the record is 'DIRECT', retrieve the
      * alpha Hog Group Code for display and set the Direct Bin Flag to Yes.
      *
     C                   if        udalfl = 'D'                                 IF DIRECT
     C                   z-add     udhgsn        hdhgsn
     C                   move      udppcd        hdppcd
      *
     C     hdhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   move      hghgcd        dfhgcd
     C                   move      hgppcd        hdppcd
     C                   move      hgblcd        hdblcd
     C                   move      hgrmcd        hdrmcd
     C                   endif
     C                   endif                                                  IF DIRECT
      *
     C                   movel     udbncd        dfbncd
     C                   movel     udrncd        dfrncd
     C                   movel     udadcd        dfadcd
     C                   movel     udftcd        dfftcd
      *
     C                   z-add     udfdlb        dffdlb
     C                   z-add     udinam        dfinam
     C                   z-add     udmdam        dfmdam
     C                   z-add     udmfam        dfmfam
      *
      * Accumulate Total values for display at the top of the screen.
      *
     C                   add       dffdlb        c1fdlb
     C                   add       dfinam        c1inam
     C                   add       dfmdam        c1mdam
     C                   add       dfmfam        c1mfam
      *
      * Reset indicators
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp130s1
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
     C                   endif                                                  If not EOF
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Load blank subfile records on Screen 1
      *-------------------------------------------------------------------
      *
     C     $blank        begsr
      *
      * Clear subfile line
      *
     C                   exsr      $clrln
      *
      * Set off subfile indicators and then reset control indicators.
      *
     C                   exsr      $setof
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp130s1
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set off all Indicators in the Subfile Records
      *----------------------------------------------------------------
      *
      * This subroutine is used to:
      *  1) Keep the cursor from being in the subfile when the displayed error
      *     message is for the Control record and
      *  2) Keep the cursor from being on the wrong subfile records when the user
      *     is taking the Prompt in the subfile
      *
     C     $offsf        begsr
      *
     C                   dou       *in80 = *on
     C                   readc     hp130s1                                80
     C                   if        *in80 = *off
     C                   seton                                        85
     C                   exsr      $setof
     C                   exsr      $ind
     C                   update    hp130s1
     C                   endif
     C                   enddo
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit the changed subfile records on Screen 1
      *-------------------------------------------------------------------
      *
     C     $eds1         begsr
      *
      * Set the flag that will be used to determine if the user keyed any
      * subfile records---he must key at least one record.
      *
     C                   move      no            wkedit
      *
      * Read all changed subfile records
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  DO PROCESS
     C                   readc     hp130s1                                80
     C                   if        *in80 = *off                                 IF REC READ
      *
      * Seton MDT
     C                   seton                                        85
     C                   move      no            editfl
      *
      * Set off the error indicators
      *
     C                   exsr      $setof
      *
      * If the user has entered any values.
      *
     C                   if        dfbncd <> *blank or
     C                             dfhgcd <> *blank or
     C                             dfrncd <> *blank or
     C                             dfadcd <> *blank or
     C                             dfftcd <> *blank or
     C                             dffdlb <> 0 or
     C                             dfinam <> 0 or
     C                             dfmdam <> 0 or
     C                             dfmfam <> 0
     C                   move      yes           editfl
     C                   endif
      *
     C                   if        editfl = yes                                 IF GO EDIT
     C                   move      yes           wkedit
      *
      * Accumulate totals for the Control Record
      *
     C                   add       dffdlb        c1fdlb
     C                   add       dfinam        c1inam
     C                   add       dfmdam        c1mdam
     C                   add       dfmfam        c1mfam
      *
      * Validate:
      *    Bin code
      *    Hog group code
      *    Ration/Additive code
      *    Feed type code
      *    Feed pounds
      *    Ingredient amount
      *    Medication amount
      *    Manufacturing amount
      *
     C                   exsr      $bncd
     C                   exsr      $hgcd
     C                   exsr      $racd
     C                   exsr      $ftcd
      *
      * Validate Pounds/Amounts
      *
     C                   exsr      $lbsamt
     C                   endif                                                  IF GO EDIT
      *
      * Reset indicators
     C                   exsr      $ind
     C                   update    hp130s1
      *
      * Set off error indicators
      *
     C                   exsr      $setof
      *
     C                   endif                                                  IF REC READ
     C                   enddo                                                  DO PROCESS
      * SET MDT
     C                   setoff                                       85
      *
      * Issue an error message if the user has not keyed at least one entry
      * in the subfile.
      *
     C                   if        wkedit = no and error < maxmsg
     C                   add       1             error
     C                   movel     'HS00314'     mgid(e)
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit Pounds and Amounts
      *-------------------------------------------------------------------
      *
     C     $lbsamt       begsr
      *
      * Feed Pounds is required; it cannot be negative.
      *
     C                   select
     C                   when      dffdlb = 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   exsr      $err1
     C                   endif
      *
     C                   when      dffdlb < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endsl
      *
      * If the Ticket is to be Costed Through the System:
      *    The Ingredient, medication, and manufacturing amounts must be zero
      *
     C                   if        c1csfl = yes                                 IF COST THRU SYSTEM
      *
     C                   if        dfinam <> 0                                     IF INGRED
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00313'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                     IF INGRED
      *
     C                   if        dfmdam <> 0                                     IF MEDIC
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00315'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                     IF MEDIC
      *
     C                   if        dfmfam <> 0                                     IF MANUF
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00316'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                     IF MANUF
     C                   endif                                                  IF COST THRU SYSTEM
      *
      *
      * If the Ticket is not to be Costed through the system:
      *    Ingredient amount is required
      *
     C                   if        c1csfl = no and dfinam = 0                   IF DON'T COST
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00312'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  IF DON'T COST
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit Bin
      *-------------------------------------------------------------------
      *
     C     $bncd         begsr
      *
      * Perform Bin validations:
      *   1) Cannot be blnak
      *   2) Must be valid for Farm Site
      *   3) Must have a Bin Set that is tied to a Room
      *   4) Must have at least one hog gorup eligible for feed
      *
     C                   if        dfbncd = *blank                              If no bin
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Check that Bin exists for Farm Site in the 'BIN SET BINS' file
      *
     C     key04         chain     hsl036b                            92
     C                   if        *in92 = *on                                  IF BAD BIN
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00139'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbncd        mgw(1)
     C                   move      c1fscd        xxfscd
      ** P405-Changed beginning position of 2nd parm to support Bin Code 6A.
P405 C**                 movea     xxfscd        mgw(6)
P405 C                   movea     xxfscd        mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Check that 'bin set' is tied/assigned to at least one Room
      *
     C     key02         chain     hsl113a                            92
     C                   if        *in92 = *on                                  If not assigned
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00163'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbncd        mgw(1)
      ** P405-Changed beginning position of 2nd parm to support Bin Code 6A.
P405 C**                 movea     bnbicd        mgw(6)
P405 C                   movea     bnbicd        mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Does this Bin have at least one hog group eligible for feed
      *
     C     key04         chain     hsj036a                            92
     C                   if        *in92 = *on                                  If no eaters
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00138'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Bin is valid, so determine if it is a Direct or Shared Bin
      *
     C                   exsr      $shared
      *
     C                   endif                                                  If no eaters
     C                   endif                                                  If no room
     C                   endif                                                  If bad bin
     C                   endif                                                  If no bin
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Determine if a Bin is Direct or Shared
      *----------------------------------------------------------------
      *
     C     $shared       begsr
      *
      * Default the hidden 'direct bin' flag to Yes.
      *
     C                   move      yes           hddir
      *
      * Call the generic program to determine if the bin is shared.
      *
     C                   call      'HP8004'
     C                   parm                    bnfscd
     C                   parm                    bnbncd
     C                   parm      no            xxshared
      *
     C                   if        xxshared = yes                               If shared
     C                   movel     no            hddir
     C                   endif                                                  If shared
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------
      * Edit Hog Group
      *------------------------------------------------------------------
      *
      * If the Bin entered by the suer is 'DIRECT',
      *    If the user keyed a Group, validate that:
      *        1) It is a valid Group for this Farm Site
      *        2) The Hog Gorup is eligible for Feed
      *    If Hog Group is blank, default in a Group eligible for Feed
      *       If only one group is eligible; otherwise, issue an error
      *       message telling the user to take F4 and select a group
      *
      * If the Bin entered by the User is 'SHARED', the Group must be Blank
      *
     C     $hgcd         begsr
      *
     C                   if        hddir = yes                                  If direct
     C                   if        dfhgcd = *blank                              If no group
     C                   exsr      $nogrp
     C                   else
     C                   exsr      $group
     C                   endif                                                  If no group
     C                   else
      *
      * else, the Bin is shared; So, Hog Group must be Blank
      *
     C                   if        dfhgcd <> *blank                             If not blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00263'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If not blank
     C                   endif                                                  If direct
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit the Group entered by the User for a Direct Bin
      *-------------------------------------------------------------------
      *
     C     $group        begsr
      *
     C     key05         chain     hsl034e                            92
     C                   if        *in92 = *on                                  IF BAD GROUP
     C                   seton                                        32
     C                   z-add     0             hdhgsn
     C                   move      *blank        hdppcd
     C                   move      *blank        hdblcd
     C                   move      *blank        hdrmcd
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00265'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgcd        mgw(1)
     C                   move      c1fscd        xxfscd
     C                   movea     xxfscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * The Group is valid for this Farm; so, perform additional checks.
      *
     C                   z-add     hghgsn        hdhgsn
     C                   move      hgppcd        hdppcd
     C                   movel     hgblcd        hdblcd
     C                   movel     hgrmcd        hdrmcd
      *
      * Does the Status exist in the Hog Group Status file
      *
     C     hggscd        chain     hsp014                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00268'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgcd        mgw(1)
     C                   movea     hggscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * The Group Status was found. So, check the 'FEED FLAG' to see if this
      * status is eligible for Feed.
      *
     C                   if        gsfdfl = no                                  If not elig
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00266'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgcd        mgw(1)
     C                   movea     hggscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * The Group is eligible to eat feed, so, check to see if it eats from the
      * Bin keyed by the User:
      *
     C                   move      no            binfl
     C     hdhgsn        setll     hsj034w
      *
     C                   dou       *in91 = *on or binfl = yes                   Do bin loop
     C     hdhgsn        reade     hsj034w                                91
     C                   if        *in91 = *off and                             If not eof
     C                             bnbncd = dfbncd
     C                   move      yes           binfl
     C                   endif                                                  If not eof
     C                   enddo                                                  Do bin loop
      *
     C                   if        binfl = no                                   If wrong bin
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00269'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgcd        mgw(1)
     C                   movea     dfbncd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If wrong bin
      *
      * Make sure that the 'create date' of the group is on/after the
      * ticket date. Alice does not want any group on a ticket if the ticket
      * date is prior to the group's create date.
      *
     C                   if        wktkdt < hgcrdt
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00388'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfhgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  IF noT ELIG
     C                   endif                                                  IF noT FOUND
     C                   endif                                                  IF BAD GROUP
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Find a Group when the Bin is Direct and no Group was entered
      *-------------------------------------------------------------------
      *
      * This subroutine is executed when a Bin is Direct and the user has not
      * entered a Hog Group.
      *
      * If only one group is eligible for feed, default it in.
      * But, if multiple groups are eligible, issue a message to the user to
      * select a group.
      *
     C     $nogrp        begsr
      *
     C     key04         chain     hsj036a                            92
     C                   if        *in92 = *off                                 If eater
      *
      * Check to see if there is another gorup eligible for feed.
      *
     C     key04         reade     hsj036a                                92
     C                   if        *in92 = *off                                 If mult grp
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00309'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfbncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * else, only one group is eligible; so, default its values in.
      *
     C                   movel     hghgcd        dfhgcd
     C                   z-add     hghgsn        hdhgsn
     C                   move      hgppcd        hdppcd
     C                   movel     hgblcd        hdblcd
     C                   movel     hgrmcd        hdrmcd
     C                   endif                                                  If mult grp
     C                   else
      *
      * No groups are eligible for Feed
      *
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00264'     mgid(e)
     C                   clear                   mgw
     C                   move      c1fscd        xxfscd
     C                   movea     xxfscd        mgw(1)
     C                   movea     dfbncd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If eater
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Edit Ration/Additive codes
      *-------------------------------------------------------------------
      *
      * Ration Validations:
      *    Ration Code exists in the Rations master
      *    Ration Code is Active
      * Ration/Additive Validations:
      *    Ration/Additive combination exists in the Ration/Additive file
      *    Ration/Additive is active
      *
     C     $racd         begsr
      *
     C     dfrncd        chain     hsp071                             92
     C                   if        *in92 = *on                                  IF BAD RAT
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00247'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Ration cannot be Inactive
      *
     C                   if        rnrnst = 'I'                                 IF RAT INACT
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00529'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  IF RAT INACT
      *
      * If Additive is entered, validate that the Ration/Additive combination
      * is valid.
      *
     C                   if        dfadcd <> *blank                             If additive
     C     key03         chain     hsp072                             92
     C                   if        *in92 = *on                                  IF BAD COMBO
     C                   seton                                        47
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00417'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movea     dfadcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Ration/Additive must be Active
      *
     C                   if        rarast = 'I'                                 IF INACTIVE
     C                   seton                                        47
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00530'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movea     dfadcd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  IF INACTIVE
     C                   endif                                                  IF BAD COMBO
     C                   endif                                                  IF ADDITIVE
     C                   endif                                                  IF BAD RAT
      *
      *
      * If: a) hog group is not blank
      *     b) the group is not a BGF group
      *     c) the group is not a Continuous Flow group
      *     d) the group is valid and
      *     e) the ration code is valid
      * then, check that the group is the correct age for this ration
      *
     C                   if        dfhgcd <> *blank and hgppcd <> 'BGF  '       If OK
     C                             and hgcffl = no and *in32 = *off
     C                             and *in33 = *off
     C                   exsr      $age
     C                   endif                                                  If OK
      *
      *
      * If the Group is a BGF Group, then:
      * issue a Warning Message if the Phase of a Ration is different than the
      * Phase of the Group. Issue this warning only if there are no errors on
      * Ration/Additive.
      *
      *
     C                   if        *in33 = *off and *in47 = *off                IF MISMATCH
     C                             and dfrncd <> *blank
     C                             and rnppcd <> hdppcd
     C                             and hdppcd = 'BGF  '
     C                   if        error < maxmsg
     C                   add       1             error
     C                   add       1             warmsg
     C                   movel     'HS00239'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movea     rnppcd        mgw(6)
     C                   movea     dfhgcd        mgw(11)
     C                   movea     hdppcd        mgw(18)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  IF MISMATCH
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------
      * Calculate the 'age' of the group and compare it to the ration max age
      *-------------------------------------------------------------------------
      *
     C     $age          begsr
      *
      * Default the 'age' of the group to the 'average days old in'.
      *
     C                   z-add     hgadoi        wkdays
      *
      * If the 'ticket date' is after the 'open date' of the group,
      * move the 'ticket date' and the 'open date' of the group to date format fields.
      * Find the number of days between the 'ticket date' and the 'open date'.
      * add this difference to the 'average days old in'.
      *
     C                   if        wktkdt > hgopdt and hgopdt <> 0              If need to calc
     C     *iso          move      wktkdt        wkisotkdt
     C     *iso          move      hgopdt        wkisoopdt
     C     wkisotkdt     subdur    wkisoopdt     wkdays:*d
     C                   add       hgadoi        wkdays
     C                   endif                                                  If need to calc
      *
      * Check 'age' against ration's max.
      *
     C                   if        rnmaxday < wkdays                            If too old
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00525'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfrncd        mgw(1)
     C                   movel     rnmaxday      wkdaysalph
     C                   movea     wkdaysalph    mgw(6)
     C                   movea     dfhgcd        mgw(9)
     C                   movel     wkdays        wkdaysalph
     C                   movea     wkdaysalph    mgw(16)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If too old
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Feed Type Code
      *-------------------------------------------------------------------
      *
     C     $ftcd         begsr
      *
     C     dfftcd        chain     hsp024                             92
     C                   if        *in92 = *on                                  IF BAD TYPE
     C                   seton                                        48
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00201'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfftcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Feed Manufacturing Type must have an active status
      *
     C                   if        ftftst = 'I'
     C                   seton                                        48
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00208'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfftcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif
     C                   endif                                                  IF BAD TYPE
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Reset indicators
      *-------------------------------------------------------------------
      *
     C     $ind          begsr
      *
      * If the Ticket was deleted out from under the user, then set *in90 back on
      * to control available function keys and input fields.
      *
     C                   if        notflg = yes
     C                   seton                                        90
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set off the indicators on the subfile record
      *----------------------------------------------------------------
      *
     C     $setof        begsr
      *
     C                   setoff                                       313233
     C                   setoff                                       3435
     C                   setoff                                       404147
     C                   setoff                                       48
     C                   setoff                                       515253
     C                   setoff                                       5758
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Delete the Feed Ticket Header
      *-------------------------------------------------------------------
      *
     C     $dltfh        begsr
      *
     C     svtkno        chain     hsp237                             92
     C                   if        *in92 = *off
     C                   delete    uhrec
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Delete the Feed Ticket Detail records
      *-------------------------------------------------------------------
      *
     C     $dltfd        begsr
      *
     C     svtkno        setll     hsp238
     C                   setoff                                       93
     C                   dou       *in93 = *on                                  DO DETAIL
     C     svtkno        reade     hsp238                                 93
     C                   if        *in93 = *off
     C                   delete    udrec
     C                   endif
     C                   enddo                                                  DO DETAIL
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Revise a Feed Ticket
      *-------------------------------------------------------------------
      *
     C     $revtk        begsr
      *
      * Delete Existing Header/Detail records
      *
     C                   exsr      $dltfh
     C                   exsr      $dltfd
      *
      * Create new Header/Detail records
      *
     C                   exsr      $crtfh
     C                   exsr      $crtfd
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Create a Feed Ticket Header record
      *-------------------------------------------------------------------
      *
     C     $crtfh        begsr
      *
     C                   movel     c1fmbo        uhfmbo
     C                   z-add     c1tkno        uhtkno
     C                   movel     c1prfl        uhprfl
     C                   movel     c1csfl        uhcsfl
     C                   movel     c1vino        uhvino
      *
     C                   movel     fsrgcd        uhrgcd
     C                   z-add     fsfscd        uhfscd
     C                   z-add     wktkdt        uhtkdt
     C                   movel     no            uherfl
      *
     C                   write     uhrec
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * Create Feed Ticket Detail records
      *-------------------------------------------------------------------
      *
     C     $crtfd        begsr
      *
     C                   z-add     0             wklnno
      *
      * First, setup the values for fields that won't change per line
      *
     C                   z-add     c1tkno        udtkno
      *
      *
      *---------------------------------------------------------------
      * Read/Process all changed subfile records
      *---------------------------------------------------------------
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  DO READ C
     C                   readc     hp130s1                                80
     C                   if        *in80 = *off and dfbncd <> *blank            IF REC READ
      *
     C                   movel     dfbncd        udbncd
     C                   movel     dfrncd        udrncd
     C                   movel     dfadcd        udadcd
     C                   movel     dfftcd        udftcd
     C                   z-add     dffdlb        udfdlb
     C                   z-add     dfinam        udinam
     C                   z-add     dfmdam        udmdam
     C                   z-add     dfmfam        udmfam
     C                   z-add     hdhgsn        udhgsn
     C                   move      hdppcd        udppcd
      *
      * If the Bin was Direct, set the Allocated Flag to 'D'.
      * For Shared bins, set the Allocated Flag to T=To Be Allocated.
      *
     C                   if        hddir = yes
     C                   movel     'D'           udalfl
     C                   movel     hdblcd        udblcd
     C                   movel     hdrmcd        udrmcd
     C                   else
     C                   movel     'T'           udalfl
     C                   move      *blank        udblcd
     C                   move      *blank        udrmcd
     C                   endif
      *
     C                   add       1             wklnno
     C                   z-add     wklnno        udlnno
     C                   write     udrec
      *
     C                   endif                                                  IF REC READ
     C                   enddo                                                  DO READ C
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------
      * F4 Prompt for Screen 1
      *-------------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Set off prompt indicators in all subfile records.
      *
     C                   exsr      $offsf
      *
      *----------------------------------------------------------------
      * Prompted fields in Control Record
      *----------------------------------------------------------------
      *
      * Feed Mill Business Office
      *
     C                   select
     C                   when      fld = 'C1FMBO'
     C                   CALL      'HP503'
     C                   parm      *blank        xxfmbo
     C                   parm      *blank        xxbods
     C                   parm      'FEED '       xxdvcd
     C                   seton                                        51
     C                   if        xxfmbo <> *blank
     C                   movel     xxfmbo        c1fmbo
     C                   endif
      *
      * Farm site
      *
     C                   when      fld = 'C1FSCD'
     C                   call      'HP5004'
     C                   parm      c1fmbo        xxfmbo
     C                   parm      0             wkfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        56
     C                   if        wkfscd <> 0
     C                   z-add     wkfscd        c1fscd
     C                   movel     xxfsnm        c1fsnm
     C                   endif
      *
      * Produced Feed Flag
      *
     C                   when      fld = 'C1PRFL'
     C                   call      'HP522'
     C                   parm      *blank        xxprfl
     C                   seton                                        59
     C                   if        xxprfl <> *blank
     C                   movel     xxprfl        c1prfl
     C                   endif
      *
      * If 'COST THRU SYSTEM FLAG'
      *
     C                   when      fld = 'C1CSFL'
     C                   move      *blank        c1csfl
     C                   call      'HP522'
     C                   parm                    xxcsfl
     C                   seton                                        55
     C                   if        xxcsfl <> *blank
     C                   movel     xxcsfl        c1csfl
     C                   endif
      *
      *----------------------------------------------------------------
      * Prompted fields in the subfile
      *----------------------------------------------------------------
      *
      * Bin
     C                   when      fld = 'DFBNCD'
     C                   call      'HP532'
     C                   parm                    c1fscd
     C                   parm      *blank        xxbncd
     C                   parm                    xxbicd
     C                   exsr      $rrn1
      *
     C                   if        *in78 = *off                                 IF chain OK
     C                   if        xxbncd <> *blank
     C                   move      xxbncd        dfbncd
     C                   endif
     C                   seton                                        8551
     C                   exsr      $ind
     C                   update    hp130s1
     C                   setoff                                       8551
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  IF chain OK
      *
      *----------------------------------------------------------------
      * If Hog Group, you have to chain to the subfile record to get the Bin
      * to use as an input parm. And, F4 is only allowed for Direct Bins.
      * So, you must run the Bin Edits before calling the select window.
      *
     C                   when      fld = 'DFHGCD'
     C                   move      *blank        xxhgcd
     C                   exsr      $rrn1
     C                   if        *in78 = *off                                 IF chain OK
     C                   exsr      $bncd
     C                   endif
     C                   if        hddir = no                                   IF SHARED
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00328'     mgid(e)
     C                   endif
     C                   else
     C                   call      'HP533'
     C                   parm                    c1fscd
     C                   parm                    dfbncd
     C                   parm                    xxhgcd
     C                   exsr      $rrn1
     C                   endif                                                  IF SHARED
      *
     C                   if        *in78 = *off                                 IF chain OK
     C                   if        xxhgcd <> *blank
     C                   movel     xxhgcd        dfhgcd
     C                   endif
     C                   seton                                        8552
     C                   exsr      $ind
     C                   update    hp130s1
     C                   setoff                                       855232
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  IF chain OK
      *
      *----------------------------------------------------------------
      * Ration code
     C                   when      fld = 'DFRNCD'
     C                   call      'HP581'
     C                   parm      *blank        xxrncd
     C                   parm      *blank        xxrnds
     C                   exsr      $rrn1
      *
     C                   if        *in78 = *off                                 IF chain OK
     C                   if        xxrncd <> *blank
     C                   move      xxrncd        dfrncd
     C                   endif
     C                   seton                                        8553
     C                   exsr      $ind
     C                   update    hp130s1
     C                   setoff                                       8553
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  IF chain OK
      *
      *----------------------------------------------------------------
      * Additive code
     C                   when      fld = 'DFADCD'
     C                   call      'HP520'
     C                   parm      dfrncd        xxrncd
     C                   parm      *blank        xxadcd
     C                   parm      *blank        xxadds
     C                   exsr      $rrn1
      *
     C                   if        *in78 = *off                                 IF chain OK
     C                   if        xxadcd <> *blank
     C                   move      xxrncd        dfrncd
     C                   move      xxadcd        dfadcd
     C                   endif
     C                   seton                                        8557
     C                   exsr      $ind
     C                   update    hp130s1
     C                   setoff                                       8557
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  IF chain OK
      *
      *----------------------------------------------------------------
      * Feed Manufacturing Type
      *
     C                   when      fld = 'DFFTCD'
     C                   call      'HP518'
     C                   parm      *blank        xxftcd
     C                   parm      *blank        xxftds
     C                   exsr      $rrn1
      *
     C                   if        *in78 = *off                                 IF chain OK
     C                   if        xxftcd <> *blank
     C                   move      xxftcd        dfftcd
     C                   endif
     C                   seton                                        8558
     C                   exsr      $ind
     C                   update    hp130s1
     C                   setoff                                       8558
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  IF chain OK
     C                   other
      *
      *----------------------------------------------------------------
      * F4 not valid for this field; so, issue message
      *
     C                   if        error < maxmsg                               If first error
     C                   add       1             error
     C                   movel     'HS09011'     mgid(e)
     C                   if        error = 1
     C                   z-add     wkflow        hdpag1
     C                   endif
     C                   endif                                                  If first error
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------
      * Set the subfile to redisplay at the first page that has errors on Screen 1
      *----------------------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   z-add     hdrrn1        hdpag1
     C                   endif
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * $exit - seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------
      * Routine to find/retrieve the subfile record to update
      * when returning from a select program on screen 1
      *--------------------------------------------------------------------
      *
      * HDRR1 is the hidden field associated with the keyword SFLCSRRRN
      * on the control record in the DSPF.
      * HDRRN1 is the value associated with the keyword 'SFILE' in
      * the F-specs for the workstation.
      *
     C     $rrn1         begsr
      *
     C                   setoff                                       78
      *
     C                   if        hdrr1 <> 0
     C                   z-add     hdrr1         hdrrn1
     C     hdrrn1        chain     hp130s1                            78
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm list
      *
     C     *entry        plist
     C                   parm                    dfmode
     C     c1tkno        parm                    iptkno
     C     c1mdy         parm                    ipmdy
     C                   parm                    rtncd
      *
     C                   z-add     c1tkno        svtkno
     C                   z-add     c1mdy         svmdy
      * Key lists
      *
     C     key01         klist
     C                   kfld                    c1fmbo
     C                   kfld                    c1tkno
     C                   kfld                    wktype
      *
     C     key02         klist
     C                   kfld                    bnfscd
     C                   kfld                    bnbicd
      *
     C     key03         klist
     C                   kfld                    dfrncd
     C                   kfld                    dfadcd
      *
     C     key04         klist
     C                   kfld                    c1fscd
     C                   kfld                    dfbncd
      *
     C     key05         klist
     C                   kfld                    c1fscd
     C                   kfld                    dfhgcd
      *
      *
      * Bring in the Data Areas
      *
     C                   in        dafdsn
     C                   in        daaper
      *
      * Use the System Date for editing and timestamping.
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkudat
      *
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   z-add     6             wkplin                         sflpag
     C                   eval      wkrlin = wkplin - 1
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
