     H/TITLE Cpy Premium           PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 06/16/05  Time  : 10:26:31
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPKDGPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Cpy Premium           PV  Prompt & validate record
      *
     FPKBZREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Col  Retrieval index
      *
     FPKBYREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Row  Retrieval index
      *
     FPKARREL0IF  E           K        DISK
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPKBZREL0IF  E           K        DISK                      A
      * UPD : Carcass Merit Matrix Col  Update index
      *
      * Set wdw location allowed?
     E                    YSL         1  1
     I@BZREGI
      * Carcass Merit Matrix Col  Retrieval index
      * Renamed input format fields
     I              BZAMCD                          WAAMCD
     I              BZE8NB                          WAE8NB
     I              BZE4NB                          WAE4NB
     I              BZA1PC                          WAA1PC
     I              BZE7NB                          WAE7NB
     I              BZCHCD                          WACHCD
     I              BZERNB                          WAERNB
     I              BZAAVN                          WAAAVN
     I              BZAADT                          WAAADT
     I              BZAMTM                          WAAMTM
     I              BZAJST                          WAAJST
     I              BZAHVN                          WAAHVN
     I              BZAGVN                          WAAGVN
     I              BZABVN                          WAABVN
     I              BZABDT                          WAABDT
     I              BZABTM                          WAABTM
      *
     I@BZREGH
      * Carcass Merit Matrix Col  Update index
      * Renamed input format fields
     I              BZAMCD                          WBAMCD
     I              BZE8NB                          WBE8NB
     I              BZE4NB                          WBE4NB
     I              BZA1PC                          WBA1PC
     I              BZE7NB                          WBE7NB
     I              BZCHCD                          WBCHCD
     I              BZERNB                          WBERNB
     I              BZAAVN                          WBAAVN
     I              BZAADT                          WBAADT
     I              BZAMTM                          WBAMTM
     I              BZAJST                          WBAJST
     I              BZAHVN                          WBAHVN
     I              BZAGVN                          WBAGVN
     I              BZABVN                          WBABVN
     I              BZABDT                          WBABDT
     I              BZABTM                          WBABTM
      *
     I@ARREBF
      * Carcass Merit Program     Retrieval index
      * Renamed input format fields
     I              ARAMCD                          WCAMCD
     I              ARA3TX                          WCA3TX
     I              ARDLST                          WCDLST
     I              ARDMST                          WCDMST
     I              ARDOST                          WCDOST
     I              ARDQST                          WCDQST
     I              ARAZPC                          WCAZPC
     I              ARA0PC                          WCA0PC
     I              ARDTST                          WCDTST
     I              ARF5ST                          WCF5ST
     I              ARI1PR                          WCI1PR
     I              ARVEPR                          WCVEPR
     I              ARVFPR                          WCVFPR
     I              ARVHPR                          WCVHPR
     I              ARVIPR                          WCVIPR
     I              ARVJPR                          WCVJPR
     I              ARZ2ST                          WCZ2ST
     I              ARZ3ST                          WCZ3ST
     I              ARZ4ST                          WCZ4ST
     I              ARAAVN                          WCAAVN
     I              ARAADT                          WCAADT
     I              ARAMTM                          WCAMTM
     I              ARAJST                          WCAJST
     I              ARAHVN                          WCAHVN
     I              ARAGVN                          WCAGVN
     I              ARABVN                          WCABVN
     I              ARABDT                          WCABDT
     I              ARABTM                          WCABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IQPKBZ1    E DSPKBZREL0
      * UPD : Carcass Merit Matrix Col  Update index
      * Renamed input format fields
     I              BZAMCD                          WBAMCD
     I              BZE8NB                          WBE8NB
     I              BZE4NB                          WBE4NB
     I              BZA1PC                          WBA1PC
     I              BZE7NB                          WBE7NB
     I              BZCHCD                          WBCHCD
     I              BZERNB                          WBERNB
     I              BZAAVN                          WBAAVN
     I              BZAADT                          WBAADT
     I              BZAMTM                          WBAMTM
     I              BZAJST                          WBAJST
     I              BZAHVN                          WBAHVN
     I              BZAGVN                          WBAGVN
     I              BZABVN                          WBABVN
     I              BZABDT                          WBABDT
     I              BZABTM                          WBABTM
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Carcass Merit Matrix Row
      * I : MAP CMP Program Code
     I                                        1   3 P1AMCD
      * I : MAP CMMR Row Number
     I                                    P   4   50P1E8NB
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AMCD    PARM           WP0001  3        CMP Program Cod
     C           P1E8NB    PARM           WP0002  30       CMMR Row Number
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Reposition window
     C   26                CAS            ZRRPWD
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
     C                     Z-ADD1         YWPNNO  10       Panel number
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
     C                     Z-ADD1         W0WASM  10
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
      * Cpy Premium           RT - Carcass Merit Matrix Col  * 
     C                     EXSR SARVGN
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * Chk Row Existance     RT - Carcass Merit Matrix Row  * 
     C                     EXSR SCRVGN
      * CASE: WRK.Record Found CMM USR is Record Not Found
     C           WUDRST    IFEQ 'N'                        *IF
      * Send message 'Carcass Merit Matrix R NF'
     C                     MOVEL'PRK0132' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Check reference to Carcass Merit Program
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Row Number USR required
     C           #DFANB    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Update screen time
     C                     TIME           ##TME
      * Enable PUTOVR
     C                     SETON                         86*
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     EXSR ZVCFPM
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'PKVLLWR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #1EGNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     #1EHNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     #1EINB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     #1EJNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     #1EKNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     #1AQPC           CMMR Std Dressi
     C                     Z-ADD*ZERO     #1EMNB           CMMR Sort Disco
     C                     Z-ADD*ZERO     #1E2NB           CMMR Unused Fie
     C                     Z-ADD*ZERO     #1LJA1           CMMR Midpoint
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     MOVELP1AMCD    #1AMCD           CMP Program Cod
     C                     Z-ADDP1E8NB    #1E8NB           CMMR Row Number
     C                     Z-ADD*ZERO     #DFANB           Row Number USR
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Cpy Premium           RT - Carcass Merit Matrix Col  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAMCD    WQSA01           CMP Program Cod
     C           *LIKE     DEFN WAE8NB    WQSA02           CMMR Row Number
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           CMP Program Cod
     C                     KFLD           WQSA02           CMMR Row Number
      * Setup key
     C                     MOVEL#1AMCD    WQSA01           CMP Program Cod
     C                     Z-ADD#1E8NB    WQSA02           CMMR Row Number
      * Establish starting position
     C           KRSSA     SETLL@BZREGI                    *
     C           KRSSA     READE@BZREGI                  90*
      * Data record not found
     C   90                MOVEL'PRK0134' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Crt CMM Col           CR - Carcass Merit Matrix Col  * 
     C                     EXSR SBCRRC
     C           KRSSA     READE@BZREGI                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCRRC    BEGSR
      *================================================================
      * Crt CMM Col           CR - Carcass Merit Matrix Col  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @BZREGH
     C                     MOVELWAAMCD    WBAMCD           CMP Program Cod
     C                     Z-ADD#DFANB    WBE8NB           CMMR Row Number
     C                     Z-ADDWAE4NB    WBE4NB           CMMC Column Num
     C                     Z-ADDWAA1PC    WBA1PC           CMMC Lean Perce
     C                     Z-ADDWAE7NB    WBE7NB           CMMC Backfat In
     C                     MOVELWACHCD    WBCHCD           CMMC Grade
     C                     Z-ADDWAERNB    WBERNB           CMMC Premium Va
     C                     MOVELWAAAVN    WBAAVN           RS User Changed
     C                     Z-ADDWAAADT    WBAADT           RS Date Changed
     C                     Z-ADDWAAMTM    WBAMTM           RS Time Changed
     C                     MOVELWAAJST    WBAJST           RS Record Statu
     C                     MOVELWAAHVN    WBAHVN           RS Job
     C                     MOVELWAAGVN    WBAGVN           RS Program
     C                     MOVELWAABVN    WBABVN           RS User Added
     C                     Z-ADDWAABDT    WBABDT           RS Date Added
     C                     Z-ADDWAABTM    WBABTM           RS Time Added
      *
      * USER: Processing before Data update
      * Rtv Add Stamp         IF
     C                     MOVEL'A'       WBAJST           RS Record Statu
     C                     MOVEL##USR     WBABVN           RS User Added
     C                     Z-ADD##JDT     WBABDT           RS Date Added
     C                     Z-ADD##JTM     WBABTM           RS Time Added
     C                     MOVEL##PGM     WBAGVN           RS Program
     C                     MOVEL##JOB     WBAHVN           RS Job
     C           KLCRSB    KLIST
     C                     KFLD           WBAMCD           CMP Program Cod
     C                     KFLD           WBE8NB           CMMR Row Number
     C                     KFLD           WBE4NB           CMMC Column Num
      * Check for duplicate primary key
     C           KLCRSB    SETLL@BZREGH                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'PRK0135' W0RTN   7
      * Send message 'Carcass Merit Matrix C EX'
     C                     MOVEL'PRK0135' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C                     WRITE@BZREGH                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Chk Row Existance     RT - Carcass Merit Matrix Row  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WUDRST           Record Found CM
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BYAMCD           CMP Program Cod
     C                     KFLD           BYE8NB           CMMR Row Number
      * Setup key
     C                     MOVEL#1AMCD    BYAMCD           CMP Program Cod
     C                     Z-ADD#DFANB    BYE8NB           CMMR Row Number
      * Establish starting position
     C           KRSSC     CHAIN@BYREGF              90    *
      * Data record not found
     C   90                MOVEL'PRK0132' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUDRST           Record Found CM
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Carcass Merit Program
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1AMCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        CMP Program Cod
     C           YPMTFD    OREQ '#1AMCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AMCD' defaulted for 'CMP Program Code'.
     C                     CALL 'PKBASRR'              90  Sel Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C           #1AMCD    PARM #1AMCD    WQ0001  3        CMP Program Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBASRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AMCD    IFNE *BLANK                     CMP Program Cod
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1AMCD    IFEQ *BLANK                     CMP Program Cod
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAWC    KLIST
     C                     KFLD           WCAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WCAMCD
     C           KLVAWC    CHAIN@ARREBF              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Carcass Merit Program  NF'
     C                     MOVEL'PRK0039' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'PRK0039' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         YKDDW1    BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *================================================================
     CSR         YKEXT1    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ##WSR     MULT 256       ZWORK   50
     C                     ADD  ##WSC     ZWORK
     C                     SUB  ZWORK     ZINPOS
     C                     SUB  1         ZINPOS
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           ZHCSRW    SUB  ##WSR     YWPORW  30
     C           ZHCSCL    SUB  ##WSC     YWPOC1  30
     C                     SUB  1         YWPOC1
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'PKDGPVRH'W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWPORW    YYRW    50       Row
     C                     PARM YWPOC1    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                     MOVEL'Y'       YSL,1            Set wdw locatio
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
      *
      * Redisplay previous panel
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZSSTLC    BEGSR
      *================================================================
      * Set window location
      *================================================================
     C           YSL,1     IFEQ 'Y'                        Set wdw locatio
     C                     MOVEL'*CALC'   YWWDCR           Window referenc
     C                     Z-ADD-3        YWWDRW           Window start ro
     C                     Z-ADD-3        YWWDCL           Window start co
     C                     Z-ADD036       YWWDWD           Window width
     C                     Z-ADD012       YWWDDP           Window depth
     C                     MOVEL'N'       YSL,1            Set wdw locatio
      *
     C                     EXSR ZURTLC                     Retrieve window
     C                     EXSR ZTWDFD                     Move window fie
     C                     END
      *================================================================
     CSR         ZSEXIT    ENDSR
      /EJECT
     CSR         ZTWDFD    BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                     Z-ADDYWWDRW    ##WSR            Window start ro
     C                     Z-ADDYWWDCL    ##WSC            Window start co
     C                     EXSR YKDDW1
      *================================================================
     CSR         ZTEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZVCFPM    BEGSR
      *================================================================
      * Set Confirm Prompt window location
      *================================================================
      *
     C           ##WSR     ADD  012       YWWDRW
     C           ##WSC     ADD  036       YWWDCL
      *
     C                     ADD  1         YWWDCL
     C                     SUB  1         YWWDRW           Window start ro
     C                     SUB  21        YWWDCL           Window start co
     C                     Z-ADD18        YWWDWD           Window width
     C                     Z-ADD2         YWWDDP           Window depth
     C                     MOVEL'*TL  '   YWWDCR           Window referenc
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN           Retrieval Funct
     C                     EXSR ZURTLC                     Retrieve window
     C                     Z-ADDYWWDRW    ##WSRC           *Window start r
     C                     Z-ADDYWWDCL    ##WSCC           *Window start c
      *
      *================================================================
     CSR         ZVEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialise Allow Set Window Location flags
     C                     MOVEA*ALL'Y'   YSL
      * Set display size
     C                     SETOF                         93*
     C           @#SCRW    COMP 27                       93*
      * Initialise window location variables.
     C                     Z-ADD*ZEROS    ##WSR
     C                     Z-ADD*ZEROS    ##WSC
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAE8NB           CMMR Row Number
     C                     Z-ADD*ZERO     WAE4NB           CMMC Column Num
     C                     Z-ADD*ZERO     WAA1PC           CMMC Lean Perce
     C                     Z-ADD*ZERO     WAE7NB           CMMC Backfat In
     C                     Z-ADD*ZERO     WAERNB           CMMC Premium Va
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Record Found CMM USR
     C                     MOVEL*BLANK    WUDRST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WCA0PC           CMP Lean Factor
     C                     Z-ADD*ZERO     WCI1PR           CMP Market Add/
     C                     Z-ADD*ZERO     WCVEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     WCVFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     WCVHPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WCVIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WCVJPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WCAADT           RS Date Changed
     C                     Z-ADD*ZERO     WCAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WCABDT           RS Date Added
     C                     Z-ADD*ZERO     WCABTM           RS Time Added
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL*BLANK    W0GRP   1
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
