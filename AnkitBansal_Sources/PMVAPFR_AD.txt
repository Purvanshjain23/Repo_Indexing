// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMVAPFR
// ?Date: 14.08.2025 Time: 12:05:47
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.Status - Y or N = CND.yes
PAR.Status_Y_or_N = 'Y';

// WRK.Record Processed Usr = CND.No
WRK.Record_Processed_Usr = 'N';

//?USER: Record selection processing

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(Rtv Customer Type     RT) TYPE(RTVOBJ) FILE(CAEOREP)           AC1585599;
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(LCL.Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?** Select Co# if passed in, else skip
CASE;

// IF PAR.Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

CASE;

// IF DB1.Company Number NE PAR.Company Number
IF DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select ASD *ge from date
CASE;

// IF DB1.Actual Shipped Date LT PAR.Actual Shipped Date
IF DB1.Actual_Shipped_Date < PAR.Actual_Shipped_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select ASD *le thru date
CASE;

// IF DB1.Actual Shipped Date GT PAR.To Date               USR
IF DB1.Actual_Shipped_Date > PAR.To_Date_USR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select only inter-company records
CASE;

// IF DB1.Type Code is Inter Company
IF DB1.Type_Code = 'IC';

//?** Select only inter-company records
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

// WRK.IGTS Commodity Group = CND.CWG
WRK.IGTS_Commodity_Group = 'CWG';

EXECUTE FUNCTION(RTV Mkt by Itm/Com Grp RT) TYPE(RTVOBJ) FILE(PMDNREP)          AC1885688;
PARAMETER(DB1.Shipped_Item_Code);
PARAMETER(WRK.IGTS_Commodity_Market);
PARAMETER(WRK.IGTS_Commodity_Group);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


//?** Select only if the item code matches CWG Item Group in PMDNREP
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

CASE;

// IF PAR.Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

// TOP.Company Name = CON.*All
TOP_Company_Name = *All;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// TOP.From Date             USR = PAR.Actual Shipped Date
TOP_From_Date_USR = PAR.Actual_Shipped_Date;

// TOP.Thru Date             USR = PAR.To Date               USR
TOP_Thru_Date_USR = PAR.To_Date_USR;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Actual Shipped Date header format

// SUPPRESSED PRINT Order Number header format

// SUPPRESSED PRINT Order Sequence Number header format

// SUPPRESSED PRINT Order Secondary Line Seq header format

// SUPPRESSED PRINT Shipped Item Code header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

// CUR.Commodity Market Desc = CON.*BLANK
CUR.Commodity_Market_Desc = *BLANK;

EXECUTE FUNCTION(RTV Next Saturday      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1674395;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Actual_Shipped_Date);
PARAMETER(WRK.Saturday_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Scheduled Ship Date = DB1.Post to G/L Date
 PAR.Scheduled_Ship_Date = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

}


//?W97198 DN 04/11/22-Moved 'RTV Market Price       RT' Below.
//?W97198 DN 04/11/22-If Co 440, Use 'JLX' to Get Market Price for STF.
CASE;

// IF CUR.Company Number is Seaboard Triumph Foods
IF CUR.Company_Number = 440;

// WRK.IGTS Commodity Market = CND.Jacobsen Lttr Chicago STF
WRK.IGTS_Commodity_Market = 'JLX';

ENDIF;

EXECUTE FUNCTION(RTV Market Price       RT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC1199313;
PARAMETER(WRK.IGTS_Commodity_Market);
PARAMETER(WRK.IGTS_Commodity_Group);
PARAMETER(WRK.Saturday_USR);
PARAMETER(WRK.Commodity_Market_Price);
PARAMETER(NLL.USR_Date_Priced);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Commodity Market Price = DB1.Commodity Market Price
 PAR.Commodity_Market_Price = DB1.Commodity_Market_Price;

 // PAR.USR Date Priced = DB1.Market Price Date
 PAR.USR_Date_Priced = DB1.Market_Price_Date;

 QUIT;

}


//?** Skip printing if there is no record
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

//?** Skip printing if there is no record
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF WRK.Commodity Market Price EQ DB1.Unit Price
IF WRK.Commodity_Market_Price = DB1.Unit_Price;

//?W97198 DN 04/11/22-Get Commodity Market Desc Instead of Hard Coding.
EXECUTE FUNCTION(RTV Commod. Mkts Desc  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1277934;
PARAMETER(WRK.IGTS_Commodity_Market);
PARAMETER(CUR.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Commodity Market Desc = CON.TP Average
CUR.Commodity_Market_Desc = 'TP Average';

ENDIF;

ENDIF;

// PAR.Status - Y or N = CND.no
PAR.Status_Y_or_N = 'N';

EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
PARAMETER(CUR.Shipped_Item_Code);
PARAMETER(CUR.Item_Description);
PARAMETER(NLL.Description_Line_Two);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Shipped Item Code totals format

// SUPPRESSED PRINT Order Secondary Line Seq totals format

// SUPPRESSED PRINT Order Sequence Number totals format

// SUPPRESSED PRINT Order Number totals format

CASE;

IF NEW Actual_Shipped_Date;
// Print Actual Shipped Date totals format
PRINT Actual Shipped Date totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

