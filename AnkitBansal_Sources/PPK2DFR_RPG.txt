     H/TITLE WW Customer Claim      DF Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISAKANA
     H* Date          : 02/17/25  Time  : 02:53:22
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPPK2DFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: WW Customer Claim      DF Display file
      *
     FPDMKCPL2  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RSQ : AR Claim Header           claim number (d)
      *
     FCAAPREL2  IF   E           K DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FPDMOCPL2  IF   E           K DISK
      * RSQ : AR Claim Product         Co/Item/Seq/LnSeq
      *
     FPDMNCPL2  IF   E           K DISK
      * RTV : AR Claim Explanation      Retrieval Index Expl Onl
      *
     FPDMNCPL4  IF   E           K DISK
      * RTV : AR Claim Explanation      Retrieval Index Intr Onl
      *
     FPPA3CPL2  IF   E           K DISK
      * RSQ : AR Claim Resale           By Claim
      *
     FPPA1CPL1  IF   E           K DISK
      * RTV : AR Claim Expense          Retrieval index
      *
     FOPBGWKL6  IF   E           K DISK
      * RSQ : Order Detail              Co/Order/Item
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FCADRREL1  IF   E           K DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1  IF   E           K DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCAAPREL1  IF   E           K DISK
      * RTV : Salesperson               Retrieval index       NV
      *
     FPDMNCPL7  IF   E           K DISK
      * RSQ : AR Claim Explanation      Claim Exp/Clm/OpenAction
      *
     FPDMKCPL1  IF   E           K DISK
      * RTV : AR Claim Header           Retrieval index
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUC6REL1  IF   E           K DISK
      * RTV : OMS Transformation Ctl    Retrieval index
      *
     FPDMNCPL0  UF   E           K DISK
      * UPD : AR Claim Explanation      Update index
      *
     FPDMKCPL0  UF   E           K DISK
      * UPD : AR Claim Header           Update index
      *
      * Days in month for date validation
     D @XD             S              2  0 DIM(12)CTDATA PERRCD(12)
      * Screen: Field position and name array
     D W0BEG           S              5  0 DIM(037)CTDATA PERRCD(7)ASCEND
     D W0END           S              5  0 DIM(037)CTDATA PERRCD(7)ASCEND
     D W0NAM           S             10    DIM(037)CTDATA PERRCD(7)
      * Long constants
     D @CN#            S              6    DIM(14)CTDATA PERRCD(1)
     D @CN             S             25    DIM(14) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDOFF           DS
      * Cut-off year
     D  XOFF                   1      4  0
     D  XOFFYY                 3      4  0
      * Outward parameters
     D PARC            DS             4
      * KEY : AR Claim Header           Retrieval index
      * I : RST Claim Number
     D  PAC0C7                 1      4P 0
      *
      * Outward parameters
     D PBRC            DS            13
      * KEY : AR Claim Explanation      By Notedate/Usr Seq#/Seq
      * I : RST Claim Number
     D  PBC0C7                 1      4P 0
      *
      * Outward parameters
     D PCRC            DS             4
      * KEY : AR Claim Header           Retrieval index
      * I : RST Claim Number
     D  PCC0C7                 1      4P 0
      *
      * Outward parameters
     D PDRC            DS             4
      * KEY : AR Claim Header           Retrieval index
      * I : RST Claim Number
     D  PDC0C7                 1      4P 0
      *
     D QPDMN1        E DS                  EXTNAME(PDMNCPL0)
      * UPD : AR Claim Explanation      Update index
      * Renamed input format fields
     D  WDC0C7       E                     EXTFLD(MNC0C7)
     D  WDAANX       E                     EXTFLD(MNAANX)
     D  WDPYTX       E                     EXTFLD(MNPYTX)
     D  WDLGNY       E                     EXTFLD(MNLGNY)
     D  WDRRDT       E                     EXTFLD(MNRRDT)
     D  WDL1TX       E                     EXTFLD(MNL1TX)
     D  WDN7T1       E                     EXTFLD(MNN7T1)
     D  WDRSDT       E                     EXTFLD(MNRSDT)
     D  WDC9TM       E                     EXTFLD(MNC9TM)
     D  WDL2TX       E                     EXTFLD(MNL2TX)
     D  WDVSST       E                     EXTFLD(MNVSST)
     D  WDMJDT       E                     EXTFLD(MNMJDT)
     D  WDBETM       E                     EXTFLD(MNBETM)
     D  WDCCVN       E                     EXTFLD(MNCCVN)
     D  WDCDVN       E                     EXTFLD(MNCDVN)
     D  WDMKDT       E                     EXTFLD(MNMKDT)
     D  WDBFTM       E                     EXTFLD(MNBFTM)
     D  WDCEVN       E                     EXTFLD(MNCEVN)
     D  WDCFVN       E                     EXTFLD(MNCFVN)
      *
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
     D QPDMK1        E DS                  EXTNAME(PDMKCPL0)
      * UPD : AR Claim Header           Update index
      * Renamed input format fields
     D  WEC0C7       E                     EXTFLD(MKC0C7)
     D  WEZLCD       E                     EXTFLD(MKZLCD)
     D  WEBIC3       E                     EXTFLD(MKBIC3)
     D  WEALNX       E                     EXTFLD(MKALNX)
     D  WERMNB       E                     EXTFLD(MKRMNB)
     D  WEC3C7       E                     EXTFLD(MKC3C7)
     D  WERFTX       E                     EXTFLD(MKRFTX)
     D  WECHSX       E                     EXTFLD(MKCHSX)
     D  WECJSX       E                     EXTFLD(MKCJSX)
     D  WEAYVL       E                     EXTFLD(MKAYVL)
     D  WEAZVL       E                     EXTFLD(MKAZVL)
     D  WEA0VL       E                     EXTFLD(MKA0VL)
     D  WEPQTX       E                     EXTFLD(MKPQTX)
     D  WECNSX       E                     EXTFLD(MKCNSX)
     D  WEPLTX       E                     EXTFLD(MKPLTX)
     D  WECOSX       E                     EXTFLD(MKCOSX)
     D  WEPMTX       E                     EXTFLD(MKPMTX)
     D  WECPSX       E                     EXTFLD(MKCPSX)
     D  WEA1VL       E                     EXTFLD(MKA1VL)
     D  WEPNTX       E                     EXTFLD(MKPNTX)
     D  WEPOTX       E                     EXTFLD(MKPOTX)
     D  WEMLDT       E                     EXTFLD(MKMLDT)
     D  WEEJDT       E                     EXTFLD(MKEJDT)
     D  WECQSX       E                     EXTFLD(MKCQSX)
     D  WEPPTX       E                     EXTFLD(MKPPTX)
     D  WEMMDT       E                     EXTFLD(MKMMDT)
     D  WEMNDT       E                     EXTFLD(MKMNDT)
     D  WEBGTM       E                     EXTFLD(MKBGTM)
     D  WECGVN       E                     EXTFLD(MKCGVN)
     D  WEC4C7       E                     EXTFLD(MKC4C7)
     D  WEO2NA       E                     EXTFLD(MKO2NA)
     D  WENFDT       E                     EXTFLD(MKNFDT)
     D  WEBJTM       E                     EXTFLD(MKBJTM)
     D  WECQVN       E                     EXTFLD(MKCQVN)
     D  WEMODT       E                     EXTFLD(MKMODT)
     D  WEBHTM       E                     EXTFLD(MKBHTM)
     D  WECHVN       E                     EXTFLD(MKCHVN)
     D  WECRSX       E                     EXTFLD(MKCRSX)
     D  WEMPDT       E                     EXTFLD(MKMPDT)
     D  WEBITM       E                     EXTFLD(MKBITM)
     D  WECIVN       E                     EXTFLD(MKCIVN)
     D  WETBTX       E                     EXTFLD(MKTBTX)
     D  WEEOVL       E                     EXTFLD(MKEOVL)
     D  WEEPVL       E                     EXTFLD(MKEPVL)
     D  WEP6DT       E                     EXTFLD(MKP6DT)
     D  WECRTM       E                     EXTFLD(MKCRTM)
     D  WEYSNX       E                     EXTFLD(MKYSNX)
     D  WET5SX       E                     EXTFLD(MKT5SX)
     D  WEF7PC       E                     EXTFLD(MKF7PC)
     D  WEF8PC       E                     EXTFLD(MKF8PC)
     D  WEF9PC       E                     EXTFLD(MKF9PC)
     D  WEEQVL       E                     EXTFLD(MKEQVL)
     D  WEERVL       E                     EXTFLD(MKERVL)
     D  WEESVL       E                     EXTFLD(MKESVL)
     D  WEETVL       E                     EXTFLD(MKETVL)
     D  WET7SX       E                     EXTFLD(MKT7SX)
     D  WET8SX       E                     EXTFLD(MKT8SX)
     D  WET9SX       E                     EXTFLD(MKT9SX)
     D  WEUASX       E                     EXTFLD(MKUASX)
     D  WEUBSX       E                     EXTFLD(MKUBSX)
     D  WEGAPC       E                     EXTFLD(MKGAPC)
     D  WEGBPC       E                     EXTFLD(MKGBPC)
     D  WEVSST       E                     EXTFLD(MKVSST)
     D  WEMJDT       E                     EXTFLD(MKMJDT)
     D  WEBETM       E                     EXTFLD(MKBETM)
     D  WECCVN       E                     EXTFLD(MKCCVN)
     D  WECDVN       E                     EXTFLD(MKCDVN)
     D  WEMKDT       E                     EXTFLD(MKMKDT)
     D  WEBFTM       E                     EXTFLD(MKBFTM)
     D  WECEVN       E                     EXTFLD(MKCEVN)
     D  WECFVN       E                     EXTFLD(MKCFVN)
     D  WETXAA       E                     EXTFLD(MKTXAA)
     D  WEC8AB       E                     EXTFLD(MKC8AB)
     D  WEEJAB       E                     EXTFLD(MKEJAB)
     D  WEDMAB       E                     EXTFLD(MKDMAB)
     D  WEWUU1       E                     EXTFLD(MKWUU1)
     D  WEXPU1       E                     EXTFLD(MKXPU1)
     D  WEFAVN       E                     EXTFLD(MKFAVN)
     D  WEBVTS       E                     EXTFLD(MKBVTS)
     D  WEWAU1       E                     EXTFLD(MKWAU1)
     D  WEFBVN       E                     EXTFLD(MKFBVN)
     D  WEBWTS       E                     EXTFLD(MKBWTS)
     D  WEWBU1       E                     EXTFLD(MKWBU1)
      *
     D WN0075          DS          2000
     D WN0076          DS          2000
     D YARDCS          DS          4974
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  W0MTX          S            132
     D  ZADFMF         S             10
     D  ZQ             S              5  0
     D  WUQKST         S              1
     D  YL0001         S              1
     D  YL0002         S              1
     D  YL0003         S              1
     D  YL0004         S              1
     D  YL0005         S              1
     D  YL0006         S              1
     D  WZZLCD         S                   LIKE(#2ZLCD)
     D  WZKPT1         S                   LIKE(#CKPT1)
     D  WZC0C7         S                   LIKE(#2C0C7)
     D  WZCHSX         S                   LIKE(#2CHSX)
     D  WZMNDT         S                   LIKE(#2MNDT)
     D  WZBIC3         S                   LIKE(#2BIC3)
     D  WZALNX         S                   LIKE(#2ALNX)
     D  WZRMNB         S                   LIKE(#2RMNB)
     D  WZC3C7         S                   LIKE(#2C3C7)
     D  WZRFTX         S                   LIKE(#2RFTX)
     D  WZCJSX         S                   LIKE(#2CJSX)
     D  WQB10X         S             10
     D  WQRFTX         S                   LIKE(#2RFTX)
     D  WQA5N          S              5  0
     D  WQC10X         S             10
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  WQA3N          S              3  0
     D  WQB3N          S              3  0
     D  WQC3N          S              3  0
     D  WQD1           S              1
     D  WQE1           S              1
     D  WQF1           S              1
     D  WQG3N          S              3  0
     D  Y0CX01         S              1
     D  Y0CX02         S              1
     D  WQSB01         S                   LIKE(MOC0C7)
     D  WQSB02         S                   LIKE(MOBIC3)
     D  WQSC01         S                   LIKE(MNC0C7)
     D  WQSD01         S                   LIKE(WAC0C7)
     D  WQSE01         S                   LIKE(A3C0C7)
     D  WQSF01         S                   LIKE(A1C0C7)
     D  WQSG01         S                   LIKE(OMAIC3)
     D  WQSG02         S                   LIKE(OMC4NB)
     D  YL0007         S             30
     D  YL0008         S              7  0
     D  WQSH01         S                   LIKE(MOC0C7)
     D  YL0009         S              7
     D  YL0010         S             75
     D  YL0011         S              7  0
     D  WQSI01         S                   LIKE(A3C0C7)
     D  YL0012         S              7
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  WUI3ST         S              1
     D  WUEOCD         S              7
     D  W0INVL         S             25
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  XDWK1          S              8  0
     D  XDDTFM         S              3
     D  WUDMCD         S              3
     D  WQ0001         S              3
     D  W0CLPG         S             10
     D  YL0013         S              4
     D  YL0014         S              7  0
     D  YL0015         S              3  0
     D  YL0016         S              3  0
     D  YL0017         S              1
     D  YL0018         S              3
     D  YL0019         S              3  0
     D  YL0020         S              7  0
     D  YL0021         S              7  0
     D  YL0022         S              7  0
     D  YL0023         S              7  0
     D  YL0024         S             30
     D  YL0025         S              1
     D  YL0026         S              2
     D  YL0027         S              1
     D  YL0028         S             15
     D  YL0029         S              3
     D  WQ0002         S              7  0
     D  WQ0003         S              3  0
     D  WQ0004         S              7  0
     D  WQ0005         S              7  0
     D  WQ0006         S              7  0
     D  WQ0007         S             30
     D  WQ0008         S              1
     D  WQ0009         S              2
     D  WQ0010         S              1
     D  WQ0011         S              3
     D  WQ0012         S              7  0
     D  WQ0013         S             15
     D  WQ0014         S              3
     D  WQ0015         S              3  0
     D  WQ0016         S              3  0
     D  WQ0017         S              1
     D  WQ0018         S              7  0
     D  WQ0019         S              3  0
     D  WQ0020         S              7  0
     D  WQ0021         S              7  0
     D  WQ0022         S              7  0
     D  WQ0023         S             30
     D  WQ0024         S              1
     D  WQ0025         S              2
     D  WQ0026         S              1
     D  WQ0027         S              3
     D  WQ0028         S              7  0
     D  WQ0029         S             15
     D  WQ0030         S              3
     D  WQ0031         S              3  0
     D  WQ0032         S              3  0
     D  WQ0033         S              1
     D  WUYZCD         S              2
     D  YL0030         S              1
     D  WQ0034         S             25
     D  WQ0035         S             10
     D  WQ0036         S              4
     D  WQ0037         S              4
     D  WQ0038         S              2  0
     D  WQ0039         S              1
     D  WQ0040         S             10
     D  WQ0041         S              6
     D  W0SJO          S            132
     D  #STYP          S              1
     D  #SLEN          S              5  0
     D  #SDEC          S              1  0
     D  #SPAK          S             30  9
     D  #SRQL          S             15  5
     D  W0JVN          S             10
     D  W0JUN          S             10
     D  W0JNB          S              6
     D  YL0031         S             15  5
     D  YL0032         S             15  5
     D  YL0033         S             15  5
     D  YL0034         S             15  5
     D  YL0035         S             15  5
     D  YL0036         S             15  5
     D  YL0037         S              7
     D  WQ0042         S              7
     D  WQ0043         S              6
     D  WQ0044         S             25
     D  WQ0045         S             10
     D  WQ0046         S              4
     D  WQ0047         S              4
     D  WQ0048         S              1
     D  WQ0049         S             10
     D  WQ0050         S             15  5
     D  WQ0051         S             15  5
     D  WQ0052         S              2
     D  WQ0053         S              1
     D  WQ0054         S             15  5
     D  WQ0055         S             30
     D  WQ0056         S             15  5
     D  WQ0057         S             15  5
     D  WQ0058         S             15  5
     D  WQ0059         S              1
     D  WQ0060         S              1
     D  WQ0061         S              1
     D  WQ0062         S              1
     D  YL0038         S             40
     D  WL0001         S              3  0
     D  WL0002         S             10
     D  WL0003         S             40
     D  WQ0063         S              7  0
     D  WQ0064         S              3  0
     D  WQ0065         S              7  0
     D  WQ0066         S              7  0
     D  WQ0067         S              7  0
     D  WQ0068         S             30
     D  WQ0069         S              5
     D  WQ0070         S              3
     D  WUWUST         S              1
     D  WQ0071         S             25
     D  WQ0072         S             10
     D  WQ0073         S              4
     D  WQ0074         S              4
     D  WQ0075         S              2  0
     D  WQ0076         S              1
     D  WQ0077         S             10
     D  WQ0078         S              6
     D  WUGSTX         S            256
     D  WQ0079         S              7  0
     D  WQ0080         S              3  0
     D  WQ0081         S              7  0
     D  WQ0082         S              7  0
     D  WQ0083         S              7  0
     D  WQ0084         S             30
     D  WQ0085         S              5
     D  WQ0086         S              3
     D  WQ0087         S              7  0
     D  WQ0088         S              3  0
     D  WQ0089         S              7  0
     D  WQ0090         S              7  0
     D  WQ0091         S              7  0
     D  WQ0092         S             30
     D  WQ0093         S              5
     D  WQ0094         S              3
     D  WQ0095         S              7  0
     D  WQ0096         S              3  0
     D  WQ0097         S              7  0
     D  WQ0098         S              7  0
     D  WQ0099         S              7  0
     D  WQ0100         S             30
     D  WQ0101         S              1
     D  WQ0102         S              2
     D  WQ0103         S              1
     D  WQ0104         S              3
     D  WQ0105         S              7  0
     D  WQ0106         S             15
     D  WQ0107         S              3
     D  WQ0108         S              3  0
     D  WQ0109         S              3  0
     D  WQ0110         S              1
     D  WQ0111         S              7  0
     D  WQ0112         S              3  0
     D  WQ0113         S              7  0
     D  WQ0114         S              7  0
     D  WQ0115         S              7  0
     D  WQ0116         S             30
     D  WQ0117         S              5
     D  WQ0118         S              3
     D  WQ0119         S              7  0
     D  WQ0120         S              3  0
     D  WQ0121         S              7  0
     D  WQ0122         S              7  0
     D  WQ0123         S              7  0
     D  WQ0124         S             30
     D  WQ0125         S              1
     D  WQ0126         S              2
     D  WQ0127         S              1
     D  WQ0128         S              3
     D  WQ0129         S              7  0
     D  WQ0130         S             15
     D  WQ0131         S              3
     D  WQ0132         S              3  0
     D  WQ0133         S              3  0
     D  WQ0134         S              1
     D  WQ0135         S              7  0
     D  WQ0136         S              3  0
     D  WQ0137         S              7  0
     D  WQ0138         S              7  0
     D  WQ0139         S              7  0
     D  WQ0140         S             30
     D  WQ0141         S              1
     D  WQ0142         S              2
     D  WQ0143         S              1
     D  WQ0144         S              3
     D  WQ0145         S              7  0
     D  WQ0146         S             15
     D  WQ0147         S              3
     D  WQ0148         S              3  0
     D  WQ0149         S              3  0
     D  WQ0150         S              1
     D  WQ0151         S             25
     D  WQ0152         S             10
     D  WQ0153         S              4
     D  WQ0154         S              4
     D  WQ0155         S              2  0
     D  WQ0156         S              1
     D  WQ0157         S             10
     D  WQ0158         S              6
     D  WQ0159         S              7  0
     D  WQ0160         S             70
     D  WQ0161         S              1
     D  WQ0162         S             10
     D  WQ0163         S              7  0
     D  WQ0164         S              6  0
     D  WQ0165         S              4
     D  WQ0166         S              7  0
     D  WQ0167         S              3  0
     D  WQ0168         S              7  0
     D  WQ0169         S              7  0
     D  WQ0170         S              7  0
     D  WQ0171         S             30
     D  WQ0172         S              1
     D  WQ0173         S              2
     D  WQ0174         S              1
     D  WQ0175         S              3
     D  WQ0176         S              7  0
     D  WQ0177         S             15
     D  WQ0178         S              3
     D  WQ0179         S              3  0
     D  WQ0180         S              3  0
     D  WQ0181         S              1
     D  WQ0182         S              1
     D  WQ0183         S             10
     D  WQ0184         S             50
     D  WQ0185         S              7  0
     D  WQ0186         S              3  0
     D  WQ0187         S              7  0
     D  WQ0188         S              7  0
     D  WQ0189         S              7  0
     D  WQ0190         S             30
     D  WQ0191         S              1
     D  WQ0192         S              2
     D  WQ0193         S              1
     D  WQ0194         S              3
     D  WQ0195         S              7  0
     D  WQ0196         S             15
     D  WQ0197         S              3
     D  WQ0198         S              3  0
     D  WQ0199         S              3  0
     D  WQ0200         S              1
     D  WQ0201         S              7  0
     D  WQ0202         S              3
     D  WQ0203         S              3  0
     D  WQ0204         S              7  0
     D  WQ0205         S              7  0
     D  WQ0206         S              7  0
     D  WQ0207         S             30
     D  WQ0208         S              2
     D  WQ0209         S              1
     D  YL0039         S              3
     D  WQ0210         S              7  0
     D  WQ0211         S              3  0
     D  WQ0212         S              7  0
     D  WQ0213         S              7  0
     D  WQ0214         S              7  0
     D  WQ0215         S             30
     D  WQ0216         S              3
     D  WQ0217         S              1
     D  WQ0218         S             10
     D  WQ0219         S             50
     D  YL0040         S             10
     D  YN0001         S              3  0
     D  YN0002         S              3
     D  YN0003         S              1
     D  YN0004         S             10
     D  YN0005         S              3
     D  WN0001         S             10
     D  YL0041         S              3  0
     D  WL0004         S             10
     D  WL0005         S              1
     D  WL0006         S             10
     D  WL0007         S              3
     D  WL0008         S              3  0
     D  WL0009         S             10
     D  YL0042         S              3
     D  WL0010         S             10
     D  WL0011         S              6
     D  WL0012         S              3  0
     D  WL0013         S              3
     D  WQ0220         S              3
     D  WQ0221         S              3  0
     D  YL0043         S              3
     D  WL0014         S              3
     D  WL0015         S              3
     D  YL0044         S             40
     D  WQ0222         S              7  0
     D  WQ0223         S              3  0
     D  WQ0224         S              7  0
     D  WQ0225         S              7  0
     D  WQ0226         S              1
     D  WQ0227         S             11  2
     D  WQ0228         S             40
     D  WQ0229         S              3  0
     D  WQ0230         S              3
     D  WQ0231         S              3
     D  YN0006         S              5
     D  WQ0232         S              5
     D  WQ0233         S              1
     D  WQ0234         S             10
     D  WQ0235         S             50
     D  WQ0236         S              1
     D  WQ0237         S             10
     D  WQ0238         S             50
     D  WL0016         S              7  0
     D  WL0017         S             10
     D  WQSN01         S                   LIKE(WCC0C7)
     D  WQSN02         S                   LIKE(WCN7T1)
     D  WQ0239         S              7  0
     D  WQ0240         S              3
     D  WQ0241         S              3  0
     D  WQ0242         S              7  0
     D  WQ0243         S              7  0
     D  WQ0244         S              7  0
     D  WQ0245         S             30
     D  WQ0246         S              2
     D  WQ0247         S              1
     D  WUFET1         S             50
     D  WQ0248         S              7  0
     D  WQ0249         S             70
     D  WQ0250         S              1
     D  WQ0251         S             10
     D  WQ0252         S              7  0
     D  WQ0253         S              6  0
     D  WQ0254         S              4
     D  XDTSDL         S             26
     D  WL0018         S              7  0
     D  WL0019         S              1
     D  WN0002         S              3
     D  WN0003         S              3  0
     D  WN0004         S              7  0
     D  WN0005         S              7  0
     D  WN0006         S              7  0
     D  WN0007         S             30
     D  WN0008         S              2
     D  WN0009         S             11  2
     D  WN0010         S             11  2
     D  WN0011         S             11  2
     D  WN0012         S             30
     D  WN0013         S              1
     D  WN0014         S             25
     D  WN0015         S              1
     D  WN0016         S             25
     D  WN0017         S              1
     D  WN0018         S             11  2
     D  WN0019         S             25
     D  WN0020         S             25
     D  WN0021         S              7  0
     D  WN0022         S              7  0
     D  WN0023         S              1
     D  WN0024         S             25
     D  WN0025         S              7  0
     D  WN0026         S              7  0
     D  WN0027         S              6  0
     D  WN0028         S             10
     D  WN0029         S              7  0
     D  WN0030         S             15
     D  WN0031         S              7  0
     D  WN0032         S              6  0
     D  WN0033         S             10
     D  WN0034         S              7  0
     D  WN0035         S              6  0
     D  WN0036         S             10
     D  WN0037         S              1
     D  WN0038         S              7  0
     D  WN0039         S              6  0
     D  WN0040         S             10
     D  WN0041         S             40
     D  WN0042         S             11  2
     D  WN0043         S             11  2
     D  WN0044         S              7  0
     D  WN0045         S              6  0
     D  WN0046         S              7  0
     D  WN0047         S              1
     D  WN0048         S              7  4
     D  WN0049         S              7  4
     D  WN0050         S              7  4
     D  WN0051         S              9  2
     D  WN0052         S              9  2
     D  WN0053         S              9  2
     D  WN0054         S              9  2
     D  WN0055         S              1
     D  WN0056         S              1
     D  WN0057         S              1
     D  WN0058         S              2
     D  WN0059         S              2
     D  WN0060         S              7  4
     D  WN0061         S              7  4
     D  WN0062         S              1
     D  WN0063         S              7  0
     D  WN0064         S              6  0
     D  WN0065         S             10
     D  WN0066         S             10
     D  WN0067         S              7  0
     D  WN0068         S              6  0
     D  WN0069         S             10
     D  WN0070         S             10
     D  WN0071         S              2
     D  WN0072         S              3
     D  WN0073         S              3
     D  WN0074         S              4
     D  WN0077         S            100
     D  WN0078         S             26
     D  WN0079         S            100
     D  WN0080         S            100
     D  WN0081         S             26
     D  WN0082         S            100
     D  YARDC          S              1
     D  YL0045         S             10
     D  YL0046         S              1
     D  WQSQ01         S                   LIKE(WCC0C7)
     D  WQSQ02         S                   LIKE(WCN7T1)
     D  WQ0255         S              7  0
     D  WQ0256         S              3  0
     D  WQ0257         S              1
     D  WQ0258         S             10
     D  WQ0259         S             50
     D  WQ0260         S              4
     D  WQ0261         S              4
     D  WQ0262         S              1
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  WN0083         S             10
     D  WN0084         S             10
     D  WQ0263         S              3
     D  WQ0264         S              3  0
     D  WUAUNA         S             30
     D  WQSS01         S                   LIKE(DNDNCD)
     D  WQST01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  W0CSRR         S              5  0
     D  F              S              3  0
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D J7              S              1    DIM(7)
     D K7              S              1    DIM(7)
     D J3              S              1    DIM(3)
     D K3              S              1    DIM(3)
     D #L7             S              1    DIM(7)
     D #L3             S              1    DIM(3)
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: *Arrays
      * N :  Warehouse Code
     D  P1AJCD                 1      3
      * N :  Company Number
     D  P1AIC3                 4      5P 0
      * N :  Application Code
     D  P1DNCD                 6     11
      * N :  Salesperson Code
     D  P1BCCD                12     14
      * N :  Allow Multi_Company
     D  P1I6ST                15     15
      * N :  Default Printer
     D  P1MPNA                16     25
     D P2PARM          DS
      * FLD: *Arrays
      * N :  PRT Printer Device
     D  P2WRST                 1     10
      * N :  PRT Hold Output Sts
     D  P2WSST                11     14
      * N :  PRT Save Output Sts
     D  P2WTST                15     18
      * N :  PRT Number of Copies
     D  P2DYNB                19     20  0
      * N :  PRT Night Queue Run Sts
     D  P2WUST                21     21
      * N :  PRT Night Queue
     D  P2BVVN                22     31
      * N :  System Value Numeric
     D  P2M8NB                32     39P 5
      * N :  Status - Y or N
     D  P2B8ST                40     40
     D P3PARM          DS
      * FLD: *Arrays
      * N :  Return Command USR
     D  P3DESX                 1      5
     D P4PARM          DS
      * N :  Stop Program USR
     D  P4DJSX                 1      1
     D P5PARM          DS
      * I :  Edit/Display Usr
     D  P5V7SX                 1      1
     D P6PARM          DS
      * FLD: *Arrays
      * N :  Company Number Pass   USR
     D  P6AJAA                 1      8P 5
      * N :  Date 1          PASS  USR
     D  P6AJAB                 9     16P 5
      * N :  Date 2          PASS  USR
     D  P6AJAC                17     24P 5
      * N :  Order Number 1  PASS  USR
     D  P6AJAE                25     32P 5
     D P7PARM          DS
      * N :  @Claim Status
     D  P7CFSX                 1      1
     D P8PARM          DS
      * FLD: *Arrays
      * N :  Claim Audit Selection Usr
     D  P8L9TX                 1      1
      * N :  Claim Audit Co Value Usr
     D  P8JDAA                 2     11
      * N :  Approval Claim Audit Eml
     D  P8N9T1                12     61
      * Submit job processing data structures.
     D #SRQS           DS          3000
     D  #SDMY1                 1      1
     D #SSTR           DS          3000
     D  #SDMY2                 1      1
     D #SWRK           DS          3000
     D  #SDMY3                 1      1
     D #SMRG           DS           256
     D  #SDMY4                 1      1
     D                 DS
     D#SCLL                    1     13    INZ('CMD(CALL PGM(')
     D#SPRM                   14     18    INZ('PARM(')
     D#SPRN                   19     19    INZ(')')
     D#SPRG                   20     29    INZ('          ')
      * Submit job command strings.
     D                 DS
     D#S0001                   1    256    INZ('SBMJOB     JOB(CLMEX-
     D                                     PPND) JOBD(*USRPRF)')
     D                 DS
     D#S0002                   1    256    INZ('SBMJOB     JOB(CLMEX-
     D                                     PPND) JOBD(*USRPRF)')
     D                 DS
     D#S0003                   1    256    INZ('SBMJOB     JOB(PRTCL-
     D                                     AIMFM)')
     D                 DS
     D#S0004                   1    256    INZ('SBMJOB     JOB(PRTCL-
     D                                     AIMFM)')
     D                 DS
     D#S0005                   1    256    INZ('SBMJOB     JOB(PRTCL-
     D                                     AIMFM)')
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'RTV Option 1 Text'
      * Message data for 'RTV Option 2 Text'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Option Not Allowed'
      * *SFLSEL
     D  ZA0001                 1      1
      * Message data for 'Claim Edit (Pending Only)'
      * *SFLSEL
     D  ZA0002                 1      1
      * Message data for 'Claim Edit (Pending Only)'
      * *SFLSEL
     D  ZA0003                 1      1
      * Message data for 'Can't Edit Claim Comment'
      * *SFLSEL
     D  ZA0004                 1      1
      * Message data for 'Can't voided cmpltd claim'
      * *SFLSEL
     D  ZA0005                 1      1
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0006                 1     10
      * Application Code
     D  ZA0007                11     16
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0008                 1     10
      * Application Code
     D  ZA0009                11     16
      * Message data for 'Option Not Allowed'
      * *SFLSEL
     D  ZA0010                 1      1
      * Message data for 'Claim Status Must Be P'
      * *SFLSEL
     D  ZA0011                 1      1
      * Message data for 'Option Not Allowed'
      * *SFLSEL
     D  ZA0012                 1      1
      * Message data for 'Claim Resolve(SlsApvonly)'
      * *SFLSEL
     D  ZA0013                 1      1
      * Message data for 'Claim is now pending'
      * Claim Number
     D  ZA0014                 1      7
      * Message data for 'Claim Status is not OK'
      * Claim Number
     D  ZA0015                 1      7
      * Claim Status
     D  ZA0016                 8      8
      * Message data for 'Claim is now pending'
      * Claim Number
     D  ZA0017                 1      7
      * Message data for 'Claim Status is not OK'
      * Claim Number
     D  ZA0018                 1      7
      * Claim Status
     D  ZA0019                 8      8
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0020                 1     10
      * Application Code
     D  ZA0021                11     16
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0022                 1     10
      * Application Code
     D  ZA0023                11     16
     I@MNCPSH
      * AR Claim Explanation      Retrieval Index Intr Onl
      * Renamed input format fields
     I              MNC0C7                      WAC0C7
     I              MNAANX                      WAAANX
     I              MNPYTX                      WAPYTX
     I              MNLGNY                      WALGNY
     I              MNRRDT                      WARRDT
     I              MNL1TX                      WAL1TX
     I              MNN7T1                      WAN7T1
     I              MNRSDT                      WARSDT
     I              MNC9TM                      WAC9TM
     I              MNL2TX                      WAL2TX
     I              MNVSST                      WAVSST
     I              MNMJDT                      WAMJDT
     I              MNBETM                      WABETM
     I              MNCCVN                      WACCVN
     I              MNCDVN                      WACDVN
     I              MNMKDT                      WAMKDT
     I              MNBFTM                      WABFTM
     I              MNCEVN                      WACEVN
     I              MNCFVN                      WACFVN
      *
     IEAPREGF
      * Salesperson               Retrieval index       NV
      * Renamed input format fields
     I              APBCCD                      WBBCCD
     I              APALTX                      WBALTX
     I              APACNA                      WBACNA
     I              APADNA                      WBADNA
     I              APAENA                      WBAENA
     I              APAJNA                      WBAJNA
     I              APBGCD                      WBBGCD
     I              APBTTX                      WBBTTX
     I              APBVTX                      WBBVTX
     I              APBWTX                      WBBWTX
     I              APDZTX                      WBDZTX
     I              APD0TX                      WBD0TX
     I              APD1TX                      WBD1TX
     I              APLVCD                      WBLVCD
     I              APKZCD                      WBKZCD
     I              APAIC3                      WBAIC3
     I              APAVNB                      WBAVNB
     I              APDSCD                      WBDSCD
     I              APUVST                      WBUVST
     I              APUWST                      WBUWST
     I              APUXST                      WBUXST
     I              APVSST                      WBVSST
     I              APAATM                      WBAATM
     I              APAYNA                      WBAYNA
     I              APA0NA                      WBA0NA
     I              APAXDT                      WBAXDT
      *
     I@MNCPSP
      * AR Claim Explanation      Claim Exp/Clm/OpenAction
      * Renamed input format fields
     I              MNC0C7                      WCC0C7
     I              MNAANX                      WCAANX
     I              MNPYTX                      WCPYTX
     I              MNLGNY                      WCLGNY
     I              MNRRDT                      WCRRDT
     I              MNL1TX                      WCL1TX
     I              MNN7T1                      WCN7T1
     I              MNRSDT                      WCRSDT
     I              MNC9TM                      WCC9TM
     I              MNL2TX                      WCL2TX
     I              MNVSST                      WCVSST
     I              MNMJDT                      WCMJDT
     I              MNBETM                      WCBETM
     I              MNCCVN                      WCCCVN
     I              MNCDVN                      WCCDVN
     I              MNMKDT                      WCMKDT
     I              MNBFTM                      WCBFTM
     I              MNCEVN                      WCCEVN
     I              MNCFVN                      WCCFVN
      *
     I@MNCPWG
      * AR Claim Explanation      Update index
      * Renamed input format fields
     I              MNC0C7                      WDC0C7
     I              MNAANX                      WDAANX
     I              MNPYTX                      WDPYTX
     I              MNLGNY                      WDLGNY
     I              MNRRDT                      WDRRDT
     I              MNL1TX                      WDL1TX
     I              MNN7T1                      WDN7T1
     I              MNRSDT                      WDRSDT
     I              MNC9TM                      WDC9TM
     I              MNL2TX                      WDL2TX
     I              MNVSST                      WDVSST
     I              MNMJDT                      WDMJDT
     I              MNBETM                      WDBETM
     I              MNCCVN                      WDCCVN
     I              MNCDVN                      WDCDVN
     I              MNMKDT                      WDMKDT
     I              MNBFTM                      WDBFTM
     I              MNCEVN                      WDCEVN
     I              MNCFVN                      WDCFVN
      *
     I@MKCPWA
      * AR Claim Header           Update index
      * Renamed input format fields
     I              MKC0C7                      WEC0C7
     I              MKZLCD                      WEZLCD
     I              MKBIC3                      WEBIC3
     I              MKALNX                      WEALNX
     I              MKRMNB                      WERMNB
     I              MKC3C7                      WEC3C7
     I              MKRFTX                      WERFTX
     I              MKCHSX                      WECHSX
     I              MKCJSX                      WECJSX
     I              MKAYVL                      WEAYVL
     I              MKAZVL                      WEAZVL
     I              MKA0VL                      WEA0VL
     I              MKPQTX                      WEPQTX
     I              MKCNSX                      WECNSX
     I              MKPLTX                      WEPLTX
     I              MKCOSX                      WECOSX
     I              MKPMTX                      WEPMTX
     I              MKCPSX                      WECPSX
     I              MKA1VL                      WEA1VL
     I              MKPNTX                      WEPNTX
     I              MKPOTX                      WEPOTX
     I              MKMLDT                      WEMLDT
     I              MKEJDT                      WEEJDT
     I              MKCQSX                      WECQSX
     I              MKPPTX                      WEPPTX
     I              MKMMDT                      WEMMDT
     I              MKMNDT                      WEMNDT
     I              MKBGTM                      WEBGTM
     I              MKCGVN                      WECGVN
     I              MKC4C7                      WEC4C7
     I              MKO2NA                      WEO2NA
     I              MKNFDT                      WENFDT
     I              MKBJTM                      WEBJTM
     I              MKCQVN                      WECQVN
     I              MKMODT                      WEMODT
     I              MKBHTM                      WEBHTM
     I              MKCHVN                      WECHVN
     I              MKCRSX                      WECRSX
     I              MKMPDT                      WEMPDT
     I              MKBITM                      WEBITM
     I              MKCIVN                      WECIVN
     I              MKTBTX                      WETBTX
     I              MKEOVL                      WEEOVL
     I              MKEPVL                      WEEPVL
     I              MKP6DT                      WEP6DT
     I              MKCRTM                      WECRTM
     I              MKYSNX                      WEYSNX
     I              MKT5SX                      WET5SX
     I              MKF7PC                      WEF7PC
     I              MKF8PC                      WEF8PC
     I              MKF9PC                      WEF9PC
     I              MKEQVL                      WEEQVL
     I              MKERVL                      WEERVL
     I              MKESVL                      WEESVL
     I              MKETVL                      WEETVL
     I              MKT7SX                      WET7SX
     I              MKT8SX                      WET8SX
     I              MKT9SX                      WET9SX
     I              MKUASX                      WEUASX
     I              MKUBSX                      WEUBSX
     I              MKGAPC                      WEGAPC
     I              MKGBPC                      WEGBPC
     I              MKVSST                      WEVSST
     I              MKMJDT                      WEMJDT
     I              MKBETM                      WEBETM
     I              MKCCVN                      WECCVN
     I              MKCDVN                      WECDVN
     I              MKMKDT                      WEMKDT
     I              MKBFTM                      WEBFTM
     I              MKCEVN                      WECEVN
     I              MKCFVN                      WECFVN
     I              MKTXAA                      WETXAA
     I              MKC8AB                      WEC8AB
     I              MKEJAB                      WEEJAB
     I              MKDMAB                      WEDMAB
     I              MKWUU1                      WEWUU1
     I              MKXPU1                      WEXPU1
     I              MKFAVN                      WEFAVN
     I              MKBVTS                      WEBVTS
     I              MKWAU1                      WEWAU1
     I              MKFBVN                      WEFBVN
     I              MKBWTS                      WEBWTS
     I              MKWBU1                      WEWBU1
      *
     I@MKCPWB
      * AR Claim Header           Retrieval index
      * Renamed input format fields
     I              MKC0C7                      WFC0C7
     I              MKZLCD                      WFZLCD
     I              MKBIC3                      WFBIC3
     I              MKALNX                      WFALNX
     I              MKRMNB                      WFRMNB
     I              MKC3C7                      WFC3C7
     I              MKRFTX                      WFRFTX
     I              MKCHSX                      WFCHSX
     I              MKCJSX                      WFCJSX
     I              MKAYVL                      WFAYVL
     I              MKAZVL                      WFAZVL
     I              MKA0VL                      WFA0VL
     I              MKPQTX                      WFPQTX
     I              MKCNSX                      WFCNSX
     I              MKPLTX                      WFPLTX
     I              MKCOSX                      WFCOSX
     I              MKPMTX                      WFPMTX
     I              MKCPSX                      WFCPSX
     I              MKA1VL                      WFA1VL
     I              MKPNTX                      WFPNTX
     I              MKPOTX                      WFPOTX
     I              MKMLDT                      WFMLDT
     I              MKEJDT                      WFEJDT
     I              MKCQSX                      WFCQSX
     I              MKPPTX                      WFPPTX
     I              MKMMDT                      WFMMDT
     I              MKMNDT                      WFMNDT
     I              MKBGTM                      WFBGTM
     I              MKCGVN                      WFCGVN
     I              MKC4C7                      WFC4C7
     I              MKO2NA                      WFO2NA
     I              MKNFDT                      WFNFDT
     I              MKBJTM                      WFBJTM
     I              MKCQVN                      WFCQVN
     I              MKMODT                      WFMODT
     I              MKBHTM                      WFBHTM
     I              MKCHVN                      WFCHVN
     I              MKCRSX                      WFCRSX
     I              MKMPDT                      WFMPDT
     I              MKBITM                      WFBITM
     I              MKCIVN                      WFCIVN
     I              MKTBTX                      WFTBTX
     I              MKEOVL                      WFEOVL
     I              MKEPVL                      WFEPVL
     I              MKP6DT                      WFP6DT
     I              MKCRTM                      WFCRTM
     I              MKYSNX                      WFYSNX
     I              MKT5SX                      WFT5SX
     I              MKF7PC                      WFF7PC
     I              MKF8PC                      WFF8PC
     I              MKF9PC                      WFF9PC
     I              MKEQVL                      WFEQVL
     I              MKERVL                      WFERVL
     I              MKESVL                      WFESVL
     I              MKETVL                      WFETVL
     I              MKT7SX                      WFT7SX
     I              MKT8SX                      WFT8SX
     I              MKT9SX                      WFT9SX
     I              MKUASX                      WFUASX
     I              MKUBSX                      WFUBSX
     I              MKGAPC                      WFGAPC
     I              MKGBPC                      WFGBPC
     I              MKVSST                      WFVSST
     I              MKMJDT                      WFMJDT
     I              MKBETM                      WFBETM
     I              MKCCVN                      WFCCVN
     I              MKCDVN                      WFCDVN
     I              MKMKDT                      WFMKDT
     I              MKBFTM                      WFBFTM
     I              MKCEVN                      WFCEVN
     I              MKCFVN                      WFCFVN
     I              MKTXAA                      WFTXAA
     I              MKC8AB                      WFC8AB
     I              MKEJAB                      WFEJAB
     I              MKDMAB                      WFDMAB
     I              MKWUU1                      WFWUU1
     I              MKXPU1                      WFXPU1
     I              MKFAVN                      WFFAVN
     I              MKBVTS                      WFBVTS
     I              MKWAU1                      WFWAU1
     I              MKFBVN                      WFFBVN
     I              MKBWTS                      WFBWTS
     I              MKWBU1                      WFWBU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P5V7SX        PARM                    WP0001                         Edit/Display Us
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * USER: Initialize subfile control
      * CASE: PAR.Edit/Display Usr is Edit Allowed
      * Setup message data for message
      * Retrieve message RTV Option 1 Text
     C                   IF        P5V7SX = 'E'
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2RVMGC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'USR3538'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C     #CG5T1        PARM                    W0MTX                          Returned messag
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
      * Setup message data for message
      * Retrieve message RTV Option 2 Text
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2RVMGC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'USR3539'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C     #CG6T1        PARM                    W0MTX                          Returned messag
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      #CG5T1 = ' '                                 Option Variable
     C                   MOVEL     @CN(001)      #CG5T1                         Option Variable
     C                   Z-ADD     2             ZQ
     C     #CG5T1        CAT(P)    @CN(002):ZQ   #CG5T1                         Option Variable
     C                   EVAL      #CG6T1 = ' '                                 Option Variable
     C                   END                                                    *FI
      * If selecting by Claim Status, show all claims.
     C                   EXSR      UASUBR                                       If selecting by
      * CASE: LCL.First Time Flag is Yes
     C                   IF        YL0001 = 'Y'
     C                   MOVEL     P1BCCD        #2ZLCD                         Salesperson to
     C                   MOVEL     'N'           YL0001                         First Time Flag
     C                   END                                                    *FI
      * CASE: CTL.Salesperson to Rvw Claim is not entered
     C                   IF        #2ZLCD = ' '
     C                   EVAL      #CKPT1 = ' '                                 Salesperson Nam
     C                   MOVEL     '*ALL'        #CKPT1                         Salesperson Nam
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      #CKPT1 = ' '                                 Salesperson Nam
      * Salesperson Name DRV
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
     C                   EXSR      SARVGN
     C                   END                                                    *FI
      * Save User fields to see if they changed
     C                   MOVEL     #CUHSX        YL0002                         Clm Dta Steps-C
     C                   MOVEL     #CUISX        YL0003                         Clm Dta Steps-C
     C                   MOVEL     #CMITX        YL0004                         Clm Dta Steps-I
     C                   MOVEL     #CUJSX        YL0005                         Clm Dta Steps-R
     C                   MOVEL     #CUKSX        YL0006                         Clm Dta Steps-E
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    MKC0C7                         Claim Number
      * Setup key
     C                   IF        #2C0C7 = *ZERO
     C                   MOVEL     *HIVAL        MKC0C7                         Claim Number
     C                   ELSE
     C                   Z-ADD     #2C0C7        MKC0C7
     C                   ENDIF
     C     KPOS          SETLL     @MKCPW7
     C                   READ      @MKCPW7                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2ZLCD        WZZLCD                         Salesperson to
     C                   MOVEL     #CKPT1        WZKPT1                         Salesperson Nam
     C                   MOVEL     #2C0C7        WZC0C7                         Claim Number
     C                   MOVEL     #2CHSX        WZCHSX                         Claim Type
     C                   MOVEL     #2MNDT        WZMNDT                         Claim Entry Dat
     C                   MOVEL     #2BIC3        WZBIC3                         Claim Company N
     C                   MOVEL     #2ALNX        WZALNX                         Claim Order Num
     C                   MOVEL     #2RMNB        WZRMNB                         Load ID
     C                   MOVEL     #2C3C7        WZC3C7                         Claim Ship to C
     C                   MOVEL     #2RFTX        WZRFTX                         Claim Customer
     C                   MOVEL     #2CJSX        WZCJSX                         Claim Status
      * Translate search mask for text field
     C                   MOVEL     'QSYST'       WQB10X
     C                   MOVE      'RNTBL'       WQB10X
     C                   CALL      'QDCXLATE'
      * Length
     C                   PARM      30            WQA5N
     C                   PARM      #2RFTX        WQRFTX                         Claim Customer
     C                   PARM                    WQB10X                         QSYSTRNTBL
     C                   PARM      'QSYS'        WQC10X
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @MKCPW7                                90    *
     C  N82              READ      @MKCPW7                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(46)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2ZLCD <> ' '
     C     MKZLCD        CABNE     #2ZLCD        BB020                          Salesperson to
     C                   END
     C                   IF        #2CHSX <> ' '
     C     MKCHSX        CABNE     #2CHSX        BB020                          Claim Type
     C                   END
     C                   IF        #2MNDT <> *ZERO
     C     MKMNDT        CABNE     #2MNDT        BB020                          Claim Entry Dat
     C                   END
     C                   IF        #2BIC3 <> *ZERO
     C     MKBIC3        CABNE     #2BIC3        BB020                          Claim Company N
     C                   END
     C                   IF        #2ALNX <> *ZERO
     C     MKALNX        CABNE     #2ALNX        BB020                          Claim Order Num
     C                   END
     C                   IF        #2RMNB <> *ZERO
     C     MKRMNB        CABNE     #2RMNB        BB020                          Load ID
     C                   END
     C                   IF        #2C3C7 <> *ZERO
     C     MKC3C7        CABNE     #2C3C7        BB020                          Claim Ship to C
     C                   END
      * Scan for search string
     C                   IF        #2RFTX <> ' '
     C                   CALL      'QCLSCAN'
     C                   PARM                    MKRFTX                         Claim Customer
      * Length
     C                   PARM      30            WQA3N
      * Start
     C                   PARM      1             WQB3N
      * Mask
     C                   PARM                    WQRFTX
      * Length
     C                   PARM      30            WQC3N
      * Translate
     C                   PARM      '1'           WQD1
      * Trim
     C                   PARM      '1'           WQE1
      * Wild
     C                   PARM      '?'           WQF1
      * Result
     C                   PARM                    WQG3N
     C     WQG3N         CABNE     1             BB020
     C                   END
     C                   IF        #2CJSX <> ' '
     C     MKCJSX        CABNE     #2CJSX        BB020                          Claim Status
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
     C                   MOVEL     'Y'           W0RSL
      * Allow for possible *Set Cursor processing
     C                   ADD       1             ##RR
      * USER: Initialize subfile record from DBF record
      * Display approved/denied records (yes or no)
     C                   EXSR      UBSUBR                                       Display approve
      * ** Only display user profile company if multi-co = No   2/23/06 L
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Allow Multi-Company is no
      *   |- c2    : DB1.Claim Company Number NE PAR.Company Number
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        P1I6ST = 'N'
     C                   IF        MKBIC3 <> P1AIC3
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   EVAL      #RUHSX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #RUISX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #RMITX = ' '                                 Clm Dta Steps-I
     C                   EVAL      #RUJSX = ' '                                 Clm Dta Steps-R
     C                   EVAL      #RUKSX = ' '                                 Clm Dta Steps-E
      * CASE: PGM.*Record selected is *YES
      * CLM, CMT, RESALE, EXPENSES
     C                   IF        W0RSL = 'Y'
     C                   EXSR      UCSUBR                                       CLM, CMT, RESAL
     C                   END                                                    *FI
      * Chk DEV Priced Ord    RT - Order Detail  * 
     C                   EXSR      SGRVGN
     C                   EVAL      #RE9T1 = ' '                                 Claim Memo # Li
     C                   EVAL      YL0007 = ' '                                 Note Text
     C                   MOVEL     @CN(003)      YL0007                         Note Text
     C                   Z-ADD     1             ZQ
     C     #RE9T1        CAT(P)    YL0007:ZQ     #RE9T1                         Claim Memo # Li
      * Rtv MemoNumber Prod   RT - A/R Claim Product  * 
     C                   EXSR      SHRVGN
     C                   EVAL      YL0010 = ' '                                 Claim Memo # Li
     C                   EVAL      YL0007 = ' '                                 Note Text
     C                   MOVEL     @CN(004)      YL0007                         Note Text
     C                   Z-ADD     1             ZQ
     C     YL0010        CAT(P)    YL0007:ZQ     YL0010                         Claim Memo # Li
      * Rtv MemoNumber Resale RT - A/R Claim Resale  * 
     C                   EXSR      SIRVGN
     C                   Z-ADD     1             ZQ
     C     #RE9T1        CAT(P)    YL0010:ZQ     #RE9T1                         Claim Memo # Li
      * SFL Fold/Drop  RPG 2  US - /UT User Source  * 
     C     MODE          IFEQ      '0'
     C                   SETON                                        89
     C                   ELSE
     C                   SETOFF                                       89
     C                   ENDIF
     C                   SUB       1             ##RR
      * DBF record not selected
     C     W0RSL         CABNE     'Y'           BB020
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C                   READ      @MKCPW7                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30
     CANN27              EXSR      MOCV#2
      * Set screen conditioning indicators
     C                   EXSR      GBDSA2
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate Claim Number and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V2C0C7        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V2C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #2C0C7                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #2C0C7                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Type
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Claim Type
     C                   IF        '#2CHSX' = YPMTFD
     C                   MOVEL     #2CHSX        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZFCHSX
     C                   SELECT
     C                   WHEN      W0INVL = 'CM'                                CM
     C                   Z-ADD     1             ZFCHSX
     C                   WHEN      W0INVL = 'DM'                                DM
     C                   Z-ADD     2             ZFCHSX
     C                   WHEN      W0INVL = *BLANK                              *BLANK
     C                   Z-ADD     3             ZFCHSX
     C                   ENDSL
     C                   EXFMT     ZECHSX
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZFCHSX = 1
     C                   MOVEL     'CM'          W0INVL                         CM
     C                   WHEN      ZFCHSX = 2
     C                   MOVEL     'DM'          W0INVL                         DM
     C                   WHEN      ZFCHSX = 3
     C                   EVAL      W0INVL = ' '                                 *BLANK
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #2CHSX
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Validate Clm Dta Steps-Clm Usr
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #CUHSX        W0NSRQ                         Clm Dta Steps-C
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#CUHSX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1723671       Y2LSNO
     C     #CUHSX        PARM      #CUHSX        W0EXVL                         Clm Dta Steps-C
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Clm Dta Steps-Com Usr
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #CUISX        W0NSRQ                         Clm Dta Steps-C
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#CUISX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1875393       Y2LSNO
     C     #CUISX        PARM      #CUISX        W0EXVL                         Clm Dta Steps-C
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Clm Dta Steps-Int Usr
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #CMITX        W0NSRQ                         Clm Dta Steps-I
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#CMITX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1875393       Y2LSNO
     C     #CMITX        PARM      #CMITX        W0EXVL                         Clm Dta Steps-I
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Clm Dta Steps-Rsl Usr
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #CUJSX        W0NSRQ                         Clm Dta Steps-R
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#CUJSX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1723671       Y2LSNO
     C     #CUJSX        PARM      #CUJSX        W0EXVL                         Clm Dta Steps-R
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Clm Dta Steps-Exp Usr
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #CUKSX        W0NSRQ                         Clm Dta Steps-E
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#CUKSX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1723671       Y2LSNO
     C     #CUKSX        PARM      #CUKSX        W0EXVL                         Clm Dta Steps-E
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Claim Entry Date
      * External date
     C                   Z-ADD     V2MNDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9939      *
     C                   END
     C                   Z-ADD     XDINDT        #2MNDT
      * Validate Claim Company Number and convert to internal.
      * CD3 Ext/Int
     C                   MOVEL     V2BIC3        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V2BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC3            3
     C                   MOVEA     *BLANKS       K3
     C                   Z-ADD     3             C                 3 0
     C                   Z-ADD     3             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUDMCD        J3
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        3
     C     J3(C)         IFNE      ' '
     C                   MOVEA     J3(C)         K3(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K3            JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC3        TESTC             1
     C     TESTC         IFGT      '?'
     C     TESTC         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC3               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC3        WUDMCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0752'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #2BIC3                         CD3 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUDMCD        #2BIC3                         CD3 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Order Number and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V2ALNX        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V2ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #2ALNX                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #2ALNX                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Ship to Customer and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V2C3C7        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V2C3C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #2C3C7                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #2C3C7                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Status
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #2CJSX        W0NSRQ                         Claim Status
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#2CJSX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1523237       Y2LSNO
     C     #2CJSX        PARM      #2CJSX        W0EXVL                         Claim Status
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      *................................................................
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZZLCD        CASNE     #2ZLCD        FBRQRL
     C     WZC0C7        CASNE     #2C0C7        FBRQRL
     C     WZCHSX        CASNE     #2CHSX        FBRQRL
     C     WZMNDT        CASNE     #2MNDT        FBRQRL
     C     WZBIC3        CASNE     #2BIC3        FBRQRL
     C     WZALNX        CASNE     #2ALNX        FBRQRL
     C     WZRMNB        CASNE     #2RMNB        FBRQRL
     C     WZC3C7        CASNE     #2C3C7        FBRQRL
     C     WZRFTX        CASNE     #2RFTX        FBRQRL
     C     WZCJSX        CASNE     #2CJSX        FBRQRL
     C                   END
     C     DATAG1        TAG
      * USER: Process subfile control (Pre-confirm)
      * SEL: Salesperson
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> CTL.Salesperson to Rvw Claim
      *   '-
     C                   IF        YPMTFD = ' '
     C                   MOVEL     '0'           Y0CX01
     C                   IF        *IN04
     C                   IF        W0CFL = '#2ZLCD'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SEL Salesperson        SR - Salesperson  * 
     C                   IF        Y0CX01 = '1'
     C                   CALL      'PDE6SRR'                            90      SEL Salesperson
     C                   PARM      *BLANK        W0RTN
     C     #2ZLCD        PARM      #2ZLCD        WQ0001                         Salesperson Cod
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDE6SRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9931      *
     C                   END
     C                   END                                                    *FI
      * CHGL: Clm Dta Steps if any of these change then reload
      * CASE: LCL.Clm Dta Steps-Clm Usr NE CTL.Clm Dta Steps-Clm Usr
     C                   IF        YL0002 <> #CUHSX
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: LCL.Clm Dta Steps-Com Usr NE CTL.Clm Dta Steps-Com Usr
     C                   IF        YL0003 <> #CUISX
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: LCL.Clm Dta Steps-Int Usr NE CTL.Clm Dta Steps-Int Usr
     C                   IF        YL0004 <> #CMITX
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: LCL.Clm Dta Steps-Rsl Usr NE CTL.Clm Dta Steps-Rsl Usr
     C                   IF        YL0005 <> #CUJSX
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: LCL.Clm Dta Steps-Exp Usr NE CTL.Clm Dta Steps-Exp Usr
     C                   IF        YL0006 <> #CUKSX
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
      * Process subfile records
     C                   IF        *IN81
     C                   EXSR      DBPRSF
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * USER: Final processing (Pre-confirm)
     C                   MOVEL     '*YES'        YL0013                         Display Prt Opt
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * USER: Process command keys
     C                   Z-ADD     *ZERO         YL0014                         Ship To Custome
     C                   Z-ADD     *ZERO         YL0015                         Sequence Number
     C                   Z-ADD     *ZERO         YL0016                         Sequence Number
      * CASE: PAR.Edit/Dispaly Usr is Displayed Only
      * CASE: CTL.*CMD key is CF15
     C                   IF        P5V7SX = 'D'
      * Display or ND denied/approved records.
     C                   IF        *IN15
     C                   EXSR      UDSUBR                                       Display or ND d
     C                   ELSE
      * CASE: CTL.*CMD key is CF06
      * Send message 'Function key not allowed'
     C                   IF        *IN06
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   ELSE
      * CASE: CTL.*CMD key is CF09
      * Send message 'Function key not allowed'
     C                   IF        *IN09
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: PAR.Edit/Dispaly Usr is Edit Allowed
      * CASE: CTL.*CMD key is CF06
     C                   IF        P5V7SX = 'E'
      * ==>CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
      * Once CCM is live, cannot create claims from IBMi anymore
      * CASE: LCL.Module Release Status is Is Live
     C                   IF        *IN06
      * Send message 'Cannot create new claims'
     C                   IF        YL0017 = 'Y'
     C                   MOVEL     'USR5539'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   ELSE
      * CASE: *OTHERWISE
      * New Claim
     C                   EXSR      UESUBR                                       New Claim
     C                   END                                                    *FI
      * <==CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
     C                   ELSE
      * CASE: CTL.*CMD key is CF09
      * ==>CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
      * Once CCM is live, cannot create claims from IBMi anymore
      * CASE: LCL.Module Release Status is Is Live
     C                   IF        *IN09
      * Send message 'Cannot create new claims'
     C                   IF        YL0017 = 'Y'
     C                   MOVEL     'USR5539'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   ELSE
      * CASE: *OTHERWISE
      * Resale Claim
     C                   EXSR      UFSUBR                                       Resale Claim
     C                   END                                                    *FI
      * <==CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
     C                   ELSE
      * CASE: CTL.*CMD key is CF15
      * Hide or Show denied/approved records.
     C                   IF        *IN15
     C                   EXSR      UGSUBR                                       Hide or Show de
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * CASE: CTL.*CMD key is CF10
      * Prt Claim Exp Pnd Prd IF
     C                   IF        *IN10
     C                   MOVEL     'N'           YL0030                         PRT Night Queue
      * CASE: PAR.Email Selection usr is Email Selected
     C                   IF        *BLANK = 'E'
     C                   ELSE
      * CASE: *OTHERWISE
      * PMT Print Option  SHR  PV - Print Options  * 
     C                   CALL      'PDG0PVR'                            90      PMT Print Optio
     C                   PARM      *BLANK        W0RTN
     C                   PARM      @CN(006)      WQ0034                         PRT Description
     C     P2WRST        PARM      P2WRST        WQ0035                         PRT Printer Dev
     C     P2WSST        PARM      P2WSST        WQ0036                         PRT Hold Output
     C     P2WTST        PARM      P2WTST        WQ0037                         PRT Save Output
     C     P2DYNB        PARM      P2DYNB        WQ0038                         PRT Number of C
     C     YL0030        PARM      YL0030        WQ0039                         PRT Night Queue
     C     P2BVVN        PARM      P2BVVN        WQ0040                         PRT Night Queue
     C                   PARM      'OMS'         WQ0041                         Application Cod
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDG0PVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      * CASE: PGM.*Return code is *Normal
      * Select the Report.
     C                   IF        W0RTN = ' '
     C                   EXSR      UHSUBR                                       Select the Repo
     C                   END                                                    *FI
     C                   ELSE
      * CASE: CTL.*CMD key is CF21
     C                   IF        *IN21
     C                   Z-ADD     #2RMNB        YL0031                         Load Id Pass
     C                   Z-ADD     #2C0C7        YL0032                         Claim Number Pa
      * LCL.Date 1          PASS  USR = CTL.Claim Entry Date
     C                   Z-ADD     #2MNDT        YL0033                         Date 1
     C                   Z-ADD     #2C3C7        YL0034                         Ship to Custome
     C                   Z-ADD     #2BIC3        YL0035                         Company Number
     C                   Z-ADD     #2ALNX        YL0036                         Order Number 1
      * PRT Customer ClaimInAcCLP - /UT User Programs  * 
     C                   CALL      'PPPPUPC'                            90      PRT Customer Cl
     C     YL0037        PARM      *BLANK        WQ0042                         Return Code Usr
     C                   PARM      P1DNCD        WQ0043                         Application Cod
     C                   PARM      @CN(007)      WQ0044                         PRT Description
     C     P2WRST        PARM      P2WRST        WQ0045                         PRT Printer Dev
     C     P2WSST        PARM      P2WSST        WQ0046                         PRT Hold Output
     C     P2WTST        PARM      P2WTST        WQ0047                         PRT Save Output
     C     P2WUST        PARM      P2WUST        WQ0048                         PRT Night Queue
     C     P2BVVN        PARM      P2BVVN        WQ0049                         PRT Night Queue
     C                   PARM      YL0031        WQ0050                         Load Id Pass
     C                   PARM      YL0032        WQ0051                         Claim Number Pa
     C                   PARM      #2CHSX        WQ0052                         Claim Type
     C                   PARM      #2CJSX        WQ0053                         Claim Status
     C                   PARM      YL0033        WQ0054                         Date 1
     C                   PARM      #2RFTX        WQ0055                         Claim Customer
     C                   PARM      YL0034        WQ0056                         Ship to Custome
     C                   PARM      YL0035        WQ0057                         Company Number
     C                   PARM      YL0036        WQ0058                         Order Number 1
     C                   PARM      #CUHSX        WQ0059                         Clm Dta Steps-C
     C                   PARM      #CUISX        WQ0060                         Clm Dta Steps-C
     C                   PARM      #CUJSX        WQ0061                         Clm Dta Steps-R
     C                   PARM      #CUKSX        WQ0062                         Clm Dta Steps-E
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPPPUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        993345    *
     C                   SETON                                        443435    *
     C                   SETON                                        3738      *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   IF        YAFSCH <> *ZERO
     C     YAFSCH        CHAIN     #SFLRCD                            92        *
     C                   ELSE
     C                   READC     #SFLRCD                                92    *
     C                   END
      * Process subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      DCPRSR
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(46)
     C                   SETOFF                                       98        *
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
     C     YPMTFD        CABNE     *BLANKS       DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 033108 SLM ADD FUNCTION - E00104
      * Establish Claim Audit
     C                   EXSR      UISUBR                                       Establish Claim
     C                   Z-ADD     *ZERO         YL0014                         Ship To Custome
     C                   Z-ADD     *ZERO         YL0015                         Sequence Number
     C                   Z-ADD     *ZERO         YL0016                         Sequence Number
      * 051607 SLM ADD FUNCTION - DLY029
      * ==>P30337 ACK 02/04/25 - Disable editing for claims created from
      * ** Subfile Selections
      * CASE: PAR.Edit/Dispaly Usr is Displayed Only
      * CASE: RCD.*SFLSEL is Display Claim
     C                   IF        P5V7SX = 'D'
      * 15=Display Claim
      * Dsp Claim Detail       D1 - A/R Claim  * 
     C                   IF        #1SEL = '15'
     C                   CALL      'PPNVD1R'                            90      Dsp Claim Detai
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0063                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0064                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0065                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0066                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0067                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0068                         Claim Customer
     C     P3DESX        PARM      *BLANK        WQ0069                         Return Command
     C     YL0018        PARM      YL0018        WQ0070                         Clm Program USR
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPNVD1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Print
      * slm 041608 e00104 changes due to claim audit and internal note
      * 6=Print Claim for Display Only validation
     C                   IF        #1SEL = '6' OR
     C                             #1SEL = ' 6'
     C                   MOVEL     'Y'           P2B8ST                         Status - Y or N
      * Print Claim.
     C                   EXSR      UJSUBR                                       Print Claim.
     C                   ELSE
      * CASE: RCD.*SFLSEL NE WRK.BLANK
      * Setup message data for message
     C                   IF        #1SEL <> WUGSTX
     C                   MOVEL     #1SEL         ZA0001                         *SFLSEL
      * Send message 'Option Not Allowed'
     C                   MOVEL     'USR2262'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.Created Program Name is P2P
      * Subfile options other than Display are not allowed for P2P claims
      * CASE: RCD.*SFLSEL is Display Claim
     C                   IF        #1WAU1 = 'P2P'
      * Dsp Claim Detail       D1 - A/R Claim  * 
     C                   IF        #1SEL = '15'
     C                   CALL      'PPNVD1R'                            90      Dsp Claim Detai
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0079                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0080                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0081                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0082                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0083                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0084                         Claim Customer
     C     P3DESX        PARM      *BLANK        WQ0085                         Return Command
     C     YL0018        PARM      YL0018        WQ0086                         Clm Program USR
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPNVD1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE:
      *  - c1 OR c2 OR c3 OR c4 OR c5 OR c6 OR c7 OR c8 OR c9 OR c10 OR
      *  -  c11 OR c12 OR c13 OR c14
      *   |- c1    : RCD.*SFLSEL is *Edit
      *   |- c2    : RCD.*SFLSEL is *Print
      *   |- c3    : RCD.*SFLSEL is Edit Claim Product
      *   |- c4    : RCD.*SFLSEL is Edt Comment
      *   |- c5    : RCD.*SFLSEL is Work With Resale
      *   |- c6    : RCD.*SFLSEL is Work With Expense
      *   |- c7    : RCD.*SFLSEL is Option 11
      *   |- c8    : RCD.*SFLSEL is Void Claim-New
      *   |- c9    : RCD.*SFLSEL is *Pending
      *   |- c10   : RCD.*SFLSEL is Option 14
      *   |- c11   : RCD.*SFLSEL is *Complete for Exp Only
      *   |- c12   : RCD.*SFLSEL is Option 17
      *   |- c13   : RCD.*SFLSEL is Option 18
      *   |- c14   : RCD.*SFLSEL is Option 19
      *   '-
      * Send message 'P2P claims cant be edited'
     C                   IF        #1SEL = '2' OR
     C                             #1SEL = ' 2' OR
     C                             #1SEL = '6' OR
     C                             #1SEL = ' 6' OR
     C                             #1SEL = '7' OR
     C                             #1SEL = ' 7' OR
     C                             #1SEL = '8' OR
     C                             #1SEL = ' 8' OR
     C                             #1SEL = '9' OR
     C                             #1SEL = ' 9' OR
     C                             #1SEL = '10' OR
     C                             #1SEL = '11' OR
     C                             #1SEL = '12' OR
     C                             #1SEL = '13' OR
     C                             #1SEL = '14' OR
     C                             #1SEL = '16' OR
     C                             #1SEL = '17' OR
     C                             #1SEL = '18' OR
     C                             #1SEL = '19'
     C                   MOVEL     'USR5538'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : RCD.Claim Status is Expenses Allowed
      *   |- c2    : RCD.Claim Status is Denied
      *   '-
      * CASE: RCD.*SFLSEL is Internal/System Notes
     C                   IF        #1CJSX = 'C' OR
     C                             #1CJSX = 'M' OR
     C                             #1CJSX = 'D'
     C                   IF        #1SEL = '18'
     C                   ELSE
      * CASE: RCD.*SFLSEL is Work With Expense
     C                   IF        #1SEL = '10'
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Print
     C                   IF        #1SEL = '6' OR
     C                             #1SEL = ' 6'
     C                   ELSE
      * CASE: RCD.*SFLSEL is Display Claim
      * Dsp Claim Detail       D1 - A/R Claim  * 
     C                   IF        #1SEL = '15'
     C                   CALL      'PPNVD1R'                            90      Dsp Claim Detai
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0087                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0088                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0089                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0090                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0091                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0092                         Claim Customer
     C     P3DESX        PARM      *BLANK        WQ0093                         Return Command
     C     YL0018        PARM      YL0018        WQ0094                         Clm Program USR
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPNVD1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Send message 'Opt N-Allowed Memo Status'
     C                   MOVEL     'USR3457'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   GOTO      DCEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.*SFLSEL is *Print
     C                   IF        #1SEL = '6' OR
     C                             #1SEL = ' 6'
     C                   ELSE
      * CASE: RCD.*SFLSEL is Internal/System Notes
     C                   IF        #1SEL = '18'
     C                   ELSE
      * CASE: RCD.*SFLSEL is Work With Expense
     C                   IF        #1SEL = '10'
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Edit
      * Edit Claim   -- OMS012A
      * CASE:
      *  - c1 OR c2 OR c3 OR c4 OR c5
      *   |- c1    : RCD.Claim Status is Pending
      *   |- c2    : RCD.Claim Status is Sls Approved
      *   |- c3    : RCD.Claim Status is Reprocess
      *   |- c4    : RCD.Claim Status is Approved
      *   |- c5    : RCD.Claim Status is New
      *   '-
     C                   IF        #1SEL = '2' OR
     C                             #1SEL = ' 2'
      * Only "Pending","Sales Approved","Approved" claims can be edited
     C                   IF        #1CJSX = 'P' OR
     C                             #1CJSX = 'S' OR
     C                             #1CJSX = 'R' OR
     C                             #1CJSX = 'A' OR
     C                             #1CJSX = 'N'
     C                   MOVEL     'ECL'         YL0018                         Clm Program USR
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0095                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0096                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0097                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0098                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0099                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0100                         Claim Customer
     C     #1CJSX        PARM      #1CJSX        WQ0101                         Claim Status
     C     #1UASX        PARM      #1UASX        WQ0102                         AC Shipping Met
     C     #1VSST        PARM      #1VSST        WQ0103                         Record Status
     C     YL0018        PARM      YL0018        WQ0104                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0105                         Ship To Custome
     C     #1O2NA        PARM      #1O2NA        WQ0106                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0107                         Expense Code
     C     YL0015        PARM      YL0015        WQ0108                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0109                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0110                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0002                         *SFLSEL
      * Send message 'Claim Edit (Pending Only)'
     C                   MOVEL     'USR2785'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   EVAL      YL0029 = ' '                                 Expense Code
     C                   Z-ADD     *ZERO         YL0015                         Sequence Number
      * CASE: RCD.*SFLSEL is Display Claim
      * 15=Display Claim
      * Dsp Claim Detail       D1 - A/R Claim  * 
     C                   IF        #1SEL = '15'
     C                   CALL      'PPNVD1R'                            90      Dsp Claim Detai
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0111                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0112                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0113                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0114                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0115                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0116                         Claim Customer
     C     P3DESX        PARM      *BLANK        WQ0117                         Return Command
     C     YL0018        PARM      YL0018        WQ0118                         Clm Program USR
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPNVD1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: RCD.*SFLSEL is Edit Claim Product
      * 7=Edt Claim Product
      * Edit Claim Product
     C                   IF        #1SEL = '7' OR
     C                             #1SEL = ' 7'
     C                   EXSR      ULSUBR                                       Edit Claim Prod
     C                   ELSE
      * CASE: RCD.*SFLSEL is Work With Resale
      * 9=WW Resale
     C                   IF        #1SEL = '9' OR
     C                             #1SEL = ' 9'
     C                   MOVEL     'WWR'         YL0018                         Clm Program USR
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0135                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0136                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0137                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0138                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0139                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0140                         Claim Customer
     C     #1CJSX        PARM      #1CJSX        WQ0141                         Claim Status
     C     #1UASX        PARM      #1UASX        WQ0142                         AC Shipping Met
     C     #1VSST        PARM      #1VSST        WQ0143                         Record Status
     C     YL0018        PARM      YL0018        WQ0144                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0145                         Ship To Custome
     C     #1O2NA        PARM      #1O2NA        WQ0146                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0147                         Expense Code
     C     YL0015        PARM      YL0015        WQ0148                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0149                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0150                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Print
      * 6=Print Claim   (Not emailed to St Joe)
      * Print Claim.
     C                   IF        #1SEL = '6' OR
     C                             #1SEL = ' 6'
     C                   EXSR      UMSUBR                                       Print Claim.
     C                   ELSE
      * CASE: RCD.*SFLSEL is Edt Comment
      * 8=Edt Comment
      * Edt Comment
     C                   IF        #1SEL = '8' OR
     C                             #1SEL = ' 8'
     C                   EXSR      UOSUBR                                       Edt Comment
     C                   ELSE
      * CASE: RCD.*SFLSEL is Void Claim-New
      * 12=Void Claim
      * Void Claim.
     C                   IF        #1SEL = '12'
     C                   EXSR      UPSUBR                                       Void Claim.
      * Performs a Claim Audit outside of the Claim Flow
     C                   ELSE
      * CASE: RCD.*SFLSEL is Work With Expense
      * 10=WW Expense
     C                   IF        #1SEL = '10'
     C                   MOVEL     'WWE'         YL0018                         Clm Program USR
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0185                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0186                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0187                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0188                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0189                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0190                         Claim Customer
     C     #1CJSX        PARM      #1CJSX        WQ0191                         Claim Status
     C     #1UASX        PARM      #1UASX        WQ0192                         AC Shipping Met
     C     #1VSST        PARM      #1VSST        WQ0193                         Record Status
     C     YL0018        PARM      YL0018        WQ0194                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0195                         Ship To Custome
     C     #1O2NA        PARM      #1O2NA        WQ0196                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0197                         Expense Code
     C     YL0015        PARM      YL0015        WQ0198                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0199                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0200                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: RCD.*SFLSEL is Option 11
      * 11=ww Approval Dist
      * WW A/R Claim Approval
     C                   IF        #1SEL = '11'
     C                   EXSR      UQSUBR                                       WW A/R Claim Ap
      * Performs a Claim Audit outside of the Claim Flow
     C                   ELSE
      * CASE: RCD.*SFLSEL is Option 17
      * Validate use of Option 17  sales deny/ approval
     C                   IF        #1SEL = '17'
     C                   EXSR      URSUBR                                       Validate use of
     C                   ELSE
      * CASE: RCD.*SFLSEL is Option 18
      * Allow changes or entry of Internal notes and review of system not
     C                   IF        #1SEL = '18'
     C                   EXSR      UTSUBR                                       Allow changes o
     C                   ELSE
      * CASE: RCD.*SFLSEL is Option 14
      * Resolve Claim.-- which is approval or denial for memo
     C                   IF        #1SEL = '14'
     C                   EXSR      UVSUBR                                       Resolve Claim.-
      * Performs a Claim Audit outside of the Claim Flow
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Complete for Exp Only
      * 16=Compl for Expense Only
      * Completed Claim for Expense records only
     C                   IF        #1SEL = '16'
     C                   EXSR      UWSUBR                                       Completed Claim
      * Performs a Claim Audit outside of the Claim Flow
     C                   ELSE
      * CASE: RCD.*SFLSEL is *Pending
      * 13=Pending
      * Pending Claim.
     C                   IF        #1SEL = '13'
     C                   EXSR      UXSUBR                                       Pending Claim.
     C                   ELSE
      * CASE: RCD.*SFLSEL is Option 19
      * 19=Reset to Pending
      * Reset to Pending
     C                   IF        #1SEL = '19'
     C                   EXSR      NASUBR                                       Reset to Pendin
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * <==P30337 ACK 02/04/25 - Disable editing for claims created from
      * Performs a Claim Audit outside of the Claim Flow
      * CASE: PAR.Claim Audit Selection Usr is yes
      * Prc Claim Audit Rcds   IF
      * Claim Audit - If Claim Audit Records found then prompt the user
     C                   IF        P8L9TX = 'Y'
     C                   EXSR      NBSUBR                                       Claim Audit - I
     C                   END                                                    *FI
      * RTV Claim Amounts      RT - A/R Claim  * 
     C                   EXSR      SRRVGN
      * SFLRCD invalid
     C                   IF        *IN98
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
      * SFLNXTCHG
     C                   SETON                                        84
     C                   ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                   SETOFF                                       84
     C                   EVAL      #1SEL = ' '
     C                   END                                                    FI *IN98
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   GADSA1        BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                   MOVEL     '0'           *IN78
     C                   IF        #RYIST = 'Y'
     C                   MOVEL     '1'           *IN78
     C                   END                                                    *FI
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   GBDSA2        BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                   MOVEL     '0'           *IN79
     C                   IF        P5V7SX = 'E'
     C                   MOVEL     '1'           *IN79
     C                   END                                                    *FI
      *================================================================
     CSR   GBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @MKCPW7 fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   MOVEL     MKZLCD        #1ZLCD                         Salesperson to
     C                   Z-ADD     MKA0VL        #1A0VL                         Claim Approved
     C                   MOVEL     MKPQTX        #1PQTX                         Claim Contact N
     C                   MOVEL     MKCNSX        #1CNSX                         Product Inspect
     C                   MOVEL     MKPLTX        #1PLTX                         Product Inspect
     C                   MOVEL     MKCOSX        #1COSX                         Rep Inspection
     C                   MOVEL     MKPMTX        #1PMTX                         Rep Inspection
     C                   MOVEL     MKCPSX        #1CPSX                         Lab Fee Involve
     C                   Z-ADD     MKA1VL        #1A1VL                         Lab Fee
     C                   MOVEL     MKPNTX        #1PNTX                         Driver Name
     C                   MOVEL     MKPOTX        #1POTX                         Lab Name
     C                   Z-ADD     MKMLDT        #1MLDT                         Resolve Claim b
     C                   Z-ADD     MKEJDT        #1EJDT                         Actual Delivery
     C                   MOVEL     MKCQSX        #1CQSX                         Claim Called in
     C                   MOVEL     MKPPTX        #1PPTX                         Claim Called in
     C                   Z-ADD     MKMMDT        #1MMDT                         Claim Called in
     C                   Z-ADD     MKBGTM        #1BGTM                         Claim Entry Tim
     C                   MOVEL     MKCGVN        #1CGVN                         Claim Entry Use
     C                   Z-ADD     MKC4C7        #1C4C7                         Resale Ship to
     C                   MOVEL     MKO2NA        #1O2NA                         Resale Purchase
     C                   Z-ADD     MKNFDT        #1NFDT                         Sales Approved
     C                   Z-ADD     MKBJTM        #1BJTM                         Sales Approved
     C                   MOVEL     MKCQVN        #1CQVN                         Sales Approved
     C                   Z-ADD     MKMODT        #1MODT                         Approved_Denied
     C                   Z-ADD     MKBHTM        #1BHTM                         Approved_Denied
     C                   MOVEL     MKCHVN        #1CHVN                         Approved_Denied
     C                   MOVEL     MKCRSX        #1CRSX                         Memo Created
     C                   Z-ADD     MKMPDT        #1MPDT                         Memo Created Da
     C                   Z-ADD     MKBITM        #1BITM                         Memo Created Ti
     C                   MOVEL     MKCIVN        #1CIVN                         Memo Created Us
     C                   MOVEL     MKTBTX        #1TBTX                         Claim Resolutio
     C                   Z-ADD     MKEOVL        #1EOVL                         Approved Net Lo
     C                   Z-ADD     MKEPVL        #1EPVL                         Total Expense A
     C                   Z-ADD     MKP6DT        #1P6DT                         Memo Post Date
     C                   Z-ADD     MKCRTM        #1CRTM                         Memo Post Time
     C                   Z-ADD     MKYSNX        #1YSNX                         TFS Batch Numbe
     C                   MOVEL     MKT5SX        #1T5SX                         TFS Process Sta
     C                   Z-ADD     MKF7PC        #1F7PC                         Avg TF Responsi
     C                   Z-ADD     MKF8PC        #1F8PC                         Avg SBF Respons
     C                   Z-ADD     MKF9PC        #1F9PC                         STF Responsibil
     C                   Z-ADD     MKEQVL        #1EQVL                         FPR ID
     C                   Z-ADD     MKERVL        #1ERVL                         AC Unused Value
     C                   Z-ADD     MKESVL        #1ESVL                         AC Unused Value
     C                   Z-ADD     MKETVL        #1ETVL                         AC Unused Value
     C                   MOVEL     MKT7SX        #1T7SX                         Claim Prod Affe
     C                   MOVEL     MKT8SX        #1T8SX                         ARC Unused Stat
     C                   MOVEL     MKT9SX        #1T9SX                         ARC Unused Stat
     C                   MOVEL     MKUASX        #1UASX                         AC Shipping Met
     C                   MOVEL     MKUBSX        #1UBSX                         AC Full Return
     C                   Z-ADD     MKGAPC        #1GAPC                         AC Unused Pct 1
     C                   Z-ADD     MKGBPC        #1GBPC                         AC Unused Pct 2
     C                   MOVEL     MKVSST        #1VSST                         Record Status
     C                   Z-ADD     MKMJDT        #1MJDT                         Create Date
     C                   Z-ADD     MKBETM        #1BETM                         Create Time
     C                   MOVEL     MKCCVN        #1CCVN                         Create User
     C                   MOVEL     MKCDVN        #1CDVN                         Create Program
     C                   Z-ADD     MKMKDT        #1MKDT                         Change Date
     C                   Z-ADD     MKBFTM        #1BFTM                         Change Time
     C                   MOVEL     MKCEVN        #1CEVN                         Change User
     C                   MOVEL     MKCFVN        #1CFVN                         Change Program
     C                   MOVEL     MKTXAA        #1TXAA                         Sales Channel C
     C                   MOVEL     MKC8AB        #1C8AB                         CCM Disposition
     C                   MOVEL     MKEJAB        #1EJAB                         Claim Location
     C                   MOVEL     MKDMAB        #1DMAB                         Carrier SCAC
     C                   MOVEL     MKWUU1        #1WUU1                         Salesperson Com
     C                   MOVEL     MKXPU1        #1XPU1                         Disposition Not
     C                   MOVEL     MKFAVN        #1FAVN                         Created By
     C                   MOVEL     MKBVTS        #1BVTS                         Created Dt Tm
     C                   MOVEL     MKWAU1        #1WAU1                         Created Program
     C                   MOVEL     MKFBVN        #1FBVN                         Updated By
     C                   MOVEL     MKBWTS        #1BWTS                         Updated Dt Tm
     C                   MOVEL     MKWBU1        #1WBU1                         Updated Program
     C                   Z-ADD     MKC0C7        #1C0C7                         Claim Number
      * Clear external version also
     C                   EVAL      V1C0C7 = ' '
     C                   MOVEL     MKCHSX        #1CHSX                         Claim Type
     C                   Z-ADD     MKMNDT        #1MNDT                         Claim Entry Dat
      * Clear external version also
     C                   Z-ADD     *ZERO         V1MNDT
     C                   Z-ADD     MKAYVL        #1AYVL                         Claim Amount
     C                   Z-ADD     MKAZVL        #1AZVL                         Claim Net Loss
     C                   Z-ADD     MKBIC3        #1BIC3                         Claim Company N
      * Clear external version also
     C                   EVAL      V1BIC3 = ' '
     C                   Z-ADD     MKALNX        #1ALNX                         Claim Order Num
      * Clear external version also
     C                   EVAL      V1ALNX = ' '
     C                   Z-ADD     MKRMNB        #1RMNB                         Load ID
     C                   Z-ADD     MKC3C7        #1C3C7                         Claim Ship to C
      * Clear external version also
     C                   EVAL      V1C3C7 = ' '
     C                   MOVEL     MKRFTX        #1RFTX                         Claim Customer
     C                   MOVEL     MKCJSX        #1CJSX                         Claim Status
     C                   EVAL      #RYIST = ' '                                 Record Found -O
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
     C                   EVAL      #RUHSX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #RUISX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #RMITX = ' '                                 Clm Dta Steps-I
     C                   EVAL      #RUJSX = ' '                                 Clm Dta Steps-R
     C                   EVAL      #RUKSX = ' '                                 Clm Dta Steps-E
     C                   EVAL      #RE9T1 = ' '                                 Claim Memo # Li
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   EVAL      #CURSX = ' '                                 Clm Dta Steps-R
     C                   EVAL      #CUSSX = ' '                                 Clm Dta Steps-E
     C                   EVAL      #CUQSX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #CUPSX = ' '                                 Clm Dta Steps-C
     C                   Z-ADD     *ZERO         #CE0VL                         Net Loss Usr
     C                   EVAL      #CI6TX = ' '                                 Description 14A
     C                   EVAL      #2ZLCD = ' '                                 Salesperson to
     C                   EVAL      #CKPT1 = ' '                                 Salesperson Nam
     C                   EVAL      #CG5T1 = ' '                                 Option Variable
     C                   EVAL      #CG6T1 = ' '                                 Option Variable
     C                   Z-ADD     *ZERO         #2C0C7                         Claim Number
      * Clear external version also
     C                   EVAL      V2C0C7 = ' '
     C                   EVAL      #2CHSX = ' '                                 Claim Type
     C                   EVAL      #CUHSX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #CUISX = ' '                                 Clm Dta Steps-C
     C                   EVAL      #CMITX = ' '                                 Clm Dta Steps-I
     C                   EVAL      #CUJSX = ' '                                 Clm Dta Steps-R
     C                   EVAL      #CUKSX = ' '                                 Clm Dta Steps-E
     C                   Z-ADD     *ZERO         #2MNDT                         Claim Entry Dat
      * Clear external version also
     C                   Z-ADD     *ZERO         V2MNDT
     C                   Z-ADD     *ZERO         #2BIC3                         Claim Company N
      * Clear external version also
     C                   EVAL      V2BIC3 = ' '
     C                   Z-ADD     *ZERO         #2ALNX                         Claim Order Num
      * Clear external version also
     C                   EVAL      V2ALNX = ' '
     C                   Z-ADD     *ZERO         #2RMNB                         Load ID
     C                   Z-ADD     *ZERO         #2C3C7                         Claim Ship to C
      * Clear external version also
     C                   EVAL      V2C3C7 = ' '
     C                   EVAL      #2RFTX = ' '                                 Claim Customer
     C                   EVAL      #2CJSX = ' '                                 Claim Status
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C0C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C0C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Entry Date to display format
      * Convert date
     C     1000000       ADD       #1MNDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1MNDT
      * Convert Claim Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1BIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1BIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1BIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1ALNX                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1ALNX = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Ship to Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C3C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C3C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C3C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C3C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   MOCV#2        BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #2C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #2C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V2C0C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2C0C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Entry Date to display format
      * Convert date
     C     1000000       ADD       #2MNDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V2MNDT
      * Convert Claim Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #2BIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #2BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V2BIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2BIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #2ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #2ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V2ALNX                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2ALNX = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Ship to Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #2C3C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #2C3C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V2C3C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2C3C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   NASUBR        BEGSR
      *================================================================
      * Reset to Pending
      *================================================================
      * CASE: RCD.Claim Status is Valid Reset to Pending
      * CHG Status only        CH - A/R Claim  * 
      * Move input parameters to subroutine local variables.
     C                   IF        #1CJSX = 'S' OR
     C                             #1CJSX = 'V' OR
     C                             #1CJSX = 'D' OR
     C                             #1CJSX = 'A'
     C                   Z-ADD     #1C0C7        WL0018                         Claim Number
     C                   MOVEL(P)  'P'           WL0019                         Claim Status
     C                   EXSR      SPCHRC
      * Setup message data for message
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0017                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0017 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Claim is now pending'
     C                   MOVEL     'USR3518'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0018                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0018 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
     C                   MOVEL     #1CJSX        ZA0019                         Claim Status
      * Send message 'Claim Status is not OK'
     C                   MOVEL     'USR3519'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   NAEXIT        ENDSR
      /EJECT
     CSR   NBSUBR        BEGSR
      *================================================================
      * Claim Audit - If Claim Audit Records found then prompt the user
      *================================================================
      * Description of processing action records
     C                   EXSR      NCSUBR                                       Description of
      * Action: Review the CLMCHANGE records
     C                   MOVEL     @CN(011)      YL0045                         Claim Expl Acti
      * Vry Clm ExpSysAtLeast1 RT - A/R Claim Explanation  * 
     C                   EXSR      SQRVGN
      * CASE: LCL.Clm Dta Steps-Com Usr is Data Found
      * will prompt user send email, create system note if yes or no
      * and flag system notes action as completed
      * PMT Email Claim Rpt Y/NPV - /UT Report Prompts  * 
     C                   IF        YL0046 = 'X'
     C                   CALL      'PMSAPVR'                            90      PMT Email Claim
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0255                         Claim Number
     C                   PARM      #1BIC3        WQ0256                         Claim Company N
     C                   PARM      P8L9TX        WQ0257                         Claim Audit Sel
     C                   PARM      P8JDAA        WQ0258                         Claim Audit Co
     C                   PARM      P8N9T1        WQ0259                         Approval Claim
     C                   PARM      '*YES'        WQ0260                         Claim Prt Audit
     C                   PARM      '*NO'         WQ0261                         Claim Prt Intrl
     C                   PARM      'A'           WQ0262                         Claim Print Typ
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PMSAPVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   NBEXIT        ENDSR
      /EJECT
     CSR   NCSUBR        BEGSR
      *================================================================
      * Description of processing action records
      *================================================================
      *   1. Routine that will read the Claim Audit Records for THIS
      *      Claim, if one record is found then display pmt for user to
      *      to decide the action to be taken
      *   2. Email Action
      *      If the user select to process the email then do so
      *      Create a system note that email WAS sent
      *      or
      *      Create a system note that email NOT sent
      *   3. Regardless read these action records and flag that they
      *      were reviewed for processed.
      *      If the user selects not to send email these records will
      *      still be processed.
      *================================================================
     CSR   NCEXIT        ENDSR
      /EJECT
     CSR   NDSUBR        BEGSR
      *================================================================
      * CHANGE LOG HISTORY
      *================================================================
      * ***** Change Log
      * ** 3/31/2008 slm E00104 add changes to the Clm dist
      * ** 3/31/2008 slm E00104 add changes claim notes
      *                  user will now have internal notes
      *                  & system generated notes
      * ** 3/31/2008 slm E00104 add NEW logic to store claim audit
      *                  records in the claim notes file
      *                  then read these records for action processing
      *                  1st action will be to email if comments are chg
      *    4/21/2008 slm if other functions triger changes to claims
      *                  that are executed from this WW then at the
      *                  end of the subfile record being process we
      *                  see if there are any actions that need to be
      *                  processed
      *                  The other review of these actions are done
      *                  in the claim flow
      * ** 4/21/2008 slm Cleanup of selection on the X's was not
      *                  working in omsdevgen nor in production
      * *****
      * ** 3/03/2008 LJB E00094
      * ** Add Status Flag, set to "Y" if New and to "N" if Existing.
      * ** If New, don't email to St. Joe. Pass the flag to all programs
      * ** when F8 or F7 to go to next or previous program
      * ** Status Flag is added to "Crt A/R Claim Flow XF", as well.
      * *****
      * ** 2/22/06 LJB
      * ** For 960 only, if existing claim is changed to "Pending" or
      * ** if a new claim is set to "Pending", print the claim report
      * ** then email it to all on the St. Joseph distribution list
      * *****
      * ** 2/23/06 LJB
      * ** If Allow Multi-Co is "NO" then only display records that
      * ** match the user profile company number.
      * *****
      * 8/7/2006 SLM -- Add Expense only claim process.
      *      This is a Claim that will only have expenses and never
      *      a claim product nor a claim resale.
      * *****
      * 5/16/07 SLM -- Add option 17 WW Sales Person Claims
      *                Only allow if the user application has SAPCLM
      * ** 11/02/2007 FT133 LJB
      * ** Add option 18 Reprint Credit Memos and option 19 reprint
      * ** Debit Memos.
      * E3387 JJH 09/09/14 - Recompiled due to Shipping Method added to
      *  A/R Claim Resale file.
      * P30337 ACK 02/04/25 - Disable editing for claims created from P2P
      * CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
      * *****
      *================================================================
     CSR   NDEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    APBCCD                         Salesperson Cod
      * Setup key
     C                   MOVEL     #2ZLCD        APBCCD                         Salesperson Cod
      * Establish starting position
     C     KRSSA         CHAIN     @APREBU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0039'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      #CKPT1 = ' '                                 Salesperson Nam
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     APALTX        #CKPT1                         Salesperson Nam
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Vry Clm Product        RT - A/R Claim Product  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         Claim Number
     C                   KFLD                    WQSB02                         Claim Company N
      * Setup key
     C                   Z-ADD     #1C0C7        WQSB01                         Claim Number
     C                   Z-ADD     #1BIC3        WQSB02                         Claim Company N
      * Establish starting position
     C     KRSSB         SETLL     @MOCPXL                                      *
     C     KRSSB         READE     @MOCPXL                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2737'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RUHSX = ' '                                 Clm Dta Steps-C
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           #RUHSX                         Clm Dta Steps-C
     C                   GOTO      SBEXIT                                       *QUIT
     C     KRSSB         READE     @MOCPXL                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * Vry Clm ExplanAtLeast1 RT - A/R Claim Explanation  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WQSC01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSC01                         Claim Number
      * Establish starting position
     C     KRSSC         SETLL     @MNCPSE                                      *
     C     KRSSC         READE     @MNCPSE                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2735'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RUISX = ' '                                 Clm Dta Steps-C
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           #RUISX                         Clm Dta Steps-C
     C                   GOTO      SCEXIT                                       *QUIT
     C     KRSSC         READE     @MNCPSE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Vry Clm ExpIntAtLeast1 RT - A/R Claim Explanation  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WQSD01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSD01                         Claim Number
      * Establish starting position
     C     KRSSD         SETLL     @MNCPSH                                      *
     C     KRSSD         READE     @MNCPSH                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2735'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RMITX = ' '                                 Clm Dta Steps-C
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           #RMITX                         Clm Dta Steps-C
     C                   GOTO      SDEXIT                                       *QUIT
     C     KRSSD         READE     @MNCPSH                                90    *
     C                   ENDDO
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Vry Clm Resale         RT - A/R Claim Resale  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WQSE01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSE01                         Claim Number
      * Establish starting position
     C     KRSSE         SETLL     @A3CPXY                                      *
     C     KRSSE         READE     @A3CPXY                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR3447'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RUJSX = ' '                                 Clm Dta Steps-R
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           #RUJSX                         Clm Dta Steps-R
     C                   GOTO      SEEXIT                                       *QUIT
     C     KRSSE         READE     @A3CPXY                                90    *
     C                   ENDDO
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * Vry Clm Expense       RT - A/R Claim Expense  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WQSF01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSF01                         Claim Number
      * Establish starting position
     C     KRSSF         SETLL     @A1CPXK                                      *
     C     KRSSF         READE     @A1CPXK                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR3437'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RUKSX = ' '                                 Clm Dta Steps-E
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           #RUKSX                         Clm Dta Steps-E
     C                   GOTO      SFEXIT                                       *QUIT
     C     KRSSF         READE     @A1CPXK                                90    *
     C                   ENDDO
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * Chk DEV Priced Ord    RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           #RYIST                         Record Found -O
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         Company Number
     C                   KFLD                    WQSG02                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WQSG01                         Company Number
     C                   Z-ADD     #1ALNX        WQSG02                         Order Number
      * Establish starting position
     C     KRSSG         SETLL     @BGWKZL                                      *
     C     KRSSG         READE     @BGWKZL                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Detail Line Status is Not cancelled
     C                   DOW       NOT *IN90
      * CASE: DB1.Price Method Code is Deviated
     C                   IF        OMGMST = 'L' OR
     C                             OMGMST = 'A' OR
     C                             OMGMST = 'C' OR
     C                             OMGMST = 'R' OR
     C                             OMGMST = 'E' OR
     C                             OMGMST = 'H' OR
     C                             OMGMST = 'I'
     C                   IF        OMQ7CD = 'DEV'
     C                   MOVEL     'Y'           #RYIST                         Record Found -O
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSG         READE     @BGWKZL                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * Rtv MemoNumber Prod   RT - A/R Claim Product  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     *ZERO         YL0008                         Claim Memo Numb
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WQSH01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSH01                         Claim Number
      * Establish starting position
     C     KRSSH         SETLL     @MOCPXL                                      *
     C     KRSSH         READE     @MOCPXL                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2737'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      #RE9T1 = ' '                                 Claim Memo # Li
     C                   GOTO      SHEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * CASE: DB1.Claim Memo Number is Not equal to zeros
     C                   DOW       NOT *IN90
      * CASE: LCL.Claim Memo Number NE DB1.Claim Memo Number
     C                   IF        MOYTNX <> 0
     C                   IF        YL0008 <> MOYTNX
     C                   Z-ADD     MOYTNX        YL0008                         Claim Memo Numb
     C                   EVAL      YL0009 = ' '                                 Claim Number (A
     C                   MOVEL     MOYTNX        YL0009                         Claim Number (A
     C                   Z-ADD     1             ZQ
     C     #RE9T1        CAT(P)    YL0009:ZQ     #RE9T1                         Claim Memo # Li
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSH         READE     @MOCPXL                                90    *
     C                   ENDDO
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * Rtv MemoNumber Resale RT - A/R Claim Resale  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     *ZERO         YL0011                         Resale Memo Num
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WQSI01                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WQSI01                         Claim Number
      * Establish starting position
     C     KRSSI         SETLL     @A3CPXY                                      *
     C     KRSSI         READE     @A3CPXY                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR3447'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      YL0010 = ' '                                 Claim Memo # Li
     C                   GOTO      SIEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * CASE: DB1.Resale Memo Number is Not equal to zeros
     C                   DOW       NOT *IN90
      * CASE: LCL.Resale Memo Number NE DB1.Resale Memo Number
     C                   IF        A3YUNX <> 0
     C                   IF        YL0011 <> A3YUNX
     C                   EVAL      YL0012 = ' '                                 Claim Number (A
     C                   MOVEL     A3YUNX        YL0012                         Claim Number (A
     C                   Z-ADD     1             ZQ
     C     YL0010        CAT(P)    YL0012:ZQ     YL0010                         Claim Memo # Li
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSI         READE     @A3CPXY                                90    *
     C                   ENDDO
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * RTV Alpha Value        RT - Company Values  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    KMAIC3                         Company Number
     C                   KFLD                    KMV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     WL0001        KMAIC3                         Company Number
     C                   MOVEL     WL0002        KMV8CD                         Company Value C
      * Establish starting position
     C     KRSSJ         CHAIN     @KMREHC                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2221'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     KMBXTX        WL0003                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    DRAJVN                         User Profile Na
      * Setup key
     C                   MOVEL     WL0004        DRAJVN                         User Profile Na
      * Establish starting position
     C     KRSSK         CHAIN     @DRRETH                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0763'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SKEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     DRI6ST        WL0005                         Allow Multi_Com
     C                   MOVEL     DRMPNA        WL0006                         Default Printer
     C                   MOVEL     DRBCCD        WL0007                         Salesperson Cod
     C                   Z-ADD     DRAIC3        WL0008                         Company Number
     C                   MOVEL     DRBUVN        WL0009                         User Code Model
     C                   ENDIF
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLRVGN        BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSL         KLIST
     C                   KFLD                    DTAJVN                         User Profile Na
     C                   KFLD                    DTDNCD                         Application Cod
      * Setup key
     C                   MOVEL     WL0010        DTAJVN                         User Profile Na
     C                   MOVEL     WL0011        DTDNCD                         Application Cod
      * Establish starting position
     C     KRSSL         CHAIN     @DTRETE                            90        *
      * Data record not found
     C   90              MOVEL     'USR0767'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DTAIC3        WL0012                         Company Number
     C                   MOVEL     DTAJCD        WL0013                         Warehouse Code
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMRVGN        BEGSR
      *================================================================
      * RTV Salesperson Type   RT - Salesperson  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSM         KLIST
     C                   KFLD                    WBBCCD                         Salesperson Cod
      * Setup key
     C                   MOVEL     WL0014        WBBCCD                         Salesperson Cod
      * Establish starting position
     C     KRSSM         CHAIN     EAPREGF                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0039'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0015 = ' '                                 Sales Type Code
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBKZCD        WL0015                         Sales Type Code
     C                   ENDIF
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * Dlt Claim ExpSysPrToPndRT - A/R Claim Explanation  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    WQSN01                         Claim Number
     C                   KFLD                    WQSN02                         Claim Expl Acti
      * Setup key
     C                   Z-ADD     WL0016        WQSN01                         Claim Number
     C                   MOVEL     WL0017        WQSN02                         Claim Expl Acti
      * Establish starting position
     C     KRSSN         SETLL     @MNCPSP                                      *
     C     KRSSN         READE     @MNCPSP                                90    *
      * Data record not found
     C   90              MOVEL     'USR2735'     W0RTN
      * USER: Process Data record
      * DLT A/R Claim Explan   DL - A/R Claim Explanation  * 
     C                   DOW       NOT *IN90
     C                   EXSR      SODLRC
     C     KRSSN         READE     @MNCPSP                                90    *
     C                   ENDDO
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   SODLRC        BEGSR
      *================================================================
      * DLT A/R Claim Explan   DL - A/R Claim Explanation  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move key fields to @MNCPWG
     C                   Z-ADD     WCC0C7        WDC0C7                         Claim Number
     C                   Z-ADD     WCAANX        WDAANX                         Claim Explanati
      *
     C     KLDLSO        KLIST
     C                   KFLD                    WDC0C7                         Claim Number
     C                   KFLD                    WDAANX                         Claim Explanati
     C     KLDLSO        CHAIN     @MNCPWG                            9091      *
      * Record already deleted
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PDMNCPL0'    MDACP
     C                   MOVEL     '@MNCPWG'     MDFMT
     C                   MOVEL     '*DLT'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SOEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SOEXIT
     C                   ENDIF
      *
      *................................................................
     C                   DELETE    @MNCPWG                              91      *
      * Delete error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   SOEXIT        ENDSR
      /EJECT
     CSR   SPCHRC        BEGSR
      *================================================================
      * CHG Status only        CH - A/R Claim  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                   EVAL      WN0002 = ' '                                 Salesperson to
     C                   Z-ADD     *ZERO         WN0003                         Claim Company N
     C                   Z-ADD     *ZERO         WN0004                         Claim Order Num
     C                   Z-ADD     *ZERO         WN0005                         Load ID
     C                   Z-ADD     *ZERO         WN0006                         Claim Ship to C
     C                   EVAL      WN0007 = ' '                                 Claim Customer
     C                   EVAL      WN0008 = ' '                                 Claim Type
     C                   Z-ADD     *ZERO         WN0009                         Claim Amount
     C                   Z-ADD     *ZERO         WN0010                         Claim Net Loss
     C                   Z-ADD     *ZERO         WN0011                         Claim Approved
     C                   EVAL      WN0012 = ' '                                 Claim Contact N
     C                   EVAL      WN0013 = ' '                                 Product Inspect
     C                   EVAL      WN0014 = ' '                                 Product Inspect
     C                   EVAL      WN0015 = ' '                                 Rep Inspection
     C                   EVAL      WN0016 = ' '                                 Rep Inspection
     C                   EVAL      WN0017 = ' '                                 Lab Fee Involve
     C                   Z-ADD     *ZERO         WN0018                         Lab Fee
     C                   EVAL      WN0019 = ' '                                 Driver Name
     C                   EVAL      WN0020 = ' '                                 Lab Name
     C                   Z-ADD     *ZERO         WN0021                         Resolve Claim b
     C                   Z-ADD     *ZERO         WN0022                         Actual Delivery
     C                   EVAL      WN0023 = ' '                                 Claim Called in
     C                   EVAL      WN0024 = ' '                                 Claim Called in
     C                   Z-ADD     *ZERO         WN0025                         Claim Called in
     C                   Z-ADD     *ZERO         WN0026                         Claim Entry Dat
     C                   Z-ADD     *ZERO         WN0027                         Claim Entry Tim
     C                   EVAL      WN0028 = ' '                                 Claim Entry Use
     C                   Z-ADD     *ZERO         WN0029                         Resale Ship to
     C                   EVAL      WN0030 = ' '                                 Resale Purchase
     C                   Z-ADD     *ZERO         WN0031                         Sales Approved
     C                   Z-ADD     *ZERO         WN0032                         Sales Approved
     C                   EVAL      WN0033 = ' '                                 Sales Approved
     C                   Z-ADD     *ZERO         WN0034                         Approved_Denied
     C                   Z-ADD     *ZERO         WN0035                         Approved_Denied
     C                   EVAL      WN0036 = ' '                                 Approved_Denied
     C                   EVAL      WN0037 = ' '                                 Memo Created
     C                   Z-ADD     *ZERO         WN0038                         Memo Created Da
     C                   Z-ADD     *ZERO         WN0039                         Memo Created Ti
     C                   EVAL      WN0040 = ' '                                 Memo Created Us
     C                   EVAL      WN0041 = ' '                                 Claim Resolutio
     C                   Z-ADD     *ZERO         WN0042                         Approved Net Lo
     C                   Z-ADD     *ZERO         WN0043                         Total Expense A
     C                   Z-ADD     *ZERO         WN0044                         Memo Post Date
     C                   Z-ADD     *ZERO         WN0045                         Memo Post Time
     C                   Z-ADD     *ZERO         WN0046                         TFS Batch Numbe
     C                   EVAL      WN0047 = ' '                                 TFS Process Sta
     C                   Z-ADD     *ZERO         WN0048                         Avg TF Responsi
     C                   Z-ADD     *ZERO         WN0049                         Avg SBF Respons
     C                   Z-ADD     *ZERO         WN0050                         STF Responsibil
     C                   Z-ADD     *ZERO         WN0051                         FPR ID
     C                   Z-ADD     *ZERO         WN0052                         AC Unused Value
     C                   Z-ADD     *ZERO         WN0053                         AC Unused Value
     C                   Z-ADD     *ZERO         WN0054                         AC Unused Value
     C                   EVAL      WN0055 = ' '                                 Claim Prod Affe
     C                   EVAL      WN0056 = ' '                                 ARC Unused Stat
     C                   EVAL      WN0057 = ' '                                 ARC Unused Stat
     C                   EVAL      WN0058 = ' '                                 AC Shipping Met
     C                   EVAL      WN0059 = ' '                                 AC Full Return
     C                   Z-ADD     *ZERO         WN0060                         AC Unused Pct 1
     C                   Z-ADD     *ZERO         WN0061                         AC Unused Pct 2
     C                   EVAL      WN0062 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0063                         Create Date
     C                   Z-ADD     *ZERO         WN0064                         Create Time
     C                   EVAL      WN0065 = ' '                                 Create User
     C                   EVAL      WN0066 = ' '                                 Create Program
     C                   Z-ADD     *ZERO         WN0067                         Change Date
     C                   Z-ADD     *ZERO         WN0068                         Change Time
     C                   EVAL      WN0069 = ' '                                 Change User
     C                   EVAL      WN0070 = ' '                                 Change Program
     C                   EVAL      WN0071 = ' '                                 Sales Channel C
     C                   EVAL      WN0072 = ' '                                 CCM Disposition
     C                   EVAL      WN0073 = ' '                                 Claim Location
     C                   EVAL      WN0074 = ' '                                 Carrier SCAC
     C                   EVAL      WN0075 = ' '                                 Salesperson Com
     C                   EVAL      WN0076 = ' '                                 Disposition Not
     C                   EVAL      WN0077 = ' '                                 Created By
     C                   MOVEL     XDTSDL        WN0078                         Created Dt Tm
     C                   EVAL      WN0079 = ' '                                 Created Program
     C                   EVAL      WN0080 = ' '                                 Updated By
     C                   MOVEL     XDTSDL        WN0081                         Updated Dt Tm
     C                   EVAL      WN0082 = ' '                                 Updated Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @MKCPWA
     C                   Z-ADD     WL0018        WEC0C7                         Claim Number
      *
     C     KLCHSP        KLIST
     C                   KFLD                    WEC0C7                         Claim Number
     C     KLCHSP        CHAIN     @MKCPWA                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PDMKCPL0'    MDACP
     C                   MOVEL     '@MKCPWA'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL002.
     C                   MOVEL     'LBL002'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPDMK1        YARDCS
      * USER: Processing after Data read
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Claim Status is Completed
      *   |- c2    : PAR.Claim Status NE DB1.Claim Status
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WL0019 = 'C'
     C                   IF        WL0019 <> WECJSX
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     ##JDT         WEP6DT                         Memo Post Date
     C                   Z-ADD     ##JTM         WECRTM                         Memo Post Time
     C                   ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Claim Status is Memo Processing
      *   |- c2    : PAR.Claim Status NE DB1.Claim Status
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WL0019 = 'M'
     C                   IF        WL0019 <> WECJSX
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'Y'           WECRSX                         Memo Created
     C                   Z-ADD     ##JDT         WEMPDT                         Memo Created Da
     C                   Z-ADD     ##JTM         WEBITM                         Memo Created Ti
     C                   MOVEL     ##USR         WECIVN                         Memo Created Us
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Move non-key fields to @MKCPWA
     C                   MOVEL(P)  WL0019        WECJSX                         Claim Status
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPDMK1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Date/Time      IF
     C                   Z-ADD     ##JDT         WEMKDT                         Change Date
     C                   Z-ADD     ##JTM         WEBFTM                         Change Time
     C                   MOVEL     ##USR         WECEVN                         Change User
     C                   MOVEL     ##PGM         WECFVN                         Change Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPDMK1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @MKCPWA                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PDMKCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SPEXIT        ENDSR
      /EJECT
     CSR   SQRVGN        BEGSR
      *================================================================
      * Vry Clm ExpSysAtLeast1 RT - A/R Claim Explanation  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSQ         KLIST
     C                   KFLD                    WQSQ01                         Claim Number
     C                   KFLD                    WQSQ02                         Claim Expl Acti
      * Setup key
     C                   Z-ADD     #1C0C7        WQSQ01                         Claim Number
     C                   MOVEL     YL0045        WQSQ02                         Claim Expl Acti
      * Establish starting position
     C     KRSSQ         SETLL     @MNCPSP                                      *
     C     KRSSQ         READE     @MNCPSP                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2735'     W0RTN
      * USER: Processing if Data record not found
     C                   EVAL      YL0046 = ' '                                 Clm Dta Steps-C
     C                   GOTO      SQEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'X'           YL0046                         Clm Dta Steps-C
     C                   GOTO      SQEXIT                                       *QUIT
     C     KRSSQ         READE     @MNCPSP                                90    *
     C                   ENDDO
      *================================================================
     CSR   SQEXIT        ENDSR
      /EJECT
     CSR   SRRVGN        BEGSR
      *================================================================
      * RTV Claim Amounts      RT - A/R Claim  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSR         KLIST
     C                   KFLD                    WFC0C7                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        WFC0C7                         Claim Number
      * Establish starting position
     C     KRSSR         CHAIN     @MKCPWB                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2729'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         #1AYVL                         Claim Amount
     C                   Z-ADD     *ZERO         #1AZVL                         Claim Net Loss
     C                   GOTO      SREXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WFAYVL        #1AYVL                         Claim Amount
     C                   Z-ADD     WFAZVL        #1AZVL                         Claim Net Loss
     C                   ENDIF
      *================================================================
     CSR   SREXIT        ENDSR
      /EJECT
     CSR   SSRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSS         KLIST
     C                   KFLD                    WQSS01                         Application Cod
      * Setup key
     C                   MOVEL     P1DNCD        WQSS01                         Application Cod
      * Establish starting position
     C     KRSSS         SETLL     @DNRESF                                      *
     C     KRSSS         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      STRVGN
     C                   END                                                    *FI
     C     KRSSS         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SSEXIT        ENDSR
      /EJECT
     CSR   STRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSST         KLIST
     C                   KFLD                    WQST01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQST01                         Application Cod
      * Establish starting position
     C     KRSST         SETLL     @DNRESF                                      *
     C     KRSST         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      STEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSST         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   STEXIT        ENDSR
      /EJECT
     CSR   SURVGN        BEGSR
      *================================================================
      * Rtv Module Release Sts RT - OMS Transformation Ctl  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0017 = ' '                                 Module Release
      * Define keylist
     C     KRSSU         KLIST
     C                   KFLD                    C6B3AB                         Module ID
     C                   KFLD                    C6HUNZ                         Release Number
      * Setup key
     C                   MOVEL     'CCM'         C6B3AB                         Module ID
     C                   Z-ADD     1             C6HUNZ                         Release Number
      * Establish starting position
     C     KRSSU         CHAIN     @C6REMK                            90        *
      * Data record not found
     C   90              MOVEL     'USR5307'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C                   IF        NOT *IN90
      * PAR = DB1 By name
     C                   IF        C6VSST = 'A'
     C                   MOVEL     C6OCSC        YL0017                         Module Release
     C                   END                                                    *FI
     C                   ENDIF
      *================================================================
     CSR   SUEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * If selecting by Claim Status, show all claims.
      *================================================================
      * CASE: CTL.Claim Status is Blank
     C                   IF        #2CJSX = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           WUQKST                         Display Flag
     C                   END                                                    *FI
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   UBSUBR        BEGSR
      *================================================================
      * Display approved/denied records (yes or no)
      *================================================================
      * CASE: DB1.Claim Number EQ CTL.Claim Number
      * *** show claim for entered claim number. ***
     C                   IF        MKC0C7 = #2C0C7
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND (c2 OR c3 OR c4)
      *   |- c1    : WRK.Display Flag is No
      *   |- c2    : RCD.Claim Status is Completed
      *   |- c3    : RCD.Claim Status is Denied
      *   |- c4    : RCD.Claim Status is Voided
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WUQKST = 'N'
     C                   MOVEL     '0'           Y0CX02
     C                   IF        #1CJSX = 'C' OR
     C                             #1CJSX = 'D' OR
     C                             #1CJSX = 'V'
     C                   MOVEL     '1'           Y0CX02
     C                   END                                                    *FI
     C                   IF        Y0CX02 = '1'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      *================================================================
     CSR   UBEXIT        ENDSR
      /EJECT
     CSR   UCSUBR        BEGSR
      *================================================================
      * CLM, CMT, RESALE, EXPENSES
      *================================================================
      * Vry Clm Product        RT - A/R Claim Product  * 
     C                   EXSR      SBRVGN
      * verify the clm product
      * CASE: CTL.Clm Dta Steps-Clm Usr is There is Data
      * Verify there is a Claim Product
      * CASE: RCD.Clm Dta Steps-Clm Usr EQ CTL.Clm Dta Steps-Clm Usr
     C                   IF        #CUHSX = 'X'
     C                   IF        #RUHSX = #CUHSX
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Vry Clm ExplanAtLeast1 RT - A/R Claim Explanation  * 
     C                   EXSR      SCRVGN
      * verify the comments
      * CASE: CTL.Clm Dta Steps-Com Usr is Data Found
      * CASE: RCD.Clm Dta Steps-Com Usr EQ CTL.Clm Dta Steps-Com Usr
     C                   IF        #CUISX = 'X'
     C                   IF        #RUISX = #CUISX
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Vry Clm ExpIntAtLeast1 RT - A/R Claim Explanation  * 
     C                   EXSR      SDRVGN
      * verify the comments
      * CASE: CTL.Clm Dta Steps-Int Usr is Data Found
      * CASE: RCD.Clm Dta Steps-Int Usr EQ CTL.Clm Dta Steps-Int Usr
     C                   IF        #CMITX = 'X'
     C                   IF        #RMITX = #CMITX
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Vry Clm Resale         RT - A/R Claim Resale  * 
     C                   EXSR      SERVGN
      * verify the resale
      * CASE: CTL.Clm Dta Steps-Rsl Usr is There is Data
      * CASE: RCD.Clm Dta Steps-Rsl Usr EQ CTL.Clm Dta Steps-Rsl Usr
     C                   IF        #CUJSX = 'X'
     C                   IF        #RUJSX = #CUJSX
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Vry Clm Expense       RT - A/R Claim Expense  * 
     C                   EXSR      SFRVGN
      * verify the exp
      * CASE: CTL.Clm Dta Steps-Exp Usr is There is Data
      * CASE: RCD.Clm Dta Steps-Exp Usr EQ CTL.Clm Dta Steps-Exp Usr
     C                   IF        #CUKSX = 'X'
     C                   IF        #RUKSX = #CUKSX
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           W0RSL                          *Record selecte
     C                   END                                                    *FI
     C                   END                                                    *FI
      *================================================================
     CSR   UCEXIT        ENDSR
      /EJECT
     CSR   UDSUBR        BEGSR
      *================================================================
      * Display or ND denied/approved records.
      *================================================================
      * CASE: WRK.Display Flag is Yes
     C                   IF        WUQKST = 'Y'
     C                   MOVEL     'N'           WUQKST                         Display Flag
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           WUQKST                         Display Flag
     C                   END                                                    *FI
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UDEXIT        ENDSR
      /EJECT
     CSR   UESUBR        BEGSR
      *================================================================
      * New Claim
      *================================================================
     C                   MOVEL     'CCL'         YL0018                         Clm Program USR
     C                   Z-ADD     *ZERO         YL0019                         Claim Company N
     C                   Z-ADD     *ZERO         YL0020                         Claim Order Num
     C                   Z-ADD     *ZERO         YL0021                         Claim Number
     C                   Z-ADD     *ZERO         YL0022                         Load ID
     C                   Z-ADD     *ZERO         YL0023                         Claim Ship to C
     C                   EVAL      YL0024 = ' '                                 Claim Customer
     C                   MOVEL     '*ZERO'       YL0024                         Claim Customer
      * E3387 JJH 09/09/14 - Add LCL.A/C Shipping Method
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     YL0021        PARM      YL0021        WQ0002                         Claim Number
     C     YL0019        PARM      YL0019        WQ0003                         Claim Company N
     C     YL0020        PARM      YL0020        WQ0004                         Claim Order Num
     C     YL0022        PARM      YL0022        WQ0005                         Load ID
     C     YL0023        PARM      YL0023        WQ0006                         Claim Ship to C
     C     YL0024        PARM      YL0024        WQ0007                         Claim Customer
     C     YL0025        PARM      YL0025        WQ0008                         Claim Status
     C     YL0026        PARM      YL0026        WQ0009                         AC Shipping Met
     C     YL0027        PARM      YL0027        WQ0010                         Record Status
     C     YL0018        PARM      YL0018        WQ0011                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0012                         Ship To Custome
     C     YL0028        PARM      YL0028        WQ0013                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0014                         Expense Code
     C     YL0015        PARM      YL0015        WQ0015                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0016                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0017                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * I THINK THIS STAYS * OUT NOT FOR SURE......SUSAN
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UEEXIT        ENDSR
      /EJECT
     CSR   UFSUBR        BEGSR
      *================================================================
      * Resale Claim
      *================================================================
     C                   Z-ADD     *ZERO         YL0019                         Claim Company N
     C                   Z-ADD     *ZERO         YL0021                         Claim Number
     C                   Z-ADD     *ZERO         YL0020                         Claim Order Num
     C                   MOVEL     'CRO'         YL0018                         Clm Program USR
     C                   Z-ADD     *ZERO         YL0022                         Load ID
     C                   Z-ADD     *ZERO         YL0023                         Claim Ship to C
     C                   EVAL      YL0024 = ' '                                 Claim Customer
     C                   MOVEL     '*ZERO'       YL0024                         Claim Customer
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     YL0021        PARM      YL0021        WQ0018                         Claim Number
     C     YL0019        PARM      YL0019        WQ0019                         Claim Company N
     C     YL0020        PARM      YL0020        WQ0020                         Claim Order Num
     C     YL0022        PARM      YL0022        WQ0021                         Load ID
     C     YL0023        PARM      YL0023        WQ0022                         Claim Ship to C
     C     YL0024        PARM      YL0024        WQ0023                         Claim Customer
     C     YL0025        PARM      YL0025        WQ0024                         Claim Status
     C     YL0026        PARM      YL0026        WQ0025                         AC Shipping Met
     C     YL0027        PARM      YL0027        WQ0026                         Record Status
     C     YL0018        PARM      YL0018        WQ0027                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0028                         Ship To Custome
     C     YL0028        PARM      YL0028        WQ0029                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0030                         Expense Code
     C     YL0015        PARM      YL0015        WQ0031                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0032                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0033                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UFEXIT        ENDSR
      /EJECT
     CSR   UGSUBR        BEGSR
      *================================================================
      * Hide or Show denied/approved records.
      *================================================================
      * CASE: WRK.Display Flag is Yes
     C                   IF        WUQKST = 'Y'
     C                   MOVEL     'N'           WUQKST                         Display Flag
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           WUQKST                         Display Flag
     C                   END                                                    *FI
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UGEXIT        ENDSR
      /EJECT
     CSR   UHSUBR        BEGSR
      *================================================================
      * Select the Report.
      *================================================================
      * Dynamically override the SBMJOB command
      * with the job queue from the Print Options screen.
     C                   Z-ADD     *ZEROS        ZQ
     C     'JOBQ('       CAT(P)    P2BVVN:ZQ     W0SJO                          *Sbmjob overrid
     C                   Z-ADD     *ZEROS        ZQ
     C     W0SJO         CAT(P)    ')':ZQ        W0SJO                          *Sbmjob overrid
      * Submit the Report.
      * Prt Claim Expense Pending report
      * CASE: PAR.Email Selection usr is Email Selected
      * PRINT OPTIONS WILL BE PLUG DUE TO THE FACT THIS IS EMAIL
      * SBMJOB: Prt Claim Exp Pnd SbmJXF - A/R Claim Expense  * 
      *
     C                   IF        *BLANK = 'E'
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0001        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PLA1XFR '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   MOVEL(P)  W0RTN         #SSTR                          *Return code
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WRST        #SSTR                          PRT Printer Dev
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WSST        #SSTR                          PRT Hold Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WTST        #SSTR                          PRT Save Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     P2DYNB        #SPAK                          PRT Number of C
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      2             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Email Selection
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PLA1XFR '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PLA1XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * SBMJOB: Prt Claim Exp Pnd SbmJXF - A/R Claim Expense  * 
      *
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0002        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PLA1XFR '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   MOVEL(P)  W0RTN         #SSTR                          *Return code
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WRST        #SSTR                          PRT Printer Dev
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WSST        #SSTR                          PRT Hold Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WTST        #SSTR                          PRT Save Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     P2DYNB        #SPAK                          PRT Number of C
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      2             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Email Selection
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PLA1XFR '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PLA1XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      * Send submit message to user.
      * Send message 'Report has been submitted'
     C                   MOVEL     'USR2720'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
      *================================================================
     CSR   UHEXIT        ENDSR
      /EJECT
     CSR   UISUBR        BEGSR
      *================================================================
      * Establish Claim Audit
      *================================================================
     C                   EVAL      P8L9TX = ' '                                 Claim Audit Sel
     C                   EVAL      P8N9T1 = ' '                                 Approval Claim
     C                   EVAL      P8JDAA = ' '                                 Claim Audit Co
     C                   MOVEL     'CLMDIST'     P8JDAA                         Claim Audit Co
      * RTV Alpha Value        RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0001                         Company Number
     C                   MOVEL(P)  P8JDAA        WL0002                         Company Value C
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0003        YL0038                         System Value Al
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.System Value Alpha is *NONE
      *   |- c2    : LCL.System Value Alpha is Equal to Blank
      *   '-
     C                   IF        YL0038 = '*NONE' OR
     C                             YL0038 = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      P8N9T1 = ' '                                 Approval Claim
     C                   MOVEL     YL0038        P8N9T1                         Approval Claim
     C                   MOVEL     'Y'           P8L9TX                         Claim Audit Sel
     C                   END                                                    *FI
      *================================================================
     CSR   UIEXIT        ENDSR
      /EJECT
     CSR   UJSUBR        BEGSR
      *================================================================
      * Print Claim.
      *================================================================
      * PMT Print Option  SHR  PV - Print Options  * 
     C                   CALL      'PDG0PVR'                            90      PMT Print Optio
     C                   PARM      *BLANK        W0RTN
     C                   PARM      @CN(008)      WQ0071                         PRT Description
     C     P2WRST        PARM      P2WRST        WQ0072                         PRT Printer Dev
     C     P2WSST        PARM      P2WSST        WQ0073                         PRT Hold Output
     C     P2WTST        PARM      P2WTST        WQ0074                         PRT Save Output
     C     P2DYNB        PARM      P2DYNB        WQ0075                         PRT Number of C
     C     WUWUST        PARM      WUWUST        WQ0076                         PRT Night Queue
     C     P2BVVN        PARM      P2BVVN        WQ0077                         PRT Night Queue
     C                   PARM      P1DNCD        WQ0078                         Application Cod
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDG0PVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * CASE: PGM.*Return code is *Normal
      * Select the Report.
     C                   IF        W0RTN = ' '
     C                   EXSR      UKSUBR                                       Select the Repo
     C                   END                                                    *FI
      *================================================================
     CSR   UJEXIT        ENDSR
      /EJECT
     CSR   UKSUBR        BEGSR
      *================================================================
      * Select the Report.
      *================================================================
      * Dynamically override the SBMJOB command
      * with the job queue from the Print Options screen.
     C                   Z-ADD     *ZEROS        ZQ
     C     'JOBQ('       CAT(P)    P2BVVN:ZQ     W0SJO                          *Sbmjob overrid
     C                   Z-ADD     *ZEROS        ZQ
     C     W0SJO         CAT(P)    ')':ZQ        W0SJO                          *Sbmjob overrid
      * Submit the Report.
      * ** Don't print text and don't send to St Joe
     C                   MOVEL     'Y'           P2B8ST                         Status - Y or N
      * Pass information for regular claim and no internal notes
      * SBMJOB: Prt Claim-Claim All   XF - A/R Claim  * 
      *
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0003        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PPL7XFR '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   MOVEL(P)  W0RTN         #SSTR                          *Return code
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1C0C7        #SPAK                          Claim Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1BIC3        #SPAK                          Claim Company N
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WRST        #SSTR                          PRT Printer Dev
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WSST        #SSTR                          PRT Hold Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WTST        #SSTR                          PRT Save Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     P2DYNB        #SPAK                          PRT Number of C
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      2             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2B8ST        #SSTR                          Status - Y or N
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'N'           #SSTR                          Online Report U
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Email Selection
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Title
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     *ZERO         #SPAK                          Sequence Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Person
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Claim Audit Sel
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Claim Audit Co
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Claim
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Audit
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Intrl
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'R'           #SSTR                          Claim Print Typ
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PPL7XFR '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPL7XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * Send submit message to user.
      * Send message 'Report has been submitted'
     C                   MOVEL     'USR2720'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
      *================================================================
     CSR   UKEXIT        ENDSR
      /EJECT
     CSR   ULSUBR        BEGSR
      *================================================================
      * Edit Claim Product
      *================================================================
      * CASE:
      *  - c1 OR c2 OR c3 OR c4OR c5
      *   |- c1    : RCD.Claim Status is New
      *   |- c2    : RCD.Claim Status is Pending
      *   |- c3    : RCD.Claim Status is Sls Approved
      *   |- c4    : RCD.Claim Status is Reprocess
      *   |- c5    : RCD.Claim Status is Approved
      *   '-
     C                   IF        #1CJSX = 'N' OR
     C                             #1CJSX = 'P' OR
     C                             #1CJSX = 'S' OR
     C                             #1CJSX = 'R' OR
     C                             #1CJSX = 'A'
     C                   MOVEL     'ECP'         YL0018                         Clm Program USR
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0119                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0120                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0121                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0122                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0123                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0124                         Claim Customer
     C     #1CJSX        PARM      #1CJSX        WQ0125                         Claim Status
     C     #1UASX        PARM      #1UASX        WQ0126                         AC Shipping Met
     C     #1VSST        PARM      #1VSST        WQ0127                         Record Status
     C     YL0018        PARM      YL0018        WQ0128                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0129                         Ship To Custome
     C     #1O2NA        PARM      #1O2NA        WQ0130                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0131                         Expense Code
     C     YL0015        PARM      YL0015        WQ0132                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0133                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0134                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0003                         *SFLSEL
      * Send message 'Claim Edit (Pending Only)'
     C                   MOVEL     'USR2785'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   ULEXIT        ENDSR
      /EJECT
     CSR   UMSUBR        BEGSR
      *================================================================
      * Print Claim.
      *================================================================
      * CASE: LCL.Display Prt Opt Pmt USR is *YES
      * PMT Print Option  SHR  PV - Print Options  * 
     C                   IF        YL0013 = '*YES'
     C                   CALL      'PDG0PVR'                            90      PMT Print Optio
     C                   PARM      *BLANK        W0RTN
     C                   PARM      @CN(008)      WQ0151                         PRT Description
     C     P2WRST        PARM      P2WRST        WQ0152                         PRT Printer Dev
     C     P2WSST        PARM      P2WSST        WQ0153                         PRT Hold Output
     C     P2WTST        PARM      P2WTST        WQ0154                         PRT Save Output
     C     P2DYNB        PARM      P2DYNB        WQ0155                         PRT Number of C
     C     WUWUST        PARM      WUWUST        WQ0156                         PRT Night Queue
     C     P2BVVN        PARM      P2BVVN        WQ0157                         PRT Night Queue
     C                   PARM      P1DNCD        WQ0158                         Application Cod
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDG0PVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   EVAL      YL0013 = ' '                                 Display Prt Opt
     C                   MOVEL     '*NO'         YL0013                         Display Prt Opt
     C                   END                                                    *FI
      * ** Set flag to control email to distro list
      * CASE: RCD.Claim Status is New
      * ** New claims will not be emailed to distro list
     C                   IF        #1CJSX = 'N'
     C                   MOVEL     'Y'           P2B8ST                         Status - Y or N
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           P2B8ST                         Status - Y or N
     C                   END                                                    *FI
      * CASE: PGM.*Return code is *Normal
      * Select the Report.
     C                   IF        W0RTN = ' '
     C                   EXSR      UNSUBR                                       Select the Repo
     C                   END                                                    *FI
      *================================================================
     CSR   UMEXIT        ENDSR
      /EJECT
     CSR   UNSUBR        BEGSR
      *================================================================
      * Select the Report.
      *================================================================
      * Dynamically override the SBMJOB command
      * with the job queue from the Print Options screen.
     C                   Z-ADD     *ZEROS        ZQ
     C     'JOBQ('       CAT(P)    P2BVVN:ZQ     W0SJO                          *Sbmjob overrid
     C                   Z-ADD     *ZEROS        ZQ
     C     W0SJO         CAT(P)    ')':ZQ        W0SJO                          *Sbmjob overrid
      * Submit the Report.
     C                   EVAL      P7CFSX = ' '                                 @Claim Status
      * SBMJOB: Prt Claim-Claim All   XF - A/R Claim  * 
      *
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0004        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PPL7XFR '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   MOVEL(P)  W0RTN         #SSTR                          *Return code
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1C0C7        #SPAK                          Claim Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1BIC3        #SPAK                          Claim Company N
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WRST        #SSTR                          PRT Printer Dev
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WSST        #SSTR                          PRT Hold Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2WTST        #SSTR                          PRT Save Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     P2DYNB        #SPAK                          PRT Number of C
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      2             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2B8ST        #SSTR                          Status - Y or N
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'N'           #SSTR                          Online Report U
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Email Selection
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Title
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     *ZERO         #SPAK                          Sequence Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Person
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P8L9TX        #SSTR                          Claim Audit Sel
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P8JDAA        #SSTR                          Claim Audit Co
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P8N9T1        #SSTR                          Approval Claim
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Audit
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Intrl
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'R'           #SSTR                          Claim Print Typ
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PPL7XFR '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPL7XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * Send submit message to user.
      * Send message 'Report has been submitted'
     C                   MOVEL     'USR2720'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
      * Crt A/R Claim ExpComSG XF - A/R Claim Explanation  * 
     C                   CALL      'PMTNXFR'                            90      Crt A/R Claim E
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0159                         Claim Number
     C                   PARM      @CN(009)      WQ0160                         Claim Explanati
     C                   PARM      'S'           WQ0161                         Claim Expl Type
     C                   PARM      'CLMPRINT'    WQ0162                         Claim Expl Acti
     C                   PARM      ##JDT         WQ0163                         Claim Expl Acti
     C                   PARM      ##JTM         WQ0164                         Claim Expl Acti
     C                   PARM      'CAR'         WQ0165                         Claim Departmen
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PMTNXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      *================================================================
     CSR   UNEXIT        ENDSR
      /EJECT
     CSR   UOSUBR        BEGSR
      *================================================================
      * Edt Comment
      *================================================================
      * CASE:
      *  - c1 OR c2
      *   |- c1    : RCD.Claim Status is New
      *   |- c2    : RCD.Claim Status is Pending
      *   '-
     C                   IF        #1CJSX = 'N' OR
     C                             #1CJSX = 'P'
     C                   MOVEL     'ECC'         YL0018                         Clm Program USR
      * Crt A/R Claim Flow    XF - A/R Claim  * 
     C                   CALL      'PPLRXFR'                            90      Crt A/R Claim F
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0166                         Claim Number
     C     #1BIC3        PARM      #1BIC3        WQ0167                         Claim Company N
     C     #1ALNX        PARM      #1ALNX        WQ0168                         Claim Order Num
     C     #1RMNB        PARM      #1RMNB        WQ0169                         Load ID
     C     #1C3C7        PARM      #1C3C7        WQ0170                         Claim Ship to C
     C     #1RFTX        PARM      #1RFTX        WQ0171                         Claim Customer
     C     #1CJSX        PARM      #1CJSX        WQ0172                         Claim Status
     C     #1UASX        PARM      #1UASX        WQ0173                         AC Shipping Met
     C     #1VSST        PARM      #1VSST        WQ0174                         Record Status
     C     YL0018        PARM      YL0018        WQ0175                         Clm Program USR
     C     YL0014        PARM      YL0014        WQ0176                         Ship To Custome
     C     #1O2NA        PARM      #1O2NA        WQ0177                         Resale Purchase
     C     YL0029        PARM      YL0029        WQ0178                         Expense Code
     C     YL0015        PARM      YL0015        WQ0179                         Sequence Number
     C     YL0016        PARM      YL0016        WQ0180                         Sequence Number
     C     P8L9TX        PARM      P8L9TX        WQ0181                         Claim Audit Sel
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPLRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0004                         *SFLSEL
      * Send message 'Can't Edit Claim Comment'
     C                   MOVEL     'USR3453'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   UOEXIT        ENDSR
      /EJECT
     CSR   UPSUBR        BEGSR
      *================================================================
      * Void Claim.
      *================================================================
      * CASE:
      *  - c1 OR c2 ORc3 ORc4
      *   |- c1    : RCD.Claim Status is New
      *   |- c2    : RCD.Claim Status is Pending
      *   |- c3    : RCD.Claim Status is Approved
      *   |- c4    : RCD.Claim Status is Sls Approved
      *   '-
      * RMC 8/2/06 added approved & sls approved conditions so this match
      *            what the error msg says below.
      * Resolve Claim (Void)   E1 - A/R Claim  * 
     C                   IF        #1CJSX = 'N' OR
     C                             #1CJSX = 'P' OR
     C                             #1CJSX = 'A' OR
     C                             #1CJSX = 'S'
     C                   CLEAR                   PARC
     C                   Z-ADD     #1C0C7        PAC0C7                         Claim Number
      *
     C                   CALL      'PDT3E1R'                            90      Resolve Claim (
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: AR Claim H
     C                   PARM      P8L9TX        WQ0182                         Claim Audit Sel
     C                   PARM      P8JDAA        WQ0183                         Claim Audit Co
     C                   PARM      P8N9T1        WQ0184                         Approval Claim
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDT3E1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0005                         *SFLSEL
      * Send message 'Can't voided cmpltd claim'
     C                   MOVEL     'USR2829'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   UPEXIT        ENDSR
      /EJECT
     CSR   UQSUBR        BEGSR
      *================================================================
      * WW A/R Claim Approval
      *================================================================
      * Crt A/R Claim Apprl   XF - A/R Claim Approval  * 
     C                   CALL      'PPMIXFR'                            90      Crt A/R Claim A
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0201                         Claim Number
     C                   PARM      #1ZLCD        WQ0202                         Salesperson to
     C                   PARM      #1BIC3        WQ0203                         Claim Company N
     C                   PARM      #1ALNX        WQ0204                         Claim Order Num
     C                   PARM      #1RMNB        WQ0205                         Load ID
     C                   PARM      #1C3C7        WQ0206                         Claim Ship to C
     C                   PARM      #1RFTX        WQ0207                         Claim Customer
     C                   PARM      #1CHSX        WQ0208                         Claim Type
     C                   PARM      #1CJSX        WQ0209                         Claim Status
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPMIXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   EVAL      YL0039 = ' '                                 Claim Departmen
      * WW Claim Approval     DF - A/R Claim Approval  * 
     C                   CALL      'PPMHDFR'                            90      WW Claim Approv
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0210                         Claim Number
     C                   PARM      #1BIC3        WQ0211                         Claim Company N
     C                   PARM      #1ALNX        WQ0212                         Claim Order Num
     C                   PARM      #1RMNB        WQ0213                         Load ID
     C                   PARM      #1C3C7        WQ0214                         Claim Ship to C
     C                   PARM      #1RFTX        WQ0215                         Claim Customer
     C                   PARM      YL0039        WQ0216                         Claim Departmen
     C                   PARM      P8L9TX        WQ0217                         Claim Audit Sel
     C                   PARM      P8JDAA        WQ0218                         Claim Audit Co
     C                   PARM      P8N9T1        WQ0219                         Approval Claim
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPMHDFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UQEXIT        ENDSR
      /EJECT
     CSR   URSUBR        BEGSR
      *================================================================
      * Validate use of Option 17  sales deny/ approval
      *================================================================
      * CASE: PAR.Edit/Display Usr is Edit Allowed
      * CASE: RCD.Claim Status is Pending
     C                   IF        P5V7SX = 'E'
     C                   IF        #1CJSX = 'P'
     C                   MOVEL     ##USR         YL0040                         User Profile Na
      *
     C                   EVAL      WN0001 = ' '                                 User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0040        WL0004                         User Profile Na
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0005        YN0003                         Allow Multi_Com
     C                   MOVEL(P)  WL0006        YN0004                         Default Printer
     C                   MOVEL(P)  WL0007        YN0005                         Salesperson Cod
     C                   Z-ADD     WL0008        YL0041                         Company Number
     C                   MOVEL(P)  WL0009        WN0001                         User Code Model
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
      * SET Message Queue Dest US - /UT User Source  * 
     C                   IF        W0RTN = @CN(010)
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     YL0040        ZA0006                         User Profile Na
     C                   MOVEL     'SAPCLM'      ZA0007                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * CASE: PAR.User Code Model is equal to blank
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0001 = ' '
     C                   MOVEL(P)  YL0040        WL0010                         User Profile Na
     C                   MOVEL(P)  'SAPCLM'      WL0011                         Application Cod
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0012        YN0001                         Company Number
     C                   MOVEL(P)  WL0013        YL0042                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0001        WL0010                         User Profile Na
     C                   MOVEL(P)  'SAPCLM'      WL0011                         Application Cod
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0012        YN0001                         Company Number
     C                   MOVEL(P)  WL0013        YL0042                         Warehouse Code
     C                   END                                                    *FI
     C                   MOVEL     YL0042        YN0002                         Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     YL0040        ZA0008                         User Profile Na
     C                   MOVEL     'SAPCLM'      ZA0009                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C                   IF        YL0041 <> 0
     C                   Z-ADD     YL0041        YN0001                         Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                   IF        YL0042 <> ' '
     C                   CALL      'PNKDXFR'                            90      RTV Prod Whse f
     C                   PARM      *BLANK        W0RTN
     C                   PARM      *BLANK        WQ0220                         Warehouse Code
     C                   PARM      YL0041        WQ0221                         Shipping Compan
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PNKDXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * CASE: PGM.*Return code is *Normal
      * 051607 SLM ADD FUNCTION - DLY029
      * Sales Deny/Approved
     C                   IF        W0RTN = ' '
     C                   EXSR      USSUBR                                       Sales Deny/Appr
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0010                         *SFLSEL
      * Send message 'Option Not Allowed'
     C                   MOVEL     'USR2262'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   GOTO      UREXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0011                         *SFLSEL
      * Send message 'Claim Status Must Be P'
     C                   MOVEL     'USR3720'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   GOTO      UREXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0012                         *SFLSEL
      * Send message 'Option Not Allowed'
     C                   MOVEL     'USR2262'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   GOTO      UREXIT                                       *QUIT
     C                   END                                                    *FI
      *================================================================
     CSR   UREXIT        ENDSR
      /EJECT
     CSR   USSUBR        BEGSR
      *================================================================
      * Sales Deny/Approved
      *================================================================
      * RTV Salesperson Type   RT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  #1ZLCD        WL0014                         Salesperson Cod
     C                   EXSR      SMRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0015        YL0043                         Sales Type Code
     C                   MOVEL     #1TBTX        YL0044                         Claim Resolutio
      * Dsp Approve/Deny Clm  DF - A/R Claim Product  * 
     C                   CALL      'PPABDFR'                            90      Dsp Approve/Den
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0222                         Claim Number
     C                   PARM      #1BIC3        WQ0223                         Claim Company N
     C                   PARM      #1ALNX        WQ0224                         Claim Order Num
     C                   PARM      #1C3C7        WQ0225                         Claim Ship to C
     C                   PARM      #1CJSX        WQ0226                         Claim Status
     C                   PARM      #1AYVL        WQ0227                         Claim Amount
     C     YL0044        PARM      YL0044        WQ0228                         Claim Resolutio
     C                   PARM      P1AIC3        WQ0229                         Company Number
     C                   PARM      #1ZLCD        WQ0230                         Salesperson to
     C                   PARM      YL0043        WQ0231                         Sales Type Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPABDFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   USEXIT        ENDSR
      /EJECT
     CSR   UTSUBR        BEGSR
      *================================================================
      * Allow changes or entry of Internal notes and review of system no
      *================================================================
      * Edit Internal Notes at any time and all review of system notes
     C                   EXSR      UUSUBR                                       Edit Internal N
      *================================================================
     CSR   UTEXIT        ENDSR
      /EJECT
     CSR   UUSUBR        BEGSR
      *================================================================
      * Edit Internal Notes at any time and all review of system notes
      *================================================================
      * Edt Claim Comm InternalEF - A/R Claim Explanation  * 
     C                   CLEAR                   PBRC
     C                   Z-ADD     #1C0C7        PBC0C7                         Claim Number
      *
     C                   CALL      'PMTKEFR'                            90      Edt Claim Comm
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PBRC                           KEY: AR Claim E
     C                   PARM      *BLANK        WQ0232                         Return Command
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PMTKEFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UUEXIT        ENDSR
      /EJECT
     CSR   UVSUBR        BEGSR
      *================================================================
      * Resolve Claim.-- which is approval or denial for memo
      *================================================================
      * CASE:
      *  - c1 OR c2
      *   |- c1    : RCD.Claim Status is Sls Approved
      *   |- c2    : RCD.Claim Status is Reprocess
      *   '-
      * Resolve Claim          E1 - A/R Claim  * 
     C                   IF        #1CJSX = 'S' OR
     C                             #1CJSX = 'R'
     C                   CLEAR                   PCRC
     C                   Z-ADD     #1C0C7        PCC0C7                         Claim Number
      *
     C                   CALL      'PDN8E1R'                            90      Resolve Claim
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PCRC                           KEY: AR Claim H
     C                   PARM      P8L9TX        WQ0233                         Claim Audit Sel
     C                   PARM      P8JDAA        WQ0234                         Claim Audit Co
     C                   PARM      P8N9T1        WQ0235                         Approval Claim
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDN8E1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1SEL         ZA0013                         *SFLSEL
      * Send message 'Claim Resolve(SlsApvonly)'
     C                   MOVEL     'USR2786'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9846      *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   UVEXIT        ENDSR
      /EJECT
     CSR   UWSUBR        BEGSR
      *================================================================
      * Completed Claim for Expense records only
      *================================================================
      * Edt Completed Claim    E1 - A/R Claim  * 
     C                   CLEAR                   PDRC
     C                   Z-ADD     #1C0C7        PDC0C7                         Claim Number
      *
     C                   CALL      'PLBDE1R'                            90      Edt Completed C
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PDRC                           KEY: AR Claim H
     C                   PARM      P8L9TX        WQ0236                         Claim Audit Sel
     C                   PARM      P8JDAA        WQ0237                         Claim Audit Co
     C                   PARM      P8N9T1        WQ0238                         Approval Claim
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PLBDE1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
      *================================================================
     CSR   UWEXIT        ENDSR
      /EJECT
     CSR   UXSUBR        BEGSR
      *================================================================
      * Pending Claim.
      *================================================================
      * CASE: RCD.Claim Status is New
      * Purge out the Claim Exp System records not need at this point
     C                   IF        #1CJSX = 'N'
     C                   EXSR      UYSUBR                                       Purge out the C
      * Crt A/R Claim Pend FlowXF - A/R Claim  * 
     C                   CALL      'PPNTXFR'                            90      Crt A/R Claim P
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0239                         Claim Number
     C                   PARM      #1ZLCD        WQ0240                         Salesperson to
     C                   PARM      #1BIC3        WQ0241                         Claim Company N
     C                   PARM      #1ALNX        WQ0242                         Claim Order Num
     C                   PARM      #1RMNB        WQ0243                         Load ID
     C                   PARM      #1C3C7        WQ0244                         Claim Ship to C
     C                   PARM      #1RFTX        WQ0245                         Claim Customer
     C                   PARM      #1CHSX        WQ0246                         Claim Type
     C                   PARM      #1CJSX        WQ0247                         Claim Status
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPNTXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * RTV Alpha Value        RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0001                         Company Number
     C                   MOVEL(P)  'CLMDIST'     WL0002                         Company Value C
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0003        YL0038                         System Value Al
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.System Value Alpha is *NONE
      *   |- c2    : LCL.System Value Alpha is Equal to Blank
      *   '-
     C                   IF        YL0038 = '*NONE' OR
     C                             YL0038 = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Select the Report.
     C                   EXSR      UZSUBR                                       Select the Repo
     C                   END                                                    *FI
      * Setup message data for message
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0014                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0014 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Claim is now pending'
     C                   MOVEL     'USR3518'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0015                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0015 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
     C                   MOVEL     #1CJSX        ZA0016                         Claim Status
      * Send message 'Claim Status is not OK'
     C                   MOVEL     'USR3519'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   UXEXIT        ENDSR
      /EJECT
     CSR   UYSUBR        BEGSR
      *================================================================
      * Purge out the Claim Exp System records not need at this point
      *================================================================
      * Claims Exp System records are created when changes occur
      * If pending or new purge these records.
      * as records are created after pending and new status then these wi
      * will trigger to send emails to the distr list if this
      * feature was requested
      * Dlt Claim ExpSysPrToPndRT - A/R Claim Explanation  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1C0C7        WL0016                         Claim Number
     C                   MOVEL(P)  @CN(011)      WL0017                         Claim Expl Acti
     C                   EXSR      SNRVGN
      *================================================================
     CSR   UYEXIT        ENDSR
      /EJECT
     CSR   UZSUBR        BEGSR
      *================================================================
      * Select the Report.
      *================================================================
      * Dynamically override the SBMJOB command
      * with the job queue from the Print Options screen.
     C                   Z-ADD     *ZEROS        ZQ
     C     'JOBQ('       CAT(P)    '*JOBD':ZQ    W0SJO                          *Sbmjob overrid
     C                   Z-ADD     *ZEROS        ZQ
     C     W0SJO         CAT(P)    ')':ZQ        W0SJO                          *Sbmjob overrid
      * ** Send report to all on the distribution list   2/22/06 LJB
     C                   EVAL      WUFET1 = ' '                                 Approval Person
     C                   MOVEL     YL0038        WUFET1                         Approval Person
      * ** Set flag to "N" (not new), and set text for report
     C                   MOVEL     'N'           P2B8ST                         Status - Y or N
     C                   MOVEL     'P'           P7CFSX                         @Claim Status
      * SLM 041708 E00104 Modifications on parms
      * Submit the Report. Regular claim
      * SBMJOB: Prt Claim-Claim All   XF - A/R Claim  * 
      *
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0005        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PPL7XFR '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   MOVEL(P)  W0RTN         #SSTR                          *Return code
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1C0C7        #SPAK                          Claim Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     #1BIC3        #SPAK                          Claim Company N
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*JOB'        #SSTR                          PRT Printer Dev
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*YES'        #SSTR                          PRT Hold Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          PRT Save Output
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     1             #SPAK                          PRT Number of C
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      2             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  P2B8ST        #SSTR                          Status - Y or N
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'N'           #SSTR                          Online Report U
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'E'           #SSTR                          Email Selection
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Title
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     *ZERO         #SPAK                          Sequence Number
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  WUFET1        #SSTR                          Approval Person
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Claim Audit Sel
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Claim Audit Co
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   EVAL      #SSTR = ' '                                  Approval Claim
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      50            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Audit
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  '*NO'         #SSTR                          Claim Prt Intrl
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      4             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  'R'           #SSTR                          Claim Print Typ
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      1             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PPL7XFR '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPL7XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      * Send system message that a pend claim was printed
      * Crt A/R Claim ExpComSG XF - A/R Claim Explanation  * 
     C                   CALL      'PMTNXFR'                            90      Crt A/R Claim E
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0248                         Claim Number
     C                   PARM      @CN(012)      WQ0249                         Claim Explanati
     C                   PARM      'S'           WQ0250                         Claim Expl Type
     C                   PARM      @CN(013)      WQ0251                         Claim Expl Acti
     C                   PARM      ##JDT         WQ0252                         Claim Expl Acti
     C                   PARM      ##JTM         WQ0253                         Claim Expl Acti
     C                   PARM      'CAR'         WQ0254                         Claim Departmen
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PMTNXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
      *================================================================
     CSR   UZEXIT        ENDSR
      /EJECT
     CSR   XDCK2         BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                   MOVEL     *BLANK        W0RTN
     C                   Z-ADD     *ZERO         XDINDT
      * If external date is zero, do not check
     C     XDEXDT        CABEQ     *ZERO         XDCK2E
      *................................................................
      * Map external to internal according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDEX02        XDINDD                         DD
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDEX02        XDINMM                         MM
     C                   Z-ADD     XDEX03        XDINDD                         DD
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDEX02        XDINYY                         YY
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINDD                         DD
     C                   END
     C                   END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C                   IF        XDINYY < XOFFYY
     C                   ADD       100           XDINYY
     C                   END
     C     YPMTFD        CABNE     *BLANK        XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C     XDINMM        CABLT     1             XDCK2M
     C     XDINMM        CABGT     12            XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C     XDINDD        CABLT     1             XDCK2M
     C     XDINDD        CABGT     @XD(XDINMM)   XDCK2M
      *................................................................
      * Special case: leap year
     C                   IF        XDINMM = 2
     C                   IF        XDINYY <> *ZERO AND
     C                             XDINYY <> 200
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   ELSE
     C                   Z-ADD     1             XDWK1
     C                   END
      * Year is not leap
     C                   IF        XDWK1 <> *ZERO
     C     XDINDD        CABGT     28            XDCK2M
     C                   END
     C                   END
     C                   GOTO      XDCK2E
      *................................................................
      * Send error message
     C     XDCK2M        TAG
      * Send message '*Invalid date'
     C                   MOVEL     'Y2U0006'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   MOVEL     'Y2U0006'     W0RTN
      * Disable time portion if timestamp is validated
     C                   Z-ADD     *ZERO         XTTIM
      *================================================================
     CSR   XDCK2E        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C                   IF        ZINPOS >= 03072 AND
     C                             ZINPOS <= 06144
     C     W0CRW         SUB       12            W0CSRR
     C                   DIV       02            W0CSRR
     C                   MVR                     ZINPOS
     C                   ADD       12            ZINPOS
     C                   MULT      256           ZINPOS
     C                   ADD       W0CCL         ZINPOS
      * Calculate rrn of the cursor position
     C                   ADD       ##SFRC        W0CSRR
     C                   ENDIF
     C                   EVALR     W0CFL = ' '
     C                   Z-ADD     1             F
     C     ZINPOS        LOOKUP    W0END(F)                           96  96    LE
     C                   IF        *IN96 AND
     C                             ZINPOS >= W0BEG(F)
     C                   MOVEL     W0NAM(F)      W0CFL
     C                   ENDIF
     C                   IF        W0CFL = ' '
     C                   Z-ADD     0             W0CSRR
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     12            ZHSTRW
     C                   Z-ADD     23            ZHNDRW
     C                   Z-ADD     2             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL >= 013 AND
     C                             ZHCSCL <= 014 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#2CHSX'      YPMTFD                         Claim Type
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 017 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#CUHSX'      YPMTFD                         Clm Dta Steps-C
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 021 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#CUISX'      YPMTFD                         Clm Dta Steps-C
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 025 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#CMITX'      YPMTFD                         Clm Dta Steps-I
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 029 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#CUJSX'      YPMTFD                         Clm Dta Steps-R
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 033 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#CUKSX'      YPMTFD                         Clm Dta Steps-E
     C                   END
      *
     C                   IF        ZHCSRW = 011 AND
     C                             ZHCSCL = 131 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#2CJSX'      YPMTFD                         Claim Status
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      * Clear all neither parameters
     C                   EVAL      P1AJCD = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         P1AIC3                         Company Number
     C                   EVAL      P1DNCD = ' '                                 Application Cod
     C                   EVAL      P1BCCD = ' '                                 Salesperson Cod
     C                   EVAL      P1I6ST = ' '                                 Allow Multi_Com
     C                   EVAL      P1MPNA = ' '                                 Default Printer
      * Clear all neither parameters
     C                   EVAL      P2WRST = ' '                                 PRT Printer Dev
     C                   EVAL      P2WSST = ' '                                 PRT Hold Output
     C                   EVAL      P2WTST = ' '                                 PRT Save Output
     C                   Z-ADD     *ZERO         P2DYNB                         PRT Number of C
     C                   EVAL      P2WUST = ' '                                 PRT Night Queue
     C                   EVAL      P2BVVN = ' '                                 PRT Night Queue
     C                   Z-ADD     *ZERO         P2M8NB                         System Value Nu
     C                   EVAL      P2B8ST = ' '                                 Status - Y or N
      * Clear all neither parameters
     C                   EVAL      P3DESX = ' '                                 Return Command
      * Clear all neither parameters
     C                   EVAL      P4DJSX = ' '                                 Stop Program US
      * Clear all neither parameters
     C                   Z-ADD     *ZERO         P6AJAA                         Company Number
     C                   Z-ADD     *ZERO         P6AJAB                         Date 1
     C                   Z-ADD     *ZERO         P6AJAC                         Date 2
     C                   Z-ADD     *ZERO         P6AJAE                         Order Number 1
      * Clear all neither parameters
     C                   EVAL      P7CFSX = ' '                                 @Claim Status
      * Clear all neither parameters
     C                   EVAL      P8L9TX = ' '                                 Claim Audit Sel
     C                   EVAL      P8JDAA = ' '                                 Claim Audit Co
     C                   EVAL      P8N9T1 = ' '                                 Approval Claim
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field Display Flag
     C                   EVAL      WUQKST = ' '
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAC0C7                         Claim Number
     C                   Z-ADD     *ZERO         WAAANX                         Claim Explanati
     C                   Z-ADD     *ZERO         WALGNY                         Claim Exp Usr S
     C                   Z-ADD     *ZERO         WARRDT                         Claim Expl Note
     C                   Z-ADD     *ZERO         WARSDT                         Claim Expl Acti
     C                   Z-ADD     *ZERO         WAC9TM                         Claim Expl Acti
     C                   Z-ADD     *ZERO         WAMJDT                         Create Date
     C                   Z-ADD     *ZERO         WABETM                         Create Time
     C                   Z-ADD     *ZERO         WAMKDT                         Change Date
     C                   Z-ADD     *ZERO         WABFTM                         Change Time
      * Define work field USR First Position
     C                   EVAL      WUI3ST = ' '
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Define work field Nbr of Copies-Alpha   USR
     C                   EVAL      WUYZCD = ' '
      * Define work field PRT Night Queue Run Sts
     C                   EVAL      WUWUST = ' '
      * Define work field BLANK
     C                   EVAL      WUGSTX = ' '
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBAIC3                         Company Number
     C                   Z-ADD     *ZERO         WBAATM                         Job Time
     C                   Z-ADD     *ZERO         WBAXDT                         Job Date
      * Define work field Approval Person Email
     C                   EVAL      WUFET1 = ' '
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEC0C7                         Claim Number
     C                   Z-ADD     *ZERO         WEBIC3                         Claim Company N
     C                   Z-ADD     *ZERO         WEALNX                         Claim Order Num
     C                   Z-ADD     *ZERO         WERMNB                         Load ID
     C                   Z-ADD     *ZERO         WEC3C7                         Claim Ship to C
     C                   Z-ADD     *ZERO         WEAYVL                         Claim Amount
     C                   Z-ADD     *ZERO         WEAZVL                         Claim Net Loss
     C                   Z-ADD     *ZERO         WEA0VL                         Claim Approved
     C                   Z-ADD     *ZERO         WEA1VL                         Lab Fee
     C                   Z-ADD     *ZERO         WEMLDT                         Resolve Claim b
     C                   Z-ADD     *ZERO         WEEJDT                         Actual Delivery
     C                   Z-ADD     *ZERO         WEMMDT                         Claim Called in
     C                   Z-ADD     *ZERO         WEMNDT                         Claim Entry Dat
     C                   Z-ADD     *ZERO         WEBGTM                         Claim Entry Tim
     C                   Z-ADD     *ZERO         WEC4C7                         Resale Ship to
     C                   Z-ADD     *ZERO         WENFDT                         Sales Approved
     C                   Z-ADD     *ZERO         WEBJTM                         Sales Approved
     C                   Z-ADD     *ZERO         WEMODT                         Approved_Denied
     C                   Z-ADD     *ZERO         WEBHTM                         Approved_Denied
     C                   Z-ADD     *ZERO         WEMPDT                         Memo Created Da
     C                   Z-ADD     *ZERO         WEBITM                         Memo Created Ti
     C                   Z-ADD     *ZERO         WEEOVL                         Approved Net Lo
     C                   Z-ADD     *ZERO         WEEPVL                         Total Expense A
     C                   Z-ADD     *ZERO         WEP6DT                         Memo Post Date
     C                   Z-ADD     *ZERO         WECRTM                         Memo Post Time
     C                   Z-ADD     *ZERO         WEYSNX                         TFS Batch Numbe
     C                   Z-ADD     *ZERO         WEF7PC                         Avg TF Responsi
     C                   Z-ADD     *ZERO         WEF8PC                         Avg SBF Respons
     C                   Z-ADD     *ZERO         WEF9PC                         STF Responsibil
     C                   Z-ADD     *ZERO         WEEQVL                         FPR ID
     C                   Z-ADD     *ZERO         WEERVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WEESVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WEETVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WEGAPC                         AC Unused Pct 1
     C                   Z-ADD     *ZERO         WEGBPC                         AC Unused Pct 2
     C                   Z-ADD     *ZERO         WEMJDT                         Create Date
     C                   Z-ADD     *ZERO         WEBETM                         Create Time
     C                   Z-ADD     *ZERO         WEMKDT                         Change Date
     C                   Z-ADD     *ZERO         WEBFTM                         Change Time
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(014)      XDTSDL
     C                   MOVEL     XDTSDL        WEBVTS                         Created Dt Tm
     C                   MOVEL     XDTSDL        WEBWTS                         Updated Dt Tm
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'Y'           W0PMT
      *
     C                   EVAL      W0SJO = ' '                                  *Sbmjob overrid
      * Define local variables for subroutine SJRVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   EVAL      WL0002 = ' '
     C                   EVAL      WL0003 = ' '
      * Define local variables for subroutine SKRVGN.
     C                   EVAL      WL0004 = ' '
     C                   EVAL      WL0005 = ' '
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
     C                   Z-ADD     *ZERO         WL0008
     C                   EVAL      WL0009 = ' '
      * Define local variables for subroutine SLRVGN.
     C                   EVAL      WL0010 = ' '
     C                   EVAL      WL0011 = ' '
     C                   Z-ADD     *ZERO         WL0012
     C                   EVAL      WL0013 = ' '
      * Define local variables for subroutine SMRVGN.
     C                   EVAL      WL0014 = ' '
     C                   EVAL      WL0015 = ' '
      * Define local variables for subroutine SNRVGN.
     C                   Z-ADD     *ZERO         WL0016
     C                   EVAL      WL0017 = ' '
      * Define local variables for subroutine SPCHRC.
     C                   Z-ADD     *ZERO         WL0018
     C                   EVAL      WL0019 = ' '
      * Define local work field First Time Flag
     C                   EVAL      YL0001 = ' '
      * Define local work field Clm Dta Steps-Clm Usr
     C                   EVAL      YL0002 = ' '
      * Define local work field Clm Dta Steps-Com Usr
     C                   EVAL      YL0003 = ' '
      * Define local work field Clm Dta Steps-Int Usr
     C                   EVAL      YL0004 = ' '
      * Define local work field Clm Dta Steps-Rsl Usr
     C                   EVAL      YL0005 = ' '
      * Define local work field Clm Dta Steps-Exp Usr
     C                   EVAL      YL0006 = ' '
      * Define local work field Note Text
     C                   EVAL      YL0007 = ' '
      * Define local work field Claim Memo Number
     C                   Z-ADD     *ZERO         YL0008
      * Define local work field Claim Number (Alpha) USR
     C                   EVAL      YL0009 = ' '
      * Define local work field Claim Memo # Line Usr
     C                   EVAL      YL0010 = ' '
      * Define local work field Resale Memo Number
     C                   Z-ADD     *ZERO         YL0011
      * Define local work field Claim Number (Alpha) USR
     C                   EVAL      YL0012 = ' '
      * Define local work field Display Prt Opt Pmt USR
     C                   EVAL      YL0013 = ' '
      * Define local work field Ship To Customer
     C                   Z-ADD     *ZERO         YL0014
      * Define local work field Sequence Number
     C                   Z-ADD     *ZERO         YL0015
      * Define local work field Sequence Number    044215
     C                   Z-ADD     *ZERO         YL0016
      * Define local work field Module Release Status
     C                   EVAL      YL0017 = ' '
      * Define local work field Clm Program USR
     C                   EVAL      YL0018 = ' '
      * Define local work field Claim Company Number
     C                   Z-ADD     *ZERO         YL0019
      * Define local work field Claim Order Number
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Claim Number
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field Load ID
     C                   Z-ADD     *ZERO         YL0022
      * Define local work field Claim Ship to Customer
     C                   Z-ADD     *ZERO         YL0023
      * Define local work field Claim Customer Name
     C                   EVAL      YL0024 = ' '
      * Define local work field Claim Status
     C                   EVAL      YL0025 = ' '
      * Define local work field AC Shipping Method
     C                   EVAL      YL0026 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0027 = ' '
      * Define local work field Resale Purchase Order Nbr
     C                   EVAL      YL0028 = ' '
      * Define local work field Expense Code
     C                   EVAL      YL0029 = ' '
      * Define local work field PRT Night Queue Run Sts
     C                   EVAL      YL0030 = ' '
      * Define local work field Load Id Pass
     C                   Z-ADD     *ZERO         YL0031
      * Define local work field Claim Number Pass Usr
     C                   Z-ADD     *ZERO         YL0032
      * Define local work field Date 1          PASS  USR
     C                   Z-ADD     *ZERO         YL0033
      * Define local work field Ship to Customer Pass USR
     C                   Z-ADD     *ZERO         YL0034
      * Define local work field Company Number Pass   USR
     C                   Z-ADD     *ZERO         YL0035
      * Define local work field Order Number 1  PASS  USR
     C                   Z-ADD     *ZERO         YL0036
      * Define local work field Return Code Usr
     C                   EVAL      YL0037 = ' '
      * Define local work field System Value Alpha
     C                   EVAL      YL0038 = ' '
      * Define local work field Claim Department Code
     C                   EVAL      YL0039 = ' '
      * Define local work field User Profile Name
     C                   EVAL      YL0040 = ' '
      * Define null work field Company Number
     C                   Z-ADD     *ZERO         YN0001
      * Define null work field Warehouse Code
     C                   EVAL      YN0002 = ' '
      * Define null work field Allow Multi_Company
     C                   EVAL      YN0003 = ' '
      * Define null work field Default Printer
     C                   EVAL      YN0004 = ' '
      * Define null work field Salesperson Code
     C                   EVAL      YN0005 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0041
      * Define local work field Warehouse Code
     C                   EVAL      YL0042 = ' '
      * Define local work field Sales Type Code
     C                   EVAL      YL0043 = ' '
      * Define local work field Claim Resolution Explan.
     C                   EVAL      YL0044 = ' '
      * Define null work field Return Command USR
     C                   EVAL      YN0006 = ' '
      * Define local work field Claim Expl Action
     C                   EVAL      YL0045 = ' '
      * Define local work field Clm Dta Steps-Com Usr
     C                   EVAL      YL0046 = ' '
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C     *DTAARA       DEFINE    Y2CTOFF       XOFF
     C                   IN        XOFF
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     06            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
     C                   Z-ADD     9999999       W0SLM                          *Scan limit
      * *** Setup Security & Company Title ***
     C                   EVAL      P1DNCD = ' '                                 Application Cod
     C                   MOVEL     'OMS'         P1DNCD                         Application Cod
      *
     C                   EVAL      WN0083 = ' '                                 User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                   MOVEL     ##USR         WN0083                         User Profile Na
      *
     C                   EVAL      WN0084 = ' '                                 User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0083        WL0004                         User Profile Na
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0005        P1I6ST                         Allow Multi_Com
     C                   MOVEL(P)  WL0006        P1MPNA                         Default Printer
     C                   MOVEL(P)  WL0007        P1BCCD                         Salesperson Cod
     C                   Z-ADD     WL0008        YL0041                         Company Number
     C                   MOVEL(P)  WL0009        WN0084                         User Code Model
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
      * SET Message Queue Dest US - /UT User Source  * 
     C                   IF        W0RTN = @CN(010)
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0083        ZA0020                         User Profile Na
     C                   MOVEL     P1DNCD        ZA0021                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * CASE: PAR.User Code Model is equal to blank
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0084 = ' '
     C                   MOVEL(P)  WN0083        WL0010                         User Profile Na
     C                   MOVEL(P)  P1DNCD        WL0011                         Application Cod
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0012        P1AIC3                         Company Number
     C                   MOVEL(P)  WL0013        YL0042                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0084        WL0010                         User Profile Na
     C                   MOVEL(P)  P1DNCD        WL0011                         Application Cod
     C                   EXSR      SLRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0012        P1AIC3                         Company Number
     C                   MOVEL(P)  WL0013        YL0042                         Warehouse Code
     C                   END                                                    *FI
     C                   MOVEL     YL0042        P1AJCD                         Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0083        ZA0022                         User Profile Na
     C                   MOVEL     P1DNCD        ZA0023                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C                   IF        YL0041 <> 0
     C                   Z-ADD     YL0041        P1AIC3                         Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                   IF        YL0042 <> ' '
     C                   CALL      'PNKDXFR'                            90      RTV Prod Whse f
     C                   PARM      *BLANK        W0RTN
     C     P1AJCD        PARM      *BLANK        WQ0263                         Warehouse Code
     C                   PARM      YL0041        WQ0264                         Shipping Compan
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PNKDXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SSRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
      * size of the number of lines in the subfile.
      * SFL Fold/Drop  RPG    US - /UT User Source  * 
     C                   Z-ADD     12            ##SFPG
      * *** Do not display purged/posted deposits. ***
     C                   MOVEL     'N'           WUQKST                         Display Flag
     C                   MOVEL     'N'           WUWUST                         PRT Night Queue
     C                   MOVEL     '*YES'        YL0013                         Display Prt Opt
     C                   MOVEL     'Y'           YL0001                         First Time Flag
      * ==>CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
      * Rtv Module Release Sts RT - OMS Transformation Ctl  * 
     C                   EXSR      SURVGN
      * <==CCMRLS2 ACK 02/17/25 - Disable new claims creation from IBMi
      * CHANGE LOG HISTORY
     C                   EXSR      NDSUBR                                       CHANGE LOG HIST
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
** @XD
312931303130313130313031
** W0BEG
01042010490153801794020500282102829
02833028370284102845028490285102888
02892029000290802916029470307403077
03085030890309303097031010310503107
03116031300314403148031560316403172
0320303333
** W0END
01044010780166701923021790282702830
02833028370284102845028490285802890
02898029060291402945029470307503083
03086030890309303097031010310503114
03128031420314603154031620317003200
0320303407
** W0NAM
#2ZLCD    #CKPT1    #CG5T1    #CG6T1    #2ST1     V2C0C7    #2CHSX
#CUHSX    #CUISX    #CMITX    #CUJSX    #CUKSX    V2MNDT    V2BIC3
V2ALNX    #2RMNB    V2C3C7    #2RFTX    #2CJSX    #1SEL     V1C0C7
#1CHSX    #RUHSX    #RUISX    #RMITX    #RUJSX    #RUKSX    V1MNDT
#1AYVL    #1AZVL    V1BIC3    V1ALNX    #1RMNB    V1C3C7    #1RFTX
#1CJSX    #RE9T1
** @CN
00001 6=Prt Claim
00002 15=Display Claim
00003 Product =
00004 Resale =
00005 USR0752
00006 Claim Expense Pending Rpt
00007 Prt Customer Claim
00008 Customer Claim Paper
00009 Claim was printed
00010 Y2U0005
00011 CLMCHANGE
00012 Pending Process Prt Claim
00013 CLMPENDING
00014 0001-01-01-00.00.00.00000
