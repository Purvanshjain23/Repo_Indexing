// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUXEPFR
// ?Date: 14.08.2025 Time: 12:07:06
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print Yes/No          USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

//?USER: Record selection processing

//?Load Id or Schedule Ship Date
CASE;

// IF PAR.Load ID is GT Zero
IF PAR.Load_ID > *ZERO;

// AND PAR.Load ID NE DB1.Load ID
AND PAR.Load_ID <> DB1.Load_ID;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Load Id or Schedule Ship Date
// IF PAR.Scheduled Ship Date is entered
IF PAR.Scheduled_Ship_Date <> *ZERO;

// AND PAR.Scheduled Ship Date NE DB1.Scheduled Ship Date
AND PAR.Scheduled_Ship_Date <> DB1.Scheduled_Ship_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select records
CASE;

// IF PGM.*Record selected is *NO
IF PGM.*Record_selected = 'N';

//?Select records
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Order Number = CON.*ZERO
PAR.Order_Number = *ZERO;

EXECUTE FUNCTION(RTV Prelim Pick Orders RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1399795;
PARAMETER(DB1.Load_ID);
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

//?Check for at least one valid warehouse
EXECUTE FUNCTION(VAL Prelim List Dtls   RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1409133;
PARAMETER(DB1.Load_ID);
PARAMETER(PAR.USR_Warehouse_Code);
PARAMETER(PAR.USR_CDE_Parm_1);
PARAMETER(PAR.USR_CDE_Parm_2);
PARAMETER(PAR.USR_CDE_Parm_3);
PARAMETER(PAR.USR_CDE_Parm_4);
PARAMETER(PAR.USR_CDE_Parm_5);
PARAMETER(PAR.USR_CDE_Parm_6);
PARAMETER(PAR.USR_CDE_Parm_7);
PARAMETER(PAR.USR_CDE_Parm_8);
PARAMETER(PAR.USR_CDE_Parm_9);
PARAMETER(PAR.USR_Select_Omit_Flag);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 //?Validate warehouse selections
 //?C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
 EXECUTE FUNCTION(RTV Whse/Non Cancelled RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428700;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.Warehouse_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 //?Select passed warehouses
 CASE;

 // IF PAR.USR Select/Omit Flag is Select
 IF PAR.USR_Select_Omit_Flag = 'S';

 //?Select only Order Detail records matching warehouse codes passed in
 CASE;

 // IF PAR.USR Warehouse Code is Warehouse Code not Blank
 IF PAR.USR_Warehouse_Code <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Warehouse_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 1 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_1 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_1);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 2 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_2 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_2);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 3 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_3 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_3);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 4 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_4 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_4);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 5 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_5 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_5);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 6 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_6 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_6);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 7 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_7 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_7);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 8 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_8 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_8);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.USR CDE Parm 9 is Warehouse Code not Blank
 IF PAR.USR_CDE_Parm_9 <> *BLANK;

 EXECUTE FUNCTION(RTV Check for Whse     RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428690;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_CDE_Parm_9);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 QUIT;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Omit passed warehouses
 CASE;

 // IF PAR.USR Select/Omit Flag is Omit
 IF PAR.USR_Select_Omit_Flag = 'O';

 //?Omit any Order Detail records matching warehouse codes passed in
 CASE;

 // IF PAR.USR Warehouse Code is Warehouse Code not Blank
 IF PAR.USR_Warehouse_Code <> *BLANK;

 // OR PAR.USR CDE Parm 1 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_1 <> *BLANK;

 // OR PAR.USR CDE Parm 2 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_2 <> *BLANK;

 // OR PAR.USR CDE Parm 3 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_3 <> *BLANK;

 // OR PAR.USR CDE Parm 4 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_4 <> *BLANK;

 // OR PAR.USR CDE Parm 5 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_5 <> *BLANK;

 // OR PAR.USR CDE Parm 6 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_6 <> *BLANK;

 // OR PAR.USR CDE Parm 7 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_7 <> *BLANK;

 // OR PAR.USR CDE Parm 8 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_8 <> *BLANK;

 // OR PAR.USR CDE Parm 9 is Warehouse Code not Blank
 OR PAR.USR_CDE_Parm_9 <> *BLANK;

 CASE;

 // IF PAR.USR Warehouse Code EQ WRK.Warehouse Code
 IF PAR.USR_Warehouse_Code = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 1 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_1 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 2 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_2 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 3 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_3 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 4 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_4 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 5 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_5 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 6 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_6 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 7 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_7 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 8 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_8 = WRK.Warehouse_Code;

 // OR PAR.USR CDE Parm 9 EQ WRK.Warehouse Code
 OR PAR.USR_CDE_Parm_9 = WRK.Warehouse_Code;

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 ENDIF;

 ENDIF;

 ENDIF;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?USER: Process top of page

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

// TOP.Load ID = PAR.Load ID
TOP_Load_ID = PAR.Load_ID;

// TOP.Scheduled Ship Date = PAR.Scheduled Ship Date
TOP_Scheduled_Ship_Date = PAR.Scheduled_Ship_Date;

// TOP.USR Desc. 10 = Condition name of PAR.USR Detail or Summary
TOP_USR_Desc_10 = RTVCND(PAR.USR_Detail_or_Summary);

// TOP.Load U/M = PAR.Load U/M
TOP_Load_U_M = PAR.Load_U_M;

//?WAS PRINT SUBMITTED FROM PROMPT SCREEN OR AT LOAD LOCK TIME
CASE;

// IF PAR.AUTO PRINT PRELIM PICK is AUTO PRINT NO
IF PAR.AUTO_PRINT_PRELIM_PICK = 'N';

// TOP.USR Blank 10 = Condition name of PAR.USR Select/Omit Flag
TOP_USR_Blank_10 = RTVCND(PAR.USR_Select_Omit_Flag);

//?WAS PRINT SUBMITTED FROM PROMPT SCREEN OR AT LOAD LOCK TIME
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.USR Blank 10 = CON.AUTO PRINT
TOP_USR_Blank_10 = 'AUTO PRINT';

ENDIF;

CASE;

// IF PAR.USR Warehouse Code is Warehouse Code Blank
IF PAR.USR_Warehouse_Code = *BLANK;

// AND PAR.USR CDE Parm 1 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_1 = *BLANK;

// AND PAR.USR CDE Parm 2 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_2 = *BLANK;

// AND PAR.USR CDE Parm 3 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_3 = *BLANK;

// AND PAR.USR CDE Parm 4 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_4 = *BLANK;

// AND PAR.USR CDE Parm 5 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_5 = *BLANK;

// AND PAR.USR CDE Parm 6 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_6 = *BLANK;

// AND PAR.USR CDE Parm 7 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_7 = *BLANK;

// AND PAR.USR CDE Parm 8 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_8 = *BLANK;

// AND PAR.USR CDE Parm 9 is Warehouse Code Blank
AND PAR.USR_CDE_Parm_9 = *BLANK;

// TOP.USR Warehouse Code = CON.ALL
TOP_USR_Warehouse_Code = 'ALL';

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.USR Warehouse Code = PAR.USR Warehouse Code
TOP_USR_Warehouse_Code = PAR.USR_Warehouse_Code;

// TOP.USR CDE Parm 1 = PAR.USR CDE Parm 1
TOP_USR_CDE_Parm_1 = PAR.USR_CDE_Parm_1;

// TOP.USR CDE Parm 2 = PAR.USR CDE Parm 2
TOP_USR_CDE_Parm_2 = PAR.USR_CDE_Parm_2;

// TOP.USR CDE Parm 3 = PAR.USR CDE Parm 3
TOP_USR_CDE_Parm_3 = PAR.USR_CDE_Parm_3;

// TOP.USR CDE Parm 4 = PAR.USR CDE Parm 4
TOP_USR_CDE_Parm_4 = PAR.USR_CDE_Parm_4;

// TOP.USR CDE Parm 5 = PAR.USR CDE Parm 5
TOP_USR_CDE_Parm_5 = PAR.USR_CDE_Parm_5;

// TOP.USR CDE Parm 6 = PAR.USR CDE Parm 6
TOP_USR_CDE_Parm_6 = PAR.USR_CDE_Parm_6;

// TOP.USR CDE Parm 7 = PAR.USR CDE Parm 7
TOP_USR_CDE_Parm_7 = PAR.USR_CDE_Parm_7;

// TOP.USR CDE Parm 8 = PAR.USR CDE Parm 8
TOP_USR_CDE_Parm_8 = PAR.USR_CDE_Parm_8;

// TOP.USR CDE Parm 9 = PAR.USR CDE Parm 9
TOP_USR_CDE_Parm_9 = PAR.USR_CDE_Parm_9;

ENDIF;

CASE;

// IF TOP.Company Number is greater than zero
IF TOP_Company_Number > *ZERO;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(TOP_Company_Name_DRV);
PARAMETER(TOP_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Company Name DRV = CON.*ALL
TOP_Company_Name_DRV = *ALL;

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

CASE;

IF NEW Deadline_Departure_Date;
// Print Deadline Departure Date header format
PRINT Deadline Departure Date header format;

ENDIF;

CASE;

IF NEW Deadline_Departure_Time;
// Print Deadline Departure Time header format
PRINT Deadline Departure Time header format;

ENDIF;

CASE;

IF NEW Load_ID;
// SUPPRESSED PRINT Load ID header format

ENDIF;

//?USER: Process before print of detail format

CASE;

// IF PAR.USR Detail or Summary is Detail
IF PAR.USR_Detail_or_Summary = 'D';

// Execute function SET New Page Print     US.
EXECUTE FUNCTION(SET New Page Print     US) TYPE(EXCUSRSRC) ('USK6UFR');
{
 C                     MOVEL'Y'       W0NEWP           NEW PAGE
}


ENDIF;

//?USER: On print of detail format

// WRK.Print Yes/No          USR = CND.No
WRK.Print_Yes_No_USR = 'N';

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Prelim List Dtls   PO
EXECUTE FUNCTION(PRT Prelim List Dtls   PO) TYPE(PRTOBJ);
PARAMETER(CUR.Load_ID);
PARAMETER(99999);
PARAMETER(CUR.Schedule_Sequence_Number);
PARAMETER(DB1.Load_Acceptance_Flag);
PARAMETER(WRK.Count_USR);
PARAMETER(WRK.Palletize);
PARAMETER(WRK.Shrink_Wrap);
PARAMETER(WRK.Slip_Sheet);
PARAMETER(PAR.USR_Warehouse_Code);
PARAMETER(PAR.USR_CDE_Parm_1);
PARAMETER(PAR.USR_CDE_Parm_2);
PARAMETER(PAR.USR_CDE_Parm_3);
PARAMETER(PAR.USR_CDE_Parm_4);
PARAMETER(PAR.USR_CDE_Parm_5);
PARAMETER(PAR.USR_CDE_Parm_6);
PARAMETER(PAR.USR_CDE_Parm_7);
PARAMETER(PAR.USR_CDE_Parm_8);
PARAMETER(PAR.USR_CDE_Parm_9);
PARAMETER(PAR.USR_Select_Omit_Flag);
PARAMETER(CUR.Company_Number);
{
 C                     MOVEL'Y'       W0NEWP           NEW PAGE
}


//?USER: Print required level totals

CASE;

IF NEW Load_ID;
// SUPPRESSED PRINT Load ID totals format

ENDIF;

CASE;

IF NEW Deadline_Departure_Time;
// Print Deadline Departure Time totals format
PRINT Deadline Departure Time totals format;

ENDIF;

CASE;

IF NEW Deadline_Departure_Date;
// Print Deadline Departure Date totals format
PRINT Deadline Departure Date totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

