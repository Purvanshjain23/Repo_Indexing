     H/TITLE Prt Crc Sum & Dtl LMKTPF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 00:40:34
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPKCXREL1IF  E           K        DISK
      * RTV : Crc Sum Lean Dist Range   Retrieval index
      *
     FPKA1CPL0IF  E           K        DISK
      * RTV : Tattoo Header             Retrieval index
      *
     FPKAWCPL1IF  E           K        DISK
      * RTV : Buy Order Header          Retrieval index
      *
     FPKDNCPL1IF  E           K        DISK
      * RTV : Tattoo Header EXT         Retrieval index
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKCYCPL1IF  E           K        DISK
      * RTV : Crc Sum Tattoo Lean Dist  Retrieval index
      *
     FPKC0CPL2IF  E           K        DISK
      * RSQ : Crc Sum Prd Lean Dst YTD  Co/Prd/Kldte(d)/Ln%
      *
     FPKCZCPL3IF  E           K        DISK
      * RSQ : Crc Sum Prd          YTD  Co/Prd/KlDte(d)
      *
     FPKDBCPL2IF  E           K        DISK
      * RSQ : Crc Sum Co Wgt Lot   WK   Co/WkEnd-d/Min-d/Max
      *
     FPKBPREL3IF  E           K        DISK
      * RSQ : Loss Type                 LossDfn/LossTyp
      *
     FPKBSCPL6IF  E           K        DISK
      * RSQ : Loss Trans                Co/LsTyp/Bo/Ld/Tto
      *
     FPKBRREL1IF  E           K        DISK
      * RTV : Loss Reason               Retrieval index
      *
     FPKARREL0IF  E           K        DISK
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPKB1CPL2IF  E           K        DISK
      * RSQ : Carcass Detail            Co/BO/Ld/Tto/HWgt
      *
     FPKA1CPLFIF  E           K        DISK
      * RSQ : Tattoo Header             Co/BOL/Kill/Ttt
      *
     FPKBOREL1IF  E           K        DISK
      * RTV : Evaluation Validation     Retrieval index
      *
     FPKA4CPL3IF  E           K        DISK
      * RSQ : Tattoo Header Comment     Co/BOL/Tto/KDt/Typ/Lin
      *
     FPKMLPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Crc Sum & Dtl LMKTPF  Print file
      *
      * Long constants
     E                    @CN#    1  21  6   @CN    25
     I@A1CPOC
      * Tattoo Header             Co/BOL/Kill/Ttt
      * Renamed input format fields
     I              A1HMNB                          WAHMNB
     I              A1BNNB                          WABNNB
     I              A1BONB                          WABONB
     I              A1CVNB                          WACVNB
     I              A1B0DT                          WAB0DT
     I              A1AWDT                          WAAWDT
     I              A1BICD                          WABICD
     I              A1CPST                          WACPST
     I              A1ACPR                          WAACPR
     I              A1B9PR                          WAB9PR
     I              A1CAPR                          WACAPR
     I              A1C4ST                          WAC4ST
     I              A1AIPR                          WAAIPR
     I              A1A6DT                          WAA6DT
     I              A1C2ST                          WAC2ST
     I              A1CXNB                          WACXNB
     I              A1CWNB                          WACWNB
     I              A1FCNB                          WAFCNB
     I              A1H9NB                          WAH9NB
     I              A1FDNB                          WAFDNB
     I              A1FENB                          WAFENB
     I              A1HENB                          WAHENB
     I              A1HFNB                          WAHFNB
     I              A1CYNB                          WACYNB
     I              A1LRNB                          WALRNB
     I              A1E0NB                          WAE0NB
     I              A1A5PC                          WAA5PC
     I              A1FBNB                          WAFBNB
     I              A1A4PC                          WAA4PC
     I              A1F7NB                          WAF7NB
     I              A1HDNB                          WAHDNB
     I              A1F5NB                          WAF5NB
     I              A1F4NB                          WAF4NB
     I              A1F3NB                          WAF3NB
     I              A1F2NB                          WAF2NB
     I              A1AVPC                          WAAVPC
     I              A1AWPC                          WAAWPC
     I              A1CWPC                          WACWPC
     I              A1A8PC                          WAA8PC
     I              A1A7PC                          WAA7PC
     I              A1B8PR                          WAB8PR
     I              A1AMPR                          WAAMPR
     I              A1ANPR                          WAANPR
     I              A1AYVA                          WAAYVA
     I              A1AWVA                          WAAWVA
     I              A1AOPR                          WAAOPR
     I              A1AXVA                          WAAXVA
     I              A1APPR                          WAAPPR
     I              A1ASPR                          WAASPR
     I              A1A4VA                          WAA4VA
     I              A1ATPR                          WAATPR
     I              A1A5VA                          WAA5VA
     I              A1CBPR                          WACBPR
     I              A1CCPR                          WACCPR
     I              A1LPNB                          WALPNB
     I              A1CDPR                          WACDPR
     I              A1A7VA                          WAA7VA
     I              A1A2PR                          WAA2PR
     I              A1JWST                          WAJWST
     I              A1CWST                          WACWST
     I              A1D7ST                          WAD7ST
     I              A1D8ST                          WAD8ST
     I              A1DWST                          WADWST
     I              A1D6ST                          WAD6ST
     I              A1GHNB                          WAGHNB
     I              A1BYDT                          WABYDT
     I              A1E0ST                          WAE0ST
     I              A1E1ST                          WAE1ST
     I              A1E2ST                          WAE2ST
     I              A1BSDT                          WABSDT
     I              A1BTDT                          WABTDT
     I              A1BUDT                          WABUDT
     I              A1HGNB                          WAHGNB
     I              A1HHNB                          WAHHNB
     I              A1HINB                          WAHINB
     I              A1A3PR                          WAA3PR
     I              A1A4PR                          WAA4PR
     I              A1A6PR                          WAA6PR
     I              A1J9NB                          WAJ9NB
     I              A1D6PR                          WAD6PR
     I              A1D7PR                          WAD7PR
     I              A1D8PR                          WAD8PR
     I              A1D9PR                          WAD9PR
     I              A1EAPR                          WAEAPR
     I              A1EBPR                          WAEBPR
     I              A1ECPR                          WAECPR
     I              A1EDPR                          WAEDPR
     I              A1EEPR                          WAEEPR
     I              A1EFPR                          WAEFPR
     I              A1EGPR                          WAEGPR
     I              A1EHPR                          WAEHPR
     I              A1KAST                          WAKAST
     I              A1J7ST                          WAJ7ST
     I              A1J9ST                          WAJ9ST
     I              A1OXNB                          WAOXNB
     I              A1LKST                          WALKST
     I              A1LLST                          WALLST
     I              A1J8ST                          WAJ8ST
     I              A1LIST                          WALIST
     I              A1LJST                          WALJST
     I              A1NZTX                          WANZTX
     I              A1HJCD                          WAHJCD
     I              A1R4ST                          WAR4ST
     I              A1R5ST                          WAR5ST
     I              A1R6ST                          WAR6ST
     I              A1R7ST                          WAR7ST
     I              A1THWT                          WATHWT
     I              A1T2WT                          WAT2WT
     I              A1THHD                          WATHHD
     I              A1T2HD                          WAT2HD
     I              A1OBPR                          WAOBPR
     I              A1KOER                          WAKOER
     I              A1OPIR                          WAOPIR
     I              A1OPEM                          WAOPEM
     I              A1IORP                          WAIORP
     I              A1OWEO                          WAOWEO
     I              A1OQET                          WAOQET
     I              A1URST                          WAURST
     I              A1USST                          WAUSST
     I              A1HHPC                          WAHHPC
     I              A1S9PR                          WAS9PR
     I              A1TAPR                          WATAPR
     I              A1TBPR                          WATBPR
     I              A1JFUR                          WAJFUR
     I              A1KRIF                          WAKRIF
     I              A1KORF                          WAKORF
     I              A1KAPR                          WAKAPR
     I              A1KROT                          WAKROT
     I              A1OTJG                          WAOTJG
     I              A1IRJG                          WAIRJG
     I              A1IMJF                          WAIMJF
     I              A1IRGF                          WAIRGF
     I              A1KRJF                          WAKRJF
     I              A1OJRF                          WAOJRF
     I              A1KFOR                          WAKFOR
     I              A1ORJK                          WAORJK
     I              A1OMVJ                          WAOMVJ
     I              A1MVNF                          WAMVNF
     I              A1MCNF                          WAMCNF
     I              A1NCNF                          WANCNF
     I              A1NCHF                          WANCHF
     I              A1IGIR                          WAIGIR
     I              A1KFJR                          WAKFJR
     I              A1EADT                          WAEADT
     I              A1EBDT                          WAEBDT
     I              A1ECDT                          WAECDT
     I              A1EDDT                          WAEDDT
     I              A1EEDT                          WAEEDT
     I              A1U4ST                          WAU4ST
     I              A1U5ST                          WAU5ST
     I              A1U6ST                          WAU6ST
     I              A1U7ST                          WAU7ST
     I              A1U8ST                          WAU8ST
     I              A1U9ST                          WAU9ST
     I              A1VAST                          WAVAST
     I              A1VBST                          WAVBST
     I              A1BDCD                          WABDCD
     I              A1CSCD                          WACSCD
     I              A1ABCD                          WAABCD
     I              A1AECD                          WAAECD
     I              A1ACCD                          WAACCD
     I              A1AGCD                          WAAGCD
     I              A1BECD                          WABECD
     I              A1AAVN                          WAAAVN
     I              A1AADT                          WAAADT
     I              A1AMTM                          WAAMTM
     I              A1AJST                          WAAJST
     I              A1AHVN                          WAAHVN
     I              A1AGVN                          WAAGVN
     I              A1ABVN                          WAABVN
     I              A1ABDT                          WAABDT
     I              A1ABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      * Outward parameters
     IPARC        DS                             16
      * KEY : Tattoo Header EXT         Retrieval index
      * I : RST BOH Company Number
     I                                    P   1   20PAHMNB
      * I : RST BOH Buy Order Number
     I                                    P   3   60PABNNB
      * I : RST BOL Load Number
     I                                    P   7   90PABONB
      * I : RST TH Tattoo Number
     I                                    P  10  120PACVNB
      * I : RST TH Kill Date
     I                                    P  13  160PAB0DT
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I : RST BOH Buy Order Number
     I                                    P   3   60P1BNNB
      * I : RST BOL Load Number
     I                                    P   7   90P1BONB
      * I : RST TH Tattoo Number
     I                                    P  10  120P1CVNB
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Lean Rng Hdg 1 USR
     I                                        1  10 P2DVCD
      * N :  Lean Rng Hdg 2 USR
     I                                       11  20 P2DWCD
      * N :  Lean Rng Hdg 3 USR
     I                                       21  30 P2DXCD
      * N :  Lean Rng Hdg 4 USR
     I                                       31  40 P2DYCD
      * N :  Lean Rng Hdg 5 USR
     I                                       41  50 P2DZCD
      * N :  Lean Rng Hdg 6 USR
     I                                       51  60 P2D0CD
      * N :  Lean Rng Hdg 7 USR
     I                                       61  70 P2D1CD
      * N :  Lean Rng Hdg 8 USR
     I                                       71  80 P2D2CD
      * N :  Lean Rng Min 1 USR
     I                                    P  81  820P2CXPC
      * N :  Lean Rng Max 1 USR
     I                                    P  83  840P2CYPC
      * N :  Lean Rng Min 2 USR
     I                                    P  85  860P2CZPC
      * N :  Lean Rng Max 2 USR
     I                                    P  87  880P2C0PC
      * N :  Lean Rng Min 3 USR
     I                                    P  89  900P2C1PC
      * N :  Lean Rng Max 3 USR
     I                                    P  91  920P2C2PC
      * N :  Lean Rng Min 4 USR
     I                                    P  93  940P2C3PC
      * N :  Lean Rng Max 4 USR
     I                                    P  95  960P2C4PC
      * N :  Lean Rng Min 5 USR
     I                                    P  97  980P2C5PC
      * N :  Lean Rng Max 5 USR
     I                                    P  99 1000P2C6PC
      * N :  Lean Rng Min 6 USR
     I                                    P 101 1020P2C7PC
      * N :  Lean Rng Max 6 USR
     I                                    P 103 1040P2C8PC
      * N :  Lean Rng Min 7 USR
     I                                    P 105 1060P2C9PC
      * N :  Lean Rng Max 7 USR
     I                                    P 107 1080P2DAPC
      * N :  Lean Rng Min 8 USR
     I                                    P 109 1100P2DBPC
      * N :  Lean Rng Max 8 USR
     I                                    P 111 1120P2DCPC
     IP3PARM      DS
      * I :  Print Carcass Analysis Us
     I                                        1   1 P3MVST
     IP4PARM      DS
      * I :  TFD Header Action-Crc Dtl
     I                                        1  10 P4NPTX
     IP5PARM      DS
      * I :  TFD Header Action-Crc Sum
     I                                        1  10 P5NKTX
     IP6PARM      DS
      * FLD: Buy Order Header
      * N :  BOH Quote Price Type
     I                                        1   2 P6B3ST
      * N :  BOH Commodity Market Code
     I                                        3   5 P6ETCD
      * N :  BOH Commodity Price Group
     I                                        6  12 P6EUCD
      * N :  CMP Program Code
     I                                       13  15 P6AMCD
     IP7PARM      DS
      * FLD: Carcass Merit Program
      * N :  CMP Sort Basis
     I                                        1   1 P7DMST
     IP8PARM      DS
      * FLD: *Arrays
      * N :  PY Head Killed
     I                                    P   1   40P8MFNB
      * N :  Pricing UOM USR
     I                                        5   6 P8SNST
      * I :  Print Comp Sum/Dtl STS
     I                                        7   7 P8TOST
      * I :  Status 3
     I                                        8   8 P8SVST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1BNNB    PARM           WP0002  70       BOH Buy Order N
     C           P1BONB    PARM           WP0003  50       BOL Load Number
     C           P1CVNB    PARM           WP0004  50       TH Tattoo Numbe
     C           P3MVST    PARM           WP0005  1        Print Carcass A
     C           P4NPTX    PARM           WP0006 10        TFD Header Acti
     C           P5NKTX    PARM           WP0007 10        TFD Header Acti
     C           P8TOST    PARM           WP0008  1        Print Comp Sum/
     C           P8SVST    PARM           WP0009  1        Status 3
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Crc Sum & Dtl LMKTPF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$UENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Crc Sum & Dtl LMKTPF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQKA02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQKA03           BOL Load Number
     C           *LIKE     DEFN A1CVNB    WQKA04           TH Tattoo Numbe
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           BOH Buy Order N
     C                     KFLD           WQKA03           BOL Load Number
     C                     KFLD           WQKA04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     Z-ADDP1BNNB    WQKA02           BOH Buy Order N
     C                     Z-ADDP1BONB    WQKA03           BOL Load Number
     C                     Z-ADDP1CVNB    WQKA04           TH Tattoo Numbe
      * Establish starting position
     C           KRSA      SETLL@A1CPC4                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL02  1        BOL Load Number
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
      * Load related totals format
     C                     Z-ADDA1HMNB    $SHMNB           BOH Company Num
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $EBNNB           BOH Buy Order N
      * Load related totals format
     C                     Z-ADDA1HMNB    $RHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $RBNNB           BOH Buy Order N
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $FHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $FBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $FBONB           BOL Load Number
      * Load related totals format
     C                     Z-ADDA1HMNB    $QHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $QBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $QBONB           BOL Load Number
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $GHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $GBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $GBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $GCVNB           TH Tattoo Numbe
      * Load related totals format
     C                     Z-ADDA1HMNB    $PHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $PBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $PBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $PCVNB           TH Tattoo Numbe
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $HHMNB           BOH Company Num
     C                     Z-ADDA1BONB    $HBONB           BOL Load Number
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL*BLANK    $HJPTX           Text 10 1 USR
     C                     MOVEL*BLANK    $HOGTX           Text 10 3 USR
     C                     MOVEL*BLANK    $HJQTX           Text 10 2 USR
     C                     Z-ADDA1A6DT    $HA6DT           TH Pricing Date
     C                     Z-ADDA1AWDT    $HAWDT           TH Purchase Dat
     C                     Z-ADDA1B0DT    $HB0DT           TH Kill Date
     C                     Z-ADDA1CVNB    $HCVNB           TH Tattoo Numbe
     C                     MOVELA1CPST    $HCPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $HACPR           TH Live Purchas
     C                     Z-ADDA1B9PR    $HB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $HCAPR           TH LIve Net Amt
     C                     MOVELA1C4ST    $HC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $HAIPR           TH Recalc Live
     C                     MOVELA1C2ST    $HC2ST           TH Resale Sprea
     C                     Z-ADDA1CWNB    $HCWNB           TH Head Receive
     C                     Z-ADDA1H9NB    $HH9NB           TH Held Over
     C                     Z-ADDA1FENB    $HFENB           TH Head Killed
     C                     Z-ADD*ZERO     $HN7NB           TH Live Wgt DRV
     C                     Z-ADDA1F7NB    $HF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $HOANB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $HPKNB           Th Live Adj Wgt
     C                     Z-ADDA1LRNB    $HLRNB           TH Adj Live Wgt
     C                     Z-ADDA1HFNB    $HHFNB           TH Head Accepte
     C                     Z-ADDA1CYNB    $HCYNB           TH Live Wgt
     C                     Z-ADDA1AMPR    $HAMPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     $HE7PR           TH CM BASE CARC
     C                     MOVELA1ABCD    $HABCD           PD Producer Cod
     C                     MOVEL*BLANK    $HAGTX           PD Name
     C                     MOVEL*BLANK    $HKPTX           Text 5
     C                     MOVELA1ACCD    $HACCD           HB Buyer Code
     C                     Z-ADD*ZERO     $HARDT           BOH Buy Order D
     C                     Z-ADDA1ANPR    $HANPR           TH CM Base Mkt
     C                     Z-ADDA1D6PR    $HD6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $HD7PR           TH CM Bse Mkt C
     C                     Z-ADDA1AWPC    $HAWPC           TH Actual Yield
     C                     Z-ADDA1CWPC    $HCWPC           TH Adj Actual Y
     C                     Z-ADDA1A2PR    $HA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $HJWST           TH Calc Net Sts
     C                     Z-ADDA1AYVA    $HAYVA           TH CM Sort Disc
     C                     Z-ADDA1D8PR    $HD8PR           TH CM Srt Dsc L
     C                     Z-ADDA1D9PR    $HD9PR           TH CM Srt Dsc C
     C                     Z-ADDA1AWVA    $HAWVA           TH CM Yield Gai
     C                     Z-ADDA1EAPR    $HEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HD0PC           TH Avg Lean Per
     C                     Z-ADDA1F4NB    $HF4NB           TH Avg Lean Per
     C                     Z-ADDA1A5PC    $HA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $HFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $HA4PC           TH Tot Light Re
     C                     Z-ADDA1AOPR    $HAOPR           TH CM Base Carc
     C                     Z-ADDA1ECPR    $HECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $HEDPR           TH CM Crc Val C
     C                     MOVEL*BLANK    $HOETX           Text 25 1 USR
     C                     Z-ADD*ZERO     $HOBNB           TH Hot Wgt DRV
     C                     Z-ADDA1E0NB    $HE0NB           TH Hot Wgt
     C                     Z-ADDA1AXVA    $HAXVA           TH CM LN AddOn/
     C                     Z-ADDA1EEPR    $HEEPR           TH CM Lean Prem
     C                     Z-ADDA1EFPR    $HEFPR           TH CM Lean Prem
     C                     MOVEL*BLANK    $HOFTX           Text 25 2 USR
     C                     Z-ADD*ZERO     $HOCNB           TH Avg Hot Wgt
     C                     Z-ADDA1HDNB    $HHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1TBPR    $HTBPR           TH Excluded Gro
     C                     MOVELA1KAST    $HKAST           TH Source Type
     C                     MOVELA1J7ST    $HJ7ST           TH Scale Ticket
     C                     MOVELA1J8ST    $HJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $HLIST           TH Schedule Kil
     C                     MOVELA1LJST    $HLJST           TH Shift Held O
     C                     Z-ADDA1OMVJ    $HOMVJ           TH PHA Sort Dis
     C                     MOVELA1J9ST    $HJ9ST           TH Payment Type
     C                     MOVELA1LKST    $HLKST           TH Source Code
     C                     MOVELA1LLST    $HLLST           TH Hog Class Ty
     C                     Z-ADDA1HGNB    $HHGNB           TH Shipped Weig
     C                     Z-ADDA1APPR    $HAPPR           TH CM Carcass G
     C                     Z-ADDA1EGPR    $HEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $HEHPR           TH CM Gross Car
     C                     Z-ADDA1F5NB    $HF5NB           TH Avg Light Re
     C                     Z-ADDA1F2NB    $HF2NB           TH Avg Backfat
     C                     Z-ADDA1MCNF    $HMCNF           TH Avg Backfat
     C                     MOVEL*BLANK    $HGWTX           Ded Line 1 Desc
     C                     Z-ADD*ZERO     $HC7PR           Ded Line 1 USR
     C                     Z-ADDA1ASPR    $HASPR           TH Deduction Am
     C                     Z-ADDA1AVPC    $HAVPC           TH Std Yield Pe
     C                     Z-ADDA1A8PC    $HA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $HA7PC           TH Recalc Live
     C                     Z-ADDA1B8PR    $HB8PR           TH CM Market Pr
     C                     Z-ADDA1A4VA    $HA4VA           TH Total Net WO
     C                     MOVEL*BLANK    $HGXTX           Ded Line 2 Desc
     C                     Z-ADD*ZERO     $HC9PR           Ded Line 2 USR
     C                     Z-ADDA1A5VA    $HA5VA           TH Additions Am
     C                     Z-ADDA1F3NB    $HF3NB           TH Avg Loin Eye
     C                     Z-ADDA1MVNF    $HMVNF           TH Avg Loin Eye
     C                     MOVEL*BLANK    $HGYTX           Ded Line 3 Desc
     C                     Z-ADD*ZERO     $HC6PR           Ded Line 3 USR
     C                     Z-ADDA1HINB    $HHINB           TH FFLI
     C                     MOVEL*BLANK    $HGZTX           Ded Line 4 Desc
     C                     Z-ADD*ZERO     $HC8PR           Ded Line 4 USR
     C                     MOVEL*BLANK    $HG0TX           Ded Line 5 Desc
     C                     Z-ADD*ZERO     $HC5PR           Ded Line 5 USR
     C                     MOVEL*BLANK    $HG1TX           Ded Line 6 Desc
     C                     Z-ADD*ZERO     $HEIPR           Ded Line 6 USR
     C                     MOVEL*BLANK    $HHETX           Ded Line 7 Desc
     C                     Z-ADD*ZERO     $HELPR           Ded Line 7 USR
     C                     MOVEL*BLANK    $HHFTX           Ded Line 8 Desc
     C                     Z-ADD*ZERO     $HEMPR           Ded Line 8 USR
     C                     Z-ADDA1ATPR    $HATPR           TH Carcass Net
     C                     MOVEL*BLANK    $HDVCD           Lean Rng Hdg 1
     C                     MOVEL*BLANK    $HDWCD           Lean Rng Hdg 2
     C                     MOVEL*BLANK    $HDXCD           Lean Rng Hdg 3
     C                     MOVEL*BLANK    $HDYCD           Lean Rng Hdg 4
     C                     MOVEL*BLANK    $HDZCD           Lean Rng Hdg 5
     C                     MOVEL*BLANK    $HD0CD           Lean Rng Hdg 6
     C                     MOVEL*BLANK    $HD1CD           Lean Rng Hdg 7
     C                     MOVEL*BLANK    $HD2CD           Lean Rng Hdg 8
     C                     Z-ADD*ZERO     $HM2NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM3NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM4NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM5NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM6NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM7NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM8NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM9NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HDDPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDEPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDFPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDGPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDHPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDIPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDJPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDKPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HNANB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNBNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNCNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNDNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNENB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNFNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNGNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNHNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HDLPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDMPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDNPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDOPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDPPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDQPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDRPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDSPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HCHDT           PY As of Kill D
     C                     Z-ADDA1CXNB    $HCXNB           TH Dead On Arri
     C                     Z-ADDA1FCNB    $HFCNB           TH Yard Deads
     C                     Z-ADDA1FDNB    $HFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $HMHNB           CWL Min Adj Liv
     C                     Z-ADD*ZERO     $HMINB           CWL Max Adj Liv
     C                     MOVEL*BLANK    $HG3TX           Reason 1 Desc U
     C                     Z-ADD*ZERO     $HMRNB           Reason Head 1 U
     C                     MOVEL*BLANK    $HG9TX           Reason 2 Desc U
     C                     Z-ADD*ZERO     $HMSNB           Reason Head 2 U
     C                     MOVEL*BLANK    $HHATX           Reason 3 Desc U
     C                     Z-ADD*ZERO     $HMTNB           Reason Head 3 U
     C                     MOVEL*BLANK    $HHKTX           Yield NA WK USR
     C                     MOVEL*BLANK    $HHRTX           Yield Top X WK
     C                     MOVEL*BLANK    $HHTTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HHSTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HHUTX           Yield Lower X W
     C                     MOVEL*BLANK    $HHBTX           Reason 4 Desc U
     C                     Z-ADD*ZERO     $HMUNB           Reason Head 4 U
     C                     MOVEL*BLANK    $HHJTX           Lean% NA WK USR
     C                     MOVEL*BLANK    $HHNTX           Lean% Top X WK
     C                     MOVEL*BLANK    $HHPTX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HHOTX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HHQTX           Lean% Lower X W
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     Z-ADD*ZERO     $HMVNB           Reason Head 5 U
     C                     MOVEL*BLANK    $HHLTX           Lean Prm NA WK
     C                     MOVEL*BLANK    $HHVTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HHXTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HHWTX           Lean Prm Mid Lo
     C                     MOVEL*BLANK    $HHYTX           Lean Prm Lower
     C                     MOVEL*BLANK    $HHMTX           Sort Dsc NA WK
     C                     MOVEL*BLANK    $HHZTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HH1TX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HH0TX           Sort Dsc Mid Lo
     C                     MOVEL*BLANK    $HH2TX           Sort Dsc Lower
     C                     MOVEL*BLANK    $HONTX           Trim 1 Desc Crc
     C                     Z-ADD*ZERO     $HMWNB           Trim Head 1 USR
     C                     MOVEL*BLANK    $HOTTX           Trim 2 Desc Crc
     C                     Z-ADD*ZERO     $HMXNB           Trim Head 2 USR
     C                     MOVEL*BLANK    $HOUTX           Trim 3 Desc Crc
     C                     Z-ADD*ZERO     $HMYNB           Trim Head 3 USR
     C                     MOVEL*BLANK    $HOVTX           Trim 4 Desc Crc
     C                     Z-ADD*ZERO     $HMZNB           Trim Head 4 USR
     C                     MOVEL*BLANK    $HOWTX           Trim 5 Desc Crc
     C                     Z-ADD*ZERO     $HM0NB           Trim Head 5 USR
     C                     MOVEL*BLANK    $HOXTX           Trim 6 Desc Crc
     C                     Z-ADD*ZERO     $HTRHD           Trim Head 6 USR
     C                     Z-ADD*ZERO     $HH3NB           Weight Tot USR
     C                     Z-ADDA1HENB    $HHENB           TH Head Adds
     C                     Z-ADDA1J9NB    $HJ9NB           TH Head Exclude
     C                     Z-ADDA1IORP    $HIORP           TH Head Adjuste
     C                     MOVEL*BLANK    $HP3TX           Desc 15 USR
     C                     Z-ADDA1OWEO    $HOWEO           TH PHA Head Add
     C                     MOVEL*BLANK    $HI1TX           Condition Name
     C                     Z-ADDA1HHPC    $HHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $HS9PR           TH PHA Lean Prm
     C                     MOVEL*BLANK    $HODTX           Text Usr 1
     C                     Z-ADDA1BNNB    $HBNNB           BOH Buy Order N
     C                     Z-ADDA1OXNB    $HOXNB           TH HPS Movement
     C                     MOVELA1BICD    $HBICD           TH Group Refere
     C                     Z-ADDA1CBPR    $HCBPR           TH Payment Gros
     C                     Z-ADDA1CCPR    $HCCPR           Th Payment Net
     C                     Z-ADDA1LPNB    $HLPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $HCDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $HA7VA           TH Accrual Amou
     C                     MOVELA1CWST    $HCWST           TH Payment Sts
     C                     MOVELA1D7ST    $HD7ST           TH Header Error
     C                     MOVELA1D8ST    $HD8ST           TH Detail Error
     C                     MOVELA1DWST    $HDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $HD6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $HGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $HBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $HE0ST           TH User Error O
     C                     MOVELA1E1ST    $HE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $HE2ST           TH Sex
     C                     Z-ADDA1BSDT    $HBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $HBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $HBUDT           TH Actual Check
     C                     Z-ADDA1HHNB    $HHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1A3PR    $HA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $HA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $HA6PR           TH Render Produ
     C                     MOVELA1AGCD    $HAGCD           GN Genetic Code
     C                     MOVELA1BECD    $HBECD           HC Class Code
     C                     MOVELA1BDCD    $HBDCD           DF Defect Code
     C                     MOVELA1CSCD    $HCSCD           THP Process Cod
     C                     MOVELA1AECD    $HAECD           PL Location Cod
      * USER: Process before print of detail format
      * CUR = PAR By name
     C                     Z-ADDP1HMNB    $HHMNB           BOH Company Num
     C                     Z-ADDP1BONB    $HBONB           BOL Load Number
     C                     Z-ADDP1CVNB    $HCVNB           TH Tattoo Numbe
     C                     MOVELP2DVCD    $HDVCD           Lean Rng Hdg 1
     C                     MOVELP2DWCD    $HDWCD           Lean Rng Hdg 2
     C                     MOVELP2DXCD    $HDXCD           Lean Rng Hdg 3
     C                     MOVELP2DYCD    $HDYCD           Lean Rng Hdg 4
     C                     MOVELP2DZCD    $HDZCD           Lean Rng Hdg 5
     C                     MOVELP2D0CD    $HD0CD           Lean Rng Hdg 6
     C                     MOVELP2D1CD    $HD1CD           Lean Rng Hdg 7
     C                     MOVELP2D2CD    $HD2CD           Lean Rng Hdg 8
     C                     Z-ADDP1BNNB    $HBNNB           BOH Buy Order N
      * CASE: PAR.Status 3 is Yes
     C           P8SVST    IFEQ 'Y'                        *IF
     C                     Z-ADDA1NCHF    $HAYVA           TH CM Sort Disc
     C                     END                             *FI
      * Rtv Carcass Sum Info  RT - Buy Order Header  * 
     C                     EXSR SBRVGN
      * Analysis fields into payment fields
      * CASE: PAR.Print Carcass Analysis Us is Yes
     C           P3MVST    IFEQ 'Y'                        *IF
      * Rtv Tattoo Hdr Ext    XF - Tattoo Header EXT  * 
     C                     CLEARPARC
     C                     Z-ADD$HHMNB    PAHMNB           BOH Company Num
     C                     Z-ADD$HBNNB    PABNNB           BOH Buy Order N
     C                     Z-ADD$HBONB    PABONB           BOL Load Number
     C                     Z-ADD$HCVNB    PACVNB           TH Tattoo Numbe
     C                     Z-ADD$HB0DT    PAB0DT           TH Kill Date
      *
     C                     CALL 'PKAWXFR'              90  Rtv Tattoo Hdr
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Tattoo Hea
     C           $HB8PR    PARM $HB8PR    WQ0004  52       TH CM Market Pr
     C           $HAMPR    PARM $HAMPR    WQ0005  52       TH CM Base Mkt
     C           $HANPR    PARM $HANPR    WQ0006  72       TH CM Base Mkt
     C           $HAYVA    PARM $HAYVA    WQ0007  72       TH CM Sort Disc
     C           $HAWVA    PARM $HAWVA    WQ0008  72       TH CM Yield Gai
     C           $HAOPR    PARM $HAOPR    WQ0009  72       TH CM Base Carc
     C           $HAXVA    PARM $HAXVA    WQ0010  72       TH CM LN AddOn/
     C           $HAPPR    PARM $HAPPR    WQ0011  72       TH CM Carcass G
     C           $HD6PR    PARM $HD6PR    WQ0012  52       TH CM Bse Mkt L
     C           $HD7PR    PARM $HD7PR    WQ0013  52       TH CM Bse Mkt C
     C           $HD8PR    PARM $HD8PR    WQ0014  52       TH CM Srt Dsc L
     C           $HD9PR    PARM $HD9PR    WQ0015  52       TH CM Srt Dsc C
     C           $HEAPR    PARM $HEAPR    WQ0016  52       TH CM Yld G/L L
     C           $HEBPR    PARM $HEBPR    WQ0017  52       TH CM Yld G/L C
     C           $HECPR    PARM $HECPR    WQ0018  52       TH CM Crc Val L
     C           $HEDPR    PARM $HEDPR    WQ0019  52       TH CM Crc Val C
     C           $HEEPR    PARM $HEEPR    WQ0020  52       TH CM Lean Prem
     C           $HEFPR    PARM $HEFPR    WQ0021  52       TH CM Lean Prem
     C           $HEGPR    PARM $HEGPR    WQ0022  52       TH CM Gross Liv
     C           $HEHPR    PARM $HEHPR    WQ0023  52       TH CM Gross Car
     C           W0RTN     PARM W0RTN     WQ0024  7        *Return code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKAWXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Held Over Processing  -- maybe also analysis
      * CASE: DB1.TH Held Over Record is Yes
     C           A1E1ST    IFEQ 'Y'                        *IF
      *
     C                     Z-ADD*ZERO     WN0001 152       Lean % * Wgt US
     C                     Z-ADD*ZERO     WN0002 152       Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0003 152       Loin-Eye * Wgt
     C                     Z-ADD*ZERO     WN0004 152       Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0005 152       Loin-Eye * Wgt
      *
      * Prt Crc Sum (Hld Ovr) IF
      * Modification History Created Str slm 061208
     C                     EXSR UCSUBR                     Modification Hi
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HB0DT           TH Kill Date
     C                     Z-ADD*ZERO     $HCXNB           TH Dead On Arri
     C                     Z-ADD*ZERO     $HCWNB           TH Head Receive
     C                     Z-ADD*ZERO     $HFCNB           TH Yard Deads
     C                     Z-ADD*ZERO     $HFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $HFENB           TH Head Killed
     C                     Z-ADD*ZERO     $HHENB           TH Head Adds
     C                     Z-ADD*ZERO     $HCYNB           TH Live Wgt
     C                     Z-ADD*ZERO     $HLRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     $HE0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     $HF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $HHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $HF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $HF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     $HAWPC           TH Actual Yield
     C                     Z-ADD*ZERO     $HCWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     $HANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     $HAYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     $HAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     $HAOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     $HAXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     $HAPPR           TH CM Carcass G
     C                     Z-ADD*ZERO     $HASPR           TH Deduction Am
     C                     Z-ADD*ZERO     $HATPR           TH Carcass Net
     C                     Z-ADD*ZERO     $HA5VA           TH Additions Am
     C                     Z-ADD*ZERO     $HCBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $HCCPR           Th Payment Net
     C                     Z-ADD*ZERO     $HA2PR           TH Fixed Cost A
     C                     Z-ADD*ZERO     $HHGNB           TH Shipped Weig
     C                     Z-ADD*ZERO     $HHINB           TH FFLI
     C                     Z-ADD*ZERO     $HJ9NB           TH Head Exclude
     C                     Z-ADD*ZERO     $HD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     $HD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     $HD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     $HD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     $HEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     $HEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     $HEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     $HIORP           TH Head Adjuste
     C                     Z-ADD*ZERO     $HOWEO           TH PHA Head Add
     C                     Z-ADD*ZERO     $HTBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     YL0002           TH Excluded Car
     C                     Z-ADD*ZERO     YL0003           TH Excluded Pre
     C                     Z-ADD*ZERO     YL0004           TH Meat Value F
     C                     Z-ADD*ZERO     $HMVNF           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HMCNF           TH Avg Backfat
     C                     Z-ADD*ZERO     YL0005           TH Head LFT
     C                     Z-ADD*ZERO     YL0006           TH Head EUT/KOA
     C                     Z-ADD*ZERO     WN0001           Lean % * Wgt US
     C                     Z-ADD*ZERO     WN0002           Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0003           Loin-Eye * Wgt
     C                     Z-ADD*ZERO     WN0004           Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0005           Loin-Eye * Wgt
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header  * 
     C                     EXSR SCRVGN
      * Calculate Live /CWT and Carc /CWT
      * CASE: WRK.#Sequence Block is NULL
     C           WUJ0ST    IFEQ *BLANK                     *IF
      * Calculate Carc/CWT if Par.Th Hot Wt is n= 0
      * CASE: PAR.TH Hot Wgt NE WRK.Zero USR
     C           $HE0NB    IFNE WUE9NB                     *IF
      * TH CM Bse Mkt Carc /CWT
      * PAR.TH CM Bse Mkt Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Mkt Price Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HANPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD7PR           TH CM Bse Mkt C
      * TH CM Srt Dsc Carc /CWT
      * PAR.TH CM Srt Dsc Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAYVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD9PR           TH CM Srt Dsc C
      * TH CM Crc Val Carc /CWT
      * WRK.TH CM Crc Val Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Carcass Value
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAOPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUEDPR           TH CM Crc Val C
     C                     Z-ADDWUEDPR    $HEDPR           TH CM Crc Val C
      * TH CM Lean Prem Carc /CWT
      * PAR.TH CM Lean Prem Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM LN AddOn/Deduct Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAXVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEFPR           TH CM Lean Prem
      * TH CM Gross Carc /CWT
      * PAR.TH CM Gross Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Carcass Gross Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAPPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEHPR           TH CM Gross Car
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     $HD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     $HEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     END                             *FI
      * Calculate Live/CWT if Par.Th live wt is n= 0
      * CASE: PAR.TH Live Wgt NE WRK.Zero USR
     C           $HCYNB    IFNE WUE9NB                     *IF
      * TH CM Bse Mkt Live /CWT
      * PAR.TH CM Bse Mkt Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Mkt Price Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HANPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD6PR           TH CM Bse Mkt L
      * TH CM Srt Dsc Live /CWT
      * PAR.TH CM Srt Dsc Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAYVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD8PR           TH CM Srt Dsc L
      * TH CM Yld G/L live /CWT
      * PAR.TH CM Yld G/L Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Yield Gain/Loss Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAWVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEAPR           TH CM Yld G/L L
      * TH CM Crc Val Live /CWT
      * PAR.TH CM Crc Val Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Carcass Value
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAOPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HECPR           TH CM Crc Val L
      * TH CM Lean Prem Live /CWT
      * PAR.TH CM Lean Prem Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM LN AddOn/Deduct Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAXVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEEPR           TH CM Lean Prem
      * TH CM Gross Live /CWT
      * PAR.TH CM Gross Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Carcass Gross Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAPPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEGPR           TH CM Gross Liv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     $HD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     $HEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     $HECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     $HEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     END                             *FI
     C                     END                             *FI
      * Calc Avg Live Wt
      * CASE: PAR.TH Head Received is *Zeros
     C           $HCWNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUF7NB           TH Avg Live Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C           $HCYNB    DIV  $HCWNB    WUF7NB           TH Avg Live Wgt
     C                     END                             *FI
      * Calc Adj Live Weight
      * CASE: PAR.TH Head Received EQ PAR.TH Head Killed
     C           $HCWNB    IFEQ $HFENB                     *IF
     C                     Z-ADD$HCYNB    WULRNB           TH Adj Live Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C           $HFENB    MULT WUF7NB    WULRNB           TH Adj Live Wgt
     C                     END                             *FI
     C                     Z-ADDWUF7NB    $HF7NB           TH Avg Live Wgt
     C                     Z-ADDWULRNB    $HLRNB           TH Adj Live Wgt
      * Calc Actual Yield %
      * CASE: PAR.TH Live Wgt NE WRK.Zero USR
     C           $HCYNB    IFNE WUE9NB                     *IF
      * TH Actual Yield %
      * PAR.TH Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  $HCYNB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HAWPC           TH Actual Yield
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HAWPC           TH Actual Yield
     C                     END                             *FI
      * Calc Adj Actual Yield %
      * CASE: PAR.TH Adj Live Wgt NE WRK.Zero USR
     C           $HLRNB    IFNE WUE9NB                     *IF
      * TH Adj Actual Yield %
      * PAR.TH Adj Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : PAR.TH Adj Live Wgt
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  $HLRNB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HCWPC           TH Adj Actual Y
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HCWPC           TH Adj Actual Y
     C                     END                             *FI
      * Calc Avg Hot Wt
      * CASE: PAR.TH Head Killed NE WRK.Zero USR
     C           $HFENB    IFNE WUE9NB                     *IF
     C           $HE0NB    DIV  $HFENB    $HHDNB    H      TH Avg Hot Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HHDNB           TH Avg Hot Wgt
     C                     END                             *FI
      * Calc Avg Lean %, Loin eye, & Backfat
      * CASE: PAR.TH Hot Wgt NE WRK.Zero USR
     C           $HE0NB    IFNE WUE9NB                     *IF
     C           WN0001    DIV  $HE0NB    $HF4NB    H      TH Avg Lean Per
     C           WN0003    DIV  $HE0NB    $HF3NB    H      TH Avg Loin Eye
     C           WN0002    DIV  $HE0NB    $HF2NB    H      TH Avg Backfat
     C           WN0005    DIV  $HE0NB    $HMVNF    H      TH Avg Loin Eye
     C           WN0004    DIV  $HE0NB    $HMCNF    H      TH Avg Backfat
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $HF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     $HMVNF           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HMCNF           TH Avg Backfat
     C                     END                             *FI
      * TH FFLI
      * PAR.TH FFLI =
      *    *COMPUTE (x1 + (x2 * x3) - (x4 * x5))
      * x1    : CON.51.537
      * +     : PGM.*Synon (17,7) work field
      * x2    : CON..035
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.TH Hot Wgt
      * -     : PGM.*Synon (17,7) work field
      * x4    : CON.12.26
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.TH Avg Backfat
     C           .035      MULT $HE0NB    W0WD02           *Synon (17,7) w
     C           51.537    ADD  W0WD02    W0WD01           *Synon (17,7) w
     C           12.26     MULT $HF2NB    W0WD03           *Synon (17,7) w
     C           W0WD01    SUB  W0WD03    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HHINB           TH FFLI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDA1KROT    YL0002           TH Excluded Car
     C                     Z-ADDA1OTJG    YL0003           TH Excluded Pre
     C                     END                             *FI
      * Live/Carcass Merit Payment/Comparison
      * CASE: PAR.Print Comp Sum/Dtl STS is Yes
     C           P8TOST    IFEQ 'Y'                        *IF
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL@CN,002   $HHDTX           Payment Type De
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.TH Payment Type is Live
      *   |- c2    : PAR.Print Live as Carcass USR is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           A1J9ST    IFEQ 'L'                        *IF
     C           P3MVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL@CN,003   $HHDTX           Payment Type De
     C                     Z-ADD$HACPR    $HAMPR           TH CM Base Mkt
     C                     Z-ADD$HCBPR    $HAPPR           TH CM Carcass G
     C                     Z-ADD$HCCPR    $HATPR           TH Carcass Net
      * TH CM Gross Live /CWT
      * CASE: DB1.TH Live Wgt NE WRK.Zero USR
     C           A1CYNB    IFNE WUE9NB                     *IF
      * re-cal for live only CWT
      * CUR.TH CM Gross Live /CWT =
      *    *COMPUTE ((x1 / (x2 / x3)))
      * x1    : CUR.TH Payment Gross
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1CYNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HCBPR    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEGPR           TH CM Gross Liv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     END                             *FI
      * TH CM Gross Carc /CWT
      * CASE: DB1.TH Hot Wgt NE WRK.Zero USR
     C           A1E0NB    IFNE WUE9NB                     *IF
      * re-cal for live only CWT
      * CUR.TH CM Gross Carc /CWT =
      *    *COMPUTE ((x1 / (x2 / x3)))
      * x1    : CUR.TH Payment Gross
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : DB1.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1E0NB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HCBPR    DIV  W0WD01    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $HEHPR           TH CM Gross Car
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     END                             *FI
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.TH Payment Type is Carcass Merit
      *   |- c2    : PAR.Print Live as Carcass USR is Yes
      *   '-
     C           A1J9ST    IFEQ 'C'                        *IF
     C           P3MVST    OREQ 'Y'                        *OR
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL@CN,004   $HHDTX           Payment Type De
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SERVGN
      * Tattoo Deduction/Additions
      * CASE: PAR.Print Comp Sum/Dtl STS is No
     C           P8TOST    IFEQ 'N'                        *IF
      * Prt Crc Sum Ded/Add   UP - Tattoo Ded/Add  * 
     C                     CALL 'PKT0UPR'              90  Prt Crc Sum Ded
     C           W0RTN     PARM W0RTN     WQ0025  7        @TXT 7 postions
     C                     PARM $HHMNB    WQ0026  30       BOH Company Num
     C                     PARM $HBNNB    WQ0027  70       BOH Buy Order N
     C                     PARM $HBONB    WQ0028  50       BOL Load Number
     C                     PARM $HCVNB    WQ0029  50       TH Tattoo Numbe
     C           $HGWTX    PARM $HGWTX    WQ0030 20        Ded Line 1 Desc
     C           $HGXTX    PARM $HGXTX    WQ0031 20        Ded Line 2 Desc
     C           $HGYTX    PARM $HGYTX    WQ0032 20        Ded Line 3 Desc
     C           $HGZTX    PARM $HGZTX    WQ0033 20        Ded Line 4 Desc
     C           $HG0TX    PARM $HG0TX    WQ0034 20        Ded Line 5 Desc
     C           $HG1TX    PARM $HG1TX    WQ0035 20        Ded Line 6 Desc
     C           $HHETX    PARM $HHETX    WQ0036 20        Ded Line 7 Desc
     C           $HHFTX    PARM $HHFTX    WQ0037 20        Ded Line 8 Desc
     C           $HC7PR    PARM $HC7PR    WQ0038  72       Ded Line 1 USR
     C           $HC9PR    PARM $HC9PR    WQ0039  72       Ded Line 2 USR
     C           $HC6PR    PARM $HC6PR    WQ0040  72       Ded Line 3 USR
     C           $HC8PR    PARM $HC8PR    WQ0041  72       Ded Line 4 USR
     C           $HC5PR    PARM $HC5PR    WQ0042  72       Ded Line 5 USR
     C           $HEIPR    PARM $HEIPR    WQ0043  72       Ded Line 6 USR
     C           $HELPR    PARM $HELPR    WQ0044  72       Ded Line 7 USR
     C           $HEMPR    PARM $HEMPR    WQ0045  72       Ded Line 8 USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKT0UPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HATPR           TH Carcass Net
     C                     END                             *FI
      * Carcass Merit Hogs
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
      * Calculate Adjusted Live Weight
      * CASE: CUR.TH Head Killed is *Zeros
     C           $HFENB    IFEQ *ZERO                      *IF
     C                     Z-ADD$HF7NB    WUU9NB           Adj Avg Live We
     C                     ELSE
      * CASE: *OTHERWISE
     C           $HLRNB    DIV  $HFENB    WUU9NB           Adj Avg Live We
     C                     END                             *FI
      * Rtv Tattoo Lean Dist  RT - Crc Sum Tattoo Lean Dist  * 
     C                     EXSR SFRVGN
      * Tattoo %
      * CASE: CUR.TH Head Killed is Not Zero
     C           $HFENB    IFNE *ZERO                      *IF
      * Tattoo % 1
      * CUR.Lean Rng Tto Pct 1 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM2NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDDPC           Lean Rng Tto Pc
      * Tattoo % 2
      * CUR.Lean Rng Tto Pct 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 2 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM3NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDEPC           Lean Rng Tto Pc
      * Tattoo % 3
      * CUR.Lean Rng Tto Pct 3 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 3 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM4NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDFPC           Lean Rng Tto Pc
      * Tattoo % 4
      * CUR.Lean Rng Tto Pct 4 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 4 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM5NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDGPC           Lean Rng Tto Pc
      * Tattoo % 5
      * CUR.Lean Rng Tto Pct 5 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 5 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM6NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDHPC           Lean Rng Tto Pc
      * Tattoo % 6
      * CUR.Lean Rng Tto Pct 6 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 6 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM7NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDIPC           Lean Rng Tto Pc
      * Tattoo % 7
      * CUR.Lean Rng Tto Pct 7 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 7 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM8NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDJPC           Lean Rng Tto Pc
      * Tattoo % 8
      * CUR.Lean Rng Tto Pct 8 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 8 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HM9NB    DIV  $HFENB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDKPC           Lean Rng Tto Pc
     C                     END                             *FI
      * ** Producer YTD Lean Distribution **
      * Rtv Prd Lean Dist     RT - Crc Sum Prd Lean Dst YTD  * 
     C                     EXSR SGRVGN
      * Rtv Head Killed       RT - Crc Sum Prd          YTD  * 
     C                     EXSR SHRVGN
      * Producer YTD %
      * CASE: PAR.PY Head Killed is Greater then Zero
     C           P8MFNB    IFGT *ZERO                      *IF
      * YTD % 1
      * CUR.Lean Rng Prd Pct 1 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 1 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNANB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDLPC           Lean Rng Prd Pc
      * YTD % 2
      * CUR.Lean Rng Prd Pct 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 2 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNBNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDMPC           Lean Rng Prd Pc
      * YTD % 3
      * CUR.Lean Rng Prd Pct 3 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 3 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNCNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDNPC           Lean Rng Prd Pc
      * YTD % 4
      * CUR.Lean Rng Prd Pct 4 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 4 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNDNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDOPC           Lean Rng Prd Pc
      * YTD % 5
      * CUR.Lean Rng Prd Pct 5 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 5 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNENB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDPPC           Lean Rng Prd Pc
      * YTD % 6
      * CUR.Lean Rng Prd Pct 6 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 6 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNFNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDQPC           Lean Rng Prd Pc
      * YTD % 7
      * CUR.Lean Rng Prd Pct 7 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 7 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNGNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDRPC           Lean Rng Prd Pc
      * YTD % 8
      * CUR.Lean Rng Prd Pct 8 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 8 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.100
     C           $HNHNB    DIV  P8MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    $HDSPC           Lean Rng Prd Pc
     C                     END                             *FI
      * ** Comparitive Data **
      *
     C                     Z-ADD*ZERO     WN0012  52       CWLW Min Top Ad
     C                     Z-ADD*ZERO     WN0013  52       CWLW Max Top Ad
     C                     Z-ADD*ZERO     WN0014  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019  52       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020  30       CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021  30       CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022  30       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023  30       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024  30       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025  30       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026  30       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027  30       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028  52       CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0029  52       CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0030  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035  52       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0036  52       CWLW Min Top So
     C                     Z-ADD*ZERO     WN0037  52       CWLW Max Top So
     C                     Z-ADD*ZERO     WN0038  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0039  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0040  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0041  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0042  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0043  52       CWLW Max Lower
      *
      * Prt Crc Sum WtLt WK   IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0012           CWLW Min Top Ad
     C                     Z-ADD*ZERO     WN0013           CWLW Max Top Ad
     C                     Z-ADD*ZERO     WN0014           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0029           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0030           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0036           CWLW Min Top So
     C                     Z-ADD*ZERO     WN0037           CWLW Max Top So
     C                     Z-ADD*ZERO     WN0038           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0039           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0040           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0041           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0042           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0043           CWLW Max Lower
     C                     MOVEL*BLANK    $HHKTX           Yield NA WK USR
     C                     MOVEL*BLANK    $HHRTX           Yield Top X WK
     C                     MOVEL*BLANK    $HHTTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HHSTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HHUTX           Yield Lower X W
     C                     MOVEL*BLANK    $HHJTX           Lean% NA WK USR
     C                     MOVEL*BLANK    $HHNTX           Lean% Top X WK
     C                     MOVEL*BLANK    $HHPTX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HHOTX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HHQTX           Lean% Lower X W
     C                     MOVEL*BLANK    $HHLTX           Lean Prm NA WK
     C                     MOVEL*BLANK    $HHVTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HHXTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HHWTX           Lean Prm Mid Lo
     C                     MOVEL*BLANK    $HHYTX           Lean Prm Lower
     C                     MOVEL*BLANK    $HHMTX           Sort Dsc NA WK
     C                     MOVEL*BLANK    $HHZTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HH1TX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HH0TX           Sort Dsc Mid Lo
     C                     MOVEL*BLANK    $HH2TX           Sort Dsc Lower
     C                     Z-ADD*ZERO     $HMHNB           CWL Min Adj Liv
     C                     Z-ADD*ZERO     $HMINB           CWL Max Adj Liv
     C                     Z-ADD*ZERO     WUNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     WUNYNB           Live Wgt Max US
      * Rtv Prior Sunday      XF - STR Order Management Sys  * 
     C                     CALL 'PDLNXFR'              90  Rtv Prior Sunda
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $HHMNB    WQ0046  30       Company Number
     C                     PARM $HB0DT    WQ0047  70       Kill Date Usr
     C           WUB5DT    PARM *ZERO     WQ0048  70       Date USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDLNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Prt Crc Sum WtLt WK   RT - Crc Sum Co Wgt Lot   WK  * 
     C                     EXSR SIRVGN
      * Yield
      * CASE: PAR.TH Adj Actual Yield % EQ WRK.Zero USR
     C           $HCWPC    IFEQ WUE9NB                     *IF
     C                     MOVEL'NA'      $HHKTX           Yield NA WK USR
     C                     ELSE
      * CASE: *OTHERWISE
      * Yield Compare
      * CASE: PAR.TH Adj Actual Yield % GT PAR.CWLW Max Mid Hi Adj Yield
     C           $HCWPC    IFGT WN0017                     *IF
     C                     MOVEL'X'       $HHRTX           Yield Top X WK
     C                     ELSE
      * CASE: Max Mid Low < Yield <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH Adj Actual Yield % GT PAR.CWLW Max Mid Low Ad
      *   |- c2    : PAR.TH Adj Actual Yield % LE PAR.CWLW Max Mid Hi Adj
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HCWPC    IFGT WN0015                     *IF
     C           $HCWPC    IFLE WN0017                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHTTX           Yield Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Yield <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH Adj Actual Yield % GT PAR.CWLW Max Lower Adj
      *   |- c2    : PAR.TH Adj Actual Yield % LE PAR.CWLW Max Mid Low Ad
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HCWPC    IFGT WN0019                     *IF
     C           $HCWPC    IFLE WN0015                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHSTX           Yield Mid Low X
     C                     ELSE
      * CASE: PAR.TH Adj Actual Yield % LE PAR.CWLW Max Lower Adj Yield
     C           $HCWPC    IFLE WN0019                     *IF
     C                     MOVEL'X'       $HHUTX           Yield Lower X W
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Percent
      * CASE: PAR.TH Avg Lean Percent EQ WRK.Zero USR
     C           $HF4NB    IFEQ WUE9NB                     *IF
     C                     MOVEL'NA'      $HHJTX           Lean% NA WK USR
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Percent Compare
      * CASE: PAR.TH Avg Lean Percent GT PAR.CWLW Max Mid Hi Lean%
     C           $HF4NB    IFGT WN0025                     *IF
     C                     MOVEL'X'       $HHNTX           Lean% Top X WK
     C                     ELSE
      * CASE: Max Mid Low < Lean% <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH Avg Lean Percent GT PAR.CWLW Max Mid Low Lean
      *   |- c2    : PAR.TH Avg Lean Percent LE PAR.CWLW Max Mid Hi Lean%
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HF4NB    IFGT WN0023                     *IF
     C           $HF4NB    IFLE WN0025                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHPTX           Lean% Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Lean% <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH Avg Lean Percent GT PAR.CWLW Max Lower Lean%
      *   |- c2    : PAR.TH Avg Lean Percent LE PAR.CWLW Max Mid Low Lean
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HF4NB    IFGT WN0027                     *IF
     C           $HF4NB    IFLE WN0023                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHOTX           Lean% Mid Low X
     C                     ELSE
      * CASE: PAR.TH Avg Lean Percent LE PAR.CWLW Max Lower Lean%
     C           $HF4NB    IFLE WN0027                     *IF
     C                     MOVEL'X'       $HHQTX           Lean% Lower X W
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Premium Lv/CWT
      * CASE: PAR.TH CM Lean Prem Live /CWT EQ WRK.Zero USR
     C           $HEEPR    IFEQ WUE9NB                     *IF
     C                     MOVEL'NA'      $HHLTX           Lean Prm NA WK
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Premium Compare
      * CASE: PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Mid Hi Lean P
     C           $HEEPR    IFGT WN0033                     *IF
     C                     MOVEL'X'       $HHVTX           Lean Prm Top X
     C                     ELSE
      * CASE: Max Mid Low < Lean prm <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Mid Lo
      *   |- c2    : PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Mid Hi
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HEEPR    IFGT WN0031                     *IF
     C           $HEEPR    IFLE WN0033                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHXTX           Lean Prm Mid Hi
     C                     ELSE
      * CASE: Max Lower < Lean prm <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Lower
      *   |- c2    : PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Mid Lo
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HEEPR    IFGT WN0035                     *IF
     C           $HEEPR    IFLE WN0031                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHWTX           Lean Prm Mid Lo
     C                     ELSE
      * CASE: PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Lower Lean Pr
     C           $HEEPR    IFLE WN0035                     *IF
     C                     MOVEL'X'       $HHYTX           Lean Prm Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sort Discount Lv/CWT
      * CASE: PAR.TH CM Srt Dsc Live /CWT EQ WRK.Zero USR
     C           $HD8PR    IFEQ WUE9NB                     *IF
     C                     MOVEL'NA'      $HHMTX           Sort Dsc NA WK
     C                     ELSE
      * CASE: *OTHERWISE
      * Sort Discount Compare
      * CASE: PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Mid Hi Sort Dsc
     C           $HD8PR    IFGT WN0041                     *IF
     C                     MOVEL'X'       $HHZTX           Sort Dsc Top X
     C                     ELSE
      * CASE: Max Mid Low < Sort Dsc <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Mid Low
      *   |- c2    : PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Mid Hi S
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HD8PR    IFGT WN0039                     *IF
     C           $HD8PR    IFLE WN0041                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH1TX           Sort Dsc Mid Hi
     C                     ELSE
      * CASE: Max Lower < Sort Dsc <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Lower So
      *   |- c2    : PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Mid Low
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HD8PR    IFGT WN0043                     *IF
     C           $HD8PR    IFLE WN0039                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH0TX           Sort Dsc Mid Lo
     C                     ELSE
      * CASE: PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Lower Sort Dsc
     C           $HD8PR    IFLE WN0043                     *IF
     C                     MOVEL'X'       $HH2TX           Sort Dsc Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Market and Subject Hogs Only
      * CASE: DB1.HC Class Code is Resale
     C           A1BECD    IFEQ 'RSL'                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Prt Crc Sum Cndmns    RT - Loss Type  * 
     C                     EXSR SJRVGN
      * Prt Crc Sum Trim Dtl  RT - Loss Type  * 
     C                     EXSR SQRVGN
     C                     Z-ADD1         ZQ      50
     C           WUOOTX    CAT  WUG4TX:ZQ $HONTX    P      Trim 1 Desc Crc
     C                     Z-ADD1         ZQ      50
     C           WUOPTX    CAT  WUG5TX:ZQ $HOTTX    P      Trim 2 Desc Crc
     C                     Z-ADD1         ZQ      50
     C           WUOQTX    CAT  WUG6TX:ZQ $HOUTX    P      Trim 3 Desc Crc
     C                     Z-ADD1         ZQ      50
     C           WUORTX    CAT  WUG7TX:ZQ $HOVTX    P      Trim 4 Desc Crc
     C                     Z-ADD1         ZQ      50
     C           WUOSTX    CAT  WUG8TX:ZQ $HOWTX    P      Trim 5 Desc Crc
     C                     Z-ADD1         ZQ      50
     C           WUO0TX    CAT  WUOZTX:ZQ $HOXTX    P      Trim 6 Desc Crc
     C                     END                             *FI
      * Rtv CMP Info          RT - Carcass Merit Program  * 
     C                     EXSR SSRVGN
      * CASE: CUR.TH Avg Backfat - 2 Dec is Not Entered
     C           $HMCNF    IFEQ 0                          *IF
     C                     Z-ADD$HF2NB    $HMCNF           TH Avg Backfat
     C                     END                             *FI
      * CASE: CUR.TH Avg Loin Eye - 2 dec is Not Entered
     C           $HMVNF    IFEQ *ZERO                      *IF
     C                     Z-ADD$HF3NB    $HMVNF           TH Avg Loin Eye
     C                     END                             *FI
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Carcass Detail,Fx PO
     C                     EXSR UDSUBR                     Embedded PRTOBJ
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1BNNB    WZA002           BOH Buy Order N
     C                     Z-ADDA1BNNB    WZA002
     C           *LIKE     DEFN A1BONB    WZA003           BOL Load Number
     C                     Z-ADDA1BONB    WZA003
     C           *LIKE     DEFN A1CVNB    WZA004           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPC4                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     MOVEL'Y'       WUP4ST           Status 1
     C                     MOVEL'Y'       WUP5ST           Status 2
     C                     MOVEL'Y'       WUSVST           Status 3
      * CASE: DB1.TH Held Over GT WRK.Zero USR
     C           A1H9NB    IFGT WUE9NB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * 5/28/03  Added par.status 3 field check for sort loss print
      * If live not printing as Carc, dont print base mkt, et al. fields
      * CASE:
      *  - (c1 AND c2 AND c3) AND c4
      *   |- c1    : DB1.TH Payment Type is Live
      *   |- c2    : PAR.Print Carcass Analysis Us is No
      *   |- c3    : PAR.Print Comp Sum/Dtl STS is No
      *   |- c4    : PAR.Status 3 is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           A1J9ST    IFEQ 'L'                        *IF
     C           P3MVST    IFEQ 'N'                        *IF
     C           P8TOST    IFEQ 'N'                        *IF
     C           P8SVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WUP4ST           Status 1
     C                     MOVEL'N'       WUP5ST           Status 2
     C                     END                             *FI
      * Display Shipped Weight
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
     C                     MOVEL'N'       WUSVST           Status 3
     C                     ELSE
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
      * CASE: DB1.TH Live Purchase UOM is Not Shipped Weight
     C           A1CPST    IFEQ 'BD'                       *IF
     C           A1CPST    OREQ 'CW'
     C           A1CPST    OREQ 'CH'
     C           A1CPST    OREQ 'DH'
     C           A1CPST    OREQ 'FL'
     C           A1CPST    OREQ 'GV'
     C           A1CPST    OREQ 'KH'
     C           A1CPST    OREQ 'LW'
     C           A1CPST    OREQ 'NH'
     C           A1CPST    OREQ 'NL'
     C           A1CPST    OREQ 'RH'
     C           A1CPST    OREQ 'YH'
     C           A1CPST    OREQ 'DY'
     C           A1CPST    OREQ 'LX'
     C           A1CPST    OREQ 'RX'
     C                     MOVEL'N'       WUSVST           Status 3
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0AL02  1        BOL Load Number
     C                     MOVEL*BLANK    W0AL03  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL02  1        BOL Load Number
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1BNNB    IFNE WZA002                     BOH Buy Order N
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1BONB    IFNE WZA003                     BOL Load Number
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1CVNB    IFNE WZA004                     TH Tattoo Numbe
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$PKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$QKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$RKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$SKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * Mention hidden format
     C   99N99             WRITE$TFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Carcass Detail,Fx PO: Mainline
      *================================================================
      * Prt Carcass Detail,Fx PO: Initialise
     C                     EXSR ZBINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1HMNB    WQKB01           BOH Company Num
     C           *LIKE     DEFN B1BNNB    WQKB02           BOH Buy Order N
     C           *LIKE     DEFN B1BONB    WQKB03           BOL Load Number
     C           *LIKE     DEFN B1CVNB    WQKB04           TH Tattoo Numbe
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           BOH Company Num
     C                     KFLD           WQKB02           BOH Buy Order N
     C                     KFLD           WQKB03           BOL Load Number
     C                     KFLD           WQKB04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQKB01           BOH Company Num
     C                     Z-ADD$HBNNB    WQKB02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQKB03           BOL Load Number
     C                     Z-ADD$HCVNB    WQKB04           TH Tattoo Numbe
      * Establish starting position
     C           KRSB      SETLL@B1CPKX                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        BOH Company Num
     C                     MOVEL'Y'       W0BL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0BL02  1        BOL Load Number
     C                     MOVEL'Y'       W0BL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0BL04  1        CD Carcass/Hot
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $LJ9NB           TH Head Exclude
     C                     MOVEL*BLANK    $LHGTX           Record Add/Del
     C                     Z-ADD*ZERO     $LXFRE           Weight 7.1 1 US
     C                     Z-ADD*ZERO     $LJYPR           CD CA Crc Value
     C                     Z-ADD*ZERO     $LJ0PR           CD CA Crc Value
     C                     Z-ADD*ZERO     $LF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $LAWPR           CD Lean Premium
     C                     Z-ADD*ZERO     $LAXPR           CD Lean Premium
     C                     Z-ADD*ZERO     $LEZNB           CD Gross Value
     C                     Z-ADD*ZERO     $LTBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     $LNSNB           Carcass number
     C                     Z-ADD*ZERO     $LKFNB           Carcass Count U
     C                     Z-ADD*ZERO     $LBFPC           Std Yield % SUM
     C                     Z-ADD*ZERO     $LBNPR           Std Yield % Tot
     C                     Z-ADD*ZERO     $LP7NB           Std Yield * Wgt
     C                     Z-ADD*ZERO     $LGRNB           Weight SUM
     C                     Z-ADD*ZERO     $LE6PR           Variance f/TopW
     C                     Z-ADD*ZERO     $LBMVA           Var From Top Wg
     C                     Z-ADD*ZERO     $LBSPR           Adj Base Carc P
     C                     Z-ADD*ZERO     $LBUPR           Adj Base Carc V
     C                     Z-ADD*ZERO     $LBPPC           Lean % 3.0 USR
     C                     Z-ADD*ZERO     $LD3PC           Lean % 1 USR
     C                     Z-ADD*ZERO     $LNTNB           Lean % * Wt
     C                     Z-ADD*ZERO     $LBIPR           Lean Add/Ded /L
     C                     Z-ADD*ZERO     $LBXPR           Lean Prem Val S
     C                     Z-ADD*ZERO     $LB0PR           Total Carc /CWT
     C                     Z-ADD*ZERO     $LBZPR           Total Carc Val
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $IARDT           BOH Buy Order D
     C                     Z-ADD*ZERO     $IAWDT           TH Purchase Dat
     C                     Z-ADDB1HMNB    $IHMNB           BOH Company Num
     C                     Z-ADDB1B0DT    $IB0DT           TH Kill Date
     C                     MOVELB1ABCD    $IABCD           PD Producer Cod
     C                     Z-ADDB1CVNB    $ICVNB           TH Tattoo Numbe
     C                     Z-ADDB1BNNB    $IBNNB           BOH Buy Order N
     C                     Z-ADDB1BONB    $IBONB           BOL Load Number
     C                     Z-ADD*ZERO     $IOXNB           TH HPS Movement
     C                     MOVEL*BLANK    $IBICD           TH Group Refere
     C                     MOVEL*BLANK    $IAGTX           PD Name
     C                     MOVEL*BLANK    $IIXTX           Blank Usr 1 fld
     C                     MOVEL*BLANK    $ISUTX           Text 17 USR
     C                     MOVEL*BLANK    $IUITX           Text 25 #2 Usr
      * USER: Process before print of TH Tattoo Number format
      * CASE: PAR.TFD Header Action-Crc Sum EQ WRK.Blank USR
     C           P5NKTX    IFEQ WUCRTX                     *IF
     C                     MOVEL'N'       W0NEWP           *Print New Page
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0NEWP           *Print New Page
     C                     END                             *FI
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP03  1
     C                     END
      *
     C           W0BL04    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB1HMNB    $JHMNB           BOH Company Num
     C                     Z-ADDB1CVNB    $JCVNB           TH Tattoo Numbe
     C                     Z-ADDB1EWNB    $JEWNB           CD Carcass/Hot
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP04  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADD*ZERO     $KNNNB           Lean % * Wgt US
     C                     Z-ADDB1HMNB    $KHMNB           BOH Company Num
     C                     Z-ADDB1BNNB    $KBNNB           BOH Buy Order N
     C                     Z-ADDB1BONB    $KBONB           BOL Load Number
     C                     Z-ADDB1CVNB    $KCVNB           TH Tattoo Numbe
     C                     Z-ADDB1B0DT    $KB0DT           TH Kill Date
     C                     Z-ADDB1LGNB    $KLGNB           CD Scale Sequen
     C                     Z-ADDB1BBDT    $KBBDT           CD Kill Date
     C                     Z-ADDB1EUNB    $KEUNB           CD Carcass Numb
     C                     Z-ADD*ZERO     $KNSNB           Carcass number
     C                     MOVELB1UTST    $KUTST           CD Adjust/Add T
     C                     MOVEL*BLANK    $KHGTX           Record Add/Del
     C                     MOVELB1GDST    $KGDST           CD Trim Area
     C                     Z-ADDB1LHNB    $KLHNB           CD Carcass Numb
     C                     MOVELB1INST    $KINST           CD Record Add/D
     C                     Z-ADDB1BEPR    $KBEPR           CD Sort Loss
     C                     Z-ADDB1ASPC    $KASPC           CD STD Yield
     C                     Z-ADD*ZERO     $KP6NB           Std Yield * Wgt
     C                     Z-ADDB1EWNB    $KEWNB           CD Carcass/Hot
     C                     Z-ADD*ZERO     $KE5PR           Variance f/TopW
     C                     Z-ADD*ZERO     $KE4PR           Variance from t
     C                     Z-ADDB1B4PR    $KB4PR           CD Base Carcass
     C                     Z-ADDB1EYNB    $KEYNB           CD Crc Value Pe
     C                     Z-ADDB1B1PR    $KB1PR           CD Base Carc Va
     C                     Z-ADDB1AVPR    $KAVPR           CD Crc Value $
     C                     Z-ADD*ZERO     $KD1PC           CD Lean Percent
     C                     Z-ADDB1AUPC    $KAUPC           CD Lean Percent
     C                     Z-ADDB1AWPR    $KAWPR           CD Lean Premium
     C                     Z-ADDB1AXPR    $KAXPR           CD Lean Premium
     C                     Z-ADDB1EZNB    $KEZNB           CD Gross Value
     C                     Z-ADDB1AYPR    $KAYPR           CD Gross Value
     C                     Z-ADDB1AKTM    $KAKTM           CD Kill Time
     C                     MOVELB1IQST    $KIQST           CD Shift
     C                     MOVELB1EFST    $KEFST           CD Carcass Acti
     C                     Z-ADDB1H6NB    $KH6NB           CD Backfat Thic
     C                     Z-ADDB1BEPC    $KBEPC           CD Loin-Eye Dep
     C                     Z-ADDB1GCST    $KGCST           CD Light Reflec
     C                     MOVELB1GEST    $KGEST           CD Carcass Sex
     C                     Z-ADDB1BHPC    $KBHPC           CD FFLI
     C                     MOVELB1IOST    $KIOST           CD Record Creat
     C                     MOVELB1IPST    $KIPST           CD Record Creat
     C                     Z-ADDB1LTNB    $KLTNB           CD LOT
     C                     MOVELB1JNST    $KJNST           CD User Error O
     C                     Z-ADDB1X4NB    $KX4NB           CD Backfat Thic
     C                     Z-ADDB1FNPC    $KFNPC           CD Loin-Eye Dep
     C                     Z-ADDB1FOPC    $KFOPC           CD Light Reflec
     C                     Z-ADDB1FPPC    $KFPPC           CD Lean Percent
     C                     MOVELB1K2ST    $KK2ST           CD Source Type
     C                     MOVELB1K3ST    $KK3ST           CD Payment Type
     C                     Z-ADDB1JWPR    $KJWPR           CD CA Sort Loss
     C                     Z-ADDB1F5PC    $KF5PC           CD CA Std Yield
     C                     Z-ADDB1JXPR    $KJXPR           CD CA Base Carc
     C                     Z-ADDB1JYPR    $KJYPR           CD CA Crc Value
     C                     Z-ADDB1JZPR    $KJZPR           CD CA Base Carc
     C                     Z-ADDB1J0PR    $KJ0PR           CD CA Crc Value
     C                     Z-ADDB1J1PR    $KJ1PR           CD CA Lean Prem
     C                     Z-ADDB1J2PR    $KJ2PR           CD CA Lean Prem
     C                     Z-ADDB1J3PR    $KJ3PR           CD CA Gross Val
     C                     Z-ADDB1J4PR    $KJ4PR           CD CA Gross Val
     C                     MOVELB1HVCD    $KHVCD           CD Producer Loc
     C                     Z-ADDB1DKJR    $KDKJR           CD Loin Eye Inc
     C                     Z-ADDB1ITJF    $KITJF           CD Backfat Inch
     C                     Z-ADDB1IJGR    $KIJGR           CD Meat Value F
     C                     Z-ADDB1ORJE    $KORJE           CD Lean Prem/Di
     C                     Z-ADDB1OTJR    $KOTJR           CD Fixed Cost F
     C                     Z-ADDB1PEIR    $KPEIR           CD MPR Sort Los
     C                     Z-ADDB1IEUF    $KIEUF           CD Meat Value F
     C                     Z-ADDB1ORUE    $KORUE           CD Fixed Cost F
     C                     Z-ADDB1IUTR    $KIUTR           CD Gross Before
     C                     Z-ADDB1IJRR    $KIJRR           CD Gross Before
     C                     MOVELB1VCST    $KVCST           CD Broken Back
     C                     MOVELB1VDST    $KVDST           CD Adjust/Add S
     C                     MOVELB1VEST    $KVEST           CD Unused Sts 3
     C                     MOVELB1VFST    $KVFST           CD Unused Sts 4
     C                     MOVELB1VGST    $KVGST           CD Unused Sts 5
     C                     MOVELB1ABCD    $KABCD           PD Producer Cod
     C                     MOVELB1AACD    $KAACD           SR Source Code
      * USER: Process before print of detail format
      * Record status processing
      * CASE: CUR.CD Record Add/Del Sts is Blanks
     C           $KINST    IFEQ *BLANK                     *IF
     C                     ADD  1         WUNSNB           Carcass number
     C                     Z-ADDWUNSNB    $KNSNB           Carcass number
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.CD Record Add/Del Sts is Delete
     C           $KINST    IFEQ 'D'                        *IF
     C                     ADD  1         WUNSNB           Carcass number
     C                     Z-ADDWUNSNB    $KNSNB           Carcass number
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUNSNB           Carcass number
     C                     Z-ADDWUNSNB    $KNSNB           Carcass number
     C                     END                             *FI
     C                     END                             *FI
      * Count Trimmed Carcasses
      * CASE: DB1.CD Trim Area is Entered
     C           B1GDST    IFEQ '3'                        *IF
     C           B1GDST    OREQ '2'
     C           B1GDST    OREQ '6'
     C           B1GDST    OREQ '4'
     C           B1GDST    OREQ '5'
     C           B1GDST    OREQ '1'
     C           B1GDST    OREQ '7'
     C                     ADD  1         WN0063           Carcass Count U
     C                     END                             *FI
      * CASE: PAR.Print Carcass Analysis Us is Yes
     C           P3MVST    IFEQ 'Y'                        *IF
     C                     Z-ADD$KJWPR    $KBEPR           CD Sort Loss
     C                     Z-ADD$KF5PC    $KASPC           CD STD Yield
     C                     Z-ADD$KJXPR    $KB4PR           CD Base Carcass
     C                     Z-ADD$KJYPR    $KEYNB           CD Crc Value Pe
     C                     Z-ADD$KJZPR    $KB1PR           CD Base Carc Va
     C                     Z-ADD$KJ0PR    $KAVPR           CD Crc Value $
     C                     Z-ADD$KJ1PR    $KAWPR           CD Lean Premium
     C                     Z-ADD$KJ2PR    $KAXPR           CD Lean Premium
     C                     Z-ADD$KJ3PR    $KEZNB           CD Gross Value
     C                     Z-ADD$KJ4PR    $KAYPR           CD Gross Value
     C                     END                             *FI
     C           $KEWNB    MULT $KASPC    $KP6NB           Std Yield * Wgt
     C           $KEWNB    MULT $KAUPC    $KNNNB           Lean % * Wgt US
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $KEWNB    $LGRNB           Weight SUM
     C                     ADD  $KP6NB    $LP7NB           Std Yield * Wgt
     C                     ADD  $KE4PR    $LBMVA           Var From Top Wg
     C                     ADD  $KAVPR    $LBUPR           Adj Base Carc V
     C                     ADD  $KNNNB    $LNTNB           Lean % * Wt
     C                     ADD  $KAXPR    $LBXPR           Lean Prem Val S
     C                     ADD  $KAYPR    $LBZPR           Total Carc Val
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B1HMNB    WZB001           BOH Company Num
     C                     Z-ADDB1HMNB    WZB001
     C           *LIKE     DEFN B1BNNB    WZB002           BOH Buy Order N
     C                     Z-ADDB1BNNB    WZB002
     C           *LIKE     DEFN B1BONB    WZB003           BOL Load Number
     C                     Z-ADDB1BONB    WZB003
     C           *LIKE     DEFN B1CVNB    WZB004           TH Tattoo Numbe
     C                     Z-ADDB1CVNB    WZB004
     C           *LIKE     DEFN B1EWNB    WZB005           CD Carcass/Hot
     C                     Z-ADDB1EWNB    WZB005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@B1CPKX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'N'       W0RSL            *Record selecte
      * CASE: PAR.Print Carcass Analysis Us is Yes
     C           P3MVST    IFEQ 'Y'                        *IF
      * Rtv PayTyp/Src Hc 2   Rt - Tattoo Header  * 
     C                     EXSR STRVGN
      * CASE: WRK.TH Payment Type is Carcass Merit
     C           WUJ9ST    IFEQ 'C'                        *IF
      * CASE: WRK.TH Source Type is Internal
     C           WUKAST    IFEQ 'I'                        *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0BL01  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0BL02  1        BOL Load Number
     C                     MOVEL*BLANK    W0BL03  1        TH Tattoo Numbe
     C                     MOVEL*BLANK    W0BL04  1        CD Carcass/Hot
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        BOH Company Num
     C                     MOVEL'Y'       W0BL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0BL02  1        BOL Load Number
     C                     MOVEL'Y'       W0BL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0BL04  1        CD Carcass/Hot
     C                     ELSE
      * Next record - Detect level breaks
     C           B1HMNB    IFNE WZB001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           B1BNNB    IFNE WZB002                     BOH Buy Order N
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           B1BONB    IFNE WZB003                     BOL Load Number
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C           B1CVNB    IFNE WZB004                     TH Tattoo Numbe
     C           W0BL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL03
     C                     END
     C           B1EWNB    IFNE WZB005                     CD Carcass/Hot
     C           W0BL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL04
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP04
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP03
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
      * CASE: PAR.Carcass number        USR is Zero
     C           WUNSNB    IFEQ *ZERO                      *IF
     C                     GOTO B4EXIT                     *QUIT
     C                     END                             *FI
      * Process Excluded Carcasses
      * CASE: PAR.TH Head Excluded is GT Zero
     C           $HJ9NB    IFGT *ZERO                      *IF
     C                     MOVEL'DED'     $LHGTX           Record Add/Del
     C           -1        MULT $HJ9NB    $LJ9NB           TH Head Exclude
     C           WUNSNB    SUB  $HJ9NB    $LNSNB           Carcass number
     C                     Z-ADD$HF4NB    $LF4NB           TH Avg Lean Per
      * Weight
      * Weight Excluded
      * CUR.Weight 7.1 1 USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.TH Avg Hot Wgt EXC/ADD
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Head Excluded
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.-1
     C           A1HHNB    MULT $HJ9NB    W0WA01           *Synon (15,2) w
     C           W0WA01    MULT -1        W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $LXFRE           Weight 7.1 1 US
      * Carcass Value
     C           YL0002    MULT -1        $LJ0PR           CD CA Crc Value
      * Carcass Valuce /CWT
      * CUR.CD CA Crc Value Per CWT =
      *    *COMPUTE (x1 / (x2 / x3) * x4)
      * x1    : CUR.CD CA Crc Value $ Per Hd
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight 7.1 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x4    : CON.-1
     C           $LXFRE    DIV  100       W0WB02    H      *Synon (15,5) w
     C           $LJ0PR    DIV  W0WB02    W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT -1        W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $LJYPR           CD CA Crc Value
      * Premium
     C           YL0003    MULT -1        $LAXPR           CD Lean Premium
      * Premium /CWT
      * CUR.CD Lean Premium CWT =
      *    *COMPUTE (x1 / (x2 / x3) * x4)
      * x1    : CUR.CD Lean Premium $ Per Hd
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight 7.1 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x4    : CON.-1
     C           $LXFRE    DIV  100       W0WB02    H      *Synon (15,5) w
     C           $LAXPR    DIV  W0WB02    W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT -1        W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $LAWPR           CD Lean Premium
      * Gross
      * 8/15/2006 Un * this line and * out the line abovr
      *           The Exclude amount is not show as such on the carc dtl
     C           $HTBPR    MULT -1        $LTBPR           TH Excluded Gro
      * Gross Value /CWT
      * CUR.CD Gross Value Per CWT =
      *    *COMPUTE (x1 / (x2 / x3) * x4)
      * x1    : CUR.TH Excluded Gross Value
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight 7.1 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x4    : CON.-1
     C           $LXFRE    DIV  100       W0WB02    H      *Synon (15,5) w
     C           $LTBPR    DIV  W0WB02    W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT -1        W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $LEZNB           CD Gross Value
      * Add Excluded Value to Total.
     C                     ADD  $LXFRE    $LGRNB           Weight SUM
     C                     ADD  $LJ0PR    $LBUPR           Adj Base Carc V
     C                     ADD  $LAXPR    $LBXPR           Lean Prem Val S
     C                     ADD  $LTBPR    $LBZPR           Total Carc Val
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUNSNB    $LNSNB           Carcass number
     C                     END                             *FI
      * Trimmed Carcasses
     C                     Z-ADDWN0063    $LKFNB           Carcass Count U
      * CASE: CUR.Weight SUM is Greater then Zero
     C           $LGRNB    IFGT *ZERO                      *IF
      * Std Yield % Avg
      * CUR.Std Yield * Wgt       SUM =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Std Yield * Wgt       SUM
      * /     : CUR.Std Yield % Tot USR *Rounded
      * x2    : CUR.Weight SUM
     C           $LP7NB    DIV  $LGRNB    $LBNPR    H      Std Yield % Tot
     C                     Z-ADD$LBNPR    $LP7NB           Std Yield * Wgt
      * Variance from top/CWT
      * CUR.Variance f/TopWgt/CWT USR =
      *    *COMPUTE (x1 / (x2 /x3))
      * x1    : CUR.Var From Top Wgt Rep Sum
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $LGRNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $LBMVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $LE6PR           Variance f/TopW
      * Carcass value /CWT
      * CUR.Adj Base Carc Per CWT USR =
      *    *COMPUTE (x1 / (x2 /x3))
      * x1    : CUR.Adj Base Carc Val SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $LGRNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $LBUPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $LBSPR           Adj Base Carc P
      * Lean % Avg
      * CUR.Lean % 1 USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Lean % * Wt           SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : CUR.Weight SUM
     C           $LNTNB    DIV  $LGRNB    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $LD3PC           Lean % 1 USR
      * Lean Add/Ded /CWT
      * CUR.Lean Add/Ded /Lv CWT USR =
      *    *COMPUTE (x1 / (x2 /x3))
      * x1    : CUR.Lean Prem Val SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $LGRNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $LBXPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $LBIPR           Lean Add/Ded /L
      * CASE: PAR.CMP Grading Type is Meat Value
     C           YL0007    IFEQ 'M'                        *IF
      * Gross Value  /CWT
      * CUR.Total Carc /CWT USR =
      *    *COMPUTE (x1 / (x2 /x3))
      * x1    : CUR.Total Carc Val SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $LGRNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $LBZPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $LB0PR           Total Carc /CWT
     C                     ELSE
      * CASE: *OTHERWISE
     C           $LBSPR    ADD  $LBIPR    $LB0PR           Total Carc /CWT
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD$HF4NB    $LD3PC           Lean % 1 USR
      * Rtv TH Ext for ExstnceRT - Tattoo Header EXT  * 
     C                     EXSR SURVGN
      * Print *NONE for Excluded Carcass Data
      * CASE: WRK.*Return code is *Record does not exist
     C           WURTN     IFEQ @CN,021                    *IF
     C                     MOVEL'N'       YL0008           Format Printed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0008           Format Printed
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 7
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
     C                     MOVEL'0'       *IN79
     C           $HJ9NB    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WN0061    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WUABST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           YL0008    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
      * Print format
     C                     WRITE$LFINTTL
     C                     END
      * PRTOBJ calls after print of final totals format
      * Embedded PRTOBJ : Prt Excluded Carc Dta PO
     C                     EXSR UESUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : Prt TH Comments       PO
     C                     EXSR UGSUBR                     Embedded PRTOBJ
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         C0MAIN    BEGSR
      *================================================================
      * Prt Excluded Carc Dta PO: Mainline
      *================================================================
      * Prt Excluded Carc Dta PO: Initialise
     C                     EXSR ZCINIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNHMNB    WQKC01           BOH Company Num
     C           *LIKE     DEFN DNBNNB    WQKC02           BOH Buy Order N
     C           *LIKE     DEFN DNBONB    WQKC03           BOL Load Number
     C           *LIKE     DEFN DNCVNB    WQKC04           TH Tattoo Numbe
      * Define keylist
     C           KRSC      KLIST
     C                     KFLD           WQKC01           BOH Company Num
     C                     KFLD           WQKC02           BOH Buy Order N
     C                     KFLD           WQKC03           BOL Load Number
     C                     KFLD           WQKC04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQKC01           BOH Company Num
     C                     Z-ADD$HBNNB    WQKC02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQKC03           BOL Load Number
     C                     Z-ADD$HCVNB    WQKC04           TH Tattoo Numbe
      * Establish starting position
     C           KRSC      SETLL@DNCPUY                    *
      * Read first record with user selection
     C                     EXSR C3READ
     C           W0EOFC    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0CL1P  1        First page
     C                     MOVEL'Y'       W0CL00  1        BOH Company Num
     C                     MOVEL'Y'       W0CL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0CL02  1        BOL Load Number
     C                     MOVEL'Y'       W0CL03  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0CCDT
      * Print report body
     C           W0EOFC    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR C1PHDR
      * Print report detail line
     C                     EXSR C2PDTL
      * Read next record with user selection
     C                     EXSR C3READ
      * Print totals
     C                     EXSR C4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         C0EXIT    ENDSR
      /EJECT
     CSR         C1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0CL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP1P  1
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP00  1
     C                     END
      *
     C           W0CL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP01  1
     C                     END
      *
     C           W0CL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP02  1
     C                     END
      *
     C           W0CL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDDNHMNB    $NHMNB           BOH Company Num
     C                     Z-ADDDNBNNB    $NBNNB           BOH Buy Order N
     C                     Z-ADDDNBONB    $NBONB           BOL Load Number
     C                     Z-ADDDNCVNB    $NCVNB           TH Tattoo Numbe
     C                     Z-ADDDNLTHW    $NLTHW           TH Min LT Hot W
     C                     Z-ADD*ZERO     $NM9A1           Hot Wgt < Usr
     C                     Z-ADD*ZERO     $NLHSM           Head LT Hot Wt
     C                     Z-ADDDNHLHW    $NHLHW           TH Head LT Hot
     C                     Z-ADDDNGTHW    $NGTHW           TH Max GT Hot W
     C                     Z-ADD*ZERO     $NNAA1           Hot Wgt > Usr
     C                     Z-ADD*ZERO     $NGHSM           Head GT Hot Wt
     C                     Z-ADDDNHGHW    $NHGHW           TH Head GT Hot
     C                     Z-ADDDNH0PC    $NH0PC           TH Min LT Lean
     C                     Z-ADD*ZERO     $NNBA1           Lean Pct < Usr
     C                     Z-ADD*ZERO     $NLLSM           Head LT Lean Pc
     C                     Z-ADDDNHLLP    $NHLLP           TH Head LT Lean
     C                     Z-ADDDNH2PC    $NH2PC           TH Max GT Lean
     C                     Z-ADD*ZERO     $NNCA1           Lean Pct > Usr
     C                     Z-ADD*ZERO     $NGLSM           Head GT Lean Pc
     C                     Z-ADDDNHFLP    $NHFLP           TH Head GT Lean
     C                     Z-ADDDNLTBF    $NLTBF           TH Min LT Backf
     C                     Z-ADD*ZERO     $NNDA1           Backfat Inch <
     C                     Z-ADD*ZERO     $NLBSM           Head LT Backfat
     C                     Z-ADDDNHLBF    $NHLBF           TH Head LT Back
     C                     Z-ADDDNGTBF    $NGTBF           TH Max GT Backf
     C                     Z-ADD*ZERO     $NNEA1           Backfat Inch >
     C                     Z-ADD*ZERO     $NGBSM           Head GT Backfat
     C                     Z-ADDDNHGBF    $NHGBF           TH Head GT Back
     C                     Z-ADDDNHZPC    $NHZPC           TH Min LT LoinE
     C                     Z-ADD*ZERO     $NNFA1           Loin Eye Inch <
     C                     Z-ADD*ZERO     $NLEIS           Head LT LoinEye
     C                     Z-ADD*ZERO     $NNGA1           Loin Eye Inch >
     C                     Z-ADDDNHLLE    $NHLLE           TH Head LT Loin
     C                     Z-ADDDNH1PC    $NH1PC           TH Max GT LoinE
     C                     Z-ADD*ZERO     $NGESM           Head GT LoinEye
     C                     Z-ADDDNHGLE    $NHGLE           TH Head GT Loin
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP03  1
     C                     END
      *
      *================================================================
     CSR         C1EXIT    ENDSR
      /EJECT
     CSR         C2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDDNHMNB    $MHMNB           BOH Company Num
     C                     Z-ADDDNBNNB    $MBNNB           BOH Buy Order N
     C                     Z-ADDDNBONB    $MBONB           BOL Load Number
     C                     Z-ADDDNCVNB    $MCVNB           TH Tattoo Numbe
     C                     Z-ADDDNB0DT    $MB0DT           TH Kill Date
     C                     Z-ADDDNI5PR    $MI5PR           TH CA Market Pr
     C                     Z-ADDDNJBPR    $MJBPR           TH CA Base Mark
     C                     Z-ADDDNI6PR    $MI6PR           TH CA Base Mkt
     C                     Z-ADDDNI7PR    $MI7PR           TH CA Sort Disc
     C                     Z-ADDDNI8PR    $MI8PR           TH CA Yield Gai
     C                     Z-ADDDNI9PR    $MI9PR           TH CA Base Carc
     C                     Z-ADDDNJAPR    $MJAPR           TH CA Lean Prem
     C                     Z-ADDDNJCPR    $MJCPR           TH CA Carcass G
     C                     Z-ADDDNJDPR    $MJDPR           TH CA Bse Mkt L
     C                     Z-ADDDNJEPR    $MJEPR           TH CA Bse Mkt C
     C                     Z-ADDDNJFPR    $MJFPR           TH CA Srt Dsc L
     C                     Z-ADDDNJGPR    $MJGPR           TH CA Srt Dsc C
     C                     Z-ADDDNJHPR    $MJHPR           TH CA Yld G/L L
     C                     Z-ADDDNJIPR    $MJIPR           TH CA Yld G/L C
     C                     Z-ADDDNJJPR    $MJJPR           TH CA Crc Val L
     C                     Z-ADDDNJKPR    $MJKPR           TH CA Crc Val C
     C                     Z-ADDDNJLPR    $MJLPR           TH CA Lean Prm
     C                     Z-ADDDNJMPR    $MJMPR           TH CA Lean Prm
     C                     Z-ADDDNJNPR    $MJNPR           TH CA Gross Liv
     C                     Z-ADDDNJOPR    $MJOPR           TH CA Gross Car
     C                     Z-ADDDNLTHW    $MLTHW           TH Min LT Hot W
     C                     Z-ADDDNHLHW    $MHLHW           TH Head LT Hot
     C                     Z-ADDDNGTHW    $MGTHW           TH Max GT Hot W
     C                     Z-ADDDNHGHW    $MHGHW           TH Head GT Hot
     C                     Z-ADDDNH0PC    $MH0PC           TH Min LT Lean
     C                     Z-ADDDNHLLP    $MHLLP           TH Head LT Lean
     C                     Z-ADDDNH2PC    $MH2PC           TH Max GT Lean
     C                     Z-ADDDNHFLP    $MHFLP           TH Head GT Lean
     C                     Z-ADDDNSNA1    $MSNA1           TE Unused Numbe
     C                     Z-ADDDNSOA1    $MSOA1           TE UnUsed Numbe
     C                     Z-ADDDNSPA1    $MSPA1           TE Unused Numbe
     C                     MOVELDNDGSS    $MDGSS           TE Unused Statu
     C                     MOVELDNDHSS    $MDHSS           TE Unused Statu
     C                     MOVELDNDISS    $MDISS           TE Unused Statu
     C                     MOVELDNABCD    $MABCD           PD Producer Cod
     C                     MOVELDNNYCD    $MNYCD           PS Site ID
     C                     MOVELDNOVCD    $MOVCD           Producer Subsid
     C                     Z-ADDDNLTBF    $MLTBF           TH Min LT Backf
     C                     Z-ADDDNHLBF    $MHLBF           TH Head LT Back
     C                     Z-ADDDNGTBF    $MGTBF           TH Max GT Backf
     C                     Z-ADDDNHGBF    $MHGBF           TH Head GT Back
     C                     Z-ADDDNHZPC    $MHZPC           TH Min LT LoinE
     C                     Z-ADDDNHLLE    $MHLLE           TH Head LT Loin
     C                     Z-ADDDNH1PC    $MH1PC           TH Max GT LoinE
     C                     Z-ADDDNHGLE    $MHGLE           TH Head GT Loin
     C                     MOVELDNAAVN    $MAAVN           RS User Changed
     C                     Z-ADDDNAADT    $MAADT           RS Date Changed
     C                     Z-ADDDNAMTM    $MAMTM           RS Time Changed
     C                     MOVELDNAJST    $MAJST           RS Record Statu
     C                     MOVELDNAHVN    $MAHVN           RS Job
     C                     MOVELDNAGVN    $MAGVN           RS Program
     C                     MOVELDNABVN    $MABVN           RS User Added
     C                     Z-ADDDNABDT    $MABDT           RS Date Added
     C                     Z-ADDDNABTM    $MABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $MHLBF    $NLBSM           Head LT Backfat
     C                     ADD  $MHGBF    $NGBSM           Head GT Backfat
     C                     ADD  $MHLHW    $NLHSM           Head LT Hot Wt
     C                     ADD  $MHGHW    $NGHSM           Head GT Hot Wt
     C                     ADD  $MHLLP    $NLLSM           Head LT Lean Pc
     C                     ADD  $MHFLP    $NGLSM           Head GT Lean Pc
     C                     ADD  $MHLLE    $NLEIS           Head LT LoinEye
     C                     ADD  $MHGLE    $NGESM           Head GT LoinEye
      *
      *================================================================
     CSR         C2EXIT    ENDSR
      /EJECT
     CSR         C3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN DNHMNB    WZC001           BOH Company Num
     C                     Z-ADDDNHMNB    WZC001
     C           *LIKE     DEFN DNBNNB    WZC002           BOH Buy Order N
     C                     Z-ADDDNBNNB    WZC002
     C           *LIKE     DEFN DNBONB    WZC003           BOL Load Number
     C                     Z-ADDDNBONB    WZC003
     C           *LIKE     DEFN DNCVNB    WZC004           TH Tattoo Numbe
     C                     Z-ADDDNCVNB    WZC004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFC    OREQ '1'
     C           KRSC      READE@DNCPUY                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFC  1
      * Quit if no record read
     C           W0EOFC    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0CL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0CL01  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0CL02  1        BOL Load Number
     C                     MOVEL*BLANK    W0CL03  1        TH Tattoo Numbe
     C           W0EOFC    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0CL00  1        BOH Company Num
     C                     MOVEL'Y'       W0CL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0CL02  1        BOL Load Number
     C                     MOVEL'Y'       W0CL03  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           DNHMNB    IFNE WZC001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL00
     C                     END
     C           DNBNNB    IFNE WZC002                     BOH Buy Order N
     C           W0CL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL01
     C                     END
     C           DNBONB    IFNE WZC003                     BOL Load Number
     C           W0CL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL02
     C                     END
     C           DNCVNB    IFNE WZC004                     TH Tattoo Numbe
     C           W0CL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL03
     C                     END
     C                     END
      *================================================================
     CSR         C3EXIT    ENDSR
      /EJECT
     CSR         C4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0CL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Tattoo Number format
      * Move the values of the ranges from the carcass merit programs
     C                     EXSR UFSUBR                     Move the values
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 13
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$NKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP03
     C                     END
      *
     C           W0CL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP02
     C                     END
      *
     C           W0CL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP01
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP00
     C                     END
      *
     C           W0EOFC    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         C4EXIT    ENDSR
      /EJECT
     CSR         D0MAIN    BEGSR
      *================================================================
      * Prt TH Comments       PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A4HMNB    WQKD01           BOH Company Num
     C           *LIKE     DEFN A4BNNB    WQKD02           BOH Buy Order N
     C           *LIKE     DEFN A4BONB    WQKD03           BOL Load Number
     C           *LIKE     DEFN A4CVNB    WQKD04           TH Tattoo Numbe
      * Define keylist
     C           KRSD      KLIST
     C                     KFLD           WQKD01           BOH Company Num
     C                     KFLD           WQKD02           BOH Buy Order N
     C                     KFLD           WQKD03           BOL Load Number
     C                     KFLD           WQKD04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQKD01           BOH Company Num
     C                     Z-ADD$HBNNB    WQKD02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQKD03           BOL Load Number
     C                     Z-ADD$HCVNB    WQKD04           TH Tattoo Numbe
      * Establish starting position
     C           KRSD      SETLL@A4CPL4                    *
      * Read first record with user selection
     C                     EXSR D3READ
     C           W0EOFD    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0DL1P  1        First page
     C                     MOVEL'Y'       W0DL00  1        BOH Company Num
     C                     MOVEL'Y'       W0DL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0DL02  1        BOL Load Number
     C                     MOVEL'Y'       W0DL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0DL04  1        TH Kill Date
     C                     MOVEL'Y'       W0DL05  1        THC Comment Typ
     C                     MOVEL'Y'       W0DL06  1        THC Comment Lin
      * Set column headings flag
     C                     MOVE 'Y'       W0DCDT
      * Print report body
     C           W0EOFD    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR D1PHDR
      * Print report detail line
     C                     EXSR D2PDTL
      * Read next record with user selection
     C                     EXSR D3READ
      * Print totals
     C                     EXSR D4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         D0EXIT    ENDSR
      /EJECT
     CSR         D1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0DL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP1P  1
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP00  1
     C                     END
      *
     C           W0DL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP01  1
     C                     END
      *
     C           W0DL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP02  1
     C                     END
      *
     C           W0DL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP03  1
     C                     END
      *
     C           W0DL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP04  1
     C                     END
      *
     C           W0DL05    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP05  1
     C                     END
      *
     C           W0DL06    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP06  1
     C                     END
      *
      *================================================================
     CSR         D1EXIT    ENDSR
      /EJECT
     CSR         D2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA4HMNB    $OHMNB           BOH Company Num
     C                     Z-ADDA4BNNB    $OBNNB           BOH Buy Order N
     C                     Z-ADDA4BONB    $OBONB           BOL Load Number
     C                     Z-ADDA4CVNB    $OCVNB           TH Tattoo Numbe
     C                     Z-ADDA4B0DT    $OB0DT           TH Kill Date
     C                     Z-ADDA4BETX    $OBETX           THC Comment Lin
     C                     MOVELA4BFTX    $OBFTX           THC Comment
     C                     MOVELA4ETST    $OETST           THC Comment Typ
     C                     MOVELA4AAVN    $OAAVN           RS User Changed
     C                     Z-ADDA4AADT    $OAADT           RS Date Changed
     C                     Z-ADDA4AMTM    $OAMTM           RS Time Changed
     C                     MOVELA4AJST    $OAJST           RS Record Statu
     C                     MOVELA4AHVN    $OAHVN           RS Job
     C                     MOVELA4AGVN    $OAGVN           RS Program
     C                     MOVELA4ABVN    $OABVN           RS User Added
     C                     Z-ADDA4ABDT    $OABDT           RS Date Added
     C                     Z-ADDA4ABTM    $OABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         D2EXIT    ENDSR
      /EJECT
     CSR         D3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A4HMNB    WZD001           BOH Company Num
     C                     Z-ADDA4HMNB    WZD001
     C           *LIKE     DEFN A4BNNB    WZD002           BOH Buy Order N
     C                     Z-ADDA4BNNB    WZD002
     C           *LIKE     DEFN A4BONB    WZD003           BOL Load Number
     C                     Z-ADDA4BONB    WZD003
     C           *LIKE     DEFN A4CVNB    WZD004           TH Tattoo Numbe
     C                     Z-ADDA4CVNB    WZD004
     C           *LIKE     DEFN A4B0DT    WZD005           TH Kill Date
     C                     Z-ADDA4B0DT    WZD005
     C           *LIKE     DEFN A4ETST    WZD006           THC Comment Typ
     C                     MOVELA4ETST    WZD006
     C           *LIKE     DEFN A4BETX    WZD007           THC Comment Lin
     C                     Z-ADDA4BETX    WZD007
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFD    OREQ '1'
     C           KRSD      READE@A4CPL4                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFD  1
      * Quit if no record read
     C           W0EOFD    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE: DB1.THC Comment Type is Historical or Payment
     C           A4ETST    IFEQ 'H'                        *IF
     C           A4ETST    OREQ 'P'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0DL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0DL01  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0DL02  1        BOL Load Number
     C                     MOVEL*BLANK    W0DL03  1        TH Tattoo Numbe
     C                     MOVEL*BLANK    W0DL04  1        TH Kill Date
     C                     MOVEL*BLANK    W0DL05  1        THC Comment Typ
     C                     MOVEL*BLANK    W0DL06  1        THC Comment Lin
     C           W0EOFD    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0DL00  1        BOH Company Num
     C                     MOVEL'Y'       W0DL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0DL02  1        BOL Load Number
     C                     MOVEL'Y'       W0DL03  1        TH Tattoo Numbe
     C                     MOVEL'Y'       W0DL04  1        TH Kill Date
     C                     MOVEL'Y'       W0DL05  1        THC Comment Typ
     C                     MOVEL'Y'       W0DL06  1        THC Comment Lin
     C                     ELSE
      * Next record - Detect level breaks
     C           A4HMNB    IFNE WZD001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL00
     C                     END
     C           A4BNNB    IFNE WZD002                     BOH Buy Order N
     C           W0DL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL01
     C                     END
     C           A4BONB    IFNE WZD003                     BOL Load Number
     C           W0DL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL02
     C                     END
     C           A4CVNB    IFNE WZD004                     TH Tattoo Numbe
     C           W0DL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL03
     C                     END
     C           A4B0DT    IFNE WZD005                     TH Kill Date
     C           W0DL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL04
     C                     END
     C           A4ETST    IFNE WZD006                     THC Comment Typ
     C           W0DL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL05
     C                     END
     C           A4BETX    IFNE WZD007                     THC Comment Lin
     C           W0DL05    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL06
     C                     END
     C                     END
      *================================================================
     CSR         D3EXIT    ENDSR
      /EJECT
     CSR         D4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0DL06    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP06
     C                     END
      *
     C           W0DL05    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP05
     C                     END
      *
     C           W0DL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP04
     C                     END
      *
     C           W0DL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP03
     C                     END
      *
     C           W0DL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP02
     C                     END
      *
     C           W0DL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP01
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP00
     C                     END
      *
     C           W0EOFD    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         D4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$C1STPAG
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$DKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print BOH Buy Order Number of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$EKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print BOL Load Number of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$FKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print TH Tattoo Number of Prt Crc Sum & Dtl LMKTPF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$GKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Crc Sum & Dtl LMKTPF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CASE: CUR.TH Source Type is Internal
     C           $HKAST    IFEQ 'I'                        *IF
      * CASE: LCL.MTech Live Yes or No is No MTech not Live
     C           YL0001    IFEQ 'N'                        *IF
      * Z1v HPS Grp from Mvmt UP - STR HPS Interface  * 
     C                     CALL 'HP258'                90  Z1v HPS Grp fro
     C           WULMST    PARM WULMST    WQ0049  7        Return Code USR
     C                     PARM $HOXNB    WQ0050  70       TH HPS Movement
     C           $HBICD    PARM *BLANK    WQ0051  7        HPS Group Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP258'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: LCL.MTech Live Yes or No is Yes MTech is Live
     C           YL0001    IFEQ 'Y'                        *IF
      * nothing here will be done when live with mtech
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.TFD Header Action-Crc Sum EQ WRK.Blank USR
     C           P5NKTX    IFEQ WUCRTX                     *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HN7NB           TH Live Wgt DRV
      * TH Live Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HCYNB    MULT 1         $HN7NB    H      TH Live Wgt DRV
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HCYNB    $HN7NB           TH Live Wgt DRV
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOANB           TH Avg Live Wgt
      * TH Avg Live Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HF7NB    MULT 1         $HOANB    H      TH Avg Live Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HF7NB    $HOANB           TH Avg Live Wgt
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HD0PC           TH Avg Lean Per
      * TH Avg Lean Percent DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HF4NB    MULT 1         $HD0PC    H      TH Avg Lean Per
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HF4NB    $HD0PC           TH Avg Lean Per
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOBNB           TH Hot Wgt DRV
      * TH Hot Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HE0NB    MULT 1         $HOBNB    H      TH Hot Wgt DRV
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HE0NB    $HOBNB           TH Hot Wgt DRV
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOCNB           TH Avg Hot Wgt
      * TH Avg Hot Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HHDNB    MULT 1         $HOCNB    H      TH Avg Hot Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HHDNB    $HOCNB           TH Avg Hot Wgt
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HPKNB           Th Live Adj Wgt
      * Th Live Adj Wgt Drv
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HLRNB    MULT 1         $HPKNB    H      Th Live Adj Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HLRNB    $HPKNB           Th Live Adj Wgt
     C                     END                             *FI
     C                     END                             *FI
      * Pricing UOM USR
      * CASE: PAR.BOH Quote Price Type is Entered
     C           P6B3ST    IFEQ 'CP'                       *IF
     C           P6B3ST    OREQ 'LP'
      * CASE: PAR.BOH Quote Price Type is Carcass Price
     C           P6B3ST    IFEQ 'CP'                       *IF
     C                     MOVEL'CW'      P8SNST           Pricing UOM USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'LW'      P8SNST           Pricing UOM USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Commod Group U/M  XF - STR Order Management Sys  * 
     C                     CALL 'PDUVXFR'              90  Rtv Commod Grou
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P6EUCD    WQ0052  7        BOH Commodity P
     C           P8SNST    PARM *BLANK    WQ0053  2        Pricing UOM USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDUVXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Do not print first three lines if No Sort.
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.CMP Sort Basis is None
      *   |- c2    : PAR.Pricing UOM USR is Carcass Hundred Weight
      *   |- c3    : PAR.Status 3 is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7DMST    IFEQ *BLANK                     *IF
     C           P8SNST    IFEQ 'CW'                       *IF
     C           P8SVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WUP4ST           Status 1
     C                     END                             *FI
      * 5/29/03 New for sort loss print
      * CASE: PAR.Status 3 is Yes
     C           P8SVST    IFEQ 'Y'                        *IF
      * CASE: CUR.TH Hot Wgt DRV NE WRK.Zero USR
     C           $HOBNB    IFNE WUE9NB                     *IF
      * Var f/ Top Wgt /Carc CWT
      * CUR.TH CM Srt Dsc Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.TH Hot Wgt DRV
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HOBNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAYVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD9PR           TH CM Srt Dsc C
     C                     END                             *FI
     C                     END                             *FI
      * Live Vs. Meat Price
      * CASE:
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Pricing UOM USR is Carcass Hundred Weight
      *   |- c2    : DB1.TH Payment Type is Carcass Merit
      *   |- c3    : PAR.Print Carcass Analysis Us is Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P8SNST    IFEQ 'CW'                       *IF
     C                     MOVEL'0'       Y0CX02  1
     C           A1J9ST    IFEQ 'C'                        *IF
     C           P3MVST    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CW:  Switch Live & Carcass Weight & Average Weight.
      * CASE: WRK.#Sequence Block is NULL
     C           WUJ0ST    IFEQ *BLANK                     *IF
     C                     MOVEL@CN,005   $HJPTX           Text 10 1 USR
     C                     MOVEL@CN,006   $HJQTX           Text 10 2 USR
     C                     MOVEL@CN,007   $HOGTX           Text 10 3 USR
     C                     Z-ADD$HN7NB    WUN7NB           TH Live Wgt DRV
     C                     Z-ADD$HF7NB    WUF7NB           TH Avg Live Wgt
     C                     Z-ADD$HOBNB    $HN7NB           TH Live Wgt DRV
     C                     Z-ADD$HHDNB    $HF7NB           TH Avg Live Wgt
     C                     Z-ADDWUN7NB    $HOBNB           TH Hot Wgt DRV
     C                     Z-ADDWUF7NB    $HHDNB           TH Avg Hot Wgt
     C                     MOVEL@CN,008   $HOETX           Text 25 1 USR
     C                     MOVEL@CN,009   $HOFTX           Text 25 2 USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * LW:  Switch Live & Carcass Weight & Average Weight.
      * CASE: WRK.#Sequence Block is NULL
     C           WUJ0ST    IFEQ *BLANK                     *IF
     C                     MOVEL@CN,010   $HJPTX           Text 10 1 USR
     C                     MOVEL@CN,011   $HJQTX           Text 10 2 USR
     C                     MOVEL@CN,012   $HOGTX           Text 10 3 USR
     C                     MOVEL@CN,013   $HOETX           Text 25 1 USR
     C                     MOVEL@CN,014   $HOFTX           Text 25 2 USR
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    $HKPTX           Text 5
     C                     MOVEL'Adj.'    $HKPTX           Text 5
     C                     MOVELA1R6ST    WUR6ST           TH Paid 2 Week
      * The following values are calculated based on the Adj Live Wgt.
      * CASE: CUR.Th Live Adj Wgt Drv NE WRK.Zero USR
     C           $HPKNB    IFNE WUE9NB                     *IF
      * Base Market /Live CWT
      * CUR.TH CM Bse Mkt Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Base Mkt Price Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HANPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD6PR           TH CM Bse Mkt L
      * Var f/ Top Wgt /Live CWT
      * CUR.TH CM Srt Dsc Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAYVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HD8PR           TH CM Srt Dsc L
      * Yield Gain/Loss /Live CWT
      * CUR.TH CM Yld G/L Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Yield Gain/Loss Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAWVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEAPR           TH CM Yld G/L L
      * Carcass Value /Live CWT
      * CUR.TH CM Crc Val Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Base Carcass Value
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAOPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HECPR           TH CM Crc Val L
      * Lean Prem/Ded /Live CWT
      * CUR.TH CM Lean Prem Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM LN AddOn/Deduct Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAXVA    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEEPR           TH CM Lean Prem
      * Gross Value /Live CWT
      * CUR.TH CM Gross Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.TH CM Carcass Gross Amt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Th Live Adj Wgt Drv
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           $HPKNB    DIV  100       W0WB01    H      *Synon (15,5) w
     C           $HAPPR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HEGPR           TH CM Gross Liv
     C                     END                             *FI
      * Producer Historical Average Add Reason.
      * CASE: DB1.TH PHA Add Reason is *None
     C           A1USST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $HI1TX           Condition Name
     C                     ELSE
      * CASE: *OTHERWISE
      * CUR.Condition Name 1 USR = Condition name of DB1.TH PHA Add Reaso
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1225368   Y2LSNO  70       List number
     C                     PARM A1USST    W0INVL 25        TH PHA Add Reas
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HI1TX    PARM           W0CNNM 25        Condition Name
      *
      * CASE: DB1.TH PHA Add Type is Entire Tattoo
     C           A1OQET    IFEQ 'E'                        *IF
     C                     Z-ADD*ZERO     $HAWPC           TH Actual Yield
     C                     Z-ADDA1HHPC    $HCWPC           TH Adj Actual Y
     C                     END                             *FI
      * CASE: LCL.CMP Grading Type is Sort Discount Factor
     C           YL0007    IFEQ 'S'                        *IF
     C                     Z-ADD$HOMVJ    $HS9PR           TH PHA Lean Prm
     C                     MOVEL'%'       $HODTX           Text Usr 1
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $HODTX           Text Usr 1
     C                     END                             *FI
     C                     END                             *FI
     C                     MULT -1        $HTBPR           TH Excluded Gro
      * CASE: LCL.CMP Grading Type is Sort Discount Factor
     C           YL0007    IFEQ 'S'                        *IF
     C                     MOVEL@CN,015   $HP3TX           Desc 15 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,016   $HP3TX           Desc 15 USR
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Pricing Date to display format
      * Convert date
     C           1000000   ADD  $HA6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHA6DT
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $HB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHB0DT
      * Convert BOH Buy Order Date to display format
      * Convert date
     C           1000000   ADD  $HARDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHARDT
      * Convert PY As of Kill Date to display format
      * Convert date
     C           1000000   ADD  $HCHDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHCHDT
     C                     MOVEL'0'       *IN79
     C           P3MVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUP4ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           $HAWPC    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           WUP5ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           WUSVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           P3MVST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
     C                     MOVEL'0'       *IN73
     C           $HI1TX    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
     C                     MOVEL'0'       *IN72
     C           $HE1ST    IFEQ *BLANK                     *IF
     C           $HE1ST    OREQ 'N'
     C                     MOVEL'1'       *IN72
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print BOH Buy Order Number of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print BOL Load Number of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print TH Tattoo Number of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Tattoo Number format
      * CUR = PAR By name
     C                     Z-ADD$HARDT    $IARDT           BOH Buy Order D
     C                     Z-ADD$HA6DT    $IAWDT           TH Purchase Dat
     C                     Z-ADD$HHMNB    $IHMNB           BOH Company Num
     C                     MOVEL$HABCD    $IABCD           PD Producer Cod
     C                     Z-ADD$HCVNB    $ICVNB           TH Tattoo Numbe
     C                     Z-ADD$HBNNB    $IBNNB           BOH Buy Order N
     C                     Z-ADD$HBONB    $IBONB           BOL Load Number
     C                     Z-ADD$HOXNB    $IOXNB           TH HPS Movement
     C                     MOVEL$HBICD    $IBICD           TH Group Refere
     C                     MOVEL$HAGTX    $IAGTX           PD Name
      * CASE: PAR.CMP Grading Type is Meat Value
     C           YL0007    IFEQ 'M'                        *IF
     C                     MOVEL@CN,017   $ISUTX           Text 17 USR
     C                     MOVEL@CN,018   $IUITX           Text 25 #2 Usr
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,019   $ISUTX           Text 17 USR
     C                     MOVEL@CN,020   $IUITX           Text 25 #2 Usr
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Purchase Date to display format
      * Convert date
     C           1000000   ADD  $IAWDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VIAWDT
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $IB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VIB0DT
     C                     MOVEL'0'       *IN79
     C           P3MVST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WN0061    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WN0062    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print format
     C                     WRITE$IKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0BP03
     C                     END                             FI
      * Print CD Carcass/Hot Weight of Prt Carcass Detail,Fx PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP04    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$JKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0BP04
     C                     END                             FI
      * Print Detail line. of Prt Carcass Detail,Fx PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVEL*BLANK    WUNCCD           Summary Only Us
     C                     MOVEL'1'       WUNCCD           Summary Only Us
      * PK0166 -- commented out. The selection is done in the Initialize
      * CASE: PAR.Status 2 is No
     C           WN0062    IFEQ 'N'                        *IF
     C                     MOVEL'N'       WUABST           @Status (Yes/No
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WUABST           @Status (Yes/No
     C                     END                             *FI
     C                     Z-ADD*ZERO     $KD1PC           CD Lean Percent
      * CD Lean Percent DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $KAUPC    MULT 1         $KD1PC    H      CD Lean Percent
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$KAUPC    $KD1PC           CD Lean Percent
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $KE5PR           Variance f/TopW
      * Variance f/TopWgt/CWT DRV
     C           $KEYNB    SUB  $KB4PR    $KE5PR           Variance f/TopW
     C                     Z-ADD*ZERO     $KE4PR           Variance from t
      * Variance from top wgt DRV
     C           $KAVPR    SUB  $KB1PR    $KE4PR           Variance from t
      * 11/28/2006 PKD/RMC Do not calculate using the Gross Before Sort.
      * **** 5/29/03 New for sort loss print
      * CASE: PAR.Status 3 is Yes
     C           P8SVST    IFEQ 'Y'                        *IF
     C                     Z-ADDB1PEIR    $KE4PR           Variance from t
      * Comp:sort loss/cwt
      * CUR.Variance f/TopWgt/CWT DRV =
      *    *COMPUTE (x1 /(x2/x3))
      * x1    : DB1.CD MPR Sort Loss
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.CD Carcass/Hot Weight
      * /     : PGM.*Synon (15,5) work field *
      * x3    : CON.100
     C           B1EWNB    DIV  100       W0WB01           *Synon (15,5) w
     C           B1PEIR    DIV  W0WB01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KE5PR           Variance f/TopW
     C                     END                             *FI
      * ****
      * Adjust/Add Type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CUR.CD Record Add/Del Sts is Add
      *   |- c2    : CUR.CD Adjust/Add Type is None
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $KINST    IFEQ 'A'                        *IF
     C           $KUTST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'AVG'     $KUTST           CD Adjust/Add T
     C                     END                             *FI
      * CASE: PAR.CMP Grading Type is Meat Value
     C           YL0007    IFEQ 'M'                        *IF
     C                     Z-ADD$KORUE    $KAVPR           CD Crc Value $
      * CUR.CD Crc Value Per CWT
      * CUR.CD Crc Value Per CWT =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.CD Fixed Cost Factor Amt
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.CD Carcass/Hot Weight
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $KORUE    DIV  $KEWNB    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $KEYNB           CD Crc Value Pe
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert CD Adjust/Add Type to external value
     C                     Z-ADD1225355   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL$KUTST    Y2INVL           CD Adjust/Add T
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    VKUTST           CD Adjust/Add T
      *
     C                     MOVEL'0'       *IN79
     C           WN0061    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUABST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$KCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$KDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Print First Page Format of Prt Excluded Carc Dta PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0CL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Excluded Carc Dta PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP00
     C                     END                             FI
      * Print BOH Buy Order Number of Prt Excluded Carc Dta PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP01
     C                     END                             FI
      * Print BOL Load Number of Prt Excluded Carc Dta PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP02
     C                     END                             FI
      * Print TH Tattoo Number of Prt Excluded Carc Dta PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP03
     C                     END                             FI
      * Print Detail line. of Prt Excluded Carc Dta PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0CCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CPDT    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$MDTLRCD
      * Reset format print flag
     C                     MOVE *BLANK    W0CPDT
     C                     END                             FI
      * Print First Page Format of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0DL1P
     C                     END                             FI
      * Print BOH Company Number of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP00
     C                     END                             FI
      * Print BOH Buy Order Number of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP01
     C                     END                             FI
      * Print BOL Load Number of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP02
     C                     END                             FI
      * Print TH Tattoo Number of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP03
     C                     END                             FI
      * Print TH Kill Date of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP04
     C                     END                             FI
      * Print THC Comment Type of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP05    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP05
     C                     END                             FI
      * Print THC Comment Line of Prt TH Comments       PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP06    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP06    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP06
     C                     END                             FI
      * Print Detail line. of Prt TH Comments       PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0DCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DPDT    ANDEQ'P'
      * Print column headings if required
     C           W0DCDT    IFEQ 'Y'
     C                     WRITE$OCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0DCDT
     C                     END                             FI
      * Print format
     C                     WRITE$ODTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0DPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0APDT    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Crc Sum & Dtl LMKTPF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Crc Sum & Dtl LMKTPF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Prt Crc Sum & Dtl LMKTPF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Prt Crc Sum & Dtl LMKTPF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Crc Sum & Dtl LMKTPF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Crc Sum & Dtl LMKTPF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD79        W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Carcass Detail,Fx PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Carcass Detail,Fx PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Prt Carcass Detail,Fx PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Prt Carcass Detail,Fx PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Carcass Detail,Fx PO
     C           W0BP03    IFEQ 'Y'
     C                     ADD  10        W0FSUM
     C                     END                             FI
      *
      * * CD Carcass/Hot Weight of Prt Carcass Detail,Fx PO
     C           W0BP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Carcass Detail,Fx PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Excluded Carc Dta PO
     C           W0CP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Excluded Carc Dta PO
     C           W0CP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Prt Excluded Carc Dta PO
     C           W0CP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Prt Excluded Carc Dta PO
     C           W0CP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Excluded Carc Dta PO
     C           W0CP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Excluded Carc Dta PO
     C           W0CPDT    IFEQ 'Y'
     C                     Z-ADD0         W0DTLN
     C           W0CCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt TH Comments       PO
     C           W0DP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt TH Comments       PO
     C           W0DP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Prt TH Comments       PO
     C           W0DP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Prt TH Comments       PO
     C           W0DP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt TH Comments       PO
     C           W0DP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Prt TH Comments       PO
     C           W0DP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * THC Comment Type of Prt TH Comments       PO
     C           W0DP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * THC Comment Line of Prt TH Comments       PO
     C           W0DP06    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt TH Comments       PO
     C           W0DPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0DCDT    IFEQ 'Y'
     C                     Z-ADD2         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Lean Hdg/Rng      RT - Crc Sum Lean Dist Range  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CXHONB    WQSA01           CC Company Numb
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           CC Company Numb
      * Setup key
     C                     Z-ADDP1HMNB    WQSA01           CC Company Numb
      * Establish starting position
     C           KRSSA     SETLL@CXREOL                    *
     C           KRSSA     READE@CXREOL                  90*
      * Data record not found
     C   90                MOVEL'PRK0420' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.CLDR Sequence is = 1
     C           CXMCNB    IFEQ 1                          *IF
     C                     MOVELCXDTCD    P2DVCD           Lean Rng Hdg 1
     C                     Z-ADDCXBWPC    P2CXPC           Lean Rng Min 1
     C                     Z-ADDCXBXPC    P2CYPC           Lean Rng Max 1
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 2
     C           CXMCNB    IFEQ 2                          *IF
     C                     MOVELCXDTCD    P2DWCD           Lean Rng Hdg 2
     C                     Z-ADDCXBWPC    P2CZPC           Lean Rng Min 2
     C                     Z-ADDCXBXPC    P2C0PC           Lean Rng Max 2
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 3
     C           CXMCNB    IFEQ 3                          *IF
     C                     MOVELCXDTCD    P2DXCD           Lean Rng Hdg 3
     C                     Z-ADDCXBWPC    P2C1PC           Lean Rng Min 3
     C                     Z-ADDCXBXPC    P2C2PC           Lean Rng Max 3
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 4
     C           CXMCNB    IFEQ 4                          *IF
     C                     MOVELCXDTCD    P2DYCD           Lean Rng Hdg 4
     C                     Z-ADDCXBWPC    P2C3PC           Lean Rng Min 4
     C                     Z-ADDCXBXPC    P2C4PC           Lean Rng Max 4
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 5
     C           CXMCNB    IFEQ 5                          *IF
     C                     MOVELCXDTCD    P2DZCD           Lean Rng Hdg 5
     C                     Z-ADDCXBWPC    P2C5PC           Lean Rng Min 5
     C                     Z-ADDCXBXPC    P2C6PC           Lean Rng Max 5
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 6
     C           CXMCNB    IFEQ 6                          *IF
     C                     MOVELCXDTCD    P2D0CD           Lean Rng Hdg 6
     C                     Z-ADDCXBWPC    P2C7PC           Lean Rng Min 6
     C                     Z-ADDCXBXPC    P2C8PC           Lean Rng Max 6
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 7
     C           CXMCNB    IFEQ 7                          *IF
     C                     MOVELCXDTCD    P2D1CD           Lean Rng Hdg 7
     C                     Z-ADDCXBWPC    P2C9PC           Lean Rng Min 7
     C                     Z-ADDCXBXPC    P2DAPC           Lean Rng Max 7
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 8
     C           CXMCNB    IFEQ 8                          *IF
     C                     MOVELCXDTCD    P2D2CD           Lean Rng Hdg 8
     C                     Z-ADDCXBWPC    P2DBPC           Lean Rng Min 8
     C                     Z-ADDCXBXPC    P2DCPC           Lean Rng Max 8
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@CXREOL                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Carcass Sum Info  RT - Buy Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           AWHMNB           BOH Company Num
     C                     KFLD           AWBNNB           BOH Buy Order N
      * Setup key
     C                     Z-ADD$HHMNB    AWHMNB           BOH Company Num
     C                     Z-ADD$HBNNB    AWBNNB           BOH Buy Order N
      * Establish starting position
     C           KRSSB     CHAIN@AWCPBI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0049' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HARDT           BOH Buy Order D
     C                     MOVEL*BLANK    P6B3ST           BOH Quote Price
     C                     MOVEL*BLANK    P6ETCD           BOH Commodity M
     C                     MOVEL*BLANK    P6EUCD           BOH Commodity P
     C                     MOVEL*BLANK    P6AMCD           CMP Program Cod
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAWARDT    $HARDT           BOH Buy Order D
     C                     MOVELAWB3ST    P6B3ST           BOH Quote Price
     C                     MOVELAWETCD    P6ETCD           BOH Commodity M
     C                     MOVELAWEUCD    P6EUCD           BOH Commodity P
     C                     MOVELAWAMCD    P6AMCD           CMP Program Cod
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0006  72       TH CA Base Mkt
     C                     Z-ADD*ZERO     WN0007  72       TH CA Sort Disc
     C                     Z-ADD*ZERO     WN0008  72       TH CA Yield Gai
     C                     Z-ADD*ZERO     WN0009  72       TH CA Base Carc
     C                     Z-ADD*ZERO     WN0010  72       TH CA Lean Prem
     C                     Z-ADD*ZERO     WN0011  72       TH CA Carcass G
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WUHBST           First Time Flag
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HB0DT           TH Kill Date
     C                     Z-ADD*ZERO     $HCXNB           TH Dead On Arri
     C                     Z-ADD*ZERO     $HCWNB           TH Head Receive
     C                     Z-ADD*ZERO     $HFCNB           TH Yard Deads
     C                     Z-ADD*ZERO     $HFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $HFENB           TH Head Killed
     C                     Z-ADD*ZERO     $HHENB           TH Head Adds
     C                     Z-ADD*ZERO     $HCYNB           TH Live Wgt
     C                     Z-ADD*ZERO     $HLRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     $HE0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     $HANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     $HAYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     $HAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     $HAOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     $HAXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     $HAPPR           TH CM Carcass G
     C                     Z-ADD*ZERO     $HASPR           TH Deduction Am
     C                     Z-ADD*ZERO     $HATPR           TH Carcass Net
     C                     Z-ADD*ZERO     $HA5VA           TH Additions Am
     C                     Z-ADD*ZERO     $HCBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $HCCPR           Th Payment Net
     C                     Z-ADD*ZERO     $HA2PR           TH Fixed Cost A
     C                     Z-ADD*ZERO     $HJ9NB           TH Head Exclude
     C                     Z-ADD*ZERO     $HIORP           TH Head Adjuste
     C                     Z-ADD*ZERO     $HOWEO           TH PHA Head Add
     C                     Z-ADD*ZERO     $HTBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     YL0002           TH Excluded Car
     C                     Z-ADD*ZERO     YL0003           TH Excluded Pre
     C                     Z-ADD*ZERO     YL0004           TH Meat Value F
     C                     Z-ADD*ZERO     YL0005           TH Head LFT
     C                     Z-ADD*ZERO     YL0006           TH Head EUT/KOA
     C                     Z-ADD*ZERO     WN0001           Lean % * Wgt US
     C                     Z-ADD*ZERO     WN0002           Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0003           Loin-Eye * Wgt
     C                     Z-ADD*ZERO     WN0006           TH CA Base Mkt
     C                     Z-ADD*ZERO     WN0007           TH CA Sort Disc
     C                     Z-ADD*ZERO     WN0008           TH CA Yield Gai
     C                     Z-ADD*ZERO     WN0009           TH CA Base Carc
     C                     Z-ADD*ZERO     WN0010           TH CA Lean Prem
     C                     Z-ADD*ZERO     WN0011           TH CA Carcass G
     C                     Z-ADD*ZERO     WN0004           Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0005           Loin-Eye * Wgt
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQSC01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQSC02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQSC03           BOL Load Number
     C           *LIKE     DEFN A1CVNB    WQSC04           TH Tattoo Numbe
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           BOH Company Num
     C                     KFLD           WQSC02           BOH Buy Order N
     C                     KFLD           WQSC03           BOL Load Number
     C                     KFLD           WQSC04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQSC01           BOH Company Num
     C                     Z-ADD$HBNNB    WQSC02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSC03           BOL Load Number
     C                     Z-ADD$HCVNB    WQSC04           TH Tattoo Numbe
      * Establish starting position
     C           KRSSC     SETLL@A1CPC4                    *
     C           KRSSC     READE@A1CPC4                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * 061208 slm E00144 LFT and eut/koa
      * 050108 slm get TH Fixed Cost Amount
      *                TH Meat Value Factor Amt
      * First Kill Date
      * CASE: WRK.First Time Flag Usr is Yes
     C           WUHBST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       WUHBST           First Time Flag
     C                     END                             *FI
     C                     Z-ADDA1B0DT    $HB0DT           TH Kill Date
     C                     ADD  A1CXNB    $HCXNB           TH Dead On Arri
     C                     ADD  A1ECDT    YL0005           TH Head LFT
     C                     ADD  A1EDDT    YL0006           TH Head EUT/KOA
     C                     ADD  A1CWNB    $HCWNB           TH Head Receive
     C                     ADD  A1FCNB    $HFCNB           TH Yard Deads
     C                     ADD  A1FDNB    $HFDNB           TH Head Condemn
     C                     ADD  A1FENB    $HFENB           TH Head Killed
     C                     ADD  A1HENB    $HHENB           TH Head Adds
     C                     ADD  A1CYNB    $HCYNB           TH Live Wgt
     C                     ADD  A1LRNB    $HLRNB           TH Adj Live Wgt
     C                     ADD  A1E0NB    $HE0NB           TH Hot Wgt
     C                     ADD  A1ANPR    $HANPR           TH CM Base Mkt
      * 5/29/03 new for sort loss print
      * CASE: PAR.Status 3 is Yes
     C           P8SVST    IFEQ 'Y'                        *IF
     C                     ADD  A1NCHF    $HAYVA           TH CM Sort Disc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  A1AYVA    $HAYVA           TH CM Sort Disc
     C                     END                             *FI
     C                     ADD  A1AWVA    $HAWVA           TH CM Yield Gai
      * CASE: PAR.CMP Grading Type is Meat Value
     C           YL0007    IFEQ 'M'                        *IF
     C                     ADD  A1A2PR    $HAOPR           TH CM Base Carc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  A1AOPR    $HAOPR           TH CM Base Carc
     C                     END                             *FI
     C                     ADD  A1AXVA    $HAXVA           TH CM LN AddOn/
     C                     ADD  A1APPR    $HAPPR           TH CM Carcass G
     C                     ADD  A1ATPR    $HATPR           TH Carcass Net
     C                     ADD  A1CBPR    $HCBPR           TH Payment Gros
     C                     ADD  A1CCPR    $HCCPR           Th Payment Net
      * Lean % * Wgt USR
      * PAR.Lean % * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Lean % * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Lean Percent
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F4NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0001    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0001           Lean % * Wgt US
      * Backfat * Wgt USR
      * PAR.Backfat * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Backfat * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Backfat
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F2NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0002    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0002           Backfat * Wgt U
      * Loin-Eye * Wgt USR
      * PAR.Loin-Eye * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Loin-Eye * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Loin Eye Depth
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F3NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0003    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0003           Loin-Eye * Wgt
      * Backfat2 * Wgt USR
      * PAR.Backfat * Wgt USR 2 =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Backfat * Wgt USR 2
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Backfat - 2 Dec
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1MCNF    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0004    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0004           Backfat * Wgt U
      * Loin-Eye2 * Wgt USR
      * PAR.Loin-Eye * Wgt USR 2 =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Loin-Eye * Wgt USR 2
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Loin Eye - 2 dec
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1MVNF    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0005    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0005           Loin-Eye * Wgt
     C                     ADD  A1ASPR    $HASPR           TH Deduction Am
     C                     ADD  A1A5VA    $HA5VA           TH Additions Am
      * Analysis to Payments
      * CASE: PAR.Print Carcass Analysis Us is Yes
     C           P3MVST    IFEQ 'Y'                        *IF
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header EXT  * 
     C                     EXSR SDRVGN
     C                     ADD  WUI6PR    WN0006           TH CA Base Mkt
     C                     ADD  WUI7PR    WN0007           TH CA Sort Disc
     C                     ADD  WUI8PR    WN0008           TH CA Yield Gai
     C                     ADD  WUI9PR    WN0009           TH CA Base Carc
     C                     ADD  WUJAPR    WN0010           TH CA Lean Prem
     C                     ADD  WUJCPR    WN0011           TH CA Carcass G
     C                     END                             *FI
      * PK0166 - New fields
     C                     ADD  A1J9NB    $HJ9NB           TH Head Exclude
     C                     ADD  A1TBPR    $HTBPR           TH Excluded Gro
     C                     ADD  A1KROT    YL0002           TH Excluded Car
     C                     ADD  A1OTJG    YL0003           TH Excluded Pre
     C                     ADD  A1IORP    $HIORP           TH Head Adjuste
     C                     ADD  A1OWEO    $HOWEO           TH PHA Head Add
      * 050108 slm get TH Fixed Cost Amount
     C                     ADD  A1A2PR    $HA2PR           TH Fixed Cost A
     C                     ADD  A1KFOR    YL0004           TH Meat Value F
     C           KRSSC     READE@A1CPC4                  90*
     C                     ENDDO
      * USER: Exit processing
      * Analysis to Payments
      * CASE: PAR.Print Carcass Analysis Us is Yes
     C           P3MVST    IFEQ 'Y'                        *IF
     C                     Z-ADDWN0006    $HANPR           TH CM Base Mkt
     C                     Z-ADDWN0007    $HAYVA           TH CM Sort Disc
     C                     Z-ADDWN0008    $HAWVA           TH CM Yield Gai
     C                     Z-ADDWN0009    $HAOPR           TH CM Base Carc
     C                     Z-ADDWN0010    $HAXVA           TH CM LN AddOn/
     C                     Z-ADDWN0011    $HAPPR           TH CM Carcass G
     C                     END                             *FI
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header EXT  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DNHMNB           BOH Company Num
     C                     KFLD           DNBNNB           BOH Buy Order N
     C                     KFLD           DNBONB           BOL Load Number
     C                     KFLD           DNCVNB           TH Tattoo Numbe
     C                     KFLD           DNB0DT           TH Kill Date
      * Setup key
     C                     Z-ADDA1HMNB    DNHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    DNBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    DNBONB           BOL Load Number
     C                     Z-ADDA1CVNB    DNCVNB           TH Tattoo Numbe
     C                     Z-ADDA1B0DT    DNB0DT           TH Kill Date
      * Establish starting position
     C           KRSSD     CHAIN@DNCPUY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0637' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUI6PR           TH CA Base Mkt
     C                     Z-ADD*ZERO     WUI7PR           TH CA Sort Disc
     C                     Z-ADD*ZERO     WUI8PR           TH CA Yield Gai
     C                     Z-ADD*ZERO     WUI9PR           TH CA Base Carc
     C                     Z-ADD*ZERO     WUJAPR           TH CA Lean Prem
     C                     Z-ADD*ZERO     WUJCPR           TH CA Carcass G
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDNI6PR    WUI6PR           TH CA Base Mkt
     C                     Z-ADDDNI7PR    WUI7PR           TH CA Sort Disc
     C                     Z-ADDDNI8PR    WUI8PR           TH CA Yield Gai
     C                     Z-ADDDNI9PR    WUI9PR           TH CA Base Carc
     C                     Z-ADDDNJAPR    WUJAPR           TH CA Lean Prem
     C                     Z-ADDDNJCPR    WUJCPR           TH CA Carcass G
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$HABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSE     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $HAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Tattoo Lean Dist  RT - Crc Sum Tattoo Lean Dist  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HM2NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM3NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM4NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM5NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM6NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM7NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM8NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM9NB           Lean Rng Tto Cn
      * Declare restrictor key work fields
     C           *LIKE     DEFN CYHMNB    WQSF01           BOH Company Num
     C           *LIKE     DEFN CYBNNB    WQSF02           BOH Buy Order N
     C           *LIKE     DEFN CYBONB    WQSF03           BOL Load Number
     C           *LIKE     DEFN CYCVNB    WQSF04           TH Tattoo Numbe
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           BOH Company Num
     C                     KFLD           WQSF02           BOH Buy Order N
     C                     KFLD           WQSF03           BOL Load Number
     C                     KFLD           WQSF04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQSF01           BOH Company Num
     C                     Z-ADD$HBNNB    WQSF02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSF03           BOL Load Number
     C                     Z-ADD$HCVNB    WQSF04           TH Tattoo Numbe
      * Establish starting position
     C           KRSSF     SETLL@CYCPOY                    *
     C           KRSSF     READE@CYCPOY                  90*
      * Data record not found
     C   90                MOVEL'PRK0422' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: Min 1 <= % < Max 1
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 1 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 1 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2CXPC                     *IF
     C           CYBYPC    IFLT P2CYPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM2NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 2 <= % < Max 2
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 2 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 2 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2CZPC                     *IF
     C           CYBYPC    IFLT P2C0PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM3NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 3 <= % < Max 3
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 3 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 3 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C1PC                     *IF
     C           CYBYPC    IFLT P2C2PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM4NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 4 <= % < Max 4
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 4 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 4 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C3PC                     *IF
     C           CYBYPC    IFLT P2C4PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM5NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 5 <= % < Max 5
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 5 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 5 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C5PC                     *IF
     C           CYBYPC    IFLT P2C6PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM6NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 6 <= % < Max 6
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 6 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 6 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C7PC                     *IF
     C           CYBYPC    IFLT P2C8PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM7NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 7 <= % < Max 7
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 7 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 7 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C9PC                     *IF
     C           CYBYPC    IFLT P2DAPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM8NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 8 <= % < Max 8
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 8 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 8 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2DBPC                     *IF
     C           CYBYPC    IFLT P2DCPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM9NB           Lean Rng Tto Cn
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@CYCPOY                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Prd Lean Dist     RT - Crc Sum Prd Lean Dst YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HNANB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNBNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNCNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNDNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNENB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNFNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNGNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNHNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HCHDT           Date USR
     C                     MOVEL'Y'       WUHBST           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN C0HONB    WQSG01           CC Company Numb
     C           *LIKE     DEFN C0ABCD    WQSG02           PD Producer Cod
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           CC Company Numb
     C                     KFLD           WQSG02           PD Producer Cod
     C                     KFLD           C0CHDT           PY As of Kill D
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           CC Company Numb
     C                     KFLD           WQSG02           PD Producer Cod
      * Setup key
     C                     Z-ADD$HHMNB    WQSG01           CC Company Numb
     C                     MOVEL$HABCD    WQSG02           PD Producer Cod
     C                     Z-ADDA1B0DT    C0CHDT           PY As of Kill D
      * Establish starting position
     C           KPSSG     SETLL@C0CPO9                    *
     C           KRSSG     READE@C0CPO9                  90*
      * Data record not found
     C   90                MOVEL'PRK0426' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.First Time Flag Usr is Yes
     C           WUHBST    IFEQ 'Y'                        *IF
     C                     Z-ADDC0CHDT    WUCHDT           PY As of Kill D
     C                     Z-ADDC0CHDT    $HCHDT           Date USR
     C                     MOVEL'N'       WUHBST           First Time Flag
     C                     END                             *FI
      * CASE: DB1.PY Kill Date NE WRK.PY Kill Date
     C           C0CHDT    IFNE WUCHDT                     *IF
     C                     GOTO SGEXIT                     *QUIT
     C                     END                             *FI
      * Accumulate Head Killed
      * CASE: Min 1 <= % < Max 1
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 1 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 1 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2CXPC                     *IF
     C           C0BZPC    IFLT P2CYPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNANB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 2 <= % < Max 2
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 2 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 2 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2CZPC                     *IF
     C           C0BZPC    IFLT P2C0PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNBNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 3 <= % < Max 3
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 3 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 3 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C1PC                     *IF
     C           C0BZPC    IFLT P2C2PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNCNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 4 <= % < Max 4
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 4 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 4 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C3PC                     *IF
     C           C0BZPC    IFLT P2C4PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNDNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 5 <= % < Max 5
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 5 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 5 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C5PC                     *IF
     C           C0BZPC    IFLT P2C6PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNENB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 6 <= % < Max 6
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 6 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 6 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C7PC                     *IF
     C           C0BZPC    IFLT P2C8PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNFNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 7 <= % < Max 7
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 7 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 7 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C9PC                     *IF
     C           C0BZPC    IFLT P2DAPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNGNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 8 <= % < Max 8
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 8 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 8 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2DBPC                     *IF
     C           C0BZPC    IFLT P2DCPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNHNB           Lean Rng Prd Cn
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSG     READE@C0CPO9                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Head Killed       RT - Crc Sum Prd          YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CZHONB    WQSH01           CC Company Numb
     C           *LIKE     DEFN CZABCD    WQSH02           PD Producer Cod
      * Define keylist
     C           KPSSH     KLIST
     C                     KFLD           WQSH01           CC Company Numb
     C                     KFLD           WQSH02           PD Producer Cod
     C                     KFLD           CZCHDT           PY As of Kill D
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           CC Company Numb
     C                     KFLD           WQSH02           PD Producer Cod
      * Setup key
     C                     Z-ADD$HHMNB    WQSH01           CC Company Numb
     C                     MOVEL$HABCD    WQSH02           PD Producer Cod
     C                     Z-ADDA1B0DT    CZCHDT           PY As of Kill D
      * Establish starting position
     C           KPSSH     SETLL@CZCPP4                    *
     C           KRSSH     READE@CZCPP4                  90*
      * Data record not found
     C   90                MOVEL'PRK0424' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDCZMFNB    P8MFNB           PY Head Killed
     C                     GOTO SHEXIT                     *QUIT
     C           KRSSH     READE@CZCPP4                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Prt Crc Sum WtLt WK   RT - Crc Sum Co Wgt Lot   WK  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DBHONB    WQSI01           CC Company Numb
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           CC Company Numb
     C                     KFLD           DBCPDT           CWLW Week Endin
     C                     KFLD           DBMHNB           CWL Min Adj Liv
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           CC Company Numb
      * Setup key
     C                     Z-ADD$HHMNB    WQSI01           CC Company Numb
     C                     Z-ADDWUB5DT    DBCPDT           CWLW Week Endin
     C                     Z-ADDWUU9NB    DBMHNB           CWL Min Adj Liv
      * Establish starting position
     C           KPSSI     SETLL@DBCPRL                    *
     C           KRSSI     READE@DBCPRL                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0506' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HMHNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HMINB           Live Wgt Max US
     C                     Z-ADD*ZERO     WN0012           CWLW Min Top Ad
     C                     Z-ADD*ZERO     WN0013           CWLW Max Top Ad
     C                     Z-ADD*ZERO     WN0014           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0029           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0030           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0036           CWLW Min Top So
     C                     Z-ADD*ZERO     WN0037           CWLW Max Top So
     C                     Z-ADD*ZERO     WN0038           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0039           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0040           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0041           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0042           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0043           CWLW Max Lower
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDBE2PC    WN0012           CWLW Min Top Ad
     C                     Z-ADDDBE3PC    WN0013           CWLW Max Top Ad
     C                     Z-ADDDBE4PC    WN0014           CWLW Min Mid Lo
     C                     Z-ADDDBE5PC    WN0015           CWLW Max Mid Lo
     C                     Z-ADDDBE6PC    WN0016           CWLW Min Mid Hi
     C                     Z-ADDDBE7PC    WN0017           CWLW Max Mid Hi
     C                     Z-ADDDBE8PC    WN0018           CWLW Min Lower
     C                     Z-ADDDBE9PC    WN0019           CWLW Max Lower
     C                     Z-ADDDBFAPC    WN0020           CWLW Min Top Le
     C                     Z-ADDDBFBPC    WN0021           CWLW Max Top Le
     C                     Z-ADDDBFCPC    WN0022           CWLW Min Mid Lo
     C                     Z-ADDDBFDPC    WN0023           CWLW Max Mid Lo
     C                     Z-ADDDBFEPC    WN0024           CWLW Min Mid Hi
     C                     Z-ADDDBFFPC    WN0025           CWLW Max Mid Hi
     C                     Z-ADDDBFGPC    WN0026           CWLW Min Lower
     C                     Z-ADDDBFHPC    WN0027           CWLW Max Lower
     C                     Z-ADDDBFPPR    WN0028           CWLW Min Top Le
     C                     Z-ADDDBFQPR    WN0029           CWLW Max Top Le
     C                     Z-ADDDBFRPR    WN0030           CWLW Min Mid Lo
     C                     Z-ADDDBFSPR    WN0031           CWLW Max Mid Lo
     C                     Z-ADDDBFTPR    WN0032           CWLW Min Mid Hi
     C                     Z-ADDDBFUPR    WN0033           CWLW Max Mid Hi
     C                     Z-ADDDBFVPR    WN0034           CWLW Min Lower
     C                     Z-ADDDBFWPR    WN0035           CWLW Max Lower
     C                     Z-ADDDBFXPR    WN0036           CWLW Min Top So
     C                     Z-ADDDBFYPR    WN0037           CWLW Max Top So
     C                     Z-ADDDBFZPR    WN0038           CWLW Min Mid Lo
     C                     Z-ADDDBF0PR    WN0039           CWLW Max Mid Lo
     C                     Z-ADDDBF1PR    WN0040           CWLW Min Mid Hi
     C                     Z-ADDDBF2PR    WN0041           CWLW Max Mid Hi
     C                     Z-ADDDBF3PR    WN0042           CWLW Min Lower
     C                     Z-ADDDBF4PR    WN0043           CWLW Max Lower
     C                     Z-ADDDBMHNB    $HMHNB           Live Wgt Min US
     C                     Z-ADDDBMINB    $HMINB           Live Wgt Max US
     C                     GOTO SIEXIT                     *QUIT
     C           KRSSI     READE@DBCPRL                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Prt Crc Sum Cndmns    RT - Loss Type  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0044  30       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0045  30       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0046  30       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0047  30       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0048  30       Loss Reason Cod
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG3TX           Reason 1 Desc U
     C                     MOVEL*BLANK    $HG9TX           Reason 2 Desc U
     C                     MOVEL*BLANK    $HHATX           Reason 3 Desc U
     C                     MOVEL*BLANK    $HHBTX           Reason 4 Desc U
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     Z-ADD*ZERO     $HMRNB           Reason Head 1 U
     C                     Z-ADD*ZERO     $HMSNB           Reason Head 2 U
     C                     Z-ADD*ZERO     $HMTNB           Reason Head 3 U
     C                     Z-ADD*ZERO     $HMUNB           Reason Head 4 U
     C                     Z-ADD*ZERO     $HMVNB           Reason Head 5 U
     C                     Z-ADD*ZERO     WN0044           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0045           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0046           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0047           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0048           Loss Reason Cod
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPEZST    WQSJ01           LT Loss Definit
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           LT Loss Definit
      * Setup key
     C                     MOVEL'C'       WQSJ01           LT Loss Definit
      * Establish starting position
     C           KRSSJ     SETLL@BPREPD                    *
     C           KRSSJ     READE@BPREPD                  90*
      * Data record not found
     C   90                MOVEL'PRK0109' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Crc Sum Cndmn Rsn RT - Loss Trans  * 
     C                     EXSR SKRVGN
      * Reason 1 Desc
      * CASE: PAR.Loss Reason Code 1 USR NE WRK.Zero USR
     C           WN0044    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SLRVGN
     C                     END                             *FI
      * Reason 2 Desc
      * CASE: PAR.Loss Reason Code 2 USR NE WRK.Zero USR
     C           WN0045    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SMRVGN
     C                     END                             *FI
      * Reason 3 Desc
      * CASE: PAR.Loss Reason Code 3 USR NE WRK.Zero USR
     C           WN0046    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SNRVGN
     C                     END                             *FI
      * Reason 4 Desc
      * CASE: PAR.Loss Reason Code 4 USR NE WRK.Zero USR
     C           WN0047    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SORVGN
     C                     END                             *FI
      * Reason 5 Desc
      * CASE: PAR.Loss Reason Code 1 USR NE WRK.Zero USR
     C           WN0044    IFNE WUE9NB                     *IF
      * CASE: PAR.Loss Reason Code 5 USR is = 99
     C           WN0048    IFEQ 99                         *IF
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     MOVEL'Other'   $HHCTX           Reason 5 Desc U
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SPRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSJ     READE@BPREPD                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Crc Sum Cndmn Rsn RT - Loss Trans  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BSBWCD    WQSK01           LT Type Code
     C           *LIKE     DEFN BSHMNB    WQSK02           BOH Company Num
     C           *LIKE     DEFN BSBNNB    WQSK03           BOH Buy Order N
     C           *LIKE     DEFN BSBONB    WQSK04           BOL Load Number
     C           *LIKE     DEFN BSCVNB    WQSK05           TH Tattoo Numbe
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           LT Type Code
     C                     KFLD           WQSK02           BOH Company Num
     C                     KFLD           WQSK03           BOH Buy Order N
     C                     KFLD           WQSK04           BOL Load Number
     C                     KFLD           WQSK05           TH Tattoo Numbe
      * Setup key
     C                     Z-ADDBPBWCD    WQSK01           LT Type Code
     C                     Z-ADD$HHMNB    WQSK02           BOH Company Num
     C                     Z-ADD$HBNNB    WQSK03           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSK04           BOL Load Number
     C                     Z-ADD$HCVNB    WQSK05           TH Tattoo Numbe
      * Establish starting position
     C           KRSSK     SETLL@BSCPPE                    *
     C           KRSSK     READE@BSCPPE                  90*
      * Data record not found
     C   90                MOVEL'PRK0115' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Set up Reason Codes
      * CASE: Reason 1
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 1 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 1 USR
      *   '-
     C           WN0044    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0044                     *OR
     C                     Z-ADDBSBYCD    WN0044           Loss Reason Cod
     C                     ADD  1         $HMRNB           Reason Head 1 U
     C                     ELSE
      * CASE: Reason 2
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 2 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 2 USR
      *   '-
     C           WN0045    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0045                     *OR
     C                     Z-ADDBSBYCD    WN0045           Loss Reason Cod
     C                     ADD  1         $HMSNB           Reason Head 2 U
     C                     ELSE
      * CASE: Reason 3
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 3 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 3 USR
      *   '-
     C           WN0046    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0046                     *OR
     C                     Z-ADDBSBYCD    WN0046           Loss Reason Cod
     C                     ADD  1         $HMTNB           Reason Head 3 U
     C                     ELSE
      * CASE: Reason 4
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 4 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 4 USR
      *   '-
     C           WN0047    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0047                     *OR
     C                     Z-ADDBSBYCD    WN0047           Loss Reason Cod
     C                     ADD  1         $HMUNB           Reason Head 4 U
     C                     ELSE
      * CASE: Reason 5
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 5 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 5 USR
      *   '-
     C           WN0048    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0048                     *OR
     C                     Z-ADDBSBYCD    WN0048           Loss Reason Cod
     C                     ADD  1         $HMVNB           Reason Head 5 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD99        WN0048           Loss Reason Cod
     C                     ADD  1         $HMVNB           Reason Head 5 U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSK     READE@BSCPPE                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Setup key
     C                     Z-ADDWN0044    BRBYCD           LR Reason Code
      * Establish starting position
     C           KRSSL     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG3TX           LR Description
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HG3TX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Setup key
     C                     Z-ADDWN0045    BRBYCD           LR Reason Code
      * Establish starting position
     C           KRSSM     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG9TX           LR Description
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HG9TX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Setup key
     C                     Z-ADDWN0046    BRBYCD           LR Reason Code
      * Establish starting position
     C           KRSSN     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHATX           LR Description
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHATX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Setup key
     C                     Z-ADDWN0047    BRBYCD           LR Reason Code
      * Establish starting position
     C           KRSSO     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHBTX           LR Description
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHBTX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Setup key
     C                     Z-ADDWN0048    BRBYCD           LR Reason Code
      * Establish starting position
     C           KRSSP     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHCTX           LR Description
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHCTX           LR Description
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Prt Crc Sum Trim Dtl  RT - Loss Type  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0049  2        Trim Location 1
     C                     MOVEL*BLANK    WN0050  2        Trim Location 2
     C                     MOVEL*BLANK    WN0051  2        Trim Location 3
     C                     MOVEL*BLANK    WN0052  2        Trim Location 4
     C                     MOVEL*BLANK    WN0053  2        Trim Location 5
     C                     MOVEL*BLANK    WN0054  2        Trim Location 6
     C                     MOVEL*BLANK    WN0055  2        Trim Extent 1 U
     C                     MOVEL*BLANK    WN0056  2        Trim Extent 2 U
     C                     MOVEL*BLANK    WN0057  2        Trim Extent 3 U
     C                     MOVEL*BLANK    WN0058  2        Trim Extent 4 U
     C                     MOVEL*BLANK    WN0059  2        Trim Extent 5 U
     C                     MOVEL*BLANK    WN0060  2        Trim Extent 6 U
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    WUG4TX           Trim 1 Desc USR
     C                     MOVEL*BLANK    WUG5TX           Trim 2 Desc USR
     C                     MOVEL*BLANK    WUG6TX           Trim 3 Desc USR
     C                     MOVEL*BLANK    WUG7TX           Trim 4 Desc USR
     C                     MOVEL*BLANK    WUG8TX           Trim 5 Desc USR
     C                     MOVEL*BLANK    WUOZTX           Trim 6 Desc USR
     C                     Z-ADD*ZERO     $HMWNB           Trim Head 1 USR
     C                     Z-ADD*ZERO     $HMXNB           Trim Head 2 USR
     C                     Z-ADD*ZERO     $HMYNB           Trim Head 3 USR
     C                     Z-ADD*ZERO     $HMZNB           Trim Head 4 USR
     C                     Z-ADD*ZERO     $HM0NB           Trim Head 5 USR
     C                     Z-ADD*ZERO     $HTRHD           Trim Head 6 USR
     C                     Z-ADD*ZERO     $HH3NB           Weight Tot USR
     C                     MOVEL*BLANK    WN0049           Trim Location 1
     C                     MOVEL*BLANK    WN0050           Trim Location 2
     C                     MOVEL*BLANK    WN0051           Trim Location 3
     C                     MOVEL*BLANK    WN0052           Trim Location 4
     C                     MOVEL*BLANK    WN0053           Trim Location 5
     C                     MOVEL*BLANK    WN0054           Trim Location 6
     C                     MOVEL*BLANK    WN0055           Trim Extent 1 U
     C                     MOVEL*BLANK    WN0056           Trim Extent 2 U
     C                     MOVEL*BLANK    WN0057           Trim Extent 3 U
     C                     MOVEL*BLANK    WN0058           Trim Extent 4 U
     C                     MOVEL*BLANK    WN0059           Trim Extent 5 U
     C                     MOVEL*BLANK    WN0060           Trim Extent 6 U
     C                     MOVEL*BLANK    WUOOTX           Trim Extent 1 D
     C                     MOVEL*BLANK    WUOPTX           Trim Extent 2 D
     C                     MOVEL*BLANK    WUOQTX           Trim Extent 3 D
     C                     MOVEL*BLANK    WUOSTX           Trim Extent 5 D
     C                     MOVEL*BLANK    WUORTX           Trim Extent 4 D
     C                     MOVEL*BLANK    WUO0TX           Trim Extent 6 D
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPEZST    WQSQ01           LT Loss Definit
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           LT Loss Definit
      * Setup key
     C                     MOVEL'T'       WQSQ01           LT Loss Definit
      * Establish starting position
     C           KRSSQ     SETLL@BPREPD                    *
     C           KRSSQ     READE@BPREPD                  90*
      * Data record not found
     C   90                MOVEL'PRK0109' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Crc Sum Trim Dtl  RT - Loss Trans  * 
     C                     EXSR SRRVGN
      * PAR.Trim 1 Desc USR = Condition name of PAR.Trim Location 1 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0049    W0INVL 25        Trim Location 1
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUG4TX    PARM           W0CNNM 25        Trim 1 Desc USR
      *
      * PAR.Trim 2 Desc USR = Condition name of PAR.Trim Location 2 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0050    W0INVL 25        Trim Location 2
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUG5TX    PARM           W0CNNM 25        Trim 2 Desc USR
      *
      * PAR.Trim 3 Desc USR = Condition name of PAR.Trim Location 3 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0051    W0INVL 25        Trim Location 3
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUG6TX    PARM           W0CNNM 25        Trim 3 Desc USR
      *
      * PAR.Trim 4 Desc USR = Condition name of PAR.Trim Location 4 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0052    W0INVL 25        Trim Location 4
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUG7TX    PARM           W0CNNM 25        Trim 4 Desc USR
      *
      * PAR.Trim 5 Desc USR = Condition name of PAR.Trim Location 5 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0053    W0INVL 25        Trim Location 5
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUG8TX    PARM           W0CNNM 25        Trim 5 Desc USR
      *
      * PAR.Trim 6 Desc USR = Condition name of PAR.Trim Location 6 USR
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0054    W0INVL 25        Trim Location 6
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUOZTX    PARM           W0CNNM 25        Trim 6 Desc USR
      *
      * PAR.Trim Extent 1 Desc USR = Condition name of PAR.Trim Extent 1
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0055    W0INVL 25        Trim Extent 1 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUOOTX    PARM           W0CNNM 25        Trim Extent 1 D
      *
      * PAR.Trim Extent 2 Desc USR = Condition name of PAR.Trim Extent 2
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0056    W0INVL 25        Trim Extent 2 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUOPTX    PARM           W0CNNM 25        Trim Extent 2 D
      *
      * PAR.Trim Extent 3 Desc USR = Condition name of PAR.Trim Extent 3
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0057    W0INVL 25        Trim Extent 3 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUOQTX    PARM           W0CNNM 25        Trim Extent 3 D
      *
      * PAR.Trim Extent 4 Desc USR = Condition name of PAR.Trim Extent 4
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0058    W0INVL 25        Trim Extent 4 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUORTX    PARM           W0CNNM 25        Trim Extent 4 D
      *
      * PAR.Trim Extent 5 Desc USR = Condition name of PAR.Trim Extent 5
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0059    W0INVL 25        Trim Extent 5 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUOSTX    PARM           W0CNNM 25        Trim Extent 5 D
      *
      * PAR.Trim Extent 6 Desc USR = Condition name of PAR.Trim Extent 6
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158533   Y2LSNO  70       List number
     C                     PARM WN0060    W0INVL 25        Trim Extent 6 U
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUO0TX    PARM           W0CNNM 25        Trim Extent 6 D
      *
     C           KRSSQ     READE@BPREPD                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Crc Sum Trim Dtl  RT - Loss Trans  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BSBWCD    WQSR01           LT Type Code
     C           *LIKE     DEFN BSHMNB    WQSR02           BOH Company Num
     C           *LIKE     DEFN BSBNNB    WQSR03           BOH Buy Order N
     C           *LIKE     DEFN BSBONB    WQSR04           BOL Load Number
     C           *LIKE     DEFN BSCVNB    WQSR05           TH Tattoo Numbe
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           LT Type Code
     C                     KFLD           WQSR02           BOH Company Num
     C                     KFLD           WQSR03           BOH Buy Order N
     C                     KFLD           WQSR04           BOL Load Number
     C                     KFLD           WQSR05           TH Tattoo Numbe
      * Setup key
     C                     Z-ADDBPBWCD    WQSR01           LT Type Code
     C                     Z-ADD$HHMNB    WQSR02           BOH Company Num
     C                     Z-ADD$HBNNB    WQSR03           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSR04           BOL Load Number
     C                     Z-ADD$HCVNB    WQSR05           TH Tattoo Numbe
      * Establish starting position
     C           KRSSR     SETLL@BSCPPE                    *
     C           KRSSR     READE@BSCPPE                  90*
      * Data record not found
     C   90                MOVEL'PRK0115' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Set up Trim Locations
      * CASE: Trim 1
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 1 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 1 USR
      *   '-
     C           WN0049    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0049                     *OR
     C                     MOVELBSS4NB    WN0049           Trim Location 1
     C                     MOVELBSS3NB    WN0055           Trim Extent 1 U
     C                     ADD  1         $HMWNB           Trim Head 1 USR
     C                     ELSE
      * CASE: Trim 2
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 2 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 2 USR
      *   '-
     C           WN0050    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0050                     *OR
     C                     MOVELBSS4NB    WN0050           Trim Location 2
     C                     MOVELBSS3NB    WN0056           Trim Extent 2 U
     C                     ADD  1         $HMXNB           Trim Head 2 USR
     C                     ELSE
      * CASE: Trim 3
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 3 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 3 USR
      *   '-
     C           WN0051    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0051                     *OR
     C                     MOVELBSS4NB    WN0051           Trim Location 3
     C                     MOVELBSS3NB    WN0057           Trim Extent 3 U
     C                     ADD  1         $HMYNB           Trim Head 3 USR
     C                     ELSE
      * CASE: Trim 4
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 4 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 4 USR
      *   '-
     C           WN0052    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0052                     *OR
     C                     MOVELBSS4NB    WN0052           Trim Location 4
     C                     MOVELBSS3NB    WN0058           Trim Extent 4 U
     C                     ADD  1         $HMZNB           Trim Head 4 USR
     C                     ELSE
      * CASE: Trim 5
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 5 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 5 USR
      *   '-
     C           WN0053    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0053                     *OR
     C                     MOVELBSS4NB    WN0053           Trim Location 5
     C                     MOVELBSS3NB    WN0059           Trim Extent 5 U
     C                     ADD  1         $HM0NB           Trim Head 5 USR
     C                     ELSE
      * CASE: Trim 6
      *  - c1 AND c2
      *   |- c1    : PAR.Trim Location 6 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 6 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0054    IFEQ WUCRTX                     *IF
     C           BSS4NB    IFEQ WN0054                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVELBSS4NB    WN0054           Trim Location 6
     C                     MOVELBSS3NB    WN0060           Trim Extent 6 U
     C                     ADD  1         $HTRHD           Trim Head 6 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'99'      WUE5TX           Length Usr Txt
     C                     MOVELWUE5TX    WN0054           Trim Location 6
     C                     ADD  1         $HTRHD           Trim Head 6 USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  BSDSNB    $HH3NB           Weight Tot USR
     C           KRSSR     READE@BSCPPE                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv CMP Info          RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Setup key
     C                     MOVELP6AMCD    ARAMCD           CMP Program Cod
      * Establish starting position
     C           KRSSS     CHAIN@ARREBF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUOHTX           CMP Description
     C                     MOVEL*BLANK    YL0007           CMP Grading Typ
     C                     MOVEL*BLANK    P7DMST           CMP Sort Basis
     C                     MOVEL*BLANK    WUOHTX           CMP Carc Wgt Ty
     C                     Z-ADD*ZERO     WUNUMN           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WUNUMN           CMP Lean Factor
     C                     MOVEL*BLANK    WUOHTX           CMP Optimal Row
     C                     MOVEL*BLANK    WUOHTX           CMP Type
     C                     Z-ADD*ZERO     WUNUMN           CMP Market Add/
     C                     MOVEL*BLANK    WUOHTX           RS Record Statu
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELARA3TX    WUOHTX           CMP Description
     C                     MOVELARDLST    YL0007           CMP Grading Typ
     C                     MOVELARDMST    P7DMST           CMP Sort Basis
     C                     MOVELARDQST    WUOHTX           CMP Carc Wgt Ty
     C                     Z-ADDARAZPC    WUNUMN           CMP Std Lean Pe
     C                     Z-ADDARA0PC    WUNUMN           CMP Lean Factor
     C                     MOVELARDTST    WUOHTX           CMP Optimal Row
     C                     MOVELARF5ST    WUOHTX           CMP Type
     C                     Z-ADDARI1PR    WUNUMN           CMP Market Add/
     C                     MOVELARAJST    WUOHTX           RS Record Statu
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv PayTyp/Src Hc 2   Rt - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAHMNB    WQST01           BOH Company Num
     C           *LIKE     DEFN WABNNB    WQST02           BOH Buy Order N
     C           *LIKE     DEFN WABONB    WQST03           BOL Load Number
     C           *LIKE     DEFN WAB0DT    WQST04           TH Kill Date
     C           *LIKE     DEFN WACVNB    WQST05           TH Tattoo Numbe
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           BOH Company Num
     C                     KFLD           WQST02           BOH Buy Order N
     C                     KFLD           WQST03           BOL Load Number
     C                     KFLD           WQST04           TH Kill Date
     C                     KFLD           WQST05           TH Tattoo Numbe
      * Setup key
     C                     Z-ADDB1HMNB    WQST01           BOH Company Num
     C                     Z-ADDB1BNNB    WQST02           BOH Buy Order N
     C                     Z-ADDB1BONB    WQST03           BOL Load Number
     C                     Z-ADDB1B0DT    WQST04           TH Kill Date
     C                     Z-ADDB1CVNB    WQST05           TH Tattoo Numbe
      * Establish starting position
     C           KRSST     SETLL@A1CPOC                    *
     C           KRSST     READE@A1CPOC                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAKAST    WUKAST           TH Source Type
     C                     MOVELWAJ9ST    WUJ9ST           TH Payment Type
     C                     MOVELWALLST    WULLST           TH Hog Class Ty
     C           KRSST     READE@A1CPOC                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv TH Ext for ExstnceRT - Tattoo Header EXT  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNHMNB    WQSU01           BOH Company Num
     C           *LIKE     DEFN DNBNNB    WQSU02           BOH Buy Order N
     C           *LIKE     DEFN DNBONB    WQSU03           BOL Load Number
     C           *LIKE     DEFN DNCVNB    WQSU04           TH Tattoo Numbe
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           BOH Company Num
     C                     KFLD           WQSU02           BOH Buy Order N
     C                     KFLD           WQSU03           BOL Load Number
     C                     KFLD           WQSU04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD$HHMNB    WQSU01           BOH Company Num
     C                     Z-ADD$HBNNB    WQSU02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSU03           BOL Load Number
     C                     Z-ADD$HCVNB    WQSU04           TH Tattoo Numbe
      * Establish starting position
     C           KRSSU     SETLL@DNCPUY                    *
     C           KRSSU     READE@DNCPUY                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0637' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' WURTN            *Return code
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    WURTN            *Return code
     C           KRSSU     READE@DNCPUY                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELYL0009    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSV     CHAIN@BOREFN              90    *
      * Data record not found
     C   90                MOVEL'PRK0107' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBOCBTX    YL0010           EV Description
     C                     Z-ADDBOAFPC    YL0011           EV Minimum
     C                     Z-ADDBOAGPC    YL0012           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELYL0009    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSW     CHAIN@BOREFN              90    *
      * Data record not found
     C   90                MOVEL'PRK0107' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBOCBTX    YL0010           EV Description
     C                     Z-ADDBOAFPC    YL0013           EV Minimum
     C                     Z-ADDBOAGPC    YL0014           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELYL0009    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSX     CHAIN@BOREFN              90    *
      * Data record not found
     C   90                MOVEL'PRK0107' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBOCBTX    YL0010           EV Description
     C                     Z-ADDBOAFPC    YL0015           EV Minimum
     C                     Z-ADDBOAGPC    YL0016           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELYL0009    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSY     CHAIN@BOREFN              90    *
      * Data record not found
     C   90                MOVEL'PRK0107' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBOCBTX    YL0010           EV Description
     C                     Z-ADDBOAFPC    YL0017           EV Minimum
     C                     Z-ADDBOAGPC    YL0018           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * E3814 JJH 10/07/15 - Recompile because PS Premises ID added to
      *   Producer Site. - No logic changes.
      * H16853 ISE 11/02/20 - Increased the Buy Order Number field
      *   length from 5 to 7.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Get the MTech Live Yes or No
      *================================================================
      * Mtech Live Yes or no
      * Rtv Company Values    XF - STR Order Management Sys  * 
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0001  30       BOH Company Num
     C                     PARM @CN,001   WQ0002 10        Company Value C
     C           WUKBTX    PARM *BLANK    WQ0003 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUKBTX    YL0001           MTech Live Yes
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Modification History Created Str slm 061208
      *================================================================
      * 9/24/02 RMC Calc 2 dec backfat and loin eye
      * 050108 slm e00216 need additional fields on ho for meat
      * 061208 SLM E00144 LFT Head and Uat/Koa Head
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Carcass Detail,Fx PO
      *================================================================
      * CASE: PAR.TFD Header Action-Crc Dtl EQ WRK.Blank USR
     C           P4NPTX    IFEQ WUCRTX                     *IF
      * CASE: PAR.Print Carcass Analysis Us is No
     C           P3MVST    IFEQ 'N'                        *IF
     C                     GOTO UDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     WUNSNB           Carcass number
      *
     C                     MOVEL*BLANK    WN0061  1        Status 1
     C                     MOVEL*BLANK    WN0062  1        Status 2
     C                     Z-ADD*ZERO     WN0063  30       Carcass Count U
      *
      * Prt Carcass Detail,Fx PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Excluded Carc Dta PO
      *================================================================
      * CASE: LCL.Format Printed        USR is No
     C           YL0008    IFEQ 'N'                        *IF
     C                     GOTO UEEXIT                     *QUIT
     C                     END                             *FI
      * Prt Excluded Carc Dta PO: Mainline
     C                     EXSR C0MAIN
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Move the values of the ranges from the carcass merit programs
      *================================================================
     C                     Z-ADDYL0011    $NM9A1           Hot Wgt < Usr
     C                     Z-ADDYL0012    $NNAA1           Hot Wgt > Usr
     C                     Z-ADDYL0013    $NNBA1           Lean Pct < Usr
     C                     Z-ADDYL0014    $NNCA1           Lean Pct > Usr
     C                     Z-ADDYL0015    $NNDA1           Backfat Inch <
     C                     Z-ADDYL0016    $NNEA1           Backfat Inch >
     C                     Z-ADDYL0017    $NNFA1           Loin Eye Inch <
     C                     Z-ADDYL0018    $NNGA1           Loin Eye Inch >
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt TH Comments       PO
      *================================================================
      * Prt TH Comments       PO: Mainline
     C                     EXSR D0MAIN
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZBINIT    BEGSR
      *================================================================
      * Prt Carcass Detail,Fx PO: Initialise
      *================================================================
      * USER: Initialize program
      * CASE:
      *  - (c1 AND c2 AND c3)
      *   |- c1    : PAR.TH Payment Sts is Live anything
      *   |- c2    : PAR.Print Carcass Analysis Us is No
      *   |- c3    : PAR.Print Comp Sum/Dtl STS is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HCWST    IFEQ 'ML'                       *IF
     C           $HCWST    OREQ 'PL'
     C           $HCWST    OREQ 'NL'
     C           $HCWST    OREQ 'SL'
     C           $HCWST    OREQ 'IL'
     C           P3MVST    IFEQ 'N'                        *IF
     C           P8TOST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WN0061           Status 1
     C                     MOVEL'N'       WN0062           Status 2
     C                     ELSE
      * CASE: PAR.CMP Sort Basis is None
     C           P7DMST    IFEQ *BLANK                     *IF
     C                     MOVEL'N'       WN0061           Status 1
     C                     MOVEL'Y'       WN0062           Status 2
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WN0061           Status 1
     C                     MOVEL'Y'       WN0062           Status 2
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.Status 3 is Yes
     C           P8SVST    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       WN0061           Status 1
     C                     MOVEL'Y'       WN0062           Status 2
     C                     END                             *FI
     C                     Z-ADD*ZERO     WN0063           Carcass Count U
      *================================================================
     CSR         ZBEXIT    ENDSR
      /EJECT
     CSR         ZCINIT    BEGSR
      *================================================================
      * Prt Excluded Carc Dta PO: Initialise
      *================================================================
      * USER: Initialize program
      * Hot Wgt range for Exclude section
     C                     MOVEL'CDP'     YL0009           EV Validation C
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
     C                     EXSR SVRVGN
      * Lean PCT range for Exclude section
     C                     MOVEL'PLP'     YL0009           EV Validation C
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
     C                     EXSR SWRVGN
      * Backfat range for Exclude section
     C                     MOVEL'BHP'     YL0009           EV Validation C
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
     C                     EXSR SXRVGN
      * Loin Eye range for Exclude section
     C                     MOVEL'LHP'     YL0009           EV Validation C
      * Rtv CarSummary InfPrt RT - Evaluation Validation  * 
     C                     EXSR SYRVGN
      *================================================================
     CSR         ZCEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2DVCD           Lean Rng Hdg 1
     C                     MOVEL*BLANK    P2DWCD           Lean Rng Hdg 2
     C                     MOVEL*BLANK    P2DXCD           Lean Rng Hdg 3
     C                     MOVEL*BLANK    P2DYCD           Lean Rng Hdg 4
     C                     MOVEL*BLANK    P2DZCD           Lean Rng Hdg 5
     C                     MOVEL*BLANK    P2D0CD           Lean Rng Hdg 6
     C                     MOVEL*BLANK    P2D1CD           Lean Rng Hdg 7
     C                     MOVEL*BLANK    P2D2CD           Lean Rng Hdg 8
     C                     Z-ADD*ZERO     P2CXPC           Lean Rng Min 1
     C                     Z-ADD*ZERO     P2CYPC           Lean Rng Max 1
     C                     Z-ADD*ZERO     P2CZPC           Lean Rng Min 2
     C                     Z-ADD*ZERO     P2C0PC           Lean Rng Max 2
     C                     Z-ADD*ZERO     P2C1PC           Lean Rng Min 3
     C                     Z-ADD*ZERO     P2C2PC           Lean Rng Max 3
     C                     Z-ADD*ZERO     P2C3PC           Lean Rng Min 4
     C                     Z-ADD*ZERO     P2C4PC           Lean Rng Max 4
     C                     Z-ADD*ZERO     P2C5PC           Lean Rng Min 5
     C                     Z-ADD*ZERO     P2C6PC           Lean Rng Max 5
     C                     Z-ADD*ZERO     P2C7PC           Lean Rng Min 6
     C                     Z-ADD*ZERO     P2C8PC           Lean Rng Max 6
     C                     Z-ADD*ZERO     P2C9PC           Lean Rng Min 7
     C                     Z-ADD*ZERO     P2DAPC           Lean Rng Max 7
     C                     Z-ADD*ZERO     P2DBPC           Lean Rng Min 8
     C                     Z-ADD*ZERO     P2DCPC           Lean Rng Max 8
     C                     MOVEL*BLANK    P6B3ST           BOH Quote Price
     C                     MOVEL*BLANK    P6ETCD           BOH Commodity M
     C                     MOVEL*BLANK    P6EUCD           BOH Commodity P
     C                     MOVEL*BLANK    P6AMCD           CMP Program Cod
     C                     MOVEL*BLANK    P7DMST           CMP Sort Basis
     C                     Z-ADD*ZERO     P8MFNB           PY Head Killed
     C                     MOVEL*BLANK    P8SNST           Pricing UOM USR
      *
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field System Value Alpha    USR
     C                     MOVEL*BLANK    WUKBTX 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1BNNB           BOH Buy Order N
     C                     MOVEL*LOVAL    A1BONB           BOL Load Number
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field TH CA Base Mkt Price Amt
     C                     Z-ADD*ZERO     WUI6PR  72
      * Define work field TH CA Sort Discount Amt
     C                     Z-ADD*ZERO     WUI7PR  72
      * Define work field TH CA Yield Gain/Loss Amt
     C                     Z-ADD*ZERO     WUI8PR  72
      * Define work field TH CA Base Carcass Value
     C                     Z-ADD*ZERO     WUI9PR  72
      * Define work field TH CA Lean Premium Amt
     C                     Z-ADD*ZERO     WUJAPR  72
      * Define work field TH CA Carcass Gross Amt
     C                     Z-ADD*ZERO     WUJCPR  72
      * Define work field #Sequence Block
     C                     MOVEL*BLANK    WUJ0ST  1
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field TH CM Crc Val Carc /CWT
     C                     Z-ADD*ZERO     WUEDPR  52
      * Define work field TH Avg Live Wgt
     C                     Z-ADD*ZERO     WUF7NB  51
      * Define work field TH Adj Live Wgt
     C                     Z-ADD*ZERO     WULRNB  71
      * Define work field Adj Avg Live Weight   USR
     C                     Z-ADD*ZERO     WUU9NB  51
      * Define work field PY As of Kill Date
     C                     Z-ADD*ZERO     WUCHDT  70
      * Define work field Live Wgt Min USR
     C                     Z-ADD*ZERO     WUNXNB  30
      * Define work field Live Wgt Max USR
     C                     Z-ADD*ZERO     WUNYNB  30
      * Define work field Date USR
     C                     Z-ADD*ZERO     WUB5DT  70
      * Define work field Trim 1 Desc USR
     C                     MOVEL*BLANK    WUG4TX 15
      * Define work field Trim 2 Desc USR
     C                     MOVEL*BLANK    WUG5TX 15
      * Define work field Trim 3 Desc USR
     C                     MOVEL*BLANK    WUG6TX 15
      * Define work field Trim 4 Desc USR
     C                     MOVEL*BLANK    WUG7TX 15
      * Define work field Trim 5 Desc USR
     C                     MOVEL*BLANK    WUG8TX 15
      * Define work field Trim 6 Desc USR
     C                     MOVEL*BLANK    WUOZTX 15
      * Define work field Trim Extent 1 Desc USR
     C                     MOVEL*BLANK    WUOOTX  7
      * Define work field Trim Extent 2 Desc USR
     C                     MOVEL*BLANK    WUOPTX  7
      * Define work field Trim Extent 3 Desc USR
     C                     MOVEL*BLANK    WUOQTX  7
      * Define work field Trim Extent 5 Desc USR
     C                     MOVEL*BLANK    WUOSTX  7
      * Define work field Trim Extent 4 Desc USR
     C                     MOVEL*BLANK    WUORTX  7
      * Define work field Trim Extent 6 Desc USR
     C                     MOVEL*BLANK    WUO0TX  7
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Length Usr Txt
     C                     MOVEL*BLANK    WUE5TX  2
      * Define work field Txt NU USR
     C                     MOVEL*BLANK    WUOHTX  1
      * Define work field Num NU USR
     C                     Z-ADD*ZERO     WUNUMN  10
      * Define work field Return Code USR
     C                     MOVEL*BLANK    WULMST  7
      * Define work field Status 1
     C                     MOVEL*BLANK    WUP4ST  1
      * Define work field TH Live Wgt DRV
     C                     Z-ADD*ZERO     WUN7NB  70
      * Define work field TH Paid 2 Week Avg Y/N
     C                     MOVEL*BLANK    WUR6ST  1
      * Define work field Status 2
     C                     MOVEL*BLANK    WUP5ST  1
      * Define work field Status 3
     C                     MOVEL*BLANK    WUSVST  1
      * Define work field Carcass number        USR
     C                     Z-ADD*ZERO     WUNSNB  30
      * Define work field Summary Only Usr
     C                     MOVEL*BLANK    WUNCCD 25
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    B1BNNB           BOH Buy Order N
     C                     MOVEL*LOVAL    B1BONB           BOL Load Number
     C                     MOVEL*LOVAL    B1CVNB           TH Tattoo Numbe
     C                     MOVEL*LOVAL    B1EWNB           CD Carcass/Hot
      * Define work field @Status (Yes/No)
     C                     MOVEL*BLANK    WUABST  1
      * Define work field TH Source Type
     C                     MOVEL*BLANK    WUKAST  1
      * Define work field TH Payment Type
     C                     MOVEL*BLANK    WUJ9ST  1
      * Define work field TH Hog Class Type
     C                     MOVEL*BLANK    WULLST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WACVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WAB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WAAWDT           TH Purchase Dat
     C                     Z-ADD*ZERO     WAACPR           TH Live Purchas
     C                     Z-ADD*ZERO     WAB9PR           TH Live Gross A
     C                     Z-ADD*ZERO     WACAPR           TH LIve Net Amt
     C                     Z-ADD*ZERO     WAAIPR           TH Recalc Live
     C                     Z-ADD*ZERO     WAA6DT           TH Pricing Date
     C                     Z-ADD*ZERO     WACXNB           TH Dead On Arri
     C                     Z-ADD*ZERO     WACWNB           TH Head Receive
     C                     Z-ADD*ZERO     WAFCNB           TH Yard Deads
     C                     Z-ADD*ZERO     WAH9NB           TH Held Over
     C                     Z-ADD*ZERO     WAFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     WAFENB           TH Head Killed
     C                     Z-ADD*ZERO     WAHENB           TH Head Adds
     C                     Z-ADD*ZERO     WAHFNB           TH Head Accepte
     C                     Z-ADD*ZERO     WACYNB           TH Live Wgt
     C                     Z-ADD*ZERO     WALRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     WAE0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     WAA5PC           TH Tot Loin Eye
     C                     Z-ADD*ZERO     WAFBNB           TH Tot Backfat
     C                     Z-ADD*ZERO     WAA4PC           TH Tot Light Re
     C                     Z-ADD*ZERO     WAF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     WAHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     WAF5NB           TH Avg Light Re
     C                     Z-ADD*ZERO     WAF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     WAF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     WAF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     WAAVPC           TH Std Yield Pe
     C                     Z-ADD*ZERO     WAAWPC           TH Actual Yield
     C                     Z-ADD*ZERO     WACWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     WAA8PC           TH Yield Differ
     C                     Z-ADD*ZERO     WAA7PC           TH Recalc Live
     C                     Z-ADD*ZERO     WAB8PR           TH CM Market Pr
     C                     Z-ADD*ZERO     WAAMPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     WAANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     WAAYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     WAAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     WAAOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     WAAXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     WAAPPR           TH CM Carcass G
     C                     Z-ADD*ZERO     WAASPR           TH Deduction Am
     C                     Z-ADD*ZERO     WAA4VA           TH Total Net WO
     C                     Z-ADD*ZERO     WAATPR           TH Carcass Net
     C                     Z-ADD*ZERO     WAA5VA           TH Additions Am
     C                     Z-ADD*ZERO     WACBPR           TH Payment Gros
     C                     Z-ADD*ZERO     WACCPR           Th Payment Net
     C                     Z-ADD*ZERO     WALPNB           TH AP Voucher/D
     C                     Z-ADD*ZERO     WACDPR           TH Freight Amou
     C                     Z-ADD*ZERO     WAA7VA           TH Accrual Amou
     C                     Z-ADD*ZERO     WAA2PR           TH Fixed Cost A
     C                     Z-ADD*ZERO     WAGHNB           TH Commission A
     C                     Z-ADD*ZERO     WABYDT           TH Voucher Paym
     C                     Z-ADD*ZERO     WABSDT           TH Held/Ovr Com
     C                     Z-ADD*ZERO     WABTDT           TH Commission P
     C                     Z-ADD*ZERO     WABUDT           TH Actual Check
     C                     Z-ADD*ZERO     WAHGNB           TH Shipped Weig
     C                     Z-ADD*ZERO     WAHHNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     WAHINB           TH FFLI
     C                     Z-ADD*ZERO     WAA3PR           TH Kill Product
     C                     Z-ADD*ZERO     WAA4PR           TH Cut Product
     C                     Z-ADD*ZERO     WAA6PR           TH Render Produ
     C                     Z-ADD*ZERO     WAJ9NB           TH Head Exclude
     C                     Z-ADD*ZERO     WAD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     WAD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     WAD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     WAD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     WAEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     WAEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     WAECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     WAEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     WAEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     WAEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     WAEGPR           TH CM Gross Liv
     C                     Z-ADD*ZERO     WAEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     WAOXNB           TH HPS Movement
     C                     Z-ADD*ZERO     WATHWT           TH DOA Weight
     C                     Z-ADD*ZERO     WAT2WT           TH Avg Lean % E
     C                     Z-ADD*ZERO     WATHHD           TH HPS Farm Sit
     C                     Z-ADD*ZERO     WAT2HD           TH Shift Held O
     C                     Z-ADD*ZERO     WAOBPR           TH Sorting Amou
     C                     Z-ADD*ZERO     WAKOER           TH Head Identif
     C                     Z-ADD*ZERO     WAOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     WAOPEM           TH Percent Acce
     C                     Z-ADD*ZERO     WAIORP           TH Head Adjuste
     C                     Z-ADD*ZERO     WAOWEO           TH PHA Head Add
     C                     Z-ADD*ZERO     WAHHPC           TH PHA Yield Pe
     C                     Z-ADD*ZERO     WAS9PR           TH PHA Lean Prm
     C                     Z-ADD*ZERO     WATAPR           TH VC Gross Val
     C                     Z-ADD*ZERO     WATBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     WAJFUR           TH Avg Lean %
     C                     Z-ADD*ZERO     WAKRIF           TH Broken Back
     C                     Z-ADD*ZERO     WAKORF           TH Hot Scl Uplo
     C                     Z-ADD*ZERO     WAKAPR           TH Unused Nbr 4
     C                     Z-ADD*ZERO     WAKROT           TH Excluded Car
     C                     Z-ADD*ZERO     WAOTJG           TH Excluded Pre
     C                     Z-ADD*ZERO     WAIRJG           TH Unused Nbr 7
     C                     Z-ADD*ZERO     WAIMJF           TH Unused Nbr 8
     C                     Z-ADD*ZERO     WAIRGF           TH Unused Nbr 9
     C                     Z-ADD*ZERO     WAKRJF           TH Unused Nbr 1
     C                     Z-ADD*ZERO     WAOJRF           TH Break Even P
     C                     Z-ADD*ZERO     WAKFOR           TH Meat Value F
     C                     Z-ADD*ZERO     WAORJK           TH Yld Parm Adj
     C                     Z-ADD*ZERO     WAOMVJ           TH PHA Sort Dis
     C                     Z-ADD*ZERO     WAMVNF           TH Avg Loin Eye
     C                     Z-ADD*ZERO     WAMCNF           TH Avg Backfat
     C                     Z-ADD*ZERO     WANCNF           TH HITCH Old Pa
     C                     Z-ADD*ZERO     WANCHF           TH MPR Sort Los
     C                     Z-ADD*ZERO     WAIGIR           TH Unused Nbr 1
     C                     Z-ADD*ZERO     WAKFJR           TH Unused Nbr 2
     C                     Z-ADD*ZERO     WAEADT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     WAEBDT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     WAECDT           TH Head LFT
     C                     Z-ADD*ZERO     WAEDDT           TH Head EUT/KOA
     C                     Z-ADD*ZERO     WAEEDT           TH Unused Date
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define work field *Return code
     C                     MOVEL*BLANK    WURTN   7
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    DNHMNB           BOH Company Num
     C                     MOVEL*LOVAL    DNBNNB           BOH Buy Order N
     C                     MOVEL*LOVAL    DNBONB           BOL Load Number
     C                     MOVEL*LOVAL    DNCVNB           TH Tattoo Numbe
     C                     MOVEL*LOVAL    DNB0DT           TH Kill Date
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A4HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A4BNNB           BOH Buy Order N
     C                     MOVEL*LOVAL    A4BONB           BOL Load Number
     C                     MOVEL*LOVAL    A4CVNB           TH Tattoo Numbe
     C                     MOVEL*LOVAL    A4B0DT           TH Kill Date
     C                     MOVEL*LOVAL    A4ETST           THC Comment Typ
     C                     MOVEL*LOVAL    A4BETX           THC Comment Lin
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WB00 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB02 155       *Synon (15,5) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field MTech Live Yes or No
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field TH Excluded Carc Val
     C                     Z-ADD*ZERO     YL0002  72
      * Define local work field TH Excluded Premium
     C                     Z-ADD*ZERO     YL0003  72
      * Define local work field TH Meat Value Factor Amt
     C                     Z-ADD*ZERO     YL0004 112
      * Define local work field TH Head LFT
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field TH Head EUT/KOA
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field CMP Grading Type
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Format Printed        USR
     C                     MOVEL*BLANK    YL0008  1
      * Define local work field EV Validation Code
     C                     MOVEL*BLANK    YL0009  3
      * Define local work field EV Description
     C                     MOVEL*BLANK    YL0010 25
      * Define local work field Hot Wgt < Usr
     C                     Z-ADD*ZERO     YL0011  71
      * Define local work field Hot Wgt > Usr
     C                     Z-ADD*ZERO     YL0012  71
      * Define local work field Lean Pct < Usr
     C                     Z-ADD*ZERO     YL0013  71
      * Define local work field Lean Pct > Usr
     C                     Z-ADD*ZERO     YL0014  71
      * Define local work field Backfat Inch < Usr
     C                     Z-ADD*ZERO     YL0015  52
      * Define local work field Backfat Inch > Usr
     C                     Z-ADD*ZERO     YL0016  52
      * Define local work field Loin Eye Inch < Usr
     C                     Z-ADD*ZERO     YL0017  52
      * Define local work field Loin Eye Inch > Usr
     C                     Z-ADD*ZERO     YL0018  52
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Rtv Lean Hdg/Rng      RT - Crc Sum Lean Dist Range  * 
     C                     EXSR SARVGN
      * E2423 Mtech Live or Not Live *** Interfaces to HPS ***
      * Get the MTech Live Yes or No
     C                     EXSR UBSUBR                     Get the MTech L
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 MTECHLIVE
00002 C O M P A R I S O N
00003 L I V E
00004 C A R C A S S   M E R I T
00005    Carcass
00006   Carc Wgt
00007 Carcass--
00008 Live Delivered Weight
00009   Average Live Weight
00010       Live
00011   Live Wgt
00012 Live--
00013 Carcass Weight
00014   Average Carcass Weight
00015 Sort Factor
00016 Premium
00017 ---Fixed Cost----
00018 --------Lean--------
00019 --Carcass Value--
00020 ------Quality-------
00021 Y2U0005
