// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBO9XFR
// ?Date: 14.08.2025 Time: 03:48:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification History
DO;

//?CST/ITM Uma 07/07/25 - Recompilation due to DDS to DDL conversion of
//?"PBBOREP - DP_LOCATION , PBBPREP - DP_PRODUCT_LOCATION".
//?"US 23303: Add audit columns in DP* tables."
ENDDO;

CASE;

// IF PAR.Parent Customer is Parent C Class
IF PAR.Parent_Customer = 99999;

// LCL.DP Parent Customer Name = CONCAT(CON.C CUSTOMER,PAR.Text USR 6,CON.1)
LCL.DP_Parent_Customer_Name = 'C CUSTOMER' + PAR.Text_USR_6 (1);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Sales rte by Cust  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC2097992;
PARAMETER(PAR.Parent_Customer);
PARAMETER(LCL.DP_Salesperson_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Salesperson NmeOnlyRT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1739999;
PARAMETER(LCL.DP_Salesperson_Code);
PARAMETER(LCL.DP_Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// Call program RTV Sys Dt yyyymmddtm UP.
CALL PROGRAM(RTV Sys Dt yyyymmddtm UP) ('PBN2UPC');
PARAMETER(LCL.DP_Date_Time_Stamp);

//?Create Product Location if new
EXECUTE FUNCTION(Crt DP Prod Location  CR) TYPE(CRTOBJ) FILE(PBBPREP)           AC2093169;
PARAMETER('Demand');
PARAMETER('Base');
PARAMETER(PAR.DP_Product);
PARAMETER(PAR.DP_Location);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(LCL.DP_Salesperson_Code);
PARAMETER(LCL.DP_Salesperson_Name);
PARAMETER('AS400');
PARAMETER(LCL.DP_Date_Time_Stamp);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?Create Location if it is new too
EXECUTE FUNCTION(Rtv/Crt Location      RT) TYPE(RTVOBJ) FILE(PBBOREP)           AC2097346;
PARAMETER(PAR.DP_Location);
PARAMETER(LCL.DP_Parent_Customer_Name);
PARAMETER(LCL.DP_Classification_ABC);
PARAMETER(LCL.DP_Date_Time_Stamp);
PARAMETER(PAR.Parent_Customer);
{
 //?USER: Processing if Data record not found

 CASE;

 // IF PAR.Parent Customer is Parent C Class
 IF PAR.Parent_Customer = 99999;

 // LCL.DP Parent Customer Name = PAR.DP Parent Customer Name
 LCL.DP_Parent_Customer_Name = PAR.DP_Parent_Customer_Name;

 // LCL.DP Classification ABC = CND.Class C
 LCL.DP_Classification_ABC = 'C';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
 PARAMETER(PAR.Parent_Customer);
 PARAMETER(LCL.DP_Parent_Customer_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Rtv CCE Class ABC-DP  RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC2097330;
 PARAMETER(PAR.Parent_Customer);
 PARAMETER(LCL.DP_Classification_ABC);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 EXECUTE FUNCTION(Crt DP Location       CR) TYPE(CRTOBJ) FILE(PBBOREP)           AC2097288;
 PARAMETER('Demand');
 PARAMETER('Base');
 PARAMETER(PAR.DP_Location);
 PARAMETER(LCL.DP_Parent_Customer_Name);
 PARAMETER(LCL.DP_Classification_ABC);
 PARAMETER('AS400');
 PARAMETER(PAR.DP_Date_Time_Stamp);
 {
  //?USER: Processing if Data record already exists

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

}


