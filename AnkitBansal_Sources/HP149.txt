      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP149
      * TITLE:       MAINTAIN REJECTED HEAD REASONS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/15/95
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO MAINTAIN THE REJECT
      *           REASONS ASSOCIATED WITH THE REJECTED HEAD ON A
      *           TRANSFER DETAIL LINE.
      *
      *           THE PROGRAM WILL CREATE, DELETE AND UPDATE RECORDS
      *           THIS PROGRAM IS CALLED FROM HP139-MAINTAIN TRANSFER.
      *
      *           RESTRICTORS: MOVEMENT NUMBER, LINE NUMBER
      *           POSITIONERS: NONE
      *           SELECTORS:   NONE
      *
      *           IT DOES HAVE F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/10/97  LEANNE FEDOR
      *           CHANGED F10=ACCEPT TO F9=ACCEPT SO THAT THE ACCEPT KEY
      *           IS PHYSICALLY ON THE KEYBOARD FARTHER FROM THE F11
      *           DELETE KEY.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD149    CF   E             WORKSTN
     F                                     SFILE(HP149S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP041    IF   E           K DISK
      *  DEATH/DISEASE REASON        (KEY: DRDRCD)
      *
     FHSP078    UF A E           K DISK
      *  REJECTED HEAD WITH REASONS  (KEY: RJMVSN RJLNNO)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * SET THE PAGE OF THE SUBFILE TO DISPLAY
      *
     C                   SELECT
     C     WKFLOW        WHENEQ    0
     C     ERROR         ANDEQ     0
     C                   Z-ADD     1             HDPAG1
      *
     C     RESET         WHENEQ    YES
     C     WKFLOW        IFGT      HDRRN1
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   ENDIF
     C                   ENDSL
      *
      * IF THERE ARE ANY ERRORS, SET THE INDICATOR THAT CONTROLS
      * THE FUNCTION KEY TO UPDATE THE FILES
      *
     C     ERROR         IFEQ      0
     C                   SETOFF                                       99
     C                   ELSE
     C                   SETON                                        99
     C                   ENDIF
      *
      * SET THE INDICATORS TO CONTROL SCREEN FIELDS
      *
     C                   EXSR      $IND
      *
      * IF THE USER HAS EDITED THE DATA, THEN ISSUE THE 'ACCEPT
      * CHANGES' MESSAGE.
      *
     C     ERROR         IFEQ      0
     C     EDITFL        ANDEQ     YES
     C                   Z-ADD     1             ERROR
     C                   MOVEL     'HS09026'     MGID(E)
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP149K1
     C                   WRITE     HP149EC
     C                   EXFMT     HP149C1
      *
      * RETRIEVE THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) AND MOVE IT TO A WORK FIELD.  THIS VALUE
      * WILL BE USED LATER TO CONTROL THE REPOSITIONING OF THE SUBFILE.
      *
     C                   Z-ADD     IDFLOW        WKFLOW
     C                   MOVEL     NO            RESET
     C                   MOVEL     NO            EDITFL
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN09         WHENEQ    *ON                                          F9-ACCEPT
     C                   EXSR      $EDIT1
      *
     C     ERROR         IFNE      0                                            IF ERRORS
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
      *
     C                   SELECT
     C     MODE          WHENEQ    REVISE
     C                   EXSR      $DLT
     C                   EXSR      $CRT
     C     MODE          WHENEQ    CREATE
     C                   EXSR      $CRT
     C                   ENDSL
      *
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF                                                  IF ERRORS
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C     IDFLOW        ADD       WKPLIN        WKDIFF
     C     HDRRN1        IFGE      WKDIFF                                       IF SOMETHING
     C                   ELSE
     C                   Z-ADD     COUNT         HDRRN1
     C                   DO        WKPLIN                                       DO FILL
     C                   EXSR      $BLANK
     C                   ENDDO                                                  DO FILL
     C                   ENDIF                                                  IF SOMETHING
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C                   EXSR      $EDIT1
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
     C                   MOVEL     YES           EDITFL
      *
      * CLEAR THE TOTAL ACCUMULATOR FOR REJECTED HEAD
      *
     C                   Z-ADD     0             C1HD
      * SETON MDT
     C                   SETON                                        85
      *
      *
      * EDIT ALL THE CHANGED SUBFILE RECORDS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP149S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF THE ERROR INDICATORS IN THE SUBFILE
      *
     C                   EXSR      $SETOF
      *
     C     DFRJHD        IFEQ      0                                            IF NO ENTRY
     C     DFDRCD        ANDEQ     *BLANK
     C                   MOVE      *BLANK        DFDRDS
     C                   ELSE
      *
      * ACCUMULATE VALUES FOR TOTALS
      *
     C                   ADD       DFRJHD        C1HD
      *
      * PERFORM VALIDATIONS:
      *    REJECT HEAD
      *    REJECT REASON
      *
      * REJECT HEAD
     C                   SELECT
     C     DFRJHD        WHENEQ    0
     C                   SETON                                        34
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
      *
     C     DFRJHD        WHENLT    0
     C                   SETON                                        34
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDSL
      *
      * VALIDATE DEATH REASON CODE
      *
     C                   MOVE      *BLANK        DFDRDS
      *
     C                   SELECT
     C     DFDRCD        WHENEQ    *BLANK                                       WH BLANK
     C                   SETON                                        37
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   OTHER
      *
      * CHECK THAT REASON CODE EXISTS
      *
     C     DFDRCD        CHAIN     HSP041                             91
     C     *IN91         IFEQ      *OFF                                         IF GOOD
     C                   MOVEL     DRDRDS        DFDRDS
     C                   ELSE
      *
     C                   SETON                                        37
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00221'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDRCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD
     C                   ENDSL
     C                   ENDIF                                                  IF NO ENTRY
      *
     C                   UPDATE    HP149S1
     C                   EXSR      $SETOF
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      * SET MDT
     C                   SETOFF                                       85
      *
      * IF THERE WERE NO ERRORS IN THE SUBFILE, THEN
      * CHECK THAT THE ACCUMULATED HEAD FROM THE SUBFILE IS
      * NOT GREATER THAN THE REJECTED HEAD PASSED IN AS A PARM AND
      * DISPLAYED IN THE CONTROL RECORD.
      *
     C     ERROR         IFEQ      0
     C     C1HD          ANDGT     C1RJHD
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C                   Z-ADD     1             HDPAG1
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00610'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * IF THERE ARE NO ERRORS, FORCE THE SUBFILE TO REDISPLAY
      * ON PAGE 1
     C     ERROR         IFEQ      0
     C                   Z-ADD     1             HDPAG1
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
      * CLEAR THE TOTAL REJECT HEAD ACCUMULATOR IN THE HEADER
      *
     C                   Z-ADD     0             C1HD
      *
     C                   CLEAR                   HP149S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP149C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * LOADING THE SUBFILE IN THIS PROGRAM IS DIFFERENT THAN IN THE
      * SHELL PROGRAMS AND DEPENDS ON THE 'MODE'.
      * FOR CREATE MODE, WE LOAD A PAGE OF BLANK LINES.
      * FOR REVISE MODE, WE LOAD A PAGE OF DATABASE RECORDS AND, IF WE
      *                  HIT EOF, WE FINISH THE PAGE WITH BLANK LINES.
      *
     C                   SELECT
     C     MODE          WHENEQ    CREATE
     C                   DO        WKPLIN
     C                   EXSR      $BLANK
     C                   ENDDO
      *
     C     MODE          WHENEQ    REVISE
     C     K1P078        SETLL     HSP078
     C     *IN82         DOUEQ     *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
      * FILL UP THE SUBFILE PAGE WITH BLANK LINES IF NECESSARY
      *
     C     WKPLIN        IFNE      0
     C     WKPLIN        ANDNE     COUNT
     C     COUNT         DIV       WKPLIN        WKFLD
     C                   MVR                     WKRMDR
     C     WKPLIN        SUB       WKRMDR        WKDIFF
     C                   DO        WKDIFF
     C                   EXSR      $BLANK
     C                   ENDDO
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     0             DFRJHD
     C                   MOVE      *BLANK        DFDRCD
     C                   MOVE      *BLANK        DFDRDS
      *
      *  RETRIEVE REJECT HEAD/REASONS FOR THIS MOVEMENT/LINE NUMBER.
      *
     C     K1P078        READE(N)  HSP078                                 82
     C     *IN82         IFEQ      *OFF                                         IF NOT EOF
     C                   SETON                                        85
      *
     C                   Z-ADD     RJRJHD        DFRJHD
     C                   MOVEL     RJDRCD        DFDRCD
      *
      * ACCUMULATE REJECTED HEAD FOR THE HEADER FIELD
      *
     C                   ADD       DFRJHD        C1HD
      *
      * RETRIEVE DEATH/DISEASE REASON CODE DESCRIPTION
      *
     C     DFDRCD        CHAIN     HSP041                             91
     C     *IN91         IFEQ      *OFF                                         IF GOOD
     C                   MOVEL     DRDRDS        DFDRDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFDRDS
     C                   ENDIF                                                  IF GOOD
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
      *
     C                   WRITE     HP149S1
     C                   SETON                                        81
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF                                                  IF NOT EOF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $BLANK- SUBROUTINE TO LOAD BLANK SUBFILE RECORDS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $BLANK        BEGSR
      *
     C                   Z-ADD     0             DFRJHD
     C                   MOVE      *BLANK        DFDRCD
     C                   MOVE      *BLANK        DFDRDS
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
      *
     C                   WRITE     HP149S1
     C                   SETON                                        81
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DLT - DELETE EXISTING RECORDS FOR THIS MOVEMENT/LINE NUMBER
      *----------------------------------------------------------------
      *
     C     $DLT          BEGSR
      *
     C                   SETOFF                                       96
     C     K1P078        SETLL     HSP078
     C     *IN96         DOUEQ     *ON
     C     K1P078        READE     HSP078                                 96
     C     *IN96         IFEQ      *OFF
     C                   DELETE    RJREC
     C                   ENDIF
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CRT - CREATE NEW RECORDS
      *----------------------------------------------------------------
      *
     C     $CRT          BEGSR
      *
      * FIRST, SETUP THE VALUES FOR FIELDS THAT WON'T CHANGE PER LINE
      *
     C                   Z-ADD     C1MVSN        RJMVSN
     C                   Z-ADD     WKLNNO        RJLNNO
      *
      * READ/PROCESS ALL THE CHANGED SUBFILE RECORDS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READ C
     C                   READC     HP149S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
     C     DFRJHD        ANDNE     0
      *
     C                   Z-ADD     DFRJHD        RJRJHD
     C                   MOVEL     DFDRCD        RJDRCD
      *
     C                   WRITE     RJREC
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READ C
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SETOF - SUBROUTINE TO SET OFF ERROR INDICATORS FOR SUBFILE
      *----------------------------------------------------------------
      *
     C     $SETOF        BEGSR
      *
     C                   SETOFF                                       343757
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $IND - RESET INDICATORS
      *----------------------------------------------------------------
      *
     C     $IND          BEGSR
      *
     C                   SELECT
     C     MODE          WHENEQ    CREATE
     C                   SETOFF                                       60
     C                   SETON                                        61
      *
     C     MODE          WHENEQ    REVISE
     C                   SETOFF                                       61
     C                   SETON                                        60
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
      * DEATH REASON
      *
     C                   SELECT
     C     FLD           WHENEQ    'DFDRCD'
     C                   MOVE      *BLANK        XXDRCD
     C                   MOVE      *BLANK        XXDRDS
     C                   CALL      'HP510'
     C                   PARM                    XXDRCD
     C                   PARM                    XXDRDS
     C                   EXSR      $RRN1
     C     *IN97         IFEQ      *OFF
     C     XXDRCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXDRCD        DFDRCD
     C                   MOVEL     XXDRDS        DFDRDS
     C                   ENDIF                                                  IF SELECTED
     C                   SETON                                        8557
     C                   UPDATE    HP149S1
     C                   SETOFF                                       8557
      *
      * RESET THE SUBFILE RELATIVE RECORD NUMBER TO WHAT IT WAS BEFORE
      * THE USER TOOK F4 (IT WILL BE OUT-OF-SYNCH IF THE USER HAS
      * SELECTED A RECORD THUS CAUSING THE SUBFILE RECORD TO BE
      * RETRIEVED AND UPDATED.)  BUT, SET THE PAGE OF THE SUBFILE TO
      * BE DISPLAYED TO THE PAGE ON WHICH THE USER TOOK F4.
      *
     C                   Z-ADD     HDRR1         HDPAG1
     C                   ENDIF
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT
      *          THE FIRST SCREEN THAT HAS ERRORS ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $RRN1  - ROUTINE TO FIND/RETRIEVE THE SUBFILE RECORD TO UPDATE
      *          WHEN RETURNING FROM A SELECT PROGRAM ON SCREEN 1
      *---------------------------------------------------------------
      *
      * HDRR1 IS THE HIDDEN FIELD ASSOCIATED WITH THE KEYWORD SFLCSRRRN
      * ON THE CONTROL RECORD IN THE DSPF.
      * HDRRN1 IS THE VALUE ASSOCIATED WITH THE KEYWORD 'KSFILE' IN
      * THE F-SPECS FOR THE WORKSTATION.
      *
     C     $RRN1         BEGSR
      *
     C                   SETOFF                                       97
      *
     C     HDRR1         IFNE      0
     C                   Z-ADD     HDRR1         HDRRN1
     C     HDRRN1        CHAIN     HP149S1                            97
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * REJECTED HEAD WITH REASONS
      *
     C     K1P078        KLIST
     C                   KFLD                    C1MVSN
     C                   KFLD                    WKLNNO
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1MVSN
     C                   PARM                    WKLNNO
     C                   PARM                    C1FSCD
     C                   PARM                    C1FSNM
     C                   PARM                    C1HGCD
     C                   PARM                    C1RJHD
     C                   PARM                    RTNCD
      *
     C     *LIKE         DEFINE    RJLNNO        WKLNNO
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C     *LIKE         DEFINE    DFMODE        MODE                           SFL POSITION
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C                   MOVEL     NO            EDITFL            1
      *
      * ALPHA PARM FIELDS USED IN CALLS TO/FROM OTHER PROGRAMS
      *
     C     *LIKE         DEFINE    DRDRCD        XXDRCD
     C     *LIKE         DEFINE    DRDRDS        XXDRDS
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     09            WKPLIN            2 0          SFLPAG(0009)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
     C     *LIKE         DEFINE    COUNT         WKDIFF
     C     *LIKE         DEFINE    COUNT         WKRMDR
     C     *LIKE         DEFINE    COUNT         WKFLD
     C                   Z-ADD     0             COUNT             2 0
      *
      * DETERMINE THE INITIAL MODE--REVISE IF THERE ARE
      * ALREADY RECORDS FOR THIS MOVEMENT/LINE NUMBER; CREATE
      * IF THERE ARE NO RECORDS.
      *
     C     K1P078        CHAIN(N)  HSP078                             91
     C     *IN91         IFEQ      *OFF
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   ELSE
     C                   MOVEL     CREATE        MODE
     C                   MOVEL     CREATE        DFMODE
     C                   ENDIF
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
