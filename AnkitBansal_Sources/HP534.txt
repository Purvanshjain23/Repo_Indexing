      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:   HOG PRODUCTION
      * PROGRAM:  HP534
      * TITLE:    SELECT POSTED FEED DELIVERY TICKET
      * AUTHOR:   LEANNE FEDOR
      * CREATED:  04/08/94
      *
      * FUNCTION: THIS IS A SELECT FUNCTION WINDOW DISPLAY OF FEED
      *           DELIVERY TICKETS FOR A SPECIFIC FARM SITE
      *
      *         SELECTORS:     NONE
      *         POSITIONERS:   NONE
      *         RESTRICTORS:   FARM SITE
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/12/94  LEANNE FEDOR
      *           REMOVED THE FOLLOWING TIME FIELDS FROM THE FEED
      *           TICKET HEADER AND DETAIL FILE.
      *                 COSTED TIME
      *                 ALLOCATED TIME
      *                 G/L POST TIME
      *                 EOP POST TIME
      *
      * 04/19/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC
      *
      * 05/03/95  LEANNE FEDOR
      *           CHANGED SCREEN TITLE.
      *
      * 06/25/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'COST THROUGH SYSTEM FLAG'
      *           ADDED TO FEED TICKET HEADER.
      *
      * 01/30/01  LeAnne Fedor
      *           Recompile only.  Production type was removed from the feed ticket files.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 05/26/09  LeAnne Ramsey
      *           This is now only being called from our new Feed Adjustment Ticket program.
      *           So, we are changing it to display Posted Delivery Tickets for a Feed Mill
      *           Business Office instead of a Farm.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD534    CF   E             WORKSTN SFILE(HP534S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSJ037B   IF   E           K DISK    INFDS(DBFEED)
      * FEED TICKET HEADER + FEED TICKET STATUS CODES  (selects only posted tickets)
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *
      *---------------------------------------------------------------
      * DATA STRUCTURES FOR FLIPPING DATES
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      ****************************************************************
      * SUBROUTINES
      ****************************************************************
      *
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP534K1
     C                   EXFMT     HP534C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED A RECORD, SET THE ROUTINE TO
      * EXIT THIS SELECTION PROGRAM.  IF NO RECORD WAS SELECTED, THEN
      * SET TO REDISPLAY THE SCREEN OF AVAILABLE RECORDS.
      *
     C     XXRTNO        IFNE      *BLANK
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1 - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP534R1
     C                   WRITE     HP534R1
      *
     C                   CLEAR                   HP534S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP534C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FILE
      *
     C     key01         SETLL     HSJ037B
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ FEED DELIVERY TICKETS
      *
     C     key01         READE     HSJ037B                                82
      *
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVEL     FHTKNO        DFTKNO
      *
      * FLIP TICKET DATE FROM CCYYMMDD TO MMDDYY
      *
     C                   Z-ADD     FHTKDT        WKCYMD
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMDY         DFMDY
      *
     C                   WRITE     HP534S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVEL     YES           NORECS
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      *  CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      *  PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP534S1                            82
     C                   MOVEL     DFTKNO        XXRTNO
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY FOR FILE HSJ037B - FEED TICKET HEADER WITH STATUS CODES
      *
     C     key01         KLIST
     C                   KFLD                    XXFMBO
     C                   KFLD                    WKTRCD
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    XXFMBO
     C                   PARM                    XXFSCD
     C                   PARM                    XXRTNO            9
      *
     C     *LIKE         DEFINE    FHFMBO        XXFMBO
     C     *LIKE         DEFINE    FHFSCD        XXFSCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             ERROR             3 0          ERRORS
      *
      * SET UP THE KEY FIELD TO RETRIEVE ON THE DELIVERY TICKETS
      *
     C     *LIKE         DEFINE    FHTRCD        WKTRCD
     C                   MOVEL     'D'           WKTRCD
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     9             WKPLIN            2 0          SFLPAG(0009)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP534R2                                      DUMMY FMT
     C                   WRITE     HP534R1                                      REF WINDOW
     C                   ENDSR
      /EJECT
