// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POBEDFR
// ?Date: 14.08.2025 Time: 03:36:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?5/18/04 RMC PKTR01
// LCL.User Profile Name = JOB.*USER
LCL.User_Profile_Name = JOB.*USER;

EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
PARAMETER(LCL.User_Profile_Name);
PARAMETER('PDTOEF');
PARAMETER(NLL.Company_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Allow_Multi_Company);
PARAMETER(NLL.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 //?RMC 5/11/09 Rtv default company from user profile --
 //?  Override user code model company if it exists
 EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 PARAMETER(LCL.Company_Number);
 PARAMETER(PAR.User_Code_Model);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?User Profile Record Not found
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 // Execute function SET Message Queue Dest US.
 EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
 {
  C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
 }

 // Send completion message - 'Application access denied for user &1 in application area &2'
 MESSAGE(USR0810 *COMPLETION);
 MSGPARM(PAR.User_Profile_Name);
 MSGPARM(PAR.Application_Code);

 PGM.*Return_code = 'Y2U9999';

 RETURN;

 ENDIF;

 CASE;

 // IF PAR.User Code Model is equal to blank
 IF PAR.User_Code_Model = *BLANK;

 EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(LCL.Warehouse_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
 PARAMETER(PAR.User_Code_Model);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(LCL.Warehouse_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 // PAR.Warehouse Code = LCL.Warehouse Code
 PAR.Warehouse_Code = LCL.Warehouse_Code;

 //?Return code when not normal for Application Profile
 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 //?Return code when not normal for Application Profile
 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function SET Message Queue Dest US.
 EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
 {
  C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
 }

 // Send completion message - 'Application access denied for user &1 in application area &2'
 MESSAGE(USR0810 *COMPLETION);
 MSGPARM(PAR.User_Profile_Name);
 MSGPARM(PAR.Application_Code);

 PGM.*Return_code = 'Y2U9999';

 RETURN;

 ENDIF;

 //?Override company with User profile control's company if found
 CASE;

 // IF LCL.Company Number is not equal to zero
 IF LCL.Company_Number <> *ZERO;

 // PAR.Company Number = LCL.Company Number
 PAR.Company_Number = LCL.Company_Number;

 //?Get prod warehouse, if the appl got a warehouse
 CASE;

 // IF LCL.Warehouse Code is Not Blanks
 IF LCL.Warehouse_Code <> *BLANK;

 // Call program RTV Prod Whse for Co  XF.
 CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(LCL.Company_Number);

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(RTV Appl Whs Restrict  RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1959551;
PARAMETER(JOB.*USER);
PARAMETER(LCL.Application_WHS_Restrict);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile control

EXECUTE FUNCTION(Carrier Name DRV) TYPE(DRVFLD)                                 AC1582201;
PARAMETER(CTL.Carrier_Name_DRV);
PARAMETER(CTL.Carrier_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(PAR.Carrier_Name_DRV);
 PARAMETER(NLL.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

}


//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(RTV First Order Whse   RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1397882;
PARAMETER(RCD.Load_ID);
PARAMETER(1);
PARAMETER(RCD.USR_Warehouse_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV 1st Warehouse/Ctl  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1360958;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(WRK.TXT_field_not_needed);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(PAR.Trans_Contol_AS400_Plant);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 QUIT;

}


//?SEL: Load Confirm Status
CASE;

// IF DB1.Load Confirmed Sts is yes
IF DB1.Load_Confirmed_Sts = 'Y';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL: Warehouse Code
CASE;

// IF PAR.USR Warehouse Code is Not Blanks
IF PAR.USR_Warehouse_Code <> *BLANK;

CASE;

// IF RCD.USR Warehouse Code NE PAR.USR Warehouse Code
IF RCD.USR_Warehouse_Code <> PAR.USR_Warehouse_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

EXECUTE FUNCTION(RTV Co/Load ID         RT) TYPE(RTVOBJ) ARRAY(PAR_Co_Load_ID)  AC1582284;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Load_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 QUIT;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

EXECUTE FUNCTION(CRT Co/Load ID         CO) TYPE(CRTOBJ) ARRAY(PAR_Co_Load_ID)  AC1582281;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Load_ID);

ENDIF;

ENDIF;

ENDIF;

//?RECORD SELECTED
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

//?Rtv ship to city
EXECUTE FUNCTION(RTV Last Stop Consign  RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1377331;
PARAMETER(RCD.Load_ID);
PARAMETER(NLL.Ship_To_Customer);
PARAMETER(NLL.Ship_To_Name);
PARAMETER(NLL.Ship_To_Address_Line_1);
PARAMETER(NLL.Ship_To_Address_Line_2);
PARAMETER(NLL.Ship_To_Address_Line_3);
PARAMETER(RCD.USR_Load_Stop_10_Alpha);
PARAMETER(NLL.Ship_To_State_Code);
PARAMETER(NLL.Ship_To_Zip_Postal_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(RTV for B.O.L. Print   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1377319;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name);
 PARAMETER(PAR.Ship_To_Address_Line_1);
 PARAMETER(PAR.Ship_To_Address_Line_2);
 PARAMETER(PAR.Ship_To_Address_Line_3);
 PARAMETER(PAR.Ship_To_City);
 PARAMETER(PAR.Ship_To_State_Code);
 PARAMETER(PAR.Ship_To_Zip_Postal_Code);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


EXECUTE FUNCTION(RTV Co/Load ID         RT) TYPE(RTVOBJ) ARRAY(PAR_Co_Load_ID)  AC1582284;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Load_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 QUIT;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// RCD.USR SflSel Function = CND.*Copy
RCD.USR_SflSel_Function = 3;

ENDIF;

ENDIF;

//?CALC: Subfile control function fields

// PGM.*Reload subfile = CND.*NO
PGM.*Reload_subfile = 'N';

//?USER: Process subfile control (Pre-confirm)

// PGM.*Reload subfile = CND.*NO
PGM.*Reload_subfile = 'N';

//?CALC: Subfile record function fields

// PGM.*Reload subfile = CND.*NO
PGM.*Reload_subfile = 'N';

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.USR SflSel Function is *Copy
IF RCD.USR_SflSel_Function = '3';

EXECUTE FUNCTION(RTV Co/Load ID         RT) TYPE(RTVOBJ) ARRAY(PAR_Co_Load_ID)  AC1582284;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Load_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 QUIT;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

EXECUTE FUNCTION(CRT Co/Load ID         CO) TYPE(CRTOBJ) ARRAY(PAR_Co_Load_ID)  AC1582281;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Load_ID);

ENDIF;

ENDIF;

//?USER: Final processing (Pre-confirm)

CASE;

// IF CTL.Load Confirmed Contact is Blank
IF CTL.Load_Confirmed_Contact = *BLANK;

// Send error message - 'Load Contact is required.'
ERROR(USR2937);
MSGPARM(CTL.Load_Confirmed_Contact);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(CHG Load Confirmation  IF) TYPE(EXCINTFUN)                     AC1582708;
PARAMETER(CTL.Scheduled_Ship_Date);
PARAMETER(CTL.Carrier_Code);
PARAMETER(CTL.Load_Confirmed_Contact);
{
 //?Execute internal function

 EXECUTE FUNCTION(CHG Load Confirmation  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1582701;
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(PAR.Load_Confirmed_Contact);
 {
  //?USER: Processing if Data record not found

  PGM.*Return_code = *BLANK;

  RETURN;

  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Co/Load ID         RT) TYPE(RTVOBJ) ARRAY(PAR_Co_Load_ID)  AC1582284;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Load_ID);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   QUIT;

   //?USER: Process Data record

   // PGM.*Return code = CND.*Record already exists
   PGM.*Return_code = 'Y2U0003';

   QUIT;

  }

  CASE;

  // IF PGM.*Return code is *Record already exists
  IF PGM.*Return_code = 'Y2U0003';

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF DB1.Load Confirmed Sts is yes
  IF DB1.Load_Confirmed_Sts = 'Y';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(CHG Load Confirmation  CH) TYPE(CHGOBJ) FILE(OMFJCPP)          AC1582040;
  PARAMETER(DB1.Load_ID);
  PARAMETER('Y');
  PARAMETER(PAR.Load_Confirmed_Contact);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

   // DB1.Load Confirmation Time = DB1.Job Date
   DB1.Load_Confirmation_Time = DB1.Job_Date;

  }

  // Call program CRT Load/Order Chg Log XF.
  CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER('CONFRM');
  PARAMETER('TRF');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Company_Number);
  PARAMETER(*ZERO);

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  PGM.*Return_code = *BLANK;

  RETURN;

 }

}


ENDIF;

//?USER: Process subfile control (Post-confirm)

CASE;

// IF CTL.Load Confirmed Contact is Blank
IF CTL.Load_Confirmed_Contact = *BLANK;

// Send error message - 'Load Contact is required.'
ERROR(USR2937);
MSGPARM(CTL.Load_Confirmed_Contact);

ENDIF;

//?USER: Final processing (Post-confirm)

CASE;

// IF CTL.Load Confirmed Contact is Blank
IF CTL.Load_Confirmed_Contact = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

//?Confirm Loads
DO;

EXECUTE FUNCTION(CHG Load Confirmation  IF) TYPE(EXCINTFUN)                     AC1582708;
PARAMETER(CTL.Scheduled_Ship_Date);
PARAMETER(CTL.Carrier_Code);
PARAMETER(CTL.Load_Confirmed_Contact);
{
 //?Execute internal function

 EXECUTE FUNCTION(CHG Load Confirmation  RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1582701;
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(PAR.Load_Confirmed_Contact);
 {
  //?USER: Processing if Data record not found

  PGM.*Return_code = *BLANK;

  RETURN;

  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Co/Load ID         RT) TYPE(RTVOBJ) ARRAY(PAR_Co_Load_ID)  AC1582284;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Load_ID);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   QUIT;

   //?USER: Process Data record

   // PGM.*Return code = CND.*Record already exists
   PGM.*Return_code = 'Y2U0003';

   QUIT;

  }

  CASE;

  // IF PGM.*Return code is *Record already exists
  IF PGM.*Return_code = 'Y2U0003';

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF DB1.Load Confirmed Sts is yes
  IF DB1.Load_Confirmed_Sts = 'Y';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(CHG Load Confirmation  CH) TYPE(CHGOBJ) FILE(OMFJCPP)          AC1582040;
  PARAMETER(DB1.Load_ID);
  PARAMETER('Y');
  PARAMETER(PAR.Load_Confirmed_Contact);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

   // DB1.Load Confirmation Time = DB1.Job Date
   DB1.Load_Confirmation_Time = DB1.Job_Date;

  }

  // Call program CRT Load/Order Chg Log XF.
  CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
  PARAMETER(DB1.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER('CONFRM');
  PARAMETER('TRF');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Company_Number);
  PARAMETER(*ZERO);

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  PGM.*Return_code = *BLANK;

  RETURN;

 }

}


ENDDO;

ENDIF;

