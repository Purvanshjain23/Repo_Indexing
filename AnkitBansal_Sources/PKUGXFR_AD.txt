// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKUGXFR
// ?Date: 14.08.2025 Time: 02:52:55
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(PK0166 Reset HldOvrs  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1230290;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Kill_Date_Usr);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Rtv Validation Rules  RT) TYPE(RTVOBJ) FILE(PKBOREP)           AB1126427;
 PARAMETER(WRK.Carcass_Dbw_Min);
 PARAMETER(WRK.Carcass_Dbw_Max);
 PARAMETER(WRK.Carcass_Lgt_Min);
 PARAMETER(WRK.Carcass_Lgt_Max);
 PARAMETER(WRK.Lean_High_Min);
 PARAMETER(WRK.Lean_High_Max);
 PARAMETER(WRK.Lean_Low_Min);
 PARAMETER(WRK.Lean_Low_Max);
 PARAMETER(WRK.High_Yield_Min);
 PARAMETER(WRK.High_Yield_Max);
 PARAMETER(WRK.Low_Yield_Min);
 PARAMETER(WRK.Low_Yield_Max);
 PARAMETER(WRK.Head_Percent_Min);
 PARAMETER(WRK.Head_Percent_Max);
 PARAMETER(WRK.Head_Percent_Min);
 PARAMETER(WRK.Head_Percent_Max);
 PARAMETER(WRK.BackFat_High_Min);
 PARAMETER(WRK.BackFat_High_Max);
 PARAMETER(WRK.BackFat_Low_Min);
 PARAMETER(WRK.Backfat_Low_Max);
 PARAMETER(WRK.LoinEye_High_Min);
 PARAMETER(WRK.LoinEye_High_Max);
 PARAMETER(WRK.LoinEye_Low_Min);
 PARAMETER(WRK.LoinEye_Low_Max);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.EV Validation Code is Carcass has Double Weight
  IF DB1.EV_Validation_Code = 'CDB';

  //?Carcass double weight
  // PAR.Carcass Dbw Min = DB1.EV Minimum
  PAR.Carcass_Dbw_Min = DB1.EV_Minimum;

  // PAR.Carcass Dbw Max = DB1.EV Maximum
  PAR.Carcass_Dbw_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Carcass is Light Weight
  IF DB1.EV_Validation_Code = 'CLT';

  //?Carcass light weight
  // PAR.Carcass Lgt Min = DB1.EV Minimum
  PAR.Carcass_Lgt_Min = DB1.EV_Minimum;

  // PAR.Carcass Lgt Max = DB1.EV Maximum
  PAR.Carcass_Lgt_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Backfat is high
  IF DB1.EV_Validation_Code = 'BHI';

  //?backfat is high
  // PAR.BackFat High Min = DB1.EV Minimum
  PAR.BackFat_High_Min = DB1.EV_Minimum;

  // PAR.BackFat High Max = DB1.EV Maximum
  PAR.BackFat_High_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Backfat is Low
  IF DB1.EV_Validation_Code = 'BLW';

  //?Backfat is low
  // PAR.BackFat Low Min = DB1.EV Minimum
  PAR.BackFat_Low_Min = DB1.EV_Minimum;

  // PAR.Backfat Low Max = DB1.EV Maximum
  PAR.Backfat_Low_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Loineye is High
  IF DB1.EV_Validation_Code = 'LHI';

  //?loineye is high
  // PAR.LoinEye High Min = DB1.EV Minimum
  PAR.LoinEye_High_Min = DB1.EV_Minimum;

  // PAR.LoinEye High Max = DB1.EV Maximum
  PAR.LoinEye_High_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Loineye is Low
  IF DB1.EV_Validation_Code = 'LLW';

  //?loineye is low
  // PAR.LoinEye Low Min = DB1.EV Minimum
  PAR.LoinEye_Low_Min = DB1.EV_Minimum;

  // PAR.LoinEye Low Max = DB1.EV Maximum
  PAR.LoinEye_Low_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Percent Lean is high
  IF DB1.EV_Validation_Code = 'PLH';

  //?% Lean High
  // PAR.%Lean High Min = DB1.EV Minimum
  PAR.Lean_High_Min = DB1.EV_Minimum;

  // PAR.%Lean High Max = DB1.EV Maximum
  PAR.Lean_High_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Percent Lean is Low
  IF DB1.EV_Validation_Code = 'PLL';

  //?% Lean Low
  // PAR.%Lean Low Min = DB1.EV Minimum
  PAR.Lean_Low_Min = DB1.EV_Minimum;

  // PAR.%Lean Low Max = DB1.EV Maximum
  PAR.Lean_Low_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is #Head is < % Allowed
  IF DB1.EV_Validation_Code = 'HLP';

  //?Head < Percent
  // PAR.Head < Percent Min = DB1.EV Minimum
  PAR.Head_Percent_Min = DB1.EV_Minimum;

  // PAR.Head < Percent Max = DB1.EV Maximum
  PAR.Head_Percent_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is #Head is > % Allowed
  IF DB1.EV_Validation_Code = 'HHP';

  //?Head > Percent
  // PAR.Head > Percent Min = DB1.EV Minimum
  PAR.Head_Percent_Min = DB1.EV_Minimum;

  // PAR.Head > Percent Max = DB1.EV Maximum
  PAR.Head_Percent_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Yield Amount is High
  IF DB1.EV_Validation_Code = 'YHI';

  //?Yield High
  // PAR.High Yield Min = DB1.EV Minimum
  PAR.High_Yield_Min = DB1.EV_Minimum;

  // PAR.High Yield Max = DB1.EV Maximum
  PAR.High_Yield_Max = DB1.EV_Maximum;

  // IF DB1.EV Validation Code is Yield Amount is Low
  IF DB1.EV_Validation_Code = 'YLW';

  //?Yield Low
  // PAR.Low Yield Min = DB1.EV Minimum
  PAR.Low_Yield_Min = DB1.EV_Minimum;

  // PAR.Low Yield Max = DB1.EV Maximum
  PAR.Low_Yield_Max = DB1.EV_Maximum;

  ENDIF;

 }

 //?USER: Process Data record

 CASE;

 // IF DB1.TH Kill Date GT PAR.TH Kill Date
 IF DB1.TH_Kill_Date > PAR.TH_Kill_Date;

 QUIT;

 ENDIF;

 CASE;

 // IF DB1.TH Held Over is greater than 0
 IF DB1.TH_Held_Over > *ZERO;

 EXECUTE FUNCTION(PK0166 Reset HldOvr   CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1230238;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER('SLG');
 // Call program Bal/Val Tattoo        XF.
 CALL PROGRAM(Bal/Val Tattoo        XF) ('PKAAXFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Purchase_Date);
 PARAMETER(DB1.TH_Group_Reference);
 PARAMETER(DB1.TH_Live_Purchase_UOM);
 PARAMETER(DB1.TH_Live_Purchase_Price);
 PARAMETER(DB1.TH_Live_Gross_Amt);
 PARAMETER(DB1.TH_LIve_Net_Amt);
 PARAMETER(DB1.TH_Resale_UOM);
 PARAMETER(DB1.TH_Recalc_Live_Wgt_Yld);
 PARAMETER(DB1.TH_Pricing_Date);
 PARAMETER(DB1.TH_Resale_Spread_Sts);
 PARAMETER(DB1.TH_Dead_On_Arrival);
 PARAMETER(DB1.TH_Head_Received);
 PARAMETER(DB1.TH_Yard_Deads);
 PARAMETER(DB1.TH_Held_Over);
 PARAMETER(DB1.TH_Head_Condemned);
 PARAMETER(DB1.TH_Head_Killed);
 PARAMETER(DB1.TH_Head_Adds);
 PARAMETER(DB1.TH_Head_Accepted);
 PARAMETER(DB1.TH_Live_Wgt);
 PARAMETER(DB1.TH_Adj_Live_Wgt);
 PARAMETER(DB1.TH_Hot_Wgt);
 PARAMETER(DB1.TH_Tot_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Tot_Backfat_Inches);
 PARAMETER(DB1.TH_Tot_Light_Reflectance);
 PARAMETER(DB1.TH_Avg_Live_Wgt);
 PARAMETER(DB1.TH_Avg_Hot_Wgt);
 PARAMETER(DB1.TH_Avg_Light_Reflectance);
 PARAMETER(DB1.TH_Avg_Lean_Percent);
 PARAMETER(DB1.TH_Avg_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Avg_Backfat);
 PARAMETER(DB1.TH_Std_Yield_Percent);
 PARAMETER(DB1.TH_Actual_Yield);
 PARAMETER(DB1.TH_Adj_Actual_Yield);
 PARAMETER(DB1.TH_Yield_Difference);
 PARAMETER(DB1.TH_Recalc_Live_Wgt);
 PARAMETER(DB1.TH_CM_Market_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price_Amt);
 PARAMETER(DB1.TH_CM_Sort_Discount_Amt);
 PARAMETER(DB1.TH_CM_Yield_Gain_Loss_Amt);
 PARAMETER(DB1.TH_CM_Base_Carcass_Value);
 PARAMETER(DB1.TH_CM_LN_AddOn_Deduct_Amt);
 PARAMETER(DB1.TH_CM_Carcass_Gross_Amt);
 PARAMETER(DB1.TH_Deduction_Amt);
 PARAMETER(DB1.TH_Total_Net_WO_Adds);
 PARAMETER(DB1.TH_Carcass_Net_Amt);
 PARAMETER(DB1.TH_Additions_Amt);
 PARAMETER(DB1.TH_Payment_Gross);
 PARAMETER(DB1.Th_Payment_Net_Amt);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.TH_Freight_Amount);
 PARAMETER(DB1.TH_Accrual_Amount);
 PARAMETER(DB1.TH_Fixed_Cost_Amount);
 PARAMETER(DB1.TH_Calc_Net_Sts);
 PARAMETER(DB1.TH_Payment_Sts);
 PARAMETER(DB1.TH_Bal_to_Kill_Gen);
 PARAMETER(DB1.TH_Commission_A_P_Voucher);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_User_Error_Override);
 PARAMETER(DB1.TH_Held_Over_Record);
 PARAMETER(DB1.TH_Sex);
 PARAMETER(DB1.TH_Held_Ovr_Completed_Dte);
 PARAMETER(DB1.TH_Commission_Paid_Date);
 PARAMETER(DB1.TH_Actual_Check_Date);
 PARAMETER(DB1.TH_Shipped_Weight);
 PARAMETER(DB1.TH_Avg_Hot_Wgt_EXC_ADD);
 PARAMETER(DB1.TH_FFLI);
 PARAMETER(DB1.TH_Kill_Product_Value);
 PARAMETER(DB1.TH_Cut_Product_Value);
 PARAMETER(DB1.TH_Render_Product_Value);
 PARAMETER(DB1.TH_Head_Excluded);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Live_CWT);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Carc_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Live_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Carc_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Live_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Carc_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Live_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Carc_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Live_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Carc_CWT);
 PARAMETER(DB1.TH_CM_Gross_Live_CWT);
 PARAMETER(DB1.TH_CM_Gross_Carc_CWT);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Scale_Ticket_Sts);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.TH_HPS_Movement_Ref_#);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(DB1.TH_Hog_Class_Type);
 PARAMETER(DB1.TH_Posted_to_HPS_Flag);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(DB1.TH_Shift_Held_Over);
 PARAMETER(DB1.DF_Defect_Code);
 PARAMETER(DB1.THP_Process_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.HB_Buyer_Code);
 PARAMETER(DB1.GN_Genetic_Code);
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 PARAMETER(WRK.Carcass_Dbw_Min);
 PARAMETER(WRK.Carcass_Dbw_Max);
 PARAMETER(WRK.Carcass_Lgt_Min);
 PARAMETER(WRK.Carcass_Lgt_Max);
 PARAMETER(WRK.Lean_High_Min);
 PARAMETER(WRK.Lean_High_Max);
 PARAMETER(WRK.Lean_Low_Min);
 PARAMETER(WRK.Lean_Low_Max);
 PARAMETER(WRK.High_Yield_Min);
 PARAMETER(WRK.High_Yield_Max);
 PARAMETER(WRK.Low_Yield_Min);
 PARAMETER(WRK.Low_Yield_Max);
 PARAMETER(WRK.Head_Percent_Min);
 PARAMETER(WRK.Head_Percent_Max);
 PARAMETER(WRK.Head_Percent_Min);
 PARAMETER(WRK.Head_Percent_Max);
 PARAMETER(WRK.BackFat_High_Min);
 PARAMETER(WRK.BackFat_High_Max);
 PARAMETER(WRK.BackFat_Low_Min);
 PARAMETER(WRK.Backfat_Low_Max);
 PARAMETER(WRK.LoinEye_High_Min);
 PARAMETER(WRK.LoinEye_High_Max);
 PARAMETER(WRK.LoinEye_Low_Min);
 PARAMETER(WRK.LoinEye_Low_Max);
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*MISSING);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('N');
 PARAMETER(LCL.Balance_First_Day_USR);

 ENDIF;

}


