      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP4418
      * TITLE:       Specify Farm Health Status Listing Options
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/18/03
      *
      * FUNCTION: Allows user to enter listing options and submit job.
      *
      * NOTE:    This is a pop-up window program.  Please note that in window
      *          programs the record format containing the window definition
      *          must be written first.  So, we write the error message subfile
      *          control record first followed by the command line record format.
      *          This is opposite of the non-window programs.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4418   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp111    if   e           k disk
      *    Health codes
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parms
      *
     D xxhccd          s                   like(hchccd)
     D xxhcds          s                   like(hchcds)
     D xxaist          s                   like(hcaist)
     D xxhsfl          s              1
     D xxdesc          s             20
      *
     D xxfsbo          s                   like(fsfsbo)
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxalphfscd      s              5a
     D xxalphcell      s              2a
      *
     D xxynfl          s                   like(d1ynfl)
     D xxfcymd         s              8  0
     D xxtcymd         s              8  0
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      *  Set routine to display screen
      *
     C                   move      scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4418ec
     C                   write     hp4418k1
     C                   exfmt     hp4418r1
      *
      * Clear messages
     C                   exsr      $clmsg
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in08 = *on                                  F3-exit
     C                   exsr      $edit1
     C                   if        error = 0
     C                   movel     '08'          rtncd
     C                   eval      routne = exit
     C                   else
     C                   eval      routne = scrn1
     C                   endif
     C                   other
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *  1) show only last status
      *  2) from effective date
      *  3) to effective date
      *  4) health code
      *  5) health status flag
      *  6) cell
      *  7) farm site
      *
      *
     C                   exsr      $ynfl
     C                   exsr      $fmdy
     C                   exsr      $tmdy
     C                   exsr      $hccd
     C                   exsr      $hsfl
     C                   exsr      $cell
     C                   exsr      $fscd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   select
     C                   when      d1cell = 0
      *
     C                   when      d1cell < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate farm site
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * If user keyed a cell, then farm's cell must match user's cell.
      *
     C                   if        d1cell > 0 and fscell <> d1cell              If mismatch
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If mismatch
      *
     C                   endif                                                  If bad farm
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate 'show only last status' flag
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) Must be Yes or No
      *
     C     $ynfl         begsr
      *
     C                   select
     C                   when      d1ynfl <> yes and
     C                             d1ynfl <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
      *
     C                   when      d1ynfl = yes and
     C                             (d1fmdy <> 0 or d1tmdy <> 0)
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09204'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate From Effective Date
      *----------------------------------------------------------------
      *
     C     $fmdy         begsr
      *
     C                   z-add     0             xxfcymd
      *
     C                   select
     C                   when      d1tmdy = 0 and d1fmdy = 0
      *
     C                   when      d1tmdy <> 0 and d1fmdy = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09088'     mgid(e)
     C                   endif
      *
     C                   when      d1fmdy < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1fmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1fmdy        wkcymdiso
     C                   move      wkcymdiso     xxfcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate To Effective Date
      *----------------------------------------------------------------
      *
     C     $tmdy         begsr
      *
     C                   z-add     0             xxtcymd
      *
     C                   select
     C                   when      d1tmdy = 0 and d1fmdy = 0
      *
     C                   when      d1fmdy <> 0 and d1tmdy = 0
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09089'     mgid(e)
     C                   endif
      *
     C                   when      d1tmdy < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1tmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1tmdy        wkcymdiso
     C                   move      wkcymdiso     xxtcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      * To date cannot be earlier than from date.
      *
     C                   if        *in32 = *off and
     C                             *in33 = *off and
     C                             xxtcymd < xxfcymd
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09009'
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Health Code
      *----------------------------------------------------------------
      *
     C     $hccd         begsr
      *
      * Eliminate leading spaces
      *
     C                   eval      d1hccd = %triml(d1hccd)
      *
     C                   select
     C                   when      d1hccd = *blank
     C                   other
      *
     C     d1hccd        chain     hsp111                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00332'
     C                   clear                   mgw
     C                   movea     d1hccd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Health Status Flag
      *----------------------------------------------------------------
      *
     C     $hsfl         begsr
      *
     C                   select
     C                   when      d1hsfl = *blank
      *
     C                   when      d1hsfl <> '+' and d1hsfl <> '-'
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09203'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Show only last status flag
      *
     C                   select
     C                   when      fld = 'D1YNFL'
     C                   call      'HP522'
     C                   parm                    xxynfl
     C                   seton                                        50
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        d1ynfl
     C                   endif
      *
      * Health code
     C                   when      fld = 'D1HCCD'
     C                   call      'HP553'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxhccd
     C                   parm      *blank        xxhcds
     C                   seton                                        55
     C                   if        xxhccd <> *blank
     C                   move      xxhccd        d1hccd
     C                   endif
      *
      * Health status flag
      *
     C                   when      fld = 'D1HSFL'
     C                   call      'HP595'
     C                   parm      *blank        xxhsfl
     C                   parm      *blank        xxdesc
     C                   seton                                        56
     C                   if        xxhsfl <> *blank
     C                   move      xxhsfl        d1hsfl
     C                   endif
      *
      * Farm site
     C                   when      fld = 'D1FSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   eval      *in51 = *on
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    d1ynfl
     C                   parm                    d1fmdy
     C                   parm                    xxfcymd
     C                   parm                    d1tmdy
     C                   parm                    xxtcymd
     C                   parm                    d1hccd
     C                   parm                    d1hsfl
     C                   parm                    d1cell
     C                   parm                    d1fscd
     C                   parm                    rtncd
      *
      *
      * Key lists
      *   None
      *
      * Default to 'yes' the value for control field 'show only last status'
      *
     C                   move      yes           d1ynfl
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * This window logic keeps the screen in the calling program from being
      * cleared.
      *
     C                   write     assume
      *
     C                   endsr
      /eject
