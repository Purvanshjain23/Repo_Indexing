// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRKPVR
// ?Date: 14.08.2025 Time: 02:52:35
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

// LCL.Display Print Prompt  Usr = CND.Prompt is to be displayed
LCL.Display_Print_Prompt_Usr = 'Y';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.EA Company Number = PAR.CC Company Number
DTL.EA_Company_Number = PAR.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

// Call program Val Company Number    XF.
CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
PARAMETER(DTL.EA_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(LCL.Invalid_Y_N_USR);

//?USER: User defined action

CASE;

// IF LCL.Display Print Prompt  Usr is Prompt is to be displayed
IF LCL.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Hot Scale Upload Detail');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Date Alpha USR = CVTVAR(DTL.Date From USR)
LCL.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// LCL.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
LCL.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('PRTHTUPLDT');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('4 00 *NOLIST');
PARAMETER(*NO);

// Call program Zzz Hot Scl Upl Dtl   CL.
SBMJOB;
CALL PROGRAM(Zzz Hot Scl Upl Dtl   CL) ('PKRLUPC');
PARAMETER(DTL.EA_Company_Number);
PARAMETER(DTL.EA_Tattoo_Number);
PARAMETER(LCL.Date_Alpha_USR);
PARAMETER(LCL.Date_Alpha_Usr_2);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBEND;

ENDIF;

ENDIF;

