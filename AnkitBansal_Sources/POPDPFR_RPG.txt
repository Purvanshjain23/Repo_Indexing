     H/TITLE Prt FR/FZ SLS/Shipdate PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/23/10  Time  : 09:08:24
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FOMHSTPLCIF  E           K        DISK
      * RSQ : Sales History             Co/Type/Group/Class/Item
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPDJEREL1IF  E           K        DISK
      * RTV : Sales Route               Retrieval index
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FOPEXREL2IF  E           K        DISK
      * RTV : Order Types               Active order Types
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FPDL8CPL7IF  E           K        DISK
      * RSQ : Order Inv Allocation      Co/Order/Item/Whs/Lot/Pr
      *
     FOMHSTPM6IF  E           K        DISK
      * RSQ : Sales History             Co/Ord/Itm/Whs
      *
     FPOPDPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt FR/FZ SLS/Shipdate PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
     I@HSTPZN
      * Sales History             Co/Ord/Itm/Whs
      * Renamed input format fields
     I              F4AIC3                          WAAIC3
     I              F4C4NB                          WAC4NB
     I              F4DPNB                          WADPNB
     I              F4UENB                          WAUENB
     I              F4MONA                          WAMONA
     I              F4RJCD                          WARJCD
     I              F4RKCD                          WARKCD
     I              F4GPTX                          WAGPTX
     I              F4ABTX                          WAABTX
     I              F4KXCD                          WAKXCD
     I              F4BOCD                          WABOCD
     I              F4BTC7                          WABTC7
     I              F4ANC7                          WAANC7
     I              F4AQTX                          WAAQTX
     I              F4BKC7                          WABKC7
     I              F4BRTX                          WABRTX
     I              F4HNNA                          WAHNNA
     I              F4DBCD                          WADBCD
     I              F4CKTX                          WACKTX
     I              F4BCNA                          WABCNA
     I              F4A0DT                          WAA0DT
     I              F4ACDT                          WAACDT
     I              F4R4CD                          WAR4CD
     I              F4R5CD                          WAR5CD
     I              F4BFCD                          WABFCD
     I              F4Q4CD                          WAQ4CD
     I              F4AQCD                          WAAQCD
     I              F4TBNB                          WATBNB
     I              F4BZNA                          WABZNA
     I              F4RLCD                          WARLCD
     I              F4JNCD                          WAJNCD
     I              F4Q2CD                          WAQ2CD
     I              F4U2ST                          WAU2ST
     I              F4ATIN                          WAATIN
     I              F4T3NB                          WAT3NB
     I              F4RSRN                          WARSRN
     I              F4ORIT                          WAORIT
     I              F4AJCD                          WAAJCD
     I              F4AVQT                          WAAVQT
     I              F4D0WG                          WAD0WG
     I              F4CCQT                          WACCQT
     I              F4AUWG                          WAAUWG
     I              F4AGCD                          WAAGCD
     I              F4AKPR                          WAAKPR
     I              F4AUPR                          WAAUPR
     I              F4CRCD                          WACRCD
     I              F4A5DT                          WAA5DT
     I              F4AWDT                          WAAWDT
     I              F4HDDT                          WAHDDT
     I              F4AGCS                          WAAGCS
     I              F4AQCS                          WAAQCS
     I              F4AVWG                          WAAVWG
     I              F4AYVA                          WAAYVA
     I              F4AMST                          WAAMST
     I              F4ANST                          WAANST
     I              F4VAST                          WAVAST
     I              F4L6NB                          WAL6NB
     I              F4UMCD                          WAUMCD
     I              F4HCDT                          WAHCDT
     I              F4ESNB                          WAESNB
     I              F4ETNB                          WAETNB
     I              F4BZNB                          WABZNB
     I              F4EXQT                          WAEXQT
     I              F4BYWG                          WABYWG
     I              F4S5NB                          WAS5NB
     I              F4MAVA                          WAMAVA
     I              F4KDVA                          WAKDVA
     I              F4USVA                          WAUSVA
     I              F4UTVA                          WAUTVA
     I              F4A4WG                          WAA4WG
     I              F4CKNB                          WACKNB
     I              F4BMST                          WABMST
     I              F4R8NB                          WAR8NB
     I              F4RMCD                          WARMCD
     I              F4BZPR                          WABZPR
     I              F4RDCD                          WARDCD
     I              F4Q7CD                          WAQ7CD
     I              F4EXDT                          WAEXDT
     I              F4LQCD                          WALQCD
     I              F4HICD                          WAHICD
     I              F4RBCD                          WARBCD
     I              F4RGNB                          WARGNB
     I              F4RHNB                          WARHNB
     I              F4RINB                          WARINB
     I              F4R1NB                          WAR1NB
     I              F4CONB                          WACONB
     I              F4CEST                          WACEST
     I              F4GNDT                          WAGNDT
     I              F4RMNB                          WARMNB
     I              F4AODT                          WAAODT
     I              F4LLCD                          WALLCD
     I              F4LMCD                          WALMCD
     I              F4SKNB                          WASKNB
     I              F4SLNB                          WASLNB
     I              F4SMNB                          WASMNB
     I              F4G7NA                          WAG7NA
     I              F4ONVA                          WAONVA
     I              F4N0CD                          WAN0CD
     I              F4B4NB                          WAB4NB
     I              F4B5NB                          WAB5NB
     I              F4N1CD                          WAN1CD
     I              F4GIDT                          WAGIDT
     I              F4Z1ST                          WAZ1ST
     I              F4ULVA                          WAULVA
     I              F4UNVA                          WAUNVA
     I              F4UOVA                          WAUOVA
     I              F4UPVA                          WAUPVA
     I              F4UQVA                          WAUQVA
     I              F4SDCD                          WASDCD
     I              F4QZCD                          WAQZCD
     I              F4XWST                          WAXWST
     I              F4T9CD                          WAT9CD
     I              F4UBCD                          WAUBCD
     I              F4CFC7                          WACFC7
     I              F4X1CD                          WAX1CD
     I              F4GASX                          WAGASX
     I              F4DUPR                          WADUPR
     I              F4B6VL                          WAB6VL
     I              F4IANX                          WAIANX
     I              F4IBNX                          WAIBNX
     I              F4RPCD                          WARPCD
     I              F4NYDT                          WANYDT
     I              F4BZTM                          WABZTM
     I              F4Z4NB                          WAZ4NB
     I              F4XACD                          WAXACD
     I              F4OANA                          WAOANA
     I              F4OKTX                          WAOKTX
     I              F4K4TX                          WAK4TX
     I              F4NBBO                          WANBBO
     I              F4OCFR                          WAOCFR
     I              F4C0C7                          WAC0C7
     I              F4A1AA                          WAA1AA
     I              F4VEST                          WAVEST
     I              F4A5PR                          WAA5PR
     I              F4CDPR                          WACDPR
     I              F4D0PR                          WAD0PR
     I              F4D0VL                          WAD0VL
     I              F4IRSX                          WAIRSX
     I              F4CEVL                          WACEVL
     I              F4ISSX                          WAISSX
     I              F4ITSX                          WAITSX
     I              F4IUSX                          WAIUSX
     I              F4OHDT                          WAOHDT
     I              F4D9PR                          WAD9PR
     I              F4CFVL                          WACFVL
     I              F4UVST                          WAUVST
     I              F4UWST                          WAUWST
     I              F4UXST                          WAUXST
     I              F4AATM                          WAAATM
     I              F4AYNA                          WAAYNA
     I              F4A0NA                          WAA0NA
     I              F4AXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  USR From Date
     I                                    P   1   40P1BDDT
     IP2PARM      DS
      * I :  USR To Date
     I                                    P   1   40P2FDDT
     IP3PARM      DS
      * I :  USR Product Str Type
     I                                    P   1   20P3WCNB
     IP4PARM      DS
      * I :  USR Product Str Group
     I                                    P   1   20P4Z3NB
     IP5PARM      DS
      * I :  USR Product Struct Class
     I                                    P   1   20P5L5CD
     IP6PARM      DS
      * N :  Billing Activity Type
     I                                        1   1 P6OBST
     IP7PARM      DS
      * FLD: *Arrays
      * I :  USR Sales Realiz. Flag
     I                                        1   1 P7JHST
      * I :  USR Active Flag
     I                                        2   2 P7W2ST
      * I :  USR Detail or Summary
     I                                        3   3 P7STST
      * I :  Export Sales
     I                                        4   4 P7STES
      * I :  Sales Route Code
     I                                        5   7 P7R4CD
     IP8PARM      DS
      * FLD: Company Item
      * N :  U/M - Primary
     I                                        1   2 P8ADCD
      * N :  Conversion Factor 1
     I                                    P   3   74P8AWPC
      * N :  Operation Factor 1
     I                                        8   8 P8LXST
      * N :  U/M - Second
     I                                        9  10 P8AECD
      * N :  Conversion Factor 2
     I                                    P  11  154P8AXPC
      * N :  Operation Factor 2
     I                                       16  16 P8LYST
      * N :  U/M - Third
     I                                       17  18 P8AFCD
      * N :  U/M - Pricing
     I                                       19  20 P8AICD
      * N :  Unit Weight
     I                                    P  21  262P8AIWG
      * N :  Standard Overage/Underage
     I                                    P  27  324P8BMPR
      * N :  Commodity Price Group
     I                                       33  39 P8LRCD
      * N :  Item Pricing Operation
     I                                       40  40 P8U9ST
      * N :  Item Pricing Constant
     I                                    P  41  464P8CMCO
      * N :  Print on Realization Rpt
     I                                       47  48 P8X6ST
     IP9PARM      DS
      * FLD: *Arrays
      * I :  Warehouse Type
     I                                        1   2 P9WPST
      * I :  Warehouse Code
     I                                        3   5 P9AJCD
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1BDDT    PARM           WP0001  70       USR From Date
     C           P2FDDT    PARM           WP0002  70       USR To Date
     C           P3WCNB    PARM           WP0003  30       USR Product Str
     C           P4Z3NB    PARM           WP0004  30       USR Product Str
     C           P5L5CD    PARM           WP0005  30       USR Product Str
     C           P7JHST    PARM           WP0006  1        USR Sales Reali
     C           P7W2ST    PARM           WP0007  1        USR Active Flag
     C           P7STST    PARM           WP0008  1        USR Detail or S
     C           P7STES    PARM           WP0009  1        Export Sales
     C           P7R4CD    PARM           WP0010  3        Sales Route Cod
     C           P9WPST    PARM           WP0011  2        Warehouse Type
     C           P9AJCD    PARM           WP0012  3        Warehouse Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt FR/FZ SLS/Shipdate PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$MENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt FR/FZ SLS/Shipdate PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@HSTPMQ                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       WUGGST           USR Display fie
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Shipped Item Co
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CAIC3           Company Number
     C                     MOVEL*BLANK    $CAGTX           USR Company Nam
     C                     Z-ADD*ZERO     $CBDDT           USR From Date
     C                     Z-ADD*ZERO     $CFDDT           USR To Date
     C                     MOVEL*BLANK    $CD4ST           USR Flag 1
     C                     MOVEL*BLANK    $CAJCD           Warehouse Code
     C                     MOVEL*BLANK    $CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    $CSTES           Export Sales
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
     C                     MOVEL*BLANK    $CR4CD           Sales Route Cod
     C                     MOVEL*BLANK    $CMZNA           Sales Route Des
     C                     MOVEL*BLANK    $CJHST           USR Sales Reali
     C                     MOVEL*BLANK    $CJUNA           USR Description
     C                     Z-ADD*ZERO     $CWCNB           USR Product Str
     C                     MOVEL*BLANK    $CDCTX           Item Structure
     C                     Z-ADD*ZERO     $CZ3NB           USR Product Str
     C                     MOVEL*BLANK    $CDDTX           Item Structure
     C                     Z-ADD*ZERO     $CL5CD           USR Product Str
     C                     MOVEL*BLANK    $CDETX           Item Structure
     C                     MOVEL*BLANK    $CWPST           Warehouse Type
     C                     MOVEL*BLANK    $CHNTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDF4AIC3    $DAIC3           Company Number
     C                     MOVEL*BLANK    $DAGTX           USR Company Nam
      * Load related totals format
     C                     Z-ADD*ZERO     $LX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $LT2VA           USR Market Valu
     C                     Z-ADDF4AIC3    $LAIC3           Company Number
     C                     Z-ADD*ZERO     $LQSQT           Qty Produced SU
     C                     Z-ADD*ZERO     $LFNWG           Weight Billed S
     C                     Z-ADD*ZERO     $LU4VA           Total Order Val
     C                     Z-ADD*ZERO     $LXXVA           Extended amount
     C                     Z-ADD*ZERO     $LW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $LCDWG           USR Weight Accu
     C                     Z-ADDF4USVA    $LUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $LULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $LKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $LBYWG           Weight Billed
     C                     Z-ADDF4EXQT    $LEXQT           Quantity Billed
     C                     Z-ADD*ZERO     $LGFQT           USR Qty Billed
     C                     Z-ADDF4UTVA    $LUTVA           Standard Overag
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $KX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $KT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $KCMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $KAIC3           Company Number
     C                     Z-ADDF4UTVA    $KUTVA           Standard Overag
     C                     Z-ADDF4RGNB    $KRGNB           Item Structure
     C                     Z-ADD*ZERO     $KQSQT           Qty Produced SU
     C                     Z-ADD*ZERO     $KDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $KD3PC           Market Price US
     C                     Z-ADD*ZERO     $KXTVA           Variance amount
     C                     Z-ADD*ZERO     $KFNWG           Weight Billed S
     C                     Z-ADD*ZERO     $KU4VA           Total Order Val
     C                     Z-ADDF4AYVA    $KAYVA           Extended Amount
     C                     Z-ADD*ZERO     $KXXVA           Extended amount
     C                     Z-ADD*ZERO     $KIFNX           Price * Weight
     C                     Z-ADD*ZERO     $KIGNX           Price * Weight
     C                     MOVEL*BLANK    $KJNNA           USR Description
     C                     Z-ADD*ZERO     $KW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $KCDWG           USR Weight Accu
     C                     Z-ADDF4USVA    $KUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $KULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $KKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $KBYWG           Weight Billed
     C                     Z-ADD*ZERO     $KGFQT           USR Qty Billed
     C                     Z-ADDF4EXQT    $KEXQT           Quantity Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $JX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $JT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $JCMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $JAIC3           Company Number
     C                     Z-ADDF4UTVA    $JUTVA           Standard Overag
     C                     Z-ADDF4RGNB    $JRGNB           Item Structure
     C                     Z-ADDF4RHNB    $JRHNB           Item Structure
     C                     Z-ADD*ZERO     $JQSQT           Qty Produced SU
     C                     Z-ADD*ZERO     $JDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $JD3PC           Market Price US
     C                     Z-ADD*ZERO     $JXTVA           Variance amount
     C                     Z-ADD*ZERO     $JFNWG           Weight Billed S
     C                     Z-ADD*ZERO     $JU4VA           Total Order Val
     C                     Z-ADDF4AYVA    $JAYVA           Extended Amount
     C                     Z-ADD*ZERO     $JXXVA           Extended amount
     C                     Z-ADD*ZERO     $JIFNX           Price * Weight
     C                     Z-ADD*ZERO     $JIGNX           Price * Weight
     C                     Z-ADD*ZERO     $JW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $JCDWG           USR Weight Accu
     C                     Z-ADDF4USVA    $JUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $JULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $JKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $JBYWG           Weight Billed
     C                     Z-ADDF4EXQT    $JEXQT           Quantity Billed
     C                     Z-ADD*ZERO     $JGFQT           USR Qty Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $IX8VA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $IT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $ICMPR           USR Market Valu
     C                     Z-ADDF4AIC3    $IAIC3           Company Number
     C                     Z-ADDF4UTVA    $IUTVA           Standard Overag
     C                     Z-ADDF4RGNB    $IRGNB           Item Structure
     C                     Z-ADDF4RHNB    $IRHNB           Item Structure
     C                     Z-ADDF4RINB    $IRINB           Item Structure
     C                     Z-ADD*ZERO     $IQSQT           Qty Produced SU
     C                     Z-ADD*ZERO     $IDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $ID3PC           Market Price US
     C                     Z-ADDF4AVQT    $IAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     $IXTVA           Variance amount
     C                     Z-ADD*ZERO     $IW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $ICDWG           USR Weight Accu
     C                     Z-ADDF4USVA    $IUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $IULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $IKDVA           Billing Detail
     C                     Z-ADD*ZERO     $IGFQT           USR Qty Billed
     C                     Z-ADDF4BYWG    $IBYWG           Weight Billed
     C                     Z-ADD*ZERO     $IFNWG           Weight Billed S
     C                     Z-ADD*ZERO     $IU4VA           Total Order Val
     C                     Z-ADD*ZERO     $IXXVA           Extended amount
     C                     Z-ADD*ZERO     $IIFNX           Price * Weight
     C                     Z-ADD*ZERO     $IIGNX           Price * Weight
     C                     Z-ADDF4AYVA    $IAYVA           Extended Amount
     C                     Z-ADDF4EXQT    $IEXQT           Quantity Billed
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $HX8VA           FOB Gross Amoun
     C                     Z-ADDF4AIC3    $HAIC3           Company Number
     C                     Z-ADDF4S5NB    $HS5NB           Shipped Item Co
     C                     MOVEL*BLANK    $HCETX           Item Identifier
     C                     Z-ADD*ZERO     $HQPQT           Qty Produced
     C                     Z-ADD*ZERO     $HDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $HD3PC           Market Price US
     C                     Z-ADD*ZERO     $HCPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $HU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $HXTVA           Variance amount
     C                     Z-ADD*ZERO     $HW4NB           USR Billing Dtl
     C                     Z-ADD*ZERO     $HCDWG           USR Weight Accu
     C                     Z-ADDF4ULVA    $HULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $HKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $HBYWG           Weight Billed
     C                     Z-ADD*ZERO     $HLBQT           Net Dollars
     C                     Z-ADDF4AYVA    $HAYVA           Extended Amount
     C                     Z-ADD*ZERO     $HIENX           Price * Weight
     C                     Z-ADD*ZERO     $HIHNX           Price * Weight
     C                     Z-ADD*ZERO     $HGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $HORNB           FOB Gross Amoun
     C                     Z-ADD*ZERO     $HH4WG           USR Weight Accu
     C                     Z-ADD*ZERO     $HT2VA           USR Market Valu
     C                     Z-ADD*ZERO     $HCMPR           USR Market Valu
     C                     Z-ADDF4UTVA    $HUTVA           Standard Overag
     C                     Z-ADDF4USVA    $HUSVA           FOB Gross Amoun
     C                     Z-ADDF4EXQT    $HEXQT           Quantity Billed
     C                     Z-ADDF4RGNB    $HRGNB           Item Structure
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDF4AIC3    $EAIC3           Company Number
     C                     Z-ADDF4C4NB    $EC4NB           Order Number
     C                     MOVELF4ABTX    $EABTX           Alpha Search
     C                     MOVELF4BOCD    $EBOCD           Type Code
     C                     Z-ADDF4BTC7    $EBTC7           Parent Customer
     C                     Z-ADDF4ANC7    $EANC7           A/R Customer Nu
     C                     MOVELF4AQTX    $EAQTX           A/R Customer Na
     C                     MOVELF4BRTX    $EBRTX           Ship To Name
     C                     MOVELF4HNNA    $EHNNA           Ship To City
     C                     MOVELF4CKTX    $ECKTX           Ship To Zip/Pos
     C                     MOVELF4KXCD    $EKXCD           Country Code
     C                     MOVELF4BCNA    $EBCNA           Customer Purcha
     C                     Z-ADDF4A0DT    $EA0DT           Order Date
     C                     Z-ADDF4ACDT    $EACDT           Cancel Date
     C                     MOVELF4R4CD    $ER4CD           Sales Route Cod
     C                     MOVELF4R5CD    $ER5CD           Original Salesp
     C                     MOVELF4BFCD    $EBFCD           Manager Level C
     C                     MOVELF4Q4CD    $EQ4CD           VP Level Code
     C                     MOVELF4AQCD    $EAQCD           Terms Code
     C                     MOVELF4BZNA    $EBZNA           Carrier Code
     C                     MOVELF4JNCD    $EJNCD           Order Type - Sa
     C                     MOVELF4Q2CD    $EQ2CD           Shipping Method
     C                     MOVELF4U2ST    $EU2ST           Export Status
     C                     Z-ADDF4ATIN    $EATIN           Attach to Invoi
     C                     Z-ADDF4T3NB    $ET3NB           Attach to Order
     C                     Z-ADDF4RSRN    $ERSRN           Resell Referenc
     C                     Z-ADDF4ORIT    $EORIT           Original Item
     C                     Z-ADDF4S5NB    $ES5NB           Shipped Item Co
     C                     Z-ADDF4BKC7    $EBKC7           Ship To Custome
     C                     MOVEL*BLANK    $EJUNA           USR Description
     C                     MOVELF4DBCD    $EDBCD           Ship To State C
     C                     MOVEL*BLANK    $EAYTX           Customer Name
     C                     MOVELF4AJCD    $EAJCD           Warehouse Code
     C                     Z-ADDF4AVQT    $EAVQT           Quantity Ordere
     C                     Z-ADDF4D0WG    $ED0WG           Weight Ordered
     C                     MOVELF4AGCD    $EAGCD           U/M - Ordered
     C                     Z-ADDF4AKPR    $EAKPR           Unit Price
     C                     Z-ADDF4AUPR    $EAUPR           Unit Price Orde
     C                     MOVELF4CRCD    $ECRCD           U/M - Base Pric
     C                     Z-ADDF4A5DT    $EA5DT           Requested Ship
     C                     Z-ADDF4AWDT    $EAWDT           Invoice Date
     C                     Z-ADDF4HDDT    $EHDDT           Deadline Depart
     C                     Z-ADDF4AGCS    $EAGCS           Unit Cost Per P
     C                     Z-ADDF4AQCS    $EAQCS           Unit Cost Prici
     C                     Z-ADDF4AVWG    $EAVWG           Unit Weight Ord
     C                     MOVELF4AMST    $EAMST           Affect Inventor
     C                     MOVELF4ANST    $EANST           Affect Sales Do
     C                     MOVELF4VAST    $EVAST           Affect Sales Pn
     C                     Z-ADDF4L6NB    $EL6NB           Contract Number
     C                     MOVELF4UMCD    $EUMCD           Export Country
     C                     Z-ADDF4HCDT    $EHCDT           LD Arrival Date
     C                     Z-ADDF4CCQT    $ECCQT           Quantity Schedu
     C                     Z-ADDF4AUWG    $EAUWG           Weight Schedule
     C                     Z-ADDF4ESNB    $EESNB           Accounting Year
     C                     Z-ADDF4ETNB    $EETNB           Accounting Peri
     C                     Z-ADDF4BZNB    $EBZNB           OM Week
     C                     Z-ADDF4MAVA    $EMAVA           Billing Detail
     C                     Z-ADDF4A4WG    $EA4WG           Tare Weight Tot
     C                     Z-ADDF4CKNB    $ECKNB           G/L Document Nu
     C                     MOVELF4BMST    $EBMST           G/L Update Stat
     C                     Z-ADDF4R8NB    $ER8NB           Shipping Compan
     C                     MOVELF4RMCD    $ERMCD           Order Detail Re
     C                     Z-ADDF4BZPR    $EBZPR           Price Overage O
     C                     MOVELF4RDCD    $ERDCD           Date Method Cod
     C                     MOVELF4Q7CD    $EQ7CD           Price Method Co
     C                     Z-ADDF4RGNB    $ERGNB           Item Structure
     C                     Z-ADDF4RHNB    $ERHNB           Item Structure
     C                     Z-ADDF4RINB    $ERINB           Item Structure
     C                     Z-ADDF4R1NB    $ER1NB           Rated Freight
     C                     Z-ADDF4CONB    $ECONB           Invoice Number
     C                     MOVELF4CEST    $ECEST           Invoice Suffix
     C                     Z-ADDF4DPNB    $EDPNB           Order Sequence
     C                     Z-ADDF4GNDT    $EGNDT           Actual Shipped
     C                     Z-ADDF4UENB    $EUENB           Order Secondary
     C                     MOVELF4MONA    $EMONA           A/R City
     C                     MOVELF4RJCD    $ERJCD           A/R State
     C                     MOVELF4RKCD    $ERKCD           A/R County Code
     C                     MOVELF4GPTX    $EGPTX           A/R Zip/Postal
     C                     Z-ADDF4RMNB    $ERMNB           Load ID
     C                     Z-ADDF4AODT    $EAODT           Scheduled Ship
     C                     Z-ADD*ZERO     $ECPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $EU7VA           USR Amount Rema
     C                     Z-ADD*ZERO     $EXTVA           Variance amount
     C                     Z-ADD*ZERO     $EW4NB           USR Billing Dtl
     C                     Z-ADDF4USVA    $EUSVA           FOB Gross Amoun
     C                     Z-ADDF4ULVA    $EULVA           Absorbed Freigh
     C                     Z-ADDF4KDVA    $EKDVA           Billing Detail
     C                     Z-ADDF4BYWG    $EBYWG           Weight Billed
     C                     Z-ADD*ZERO     $EJOVA           USR Adjustments
     C                     Z-ADD*ZERO     $ECDWG           USR Weight Accu
     C                     Z-ADDF4TBNB    $ETBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     $EC0PC           USR Percent Wor
     C                     Z-ADD*ZERO     $EGFQT           USR Qty Billed
     C                     MOVELF4RLCD    $ERLCD           Order Header Re
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     Z-ADDF4UTVA    $EUTVA           Standard Overag
     C                     Z-ADDF4EXQT    $EEXQT           Quantity Billed
     C                     MOVELF4LLCD    $ELLCD           Packaging Code
     C                     MOVELF4LMCD    $ELMCD           Item Market Cod
     C                     Z-ADDF4SKNB    $ESKNB           Agrimetrics gro
     C                     Z-ADDF4SLNB    $ESLNB           Agrimetrics pac
     C                     Z-ADDF4SMNB    $ESMNB           Agrimetrics gra
     C                     Z-ADDF4EXDT    $EEXDT           Market Pricing
     C                     MOVELF4LQCD    $ELQCD           Commodity Marke
     C                     MOVELF4HICD    $EHICD           Quality Level
     C                     MOVELF4RBCD    $ERBCD           Item Level
     C                     MOVELF4G7NA    $EG7NA           Order Desc. Lin
     C                     Z-ADDF4ONVA    $EONVA           Actual Freight
     C                     MOVELF4N0CD    $EN0CD           Item Type Code
     C                     Z-ADDF4B4NB    $EB4NB           PM R/M Type Cod
     C                     Z-ADDF4B5NB    $EB5NB           PM Line Number
     C                     MOVELF4N1CD    $EN1CD           SH Unused (was
     C                     Z-ADDF4GIDT    $EGIDT           Pricing Date Us
     C                     MOVELF4Z1ST    $EZ1ST           Modified Flag
     C                     Z-ADDF4UNVA    $EUNVA           Ledgrd Trd Fund
     C                     Z-ADDF4UOVA    $EUOVA           Commission Amou
     C                     Z-ADDF4UPVA    $EUPVA           Financials Amou
     C                     Z-ADDF4UQVA    $EUQVA           Financials Amou
     C                     MOVELF4SDCD    $ESDCD           Group for Packa
     C                     MOVELF4QZCD    $EQZCD           Base/Conv/Loss
     C                     MOVELF4XWST    $EXWST           Variety/Rendere
     C                     MOVELF4T9CD    $ET9CD           Customer Group
     C                     MOVELF4UBCD    $EUBCD           Customer Group
     C                     Z-ADDF4CFC7    $ECFC7           Order Group Cod
     C                     MOVELF4X1CD    $EX1CD           Shipping Zone C
     C                     MOVELF4GASX    $EGASX           Invoice Price T
     C                     Z-ADDF4DUPR    $EDUPR           Invoice Unit Pr
     C                     Z-ADDF4B6VL    $EB6VL           Invoice Extende
     C                     Z-ADDF4IANX    $EIANX           Req Shipping Te
     C                     Z-ADDF4IBNX    $EIBNX           Actual Shipping
     C                     MOVELF4RPCD    $ERPCD           Age Code
     C                     Z-ADDF4NYDT    $ENYDT           Req Delivery Da
     C                     Z-ADDF4BZTM    $EBZTM           Req Delivery Ti
     C                     Z-ADDF4Z4NB    $EZ4NB           MPC Number
     C                     MOVELF4XACD    $EXACD           Shipping Line
     C                     MOVELF4OANA    $EOANA           Port Delv Termi
     C                     MOVELF4OKTX    $EOKTX           Port City
     C                     MOVELF4K4TX    $EK4TX           Vessel Name
     C                     MOVELF4NBBO    $ENBBO           Booking Number
     C                     Z-ADDF4OCFR    $EOCFR           Load Total Frei
     C                     Z-ADDF4C0C7    $EC0C7           Claim Number
     C                     Z-ADDF4A1AA    $EA1AA           Ham Group Numbe
     C                     MOVELF4VEST    $EVEST           Palletize
     C                     MOVELF4UVST    $EUVST           EDI Status 1
     C                     MOVELF4UWST    $EUWST           EDI Status 2
     C                     MOVELF4UXST    $EUXST           EDI Status 3
     C                     Z-ADDF4AATM    $EAATM           Job Time
     C                     MOVELF4AYNA    $EAYNA           User Id
     C                     MOVELF4A0NA    $EA0NA           Job Name
     C                     Z-ADDF4AXDT    $EAXDT           Job Date
     C                     Z-ADDF4A5PR    $EA5PR           Commodity Marke
     C                     Z-ADDF4CDPR    $ECDPR           Market Value
     C                     Z-ADDF4D0PR    $ED0PR           Default Cmdty M
     C                     Z-ADDF4D0VL    $ED0VL           Raw Material Co
     C                     MOVELF4IRSX    $EIRSX           Sales Expense P
     C                     Z-ADDF4CEVL    $ECEVL           Sales Expense T
     C                     MOVELF4ISSX    $EISSX           Data Mart Proce
     C                     MOVELF4ITSX    $EITSX           LH Load Type
     C                     MOVELF4IUSX    $EIUSX           Order TF Exempt
     C                     Z-ADDF4OHDT    $EOHDT           LD Sail Date
     C                     Z-ADDF4D9PR    $ED9PR           NonLedgrd TrdFn
     C                     Z-ADDF4CFVL    $ECFVL           HST Item Target
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Fr/Fz Impact ShDt PO
     C                     EXSR UASUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
     C                     ADD  $EW4NB    $HW4NB           USR Billing Dtl
     C                     ADD  $ECDWG    $HCDWG           USR Weight Accu
     C                     ADD  $EUSVA    $HX8VA           FOB Gross Amoun
     C                     ADD  $EGFQT    $HGFQT           USR Qty Billed
     C                     ADD  $ECMPR    $HCMPR           USR Market Valu
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $ECDWG    IFNE *ZERO                      *IF
     C                     ADD  $EUSVA    $HORNB           FOB Gross Amoun
     C                     ADD  $ECDWG    $HH4WG           USR Weight Accu
     C                     END                             *FI
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN F4AIC3    WZA001           Company Number
     C                     Z-ADDF4AIC3    WZA001
     C           *LIKE     DEFN F4RGNB    WZA002           Item Structure
     C                     Z-ADDF4RGNB    WZA002
     C           *LIKE     DEFN F4RHNB    WZA003           Item Structure
     C                     Z-ADDF4RHNB    WZA003
     C           *LIKE     DEFN F4RINB    WZA004           Item Structure
     C                     Z-ADDF4RINB    WZA004
     C           *LIKE     DEFN F4S5NB    WZA005           Shipped Item Co
     C                     Z-ADDF4S5NB    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @HSTPMQ                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Ignore records not meeting selection criteria
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Str Type is greater than zero
      *   |- c2    : PAR.USR Product Str Type NE DB1.Item Structure Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3WCNB    IFGT *ZERO                      *IF
     C           P3WCNB    IFNE F4RGNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Str Group is Entered
      *   |- c2    : PAR.USR Product Str Group NE DB1.Item Structure Grou
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4Z3NB    IFGT *ZERO                      *IF
     C           P4Z3NB    IFNE F4RHNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.USR Product Struct Class is Entered
      *   |- c2    : PAR.USR Product Struct Class NE DB1.Item Structure C
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P5L5CD    IFNE *ZERO                      *IF
     C           P5L5CD    IFNE F4RINB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RTV Print Realization  RT - Company/Item  * 
     C                     EXSR SORVGN
      * Check Sales Flags
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Active Flag is Record Found
      *   |- c2    : PAR.Print on Realization Rpt is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7W2ST    IFEQ 'Y'                        *IF
     C           P8X6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Billing Type       RT - OP Order Types  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELF4JNCD    WL0011    P      Order Type - Sa
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    P6OBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Billing Activity Type is Credit or Debit Memo
      *   |- c2    : PAR.USR Sales Realiz. Flag is None
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           P6OBST    OREQ '3'
     C           P7JHST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   |- c2    : PAR.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7JHST    IFEQ 'O'                        *IF
     C           P6OBST    IFEQ '1'                        *IF
     C           P6OBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: PAR.Sales Route Code is entered
     C           P7R4CD    IFNE *BLANK                     *IF
     C                     MOVEL*BLANK    WUR4CD           Sales Route Cod
      * RTV Sales Route        RT - Company/Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDF4AIC3    WL0008           Company Number
     C                     Z-ADDF4BKC7    WL0009           Ship To Custome
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    WUR4CD    P      Sales Route Cod
      * CASE: WRK.Sales Route Code is entered
     C           WUR4CD    IFNE *BLANK                     *IF
      * CASE: PAR.Sales Route Code NE WRK.Sales Route Code
     C           P7R4CD    IFNE WUR4CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * PK0246 - Whse Type Selector         2/22/02
      * CASE: PAR.Warehouse Type is Fresh or Frozen
     C           P9WPST    IFEQ 'FR'                       *IF
     C           P9WPST    OREQ 'FZ'
      * RTV Warehouse Type     RT - Warehouse  * 
     C                     EXSR SPRVGN
      * CASE: LCL.Warehouse Type NE PAR.Warehouse Type
     C           YL0028    IFNE P9WPST                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Item Structure
     C                     MOVEL*BLANK    W0AL02  1        Item Structure
     C                     MOVEL*BLANK    W0AL03  1        Item Structure
     C                     MOVEL*BLANK    W0AL04  1        Shipped Item Co
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Structure
     C                     MOVEL'Y'       W0AL02  1        Item Structure
     C                     MOVEL'Y'       W0AL03  1        Item Structure
     C                     MOVEL'Y'       W0AL04  1        Shipped Item Co
     C                     ELSE
      * Next record - Detect level breaks
     C           F4AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           F4RGNB    IFNE WZA002                     Item Structure
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           F4RHNB    IFNE WZA003                     Item Structure
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           F4RINB    IFNE WZA004                     Item Structure
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           F4S5NB    IFNE WZA005                     Shipped Item Co
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Shipped Item Code format
      * RTV Item Info for Rpts RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$HAIC3    WL0013           Company Number
     C                     Z-ADD$HS5NB    WL0014           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    $HCETX    P      Description Lin
     C                     MOVELWL0016    P8ADCD    P      U/M - Primary
     C                     Z-ADDWL0017    P8AWPC           Conversion Fact
     C                     MOVELWL0018    P8LXST    P      Operation Facto
     C                     MOVELWL0019    P8AECD    P      U/M - Second
     C                     Z-ADDWL0020    P8AXPC           Conversion Fact
     C                     MOVELWL0021    P8LYST    P      Operation Facto
     C                     MOVELWL0022    P8AFCD    P      U/M - Third
     C                     MOVELWL0023    P8AICD    P      U/M - Pricing
     C                     Z-ADDWL0024    P8AIWG           Unit Weight
     C                     MOVELWL0025    WULNCD    P      Default Commod
     C                     Z-ADDWL0026    WUBLPR           Market Overage
     C                     Z-ADDWL0027    P8BMPR           Standard Overag
     C                     MOVELWL0028    P8LRCD    P      Commodity Price
     C                     MOVELWL0029    P8U9ST    P      Item Pricing Op
     C                     Z-ADDWL0030    P8CMCO           Item Pricing Co
     C                     MOVELWL0031    P8X6ST    P      Print on Realiz
      * CASE: CUR.USR Weight Accumulatd SUM is *Not Zero
     C           $HH4WG    IFNE *ZERO                      *IF
     C           $HORNB    DIV  $HH4WG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $HCPPC    H      USR Percent Wor
     C                     END                             *FI
      * FOB Sales and Weight both negative
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CUR.FOB Gross Amount      USR LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HX8VA    IFLT WUW0NB                     *IF
     C           $HCDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MULT -1        $HCPPC           USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: CUR.USR Weight Accumulated NE WRK.ZERO
     C           $HCDWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.USR Weight Accumulated
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCMPR    DIV  $HCDWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HCMPR    IFLT WUW0NB                     *IF
     C           $HCDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        $HT2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         $HT2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HT2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $HUTVA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $HUTVA           Standard Overag
     C                     END                             *FI
     C                     END                             *FI
      * Compute Mkt + Ovr / CWT
     C           $HT2VA    ADD  $HUTVA    $HU7VA           USR Amount Rema
     C           $HCPPC    SUB  $HU7VA    $HXTVA           Variance amount
     C                     Z-ADDYL0005    $HQPQT           Qty Produced
     C                     Z-ADDYL0006    $HBYWG           Weight Billed
     C                     Z-ADDYL0007    $HLBQT           Net Dollars
     C                     Z-ADDYL0008    $HAYVA           Extended Amount
     C                     Z-ADDYL0009    $HIENX           Price * Weight
     C                     Z-ADDYL0010    $HIHNX           Price * Weight
     C                     Z-ADD*ZERO     YL0005           Qty Produced SU
     C                     Z-ADD*ZERO     YL0029           Quantity Ordere
     C                     Z-ADD*ZERO     YL0006           Weight Billed S
     C                     Z-ADD*ZERO     YL0007           Total Order Val
     C                     Z-ADD*ZERO     YL0008           Extended amount
     C                     Z-ADD*ZERO     YL0009           Price * Weight
     C                     Z-ADD*ZERO     YL0010           Price * Weight
      * CASE: CUR.Weight Billed is Greater than zero
     C           $HBYWG    IFGT *ZERO                      *IF
      * USD $/LB Prod Date
      * CUR.Market Price USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight 1 USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed
     C           $HIHNX    DIV  $HBYWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $HD3PC           Market Price US
      * Sales $/Lb
      * CUR.Unit Price (DSP)  USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed
     C           $HIENX    DIV  $HBYWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $HDTPR           Unit Price (DSP
      * Impact
      * CUR.Extended Amount =
      *    *COMPUTE ((x1 - x2) * x3)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CUR.Weight Billed
     C           $HDTPR    SUB  $HD3PC    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT $HBYWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HAYVA           Extended Amount
     C                     END                             *FI
     C           $HDTPR    SUB  $HD3PC    $HXTVA           Variance amount
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Shipped Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $HS5NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$HS5NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VHS5NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHS5NB           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$HKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
      * USER: Process after print of Shipped Item Code format
     C                     ADD  $HW4NB    $IW4NB           USR Billing Dtl
     C                     ADD  $HCDWG    $ICDWG           USR Weight Accu
     C                     ADD  $HGFQT    $IGFQT           USR Qty Billed
     C                     ADD  $HBYWG    $IFNWG           Weight Billed S
     C                     ADD  $HLBQT    $IU4VA           Total Order Val
     C                     ADD  $HAYVA    $IXXVA           Extended amount
     C                     ADD  $HQPQT    $IQSQT           Qty Produced SU
     C                     ADD  $HIENX    $IIFNX           Price * Weight
     C                     ADD  $HIHNX    $IIGNX           Price * Weight
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Class Code format
      * CASE: CUR.Total Order Values is EQ 0
     C           $IU4VA    IFEQ 0                          *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * CASE: CUR.Weight Billed SUM is Greater than zero
     C           $IFNWG    IFGT *ZERO                      *IF
      * USD $/LB Prod Date
      * CUR.Market Price USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight 1 SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $IIGNX    DIV  $IFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $ID3PC           Market Price US
      * Sales $/Lb
      * CUR.Unit Price (DSP)  USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $IIFNX    DIV  $IFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $IDTPR           Unit Price (DSP
      * Impact
      * CUR.Extended Amount =
      *    *COMPUTE ((x1 - x2) * x3)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CUR.Weight Billed SUM
     C           $IDTPR    SUB  $ID3PC    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT $IFNWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $IAYVA           Extended Amount
     C                     END                             *FI
     C           $IDTPR    SUB  $ID3PC    $IXTVA           Variance amount
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of Item Structure Class Code format
     C                     ADD  $IW4NB    $JW4NB           USR Billing Dtl
     C                     ADD  $ICDWG    $JCDWG           USR Weight Accu
     C                     ADD  $IGFQT    $JGFQT           USR Qty Billed
     C                     ADD  $IQSQT    $JQSQT           Qty Produced SU
     C                     ADD  $IFNWG    $JFNWG           Weight Billed S
     C                     ADD  $IU4VA    $JU4VA           Total Order Val
     C                     ADD  $IXXVA    $JXXVA           Extended amount
     C                     ADD  $IIFNX    $JIFNX           Price * Weight
     C                     ADD  $IIGNX    $JIGNX           Price * Weight
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Structure Group Code format
      * CASE: CUR.Weight Billed SUM is Equal to zero
     C           $JFNWG    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * CASE: CUR.Weight Billed SUM is Greater than zero
     C           $JFNWG    IFGT *ZERO                      *IF
      * USD $/LB Prod Date
      * CUR.Market Price USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight 1 SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $JIGNX    DIV  $JFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $JD3PC           Market Price US
      * Sales $/Lb
      * CUR.Unit Price (DSP)  USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $JIFNX    DIV  $JFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $JDTPR           Unit Price (DSP
      * Impact
      * CUR.Extended Amount =
      *    *COMPUTE ((x1 - x2) * x3)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CUR.Weight Billed SUM
     C           $JDTPR    SUB  $JD3PC    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT $JFNWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $JAYVA           Extended Amount
     C                     END                             *FI
     C           $JDTPR    SUB  $JD3PC    $JXTVA           Variance amount
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$JKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of Item Structure Group Code format
     C                     ADD  $JW4NB    $KW4NB           USR Billing Dtl
     C                     ADD  $JCDWG    $KCDWG           USR Weight Accu
     C                     ADD  $JGFQT    $KGFQT           USR Qty Billed
     C                     ADD  $JQSQT    $KQSQT           Qty Produced SU
     C                     ADD  $JFNWG    $KFNWG           Weight Billed S
     C                     ADD  $JU4VA    $KU4VA           Total Order Val
     C                     ADD  $JXXVA    $KXXVA           Extended amount
     C                     ADD  $JIFNX    $KIFNX           Price * Weight
     C                     ADD  $JIGNX    $KIGNX           Price * Weight
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Prod Structure Type Code format
      * CASE: CUR.Weight Billed SUM is Equal to zero
     C           $KFNWG    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
      * CASE: CUR.Weight Billed SUM is Greater than zero
     C           $KFNWG    IFGT *ZERO                      *IF
      * USD $/LB Prod Date
      * CUR.Market Price USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight 1 SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $KIGNX    DIV  $KFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $KD3PC           Market Price US
      * Sales $/Lb
      * CUR.Unit Price (DSP)  USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $KIFNX    DIV  $KFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $KDTPR           Unit Price (DSP
      * Impact
      * CUR.Extended Amount =
      *    *COMPUTE ((x1 - x2) * x3)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CUR.Weight Billed SUM
     C           $KDTPR    SUB  $KD3PC    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT $KFNWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KAYVA           Extended Amount
     C                     END                             *FI
     C           $KDTPR    SUB  $KD3PC    $KXTVA           Variance amount
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$KKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Prod Structure Type Code format
     C                     ADD  $KW4NB    $LW4NB           USR Billing Dtl
     C                     ADD  $KCDWG    $LCDWG           USR Weight Accu
     C                     ADD  $KGFQT    $LGFQT           USR Qty Billed
     C                     ADD  $KQSQT    $LQSQT           Qty Produced SU
     C                     ADD  $KFNWG    $LFNWG           Weight Billed S
     C                     ADD  $KU4VA    $LU4VA           Total Order Val
     C                     ADD  $KAYVA    $LXXVA           Extended amount
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $LAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$LAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VLAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VLAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$LKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt FR/FZ SLS/ShipdatePO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN L8AIC3    WQKB01           Company Number
     C           *LIKE     DEFN L8C4NB    WQKB02           Order Number
     C           *LIKE     DEFN L8HGCD    WQKB03           Item Code
     C           *LIKE     DEFN L8AJCD    WQKB04           Warehouse Code
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           Company Number
     C                     KFLD           WQKB02           Order Number
     C                     KFLD           WQKB03           Item Code
     C                     KFLD           WQKB04           Warehouse Code
      * Setup key
     C                     Z-ADD$EAIC3    WQKB01           Company Number
     C                     Z-ADD$EC4NB    WQKB02           Order Number
     C                     Z-ADD$ES5NB    WQKB03           Item Code
     C                     MOVEL$EAJCD    WQKB04           Warehouse Code
      * Establish starting position
     C           KRSB      SETLL@L8CPMF                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Order Number
     C                     MOVEL'Y'       W0BL02  1        Item Code
     C                     MOVEL'Y'       W0BL03  1        Warehouse Code
     C                     MOVEL'Y'       W0BL04  1        Lot Number
     C                     MOVEL'Y'       W0BL05  1        Production Date
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDL8AIC3    $GAIC3           Company Number
     C                     Z-ADDL8C4NB    $GC4NB           Order Number
     C                     Z-ADDL8HGCD    $GHGCD           Item Code
     C                     MOVEL*BLANK    $GCETX           Item Identifier
     C                     Z-ADD*ZERO     $GQSQT           Qty Produced SU
     C                     Z-ADD*ZERO     $GDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $GD3PC           Market Price US
     C                     Z-ADD*ZERO     $GXTVA           Variance amount
     C                     Z-ADD*ZERO     $GFNWG           Weight Billed S
     C                     Z-ADD*ZERO     $GU4VA           Total Order Val
     C                     Z-ADD*ZERO     $GAYVA           Extended Amount
     C                     Z-ADD*ZERO     $GIFNX           Price * Weight
     C                     Z-ADD*ZERO     $GIGNX           Price * Weight
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP03  1
     C                     END
      *
     C           W0BL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP04  1
     C                     END
      *
     C           W0BL05    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP05  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDL8AIC3    $FAIC3           Company Number
     C                     Z-ADDL8DPNB    $FDPNB           Order Sequence
     C                     Z-ADDL8UENB    $FUENB           Order Secondary
     C                     Z-ADDL8ALSW    $FALSW           Allocation Seq
     C                     Z-ADDL8J9QT    $FJ9QT           OIA Co-Packer L
     C                     Z-ADDL8HAWG    $FHAWG           OIA Serial Numb
     C                     MOVELL8IOSE    $FIOSE           OIA Create Sts
     C                     MOVELL8OIMN    $FOIMN           OIA Modified St
     C                     MOVELL8SOAS    $FSOAS           OIA Allocation
     C                     MOVELL8ARSX    $FARSX           OIA Loc Pick St
     C                     MOVELL8OTUS    $FOTUS           OIA Unused Sts
     C                     MOVELL8OTMP    $FOTMP           OIA Unused Sts
     C                     Z-ADDL8HGCD    $FHGCD           Item Code
     C                     MOVEL*BLANK    $FCETX           Item Identifier
     C                     Z-ADDL8LXNM    $FLXNM           Lot Number
     C                     MOVELL8AJCD    $FAJCD           Warehouse Code
     C                     Z-ADDL8ELDT    $FELDT           Production Date
     C                     Z-ADDL8J6QT    $FJ6QT           OIA Alloc/Shipp
     C                     Z-ADD*ZERO     $FDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $FD3PC           Market Price US
     C                     Z-ADD*ZERO     $FXTVA           Variance amount
     C                     Z-ADDL8G9WG    $FG9WG           OIA Alloc/Shipp
     C                     Z-ADD*ZERO     $FABCD           USR amount 1  1
     C                     Z-ADD*ZERO     $FX0VA           Variance Amount
     C                     Z-ADDL8C4NB    $FC4NB           Order Number
     C                     Z-ADD*ZERO     $FIENX           Price * Weight
     C                     Z-ADD*ZERO     $FIHNX           Price * Weight
     C                     MOVELL8YMCD    $FYMCD           Location Code
     C                     Z-ADDL8YNCD    $FYNCD           Location Level
     C                     MOVELL8UVST    $FUVST           EDI Status 1
     C                     MOVELL8UWST    $FUWST           EDI Status 2
     C                     MOVELL8UXST    $FUXST           EDI Status 3
     C                     MOVELL8VSST    $FVSST           Record Status
     C                     Z-ADDL8AATM    $FAATM           Job Time
     C                     MOVELL8AYNA    $FAYNA           User Id
     C                     MOVELL8A0NA    $FA0NA           Job Name
     C                     Z-ADDL8AXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $FJ6QT    $GQSQT           Qty Produced SU
     C                     ADD  $FG9WG    $GFNWG           Weight Billed S
     C                     ADD  $FABCD    $GU4VA           Total Order Val
     C                     ADD  $FIENX    $GIFNX           Price * Weight
     C                     ADD  $FIHNX    $GIGNX           Price * Weight
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN L8AIC3    WZB001           Company Number
     C                     Z-ADDL8AIC3    WZB001
     C           *LIKE     DEFN L8C4NB    WZB002           Order Number
     C                     Z-ADDL8C4NB    WZB002
     C           *LIKE     DEFN L8HGCD    WZB003           Item Code
     C                     Z-ADDL8HGCD    WZB003
     C           *LIKE     DEFN L8AJCD    WZB004           Warehouse Code
     C                     MOVELL8AJCD    WZB004
     C           *LIKE     DEFN L8LXNM    WZB005           Lot Number
     C                     Z-ADDL8LXNM    WZB005
     C           *LIKE     DEFN L8ELDT    WZB006           Production Date
     C                     Z-ADDL8ELDT    WZB006
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@L8CPMF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        Company Number
     C                     MOVEL*BLANK    W0BL01  1        Order Number
     C                     MOVEL*BLANK    W0BL02  1        Item Code
     C                     MOVEL*BLANK    W0BL03  1        Warehouse Code
     C                     MOVEL*BLANK    W0BL04  1        Lot Number
     C                     MOVEL*BLANK    W0BL05  1        Production Date
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        Company Number
     C                     MOVEL'Y'       W0BL01  1        Order Number
     C                     MOVEL'Y'       W0BL02  1        Item Code
     C                     MOVEL'Y'       W0BL03  1        Warehouse Code
     C                     MOVEL'Y'       W0BL04  1        Lot Number
     C                     MOVEL'Y'       W0BL05  1        Production Date
     C                     ELSE
      * Next record - Detect level breaks
     C           L8AIC3    IFNE WZB001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           L8C4NB    IFNE WZB002                     Order Number
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           L8HGCD    IFNE WZB003                     Item Code
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C           L8AJCD    IFNE WZB004                     Warehouse Code
     C           W0BL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL03
     C                     END
     C           L8LXNM    IFNE WZB005                     Lot Number
     C           W0BL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL04
     C                     END
     C           L8ELDT    IFNE WZB006                     Production Date
     C           W0BL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL05
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL05    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP05
     C                     END
      *
     C           W0BL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP04
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP03
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * USER: Process before print of Item Code format
     C                     MOVELYL0011    $GCETX           Item Identifier
      * CASE: CUR.Weight Billed SUM is Not equal zero
     C           $GFNWG    IFNE *ZERO                      *IF
      * USD $/LB Prod Date
      * CUR.Market Price USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight 1 SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $GIGNX    DIV  $GFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GD3PC           Market Price US
      * Sales $/Lb
      * CUR.Unit Price (DSP)  USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Price * Weight SUM
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Weight Billed SUM
     C           $GIFNX    DIV  $GFNWG    W0WB00    H      *Synon (15,5) w
     C                     Z-ADDW0WB00    $GDTPR           Unit Price (DSP
      * Impact
      * CUR.Extended Amount =
      *    *COMPUTE ((x1 - x2) * x3)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CUR.Weight Billed SUM
     C           $GDTPR    SUB  $GD3PC    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT $GFNWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GAYVA           Extended Amount
      * CUR.Variance amount 1     USR =
      *    *COMPUTE (x1 - x2)
      * x1    : CUR.Unit Price (DSP)  USR
      * -     : PGM.*Synon (15,5) work field
      * x2    : CUR.Market Price USR
     C           $GDTPR    SUB  $GD3PC    W0WB00           *Synon (15,5) w
     C                     Z-ADDW0WB00    $GXTVA           Variance amount
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $GD3PC           Market Price US
     C                     Z-ADD*ZERO     $GDTPR           Unit Price (DSP
     C                     Z-ADD*ZERO     $GAYVA           Extended Amount
     C                     END                             *FI
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Code format
      * CASE: PAR.USR Detail or Summary is Summary
     C           P7STST    IFEQ 'S'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $GHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$GHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VGHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
      * USER: Process after print of Item Code format
     C                     ADD  $GQSQT    YL0005           Qty Produced SU
     C                     ADD  $GFNWG    YL0006           Weight Billed S
     C                     ADD  $GU4VA    YL0007           Total Order Val
     C                     ADD  $GAYVA    YL0008           Extended amount
     C                     ADD  $GIFNX    YL0009           Price * Weight
     C                     ADD  $GIGNX    YL0010           Price * Weight
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1BDDT    $CBDDT           USR From Date
     C                     Z-ADDP2FDDT    $CFDDT           USR To Date
     C                     MOVELP9AJCD    $CAJCD           Warehouse Code
     C                     MOVELP7STES    $CSTES           Export Sales
     C                     MOVELP7R4CD    $CR4CD           Sales Route Cod
     C                     MOVELP7JHST    $CJHST           USR Sales Reali
     C                     Z-ADDP3WCNB    $CWCNB           USR Product Str
     C                     Z-ADDP4Z3NB    $CZ3NB           USR Product Str
     C                     Z-ADDP5L5CD    $CL5CD           USR Product Str
     C                     MOVELP9WPST    $CWPST           Warehouse Type
     C                     Z-ADDF4AIC3    $CAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
     C                     MOVELWUAGTX    $CAGTX           USR Company Nam
     C                     Z-ADDP3WCNB    $CWCNB           USR Product Str
     C                     Z-ADDP4Z3NB    $CZ3NB           USR Product Str
     C                     Z-ADDP5L5CD    $CL5CD           USR Product Str
      * RTV  Description       RT - OM Item Structure Type  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CWCNB    WL0001           Item Structure
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    $CWCNB           Item Structure
     C                     MOVELWL0002    $CDCTX    P      Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CZ3NB    WL0003           Item Structure
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0004    WURGNB           Item Structure
     C                     MOVELWL0005    $CDDTX    P      Item Structure
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CL5CD    WL0006           Item Structure
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0007    $CDETX    P      Item Structure
      * 1PG.USR Description - 15 = Condition name of PAR.USR Sales Realiz
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1404904   Y2LSNO  70       List number
     C                     PARM P7JHST    W0INVL 25        USR Sales Reali
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CJUNA    PARM           W0CNNM 25        USR Description
      *
     C                     MOVELP7W2ST    $CD4ST           USR Flag 1
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Export Sales
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1419961   Y2LSNO  70       List number
     C                     PARM $CSTES    W0INVL 25        Export Sales
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
      * CASE: PAR.Sales Route Code is not entered
     C           P7R4CD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $CMZNA           Sales Route Des
     C                     MOVEL'All'     $CMZNA           Sales Route Des
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Description        RT - PD Sales Route  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
      * CASE: PAR.USR Sales Realiz. Flag is CM/DM Only
     C           P7JHST    IFEQ 'O'                        *IF
     C                     MOVEL*BLANK    YL0001           Date From Alpha
     C                     MOVELP1BDDT    YL0001           Date From Alpha
     C                     MOVEL*BLANK    YL0002           Date To Alpha
     C                     MOVELP2FDDT    YL0002           Date To Alpha
     C                     Z-ADD*ZERO     ZQ      50
     C           YL0001    CAT  YL0002:ZQ YL0003    P      Date Range
     C                     END                             *FI
      * Retrieve warehouse type if entered
      * CASE: PAR.Warehouse Type NE WRK.BLANK
     C           P9WPST    IFNE WUGSTX                     *IF
      * 1PG.Condition Desc. 3  USR = Condition name of 1PG.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM $CWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CHNTX           Condition Desc.
     C                     MOVEL'*All'    $CHNTX           Condition Desc.
     C                     END                             *FI
      * Retrieve whse description if entered
      * CASE: PAR.Warehouse Code NE WRK.BLANK
     C           P9AJCD    IFNE WUGSTX                     *IF
      * RTV Warehouse          RT - Warehouse  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CF8NA           Warehouse Descr
     C                     MOVEL'*All'    $CF8NA           Warehouse Descr
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR From Date to display format
      * Convert date
     C           1000000   ADD  $CBDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCBDDT
      * Convert USR To Date to display format
      * Convert date
     C           1000000   ADD  $CFDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFDDT
     C                     MOVEL'0'       *IN79
     C           WUGGST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accounting Company Number format
     C                     Z-ADDF4AIC3    $DAIC3           Company Number
     C                     MOVELWUAGTX    $DAGTX           USR Company Nam
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Item Structure Type Code of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * USER: On print of Prod Structure Type Code format
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Item Structure Group Code of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * USER: On print of Item Structure Group Code format
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Item Structure Class Code of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * USER: On print of Item Structure Class Code format
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Shipped Item Code of Prt FR/FZ SLS/Shipdate PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt FR/FZ SLS/Shipdate PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Sales Route        RT - Company/Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0008           Company Number
     C                     Z-ADD$EBKC7    WL0009           Ship To Custome
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    $ER4CD    P      Sales Route Cod
      * RTV Billing Type       RT - OP Order Types  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELF4JNCD    WL0011    P      Order Type - Sa
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0012    P6OBST    P      Billing Activit
      * RTV Item Info for Rpts RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDF4AIC3    WL0013           Company Number
     C                     Z-ADDF4S5NB    WL0014           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    WUAVNA    P      Description Lin
     C                     MOVELWL0016    P8ADCD    P      U/M - Primary
     C                     Z-ADDWL0017    P8AWPC           Conversion Fact
     C                     MOVELWL0018    P8LXST    P      Operation Facto
     C                     MOVELWL0019    P8AECD    P      U/M - Second
     C                     Z-ADDWL0020    P8AXPC           Conversion Fact
     C                     MOVELWL0021    P8LYST    P      Operation Facto
     C                     MOVELWL0022    P8AFCD    P      U/M - Third
     C                     MOVELWL0023    P8AICD    P      U/M - Pricing
     C                     Z-ADDWL0024    P8AIWG           Unit Weight
     C                     MOVELWL0025    WULQCD    P      Default Commod
     C                     Z-ADDWL0026    WUBLPR           Market Overage
     C                     Z-ADDWL0027    P8BMPR           Standard Overag
     C                     MOVELWL0028    P8LRCD    P      Commodity Price
     C                     MOVELWL0029    P8U9ST    P      Item Pricing Op
     C                     Z-ADDWL0030    P8CMCO           Item Pricing Co
     C                     MOVELWL0031    P8X6ST    P      Print on Realiz
      * FOB amount and weight
      * CASE: PAR.Billing Activity Type is Invoice
     C           P6OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $EUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $EW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $EW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE: DB1.Affect Sales Pnds Status is no
     C           F4VAST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $ECDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $ECDWG           USR Weight Accu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Credit or Debit Memo
      * CASE: PAR.USR Sales Realiz. Flag is Process by Flags
     C           P7JHST    IFEQ 'P'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $EUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $EW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $EW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE: DB1.Affect Sales Pnds Status is no
     C           F4VAST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $ECDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $ECDWG           USR Weight Accu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is All
      *   |- c2    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   '-
     C           P7JHST    IFEQ 'A'                        *IF
     C           P7JHST    OREQ 'O'                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Doll Status is no
      *   |- c2    : DB1.Affect Sales Pnds Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ANST    IFEQ 'N'                        *IF
     C           F4VAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $EUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     $EW4NB           USR Billing Dtl
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4USVA    $EW4NB           USR Billing Dtl
     C                     END                             *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Pnds Status is no
      *   |- c2    : DB1.Affect Sales Doll Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4VAST    IFEQ 'N'                        *IF
     C           F4ANST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $ECDWG           USR Weight Accu
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDF4BYWG    $ECDWG           USR Weight Accu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Weight Accumulated is Greater Than Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $ECDWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $ECDWG    $ECDWG           USR Weight Accu
     C                     END                             *FI
      * Market Code
      * CASE: PAR.Billing Activity Type is Invoice
     C           P6OBST    IFEQ '1'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $ECDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $ECMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $ECMPR    $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Credit or Debit memo
      * CASE: PAR.USR Sales Realiz. Flag is Process by Flags
     C           P7JHST    IFEQ 'P'                        *IF
      * CASE: DB1.Affect Sales Doll Status is no
     C           F4ANST    IFEQ 'N'                        *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $ECDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $ECMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $ECMPR    $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.USR Sales Realiz. Flag is All
      *   |- c2    : PAR.USR Sales Realiz. Flag is CM/DM Only
      *   '-
     C           P7JHST    IFEQ 'A'                        *IF
     C           P7JHST    OREQ 'O'                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.Affect Sales Doll Status is no
      *   |- c2    : DB1.Affect Sales Pnds Status is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           F4ANST    IFEQ 'N'                        *IF
     C           F4VAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute market price
      * CASE: Pricing U/M on history is currently a valid U/M
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.U/M - Base Price EQ PAR.U/M - Primary
      *   |- c2    : DB1.U/M - Base Price EQ PAR.U/M - Second
      *   |- c3    : DB1.U/M - Base Price EQ PAR.U/M - Third
      *   '-
     C           F4CRCD    IFEQ P8ADCD                     *IF
     C           F4CRCD    OREQ P8AECD                     *OR
     C           F4CRCD    OREQ P8AFCD                     *OR
      * subtract 1 from actual shipped date for starting point
      * WRK.Actual Shipped Date = DB1.Actual Shipped Date + CON.-1 *DAYS
     C           F4GNDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WUGNDT
     C                     ELSE
     C           XDINDT    SUB  1000000   WUGNDT
     C                     END
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWULQCD    WL0032    P      Commodity Marke
     C                     MOVELP8LRCD    WL0033    P      Commodity Price
     C                     Z-ADDWUGNDT    WL0034           Market Price Da
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WUA5PR           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUA5PR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ F4CRCD                     *IF
     C                     Z-ADDWUA5PR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           WUA5PR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUA5PR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Market Price
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Market Prc/LB
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.USR Weight Accumulated
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT $ECDWG    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $ECMPR           USR Market Valu
     C                     END                             *FI
      * reverse sign if credit memo and positive
      * CASE: credit memo and positive
      *  - c1 AND c2
      *   |- c1    : PAR.Billing Activity Type is Credit Memo
      *   |- c2    : CUR.USR Market Value Price GT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6OBST    IFEQ '2'                        *IF
     C           $ECMPR    IFGT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           *ZERO     SUB  $ECMPR    $ECMPR           USR Market Valu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVELF4CRCD    YL0004           U/M - Base Pric
     C                     Z-ADDF4EXQT    $EGFQT           USR Qty Billed
     C                     Z-ADD*ZERO     $ECPPC           USR Percent Wor
     C                     Z-ADD*ZERO     $EU7VA           USR Amount Rema
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $ECDWG    IFNE *ZERO                      *IF
     C           $EUSVA    DIV  $ECDWG    WUBHPC    H      USR Percent Wor
     C           WUBHPC    MULT 100       $ECPPC    H      USR Percent Wor
     C                     END                             *FI
      * Compute Market Price (CWT)
      * CASE: CUR.USR Weight Accumulated NE WRK.ZERO
     C           $ECDWG    IFNE WUW0NB                     *IF
      * Compute Market Price CWT
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.USR Market Value Price
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.USR Weight Accumulated
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $ECMPR    DIV  $ECDWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
      * compute usr market value
      * CASE: market value and weight both negative
      *  - c1 AND c2
      *   |- c1    : CUR.USR Market Value Price LT WRK.ZERO
      *   |- c2    : CUR.USR Weight Accumulated LT WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $ECMPR    IFLT WUW0NB                     *IF
     C           $ECDWG    IFLT WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           W0WE      MULT -1        WUT2VA    H      USR Market Valu
     C                     ELSE
      * CASE: *OTHERWISE
     C           W0WE      MULT 1         WUT2VA    H      USR Market Valu
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WUT2VA           USR Market Valu
     C                     END                             *FI
      * Compute Standard Overage
      * CASE: WRK.ZERO is Zero
     C           WUW0NB    IFEQ *ZERO                      *IF
      * CLC Convert Price      IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WUAPPR           Price based on
     C                     Z-ADD*ZERO     WUAQPR           Price based on
     C                     Z-ADD*ZERO     WUARPR           Price based on
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Pricing
     C           P8ADCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAPPR           Price based on
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           P8AECD    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           WUAQPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Pricing
     C           P8AECD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUAQPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           P8AFCD    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
     C           P8BMPR    MULT P8AXPC    WUARPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Pricing
     C           P8AFCD    IFEQ YL0004                     *IF
     C                     Z-ADDP8BMPR    WUARPR           Price based on
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P8LYST    IFEQ 'M'                        *IF
     C           P8BMPR    MULT P8AXPC    WUAQPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P8LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P8AXPC    IFNE *ZERO                      *IF
     C           P8BMPR    DIV  P8AXPC    WUAQPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P8LXST    IFEQ 'M'                        *IF
     C           WUAQPR    MULT P8AWPC    WUAPPR    H      Price based on
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P8LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P8AWPC    IFNE *ZERO                      *IF
     C           WUAQPR    DIV  P8AWPC    WUAPPR    H      Price based on
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute Std Overage
      * CASE: PAR.Unit Weight EQ WRK.ZERO
     C           P8AIWG    IFEQ WUW0NB                     *IF
     C                     Z-ADD*ZERO     $EUTVA           Standard Overag
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute Standard Overage
      * PGM.*Synon (17,9) work field =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Price based on U/M1 S
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.Unit Weight
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WUAPPR    DIV  P8AIWG    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WE             *Synon (17,9) w
     C                     Z-ADDW0WE      $EUTVA           Standard Overag
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CUR.USR Weight Accumulated is Entered
     C           $ECDWG    IFNE *ZERO                      *IF
     C           $EUTVA    ADD  WUT2VA    $EU7VA           USR Amount Rema
     C                     END                             *FI
     C           $ECPPC    SUB  $EU7VA    $EXTVA           Variance amount
     C                     MOVELF4BRTX    $EJUNA           USR Description
      * 3/14/02 never print this
     C                     MOVEL'N'       W0PFM            *Print format
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Shipped Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $ES5NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$ES5NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VES5NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VES5NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EBKC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EBKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEBKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEBKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Actual Shipped Date to display format
      * Convert date
     C           1000000   ADD  $EGNDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEGNDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print Company Number of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print Order Number of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print Item Code of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print Warehouse Code of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP03
     C                     END                             FI
      * Print Lot Number of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP04
     C                     END                             FI
      * Print Production Date of Prt FR/FZ SLS/ShipdatePO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP05    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP05
     C                     END                             FI
      * Print Detail line. of Prt FR/FZ SLS/ShipdatePO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Inv/Ord Impact    RT - Company Item  * 
     C                     EXSR SMRVGN
      * Item Description
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.First Time Flag is Yes
      *   |- c2    : PGM.*new page flag is *Yes
      *   '-
     C           YL0025    IFEQ 'Y'                        *IF
     C           W0NEWP    OREQ 'Y'                        *OR
     C                     MOVELYL0011    $FCETX           Item Identifier
     C                     MOVEL'N'       YL0025           First Time Flag
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $FCETX           Item Identifier
     C                     END                             *FI
      * RTV Market Price       RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELYL0018    WL0032    P      Commodity Marke
     C                     MOVELYL0021    WL0033    P      Commodity Price
     C                     Z-ADD$FELDT    WL0034           Market Price Da
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    $FD3PC           Commodity Marke
     C                     Z-ADDWL0036    WUE7DT           USR Date Priced
     C                     ADD  YL0019    $FD3PC           Market Price US
     C                     Z-ADDYL0026    $FDTPR           Unit Price (DSP
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(NXT) $GDTPR' defaulted for 'Unit Price (DSP)  USR'.
      * Rtv Item FOB Price    RT - Sales History  * 
     C                     EXSR SNRVGN
     C           $FG9WG    MULT $FD3PC    $FIHNX    H      Price * Weight
     C           $FG9WG    MULT $FDTPR    $FIENX    H      Price * Weight
     C           $FDTPR    SUB  $FD3PC    $FXTVA           Variance amount
     C           $FG9WG    MULT $FDTPR    $FABCD    H      USR amount 1  1
      * CASE: PAR.USR Detail or Summary is Summary
     C           P7STST    IFEQ 'S'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  $FELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFELDT
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FC4NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FC4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFC4NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFC4NB           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt FR/FZ SLS/Shipdate PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  12        W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt FR/FZ SLS/Shipdate PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Type Code of Prt FR/FZ SLS/Shipdate PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Group Code of Prt FR/FZ SLS/Shipdate PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Structure Class Code of Prt FR/FZ SLS/Shipdate PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Shipped Item Code of Prt FR/FZ SLS/Shipdate PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt FR/FZ SLS/Shipdate PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt FR/FZ SLS/ShipdatePO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt FR/FZ SLS/ShipdatePO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Order Number of Prt FR/FZ SLS/ShipdatePO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt FR/FZ SLS/ShipdatePO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Warehouse Code of Prt FR/FZ SLS/ShipdatePO
     C           W0BP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Lot Number of Prt FR/FZ SLS/ShipdatePO
     C           W0BP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Production Date of Prt FR/FZ SLS/ShipdatePO
     C           W0BP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt FR/FZ SLS/ShipdatePO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'OMS'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAGTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WUAGTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADDWL0001    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSD     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0001           Item Structure
     C                     MOVEL*BLANK    WL0002           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    WL0001           Item Structure
     C                     MOVELE8DCTX    WL0002           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADDWL0003    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSE     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0004           Item Structure
     C                     MOVEL*BLANK    WL0005           Item Structure
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WL0004           Item Structure
     C                     MOVELE9DDTX    WL0005           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADDWL0006    FARINB           Item Structure
      * Establish starting position
     C           KRSSF     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0007           Item Structure
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    WL0007           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Description        RT - PD Sales Route  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           JER4CD           Sales Route Cod
      * Setup key
     C                     MOVEL$CR4CD    JER4CD           Sales Route Cod
      * Establish starting position
     C           KRSSG     CHAIN@JEREWF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1800' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CMZNA           Sales Route Des
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJEMZNA    $CMZNA           Sales Route Des
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Warehouse          RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSH     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $CF8NA           Warehouse Descr
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $CF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Sales Route        RT - Company/Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0008    EOAIC3           Company Number
     C                     Z-ADDWL0009    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSI     CHAIN@EOREXM              90    *
      * Data record not found
     C   90                MOVEL'USR1007' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEOR4CD    WL0010           Sales Route Cod
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Billing Type       RT - OP Order Types  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           EXJNCD           Order Type - Sa
      * Setup key
     C                     MOVELWL0011    EXJNCD           Order Type - Sa
      * Establish starting position
     C           KRSSJ     CHAIN@EXRETY              90    *
      * Data record not found
     C   90                MOVEL'USR1063' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEXOBST    WL0012           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Item Info for Rpts RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0013    BZAIC3           Company Number
     C                     Z-ADDWL0014    BZHGCD           Item Code
      * Establish starting position
     C           KRSSK     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0015           Description Lin
     C                     MOVEL*BLANK    WL0016           U/M - Primary
     C                     Z-ADD*ZERO     WL0017           Conversion Fact
     C                     MOVEL*BLANK    WL0018           Operation Facto
     C                     MOVEL*BLANK    WL0019           U/M - Second
     C                     Z-ADD*ZERO     WL0020           Conversion Fact
     C                     MOVEL*BLANK    WL0021           Operation Facto
     C                     MOVEL*BLANK    WL0022           U/M - Third
     C                     MOVEL*BLANK    WL0023           U/M - Pricing
     C                     Z-ADD*ZERO     WL0024           Unit Weight
     C                     MOVEL*BLANK    WL0025           Default Commod
     C                     Z-ADD*ZERO     WL0026           Market Overage
     C                     Z-ADD*ZERO     WL0027           Standard Overag
     C                     MOVEL*BLANK    WL0028           Commodity Price
     C                     MOVEL*BLANK    WL0029           Item Pricing Op
     C                     Z-ADD*ZERO     WL0030           Item Pricing Co
     C                     MOVEL*BLANK    WL0031           Print on Realiz
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0015           Description Lin
     C                     MOVELBZADCD    WL0016           U/M - Primary
     C                     Z-ADDBZAWPC    WL0017           Conversion Fact
     C                     MOVELBZLXST    WL0018           Operation Facto
     C                     MOVELBZAECD    WL0019           U/M - Second
     C                     Z-ADDBZAXPC    WL0020           Conversion Fact
     C                     MOVELBZLYST    WL0021           Operation Facto
     C                     MOVELBZAFCD    WL0022           U/M - Third
     C                     MOVELBZAICD    WL0023           U/M - Pricing
     C                     Z-ADDBZAIWG    WL0024           Unit Weight
     C                     MOVELBZLNCD    WL0025           Default Commod
     C                     Z-ADDBZBLPR    WL0026           Market Overage
     C                     Z-ADDBZBMPR    WL0027           Standard Overag
     C                     MOVELBZLRCD    WL0028           Commodity Price
     C                     MOVELBZU9ST    WL0029           Item Pricing Op
     C                     Z-ADDBZCMCO    WL0030           Item Pricing Co
     C                     MOVELBZX6ST    WL0031           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN F0LQCD    WQSL01           Commodity Marke
     C           *LIKE     DEFN F0LRCD    WQSL02           Commodity Price
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Commodity Marke
     C                     KFLD           WQSL02           Commodity Price
     C                     KFLD           F0EQDT           Market Price Da
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Commodity Marke
     C                     KFLD           WQSL02           Commodity Price
      * Setup key
     C                     MOVELWL0032    WQSL01           Commodity Marke
     C                     MOVELWL0033    WQSL02           Commodity Price
     C                     Z-ADDWL0034    F0EQDT           Market Price Da
      * Establish starting position
     C           KPSSL     SETLL@F0CPEP                    *
     C           KRSSL     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0035           Commodity Marke
     C                     Z-ADD*ZERO     WL0036           USR Date Priced
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDF0A5PR    WL0035           Commodity Marke
     C                     Z-ADDF0EQDT    WL0036           USR Date Priced
     C                     GOTO SLEXIT                     *QUIT
     C           KRSSL     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Inv/Ord Impact    RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDL8AIC3    BZAIC3           Company Number
     C                     Z-ADDL8HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSM     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0011           Description Lin
     C                     MOVEL*BLANK    YL0012           U/M - Primary
     C                     Z-ADD*ZERO     YL0013           Unit Weight
     C                     MOVEL*BLANK    YL0014           Catch Weight St
     C                     Z-ADD*ZERO     YL0015           Item Structure
     C                     Z-ADD*ZERO     YL0016           Item Structure
     C                     Z-ADD*ZERO     YL0017           Item Structure
     C                     MOVEL*BLANK    YL0018           Default Commod
     C                     Z-ADD*ZERO     YL0019           Market Overage
     C                     Z-ADD*ZERO     YL0020           Standard Overag
     C                     MOVEL*BLANK    YL0021           Commodity Price
     C                     Z-ADD*ZERO     YL0022           Fresh Chilling
     C                     MOVEL*BLANK    YL0023           Variety/Rendere
     C                     MOVEL*BLANK    YL0024           Credit Item Sta
     C                     MOVEL*BLANK    WUX6ST           Print on Realiz
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    YL0011           Description Lin
     C                     MOVELBZADCD    YL0012           U/M - Primary
     C                     Z-ADDBZAIWG    YL0013           Unit Weight
     C                     MOVELBZAVST    YL0014           Catch Weight St
     C                     Z-ADDBZRINB    YL0015           Item Structure
     C                     Z-ADDBZRHNB    YL0016           Item Structure
     C                     Z-ADDBZRGNB    YL0017           Item Structure
     C                     MOVELBZLNCD    YL0018           Default Commod
     C                     Z-ADDBZBLPR    YL0019           Market Overage
     C                     Z-ADDBZBMPR    YL0020           Standard Overag
     C                     MOVELBZLRCD    YL0021           Commodity Price
     C                     Z-ADDBZCHTM    YL0022           Fresh Chilling
     C                     MOVELBZXWST    YL0023           Variety/Rendere
     C                     MOVELBZVMST    YL0024           Credit Item Sta
     C                     MOVELBZX6ST    WUX6ST           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Item FOB Price    RT - Sales History  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $GDTPR           Unit Price (DSP
     C                     MOVEL*BLANK    YL0027           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSN01           Company Number
     C           *LIKE     DEFN WAC4NB    WQSN02           Order Number
     C           *LIKE     DEFN WAS5NB    WQSN03           Shipped Item Co
     C           *LIKE     DEFN WAAJCD    WQSN04           Warehouse Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Order Number
     C                     KFLD           WQSN03           Shipped Item Co
     C                     KFLD           WQSN04           Warehouse Code
      * Setup key
     C                     Z-ADD$FAIC3    WQSN01           Company Number
     C                     Z-ADD$FC4NB    WQSN02           Order Number
     C                     Z-ADD$FHGCD    WQSN03           Shipped Item Co
     C                     MOVEL$FAJCD    WQSN04           Warehouse Code
      * Establish starting position
     C           KRSSN     SETLL@HSTPZN                    *
     C           KRSSN     READE@HSTPZN                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1241' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       YL0027           Record Found US
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Weight Billed is Greater than zero
     C           WABYWG    IFGT *ZERO                      *IF
     C           WAUSVA    DIV  WABYWG    $GDTPR    H      Unit Price (DSP
     C                     END                             *FI
     C                     MOVEL'Y'       YL0027           Record Found US
     C           KRSSN     READE@HSTPZN                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Print Realization  RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDF4AIC3    BZAIC3           Company Number
     C                     Z-ADDF4S5NB    BZHGCD           Item Code
      * Establish starting position
     C           KRSSO     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WULNCD           Default Commod
     C                     MOVEL*BLANK    P8X6ST           Print on Realiz
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZLNCD    WULNCD           Default Commod
     C                     MOVELBZX6ST    P8X6ST           Print on Realiz
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELF4AJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSP     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0028           Warehouse Type
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADWPST    YL0028           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Fr/Fz Impact ShDt PO
      *================================================================
      * Prt FR/FZ SLS/ShipdatePO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P6OBST           Billing Activit
     C                     MOVEL*BLANK    P8ADCD           U/M - Primary
     C                     Z-ADD*ZERO     P8AWPC           Conversion Fact
     C                     MOVEL*BLANK    P8LXST           Operation Facto
     C                     MOVEL*BLANK    P8AECD           U/M - Second
     C                     Z-ADD*ZERO     P8AXPC           Conversion Fact
     C                     MOVEL*BLANK    P8LYST           Operation Facto
     C                     MOVEL*BLANK    P8AFCD           U/M - Third
     C                     MOVEL*BLANK    P8AICD           U/M - Pricing
     C                     Z-ADD*ZERO     P8AIWG           Unit Weight
     C                     Z-ADD*ZERO     P8BMPR           Standard Overag
     C                     MOVEL*BLANK    P8LRCD           Commodity Price
     C                     MOVEL*BLANK    P8U9ST           Item Pricing Op
     C                     Z-ADD*ZERO     P8CMCO           Item Pricing Co
     C                     MOVEL*BLANK    P8X6ST           Print on Realiz
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field USR Display field
     C                     MOVEL*BLANK    WUGGST  1
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    F4AIC3           Company Number
     C                     MOVEL*LOVAL    F4RGNB           Item Structure
     C                     MOVEL*LOVAL    F4RHNB           Item Structure
     C                     MOVEL*LOVAL    F4RINB           Item Structure
     C                     MOVEL*LOVAL    F4S5NB           Shipped Item Co
      * Define work field USR Company Name
     C                     MOVEL*BLANK    WUAGTX 30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field Commodity Market Code
     C                     MOVEL*BLANK    WULQCD  3
      * Define work field Market Overage
     C                     Z-ADD*ZERO     WUBLPR 114
      * Define work field Actual Shipped Date
     C                     Z-ADD*ZERO     WUGNDT  70
      * Define work field Commodity Market Price
     C                     Z-ADD*ZERO     WUA5PR 114
      * Define work field USR Date Priced
     C                     Z-ADD*ZERO     WUE7DT  70
      * Define work field Price based on U/M1 S
     C                     Z-ADD*ZERO     WUAPPR 114
      * Define work field Price based on U/M2 S
     C                     Z-ADD*ZERO     WUAQPR 114
      * Define work field Price based on U/M3 S
     C                     Z-ADD*ZERO     WUARPR 114
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field USR Percent Work, 7.4
     C                     Z-ADD*ZERO     WUBHPC  74
      * Define work field USR Market Value
     C                     Z-ADD*ZERO     WUT2VA 112
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    L8AIC3           Company Number
     C                     MOVEL*LOVAL    L8C4NB           Order Number
     C                     MOVEL*LOVAL    L8HGCD           Item Code
     C                     MOVEL*LOVAL    L8AJCD           Warehouse Code
     C                     MOVEL*LOVAL    L8LXNM           Lot Number
     C                     MOVEL*LOVAL    L8ELDT           Production Date
      * Define work field Print on Realization Rpt
     C                     MOVEL*BLANK    WUX6ST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAC4NB           Order Number
     C                     Z-ADD*ZERO     WADPNB           Order Sequence
     C                     Z-ADD*ZERO     WAUENB           Order Secondary
     C                     Z-ADD*ZERO     WABTC7           Parent Customer
     C                     Z-ADD*ZERO     WAANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WAA0DT           Order Date
     C                     Z-ADD*ZERO     WAACDT           Cancel Date
     C                     Z-ADD*ZERO     WATBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WAATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WAT3NB           Attach to Order
     C                     Z-ADD*ZERO     WARSRN           Resell Referenc
     C                     Z-ADD*ZERO     WAORIT           Original Item
     C                     Z-ADD*ZERO     WAAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WAD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WACCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WAAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WAAKPR           Unit Price
     C                     Z-ADD*ZERO     WAAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WAA5DT           Requested Ship
     C                     Z-ADD*ZERO     WAAWDT           Invoice Date
     C                     Z-ADD*ZERO     WAHDDT           Deadline Depart
     C                     Z-ADD*ZERO     WAAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WAAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WAAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WAAYVA           Extended Amount
     C                     Z-ADD*ZERO     WAL6NB           Contract Number
     C                     Z-ADD*ZERO     WAHCDT           LD Arrival Date
     C                     Z-ADD*ZERO     WAESNB           Accounting Year
     C                     Z-ADD*ZERO     WAETNB           Accounting Peri
     C                     Z-ADD*ZERO     WABZNB           OM Week
     C                     Z-ADD*ZERO     WAEXQT           Quantity Billed
     C                     Z-ADD*ZERO     WABYWG           Weight Billed
     C                     Z-ADD*ZERO     WAS5NB           Shipped Item Co
     C                     Z-ADD*ZERO     WAMAVA           Billing Detail
     C                     Z-ADD*ZERO     WAKDVA           Billing Detail
     C                     Z-ADD*ZERO     WAUSVA           FOB Gross Amoun
     C                     Z-ADD*ZERO     WAUTVA           Standard Overag
     C                     Z-ADD*ZERO     WAA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WACKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WAR8NB           Shipping Compan
     C                     Z-ADD*ZERO     WABZPR           Price Overage O
     C                     Z-ADD*ZERO     WAEXDT           Market Pricing
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WAR1NB           Rated Freight
     C                     Z-ADD*ZERO     WACONB           Invoice Number
     C                     Z-ADD*ZERO     WAGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WARMNB           Load ID
     C                     Z-ADD*ZERO     WAAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WASKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WASLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WASMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WAONVA           Actual Freight
     C                     Z-ADD*ZERO     WAB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WAB5NB           PM Line Number
     C                     Z-ADD*ZERO     WAGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WAULVA           Absorbed Freigh
     C                     Z-ADD*ZERO     WAUNVA           Ledgrd Trd Fund
     C                     Z-ADD*ZERO     WAUOVA           Commission Amou
     C                     Z-ADD*ZERO     WAUPVA           Financials Amou
     C                     Z-ADD*ZERO     WAUQVA           Financials Amou
     C                     Z-ADD*ZERO     WACFC7           Order Group Cod
     C                     Z-ADD*ZERO     WADUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WAB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WAIANX           Req Shipping Te
     C                     Z-ADD*ZERO     WAIBNX           Actual Shipping
     C                     Z-ADD*ZERO     WANYDT           Req Delivery Da
     C                     Z-ADD*ZERO     WABZTM           Req Delivery Ti
     C                     Z-ADD*ZERO     WAZ4NB           MPC Number
     C                     Z-ADD*ZERO     WAOCFR           Load Total Frei
     C                     Z-ADD*ZERO     WAC0C7           Claim Number
     C                     Z-ADD*ZERO     WAA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WAA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WACDPR           Market Value
     C                     Z-ADD*ZERO     WAD0PR           Default Cmdty M
     C                     Z-ADD*ZERO     WAD0VL           Raw Material Co
     C                     Z-ADD*ZERO     WACEVL           Sales Expense T
     C                     Z-ADD*ZERO     WAOHDT           LD Sail Date
     C                     Z-ADD*ZERO     WAD9PR           NonLedgrd TrdFn
     C                     Z-ADD*ZERO     WACFVL           HST Item Target
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Default Commod Mark basis
     C                     MOVEL*BLANK    WULNCD  3
      * Define work field Sales Route Code
     C                     MOVEL*BLANK    WUR4CD  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WE   179       *Synon (17,9) w
     C                     Z-ADD*ZEROS    W0WB00 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     MOVEL*BLANK    WL0005 30
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0006  30
     C                     MOVEL*BLANK    WL0007 30
      * Define local variables for subroutine SIRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     MOVEL*BLANK    WL0010  3
      * Define local variables for subroutine SJRVGN.
     C                     MOVEL*BLANK    WL0011  2
     C                     MOVEL*BLANK    WL0012  1
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015 30
     C                     MOVEL*BLANK    WL0016  2
     C                     Z-ADD*ZERO     WL0017  94
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  2
     C                     Z-ADD*ZERO     WL0020  94
     C                     MOVEL*BLANK    WL0021  1
     C                     MOVEL*BLANK    WL0022  2
     C                     MOVEL*BLANK    WL0023  2
     C                     Z-ADD*ZERO     WL0024 112
     C                     MOVEL*BLANK    WL0025  3
     C                     Z-ADD*ZERO     WL0026 114
     C                     Z-ADD*ZERO     WL0027 114
     C                     MOVEL*BLANK    WL0028  7
     C                     MOVEL*BLANK    WL0029  1
     C                     Z-ADD*ZERO     WL0030 114
     C                     MOVEL*BLANK    WL0031  2
      * Define local variables for subroutine SLRVGN.
     C                     MOVEL*BLANK    WL0032  3
     C                     MOVEL*BLANK    WL0033  7
     C                     Z-ADD*ZERO     WL0034  70
     C                     Z-ADD*ZERO     WL0035 114
     C                     Z-ADD*ZERO     WL0036  70
      * Define local work field Date From Alpha       USR
     C                     MOVEL*BLANK    YL0001  7
      * Define local work field Date To Alpha         USR
     C                     MOVEL*BLANK    YL0002  7
      * Define local work field Date Range
     C                     MOVEL*BLANK    YL0003 14
      * Define local work field U/M - Base Price
     C                     MOVEL*BLANK    YL0004  2
      * Define local work field Qty Produced SUM
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Weight Billed SUM
     C                     Z-ADD*ZERO     YL0006 112
      * Define local work field Total Order Values
     C                     Z-ADD*ZERO     YL0007 132
      * Define local work field Extended amount       SUM
     C                     Z-ADD*ZERO     YL0008 112
      * Define local work field Price * Weight SUM
     C                     Z-ADD*ZERO     YL0009 154
      * Define local work field Price * Weight 1 SUM
     C                     Z-ADD*ZERO     YL0010 154
      * Define local work field Item Identifier
     C                     MOVEL*BLANK    YL0011 25
      * Define local work field U/M - Primary
     C                     MOVEL*BLANK    YL0012  2
      * Define local work field Unit Weight
     C                     Z-ADD*ZERO     YL0013 112
      * Define local work field Catch Weight Status
     C                     MOVEL*BLANK    YL0014  1
      * Define local work field Item Structure Class Code
     C                     Z-ADD*ZERO     YL0015  30
      * Define local work field Item Structure Group Code
     C                     Z-ADD*ZERO     YL0016  30
      * Define local work field Item Structure Type Code
     C                     Z-ADD*ZERO     YL0017  30
      * Define local work field Default Commod Mark basis
     C                     MOVEL*BLANK    YL0018  3
      * Define local work field Market Overage
     C                     Z-ADD*ZERO     YL0019 114
      * Define local work field Standard Overage/Underage
     C                     Z-ADD*ZERO     YL0020 114
      * Define local work field Commodity Price Group
     C                     MOVEL*BLANK    YL0021  7
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0022  52
      * Define local work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    YL0023  1
      * Define local work field Credit Item Status
     C                     MOVEL*BLANK    YL0024  1
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0025  1
      * Define local work field Unit Price (DSP)  USR
     C                     Z-ADD*ZERO     YL0026  84
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0027  1
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0028  2
      * Define local work field Quantity Ordered 1    SUM
     C                     Z-ADD*ZERO     YL0029  80
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * ** DLY029R JRB 05/25/07 Changed 1PG Company Number from CON to DB
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       WUGGST           USR Display fie
      * TOP.Description = Condition name of PAR.USR Detail or Summary
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1210393   Y2LSNO  70       List number
     C                     PARM P7STST    W0INVL 25        USR Detail or S
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BAUNA    PARM           W0CNNM 25        Description
      *
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * 8/16/00  Create outfile in Detail  if Rpt Sel is O, and
      *    Status is Yes
      * ?/??/??  DONT Create outfile in Detail - someone commented this o
      *    years ago, so i removed the ref to the workfile.
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
