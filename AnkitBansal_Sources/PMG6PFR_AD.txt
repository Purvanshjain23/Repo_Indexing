// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMG6PFR
// ?Date: 14.08.2025 Time: 12:05:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?** *** Notes ***  see chg log
EXECUTE FUNCTION(VAL Set Int.Acc No Hdg IF) TYPE(EXCINTFUN)                     AC1460523;
PARAMETER('A/R');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Allow_Multi_Company);
PARAMETER(LCL.Default_Printer);
PARAMETER(LCL.Salesperson_Code);
PARAMETER(LCL.Name);
PARAMETER(LCL.System_Value_Alpha);
PARAMETER(LCL.Access_Denied_Y_N);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Appl No Exit  IF) TYPE(EXCINTFUN)                     AC1460535;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 PARAMETER(WRK.Access_Denied_Y_N);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  //?User Profile Record Not found
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  ENDIF;

  CASE;

  // IF LCL.Company Number is greater than zero
  IF LCL.Company_Number > *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  EXECUTE FUNCTION(RTV Prod Whse for Co  RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1757887;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Shipping_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Record Status is Active
   IF DB1.Record_Status = 'A';

   CASE;

   // IF DB1.Production Warehouse Code is Warehouse Code not Blank
   IF DB1.Production_Warehouse_Code <> *BLANK;

   // PAR.Warehouse Code = DB1.Production Warehouse Code
   PAR.Warehouse_Code = DB1.Production_Warehouse_Code;

   QUIT;

   ENDIF;

   ENDIF;

  }

  ENDIF;

  ENDIF;

 }

 // PAR.Company Number = WRK.Company Number
 PAR.Company_Number = WRK.Company_Number;

 // PAR.Access Denied (Y/N) = WRK.Access Denied (Y/N)
 PAR.Access_Denied_Y_N = WRK.Access_Denied_Y_N;

 //?If access denied is no, rtv co. name
 CASE;

 // IF WRK.Access Denied (Y/N) is no
 IF WRK.Access_Denied_Y_N = 'N';

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

}


//?***** Change Log and Comments
//?** *** Notes ***  CUSTOMER NAME should contain the "To" name,
//?** FAX CONTACT NAME 3 should contain the "Contact or Attention" name
//?** and will print under the "To" name. FAX RECIPIENT should contain
//?** the "Fax" number
//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT CDD Type header format

// SUPPRESSED PRINT CDD Department Code header format

// SUPPRESSED PRINT CDD Name of Overlay header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

MOVE *ALL (To: CUR From: PAR);

// CUR.Day NBR USR = JOB.*Job day
CUR.Day_NBR_USR = JOB.*Job_day;

EXECUTE FUNCTION(Rtv Calendar YR/Per.   RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1105774;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(CUR.Year_Code);
PARAMETER(WRK.Accounting_Period_Code);
{
 //?USER: Process Data record

 // PAR.Accounting Period Code = DB1.Accounting Period Code
 PAR.Accounting_Period_Code = DB1.Accounting_Period_Code;

 // PAR.Accounting Year Code = DB1.Accounting Year Code
 PAR.Accounting_Year_Code = DB1.Accounting_Year_Code;

}


EXECUTE FUNCTION(RTV Day of Week No.   RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1658821;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(WRK.Day_of_Week);
{
 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Day of the Week USR = Condition name of WRK.Day of Week
CUR.Day_of_the_Week_USR = RTVCND(WRK.Day_of_Week);

EXECUTE FUNCTION(Load Month Description) TYPE(EXCINTFUN)                        AC1520585;
PARAMETER(JOB.*Job_month);
PARAMETER(CUR.Month_Description_USR);
{
 //?Execute internal function

 // PAR.Month Description     USR = CND.NOT ENTERED
 PAR.Month_Description_USR = *BLANK;

 CASE;

 // IF PAR.Month                 USR is January
 IF PAR.Month_USR = 01;

 // PAR.Month Description     USR = CON.January
 PAR.Month_Description_USR = 'January';

 // IF PAR.Month                 USR is February
 IF PAR.Month_USR = 02;

 // PAR.Month Description     USR = CON.February
 PAR.Month_Description_USR = 'February';

 // IF PAR.Month                 USR is March
 IF PAR.Month_USR = 03;

 // PAR.Month Description     USR = CON.March
 PAR.Month_Description_USR = 'March';

 // IF PAR.Month                 USR is April
 IF PAR.Month_USR = 04;

 // PAR.Month Description     USR = CON.April
 PAR.Month_Description_USR = 'April';

 // IF PAR.Month                 USR is May
 IF PAR.Month_USR = 05;

 // PAR.Month Description     USR = CON.May
 PAR.Month_Description_USR = 'May';

 // IF PAR.Month                 USR is June
 IF PAR.Month_USR = 06;

 // PAR.Month Description     USR = CON.June
 PAR.Month_Description_USR = 'June';

 // IF PAR.Month                 USR is July
 IF PAR.Month_USR = 07;

 // PAR.Month Description     USR = CON.July
 PAR.Month_Description_USR = 'July';

 // IF PAR.Month                 USR is August
 IF PAR.Month_USR = 08;

 // PAR.Month Description     USR = CON.August
 PAR.Month_Description_USR = 'August';

 // IF PAR.Month                 USR is September
 IF PAR.Month_USR = 09;

 // PAR.Month Description     USR = CON.September
 PAR.Month_Description_USR = 'September';

 // IF PAR.Month                 USR is October
 IF PAR.Month_USR = 10;

 // PAR.Month Description     USR = CON.October
 PAR.Month_Description_USR = 'October';

 // IF PAR.Month                 USR is November
 IF PAR.Month_USR = 11;

 // PAR.Month Description     USR = CON.November
 PAR.Month_Description_USR = 'November';

 // IF PAR.Month                 USR is December
 IF PAR.Month_USR = 12;

 // PAR.Month Description     USR = CON.December
 PAR.Month_Description_USR = 'December';

 ENDIF;

}


// CUR.Save Time = JOB.*Job time
CUR.Save_Time = JOB.*Job_time;

//?USER: Print required level totals

// SUPPRESSED PRINT CDD Name of Overlay totals format

// SUPPRESSED PRINT CDD Department Code totals format

// SUPPRESSED PRINT CDD Type totals format

// SUPPRESSED PRINT Company Number totals format

