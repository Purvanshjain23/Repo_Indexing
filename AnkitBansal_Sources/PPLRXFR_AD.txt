// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPLRXFR
// ?Date: 14.08.2025 Time: 03:41:07
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***** Change Log and Comments
DO;

//?RMC Pass ACCTNG CO to pgms to chk for 440 -- 11/16/18 S13578
//?** 03/03/2008 LJB E00094
//?** Add flag - "Y" is New Claim, "N" is Existing Claim
//?** 04/11/2008 SLM Audit of a Claim
//?** 04/11/2008 SLM Also the Claim Exp with Exp, Internal, System Notes
//?033108 SLM Add new feacture E00104 - Internal Notes & System Notes
//?Internal Notes is for the claim department only
//?and will only appear on reports that they requested.
//?These notes will not be sent to outside groups
//?System Notes  - report information or to trigger actions
//?Chgs Specified by the user to a claim will be noted
//?using the system notes.  At the end of this flow they will be read
//?and display a screen to the user to decide to send a claim to the
//?distr list.  The distr list is in esend, and rtv from the
//?company value.
//?E3387 JJH 09/09/14 Re-compiled due to adding Shipping Method to
//? A/R Claim Resale
ENDDO;

//?Establish Claim Audit
DO;

// PAR.Claim Audit Selection Usr = CND.blank
PAR.Claim_Audit_Selection_Usr = *BLANK;

// PAR.Approval Claim Audit Eml = CON.*BLANK
PAR.Approval_Claim_Audit_Eml = *BLANK;

// PAR.Claim Audit Co Value Usr = CND.Claim Audit Distribution
PAR.Claim_Audit_Co_Value_Usr = 'CLMDIST';

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(LCL.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.System Value Alpha is *NONE
IF LCL.System_Value_Alpha = *NONE;

// OR LCL.System Value Alpha is Equal to Blank
OR LCL.System_Value_Alpha = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Approval Claim Audit Eml = LCL.System Value Alpha
PAR.Approval_Claim_Audit_Eml = LCL.System_Value_Alpha;

// PAR.Claim Audit Selection Usr = CND.yes
PAR.Claim_Audit_Selection_Usr = 'Y';

ENDIF;

ENDDO;

//?Claim Flow
// DOW PAR.Clm Program USR is Not Exit
DOW PAR.Clm_Program_USR = 'CCL'/'CRO'/'ECL'/'ECC'/'ECP'/'WWE'/'WWR'/'ECR'/'ERP'/'EEC'              +
/'EEX'/'GOP'/'CCR'/'GOR';

EXECUTE FUNCTION(RTV Claim ShiptoCust   RT) TYPE(RTVOBJ) FILE(PDMKCPP)          AC1735269;
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1801010;
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Shipping_Company);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1801011;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Shipping_Company);
 PARAMETER(PAR.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 QUIT;

 ENDIF;

}


CASE;

// IF PAR.Clm Program USR is Create Claim
IF PAR.Clm_Program_USR = 'CCL';

CASE;

// IF PAR.Claim Order Number is Equal to zeros
IF PAR.Claim_Order_Number = *ZERO;

// Call program SEL Order/Load Id/Invo SR.
CALL PROGRAM(SEL Order/Load Id/Invo SR) ('PBBHSRR');
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(LCL.Customer_Purchase_Order_#);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.AC_Shipping_Method);
PARAMETER(LCL.Invoice_Number);

ENDIF;

CASE;

// IF PAR.Claim Order Number is Not equal to zeros
IF PAR.Claim_Order_Number <> *ZERO;

// Call program Edt Claim Detail       E1.
CALL PROGRAM(Edt Claim Detail       E1) ('PPK3E1R');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(PAR.AC_Shipping_Method);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Clm Program USR = CND.Exit
PAR.Clm_Program_USR = 'EXT';

ENDIF;

// IF PAR.Clm Program USR is Create Resale Only
IF PAR.Clm_Program_USR = 'CRO';

// Call program Edt Claim Detail       E1.
CALL PROGRAM(Edt Claim Detail       E1) ('PPK3E1R');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(*MISSING);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Edit Claim
IF PAR.Clm_Program_USR = 'ECL';

// Call program Edt Claim Detail       E1.
CALL PROGRAM(Edt Claim Detail       E1) ('PPK3E1R');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(*MISSING);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Get OrderProd/ClaimProd
IF PAR.Clm_Program_USR = 'GOP';

// LCL.Ship to Customer      USR = PAR.Claim Ship to Customer
LCL.Ship_to_Customer_USR = PAR.Claim_Ship_to_Customer;

// Call program SEL Item for Order Clm DF.
CALL PROGRAM(SEL Item for Order Clm DF) ('PPLHDFR');
PARAMETER(LCL.Ship_to_Customer_USR);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER('P');
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
PARAMETER(LCL.Accounting_Company);

// IF PAR.Clm Program USR is Edit Claim Product
IF PAR.Clm_Program_USR = 'ECP';

// Call program EDT Claim Products    EF.
CALL PROGRAM(EDT Claim Products    EF) ('PPK4EFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(WRK.Claim_Type);
PARAMETER(WRK.Claim_Amount);
PARAMETER(WRK.Claim_Net_Loss);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Edit Claim Comment
IF PAR.Clm_Program_USR = 'ECC';

// Call program Edt Claim Comm Expl    EF.
CALL PROGRAM(Edt Claim Comm Expl    EF) ('PPK7EFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Work With Resale
IF PAR.Clm_Program_USR = 'WWR';

// PAR.Resale Purchase Order # = CON.*BLANK
PAR.Resale_Purchase_Order_Nbr = *BLANK;

// Call program WW Claim Resale        DF.
CALL PROGRAM(WW Claim Resale        DF) ('PPLODFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Resale_Purchase_Order_Nbr);
PARAMETER('A');
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(PAR.Claim_Status);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Create Claim Resale
IF PAR.Clm_Program_USR = 'CCR';

// Call program Edt Claim Resale       E1.
CALL PROGRAM(Edt Claim Resale       E1) ('PPLPE1R');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Resale_Purchase_Order_Nbr);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Get OrderResal/ClaimResal
IF PAR.Clm_Program_USR = 'GOR';

// Call program SEL Item for ResaleClmDF.
CALL PROGRAM(SEL Item for ResaleClmDF) ('PPPQDFR');
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER('R');
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
PARAMETER(LCL.Accounting_Company);

// IF PAR.Clm Program USR is Edit Resale Product
IF PAR.Clm_Program_USR = 'ERP';

// Call program Edt Claim Resale Prod  EF.
CALL PROGRAM(Edt Claim Resale Prod  EF) ('PPLQEFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(LCL.Reason_Code);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
PARAMETER(LCL.Accounting_Company);

// IF PAR.Clm Program USR is Work With Expense
IF PAR.Clm_Program_USR = 'WWE';

// Call program WW Claim Expense      DF.
CALL PROGRAM(WW Claim Expense      DF) ('PPLBDFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Expense_Code);
PARAMETER(PAR.Sequence_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(PAR.Claim_Status);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

CASE;

// IF PAR.Clm Program USR is Work With Resale
IF PAR.Clm_Program_USR = 'WWR';

// IF PAR.Claim Status is New
IF PAR.Claim_Status = 'N';

//?Claim New Purge Audit Records, Pending will also Purge Audit Records
CASE;

// IF PAR.Claim Status is New
IF PAR.Claim_Status = 'N';

//?Purge out the Claim Exp System records not need at this point
DO;

//?Claims Exp System records are created when changes occur
//?If pending or new purge these records.
//?as records are created after pending and new status then these will
//?will trigger to send emails to the distr list if this
//?feature was requested
EXECUTE FUNCTION(Dlt Claim ExpSysPrToPndRT) TYPE(RTVOBJ) FILE(PDMNCPP)          AC1878354;
PARAMETER(PAR.Claim_Number);
PARAMETER('CLMCHANGE');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT A/R Claim Explan   DL) TYPE(DLTOBJ) FILE(PDMNCPP)          AC1523482;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.Claim_Explanation_Line_No);
}


ENDDO;

ENDIF;

// Call program Pmt A/R Claim -- Pend PM.
CALL PROGRAM(Pmt A/R Claim -- Pend PM) ('PPOHPVR');
PARAMETER(PAR.Claim_Number);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

// IF PAR.Clm Program USR is Edit Expense
IF PAR.Clm_Program_USR = 'EEX';

CASE;

// IF PAR.Expense Code is Entered
IF PAR.Expense_Code <> *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Sel A/R Expense        SR.
CALL PROGRAM(Sel A/R Expense        SR) ('PPKTSRR');
PARAMETER(PAR.Expense_Code);

ENDIF;

// Call program Edt Claim Expense     E1.
CALL PROGRAM(Edt Claim Expense     E1) ('PPLUE1R');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Expense_Code);
PARAMETER(PAR.Sequence_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(PAR.Clm_Program_USR);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);

// IF PAR.Clm Program USR is Edit Exp/Comment
IF PAR.Clm_Program_USR = 'EEC';

// Call program Edt Claim Expense Com EF.
CALL PROGRAM(Edt Claim Expense Com EF) ('PPLVEFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Expense_Code);
PARAMETER(PAR.Sequence_Number);
PARAMETER(PAR.Sequence_Number_044215);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Customer_Name);
PARAMETER(LCL.Return_Command_USR);
PARAMETER(PAR.Clm_Program_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Claim Process was not fnd'
ERROR(USR3456);

// PAR.Clm Program USR = CND.Exit
PAR.Clm_Program_USR = 'EXT';

ENDIF;

ENDDO;

//?04/17/2008 SLM Process Claim Action Records include
//?with E00104 due to support issue that was combined
//?Claim New Purge Audit Records, Pending will also Purge Audit Records
CASE;

// IF PAR.Claim Status is New
IF PAR.Claim_Status = 'N';

//?Purge out the Claim Exp System records not need at this point
DO;

//?Claims Exp System records are created when changes occur
//?If pending or new purge these records.
//?as records are created after pending and new status then these will
//?will trigger to send emails to the distr list if this
//?feature was requested
EXECUTE FUNCTION(Dlt Claim ExpSysPrToPndRT) TYPE(RTVOBJ) FILE(PDMNCPP)          AC1878354;
PARAMETER(PAR.Claim_Number);
PARAMETER('CLMCHANGE');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT A/R Claim Explan   DL) TYPE(DLTOBJ) FILE(PDMNCPP)          AC1523482;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.Claim_Explanation_Line_No);
}


ENDDO;

ENDIF;

EXECUTE FUNCTION(Prc Claim Audit Rcds   IF) TYPE(EXCINTFUN)                     AC1879587;
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
{
 //?Execute internal function

 //?Claim Audit - If Claim Audit Records found then prompt the user
 DO;

 //?Description of processing action records
 DO;

 //?  1. Routine that will read the Claim Audit Records for THIS
 //?     Claim, if one record is found then display pmt for user to
 //?     to decide the action to be taken
 //?  2. Email Action
 //?     If the user select to process the email then do so
 //?     Create a system note that email WAS sent
 //?     or
 //?     Create a system note that email NOT sent
 //?  3. Regardless read these action records and flag that they
 //?     were reviewed for processed.
 //?     If the user selects not to send email these records will
 //?     still be processed.
 ENDDO;

 //?Action: Review the CLMCHANGE records
 // LCL.Claim Expl Action = CND.Claim was changed
 LCL.Claim_Expl_Action = 'CLMCHANGE';

 EXECUTE FUNCTION(Vry Clm ExpSysAtLeast1 RT) TYPE(RTVOBJ) FILE(PDMNCPP)          AC1878378;
 PARAMETER(PAR.Claim_Number);
 PARAMETER(LCL.Claim_Expl_Action);
 PARAMETER(LCL.Clm_Dta_Steps_Com_Usr);
 {
  //?USER: Processing if Data record not found

  // PAR.Clm Dta Steps-Cmt Usr = CND.No Data Exists
  PAR.Clm_Dta_Steps_Com_Usr = *BLANK;

  //?USER: Process Data record

  // PAR.Clm Dta Steps-Com Usr = CVTVAR(CND.Data Found)
  PAR.Clm_Dta_Steps_Com_Usr = CVTVAR('X');

  QUIT;

 }

 CASE;

 // IF LCL.Clm Dta Steps-Com Usr is Data Found
 IF LCL.Clm_Dta_Steps_Com_Usr = 'X';

 //?will prompt user send email, create system note if yes or no
 //?and flag system notes action as completed
 // Call program PMT Email Claim Rpt Y/NPV.
 CALL PROGRAM(PMT Email Claim Rpt Y/NPV) ('PMSAPVR');
 PARAMETER(PAR.Claim_Number);
 PARAMETER(PAR.Claim_Company_Number);
 PARAMETER(PAR.Claim_Audit_Selection_Usr);
 PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
 PARAMETER(PAR.Approval_Claim_Audit_Eml);
 PARAMETER(*YES);
 PARAMETER(*NO);
 PARAMETER('A');

 ENDIF;

 ENDDO;

}


// PAR.Claim Audit Selection Usr = CND.blank
PAR.Claim_Audit_Selection_Usr = *BLANK;

