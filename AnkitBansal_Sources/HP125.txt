      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP125
      * TITLE:       REVISE FUNCTION
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/10/95
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD/CHANGE/DELETE
      *           A FUNCTION
      *
      *           THIS PROGRAM IS CALLED FROM HP425 - WORK WITH
      *           FUNCTIONS.
      *
      *           THE USER MAY DELETE AN EXISTING RECORD BY TAKING
      *           F11=DELETE FROM THIS PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 99/99/99
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD125    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    UF A E           K DISK
      *    FUNCTION                  (KEY: FNFNCD)
      *
     FHSL003A   IF   E           K DISK
      *    FUNCTION AUTHORIZATION    (KEY: FAFNCD FAUSCD)
      *
     FHSP007    IF   E           K DISK
      *    DIVISION                 (KEY: DVDVCD)
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     UPDATE        $UPD1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   MOVE      *BLANK        DFFNDS
     C                   MOVE      *BLANK        DFSFFL
     C                   MOVE      *BLANK        DFFNTY
     C                   MOVE      *BLANK        DFBOFL
     C                   MOVE      *BLANK        DFDVCD
     C                   Z-ADD     0             DFCOPY
     C                   MOVE      *BLANK        DFHOLD
      *
      * IF INCOMING MODE IS REVISE OR DELETE, THEN RETRIEVE DATABASE
      * RECORD.  DO NOT LOCK THE RECORD.
      *
     C     MODE          IFEQ      REVISE                                       IF REV/DEL
     C     MODE          OREQ      DELETE
     C     DFFNCD        CHAIN(N)  HSP002                             90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FNFNDS        DFFNDS
     C                   MOVEL     FNSFFL        DFSFFL
     C                   MOVEL     FNFNTY        DFFNTY
     C                   MOVEL     FNFNTY        WKFNTY
     C                   MOVEL     FNBOFL        DFBOFL
     C                   MOVEL     FNDVCD        DFDVCD
     C                   Z-ADD     FNCOPY        DFCOPY
     C                   MOVEL     FNHOLD        DFHOLD
     C                   ELSE
      * NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00550'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF REV/DEL
      *
      * ALWAYS DISPLAY THE SCREEN--EVEN FOR DELETIONS.
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * THE DSPATR LOGIC USED IN THE DSPF REQUIRES AT LEAST ONE
      * INDICATOR TO BE ON.
      *
     C                   SETON                                        42
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
     C                   SELECT
     C     MODE          WHENEQ    REVISE
     C                   SETON                                        60
     C     MODE          WHENEQ    CREATE
     C                   SETON                                        61
     C     MODE          WHENEQ    DELETE
     C                   SETON                                        63
     C                   ENDSL
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP125K1
     C                   WRITE     HP125EC
     C                   EXFMT     HP125R1
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * RESET ACTION TO BE EQUAL TO THE INCOMING MODE.
      * THIS IS REQUIRED IN CASE THE USER TOOK F11=DELETE,
      * GOT AN ERROR ON THE DELETION, AND NOW NEEDS TO BE ABLE TO
      * CHANGE THE RECORD AND TAKE AN ACTION OTHER THAN DELETE
      *
     C                   MOVEL     MODE          ACTION
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN11         WHENEQ    *ON                                          F11-DELETE
     C                   MOVEL     DELETE        ACTION
     C                   MOVEL     UPDATE        ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     MODE          IFNE      DELETE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * ONLY EDIT IF THE RECORD HAS NOT BEEN DELETED OUT FROM UNDER
      * THE USER
     C     NOTFLG        IFEQ      NO                                           IF NOTFLG
      *
      * IF YOU ARE CREATING A NEW RECORD, VALIDATE:
      *    THAT THE RECORD DOES NOT ALREADY EXIST
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C     DFFNCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFFNCD        CHAIN(N)  HSP002                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00551'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF BLANK
     C                   ENDIF                                                  IF CREATE
      *
      * ALWAYS EDIT FOR BLANKS IN THE DESCRIPTION
      *
     C     DFFNDS        IFEQ      *BLANK
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * VALIDATE THE SECURED FUNCTION FLAG
      *
     C     DFSFFL        IFNE      'Y'                                          IF SECURED
     C     DFSFFL        ANDNE     'N'
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF SECURED
      *
      * VALIDATE FUNCTION TYPE:
      *   MUST BE BLANK FOR UNSECURED FUNCTIONS, OTHERWISE
      *   MUST BE VIEW OR MAINTENANCE
      *
     C                   SELECT
     C     DFSFFL        WHENEQ    YES                                          WH SECURED
     C     DFFNTY        ANDNE     'V'
     C     DFFNTY        ANDNE     'M'
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09116'     MGID(E)
     C                   ENDIF
      *
     C     DFSFFL        WHENEQ    NO                                           WH NOT SEC
     C     DFFNTY        ANDNE     *BLANK
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00570'     MGID(E)
     C                   ENDIF
      *
      * YOU CANNOT CHANGE A FUNCTION FROM 'VIEW' TO 'MAINTENANCE'
      * IF THERE ARE ANY ASSIGNED USERS--SINCE THE ASSIGNED USERS
      * MAY NOT HAVE 'MAINTENANCE RIGHTS'.
      *
     C     WKFNTY        WHENEQ    'V'
     C     DFFNTY        ANDEQ     'M'
     C     DFFNCD        CHAIN     HSL003A                            97
     C     *IN97         IFEQ      *OFF                                         IF ASSIGNED
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00566'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF ASSIGNED
     C                   ENDSL
      *
      * VALIDATE THE BUSINESS OFFICE REQUIRED FLAG
      *   MUST BE BLANK FOR UNSECURED FUNCTIONS, OTHERWISE
      *   MUST BE YES OR NO
      *
     C                   SELECT
     C     DFSFFL        WHENEQ    YES                                          WH SECURED
     C     DFBOFL        ANDNE     'Y'
     C     DFBOFL        ANDNE     'N'
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
      *
     C     DFSFFL        WHENEQ    NO                                           WH NOT SEC
     C     DFBOFL        ANDNE     *BLANK
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00570'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
      * IF ENTERED, VALIDATE DIVISION CODE
      *   MUST BE BLANK FOR UNSECURED FUNCTIONS
      *
     C     DFDVCD        IFNE      *BLANK                                       IF DIVISION
      *
     C                   SELECT
     C     DFSFFL        WHENEQ    NO
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00570'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C     DFDVCD        CHAIN     HSP007                             95
     C     *IN95         IFEQ      *ON                                          IF BAD DIV
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00401'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDVCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD DIV
     C                   ENDSL
     C                   ENDIF                                                  IF DIVISION
      *
      * VALIDATE THAT 'NUMBER OF COPIES' IS NOT NEGATIVE
      *
     C     DFCOPY        IFLT      0                                            IF NEG COPY
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NEG COPY
      *
      * VALIDATE 'HOLD OUTPUT FLAG'
      *
     C     DFHOLD        IFNE      'Y'                                          IF HOLD
     C     DFHOLD        ANDNE     'N'
     C     DFHOLD        ANDNE     *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF HOLD
     C                   ENDIF                                                  IF NOTFLG
      *
      * IF THERE ARE NO ERRORS, ATTEMPT THE WRITE/UPDATE; OTHERWISE,
      * REDISPLAY THE SCREEN.
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $UPD1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $UPD1  - SUBROUTINE TO WRITE/UPDATE/DELETE DATABASE FILE
      *----------------------------------------------------------------
      *
     C     $UPD1         BEGSR
      *
      * IF USER ACTION IS DELETING, PERFORM DELETION INTEGRITY CHECKS
      *
     C     ACTION        IFEQ      DELETE                                       IF DELETE
     C                   EXSR      $DLTCK
     C                   ENDIF                                                  IF DELETE
      *
      *
      * IF USER ACTION IS REVISING OR DELETING, DETERMINE THAT THE
      * RECORD HE IS ACCESSING STILL EXISTS PRIOR TO ATTEMPTING TO
      * UPDATE.  LOCK THE RECORD FOR UPDATE.
      *
     C     ERROR         IFEQ      0                                            IF GOOD
     C     ACTION        IFEQ      DELETE                                       IF D/R
     C     ACTION        OREQ      REVISE
     C     DFFNCD        CHAIN     HSP002                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00550'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF D/L
     C                   ENDIF                                                  IF GOOD
      *
      *  IF THERE ARE NO ERRORS, DELETE, REVISE OR CREATE THE RECORD
      *
     C     ERROR         IFEQ      0                                            IF NO ERR
      *
     C     ACTION        IFEQ      DELETE                                       IF DELETE
     C                   DELETE    FNREC
     C                   ELSE
      *
      *  MOVE DSPF FIELDS TO DATABASE FILE FIELDS
      *
     C                   MOVEL     DFFNCD        FNFNCD
     C                   MOVEL     DFFNDS        FNFNDS
     C                   MOVEL     DFSFFL        FNSFFL
     C                   MOVEL     DFFNTY        FNFNTY
     C                   MOVEL     DFBOFL        FNBOFL
     C                   MOVEL     DFDVCD        FNDVCD
     C                   Z-ADD     DFCOPY        FNCOPY
     C                   MOVEL     DFHOLD        FNHOLD
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   WRITE     FNREC
     C                   ELSE
     C                   UPDATE    FNREC
     C                   ENDIF                                                  IF CREATE
     C                   ENDIF                                                  IF DELETE
     C                   ENDIF                                                  IF NO ERR
      *
      *  IF THERE ARE ANY ERRORS, REDISPLAY THE SCREEN; OTHERWISE, EXIT
      *  THE PROGRAM AUTOMATICALLY. (THE USER DOES NOT HAVE TO TAKE
      *  ANY FUNCTION KEY TO EXIT)
      *
     C     ERROR         IFGT      0
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DLTCK - DELETION INTEGRITY CHECKS                               *
      *---------------------------------------------------------------
      *
     C     $DLTCK        BEGSR
      *
      * CHECK THAT THIS FUNCTION HAS NOT BEEN ASSIGNED TO ANY
      * USER
      *
     C     DFFNCD        CHAIN     HSL003A                            97
     C     *IN97         IFEQ      *OFF                                         IF ASSIGNED
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00549'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF ASSIGNED
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF SECURED FUNCTION FLAG
      *
     C     FLD           WHENEQ    'DFSFFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXSFFL
     C                   CALL      'HP522'
     C                   PARM                    XXSFFL
     C                   SETON                                        58
     C     XXSFFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSFFL        DFSFFL
     C                   ENDIF                                                  IF SELECTED
      *
      * IF FUNCTION TYPE
      *
     C     FLD           WHENEQ    'DFFNTY'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXFNTY
     C                   CALL      'HP586'
     C                   PARM                    XXFNTY
     C                   SETON                                        53
     C     XXFNTY        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFNTY        DFFNTY
     C                   ENDIF                                                  IF SELECTED
      *
      * IF BUSINESS OFFICE REQUIRED FLAG
      *
     C     FLD           WHENEQ    'DFBOFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXBOFL
     C                   CALL      'HP522'
     C                   PARM                    XXBOFL
     C                   SETON                                        54
     C     XXBOFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBOFL        DFBOFL
     C                   ENDIF                                                  IF SELECTED
      *
      * DIVISION
      *
     C     FLD           WHENEQ    'DFDVCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XODVCD
     C                   MOVE      *BLANK        XIDVCD
     C                   CALL      'HP547'
     C                   PARM                    XIDVCD
     C                   PARM                    XODVCD
     C                   PARM                    XXDVDS
     C                   SETON                                        55
     C     XODVCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XODVCD        DFDVCD
     C                   ENDIF                                                  IF SELECTED
      *
      * HOLD OUTPUT FLAG
      *
     C     FLD           WHENEQ    'DFHOLD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXHOLD
     C                   CALL      'HP522'
     C                   PARM                    XXHOLD
     C                   SETON                                        57
     C     XXHOLD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHOLD        DFHOLD
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFFNCD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVEL     *BLANK        PGM              10            USED IN MSG
     C                   MOVEL     *BLANK        MSGFL            10            USED IN MSG
     C                   MOVEL     *BLANK        ROUTNE            6
     C     *LIKE         DEFINE    DFMODE        ACTION
     C     *LIKE         DEFINE    DFMODE        MODE
     C                   MOVEL     MODE          ACTION
     C                   MOVEL     MODE          DFMODE
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * WORKFIELD
     C     *LIKE         DEFINE    DFFNTY        WKFNTY
      *
      * DEFINE PARM FIELDS
      *
     C     *LIKE         DEFINE    DFSFFL        XXSFFL
     C     *LIKE         DEFINE    DFFNTY        XXFNTY
     C     *LIKE         DEFINE    DFBOFL        XXBOFL
     C     *LIKE         DEFINE    DFHOLD        XXHOLD
     C     *LIKE         DEFINE    DVDVCD        XIDVCD
     C     *LIKE         DEFINE    DVDVCD        XODVCD
     C     *LIKE         DEFINE    DVDVDS        XXDVDS
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
