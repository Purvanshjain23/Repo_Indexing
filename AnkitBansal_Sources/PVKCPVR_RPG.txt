     H/TITLE test function             Prompt & validate record
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Prompt & validate record
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISABANS
     H* Date          : 03/07/25  Time  : 09:38:40
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPVKCPVR#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: test function             Prompt & validate record
      *
     FPPBUREL1  IF   E           K DISK
      * RTV : PFS Interface             Retrieval index
      *
     FPVAECPL1  IF   E           K DISK
      * RTV : PPA BOM Level             Retrieval index
      *
     FPPBUREL0  UF   E           K DISK
      * UPD : PFS Interface             Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D QPPBU1        E DS                  EXTNAME(PPBUREL0)
      * UPD : PFS Interface             Update index
      * Renamed input format fields
     D  WBY1NX       E                     EXTFLD(BUY1NX)
     D  WBGYAA       E                     EXTFLD(BUGYAA)
     D  WBRENA       E                     EXTFLD(BURENA)
     D  WBWSSX       E                     EXTFLD(BUWSSX)
     D  WBWUSX       E                     EXTFLD(BUWUSX)
     D  WBQEDT       E                     EXTFLD(BUQEDT)
     D  WBCUTM       E                     EXTFLD(BUCUTM)
     D  WBB0NY       E                     EXTFLD(BUB0NY)
     D  WBB1NY       E                     EXTFLD(BUB1NY)
     D  WBWXSX       E                     EXTFLD(BUWXSX)
     D  WBWVSX       E                     EXTFLD(BUWVSX)
     D  WBWWSX       E                     EXTFLD(BUWWSX)
     D  WBUWSX       E                     EXTFLD(BUUWSX)
     D  WBUXSX       E                     EXTFLD(BUUXSX)
     D  WBV3SX       E                     EXTFLD(BUV3SX)
     D  WBAHNY       E                     EXTFLD(BUAHNY)
     D  WBAINY       E                     EXTFLD(BUAINY)
     D  WBAJNY       E                     EXTFLD(BUAJNY)
     D  WBAKNY       E                     EXTFLD(BUAKNY)
      *
     D YARDCS          DS            92
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  YL0001         S             30
     D  ZQ             S              5  0
     D  YARDC          S              1
     D  XDTSDL         S             26
     D  ZADFMF         S             10
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
     I@BUREBI
      * PFS Interface             Retrieval index
      * Renamed input format fields
     I              BUY1NX                      WAY1NX
     I              BUGYAA                      WAGYAA
     I              BURENA                      WARENA
     I              BUWSSX                      WAWSSX
     I              BUWUSX                      WAWUSX
     I              BUQEDT                      WAQEDT
     I              BUCUTM                      WACUTM
     I              BUB0NY                      WAB0NY
     I              BUB1NY                      WAB1NY
     I              BUWXSX                      WAWXSX
     I              BUWVSX                      WAWVSX
     I              BUWWSX                      WAWWSX
     I              BUUWSX                      WAUWSX
     I              BUUXSX                      WAUXSX
     I              BUV3SX                      WAV3SX
     I              BUAHNY                      WAAHNY
     I              BUAINY                      WAAINY
     I              BUAJNY                      WAAJNY
     I              BUAKNY                      WAAKNY
      *
     I@BUREBH
      * PFS Interface             Update index
      * Renamed input format fields
     I              BUY1NX                      WBY1NX
     I              BUGYAA                      WBGYAA
     I              BURENA                      WBRENA
     I              BUWSSX                      WBWSSX
     I              BUWUSX                      WBWUSX
     I              BUQEDT                      WBQEDT
     I              BUCUTM                      WBCUTM
     I              BUB0NY                      WBB0NY
     I              BUB1NY                      WBB1NY
     I              BUWXSX                      WBWXSX
     I              BUWVSX                      WBWVSX
     I              BUWWSX                      WBWWSX
     I              BUUWSX                      WBUWSX
     I              BUUXSX                      WBUXSX
     I              BUV3SX                      WBV3SX
     I              BUAHNY                      WBAHNY
     I              BUAINY                      WBAINY
     I              BUAJNY                      WBAJNY
     I              BUAKNY                      WBAKNY
      *
     I@AECPNQ
      * PPA BOM Level             Retrieval index
      * Renamed input format fields
     I              AEH2NZ                      WCH2NZ
     I              AEICNZ                      WCICNZ
     I              AECQAB                      WCCQAB
     I              AEO4SC                      WCO4SC
     I              AEFAVN                      WCFAVN
     I              AEBVTS                      WCBVTS
     I              AEFBVN                      WCFBVN
     I              AEBWTS                      WCBWTS
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Conduct screen conversation
     C                   DO        *HIVAL
      * Start new transaction
     C                   MOVEL     'Y'           W0TRN
      * Process current transaction
      * Display screen
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Reset screen fields
     C   30              CAS                     MALDSC
      * Process screen input
     C                   CAS                     DAPRSC
     C                   END
      *
     C                   END
      *
     C                   END
      *****************************************************************
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPRSC        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate screen input
     C                   EXSR      DBVLSC
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * Prompt for confirmation
     C                   EXSR      DHPMCF
      * Quit if not confirmed
     C     *IN99         CABEQ     '1'           DAEXIT
      * USER: User defined action
      * CASE: DTL.*CMD key is CF07
      * ZZz Rtv Upd PFS Interface - PFS Interface  * 
     C                   IF        *IN07
     C                   EXSR      SARVGN
     C                   END                                                    *FI
      * Request new transaction
     C                   MOVEL     'N'           W0TRN
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBVLSC        BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * USER: Validate fields
      * zzz rtvobj all - PFS Interface  * 
     C                   IF        YPMTFD = ' '
     C                   EXSR      SCRVGN
     C                   END
      * Bypass ref file checks if error already detected
     C   99              GOTO      DBEXIT
      * Check reference to PPA BOM Level
     C                   EXSR      VACKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * PFS Company Number required
     C                   IF        #DY1NX = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * PFS Interface Code required
     C                   IF        #DGYAA = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9932      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DHPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Update screen time
     C                   TIME                    ##TME
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      DHEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   DHEXIT        ENDSR
      /EJECT
     CSR   MALDSC        BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                   Z-ADD     *ZERO         #1H2NZ                         BOM Level ID
     C                   EVAL      #1V2ST = ' '                                 BOM Type
     C                   EVAL      #1ICNZ = ' '                                 BOM LEVEL CD
     C                   EVAL      #1H7TX = ' '                                 @AS City
     C                   EVAL      #1VSST = ' '                                 Record Status
     C                   Z-ADD     *ZERO         #1MJDT                         Create Date
     C                   EVAL      #1CDVN = ' '                                 Create Program
     C                   Z-ADD     *ZERO         #DY1NX                         PFS Company Num
     C                   EVAL      #DGYAA = ' '                                 PFS Interface C
     C                   EVAL      #DRENA = ' '                                 PFS Interface D
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * ZZz Rtv Upd PFS Interface - PFS Interface  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WAY1NX                         PFS Company Num
     C                   KFLD                    WAGYAA                         PFS Interface C
      * Setup key
     C                   Z-ADD     #DY1NX        WAY1NX                         PFS Company Num
     C                   MOVEL     #DGYAA        WAGYAA                         PFS Interface C
      * Establish starting position
     C     KRSSA         CHAIN     @BUREBI                            90        *
      * Data record not found
     C   90              MOVEL     'USR3541'     W0RTN
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   Z-ADD     1             ZQ
     C     @CN(001)      CAT(P)    WARENA:ZQ     YL0001                         PFS Interface D
      * Change PFS Interface - PFS Interface  * 
     C                   EXSR      SBCHRC
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBCHRC        BEGSR
      *================================================================
      * Change PFS Interface - PFS Interface  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @BUREBH
     C                   Z-ADD     WAY1NX        WBY1NX                         PFS Company Num
     C                   MOVEL(P)  WAGYAA        WBGYAA                         PFS Interface C
      *
     C     KLCHSB        KLIST
     C                   KFLD                    WBY1NX                         PFS Company Num
     C                   KFLD                    WBGYAA                         PFS Interface C
     C     KLCHSB        CHAIN     @BUREBH                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PPBUREL0'    MDACP
     C                   MOVEL     '@BUREBH'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPPBU1        YARDCS
      * Move non-key fields to @BUREBH
     C                   MOVEL(P)  YL0001        WBRENA                         PFS Interface D
     C                   MOVEL(P)  WAWSSX        WBWSSX                         PFS AccuSort Ac
     C                   MOVEL(P)  WAWUSX        WBWUSX                         PFS Carlisle Ac
     C                   Z-ADD     WAQEDT        WBQEDT                         PFS Last Update
     C                   Z-ADD     WACUTM        WBCUTM                         PFS Last Update
     C                   Z-ADD     WAB0NY        WBB0NY                         PFS Hours Betwe
     C                   Z-ADD     WAB1NY        WBB1NY                         PFS Minutes Btw
     C                   MOVEL(P)  WAWXSX        WBWXSX                         PFS Shift Uploa
     C                   MOVEL(P)  WAWVSX        WBWVSX                         PFS Int Unused
     C                   MOVEL(P)  WAWWSX        WBWWSX                         PFS Int Unused
     C                   MOVEL(P)  WAUWSX        WBUWSX                         PFS Record Stat
     C                   Z-ADD     WAUXSX        WBUXSX                         PFS Process Sta
     C                   MOVEL(P)  WAV3SX        WBV3SX                         PFS Error Reaso
     C                   Z-ADD     WAAHNY        WBAHNY                         PFS Create Date
     C                   Z-ADD     WAAINY        WBAINY                         PFS Create Time
     C                   Z-ADD     WAAJNY        WBAJNY                         PFS Change Date
     C                   Z-ADD     WAAKNY        WBAKNY                         PFS Change Time
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPPBU1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @BUREBH                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PPBUREL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * zzz rtvobj all - PFS Interface  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WAY1NX                         PFS Company Num
     C                   KFLD                    WAGYAA                         PFS Interface C
      * Setup key
     C                   Z-ADD     #DY1NX        WAY1NX                         PFS Company Num
     C                   MOVEL     #DGYAA        WAGYAA                         PFS Interface C
      * Establish starting position
     C     KRSSC         CHAIN     @BUREBI                            90        *
      * Data record not found
     C   90              MOVEL     'USR3541'     W0RTN
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check reference to PPA BOM Level
      *================================================================
     C                   EVAL      W0RTN = ' '
      * If all low order keys not entered, exit
     C                   IF        #1H2NZ = *ZERO
     C                   GOTO      VAEXIT
     C                   END
      *
     C     KLVAWC        KLIST
     C                   KFLD                    WCH2NZ                         BOM Level ID
      * Setup key
     C                   Z-ADD     #1H2NZ        WCH2NZ
     C     KLVAWC        CHAIN     @AECPNQ                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
      * Send message 'PPA BOM Level          NF'
     C                   MOVEL     'USR5328'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR5328'     W0RTN
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAY1NX                         PFS Company Num
     C                   Z-ADD     *ZERO         WAQEDT                         PFS Last Update
     C                   Z-ADD     *ZERO         WACUTM                         PFS Last Update
     C                   Z-ADD     *ZERO         WAB0NY                         PFS Hours Betwe
     C                   Z-ADD     *ZERO         WAB1NY                         PFS Minutes Btw
     C                   Z-ADD     *ZERO         WAUXSX                         PFS Process Sta
     C                   Z-ADD     *ZERO         WAAHNY                         PFS Create Date
     C                   Z-ADD     *ZERO         WAAINY                         PFS Create Time
     C                   Z-ADD     *ZERO         WAAJNY                         PFS Change Date
     C                   Z-ADD     *ZERO         WAAKNY                         PFS Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCH2NZ                         BOM Level ID
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(002)      XDTSDL
     C                   MOVEL     XDTSDL        WCBVTS                         Created Dt Tm
     C                   MOVEL     XDTSDL        WCBWTS                         Updated Dt Tm
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local work field PFS Interface Desc
     C                   EVAL      YL0001 = ' '
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   EVAL      W0GRP = ' '
      * Load screen
     C                   EXSR      MALDSC
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 'Ank'
00002 0001-01-01-00.00.00.00000
