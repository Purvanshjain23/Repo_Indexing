// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDQ9PFR
// ?Date: 14.08.2025 Time: 12:04:18
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// WRK.Print Yes/No          USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print (Yes/No) USR = CND.No
WRK.Print_Yes_No_USR = 'N';

//?USER: Record selection processing

//?Selecting Records by Warehouse Code
CASE;

// IF PAR.Warehouse Code is Warehouse Code not Blank
IF PAR.Warehouse_Code <> *BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

EXECUTE FUNCTION(Sel Order by Whs      RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1512396;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PGM.*Record_selected);
PARAMETER(WRK.Whs_Ord_Found_STS);
{
 //?USER: Initialize routine

 // PAR.Whs Ord Found STS = CND.no
 PAR.Whs_Ord_Found_STS = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 CASE;

 // IF PAR.Warehouse Code EQ DB1.Warehouse Code
 IF PAR.Warehouse_Code = DB1.Warehouse_Code;

 // PAR.*Record selected = CND.*YES
 PAR.*Record_selected = 'Y';

 // PAR.Whs Ord Found STS = CND.yes
 PAR.Whs_Ord_Found_STS = 'Y';

 QUIT;

 ENDIF;

 ENDIF;

}


//?Selecting Records by Warehouse Code
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

ENDIF;

//?USER: Process top of page

CASE;

// IF WRK.Print Yes/No          USR is Yes
IF WRK.Print_Yes_No_USR = 'Y';

MOVE *ALL (To: TOP From: PAR);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.Warehouse Code is Warehouse Code Blank
IF PAR.Warehouse_Code = *BLANK;

// TOP.Warehouse Description = CON.*All
TOP_Warehouse_Description = *All;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(TOP_Warehouse_Code);
PARAMETER(TOP_Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


ENDIF;

ENDIF;

CASE;

// IF WRK.USR Display field is no
IF WRK.USR_Display_field = 'N';

// WRK.Print (Yes/No) USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

ENDIF;

//?USER: Process after print of first page format

// WRK.Yes/No Selection      USR = CND.Yes
WRK.Yes_No_Selection_USR = 'Y';

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Scheduled Ship Date header format

// SUPPRESSED PRINT Order Number header format

//?USER: On print of detail format

// WRK.Print Yes/No          USR = CND.No
WRK.Print_Yes_No_USR = 'N';

CASE;

// IF CUR.Load ID is GT Zero
IF CUR.Load_ID > *ZERO;

EXECUTE FUNCTION(RTV Deadln DepartDT/TM RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1497302;
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Deadline_Departure_Date);
PARAMETER(PAR.Deadline_Departure_Time);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// CUR.Deadline Depart Time 4,0 = PAR.Deadline Departure Time / CON.100 *
CUR.Deadline_Depart_Time_40 = PAR.Deadline_Departure_Time / 100;

ENDIF;

//?S17054 DN 04/07/21-Count Cases as Boxes. Replaced function with
//?  'RTV UM/Whs Code-Add CS RT'.
EXECUTE FUNCTION(RTV UM/Whs Code-Add CS RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2196569;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(CUR.Unit_of_Measure);
{
 //?USER: Initialize routine

 // WRK.First Time Flag = CND.Yes
 WRK.First_Time_Flag = 'Y';

 // LCL.Boxes Total Quantity = CON.*ZERO
 LCL.Boxes_Total_Quantity = *ZERO;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 //?PF3280 -- add "Cases" to the case-stmt
 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 CASE;

 // IF DB1.U/M - Ordered is Combos
 IF DB1.U_M_Ordered = 'CB';

 // OR DB1.U/M - Ordered is EQ Boxes
 OR DB1.U_M_Ordered = 'BX';

 // OR DB1.U/M - Ordered is Mixed
 OR DB1.U_M_Ordered = 'MX';

 // OR DB1.U/M - Ordered is Cases
 OR DB1.U_M_Ordered = 'CS';

 CASE;

 // IF DB1.Detail Line Status is Cancelled
 IF DB1.Detail_Line_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?S17054 DN 04/06/21-Beyond this point, changed all 'U/M - Ordered'
 //?  to reference LCL Context instead of DB1.
 //?S17054 DN 04/06/21-Count Type 'Cases' (CS) as 'Boxes' (BX).
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.U/M - Ordered = DB1.U/M - Ordered
 LCL.U_M_Ordered = DB1.U_M_Ordered;

 CASE;

 // IF LCL.U/M - Ordered is Cases
 IF LCL.U_M_Ordered = 'CS';

 // LCL.U/M - Ordered = CND.EQ Boxes
 LCL.U_M_Ordered = 'BX';

 ENDIF;

 ENDIF;

 //?Sum for later check
 CASE;

 // IF LCL.U/M - Ordered is EQ Boxes
 IF LCL.U_M_Ordered = 'BX';

 // LCL.Boxes Total Quantity = LCL.Boxes Total Quantity + DB1.Quantity Ordered
 LCL.Boxes_Total_Quantity = LCL.Boxes_Total_Quantity + DB1.Quantity_Ordered;

 ENDIF;

 CASE;

 // IF PAR.USR Unit of Measure is *Blank
 IF PAR.USR_Unit_of_Measure = *BLANK;

 // PAR.USR Unit of Measure = LCL.U/M - Ordered
 PAR.USR_Unit_of_Measure = LCL.U_M_Ordered;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.U/M - Ordered EQ PAR.USR Unit of Measure
 IF LCL.U_M_Ordered = PAR.USR_Unit_of_Measure;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.U/M - Ordered = CND.Mixed
 WRK.U_M_Ordered = 'MX';

 // PAR.USR Unit of Measure = WRK.U/M - Ordered
 PAR.USR_Unit_of_Measure = WRK.U_M_Ordered;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?E2709 RMC 9/12/13  Classify as BX/CB - never MX
 CASE;

 // IF PAR.USR Unit of Measure is Mixed
 IF PAR.USR_Unit_of_Measure = 'MX';

 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('BOXLOAD');
 PARAMETER(LCL.Box_Load_Min_Box_Qty_USR);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Boxes Total Quantity LT LCL.Box Load Min Box Qty USR
 IF LCL.Boxes_Total_Quantity < LCL.Box_Load_Min_Box_Qty_USR;

 // PAR.USR Unit of Measure = CND.Combos
 PAR.USR_Unit_of_Measure = 'CB';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.USR Unit of Measure = CND.Boxed
 PAR.USR_Unit_of_Measure = 'BX';

 ENDIF;

 ENDIF;

}


CASE;

// IF WRK.Yes/No Selection      USR is No
IF WRK.Yes_No_Selection_USR = 'N';

// WRK.Yes/No Selection      USR = CND.Yes
WRK.Yes_No_Selection_USR = 'Y';

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT Scheduled Ship Date totals format

// SUPPRESSED PRINT Company Number totals format

