// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLOLPVR
// ?Date: 14.08.2025 Time: 02:54:55
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?MODIFICATIONS
//?01/23/2021 ISE H16853 - Increased the length from 5 to 7 and
//?                        corrected the alignment of Buy Order Number field
//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

EXECUTE FUNCTION(Rtv Key f/BOL         RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1296084;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(PAR.BOL_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.DSD_Delivery_Time_Seq);
PARAMETER(DTL.DSD_Movement_Number);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 QUIT;

}


// DTL.Delivery Date New Usr = DTL.DSD Delivery Date
DTL.Delivery_Date_New_Usr = DTL.DSD_Delivery_Date;

//?USER: Validate fields

// LCL.Delivery Time New Usr = DTL.Time Beg 4.0 USR
LCL.Delivery_Time_New_Usr = DTL.Time_Beg_4_0_USR;

CASE;

// IF DTL.Time Beg 4.0 USR is Entered
IF DTL.Time_Beg_4_0_USR <> *ZERO;

//?Read Deliver Detail just to find out if there is a record
EXECUTE FUNCTION(Rtv Key f/BOL         RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1296084;
PARAMETER(NLL.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(NLL.DSD_Delivery_Date);
PARAMETER(NLL.DSD_Delivery_Time);
PARAMETER(NLL.DSD_Delivery_Time_Seq);
PARAMETER(NLL.DSD_Movement_Number);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 QUIT;

}


//?If record is found then lets read where we are going to
//?there must be a record for a slot if there is a scheduling record
//?at all
//?It is not required that a schedule record be there,
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// IF *OTHERWISE
IF *OTHERWISE;

//?But if found then try to validate the new one
EXECUTE FUNCTION(Val Move Date/time    RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1260018;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(PAR.DSD_Delivery_Date);
PARAMETER(LCL.Delivery_Time_New_Usr);
PARAMETER(WRK.Status_1);
{
 //?USER: Initialize routine

 // PAR.Status 1 = CND.No
 PAR.Status_1 = 'N';

 //?USER: Process Data record

 // PAR.Status 1 = CND.Yes
 PAR.Status_1 = 'Y';

 QUIT;

}


CASE;

// IF WRK.Status 1 is No
IF WRK.Status_1 = 'N';

// Send error message - 'Time Slot Not Found = Kill Dt = &1, Dlv Dt = &2, Dlv Tm = &3'
ERROR(PRK1229);
MSGPARM(PAR.DSH_Kill_Date);
MSGPARM(PAR.DSD_Delivery_Date);
MSGPARM(LCL.Delivery_Time_New_Usr);

ENDIF;

ENDIF;

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.Time Beg 4.0 USR is Entered
IF DTL.Time_Beg_4_0_USR <> *ZERO;

// LCL.Delivery Time New Usr = DTL.Time Beg 4.0 USR
LCL.Delivery_Time_New_Usr = DTL.Time_Beg_4_0_USR;

//?PER Brad change the Delivery Date also due to the transfer is on
//?kill date, and they do not want the load number to change
EXECUTE FUNCTION(Crt HPE Audit Image    IF) TYPE(EXCINTFUN)                     AB1308210;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.BOL_Kill_Date);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.DSD_Delivery_Time_Seq);
PARAMETER('WWRECO10');
PARAMETER('B');
{
 //?Execute internal function

 // WRK.Text description = CON.*BLANK
 WRK.Text_description = *BLANK;

 CASE;

 // IF PAR.Audit Image Bef/Aft is Before Image
 IF PAR.Audit_Image_Bef_Aft = 'B';

 // WRK.Text description = CON.Before: Dlv Date
 WRK.Text_description = 'Before: Dlv Date';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Text description = CON.After.: Dlv Date
 WRK.Text_description = 'After.: Dlv Date';

 ENDIF;

 //?build image
 // WRK.Date Alpha USR = CVTVAR(PAR.DSD Delivery Date)
 WRK.Date_Alpha_USR = CVTVAR(PAR.DSD_Delivery_Date);

 // WRK.Time  Alpha Usr = CVTVAR(PAR.DSD Delivery Time)
 WRK.Time_Alpha_Usr = CVTVAR(PAR.DSD_Delivery_Time);

 // WRK.All Text              USR = CVTVAR(PAR.DSD Delivery Time Seq)
 WRK.All_Text_USR = CVTVAR(PAR.DSD_Delivery_Time_Seq);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.Date Alpha USR,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.Date_Alpha_USR (1);

 // WRK.Text description = CONCAT(WRK.Text description,CON.Time,CON.1)
 WRK.Text_description = WRK.Text_description + 'Time' (1);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.Time  Alpha Usr,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.Time_Alpha_Usr (1);

 // WRK.Text description = CONCAT(WRK.Text description,CON.Seq,CON.1)
 WRK.Text_description = WRK.Text_description + 'Seq' (1);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.All Text              USR,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.All_Text_USR (1);

 // WRK.HA Image = WRK.Text description
 WRK.HA_Image = WRK.Text_description;

 EXECUTE FUNCTION(Crt HPE Audit Informat RT) TYPE(RTVOBJ) FILE(PLBICPP)          AB1308236;
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(PAR.HA_Audit_Type);
 PARAMETER(WRK.HA_Image);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.BOL_Kill_Date);
 {
  //?USER: Processing if Data record not found

  // PAR.HA Sequence = CON.1
  PAR.HA_Sequence = 1;

  EXECUTE FUNCTION(Crt HPE Audit Informat CR) TYPE(CRTOBJ) FILE(PLBICPP)          AB1308203;
  PARAMETER(PAR.HA_Creation_Date);
  PARAMETER(PAR.HA_Creation_Time);
  PARAMETER(PAR.HA_Sequence);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(PAR.HA_Audit_Type);
  PARAMETER(PAR.HA_Image);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.HA_Kill_date);
  //?USER: Process Data record

  // PAR.HA Sequence = DB1.HA Sequence + CON.1
  PAR.HA_Sequence = DB1.HA_Sequence + 1;

  EXECUTE FUNCTION(Crt HPE Audit Informat CR) TYPE(CRTOBJ) FILE(PLBICPP)          AB1308203;
  PARAMETER(PAR.HA_Creation_Date);
  PARAMETER(PAR.HA_Creation_Time);
  PARAMETER(PAR.HA_Sequence);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(PAR.HA_Audit_Type);
  PARAMETER(PAR.HA_Image);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.HA_Kill_date);
 }

}


// Call program Chg MoveTime Slot4    XF.
CALL PROGRAM(Chg MoveTime Slot4    XF) ('PLOWXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.BOL_Pln_Delv_Date);
PARAMETER(DTL.Delivery_Date_New_Usr);
PARAMETER(LCL.Delivery_Time_New_Usr);
PARAMETER(WRK.Delivery_Time_Seq_New_Usr);

EXECUTE FUNCTION(Crt HPE Audit Image    IF) TYPE(EXCINTFUN)                     AB1308210;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.BOL_Kill_Date);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.Delivery_Date_New_Usr);
PARAMETER(LCL.Delivery_Time_New_Usr);
PARAMETER(WRK.Delivery_Time_Seq_New_Usr);
PARAMETER('WWRECO10');
PARAMETER('A');
{
 //?Execute internal function

 // WRK.Text description = CON.*BLANK
 WRK.Text_description = *BLANK;

 CASE;

 // IF PAR.Audit Image Bef/Aft is Before Image
 IF PAR.Audit_Image_Bef_Aft = 'B';

 // WRK.Text description = CON.Before: Dlv Date
 WRK.Text_description = 'Before: Dlv Date';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Text description = CON.After.: Dlv Date
 WRK.Text_description = 'After.: Dlv Date';

 ENDIF;

 //?build image
 // WRK.Date Alpha USR = CVTVAR(PAR.DSD Delivery Date)
 WRK.Date_Alpha_USR = CVTVAR(PAR.DSD_Delivery_Date);

 // WRK.Time  Alpha Usr = CVTVAR(PAR.DSD Delivery Time)
 WRK.Time_Alpha_Usr = CVTVAR(PAR.DSD_Delivery_Time);

 // WRK.All Text              USR = CVTVAR(PAR.DSD Delivery Time Seq)
 WRK.All_Text_USR = CVTVAR(PAR.DSD_Delivery_Time_Seq);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.Date Alpha USR,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.Date_Alpha_USR (1);

 // WRK.Text description = CONCAT(WRK.Text description,CON.Time,CON.1)
 WRK.Text_description = WRK.Text_description + 'Time' (1);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.Time  Alpha Usr,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.Time_Alpha_Usr (1);

 // WRK.Text description = CONCAT(WRK.Text description,CON.Seq,CON.1)
 WRK.Text_description = WRK.Text_description + 'Seq' (1);

 // WRK.Text description = CONCAT(WRK.Text description,WRK.All Text              USR,CON.1)
 WRK.Text_description = WRK.Text_description + WRK.All_Text_USR (1);

 // WRK.HA Image = WRK.Text description
 WRK.HA_Image = WRK.Text_description;

 EXECUTE FUNCTION(Crt HPE Audit Informat RT) TYPE(RTVOBJ) FILE(PLBICPP)          AB1308236;
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(PAR.HA_Audit_Type);
 PARAMETER(WRK.HA_Image);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.BOL_Kill_Date);
 {
  //?USER: Processing if Data record not found

  // PAR.HA Sequence = CON.1
  PAR.HA_Sequence = 1;

  EXECUTE FUNCTION(Crt HPE Audit Informat CR) TYPE(CRTOBJ) FILE(PLBICPP)          AB1308203;
  PARAMETER(PAR.HA_Creation_Date);
  PARAMETER(PAR.HA_Creation_Time);
  PARAMETER(PAR.HA_Sequence);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(PAR.HA_Audit_Type);
  PARAMETER(PAR.HA_Image);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.HA_Kill_date);
  //?USER: Process Data record

  // PAR.HA Sequence = DB1.HA Sequence + CON.1
  PAR.HA_Sequence = DB1.HA_Sequence + 1;

  EXECUTE FUNCTION(Crt HPE Audit Informat CR) TYPE(CRTOBJ) FILE(PLBICPP)          AB1308203;
  PARAMETER(PAR.HA_Creation_Date);
  PARAMETER(PAR.HA_Creation_Time);
  PARAMETER(PAR.HA_Sequence);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(PAR.HA_Audit_Type);
  PARAMETER(PAR.HA_Image);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.HA_Kill_date);
 }

}


ENDIF;

