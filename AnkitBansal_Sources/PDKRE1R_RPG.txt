     H/TITLE EDT Lockbox Invoice    E1 Edit record(1 screen)
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Edit record(1 screen)
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJBADE
     H* Date          : 09/16/16  Time  : 09:32:19
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPDKRE1R#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: EDT Lockbox Invoice    E1 Edit record(1 screen)
      *
     FPDMDCPL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : A/R Lockbox Invoice       Retrieval index
      *
     FPDMCCPL1IF  E           K        DISK
      * RTV : A/R Lockbox Check         Retrieval index
      *
     FARBDCPLGIF  E           K        DISK
      * RSQ : A/R Header                RSQ Inv/Sfx (Open)  N
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDMDCPL0UF  E           K        DISK                      A
      * UPD : A/R Lockbox Invoice       Update index
      *
     E                    #L7         7  1
     E                    #L3         3  1
     E                    UCT        40  1               CENTER TABLE
      * KEY Screen: Field position and name array
     E                    W0BEG   6 006  5 0A
     E                    W0END   6 006  5 0A
     E                    W0NAM   6 006 10
      * DETAIL Screen: Field position and name array
     E                    W1BEG   7 022  5 0A
     E                    W1END   7 022  5 0A
     E                    W1NAM   7 022 10
      * Long constants
     E                    @CN#    1  03  6   @CN    25
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSPDMDCPL0
      * UPD : A/R Lockbox Invoice       Update index
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                             65
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
     IYARDCS      DS                             65
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             18
      * KEY: A/R Lockbox Invoice       Retrieval index
      * I : RST LckBx Number
     I                                    P   1   40P1BEC3
      * I : RST LckBx Deposit Date
     I                                    P   5   80P1LWDT
      * I : RST LckBx Deposit Time
     I                                    P   9  110P1YWNX
      * I : RST LckBx Batch Number
     I                                    P  12  130P1BFC3
      * I : RST LckBx Item Number
     I                                    P  14  150P1BGC3
      * I : RST LckBx Seq Number
     I                                    P  16  170P1NMC5
      * I : RST LckBx Seq Counter
     I                                    P  18  180P1NMC4
     IP2PARM      DS                             71
      * RCD: A/R Lockbox Check         Retrieval index
      * I : MAP LckBx Check Number
     I                                       16  25 P2O1TX
      * I : MAP LckBx Check Amount
     I                                    P  30  352P2ZZVA
      * I : MAP LckBx Hold Flag
     I                                       71  71 P2ADSX
     IP3PARM      DS                             24
      * RCD: A/R Lockbox Deposit       Retrieval index
      * I : MAP LckBx Deposit Status
     I                                       24  24 P3AWSX
     IP4PARM      DS
      * I : MAP LckBx Total Inv Amt   USR
     I                                    P   1   62P4Z5VA
     IP5PARM      DS
      * I : MAP LckBx Inv/Chk Diff    USR
     I                                    P   1   62P5Z8VA
     IP6PARM      DS                            137
      * RCD: Security Parameter List
      * N :  Warehouse Code
     I                                        1   3 P6AJCD
      * N :  Application Code
     I                                        6  11 P6DNCD
      * N :  Salesperson Code
     I                                       28  30 P6BCCD
      * N :  Allow Multi-Company
     I                                       44  44 P6I6ST
      * N :  Default Printer
     I                                       46  55 P6MPNA
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'LckBx Invoice Number Req.'
      * LckBx Invoice Number
     I                                    P   1   50ZA0001
      * Message data for 'LckBx no CB against CB'
      * Adjustment Type Code
     I                                        1   3 ZA0002
      * Message data for 'LckBx Remaining Due <= 0'
      * LckBx Invoice Number
     I                                    P   1   50ZA0003
      * Message data for 'LckBx Invalid Invoice Nbr'
      * LckBx Invoice Number
     I                                    P   1   50ZA0004
      * Message data for 'LckBx Inv Amt must be > 0'
      * LckBx Invoice Amount
     I                                    P   1   62ZA0005
      * Message data for 'LckBx Type is Required.'
      * Adjustment Type Code
     I                                        1   3 ZA0006
      * Message data for 'LckBx Inv Type Invalid'
      * Adjustment Type Code
     I                                        1   3 ZA0007
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0008
      * Application Code
     I                                       11  16 ZA0009
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0010
      * Application Code
     I                                       11  16 ZA0011
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: A/R Lockbo
     C                     PARM           P2PARM           RCD: A/R Lockbo
     C                     PARM           P3PARM           RCD: A/R Lockbo
     C           P4Z5VA    PARM           WP0001 112       LckBx Total Inv
     C           P5Z8VA    PARM           WP0002 112       LckBx Inv/Chk D
     C                     PARM           P6PARM           RCD: *Arrays
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Display and process key screen
     C                     EXSR BADSKY
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Convert internal to external form
     C  N09                EXSR MNCV#K
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1YWNX    IFEQ *ZERO                      LckBx Deposit T
     C           #1BEC3    OREQ *ZERO                      LckBx Number
     C           #1LWDT    OREQ *ZERO                      LckBx Deposit D
     C           #1BFC3    OREQ *ZERO                      LckBx Batch Num
     C           #1BGC3    OREQ *ZERO                      LckBx Item Numb
     C           #1NMC5    OREQ *ZERO                      LckBx Seq Numbe
     C           #1NMC4    OREQ *ZERO                      LckBx Seq Count
      * One or more key fields is blank
     C           *IN30     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFEQ 'N'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   30                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
     C           YPMTFD    CABNE*BLANKS   BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           MDBEC3           LckBx Number
     C                     KFLD           MDLWDT           LckBx Deposit D
     C                     KFLD           MDYWNX           LckBx Deposit T
     C                     KFLD           MDBFC3           LckBx Batch Num
     C                     KFLD           MDBGC3           LckBx Item Numb
     C                     KFLD           MDNMC5           LckBx Seq Numbe
     C                     KFLD           MDNMC4           LckBx Seq Count
      * Setup key
     C                     Z-ADD#1BEC3    MDBEC3
     C                     Z-ADD#1LWDT    MDLWDT
     C                     Z-ADD#1YWNX    MDYWNX
     C                     Z-ADD#1BFC3    MDBFC3
     C                     Z-ADD#1BGC3    MDBGC3
     C                     Z-ADD#1NMC5    MDNMC5
     C                     Z-ADD#1NMC4    MDNMC4
     C           KRTV      CHAIN@MDCPT1              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     99    *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, flip to add mode
     C           *IN90     IFEQ '1'
     C                     MOVEL'ADD'     W0PMD
      * USER: Initialize detail screen (new record)
      * *** Load screen heading ***
      * RTV Cust Number Name   RT - A/R Lockbox Check  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1BEC3    WL0001           LckBx Number
     C                     Z-ADD#1LWDT    WL0002           LckBx Deposit D
     C                     Z-ADD#1YWNX    WL0003           LckBx Deposit T
     C                     Z-ADD#1BFC3    WL0004           LckBx Batch Num
     C                     Z-ADD#1BGC3    WL0005           LckBx Item Numb
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0006    #DAJNB           LckBx Customer
     C                     MOVELWL0007    #DAYTX    P      LckBx Customer
      * DTL.Text USR = Condition name of PAR.LckBx Deposit Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1509761   Y2LSNO  70       List number
     C                     PARM P3AWSX    W0INVL 25        LckBx Deposit S
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DIUTX    PARM           W0CNNM 25        Text USR
      *
      * Load Hold Description.
      * CASE: DTL.LckBx Hold Flag is Yes
     C           #PADSX    IFEQ 'Y'                        *IF
     C                     MOVEL@CN,001   #DN8TX           Text-17
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,002   #DN8TX           Text-17
     C                     END                             *FI
     C                     ELSE
      * If record does exist, flip to change mode
     C                     MOVEL'CHG'     W0PMD
      * Load screen fields from DBF
     C                     EXSR MBFL#1
      * CALC: Detail screen function fields
      * *** Load screen details ***
     C                     MOVEL'M'       #1AFSX           LckBx Trans Sou
      * DTL.USR Work Field 7A = Condition name of DTL.LckBx Trans Source
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1508219   Y2LSNO  70       List number
     C                     PARM #1AFSX    W0INVL 25        LckBx Trans Sou
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DE2TX    PARM           W0CNNM 25        USR Work Field
      *
      * USER: Initialize detail screen (existing record)
      * *** Load detail  format fields ***
      * RTV Hold Flag          RT - A/R Lockbox Check  * 
     C                     EXSR SBRVGN
      * Load Hold Description.
      * CASE: DTL.LckBx Hold Flag is Yes
     C           #PADSX    IFEQ 'Y'                        *IF
     C                     MOVEL@CN,001   #DN8TX           Text-17
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,002   #DN8TX           Text-17
     C                     END                             *FI
      * DTL.Text USR = Condition name of PAR.LckBx Deposit Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1509761   Y2LSNO  70       List number
     C                     PARM P3AWSX    W0INVL 25        LckBx Deposit S
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DIUTX    PARM           W0CNNM 25        Text USR
      *
      * RTV Remaining/Open Inv RT - A/R Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1NMC3    WL0009           Invoice Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0008    WUAIC3           Company Number
     C                     MOVELWL0010    #DCEST    P      Invoice Suffix
     C                     Z-ADDWL0011    #DBGVA           Remaining Balan
     C                     Z-ADDWL0012    WUANC7           A/R Customer Nu
      * Use cust on invoice if found, else display Check Customer
      * CASE: WRK.A/R Customer Number is equal to zero
     C           WUANC7    IFEQ *ZERO                      *IF
      * RTV Cust Number Name   RT - A/R Lockbox Check  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1BEC3    WL0001           LckBx Number
     C                     Z-ADD#1LWDT    WL0002           LckBx Deposit D
     C                     Z-ADD#1YWNX    WL0003           LckBx Deposit T
     C                     Z-ADD#1BFC3    WL0004           LckBx Batch Num
     C                     Z-ADD#1BGC3    WL0005           LckBx Item Numb
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0006    #DAJNB           LckBx Customer
     C                     MOVELWL0007    #DAYTX    P      LckBx Customer
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUANC7    #DAJNB           Customer Number
      * RTV Customer Name      RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#DAJNB    WL0013           Ship To Custome
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    #DAYTX    P      Customer Name
     C                     END                             *FI
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      *
     C           YPMTFD    IFEQ *BLANK
      * No error: Display and process details
     C                     EXSR CADSDA
     C                     END
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C           W0PMD     IFNE 'ADD'
     C           YPMTFD    ORNE *BLANK
     C                     END
      * Check relations
      * Check restriction within
     C                     EXSR VACKRL
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Convert internal to external form
     C                     EXSR MOCV#D
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   30                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * Prompt for confirmation
     C                     EXSR EAPMCF
      * Quit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO CFEXIT
     C                     END
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate detail screen fields
      * *Prompt Customer Number
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Customer Number       NBR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DAJNB'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * SEL A/R Customer       SR - Customer  * 
     C                     CALL 'PDXESRR'              90  SEL A/R Custome
     C                     PARM *BLANK    W0RTN   7
     C           #DAJNB    PARM #DAJNB    WQ0001  70       Ship To Custome
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDXESRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     END                             *FI
      * *Prompt LckBx Invoice Number
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.LckBx Invoice Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#1NMC3'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * SEL Invoice            SR - A/R Header  * 
     C                     CALL 'PMJQSRR'              90  SEL Invoice
     C                     PARM *BLANK    W0RTN   7
     C           #1NMC3    PARM #1NMC3    WQ0002  70       Invoice Number
     C           #DAJNB    PARM #DAJNB    WQ0003  70       A/R Customer Nu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMJQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993231*
     C                     END
     C                     END                             *FI
      * *Prompt Adjustment Type Code
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Adjustment Type Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#1UHCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ** add "WO " and WO1" to list of selectable values  E000618
      * SEL Lckbx Type         SR - A/R Adjustment Type  * 
     C                     CALL 'PDJKSRR'              90  SEL Lckbx Type
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0004  30       Company Number
     C           #1UHCD    PARM #1UHCD    WQ0005  3        Adjustment Type
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDJKSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
     C                     END                             *FI
      * Validate Invoice Number.
     C                     EXSR UASUBR                     Validate Invoic
      * Validate Invoice Amount.
     C                     EXSR UESUBR                     Validate Invoic
      * Validate Payment Type.
     C                     EXSR UFSUBR                     Validate Paymen
      * RTV Customer Name      RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#DAJNB    WL0013           Ship To Custome
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0014    #DAYTX    P      Customer Name
     C                     END
      * Check relations
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Detail screen function fields
      * *** Load screen details ***
     C                     MOVEL'M'       #1AFSX           LckBx Trans Sou
      * DTL.USR Work Field 7A = Condition name of DTL.LckBx Trans Source
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1508219   Y2LSNO  70       List number
     C                     PARM #1AFSX    W0INVL 25        LckBx Trans Sou
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DE2TX    PARM           W0CNNM 25        USR Work Field
      *
     C                     END
      * Customer Number       NBR required
     C           #DAJNB    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * LckBx Invoice Number required
     C           #1NMC3    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * LckBx Invoice Amount required
     C           #1Z0VA    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EAPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert internal to external form
     C                     EXSR MOCV#D
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO EAEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFEQ *BLANK
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * CRT A/R Lockbox Invoic CR - A/R Lockbox Invoice  * 
     C                     EXSR SECRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * CHG A/R Lockbox Invoic CH - A/R Lockbox Invoice  * 
     C                     EXSR SFCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
     C           YARDC     IFEQ 'Y'
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
      * Disable key screen
     C                     SETOF                     87    *
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     MOVELP3AWSX    #PAWSX           LckBx Deposit S
     C                     MOVEL*BLANK    #1AFSX           LckBx Trans Sou
     C                     MOVEL*BLANK    #DIUTX           Text USR
     C                     MOVELP2O1TX    #PO1TX           LckBx Check Num
     C                     Z-ADDP2ZZVA    #PZZVA           LckBx Check Amo
     C                     MOVELP2ADSX    #PADSX           LckBx Hold Flag
     C                     MOVEL*BLANK    #DN8TX           Text-17
     C                     Z-ADDP4Z5VA    #PZ5VA           LckBx Total Inv
     C                     Z-ADD*ZERO     #DAJNB           Customer Number
     C                     MOVEL*BLANK    #DAYTX           Customer Name
     C                     Z-ADDP5Z8VA    #PZ8VA           LckBx Inv/Chk D
     C                     Z-ADD*ZERO     #1NMC3           LckBx Invoice N
     C                     Z-ADD*ZERO     #1Z0VA           LckBx Invoice A
     C                     Z-ADD*ZERO     #1AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V1AIC3
     C                     MOVEL*BLANK    #1UHCD           Adjustment Type
     C                     MOVEL*BLANK    #DE2TX           USR Work Field
     C                     MOVEL*BLANK    #DCEST           Invoice Suffix
     C                     Z-ADD*ZERO     #DBGVA           Remaining Balan
     C                     MOVEL*BLANK    #1NGNA           Explanation
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @MDCPT1 fields to screen
      *================================================================
     C                     Z-ADDMDNMC5    #1NMC5           LckBx Seq Numbe
     C                     Z-ADDMDNMC4    #1NMC4           LckBx Seq Count
     C                     MOVELMDAFSX    #1AFSX           LckBx Trans Sou
     C                     Z-ADDMDBEC3    #1BEC3           LckBx Number
     C                     Z-ADDMDLWDT    #1LWDT           LckBx Deposit D
     C                     Z-ADDMDYWNX    #1YWNX           LckBx Deposit T
     C                     Z-ADDMDBFC3    #1BFC3           LckBx Batch Num
     C                     Z-ADDMDBGC3    #1BGC3           LckBx Item Numb
     C                     Z-ADDMDNMC3    #1NMC3           LckBx Invoice N
     C                     Z-ADDMDZ0VA    #1Z0VA           LckBx Invoice A
     C                     Z-ADDMDAIC3    #1AIC3           Company Number
     C                     MOVELMDUHCD    #1UHCD           Adjustment Type
     C                     MOVELMDNGNA    #1NGNA           Explanation
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     Z-ADDP4Z5VA    #PZ5VA           LckBx Total Inv
     C                     Z-ADDP5Z8VA    #PZ8VA           LckBx Inv/Chk D
     C                     MOVELP2O1TX    #PO1TX           LckBx Check Num
     C                     Z-ADDP2ZZVA    #PZZVA           LckBx Check Amo
     C                     MOVELP2ADSX    #PADSX           LckBx Hold Flag
     C                     MOVELP3AWSX    #PAWSX           LckBx Deposit S
     C                     Z-ADDP1YWNX    #1YWNX           LckBx Deposit T
     C                     Z-ADDP1BEC3    #1BEC3           LckBx Number
      * Clear external version also
     C                     MOVEL*BLANK    V1BEC3
     C                     Z-ADDP1LWDT    #1LWDT           LckBx Deposit D
      * Clear external version also
     C                     Z-ADD*ZERO     V1LWDT
     C                     Z-ADDP1BFC3    #1BFC3           LckBx Batch Num
      * Clear external version also
     C                     MOVEL*BLANK    V1BFC3
     C                     Z-ADDP1BGC3    #1BGC3           LckBx Item Numb
      * Clear external version also
     C                     MOVEL*BLANK    V1BGC3
     C                     Z-ADDP1NMC5    #1NMC5           LckBx Seq Numbe
     C                     Z-ADDP1NMC4    #1NMC4           LckBx Seq Count
      * Check restriction within
     C                     EXSR VBCKRL
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         MNCV#K    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert LckBx Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1BEC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1BEC3    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1BEC3           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BEC3           CD7 Ext Numeric
     C                     END                             *FI
      * Convert LckBx Deposit Date to display format
      * Convert date
     C           1000000   ADD  #1LWDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1LWDT
      * Convert LckBx Batch Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1BFC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1BFC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1BFC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BFC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert LckBx Item Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1BGC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1BGC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1BGC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BGC3           CD3 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#D    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert LckBx Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1BEC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1BEC3    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1BEC3           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BEC3           CD7 Ext Numeric
     C                     END                             *FI
      * Convert LckBx Deposit Date to display format
      * Convert date
     C           1000000   ADD  #1LWDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1LWDT
      * Convert LckBx Batch Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1BFC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1BFC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1BFC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BFC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert LckBx Item Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1BGC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1BGC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1BGC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BGC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #1AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#1AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V1AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1AIC3           CD3 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Cust Number Name   RT - A/R Lockbox Check  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           MCBEC3           LckBx Number
     C                     KFLD           MCLWDT           LckBx Deposit D
     C                     KFLD           MCYWNX           LckBx Deposit T
     C                     KFLD           MCBFC3           LckBx Batch Num
     C                     KFLD           MCBGC3           LckBx Item Numb
      * Setup key
     C                     Z-ADDWL0001    MCBEC3           LckBx Number
     C                     Z-ADDWL0002    MCLWDT           LckBx Deposit D
     C                     Z-ADDWL0003    MCYWNX           LckBx Deposit T
     C                     Z-ADDWL0004    MCBFC3           LckBx Batch Num
     C                     Z-ADDWL0005    MCBGC3           LckBx Item Numb
      * Establish starting position
     C           KRSSA     CHAIN@MCCPTY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2650' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0006           LckBx Customer
     C                     MOVEL*BLANK    WL0007           LckBx Customer
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDMCCWC7    WL0006           LckBx Customer
     C                     MOVELMCO2TX    WL0007           LckBx Customer
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Hold Flag          RT - A/R Lockbox Check  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           MCBEC3           LckBx Number
     C                     KFLD           MCLWDT           LckBx Deposit D
     C                     KFLD           MCYWNX           LckBx Deposit T
     C                     KFLD           MCBFC3           LckBx Batch Num
     C                     KFLD           MCBGC3           LckBx Item Numb
      * Setup key
     C                     Z-ADD#1BEC3    MCBEC3           LckBx Number
     C                     Z-ADD#1LWDT    MCLWDT           LckBx Deposit D
     C                     Z-ADDMDYWNX    MCYWNX           LckBx Deposit T
     C                     Z-ADD#1BFC3    MCBFC3           LckBx Batch Num
     C                     Z-ADD#1BGC3    MCBGC3           LckBx Item Numb
      * Establish starting position
     C           KRSSB     CHAIN@MCCPTY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2650' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #PADSX           LckBx Hold Flag
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELMCADSX    #PADSX           LckBx Hold Flag
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Remaining/Open Inv RT - A/R Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BDCONB    WQSC02           Invoice Number
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC02           Invoice Number
      * Setup key
     C                     Z-ADDWL0009    WQSC02           Invoice Number
      * Establish starting position
     C           KRSSC     SETLL@BDCPU3                    *
     C           KRSSC     READE@BDCPU3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0174' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0008           Company Number
     C                     MOVEL*BLANK    WL0010           Invoice Suffix
     C                     Z-ADD*ZERO     WL0011           Remaining Balan
     C                     Z-ADD*ZERO     WL0012           A/R Customer Nu
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBDAIC3    WL0008           Company Number
     C                     MOVELBDCEST    WL0010           Invoice Suffix
     C                     Z-ADDBDBGVA    WL0011           Remaining Balan
     C                     Z-ADDBDANC7    WL0012           A/R Customer Nu
     C                     GOTO SCEXIT                     *QUIT
     C           KRSSC     READE@BDCPU3                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Customer Name      RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0013    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSD     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0014           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    WL0014           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * CRT A/R Lockbox Invoic CR - A/R Lockbox Invoice  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @MDCPT0
     C                     Z-ADD#1BEC3    MDBEC3           LckBx Number
     C                     Z-ADD#1LWDT    MDLWDT           LckBx Deposit D
     C                     Z-ADD#1YWNX    MDYWNX           LckBx Deposit T
     C                     Z-ADD#1BFC3    MDBFC3           LckBx Batch Num
     C                     Z-ADD#1BGC3    MDBGC3           LckBx Item Numb
     C                     Z-ADD#1NMC5    MDNMC5           LckBx Seq Numbe
     C                     Z-ADD#1NMC4    MDNMC4           LckBx Seq Count
     C                     Z-ADD#1NMC3    MDNMC3           LckBx Invoice N
     C                     Z-ADD#1Z0VA    MDZ0VA           LckBx Invoice A
     C                     Z-ADD#1AIC3    MDAIC3           Company Number
     C                     MOVEL#1UHCD    MDUHCD           Adjustment Type
     C                     MOVEL#1AFSX    MDAFSX           LckBx Trans Sou
     C                     MOVEL#1NGNA    MDNGNA           Explanation
      *
     C           KLCRSE    KLIST
     C                     KFLD           MDBEC3           LckBx Number
     C                     KFLD           MDLWDT           LckBx Deposit D
     C                     KFLD           MDYWNX           LckBx Deposit T
     C                     KFLD           MDBFC3           LckBx Batch Num
     C                     KFLD           MDBGC3           LckBx Item Numb
     C                     KFLD           MDNMC5           LckBx Seq Numbe
     C                     KFLD           MDNMC4           LckBx Seq Count
      * Check for duplicate primary key
     C           KLCRSE    SETLL@MDCPT0                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2653' W0RTN   7
      * Send message 'A/R Lockbox Invoice    EX'
     C                     MOVEL'USR2653' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@MDCPT0                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * CHG A/R Lockbox Invoic CH - A/R Lockbox Invoice  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @MDCPT0
     C                     Z-ADD#1BEC3    MDBEC3           LckBx Number
     C                     Z-ADD#1LWDT    MDLWDT           LckBx Deposit D
     C                     Z-ADD#1YWNX    MDYWNX           LckBx Deposit T
     C                     Z-ADD#1BFC3    MDBFC3           LckBx Batch Num
     C                     Z-ADD#1BGC3    MDBGC3           LckBx Item Numb
     C                     Z-ADD#1NMC5    MDNMC5           LckBx Seq Numbe
     C                     Z-ADD#1NMC4    MDNMC4           LckBx Seq Count
      *
     C           KLCHSF    KLIST
     C                     KFLD           MDBEC3           LckBx Number
     C                     KFLD           MDLWDT           LckBx Deposit D
     C                     KFLD           MDYWNX           LckBx Deposit T
     C                     KFLD           MDBFC3           LckBx Batch Num
     C                     KFLD           MDBGC3           LckBx Item Numb
     C                     KFLD           MDNMC5           LckBx Seq Numbe
     C                     KFLD           MDNMC4           LckBx Seq Count
     C           KLCHSF    CHAIN@MDCPT0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDMDCPL0'MDACP
     C                     MOVEL'@MDCPT0' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKPDMDCPL0               91  *
     C                     GOTO SFEXIT
     C                     ENDIF                           FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * Move non-key fields to @MDCPT0
     C                     Z-ADD#1NMC3    MDNMC3           LckBx Invoice N
     C                     Z-ADD#1Z0VA    MDZ0VA           LckBx Invoice A
     C                     Z-ADD#1AIC3    MDAIC3           Company Number
     C                     MOVEL#1UHCD    MDUHCD    P      Adjustment Type
     C                     MOVEL#1AFSX    MDAFSX    P      LckBx Trans Sou
     C                     MOVEL#1NGNA    MDNGNA    P      Explanation
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@MDCPT0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDMDCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSG     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P6I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P6MPNA           Default Printer
     C                     MOVELDRBCCD    P6BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0001           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0015    DTAJVN           User Profile Na
     C                     MOVELWL0016    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSH     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0017           Company Number
     C                     MOVELDTAJCD    WL0018           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSI01           Application Cod
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Application Cod
      * Setup key
     C                     MOVELP6DNCD    WQSI01           Application Cod
      * Establish starting position
     C           KRSSI     SETLL@DNRESF                    *
     C           KRSSI     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SJRVGN
     C                     END                             *FI
     C           KRSSI     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSJ01           Application Cod
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSJ01           Application Cod
      * Establish starting position
     C           KRSSJ     SETLL@DNRESF                    *
     C           KRSSJ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSJ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Validate Invoice Number.
      *================================================================
      * CASE: DTL.LckBx Invoice Number is eq zero
     C           #1NMC3    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#1NMC3    ZA0001           LckBx Invoice N
      * Send message 'LckBx Invoice Number Req.'
     C                     MOVEL'USR2691' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Remaining/Open Inv RT - A/R Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1NMC3    WL0009           Invoice Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0008    #1AIC3           Company Number
     C                     MOVELWL0010    #DCEST    P      Invoice Suffix
     C                     Z-ADDWL0011    #DBGVA           Remaining Balan
     C                     Z-ADDWL0012    WUAJNB           A/R Customer Nu
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Validate against A/R Header record.
     C                     EXSR UBSUBR                     Validate agains
      * upd screen cust with invoice customer #
     C                     Z-ADDWUAJNB    #DAJNB           Customer Number
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#1NMC3    ZA0004           LckBx Invoice N
      * Send message 'LckBx Invalid Invoice Nbr'
     C                     MOVEL'USR2663' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Validate against A/R Header record.
      *================================================================
      * *** PK0333 ***
      * CASE:
      *  - c1 AND (c2 OR c3)
      *   |- c1    : DTL.Invoice Suffix is Charge Backs
      *   |- c2    : DTL.Adjustment Type Code is Chargeback
      *   |- c3    : DTL.Adjustment Type Code is Accrual Chargeback
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DCEST    IFEQ 'CB'                       *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #1UHCD    IFEQ 'CB'                       *IF
     C           #1UHCD    OREQ 'ACB'                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Can't enter a chargeback trans against a chargeback invoice.
     C                     EXSR UCSUBR                     Can't enter a c
     C                     ELSE
      * CASE: *OTHERWISE
      * Remaining Balance must be greater than zero.
     C                     EXSR UDSUBR                     Remaining Balan
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Can't enter a chargeback trans against a chargeback invoice.
      *================================================================
      * Setup message data for message
     C                     MOVEL#1UHCD    ZA0002           Adjustment Type
      * Send message 'LckBx no CB against CB'
     C                     MOVEL'USR2710' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Remaining Balance must be greater than zero.
      *================================================================
      * CASE: DTL.Remaining Balance Due is less or equal to zero
     C           #DBGVA    IFLE *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#1NMC3    ZA0003           LckBx Invoice N
      * Send message 'LckBx Remaining Due <= 0'
     C                     MOVEL'USR2681' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Validate Invoice Amount.
      *================================================================
      * CASE: DTL.LckBx Invoice Amount is less or equal to zero
     C           #1Z0VA    IFLE *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#1Z0VA    ZA0005           LckBx Invoice A
      * Send message 'LckBx Inv Amt must be > 0'
     C                     MOVEL'USR2692' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Validate Payment Type.
      *================================================================
      * CASE: DTL.Adjustment Type Code is Not Entered
     C           #1UHCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#1UHCD    ZA0006           Adjustment Type
      * Send message 'LckBx Type is Required.'
     C                     MOVEL'USR2689' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * *** PK0333 ***
      * CASE:
      *  - c1 OR c2 OR c3 OR c4 ORc5 OR c6
      *   |- c1    : DTL.Adjustment Type Code is Chargeback
      *   |- c2    : DTL.Adjustment Type Code is Regular Pay
      *   |- c3    : DTL.Adjustment Type Code is Write Off Under $50
      *   |- c4    : DTL.Adjustment Type Code is Accrual Chargeback
      *   |- c5    : DTL.Adjustment Type Code is Write Off Under $100
      *   |- c6    : DTL.Adjustment Type Code is Write off over $100
      *   '-
     C           #1UHCD    IFEQ 'CB'                       *IF
     C           #1UHCD    OREQ 'PAY'                      *OR
     C           #1UHCD    OREQ ' WO'                      *OR
     C           #1UHCD    OREQ 'ACB'                      *OR
     C           #1UHCD    OREQ 'WO'                       *OR
     C           #1UHCD    OREQ 'WO1'                      *OR
      * RMC 1/3/6 added type 'WO '
      * LJB 3/18/10 added type 'WO1'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1UHCD    ZA0007           Adjustment Type
      * Send message 'LckBx Inv Type Invalid'
     C                     MOVEL'USR2664' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 03/18/2010 LJB E000618 Add WO1 as a valid Adjustment Type
      * ** add "WO " and WO1" to SEL prompt for adjustment type
      * DLY029 07/13/07 JRB Added Customer, sel on customer & invoice
      * DLY029 07/27/07 RMC Dont val cust against invoice. invoice cust
      *   may not be the same as the check customer because mult a/r cust
      *   may be paid with 1 check
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      *
     C           KLVAMC    KLIST
     C                     KFLD           MCBEC3           LckBx Number
     C                     KFLD           MCLWDT           LckBx Deposit D
     C                     KFLD           MCYWNX           LckBx Deposit T
     C                     KFLD           MCBFC3           LckBx Batch Num
     C                     KFLD           MCBGC3           LckBx Item Numb
      * Setup key
     C                     Z-ADD#1BEC3    MCBEC3
     C                     Z-ADD#1LWDT    MCLWDT
     C                     Z-ADD#1YWNX    MCYWNX
     C                     Z-ADD#1BFC3    MCBFC3
     C                     Z-ADD#1BGC3    MCBGC3
     C           KLVAMC    CHAIN@MCCPTY              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Restrictor relation not satisfied
      * Send message 'A/R Lockbox Check      NF'
     C                     MOVEL'USR2650' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR2650' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      *
     C           KLVBMC    KLIST
     C                     KFLD           MCBEC3           LckBx Number
     C                     KFLD           MCLWDT           LckBx Deposit D
     C                     KFLD           MCYWNX           LckBx Deposit T
     C                     KFLD           MCBFC3           LckBx Batch Num
     C                     KFLD           MCBGC3           LckBx Item Numb
      * Setup key
     C                     Z-ADD#1BEC3    MCBEC3
     C                     Z-ADD#1LWDT    MCLWDT
     C                     Z-ADD#1YWNX    MCYWNX
     C                     Z-ADD#1BFC3    MCBFC3
     C                     Z-ADD#1BGC3    MCBGC3
     C           KLVBMC    CHAIN@MCCPTY              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Restrictor relation not satisfied
      * Send message 'A/R Lockbox Check      NF'
     C                     MOVEL'USR2650' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR2650' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C                     ENDIF
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW1END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW1BEG,F
     C                     MOVELW1NAM,F   W0CFL
     C                     ENDIF
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P6AJCD           Warehouse Code
     C                     MOVEL*BLANK    P6DNCD           Application Cod
     C                     MOVEL*BLANK    P6BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P6I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P6MPNA           Default Printer
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Define work field A/R Customer Number
     C                     Z-ADD*ZERO     WUANC7  70
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Customer Number       NBR
     C                     Z-ADD*ZERO     WUAJNB  70
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  70
     C                     Z-ADD*ZERO     WL0002  70
     C                     Z-ADD*ZERO     WL0003  40
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     MOVEL*BLANK    WL0007 30
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     MOVEL*BLANK    WL0010  2
     C                     Z-ADD*ZERO     WL0011 112
     C                     Z-ADD*ZERO     WL0012  70
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0013  70
     C                     MOVEL*BLANK    WL0014 30
      * Define local variables for subroutine SHRVGN.
     C                     MOVEL*BLANK    WL0015 10
     C                     MOVEL*BLANK    WL0016  6
     C                     Z-ADD*ZERO     WL0017  30
     C                     MOVEL*BLANK    WL0018  3
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0002  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
      * Select initial mode
     C           @1NROP    IFEQ *ZERO
      * Add mode
     C                     MOVEL'ADD'     W0PMD   3
     C                     ELSE
      * Change mode
     C                     MOVEL'CHG'     W0PMD
     C                     END
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * *** Setup Security & Company Title ***
     C                     MOVEL*BLANK    P6DNCD           Application Cod
     C                     MOVEL'A/R'     P6DNCD           Application Cod
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SGRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,003                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0008           User Profile Na
     C                     MOVELP6DNCD    ZA0009           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0015    P      User Profile Na
     C                     MOVELP6DNCD    WL0016    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    WUAIC3           Company Number
     C                     MOVELWL0018    YL0002    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0015    P      User Profile Na
     C                     MOVELP6DNCD    WL0016    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    WUAIC3           Company Number
     C                     MOVELWL0018    YL0002    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0002    P6AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0010           User Profile Na
     C                     MOVELP6DNCD    ZA0011           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0001    IFNE 0                          *IF
     C                     Z-ADDYL0001    WUAIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0002    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P6AJCD    PARM *BLANK    WQ0006  3        Warehouse Code
     C                     PARM YL0001    WQ0007  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SIRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * ***** Change Log and Comments
     C                     EXSR UGSUBR                     ***** Change Lo
      *================================================================
     CSR         ZZEXIT    ENDSR
** KEY Screen: Field position and name array
010490130501561018170207302329
** W0END
010550131201563018190207402329
** W0NAM
V1BEC3    V1LWDT    V1BFC3    V1BGC3    #1NMC5    #1NMC4
** W1BEG
01038010610107001091012940130901322
01347015500155301603018040181401859
02822028330284702852028570287002876
03371
** W1END
01044010680107401100012960131101331
01359015500156901615018100184301871
02830028450284902854028630287102888
03400
** W1NAM
V1BEC3    V1LWDT    #1YWNX    #DIUTX    V1BFC3    V1BGC3    #PO1TX
#PZZVA    #PADSX    #DN8TX    #PZ5VA    #DAJNB    #DAYTX    #PZ8VA
#1NMC3    #1Z0VA    V1AIC3    #1UHCD    #DE2TX    #DCEST    #DBGVA
#1NGNA
** @CN
00001 Check is held
00002 Check is released
00003 Y2U0005
