// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMNHEFR
// ?Date: 14.08.2025 Time: 03:43:31
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Initialize subfile header

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// LCL.Record Status = CTL.Record Status
LCL.Record_Status = CTL.Record_Status;

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1850788;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.COA_Bio_diesel_Fuel_Code);
PARAMETER(CTL.Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize subfile record (existing record)

//?Sel Fuel Code
CASE;

// IF CTL.COA Bio-diesel Fuel Code NE DB1.COA Bio-diesel Fuel Code
IF CTL.COA_Bio_diesel_Fuel_Code <> DB1.COA_Bio_diesel_Fuel_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Sel Property
CASE;

// IF CTL.COA Property is Entered
IF CTL.COA_Property <> *BLANK;

// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(CTL.COA_Property);
PARAMETER(LCL.Text_USR_40);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


// Call program CLC Call Qclscan       UP.
CALL PROGRAM(CLC Call Qclscan       UP) ('QCLSCAN');
PARAMETER(RCD.COA_Property);
PARAMETER(40);
PARAMETER(1);
PARAMETER(LCL.Text_USR_40);
PARAMETER(40);
PARAMETER(1);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(WRK.USR_Qclscan_Result);

CASE;

// IF WRK.USR Qclscan Result ? is Does contain
IF WRK.USR_Qclscan_Result > 0;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Sel Page seq
CASE;

// IF CTL.COA Print Sequence GT WRK.ZERO
IF CTL.COA_Print_Sequence > WRK.ZERO;

CASE;

// IF CTL.COA Print Sequence NE DB1.COA Print Sequence
IF CTL.COA_Print_Sequence <> DB1.COA_Print_Sequence;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Sel Rcd sts
CASE;

// IF CTL.Record Status is Valid Entries
IF CTL.Record_Status = 'A'/'D'/'I';

// AND CTL.Record Status NE DB1.Record Status
AND CTL.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?W104274 DN 08/09/22-Don't Display COA Test & COA Limit Max.
CASE;

// IF RCD.COA Bio-diesel Fuel Code is R99.9
IF RCD.COA_Bio_diesel_Fuel_Code = 'R99.9';

// OR RCD.COA Bio-diesel Fuel Code is Naphtha
OR RCD.COA_Bio_diesel_Fuel_Code = 'NAP';

// LCL.Display Flag 1 USR = CND.yes
LCL.Display_Flag_1_USR = 'Y';

//?W104274 DN 08/09/22-Don't Display COA Test & COA Limit Max.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Display Flag 1 USR = CND.no
LCL.Display_Flag_1_USR = 'N';

ENDIF;

//?USER: Initialize subfile record (new record)

//?W104274 DN 08/09/22-Don't Display COA Test & COA Limit Max.
CASE;

// IF RCD.COA Bio-diesel Fuel Code is R99.9
IF RCD.COA_Bio_diesel_Fuel_Code = 'R99.9';

// OR RCD.COA Bio-diesel Fuel Code is Naphtha
OR RCD.COA_Bio_diesel_Fuel_Code = 'NAP';

// LCL.Display Flag 1 USR = CND.yes
LCL.Display_Flag_1_USR = 'Y';

//?W104274 DN 08/09/22-Don't Display COA Test & COA Limit Max.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Display Flag 1 USR = CND.no
LCL.Display_Flag_1_USR = 'N';

ENDIF;

//?USER: Validate subfile control

CASE;

// IF CTL.COA Property NE WRK.COA Property
IF CTL.COA_Property <> WRK.COA_Property;

// WRK.COA Property = CTL.COA Property
WRK.COA_Property = CTL.COA_Property;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.Record Status NE LCL.Record Status
IF CTL.Record_Status <> LCL.Record_Status;

// LCL.Record Status = CTL.Record Status
LCL.Record_Status = CTL.Record_Status;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.COA Print Sequence NE LCL.COA Print Sequence
IF CTL.COA_Print_Sequence <> LCL.COA_Print_Sequence;

// LCL.COA Print Sequence = CTL.COA Print Sequence
LCL.COA_Print_Sequence = CTL.COA_Print_Sequence;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Validate subfile record fields

//?If Add mode, set Record Status to Active on any entered lines
CASE;

// IF RCD.COA Property is Entered
IF RCD.COA_Property <> *BLANK;

// AND PGM.*Program mode is *ADD
AND PGM.*Program_mode = 'ADD';

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

ENDIF;

//?USER: Validate subfile record relations

// LCL.*Reload subfile = CND.*NO
LCL.*Reload_subfile = 'N';

//?If delete chosen, set Rec Sts to 'D'
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

// RCD.Record Status = CND.Deleted
RCD.Record_Status = 'D';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt COA Property Def  CR) TYPE(CRTOBJ) FILE(PMCBREP)           AC1847461;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.COA_Bio_diesel_Fuel_Code);
PARAMETER(RCD.COA_Property);
PARAMETER(RCD.COA_Test);
PARAMETER(RCD.COA_Test_Method);
PARAMETER(RCD.COA_Unit_of_Measure);
PARAMETER(RCD.COA_Limit);
PARAMETER(RCD.COA_Limit_Max);
PARAMETER(RCD.COA_Print_Sequence);
PARAMETER(RCD.COA_OMS_Item_Code);
PARAMETER(RCD.Sold_To_Customer_hpb_biod);
PARAMETER(RCD.COA_Footnote_Indicator);
PARAMETER(RCD.COA_Fuel_Desc2_Prop_Value);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg COA Property Def  CH) TYPE(CHGOBJ) FILE(PMCBREP)           AC1847462;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.COA_Bio_diesel_Fuel_Code);
PARAMETER(RCD.COA_Property);
PARAMETER(RCD.COA_Test);
PARAMETER(RCD.COA_Test_Method);
PARAMETER(RCD.COA_Unit_of_Measure);
PARAMETER(RCD.COA_Limit);
PARAMETER(RCD.COA_Limit_Max);
PARAMETER(RCD.COA_Print_Sequence);
PARAMETER(RCD.COA_OMS_Item_Code);
PARAMETER(RCD.Sold_To_Customer_hpb_biod);
PARAMETER(RCD.COA_Footnote_Indicator);
PARAMETER(RCD.COA_Fuel_Desc2_Prop_Value);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

}


//?USER: Extra processing after DBF update

//?force reload
// LCL.*Reload subfile = CND.*YES
LCL.*Reload_subfile = 'Y';

//?USER: Process command keys

CASE;

// IF LCL.*Reload subfile is *YES
IF LCL.*Reload_subfile = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// LCL.*Reload subfile = CND.*NO
LCL.*Reload_subfile = 'N';

ENDIF;

