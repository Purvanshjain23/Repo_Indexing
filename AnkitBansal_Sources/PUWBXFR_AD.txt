// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUWBXFR
// ?Date: 14.08.2025 Time: 03:51:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?NOTE: Consider changing PUWTXFR if changing the # of lines to print
//?      on the HC.
//?Delete Existing Records.
EXECUTE FUNCTION(Del Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2204928;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del Doc Ord Dtl PRT   DL) TYPE(DLTOBJ) FILE(PUCFCPP)           AC2204919;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Item_Code);
}


//?Create New Records for Other Specific Export Doc Types.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Anything Identify in here should Process & then QUIT. Don't fall
//?through.
//?Chile Letterhead.
CASE;

// IF PAR.Country Code is Chile - ISO 3
IF PAR.Country_Code = 'CHL';

// AND PAR.ED Export Document Type is Letterhead-Pork to Export
AND PAR.ED_Export_Document_Type = 'L';

EXECUTE FUNCTION(Crt EDOD PRT-CHL Ltrhd RT) TYPE(RTVOBJ) FILE(PDMSREP)          AC2208368;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.ED_Xlate_Desc_to_Country);
{
 //?USER: Initialize routine

 // LCL.USR Counter = CON.*ZERO
 LCL.USR_Counter = *ZERO;

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 // LCL.1st Page Line Counter USR = CON.*ZERO
 LCL.X1st_Page_Line_Counter_USR = *ZERO;

 // LCL.Force Xlate Dsc Ln2 Prt U = CND.No
 LCL.Force_Xlate_Dsc_Ln2_Prt_U = 'N';

 // PAR.# of Lines Reqd to Print = CON.*ZERO
 PAR.#_of_Lines_Reqd_to_Print = *ZERO;

 // PAR.Prt Overflow Dsc Xlate L1 = CND.No
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'N';

 //?USER: Process Data record

 //?Select Only Product with Weights.
 CASE;

 // IF DB1.ED Product Net Weight lbs is Entered
 IF DB1.ED_Product_Net_Weight_lbs <> *ZERO;

 //?First Time Thru, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Initialize.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 // LCL.Skip Ln Before Xlate Ln1 = CND.No
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'N';

 // LCL.Skip Ln After Xlate Ln2 = CND.No
 LCL.Skip_Ln_After_Xlate_Ln2 = 'N';

 // LCL.# of Blank Line-Item Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Item_Ln1 = *ZERO;

 // LCL.# of Blank Line-Item Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Item_Ln2 = *ZERO;

 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = *ZERO;

 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = *ZERO;

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.# of Blank Line-Item Ln1 = CON.1
 LCL.#_of_Blank_Line_Item_Ln1 = 1;

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 2 is Entered
 IF DB1.ED_Item_Label_Line_2 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.# of Blank Line-Item Ln2 = CON.1
 LCL.#_of_Blank_Line_Item_Ln2 = 1;

 ENDIF;

 //?Country is Setup for Language Translation.
 CASE;

 // IF NOT PAR.ED Xlate Desc to Country is Not Entered
 IF ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.# of Blank Line-Xlate Ln1 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln1 = 1;

 CASE;

 // IF DB1.ED Item Label Line 2 is Not Entered
 IF DB1.ED_Item_Label_Line_2 = *BLANK;

 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = 0;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc 2 is Entered
 IF DB1.ED_Language_Xlate_Desc_2 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Check Spanish Translation to Set '# of Lines Reqd to Print'.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // AND DB1.ED Language Xlate Desc is Entered
 AND DB1.ED_Language_Xlate_Desc <> *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?Override ED Language Xlate Desc 2 to print but was originally blank.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 //?Override ED Language Xlate Desc 2 to print but was originally blank.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 //?Was originally blank.
 // LCL.Force Xlate Dsc Ln2 Prt U = CND.Yes
 LCL.Force_Xlate_Dsc_Ln2_Prt_U = 'Y';

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.1st Page Line Counter USR = LCL.# of Lines Reqd to Print
 LCL.X1st_Page_Line_Counter_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Create Exp Doc Order Dtl PRT.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Format 'Overflow Pg Dsc Xlate Ln1'.
 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 //?Always use 'Overflow Pg Dsc Xlate Ln1' for Chile Letterhead.
 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CONCAT(LCL.Overflow Pg Dsc Xlate Ln1,LCL.Frozen/Chilled as Spani
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = LCL.Overflow_Pg_Dsc_Xlate_Ln1 + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 //?Format 'Overflow Pg Dsc Xlate Ln1'.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 //?Force no print of Xlate Desc Line 2 if Xlate Desc Line 1 is not entered.
 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(LCL.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER('N');
 PARAMETER(*ZERO);
 PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.#_of_Blank_Line_Item_Ln1);
 PARAMETER(LCL.#_of_Blank_Line_Item_Ln2);
 PARAMETER(LCL.#_of_Blank_Line_Xlate_Ln1);
 PARAMETER(LCL.#_of_Blank_Line_Xlate_Ln2);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

 //?Item Code Change, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF DB1.ED Item Code NE LCL.ED Item Code
 IF DB1.ED_Item_Code <> LCL.ED_Item_Code;

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Initialization.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 // LCL.Report Box ID = CON.*ZERO
 LCL.EDODP_Unused_Number = *ZERO;

 // LCL.Skip Ln Before Xlate Ln1 = CND.No
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'N';

 // LCL.Skip Ln After Xlate Ln2 = CND.No
 LCL.Skip_Ln_After_Xlate_Ln2 = 'N';

 // LCL.Overflow = CND.No
 LCL.Overflow = 'N';

 // LCL.Prt Inspector Name/Date = CND.No
 LCL.Prt_Inspector_Name_Date = 'N';

 ENDIF;

 //?Check If Overflow Reached to Reset Count & Update Overflow Line.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Max detail lines to print on Page is 12 else set Overflow On.
 //?Call PUW6XFR to ensure we are on the correct Box.
 // Call program Zzz Reset Count f/LtrhdXF.
 CALL PROGRAM(Zzz Reset Count f/LtrhdXF) ('PUW6XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(PAR.#_of_Lines_Reqd_to_Print);
 PARAMETER(LCL.Overflow);

 //?Update Previous Item Code to Print Continuation Text Flag.
 CASE;

 // IF LCL.Overflow is Yes
 IF LCL.Overflow = 'Y';

 EXECUTE FUNCTION(Upd Prt Continuation  RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2208127;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Description_Xlate_Line_1);
  PARAMETER(DB1.Description_Xlate_Line_2);
  PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(DB1.Overflow);
  PARAMETER(DB1.EDODP_Unused_Number);
  PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(DB1.Prt_Inspector_Name_Date);
  PARAMETER(DB1.Item_Printed);
  PARAMETER('Y');
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(DB1.EDODP_Unused_Sts_2);
  PARAMETER(DB1.EDODP_Unused_Sts_3);
  PARAMETER(DB1.EDODP_Unused_Nbr_1);
  PARAMETER(DB1.EDODP_Unused_Dte_1);
  PARAMETER(DB1.EDODP_Unused_Txt_1);
  PARAMETER(DB1.EDODP_Unused_Txt_2);
  QUIT;

 }

 //?Update Previous Item Code to Print Continuation Text Flag.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Normally would be for last record processing.
 CASE;

 // IF PAR.# of Lines Reqd to Print is 12
 IF PAR.#_of_Lines_Reqd_to_Print = 12;

 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 // PAR.# of Lines Reqd to Print = CON.*ZERO
 PAR.#_of_Lines_Reqd_to_Print = *ZERO;

 //?Update Previous Item Code to Print Continuation Text Flag.
 EXECUTE FUNCTION(Upd Prt Continuation  RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2208127;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Description_Xlate_Line_1);
  PARAMETER(DB1.Description_Xlate_Line_2);
  PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(DB1.Overflow);
  PARAMETER(DB1.EDODP_Unused_Number);
  PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(DB1.Prt_Inspector_Name_Date);
  PARAMETER(DB1.Item_Printed);
  PARAMETER('Y');
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(DB1.EDODP_Unused_Sts_2);
  PARAMETER(DB1.EDODP_Unused_Sts_3);
  PARAMETER(DB1.EDODP_Unused_Nbr_1);
  PARAMETER(DB1.EDODP_Unused_Dte_1);
  PARAMETER(DB1.EDODP_Unused_Txt_1);
  PARAMETER(DB1.EDODP_Unused_Txt_2);
  QUIT;

 }

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.USR Counter = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 LCL.USR_Counter = PAR.#_of_Lines_Reqd_to_Print + LCL.#_of_Lines_Reqd_to_Print;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 CASE;

 // IF LCL.USR Counter is EQ 2
 IF LCL.USR_Counter = 2;

 // LCL.# of Blank Line-Item Ln1 = CON.1
 LCL.#_of_Blank_Line_Item_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 4
 IF LCL.USR_Counter = 4;

 // LCL.# of Blank Line-Item Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Item_Ln1 = *ZERO;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 6
 IF LCL.USR_Counter = 6;

 // LCL.# of Blank Line-Item Ln1 = CON.1
 LCL.#_of_Blank_Line_Item_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 8
 IF LCL.USR_Counter = 8;

 // LCL.# of Blank Line-Item Ln1 = CON.1
 LCL.#_of_Blank_Line_Item_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 10
 IF LCL.USR_Counter = 10;

 // LCL.# of Blank Line-Item Ln1 = CON.1
 LCL.#_of_Blank_Line_Item_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 12
 IF LCL.USR_Counter = 12;

 //?Do Not Print Blank Line If Box 6.
 // LCL.# of Blank Line-Item Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Item_Ln1 = *ZERO;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 2 is Entered
 IF DB1.ED_Item_Label_Line_2 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.USR Counter = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 LCL.USR_Counter = PAR.#_of_Lines_Reqd_to_Print + LCL.#_of_Lines_Reqd_to_Print;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 CASE;

 // IF LCL.USR Counter is EQ 2
 IF LCL.USR_Counter = 2;

 // LCL.# of Blank Line-Item Ln2 = CON.2
 LCL.#_of_Blank_Line_Item_Ln2 = 2;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 4
 IF LCL.USR_Counter = 4;

 // LCL.# of Blank Line-Item Ln2 = CON.1
 LCL.#_of_Blank_Line_Item_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 6
 IF LCL.USR_Counter = 6;

 // LCL.# of Blank Line-Item Ln2 = CON.2
 LCL.#_of_Blank_Line_Item_Ln2 = 2;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 8
 IF LCL.USR_Counter = 8;

 // LCL.# of Blank Line-Item Ln2 = CON.2
 LCL.#_of_Blank_Line_Item_Ln2 = 2;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 10
 IF LCL.USR_Counter = 10;

 // LCL.# of Blank Line-Item Ln2 = CON.2
 LCL.#_of_Blank_Line_Item_Ln2 = 2;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 12
 IF LCL.USR_Counter = 12;

 //?Do Not Print Blank Line If Box 6.
 // LCL.# of Blank Line-Item Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Item_Ln2 = 0;

 ENDIF;

 ENDIF;

 //?Country is Setup for Language Translation.
 CASE;

 // IF NOT PAR.ED Xlate Desc to Country is Not Entered
 IF ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.USR Counter = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 LCL.USR_Counter = PAR.#_of_Lines_Reqd_to_Print + LCL.#_of_Lines_Reqd_to_Print;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 CASE;

 // IF LCL.USR Counter is EQ 2
 IF LCL.USR_Counter = 2;

 // LCL.# of Blank Line-Xlate Ln1 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 4
 IF LCL.USR_Counter = 4;

 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = *ZERO;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 6
 IF LCL.USR_Counter = 6;

 // LCL.# of Blank Line-Xlate Ln1 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 8
 IF LCL.USR_Counter = 8;

 // LCL.# of Blank Line-Xlate Ln1 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 10
 IF LCL.USR_Counter = 10;

 // LCL.# of Blank Line-Xlate Ln1 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln1 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 12
 IF LCL.USR_Counter = 12;

 //?Do Not Print Blank Line If Box 6.
 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = *ZERO;

 ENDIF;

 //?Force No Blank Line.
 CASE;

 // IF DB1.ED Item Label Line 2 is Not Entered
 IF DB1.ED_Item_Label_Line_2 = *BLANK;

 // LCL.# of Blank Line-Xlate Ln1 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln1 = 0;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc 2 is Entered
 IF DB1.ED_Language_Xlate_Desc_2 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.USR Counter = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 LCL.USR_Counter = PAR.#_of_Lines_Reqd_to_Print + LCL.#_of_Lines_Reqd_to_Print;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 CASE;

 // IF LCL.USR Counter is EQ 2
 IF LCL.USR_Counter = 2;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 4
 IF LCL.USR_Counter = 4;

 // LCL.# of Blank Line-Xlate Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln2 = 0;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 6
 IF LCL.USR_Counter = 6;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 8
 IF LCL.USR_Counter = 8;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 10
 IF LCL.USR_Counter = 10;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 12
 IF LCL.USR_Counter = 12;

 //?Do Not Print Blank Line If Box 6.
 // LCL.# of Blank Line-Xlate Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln2 = *ZERO;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Check Exception if Spanish Text Needs to Be Printed on Xlate Desc Line 2.
 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(DB1.ED Language Xlate Desc,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(DB1.ED_Language_Xlate_Desc:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(DB1.ED Language Xlate Desc,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(DB1.ED_Language_Xlate_Desc:29:12);

 ENDIF;

 //?Override ED Language Xlate Desc 2 to print but was originally blank.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 //?Override ED Language Xlate Desc 2 to print but was originally blank.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 // LCL.USR Counter = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 LCL.USR_Counter = PAR.#_of_Lines_Reqd_to_Print + LCL.#_of_Lines_Reqd_to_Print;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 CASE;

 // IF LCL.USR Counter is EQ 2
 IF LCL.USR_Counter = 2;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 4
 IF LCL.USR_Counter = 4;

 // LCL.# of Blank Line-Xlate Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln2 = 0;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 6
 IF LCL.USR_Counter = 6;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 8
 IF LCL.USR_Counter = 8;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 10
 IF LCL.USR_Counter = 10;

 // LCL.# of Blank Line-Xlate Ln2 = CON.1
 LCL.#_of_Blank_Line_Xlate_Ln2 = 1;

 //?Check Which Box we are on & Set # of Blank Line to Print.
 // IF LCL.USR Counter is 12
 IF LCL.USR_Counter = 12;

 //?Do Not Print Blank Line If Box 6.
 // LCL.# of Blank Line-Xlate Ln2 = CON.*ZERO
 LCL.#_of_Blank_Line_Xlate_Ln2 = *ZERO;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 // PAR.# of Lines Reqd to Print = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = PAR.#_of_Lines_Reqd_to_Print
 + LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Re-Check if Overflow.
 CASE;

 // IF LCL.Overflow is No
 IF LCL.Overflow = 'N';

 // AND PAR.# of Lines Reqd to Print is GT 12
 AND PAR.#_of_Lines_Reqd_to_Print > 12;

 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 //?Update Previous Item Code to Print Continuation Text Flag.
 EXECUTE FUNCTION(Upd Prt Continuation  RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2208127;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Description_Xlate_Line_1);
  PARAMETER(DB1.Description_Xlate_Line_2);
  PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(DB1.Overflow);
  PARAMETER(DB1.EDODP_Unused_Number);
  PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(DB1.Prt_Inspector_Name_Date);
  PARAMETER(DB1.Item_Printed);
  PARAMETER('Y');
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(DB1.EDODP_Unused_Sts_2);
  PARAMETER(DB1.EDODP_Unused_Sts_3);
  PARAMETER(DB1.EDODP_Unused_Nbr_1);
  PARAMETER(DB1.EDODP_Unused_Dte_1);
  PARAMETER(DB1.EDODP_Unused_Txt_1);
  PARAMETER(DB1.EDODP_Unused_Txt_2);
  QUIT;

 }

 //?Reset Counter.
 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Create Export Doc Order Dtl PRT (PUCFCPP) Record.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CND.Not Entered
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = *BLANK;

 //?Format 'Overflow Pg Dsc Xlate Ln1'.
 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 //?Always use 'Overflow Pg Dsc Xlate Ln1' for Appl Export Doc.
 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CONCAT(LCL.Overflow Pg Dsc Xlate Ln1,LCL.Frozen/Chilled as Spani
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = LCL.Overflow_Pg_Dsc_Xlate_Ln1 + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(LCL.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER(LCL.Overflow);
 PARAMETER(LCL.EDODP_Unused_Number);
 PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.#_of_Blank_Line_Item_Ln1);
 PARAMETER(LCL.#_of_Blank_Line_Item_Ln2);
 PARAMETER(LCL.#_of_Blank_Line_Xlate_Ln1);
 PARAMETER(LCL.#_of_Blank_Line_Xlate_Ln2);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

 ENDIF;

}


QUIT;

ENDIF;

ENDIF;

//?Create New Records for Health Certificate.
CASE;

// IF NOT PAR.ED Export Document Type is Application for Export
IF ! PAR.ED_Export_Document_Type = 'A';

EXECUTE FUNCTION(Crt EDOD PRT-HC       RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC2205076;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.ED_Xlate_Desc_to_Country);
{
 //?USER: Initialize routine

 // LCL.Count USR = CON.*ZERO
 LCL.Count_USR = *ZERO;

 // LCL.USR Page Number 3.0 = CON.1
 LCL.USR_Page_Number_3_0 = 1;

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 // PAR.# of Lines Reqd to Print = CON.*ZERO
 PAR.#_of_Lines_Reqd_to_Print = *ZERO;

 // PAR.Prt Overflow Dsc Xlate L1 = CND.No
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'N';

 //?USER: Process Data record

 //?Select Only Product with Weights.
 CASE;

 // IF DB1.ED Product Net Weight lbs is Entered
 IF DB1.ED_Product_Net_Weight_lbs <> *ZERO;

 //?First Time Thru, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 ENDIF;

 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Create Exp Doc Order Dtl PRT.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.ED Language Xlate Desc = DB1.ED Language Xlate Desc
 LCL.ED_Language_Xlate_Desc = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.ED Language Xlate Desc,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.ED_Language_Xlate_Desc:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.ED Language Xlate Desc,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.ED_Language_Xlate_Desc:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.ED Language Xlate Desc = CONCAT(LCL.ED Language Xlate Desc,LCL.Frozen/Chilled as Spanish,CON
 LCL.ED_Language_Xlate_Desc = LCL.ED_Language_Xlate_Desc + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 //?Force no print of Xlate Desc Line 2 if Xlate Desc Line 1 is not entered.
 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(LCL.ED_Language_Xlate_Desc);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(*BLANK);
 PARAMETER('N');
 PARAMETER(*ZERO);
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

 //?Item Code Change, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF DB1.ED Item Code NE LCL.ED Item Code
 IF DB1.ED_Item_Code <> LCL.ED_Item_Code;

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Initialization.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 // LCL.Skip Ln Before Xlate Ln1 = CND.No
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'N';

 // LCL.Skip Ln After Xlate Ln2 = CND.No
 LCL.Skip_Ln_After_Xlate_Ln2 = 'N';

 // LCL.Overflow = CND.No
 LCL.Overflow = 'N';

 // LCL.Prt Inspector Name/Date = CND.No
 LCL.Prt_Inspector_Name_Date = 'N';

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.Count USR = LCL.Count USR + CON.2
 LCL.Count_USR = LCL.Count_USR + 2;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 //?For Continuation Overflow Page, Set Skip Line Before Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is Greater than 1
 IF LCL.USR_Page_Number_3_0 > 1;

 CASE;

 // IF LCL.Count USR is Four
 IF LCL.Count_USR = 4;

 // OR LCL.Count USR is Six
 OR LCL.Count_USR = 6;

 // OR LCL.Count USR is Eight
 OR LCL.Count_USR = 8;

 // OR LCL.Count USR is Twelve
 OR LCL.Count_USR = 12;

 // OR LCL.Count USR is Fourteen
 OR LCL.Count_USR = 14;

 // OR LCL.Count USR is Eighteen
 OR LCL.Count_USR = 18;

 // OR LCL.Count USR is twenty-two
 OR LCL.Count_USR = 22;

 // OR LCL.Count USR is twenty-four
 OR LCL.Count_USR = 24;

 // OR LCL.Count USR is twenty-eight
 OR LCL.Count_USR = 28;

 // OR LCL.Count USR is Thirty
 OR LCL.Count_USR = 30;

 // OR LCL.Count USR is Thirty-Two
 OR LCL.Count_USR = 32;

 // LCL.Skip Ln Before Xlate Ln1 = CND.Yes
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'Y';

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.Count USR = LCL.Count USR + CON.2
 LCL.Count_USR = LCL.Count_USR + 2;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 //?For Continuation Overflow Page, Set Skip Line After Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is Greater than 1
 IF LCL.USR_Page_Number_3_0 > 1;

 CASE;

 // IF LCL.Count USR is Four
 IF LCL.Count_USR = 4;

 // OR LCL.Count USR is Six
 OR LCL.Count_USR = 6;

 // OR LCL.Count USR is Eight
 OR LCL.Count_USR = 8;

 // OR LCL.Count USR is Twelve
 OR LCL.Count_USR = 12;

 // OR LCL.Count USR is Fourteen
 OR LCL.Count_USR = 14;

 // OR LCL.Count USR is Eighteen
 OR LCL.Count_USR = 18;

 // OR LCL.Count USR is twenty-two
 OR LCL.Count_USR = 22;

 // OR LCL.Count USR is twenty-four
 OR LCL.Count_USR = 24;

 // OR LCL.Count USR is twenty-eight
 OR LCL.Count_USR = 28;

 // OR LCL.Count USR is Thirty
 OR LCL.Count_USR = 30;

 // OR LCL.Count USR is Thirty-Two
 OR LCL.Count_USR = 32;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 ENDIF;

 ENDIF;

 // PAR.# of Lines Reqd to Print = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = PAR.#_of_Lines_Reqd_to_Print
 + LCL.#_of_Lines_Reqd_to_Print;

 //?1st Page Exception to Print 9th Detail Line if No Label Ln2 or Xlate Ln2.
 CASE;

 // IF LCL.USR Page Number 3.0 is 1
 IF LCL.USR_Page_Number_3_0 = 1;

 // AND PAR.# of Lines Reqd to Print is GT 9
 AND PAR.#_of_Lines_Reqd_to_Print > 9;

 CASE;

 // IF DB1.ED Item Label Line 2 is Not Entered
 IF DB1.ED_Item_Label_Line_2 = *BLANK;

 // PAR.# of Lines Reqd to Print = PAR.# of Lines Reqd to Print - CON.1
 PAR.#_of_Lines_Reqd_to_Print = PAR.#_of_Lines_Reqd_to_Print - 1;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc 2 is Not Entered
 IF DB1.ED_Language_Xlate_Desc_2 = *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // PAR.# of Lines Reqd to Print = PAR.# of Lines Reqd to Print - CON.1
 PAR.#_of_Lines_Reqd_to_Print = PAR.#_of_Lines_Reqd_to_Print - 1;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Page 1 or Continuation Page Processing.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Page 1 Else Not Page 1.
 CASE;

 // IF LCL.USR Page Number 3.0 is 1
 IF LCL.USR_Page_Number_3_0 = 1;

 //?Determine Overflow Line to Print on Continuation Page.
 CASE;

 // IF PAR.# of Lines Reqd to Print is GT 9
 IF PAR.#_of_Lines_Reqd_to_Print > 9;

 //?Max detail lines to print on Page 1 of HC is 9. 5th box on
 //?1st page can only print 1 detail line else set Overflow.
 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 // PAR.Prt Overflow Dsc Xlate L1 = CND.Yes
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

 // LCL.USR Page Number 3.0 = LCL.USR Page Number 3.0 + CON.1
 LCL.USR_Page_Number_3_0 = LCL.USR_Page_Number_3_0 + 1;

 //?Set Skip Line After. Will Print a Blank Line in the Overflow Cont. Page
 CASE;

 // IF LCL.# of Lines Reqd to Print is 4
 IF LCL.#_of_Lines_Reqd_to_Print = 4;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 //?Reset Counter for Continuation Page.
 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.Count USR = LCL.# of Lines Reqd to Print
 LCL.Count_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Page 1 Else Not Page 1.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Not Page 1. Continuation Page has total of 34 DTL lines (17 boxes).
 //?Determine Overflow Line to Print on Continuation Page.
 CASE;

 // IF PAR.# of Lines Reqd to Print is GT 34
 IF PAR.#_of_Lines_Reqd_to_Print > 34;

 //?Max detail lines to print on Continuation Page is 34.
 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 // PAR.Prt Overflow Dsc Xlate L1 = CND.Yes
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

 // LCL.USR Page Number 3.0 = LCL.USR Page Number 3.0 + CON.1
 LCL.USR_Page_Number_3_0 = LCL.USR_Page_Number_3_0 + 1;

 //?Set Skip Line After. Will Print a Blank Line in the next Overflow Page.
 CASE;

 // IF LCL.# of Lines Reqd to Print is 4
 IF LCL.#_of_Lines_Reqd_to_Print = 4;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 //?Update Previous Item Code to Print Inspector Name/Date Flag.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Upd Prt Insp Name/Date RT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2206662;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Description_Xlate_Line_1);
  PARAMETER(DB1.Description_Xlate_Line_2);
  PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(DB1.Overflow);
  PARAMETER(DB1.EDODP_Unused_Number);
  PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
  PARAMETER('Y');
  PARAMETER(DB1.Item_Printed);
  PARAMETER(DB1.Prt_Continuation_Text);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(DB1.EDODP_Unused_Sts_2);
  PARAMETER(DB1.EDODP_Unused_Sts_3);
  PARAMETER(DB1.EDODP_Unused_Nbr_1);
  PARAMETER(DB1.EDODP_Unused_Dte_1);
  PARAMETER(DB1.EDODP_Unused_Txt_1);
  PARAMETER(DB1.EDODP_Unused_Txt_2);
  QUIT;

 }

 ENDIF;

 //?Reset Counter for Continuation Page.
 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.Count USR = LCL.# of Lines Reqd to Print
 LCL.Count_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Create Export Doc Order Dtl PRT (PUCFCPP) Record.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CND.Not Entered
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = *BLANK;

 //?If 'Prt Overflow Dsc Xlate L1=Y' Then Update 'Overflow Pg Dsc Xlate Ln1'.
 CASE;

 // IF PAR.Prt Overflow Dsc Xlate L1 is No
 IF PAR.Prt_Overflow_Dsc_Xlate_L1 = 'N';

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.ED Language Xlate Desc = DB1.ED Language Xlate Desc
 LCL.ED_Language_Xlate_Desc = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.ED Language Xlate Desc,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.ED_Language_Xlate_Desc:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.ED Language Xlate Desc,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.ED_Language_Xlate_Desc:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.ED Language Xlate Desc = CONCAT(LCL.ED Language Xlate Desc,LCL.Frozen/Chilled as Spanish,CON
 LCL.ED_Language_Xlate_Desc = LCL.ED_Language_Xlate_Desc + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?If 'Prt Overflow Dsc Xlate L1=Y' Then Update 'Overflow Pg Dsc Xlate Ln1'.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Format 'Overflow Pg Dsc Xlate Ln1' to Print on HC Overflow (PUH0PFR).
 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CONCAT(LCL.Overflow Pg Dsc Xlate Ln1,LCL.Frozen/Chilled as Spani
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = LCL.Overflow_Pg_Dsc_Xlate_Ln1 + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Will use PRTOBJ to print the Language Translated Desc in the HC print.
 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(LCL.ED_Language_Xlate_Desc);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(LCL.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER(LCL.Overflow);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
 PARAMETER(LCL.Prt_Inspector_Name_Date);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

 ENDIF;

}


ENDIF;

//?Create New Records for Application Export Doc.
CASE;

// IF PAR.ED Export Document Type is Application for Export
IF PAR.ED_Export_Document_Type = 'A';

EXECUTE FUNCTION(Crt EDOD PRT-Appl Exp RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC2207970;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.ED_Xlate_Desc_to_Country);
{
 //?USER: Initialize routine

 // LCL.Count USR = CON.*ZERO
 LCL.Count_USR = *ZERO;

 // LCL.USR Page Number 3.0 = CON.1
 LCL.USR_Page_Number_3_0 = 1;

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 // LCL.1st Page Line Counter USR = CON.*ZERO
 LCL.X1st_Page_Line_Counter_USR = *ZERO;

 // PAR.# of Lines Reqd to Print = CON.*ZERO
 PAR.#_of_Lines_Reqd_to_Print = *ZERO;

 // PAR.Prt Overflow Dsc Xlate L1 = CND.No
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'N';

 //?USER: Process Data record

 //?Do NOT check ED Product Net Weight lbs is entered here,
 //?the Application Export prints before the HC doc hence no
 //?weight will exist, per RC.
 //?First Time Thru, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 // LCL.Skip Ln After Xlate Ln2 = CND.No
 LCL.Skip_Ln_After_Xlate_Ln2 = 'N';

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 //?For 1st Page, Set Skip Line Before/After Xlate Desc.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 ENDIF;

 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.1st Page Line Counter USR = LCL.# of Lines Reqd to Print
 LCL.X1st_Page_Line_Counter_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Create Exp Doc Order Dtl PRT.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 //?Always use 'Overflow Pg Dsc Xlate Ln1' for Appl Export Doc.
 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CONCAT(LCL.Overflow Pg Dsc Xlate Ln1,LCL.Frozen/Chilled as Spani
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = LCL.Overflow_Pg_Dsc_Xlate_Ln1 + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 //?Force no print of Xlate Desc Line 2 if Xlate Desc Line 1 is not entered.
 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(LCL.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER('N');
 PARAMETER(*ZERO);
 PARAMETER('N');
 PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

 //?Item Code Change, Create Exp Doc Order Dtl PRT Record.
 CASE;

 // IF DB1.ED Item Code NE LCL.ED Item Code
 IF DB1.ED_Item_Code <> LCL.ED_Item_Code;

 // LCL.ED Item Code = DB1.ED Item Code
 LCL.ED_Item_Code = DB1.ED_Item_Code;

 //?Determine '# of Lines Reqd to Print'.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Initialization.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.# of Lines Reqd to Print = CON.*ZERO
 LCL.#_of_Lines_Reqd_to_Print = *ZERO;

 // LCL.Skip Ln Before Xlate Ln1 = CND.No
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'N';

 // LCL.Skip Ln After Xlate Ln2 = CND.No
 LCL.Skip_Ln_After_Xlate_Ln2 = 'N';

 // LCL.Overflow = CND.No
 LCL.Overflow = 'N';

 // LCL.Prt Inspector Name/Date = CND.No
 LCL.Prt_Inspector_Name_Date = 'N';

 ENDIF;

 CASE;

 // IF DB1.ED Item Label Line 1 is Entered
 IF DB1.ED_Item_Label_Line_1 <> *BLANK;

 // LCL.Count USR = LCL.Count USR + CON.2
 LCL.Count_USR = LCL.Count_USR + 2;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 //?For 1st Page, Set Skip Line Before Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is 1
 IF LCL.USR_Page_Number_3_0 = 1;

 // LCL.1st Page Line Counter USR = LCL.1st Page Line Counter USR + CON.2
 LCL.X1st_Page_Line_Counter_USR = LCL.X1st_Page_Line_Counter_USR + 2;

 CASE;

 // IF LCL.1st Page Line Counter USR is Four
 IF LCL.X1st_Page_Line_Counter_USR = 4;

 // OR LCL.1st Page Line Counter USR is Six
 OR LCL.X1st_Page_Line_Counter_USR = 6;

 // OR LCL.1st Page Line Counter USR is Eight
 OR LCL.X1st_Page_Line_Counter_USR = 8;

 // LCL.Skip Ln Before Xlate Ln1 = CND.Yes
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'Y';

 ENDIF;

 ENDIF;

 //?For Continuation Overflow Page, Set Skip Line Before Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is Greater than 1
 IF LCL.USR_Page_Number_3_0 > 1;

 CASE;

 // IF LCL.Count USR is Four
 IF LCL.Count_USR = 4;

 // OR LCL.Count USR is Eight
 OR LCL.Count_USR = 8;

 // OR LCL.Count USR is Twelve
 OR LCL.Count_USR = 12;

 // OR LCL.Count USR is Sixteen
 OR LCL.Count_USR = 16;

 // OR LCL.Count USR is Twenty
 OR LCL.Count_USR = 20;

 // OR LCL.Count USR is twenty-two
 OR LCL.Count_USR = 22;

 // OR LCL.Count USR is twenty-eight
 OR LCL.Count_USR = 28;

 // OR LCL.Count USR is Thirty
 OR LCL.Count_USR = 30;

 // OR LCL.Count USR is Thirty-Four
 OR LCL.Count_USR = 34;

 // OR LCL.Count USR is Thirty-Eight
 OR LCL.Count_USR = 38;

 // OR LCL.Count USR is Forty
 OR LCL.Count_USR = 40;

 // OR LCL.Count USR is Forty-Four
 OR LCL.Count_USR = 44;

 // OR LCL.Count USR is Forty-Eight
 OR LCL.Count_USR = 48;

 // LCL.Skip Ln Before Xlate Ln1 = CND.Yes
 LCL.Skip_Ln_Before_Xlate_Ln1 = 'Y';

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 // LCL.Count USR = LCL.Count USR + CON.2
 LCL.Count_USR = LCL.Count_USR + 2;

 // LCL.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print + CON.2
 LCL.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print + 2;

 //?For 1st Page, Set Skip Line After Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is 1
 IF LCL.USR_Page_Number_3_0 = 1;

 // LCL.1st Page Line Counter USR = LCL.1st Page Line Counter USR + CON.2
 LCL.X1st_Page_Line_Counter_USR = LCL.X1st_Page_Line_Counter_USR + 2;

 CASE;

 // IF LCL.1st Page Line Counter USR is Four
 IF LCL.X1st_Page_Line_Counter_USR = 4;

 // OR LCL.1st Page Line Counter USR is Six
 OR LCL.X1st_Page_Line_Counter_USR = 6;

 // OR LCL.1st Page Line Counter USR is Eight
 OR LCL.X1st_Page_Line_Counter_USR = 8;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 ENDIF;

 //?For Continuation Overflow Page, Set Skip Line After Xlate Desc.
 CASE;

 // IF LCL.USR Page Number 3.0 is Greater than 1
 IF LCL.USR_Page_Number_3_0 > 1;

 CASE;

 // IF LCL.Count USR is Four
 IF LCL.Count_USR = 4;

 // OR LCL.Count USR is Eight
 OR LCL.Count_USR = 8;

 // OR LCL.Count USR is Twelve
 OR LCL.Count_USR = 12;

 // OR LCL.Count USR is Sixteen
 OR LCL.Count_USR = 16;

 // OR LCL.Count USR is Twenty
 OR LCL.Count_USR = 20;

 // OR LCL.Count USR is twenty-two
 OR LCL.Count_USR = 22;

 // OR LCL.Count USR is twenty-eight
 OR LCL.Count_USR = 28;

 // OR LCL.Count USR is Thirty
 OR LCL.Count_USR = 30;

 // OR LCL.Count USR is Thirty-Four
 OR LCL.Count_USR = 34;

 // OR LCL.Count USR is Thirty-Eight
 OR LCL.Count_USR = 38;

 // OR LCL.Count USR is Forty
 OR LCL.Count_USR = 40;

 // OR LCL.Count USR is Forty-Four
 OR LCL.Count_USR = 44;

 // OR LCL.Count USR is Forty-Eight
 OR LCL.Count_USR = 48;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 ENDIF;

 ENDIF;

 // PAR.# of Lines Reqd to Print = PAR.# of Lines Reqd to Print + LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = PAR.#_of_Lines_Reqd_to_Print
 + LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Page 1 or Continuation Page Processing.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Page 1 Else Not Page 1.
 CASE;

 // IF LCL.USR Page Number 3.0 is 1
 IF LCL.USR_Page_Number_3_0 = 1;

 //?Determine Overflow Line to Print on Continuation Page.
 CASE;

 // IF PAR.# of Lines Reqd to Print is GT 10
 IF PAR.#_of_Lines_Reqd_to_Print > 10;

 //?Max detail lines to print on Page 1 is 10 else set Overflow On.
 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 // PAR.Prt Overflow Dsc Xlate L1 = CND.Yes
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

 // LCL.USR Page Number 3.0 = LCL.USR Page Number 3.0 + CON.1
 LCL.USR_Page_Number_3_0 = LCL.USR_Page_Number_3_0 + 1;

 //?Set Skip Line After. Will Print a Blank Line in the Overflow Cont. Page
 CASE;

 // IF LCL.# of Lines Reqd to Print is 4
 IF LCL.#_of_Lines_Reqd_to_Print = 4;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 //?Reset Counter for Continuation Page.
 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.Count USR = LCL.# of Lines Reqd to Print
 LCL.Count_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 //?Page 1 Else Not Page 1.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Not Page 1. Continuation Page has total of 50 DTL lines (25 boxes).
 //?Determine Overflow Line to Print on Continuation Page.
 CASE;

 // IF PAR.# of Lines Reqd to Print is GT 50
 IF PAR.#_of_Lines_Reqd_to_Print > 50;

 //?Max detail lines to print on Continuation Page is 50.
 // LCL.Overflow = CND.Yes
 LCL.Overflow = 'Y';

 // PAR.Prt Overflow Dsc Xlate L1 = CND.Yes
 PAR.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

 // LCL.USR Page Number 3.0 = LCL.USR Page Number 3.0 + CON.1
 LCL.USR_Page_Number_3_0 = LCL.USR_Page_Number_3_0 + 1;

 //?Set Skip Line After. Will Print a Blank Line in the next Overflow Page.
 CASE;

 // IF LCL.# of Lines Reqd to Print is 4
 IF LCL.#_of_Lines_Reqd_to_Print = 4;

 // LCL.Skip Ln After Xlate Ln2 = CND.Yes
 LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

 ENDIF;

 //?Update Previous Item Code to Print Continuation Text Flag.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Upd Prt Continuation  RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2208127;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Description_Xlate_Line_1);
  PARAMETER(DB1.Description_Xlate_Line_2);
  PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(DB1.Overflow);
  PARAMETER(DB1.EDODP_Unused_Number);
  PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(DB1.Prt_Inspector_Name_Date);
  PARAMETER(DB1.Item_Printed);
  PARAMETER('Y');
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(DB1.EDODP_Unused_Sts_2);
  PARAMETER(DB1.EDODP_Unused_Sts_3);
  PARAMETER(DB1.EDODP_Unused_Nbr_1);
  PARAMETER(DB1.EDODP_Unused_Dte_1);
  PARAMETER(DB1.EDODP_Unused_Txt_1);
  PARAMETER(DB1.EDODP_Unused_Txt_2);
  QUIT;

 }

 ENDIF;

 //?Reset Counter for Continuation Page.
 // PAR.# of Lines Reqd to Print = LCL.# of Lines Reqd to Print
 PAR.#_of_Lines_Reqd_to_Print = LCL.#_of_Lines_Reqd_to_Print;

 // LCL.Count USR = LCL.# of Lines Reqd to Print
 LCL.Count_USR = LCL.#_of_Lines_Reqd_to_Print;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Create Export Doc Order Dtl PRT (PUCFCPP) Record.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Language Xlate Desc = CND.Not Entered
 LCL.ED_Language_Xlate_Desc = *BLANK;

 // LCL.Description Xlate Line 2 = CND.Not Entered
 LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CND.Not Entered
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = *BLANK;

 //?Format 'Overflow Pg Dsc Xlate Ln1' to Print on Appl Overflow (PUIEPFR).
 CASE;

 // IF DB1.ED Language Xlate Desc is Entered
 IF DB1.ED_Language_Xlate_Desc <> *BLANK;

 // AND NOT PAR.ED Xlate Desc to Country is Not Entered
 AND ! PAR.ED_Xlate_Desc_to_Country = *BLANK;

 //?Always use 'Overflow Pg Dsc Xlate Ln1' for Appl Export Doc.
 // LCL.Overflow Pg Dsc Xlate Ln1 = DB1.ED Language Xlate Desc
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = DB1.ED_Language_Xlate_Desc;

 // LCL.Description Xlate Line 2 = DB1.ED Language Xlate Desc 2
 LCL.Description_Xlate_Line_2 = DB1.ED_Language_Xlate_Desc_2;

 //?Spanish Translation.
 CASE;

 // IF PAR.ED Xlate Desc to Country is Spanish
 IF PAR.ED_Xlate_Desc_to_Country = 'S';

 // LCL.Text USR 12 = CND.Not Entered
 LCL.Text_USR_12 = *BLANK;

 // LCL.Frozen/Chilled as Spanish = CND.Not Entered
 LCL.Frozen_Chilled_as_Spanish = *BLANK;

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 CASE;

 // IF DB1.ED Chilled/Frozen Text is Frozen
 IF DB1.ED_Chilled_Frozen_Text = 'Frozen';

 // OR DB1.ED Chilled/Frozen Text is FROZEN All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'FROZEN';

 //?06/19/24 SP S312722-Start
 //?06/19/24 SP S312722-End
 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.31,CON.10)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:31:10);

 //?Xlate Frozen/Chilled - Xlate Line Desc 1.
 // IF DB1.ED Chilled/Frozen Text is Chilled
 IF DB1.ED_Chilled_Frozen_Text = 'Chilled';

 // OR DB1.ED Chilled/Frozen Text is CHILLED All Caps
 OR DB1.ED_Chilled_Frozen_Text = 'CHILLED';

 // LCL.Frozen/Chilled as Spanish = CON.REFRIGERADO
 LCL.Frozen_Chilled_as_Spanish = 'REFRIGERADO';

 // LCL.Text USR 12 = SUBSTRING(LCL.Overflow Pg Dsc Xlate Ln1,CON.29,CON.12)
 LCL.Text_USR_12 = SUBSTRING(LCL.Overflow_Pg_Dsc_Xlate_Ln1:29:12);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 CASE;

 // IF LCL.Text USR 12 is Not Entered
 IF LCL.Text_USR_12 = *BLANK;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Overflow Pg Dsc Xlate Ln1 = CONCAT(LCL.Overflow Pg Dsc Xlate Ln1,LCL.Frozen/Chilled as Spani
 LCL.Overflow_Pg_Dsc_Xlate_Ln1 = LCL.Overflow_Pg_Dsc_Xlate_Ln1 + LCL.Frozen_Chilled_as_Spanish (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 //?If Blank Then Append to Xlate Desc Line 1 Else to Xlate Desc Line 2.
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Description Xlate Line 2 is Not Entered
 IF LCL.Description_Xlate_Line_2 = *BLANK;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (0);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Description Xlate Line 2 = CONCAT(LCL.Description Xlate Line 2,LCL.Frozen/Chilled as Spanish
 LCL.Description_Xlate_Line_2 = LCL.Description_Xlate_Line_2 + LCL.Frozen_Chilled_as_Spanish (1);

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Crt Exp Doc Ord Dtl PRTRT) TYPE(RTVOBJ) FILE(PUCFCPP)          AC2205053;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Description_Xlate_Line_2);
 PARAMETER(LCL.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER(LCL.Overflow);
 PARAMETER(LCL.EDODP_Unused_Number);
 PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Blank_1_USR);
 PARAMETER(LCL.Blank_1_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Doc Ord Dtl PRT   CR) TYPE(CRTOBJ) FILE(PUCFCPP)           AC2204917;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Xlate_Line_1);
  PARAMETER(PAR.Description_Xlate_Line_2);
  PARAMETER(PAR.Overflow_Pg_Dsc_Xlate_Ln1);
  PARAMETER(PAR.Overflow);
  PARAMETER(PAR.EDODP_Unused_Number);
  PARAMETER(PAR.Skip_Ln_Before_Xlate_Ln1);
  PARAMETER(PAR.Skip_Ln_After_Xlate_Ln2);
  PARAMETER(PAR.Prt_Inspector_Name_Date);
  PARAMETER(PAR.Item_Printed);
  PARAMETER(PAR.Prt_Continuation_Text);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Item_Ln2);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln1);
  PARAMETER(PAR.#_of_Blank_Line_Xlate_Ln2);
  PARAMETER(PAR.EDODP_Unused_Sts_2);
  PARAMETER(PAR.EDODP_Unused_Sts_3);
  PARAMETER(PAR.EDODP_Unused_Nbr_1);
  PARAMETER(PAR.EDODP_Unused_Dte_1);
  PARAMETER(PAR.EDODP_Unused_Txt_1);
  PARAMETER(PAR.EDODP_Unused_Txt_2);
 }

 ENDIF;

 ENDIF;

}


ENDIF;

