// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMUYXFR
// ?Date: 14.08.2025 Time: 03:44:10
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** Upd/Crt Whse Loc file, Item Lot Loc, Item Lot Loc Trans
EXECUTE FUNCTION(TMP CRT Itm Lot Loc/Tr RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1883269;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(*ZERO);
{
 //?USER: Initialize routine

 //?** Retrieve Chill Code for default location     FP1127 12/05/2008
 EXECUTE FUNCTION(Rtv Loc Type          RT) TYPE(RTVOBJ) FILE(PDL2REP)           AC1510129;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(1111);
 PARAMETER(WRK.WLT_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Chill Time        RT) TYPE(RTVOBJ) FILE(PDL3REP)           AC1510134;
 PARAMETER(WRK.WLT_Type_Code);
 PARAMETER(LCL.WLT_Type_Chill_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.Number 4.0 1 USR = CON.9999
 WRK.Number_4_0_1_USR = 9999;

 // WRK.Number 4.0 2 USR = CON.1111
 WRK.Number_4_0_2_USR = 1111;

 // WRK.Lot Number USR = CND.Not Entered
 WRK.Lot_Number_USR = *ZERO;

 // WRK.Location Level = CND.Not Entered
 WRK.Location_Level = *ZERO;

 // WRK.Location Code = CND.Default
 WRK.Location_Code = '1111';

 //?***** Change Log and comments
 DO;

 //?** FP1127 LJB 04/09/2009
 //?** Don't convert negative or zero quantities
 //?** FP1127 LJB 12/05/2008
 //?** Retrieve Chill Code for default location
 //?** Pass type code to CR function which will update the
 //?** Warehouse Control file as well
 ENDDO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Production Date is entered
 IF DB1.Production_Date <> *ZERO;

 EXECUTE FUNCTION(Rtv Item Info         RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1478188;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Description_Line_One);
 PARAMETER(LCL.UOM_Primary);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(LCL.Fresh_Chilling_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.ILL Avail Ship Date = DB1.Production Date + LCL.WLT Type Chill Time *DAYS
 LCL.ILL_Avail_Ship_Date = DATEINCR(DB1.Production_Date LCL.WLT_Type_Chill_Time 'DY'
 1111111 'NONE' 'N' 1);

 //?** Set availability status
 CASE;

 // IF LCL.ILL Avail Ship Date GT JOB.*Job date
 IF LCL.ILL_Avail_Ship_Date > JOB.*Job_date;

 // LCL.ILL Status = CND.Hold
 LCL.ILL_Status = 'H';

 //?** Set availability status
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ILL Status = CND.Available
 LCL.ILL_Status = 'A';

 ENDIF;

 //?** Lot number and location level need to be populated for TF
 //?** to use with Artesian. This is to prevent duplicates.
 //?** Increment lot number and location level for conversion
 // WRK.Lot Number USR = WRK.Lot Number USR + CON.1
 WRK.Lot_Number_USR = WRK.Lot_Number_USR + 1;

 //?** If lot number reaches zeros reset to 1
 CASE;

 // IF WRK.Lot Number USR is Not Entered
 IF WRK.Lot_Number_USR = *ZERO;

 // WRK.Lot Number USR = WRK.Lot Number USR + CON.1
 WRK.Lot_Number_USR = WRK.Lot_Number_USR + 1;

 // WRK.Number 4.0 2 USR = WRK.Number 4.0 2 USR + CON.1
 WRK.Number_4_0_2_USR = WRK.Number_4_0_2_USR + 1;

 // WRK.Location Level = WRK.Location Level + CON.1
 WRK.Location_Level = WRK.Location_Level + 1;

 // WRK.Location Code = WRK.Number 4.0 2 USR
 WRK.Location_Code = WRK.Number_4_0_2_USR;

 ENDIF;

 EXECUTE FUNCTION(TMP UPD Lot#/Loc#      RT) TYPE(RTVOBJ) FILE(PDL5CPP)          AC1926199;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(WRK.Lot_Number_USR);
 PARAMETER(WRK.Location_Code);
 PARAMETER(WRK.Location_Level);
 PARAMETER(DB1.Quantity_on_Hand_UOM1);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(DB1.Quantity_on_Hand_Weight);
 PARAMETER(LCL.ILL_Avail_Ship_Date);
 PARAMETER(LCL.ILL_Status);
 PARAMETER(DB1.Record_Status);
 PARAMETER(WRK.WLT_Type_Code);
 {
  //?USER: Processing if Data record not found

  //?** Don't convert negative or zero quantities       04/09/2009
  CASE;

  // IF PAR.ILL Item Qty On-Hand is GT Zero
  IF PAR.ILL_Item_Qty_On_Hand > *ZERO;

  //?** This CR creates whse loc fields as well as the record   FP1127
  EXECUTE FUNCTION(TMP CRT Lot#/Loc#      CR) TYPE(CRTOBJ) FILE(PDL5CPP)          AC1926453;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.Production_Date);
  PARAMETER(PAR.Lot_Number);
  PARAMETER(PAR.Location_Code);
  PARAMETER(PAR.Location_Level);
  PARAMETER(PAR.ILL_Item_Qty_On_Hand);
  PARAMETER(PAR.ILL_Unit_Weight);
  PARAMETER(*ZERO);
  PARAMETER(PAR.ILL_Item_Wgt_On_Hand);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.ILL_Avail_Ship_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(PAR.ILL_Status);
  PARAMETER(LCL.ILL_Unused_Sts_1);
  PARAMETER(LCL.ILL_Unused_Sts_2);
  PARAMETER(LCL.ILL_Unused_Sts_3);
  PARAMETER(*BLANK);
  PARAMETER(LCL.EDI_Status_1);
  PARAMETER(LCL.EDI_Status_2);
  PARAMETER(LCL.EDI_Status_3);
  PARAMETER(PAR.Record_Status);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(PAR.WLT_Type_Code);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

   //?USER: Processing after Data update

   // WRK.Location Aisle = SUBSTRING(PAR.Location Code,CON.1,CON.2)
   WRK.Location_Aisle = SUBSTRING(PAR.Location_Code:1:2);

   // WRK.Location Bay Alpha = SUBSTRING(PAR.Location Code,CON.3,CON.2)
   WRK.Location_Bay_Alpha = SUBSTRING(PAR.Location_Code:3:2);

   // WRK.Location Bay = CVTVAR(WRK.Location Bay Alpha)
   WRK.Location_Bay = CVTVAR(WRK.Location_Bay_Alpha);

   EXECUTE FUNCTION(Crt Whs Location      CR) TYPE(CRTOBJ) FILE(PDL2REP)           AC1505238;
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Location_Code);
   PARAMETER(WRK.Location_Aisle);
   PARAMETER(WRK.Location_Bay);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(PAR.WLT_Type_Code);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER('A');
   PARAMETER(JOB.*Job_time);
   PARAMETER(JOB.*USER);
   PARAMETER(JOB.*PROGRAM);
   PARAMETER(JOB.*Job_date);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Record Status = CND.Active
     PAR.Record_Status = 'A';

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   EXECUTE FUNCTION(Crt Item Lot/Loc Trns IF) TYPE(EXCINTFUN)                      AC1510270;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER('C');
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.ILL_Item_Qty_On_Hand);
   PARAMETER(PAR.ILL_Item_Wgt_On_Hand);
   PARAMETER(PAR.Lot_Number);
   PARAMETER(PAR.Location_Code);
   PARAMETER(PAR.Location_Level);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('P');
   PARAMETER(LCL.LTT_Unused_Sts_1);
   PARAMETER(LCL.LTT_Unused_Sts_2);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Next Seq #        RT) TYPE(RTVOBJ) FILE(PDL7CPP)           AC1510279;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.LLT_Transaction_Type);
    PARAMETER(PAR.LLT_Transaction_Date);
    PARAMETER(PAR.LLT_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.LLT Sequence # = CON.1
     PAR.LLT_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.LLT Sequence # = DB1.LLT Sequence # + CON.1
     PAR.LLT_Sequence_Number = DB1.LLT_Sequence_Number + 1;

     QUIT;

    }

    EXECUTE FUNCTION(Crt Item Lot/Loc Trns CR) TYPE(CRTOBJ) FILE(PDL7CPP)           AC1505285;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.LLT_Transaction_Type);
    PARAMETER(PAR.LLT_Transaction_Date);
    PARAMETER(PAR.LLT_Sequence_Number);
    PARAMETER(PAR.LLT_Production_Date);
    PARAMETER(PAR.LLT_Transaction_Qty);
    PARAMETER(PAR.LLT_Transaction_Wgt);
    PARAMETER(PAR.LLT_Lot_Number);
    PARAMETER(PAR.Location_Code);
    PARAMETER(PAR.LLT_Location_Level);
    PARAMETER(PAR.Transfer_Warehouse_Code);
    PARAMETER(PAR.LLT_Transfer_Lot_Number);
    PARAMETER(PAR.Transfer_Location_Code);
    PARAMETER(PAR.LLT_Transfer_Loc_Level);
    PARAMETER(PAR.Order_Number);
    PARAMETER(PAR.LLT_Status);
    PARAMETER(PAR.LTT_Unused_Sts_1);
    PARAMETER(PAR.LTT_Unused_Sts_2);
    PARAMETER(PAR.EDI_Status_1);
    PARAMETER(PAR.EDI_Status_2);
    PARAMETER(PAR.EDI_Status_3);
    PARAMETER(PAR.Record_Status);
    PARAMETER(PAR.Job_Time);
    PARAMETER(PAR.User_Id);
    PARAMETER(PAR.Job_Name);
    PARAMETER(PAR.Job_Date);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
     PARAMETER(DB1.Record_Status);
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Record Status = CND.Active
      PAR.Record_Status = 'A';

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*PROGRAM
      PAR.Job_Name = JOB.*PROGRAM;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

  }

  ENDIF;

 }

 ENDIF;

}


