// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKG2DFR
// ?Date: 14.08.2025 Time: 02:49:29
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?T8163 DN  04/05/17-Set Company Number.
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?T8163 DN  04/05/17-Get Live with M3 Flag.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('M3VEND');
PARAMETER(LCL.Live_with_M3_USR);

// PGM.*Scan limit = CND.No Max
PGM.*Scan_limit = 999999;

ENDIF;

//?R10690 JJH 06/08/17 - Get M3 Division #.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('M3HPEDIV');
PARAMETER(PAR.M3_Supplier_Division);

//?R17061 DN 05/04/21 - Get JDE 'E1LIVE' Flag.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('E1LIVE');
PARAMETER(LCL.JDE_Live_with_E1_USR);

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

//?T8163 DN  04/05/17-Set Toggle F8 Flag/Text.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?R17061 DN 5/04/21-Renamed 'Supplier' to 'Vendor'.
// PAR.Dsp Blank Vendor USR = CND.No
PAR.Dsp_Blank_Vendor_USR = 'N';

// CTL.Text 25 #1 Usr = CON.**ALL Vendor**
CTL.Text_25_#1_Usr = '**ALL Vendor**';

ENDIF;

ENDIF;

//?USER: Initialize subfile record from DBF record

// WRK.Country Code Usr = WRK.Blank USR
WRK.Country_Code_Usr = WRK.Blank_USR;

//?R17061 DN 05/04/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
CASE;

// IF LCL.JDE Live with E1 USR is Yes
IF LCL.JDE_Live_with_E1_USR = 'Y';

// CTL.JDE/M3 Prefix USR = CON.JDE
CTL.JDE_M3_Prefix_USR = 'JDE';

// RCD.Vendor Number USR = CON.*BLANK
RCD.Vendor_Number_USR = *BLANK;

//?Remove Leading Zero for JDE Vendor #.
CASE;

// IF RCD.TRK VND Address Number is Not zero
IF RCD.TRK_VND_Address_Number <> *ZERO;

// RCD.Vendor Number USR = CVTVAR(RCD.TRK VND Address Number)
RCD.Vendor_Number_USR = CVTVAR(RCD.TRK_VND_Address_Number);

// PAR.Vendor Number USR = RCD.Vendor Number USR
PAR.Vendor_Number_USR = RCD.Vendor_Number_USR;

// LCL.Count USR = CON.*ZERO
LCL.Count_USR = *ZERO;

// LCL.Text Usr 1 = CON.0
LCL.Text_Usr_1 = 0;

//?Substring in the Value Without the Leading Zeros.
// DOW LCL.Text Usr 1 is Zero
DOW LCL.Text_Usr_1 = '0';

// LCL.Count USR = LCL.Count USR + CON.1
LCL.Count_USR = LCL.Count_USR + 1;

// LCL.Text Usr 1 = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,CON.1)
LCL.Text_Usr_1 = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:1);

CASE;

// IF LCL.Text Usr 1 is Not Zero
IF LCL.Text_Usr_1 <> '0';

// LCL.For Length USR = CON.9 - LCL.Count USR
LCL.For_Length_USR = 9 - LCL.Count_USR;

// PAR.Vendor Number USR = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,LCL.For Length USR)
PAR.Vendor_Number_USR = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:LCL.For_Length_USR);

// RCD.Vendor Number USR = PAR.Vendor Number USR
RCD.Vendor_Number_USR = PAR.Vendor_Number_USR;

ENDIF;

ENDDO;

ENDIF;

//?R17061 DN 05/04/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.JDE/M3 Prefix USR = CON.M3
CTL.JDE_M3_Prefix_USR = 'M3';

// RCD.Vendor Number USR = RCD.TRK M3 Supplier Id
RCD.Vendor_Number_USR = RCD.TRK_M3_Supplier_Id;

ENDIF;

//?R17061 DN 05/04/21-Select By Vendor.
CASE;

// IF CTL.Vendor Number USR is Not Entered
IF CTL.Vendor_Number_USR = *BLANK;

//?R17061 DN 05/04/21-Select By Vendor.
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.Vendor Number USR NE RCD.Vendor Number USR
IF CTL.Vendor_Number_USR <> RCD.Vendor_Number_USR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?R17061 DN 05/04/21-Changed Logic for F8.
//?If F8 Pressed Then Select Blank/ALL Vendor.   R17061 DN 05/04/21
CASE;

// IF PAR.Dsp Blank Vendor USR is Yes
IF PAR.Dsp_Blank_Vendor_USR = 'Y';

// CTL.Vendor Number USR = CND.Not Entered
CTL.Vendor_Number_USR = *BLANK;

CASE;

// IF RCD.Vendor Number USR is Not Entered
IF RCD.Vendor_Number_USR = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?R10690 JJH 06/05/17 - Get Address info from Trucker Address
//?T8163 DN  04/05/17-Commented Out & Moved Below.
EXECUTE FUNCTION(Rtv Trucker Address   RT) TYPE(RTVOBJ) FILE(PWAFREP)           AB1335381;
PARAMETER(RCD.TRK_Trucker_Code);
PARAMETER(NLL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(RCD.Trucker_Address_1_USR);
PARAMETER(NLL.Address_2);
PARAMETER(NLL.Address_3);
PARAMETER(RCD.Trucker_City_USR);
PARAMETER(RCD.Trucker_State_USR);
PARAMETER(RCD.Trucker_Zip_10_USR);
PARAMETER(RCD.Area_Code);
PARAMETER(RCD.Telephone);
PARAMETER(NLL.Fax_Area_Code_#);
PARAMETER(NLL.Fax_Telephone);
PARAMETER(NLL.Fax_Attn_1);
PARAMETER(NLL.Fax_Area_Code_#_2);
PARAMETER(NLL.Fax_Telephone_2);
PARAMETER(NLL.Fax_Attn_2);
PARAMETER(NLL.Vendor_1099);
PARAMETER(NLL.Vendor_Tax_Id);
PARAMETER(NLL.Country_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// CTL.TRK Trucker Code = WRK.Blank USR
CTL.TRK_Trucker_Code = WRK.Blank_USR;

//?RMC 3/14/22 call pgm with jde address as output
// Call program Edt Trucker Addr/JDE  ER.
CALL PROGRAM(Edt Trucker Addr/JDE  ER) ('PWONE1R');
PARAMETER(CTL.TRK_Trucker_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?F8=Dsp Blank Vendor/ALL - T8163 DN  04/05/17
CASE;

// IF CTL.*CMD key is CF08
IF CTL.*CMD_key = '08';

//?New.                                          R17061 DN 5/04/21
CASE;

// IF PAR.Dsp Blank Vendor USR is No
IF PAR.Dsp_Blank_Vendor_USR = 'N';

// PAR.Dsp Blank Vendor USR = CND.Yes
PAR.Dsp_Blank_Vendor_USR = 'Y';

// CTL.Text 25 #1 Usr = CON.**Blank Vendor**
CTL.Text_25_#1_Usr = '**Blank Vendor**';

//?New.                                          R17061 DN 5/04/21
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Dsp Blank Vendor USR = CND.No
PAR.Dsp_Blank_Vendor_USR = 'N';

// CTL.Text 25 #1 Usr = CON.**ALL Vendor**
CTL.Text_25_#1_Usr = '**ALL Vendor**';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Trucker List');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt trucker list'
EXECUTE COMMAND(PRK0331);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?R10690 JJH 06/06/17 - Add Option
//?R17061 DN 05/04/21-Allow M3 Vendor Prompt Only if E1LIVE=N.
//?F4=Prompt on M3 Supp
CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Vendor Number USR
AND PGM.*Cursor_field = CTL.Vendor_Number_USR;

// AND LCL.JDE Live with E1 USR is No
AND LCL.JDE_Live_with_E1_USR = 'N';

// WRK.M3 Supplier Name = CON.*BLANK
WRK.M3_Supplier_Name = *BLANK;

//?T8163 DN  01/16/17 - Set M3 Supplier Group as Producer.
// LCL.M3 Supplier Group = CND.Producers
LCL.M3_Supplier_Group = 'ZHP';

// Call program Sel M3 Suplr Same Div/Grp.
CALL PROGRAM(Sel M3 Suplr Same Div/Grp) ('PLX1SRR');
PARAMETER(CTL.Vendor_Number_USR);
PARAMETER(WRK.M3_Supplier_Name);
PARAMETER(WRK.M3_Address_Line_1);
PARAMETER(WRK.M3_Address_Line_2);
PARAMETER(WRK.M3_Address_Line_3);
PARAMETER(WRK.M3_Address_Line_4);
PARAMETER(WRK.M3_City);
PARAMETER(WRK.M3_State);
PARAMETER(WRK.M3_Postal_Code);
PARAMETER(WRK.M3_Telephone_No_1);
PARAMETER(WRK.M3_Telephone_No_2);
PARAMETER(WRK.M3_Fax_Telephone);
PARAMETER(WRK.M3_Supplier_Tax_ID);
PARAMETER(WRK.M3_Country_Code);
PARAMETER(LCL.M3_Supplier_Group);
PARAMETER(PAR.M3_Supplier_Division);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?R17061 DN 05/04/21-Reload When Vendor Changes.
CASE;

// IF CTL.Vendor Number USR NE LCL.Vendor Number USR
IF CTL.Vendor_Number_USR <> LCL.Vendor_Number_USR;

// LCL.Vendor Number USR = CTL.Vendor Number USR
LCL.Vendor_Number_USR = CTL.Vendor_Number_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?R17061 DN 05/04/21-Changed Opt 2 to Check E1LIVE Flag.
//?2=Revise                                      R17061 DN 05/04/21
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

//?If E1LIVE = Y, Then Call PWMNE1R to Display JDE E1 Info.
CASE;

// IF LCL.JDE Live with E1 USR is Yes
IF LCL.JDE_Live_with_E1_USR = 'Y';

// Call program Edt Trucker Addr/JDE  ER.
CALL PROGRAM(Edt Trucker Addr/JDE  ER) ('PWONE1R');
PARAMETER(RCD.TRK_Trucker_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

//?If E1LIVE = Y, Then Call PWMNE1R to Display JDE E1 Info.
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Edt Trucker           E1.
CALL PROGRAM(Edt Trucker           E1) ('PKG1E1R');
PARAMETER(RCD.TRK_Trucker_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?Delete Request
CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Chk Trucker           RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1161659;
PARAMETER(RCD.TRK_Trucker_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = 999;

 // Send error message - 'A Buy Order Load is using the record. Delete is invalid.'
 ERROR(PRK0528);

 QUIT;

}


EXECUTE FUNCTION(Chk Trucker           RT) TYPE(RTVOBJ) FILE(PKBKCPP)           AB1161662;
PARAMETER(RCD.TRK_Trucker_Code);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.Record Found
 PGM.*Return_code = 999;

 // Send error message - 'Hog Voucher Header is using the record. Delete is invalid.'
 ERROR(PRK0524);

 QUIT;

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?Print
CASE;

// IF RCD.*SFLSEL is *Print request
IF RCD.*SFLSEL = '6'/'6';

//?Print Options Prompt
CASE;

// IF WRK.Display Print Prompt  Usr is Prompt is to be displayed
IF WRK.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Trucker');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Display_Print_Prompt_Usr = 'N';

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Trucker'
EXECUTE COMMAND(PRK0332);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.TRK_Trucker_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Dlt Trucker           DO) TYPE(DLTOBJ) FILE(PKBAREP)           AB1104280;
PARAMETER(RCD.TRK_Trucker_Code);

//?R10690 JJH 06/05/17 - Delete Trucker Address
EXECUTE FUNCTION(Dlt Trucker Address   DR) TYPE(DLTOBJ) FILE(PWAFREP)           AB1335151;
PARAMETER(RCD.TRK_Trucker_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

