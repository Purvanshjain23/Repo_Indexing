// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDGBPFR
// ?Date: 14.08.2025 Time: 12:03:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

CASE;

// IF DB1.Record Status NE PAR.Record Status
IF DB1.Record_Status <> PAR.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PAR.USR Salesperson Code is entered
IF PAR.USR_Salesperson_Code <> *BLANK;

EXECUTE FUNCTION(RTV Sales Route        RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1371227;
PARAMETER(PAR.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(WRK.Sales_Route_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Sales Route Code NE PAR.USR Salesperson Code
IF WRK.Sales_Route_Code <> PAR.USR_Salesperson_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

CASE;

// IF 1PG.Record Status is Valid Entries
IF X1PG_Record_Status = 'A'/'D'/'I';

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Record Status
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Record_Status);

// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Condition Desc. 1  USR = CON.*ALL
X1PG_Condition_Desc_1_USR = *ALL;

ENDIF;

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.USR Salesperson Code is entered
IF PAR.USR_Salesperson_Code <> *BLANK;

// 1PG.USR Salesperson Code = PAR.USR Salesperson Code
X1PG_USR_Salesperson_Code = PAR.USR_Salesperson_Code;

EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
PARAMETER(X1PG_USR_Salesperson_Code);
PARAMETER(X1PG_Sales_Route_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.USR Salesperson Code = CON.*BLANK
X1PG_USR_Salesperson_Code = *BLANK;

// 1PG.Sales Route Description = CON.*All
X1PG_Sales_Route_Description = *All;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Customer Name header format

// SUPPRESSED PRINT Ship To Customer header format

//?USER: On print of detail format

//?Flag inactive/purged customers
CASE;

// IF DB1.Record Status is Deleted & Inactive
IF DB1.Record_Status = 'D'/'I';

// CUR.Status Description = CON.**INACTIVE**
CUR.Status_Description = '**INACTIVE**';

//?Flag inactive/purged customers
// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Status Description = CON.*BLANK
CUR.Status_Description = *BLANK;

ENDIF;

EXECUTE FUNCTION(RTV Special Instructs  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1437973;
PARAMETER(PAR.Company_Number);
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Special_Instructions_2);
PARAMETER(CUR.Special_Instructions);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF CUR.Special Instructions is Equal to Blank
IF CUR.Special_Instructions = *BLANK;

// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.USR Display field = CND.yes
PAR.USR_Display_field = 'Y';

ENDIF;

EXECUTE FUNCTION(Rtv All Values FX/EM+ RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1743374;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(LCL.Internet_Password);
PARAMETER(LCL.Email_Address);
PARAMETER(LCL.Email_User_ID);
PARAMETER(LCL.EDI_Trading_Partner_No);
PARAMETER(LCL.EDI_Cust_Duns_Number);
PARAMETER(LCL.EDI_Warehouse_Store_No);
PARAMETER(LCL.State_Tax_ID);
PARAMETER(LCL.Cust_Shipping_Temp_C_F);
PARAMETER(LCL.One_Invoice_Per_PO);
PARAMETER(LCL.EDI_Advanced_Ship_Notice);
PARAMETER(LCL.Customer_G_L_Vendor_Num);
PARAMETER(NLL.Air_Freight_Orders);
PARAMETER(CUR.Regional_Mgr_Fax_Email);
PARAMETER(NLL.Employee_Co_Packer_Sale);
PARAMETER(LCL.Customer_TF_Exempt_Code);
PARAMETER(NLL.Customer_Watch_Flag);
PARAMETER(LCL.Customer_Sales_Region);
PARAMETER(NLL.Customer_Market_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Ship To Customer totals format

// SUPPRESSED PRINT Customer Name totals format

