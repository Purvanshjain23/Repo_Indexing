// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLR1XFR
// ?Date: 14.08.2025 Time: 02:55:18
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification log
DO;

//?MODIFICATIONS
//?batch job.This is a fix for existing defect.
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

EXECUTE FUNCTION(Rtv/Chg TtoHdr RecOnly) TYPE(RTVOBJ) FILE(PKA1CPP)             AB1308463;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
{
 //?USER: Process Data record

 // WRK.Head Total (5.0) USR = CON.*ZERO
 WRK.Head_Total_5_0_USR = *ZERO;

 EXECUTE FUNCTION(Rtv TattDtl HdRecOnly RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1308470;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.Head_Total_5_0_USR);
 {
  //?USER: Process Data record

  // PAR.Head Total (5.0) USR = PAR.Head Total (5.0) USR + DB1.TD Pen Head
  PAR.Head_Total_5_0_USR = PAR.Head_Total_5_0_USR + DB1.TD_Pen_Head;

 }

 // WRK.TH Kill Balancing Sts = DB1.TH Kill Balancing Sts
 WRK.TH_Kill_Balancing_Sts = DB1.TH_Kill_Balancing_Sts;

 CASE;

 // IF WRK.Head Total (5.0) USR NE DB1.TH Head Received
 IF WRK.Head_Total_5_0_USR <> DB1.TH_Head_Received;

 CASE;

 // IF DB1.TH Kill Balancing Sts is Balance
 IF DB1.TH_Kill_Balancing_Sts = 'B';

 // AND DB1.THP Process Code is NE Payment
 AND DB1.THP_Process_Code <> 'PAYMNT';

 //?make error so that this tattoo must be rebalanced
 // WRK.TH Kill Balancing Sts = CND.Error
 WRK.TH_Kill_Balancing_Sts = 'E';

 ENDIF;

 CASE;

 // IF DB1.THP Process Code is NE Payment
 IF DB1.THP_Process_Code <> 'PAYMNT';

 EXECUTE FUNCTION(Chg Hdr Rec           CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1308471;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.Head_Total_5_0_USR);
 PARAMETER(WRK.TH_Kill_Balancing_Sts);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // WRK.THC Comment = CON.*BLANK
 WRK.THC_Comment = *BLANK;

 // Retrieve message - 'Head Received Chg From'
 WRK.THC_Comment = RTVMSG(PRK1273);

 // WRK.Text 5                USR = CVTVAR(DB1.TH Head Received)
 WRK.Text_5_USR = CVTVAR(DB1.TH_Head_Received);

 // WRK.Text 5   2            USR = CVTVAR(WRK.Head Total (5.0) USR)
 WRK.Text_5_2_USR = CVTVAR(WRK.Head_Total_5_0_USR);

 // WRK.THC Comment = CONCAT(WRK.THC Comment,WRK.Text 5                USR,CON.1)
 WRK.THC_Comment = WRK.THC_Comment + WRK.Text_5_USR (1);

 // WRK.THC Comment = CONCAT(WRK.THC Comment,CON.TO:,CON.1)
 WRK.THC_Comment = WRK.THC_Comment + 'TO:' (1);

 // WRK.THC Comment = CONCAT(WRK.THC Comment,WRK.Text 5   2            USR,CON.1)
 WRK.THC_Comment = WRK.THC_Comment + WRK.Text_5_2_USR (1);

 EXECUTE FUNCTION(Crt Tattoo Hdr Cmnt   IF) TYPE(EXCINTFUN)                      AB1115260;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.THC_Comment_Line);
 PARAMETER(WRK.THC_Comment);
 PARAMETER('R');
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Next Line Nbr     RT) TYPE(RTVOBJ) FILE(PKA4CPP)           AB1115261;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.THC_Comment_Line);
  {
   //?USER: Processing if Data record not found

   // PAR.THC Comment Line = CON.1
   PAR.THC_Comment_Line = 1;

   //?USER: Process Data record

   // PAR.THC Comment Line = DB1.THC Comment Line + CON.1
   PAR.THC_Comment_Line = DB1.THC_Comment_Line + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt Tattoo Hdr Cmnt   CR) TYPE(CRTOBJ) FILE(PKA4CPP)           AB1113201;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.THC_Comment_Line);
  PARAMETER(PAR.THC_Comment);
  PARAMETER(PAR.THC_Comment_Type);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 ENDIF;

 ENDIF;

}


