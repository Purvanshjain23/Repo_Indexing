// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUOYXFR
// ?Date: 14.08.2025 Time: 03:51:00
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Get Yesterday's Date.
// LCL.From Date             USR = JOB.*Job date + CON.-1 *DAYS
LCL.From_Date_USR = DATEINCR(JOB.*Job_date '-1' 'DY' 1111111 'NONE' 'N' 1);

// Call program CNV cyymmdd to mm/dd/yyXF.
CALL PROGRAM(CNV cyymmdd to mm/dd/yyXF) ('PUJLXFR');
PARAMETER(LCL.From_Date_USR);
PARAMETER(PAR.From_Date_MM_DD_YY_USR);

//?Get 5 Days Out From todays's Date.
// LCL.Thru Date             USR = JOB.*Job date + CON.5 *DAYS
LCL.Thru_Date_USR = DATEINCR(JOB.*Job_date 5 'DY' 1111111 'NONE' 'N' 1);

// Call program CNV cyymmdd to mm/dd/yyXF.
CALL PROGRAM(CNV cyymmdd to mm/dd/yyXF) ('PUJLXFR');
PARAMETER(LCL.Thru_Date_USR);
PARAMETER(PAR.Thru_Date_MM_DD_YY_USR);

EXECUTE FUNCTION(Exc Bld 856 ASN Alert RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2178334;
PARAMETER(LCL.From_Date_USR);
PARAMETER(LCL.Thru_Date_USR);
{
 //?USER: Initialize routine

 //?104371: Logic added: "Buyer Catalog Number" (CB) as CIR Resource No
 //?012523  Type DOES NOT create a rcd in PUA1CPP
 //?        (Order Detail) - Exc Bld 856 ASN Alert RT
 // LCL.Thru Date             USR = PAR.Scheduled Ship Date + CON.5 *DAYS
 LCL.Thru_Date_USR = DATEINCR(PAR.Scheduled_Ship_Date 5 'DY' 1111111 'NONE' 'N' 1);

 //?USER: Process Data record

 //?Create Orders Whose SSD is Within the 5 Days & Not Cancelled.
 CASE;

 // IF DB1.Scheduled Ship Date GE PAR.Scheduled Ship Date
 IF DB1.Scheduled_Ship_Date >= PAR.Scheduled_Ship_Date;

 // AND DB1.Scheduled Ship Date LE LCL.Thru Date             USR
 AND DB1.Scheduled_Ship_Date <= LCL.Thru_Date_USR;

 CASE;

 // IF DB1.Header Status is Not cancelled
 IF DB1.Header_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 EXECUTE FUNCTION(Val Cust Setup 4/856 V2IF) TYPE(EXCINTFUN)                     AC2178250;
 PARAMETER(LCL.Create_EDI_ASN_856_V2_USR);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(LCL.EDI_Trading_Partner_No);
 PARAMETER(NLL.Country_Code);
 PARAMETER(NLL.Warehouse_Code);
 PARAMETER(NLL.Warehouse_Location);
 PARAMETER(*BLANK);
 {
  //?Execute internal function

  //?VALIDATIONS: Is Bill To Customer Setup for EDI 856 ASN V2?
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  EXECUTE FUNCTION(RTV EDI ASN 856 Info  RT) TYPE(RTVOBJ) FILE(PNGQREP)           AC2177034;
  PARAMETER(PAR.Bill_to_Customer);
  PARAMETER('ADVSN');
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(LCL.EDI_Detailed_ASN_856_Rqd);
  PARAMETER(LCL.Record_Status);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
  CASE;

  //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Bill To Customer Must Be Active & Setup for EDI 856.
  CASE;

  // IF LCL.EDI Detailed ASN 856 Rqd is Yes
  IF LCL.EDI_Detailed_ASN_856_Rqd = 'Y';

  // AND LCL.Record Status is Active
  AND LCL.Record_Status = 'A';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  ENDIF;

  //?WI609_2 Check Internal or External Warehouse Qualifies for 856 ASN.
  CASE;

  // IF PAR.Create EDI ASN 856 V2 USR is Yes
  IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  EXECUTE FUNCTION(RTV 1st Whse/Country   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426676;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(1);
  PARAMETER(1);
  PARAMETER(LCL.Warehouse_Code);
  PARAMETER(PAR.Country_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  EXECUTE FUNCTION(Rtv EDI 856 ASN Info RT) TYPE(RTVOBJ) FILE(CAADREP)            AC2234972;
  PARAMETER(LCL.Warehouse_Code);
  PARAMETER(LCL.Warehouse_Location);
  PARAMETER(LCL.WHS_Live_with_Carlisle);
  PARAMETER(NLL.WHS_PFS_Interface);
  PARAMETER(LCL.Crt_856_ASN_for_3PL_Whse);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Warehouse Location = LCL.Warehouse Location
  PAR.Warehouse_Location = LCL.Warehouse_Location;

  CASE;

  // IF LCL.Warehouse Location is Internal (Plant)
  IF LCL.Warehouse_Location = 'I';

  // AND LCL.WHS Live w/Carlisle is Yes
  AND LCL.WHS_Live_with_Carlisle = 'Y';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  //?WI609_2 JM 10/08/24-Allow External 3PL Warehouses to Receive EDI 856 ASN.
  CASE;

  // IF LCL.Warehouse Location is External
  IF LCL.Warehouse_Location = 'E';

  CASE;

  // IF LCL.Crt 856 ASN for 3PL Whse is Yes
  IF LCL.Crt_856_ASN_for_3PL_Whse = 'Y';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  //?WI609_2 JM 10/08/24-Check EDI Manual PO.
  CASE;

  // IF PAR.Create EDI ASN 856 V2 USR is Yes
  IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // Call program Rtv EDI Manual PO Sts XF.
  CALL PROGRAM(Rtv EDI Manual PO Sts XF) ('PUTBXFR');
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER('ADVSN');
  PARAMETER(LCL.Send_EDI_Document_Y_N);

  //?If Send EDI Documents = N, set Create EDI ASN 856 V2 USR = N
  CASE;

  // IF LCL.Send EDI Document Y/N is No
  IF LCL.Send_EDI_Document_Y_N = 'N';

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 //?Bill To Customer is Setup for EDI 856 ASN V2?
 CASE;

 // IF LCL.Create EDI ASN 856 V2 USR is Yes
 IF LCL.Create_EDI_ASN_856_V2_USR = 'Y';

 EXECUTE FUNCTION(Exc Bld 856 ASN Alert RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC2178341;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.EDI_Trading_Partner_No);
 {
  //?USER: Initialize routine

  //?RMC WHD 80226 7/01/21 If PI not found then check for SK and IN.
  //?    If ALL 3 not found then create rcd for alert
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Resource No & Type RT) TYPE(RTVOBJ) FILE(POBIREP)          AC2177756;
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(DB1.Item_Code);
  PARAMETER(NLL.CIR_Resource_No);
  PARAMETER(LCL.CIR_Resource_No_Type);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI File.
  CASE;

  // IF LCL.CIR Resource No Type is Purchaser Item Code
  IF LCL.CIR_Resource_No_Type = 'PI';

  //?If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI File.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Note: Trading Partner derived from BTC# & not STC#.
  EXECUTE FUNCTION(Rtv Resource No       RT) TYPE(RTVOBJ) FILE(PUBQREP)           AC2177740;
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(DB1.Item_Code);
  PARAMETER('PI');
  PARAMETER(NLL.CIR_Resource_No);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?If Not Found, check for SKU, then check for IN
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?If Not Found, check for SKU, then check for IN
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv Resource No       RT) TYPE(RTVOBJ) FILE(PUBQREP)           AC2177740;
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(DB1.Item_Code);
  PARAMETER('SK');
  PARAMETER(NLL.CIR_Resource_No);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv Resource No       RT) TYPE(RTVOBJ) FILE(PUBQREP)           AC2177740;
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(DB1.Item_Code);
  PARAMETER('IN');
  PARAMETER(NLL.CIR_Resource_No);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv Resource No       RT) TYPE(RTVOBJ) FILE(PUBQREP)           AC2177740;
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(DB1.Item_Code);
  PARAMETER('CB');
  PARAMETER(NLL.CIR_Resource_No);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  ENDIF;

  ENDIF;

  //?If None Found, Create EDI 856 Alert Record.
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?If None Found, Create EDI 856 Alert Record.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(CRT WF Whs StckTxf Dif CR) TYPE(CRTOBJ) FILE(PUA1CPP)          AC2144368;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Item_Code);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(*BLANK);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Order_Desc_Line_One);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Weight_Ordered);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Quantity_Ordered);
  PARAMETER(*ZERO);
  PARAMETER('P');
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Bill_to_Customer);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  ENDIF;

  ENDIF;

 }

 ENDIF;

 ENDIF;

 //?Create Orders Whose SSD is Within the 5 Days & Not Cancelled.
 // IF *OTHERWISE
 IF *OTHERWISE;

 QUIT;

 ENDIF;

}


