// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMGPPFR
// ?Date: 14.08.2025 Time: 12:05:33
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// LCL.USR Display 1 = CND.No
LCL.USR_Display_1 = 'N';

//?***** Change log and comments
//?** 03/16/2010 slm fp1309
//?** Use the number of days instead of age code
//?** 03/31/2009 LJB E00735
//?** Recompile due to change in CLC Age Code IF
//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

EXECUTE FUNCTION(Warehouse Desc DRV) TYPE(DRVFLD)                               AC1532477;
PARAMETER(TOP_Warehouse_Desc_DRV);
PARAMETER(TOP_Warehouse_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Warehouse_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Warehouse Description = DB1.Warehouse Description
  PAR.Warehouse_Description = DB1.Warehouse_Description;

 }

}


EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(TOP_Company_Name_DRV);
PARAMETER(TOP_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

// SUPPRESSED PRINT Warehouse Code header format

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Production Date header format

//?USER: On print of detail format

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

// Call program CLC Age Code #ofDays  XF.
CALL PROGRAM(CLC Age Code #ofDays  XF) ('PNO6XFR');
PARAMETER(DB1.Production_Date);
PARAMETER(DB1.Warehouse_Code);
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Item_Code);
PARAMETER(CUR.Number_of_Days_to_Age);

CASE;

// IF CUR.Number of Days to Age is 5 day to 121 days & over
IF CUR.Number_of_Days_to_Age >= 5;
AND CUR.Number_of_Days_to_Age <= 9999;

EXECUTE FUNCTION(Rtv Inv Allocated-Dy  RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1818782;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Item_Code);
PARAMETER(DB1.Warehouse_Code);
PARAMETER(DB1.Production_Date);
PARAMETER(LCL.OD_Quantity_Inv_Sched);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?DOC: 05/03/07 Change Log
 DO;

 //?05/03/07 New RTV to see if aged product is allocated to orders   FP1090
 //?05/04/07 If order is shipped, dont add to par                   FP1090
 ENDDO;

 EXECUTE FUNCTION(RTV Last Event Code    RT) TYPE(RTVOBJ) FILE(OPEYCPP)          AC1393013;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Event_Number);
 PARAMETER(LCL.Event_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Event Code is GE than Shipped
 IF LCL.Event_Code >= '04';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.OD Quantity Inv Sched = PAR.OD Quantity Inv Sched + DB1.OD Quantity Inv Sched
 PAR.OD_Quantity_Inv_Sched = PAR.OD_Quantity_Inv_Sched + DB1.OD_Quantity_Inv_Sched;

 ENDIF;

}


//?Aged qty thats not usable
// Compute:Aged qty not used
CUR.Not_Used_Qty = DB1.Quantity_on_Hand_UOM1 - LCL.OD_Quantity_Inv_Sched;

CASE;

// IF CUR.Not Used Qty is Greater than Zero
IF CUR.Not_Used_Qty > *ZERO;

// CUR.Qty On-Hand USR = DB1.Quantity on Hand - U/M1
CUR.Qty_On_Hand_USR = DB1.Quantity_on_Hand_UOM1;

EXECUTE FUNCTION(Item Description DRV) TYPE(DRVFLD)                             AC1633414;
PARAMETER(CUR.Item_Description_DRV);
PARAMETER(CUR.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Description   RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1325690;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Description_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// PGM.*Print format = CND.Print format
PGM.*Print_format = 'Y';

CASE;

// IF CUR.Item Code NE LCL.Item Code
IF CUR.Item_Code <> LCL.Item_Code;

// LCL.USR Display 1 = CND.Yes
LCL.USR_Display_1 = 'Y';

// LCL.Item Code = CUR.Item Code
LCL.Item_Code = CUR.Item_Code;

ENDIF;

ENDIF;

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Production Date totals format

CASE;

IF NEW Item_Code;
CASE;

// IF LCL.USR Display 1 is Yes
IF LCL.USR_Display_1 = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

// Print Item Code totals format
PRINT Item Code totals format;

// LCL.USR Display 1 = CND.No
LCL.USR_Display_1 = 'N';

ENDIF;

// SUPPRESSED PRINT Warehouse Code totals format

// SUPPRESSED PRINT Accounting Company Number totals format

