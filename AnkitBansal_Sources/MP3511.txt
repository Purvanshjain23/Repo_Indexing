      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT:  PORK DIVISION
      * SYSTEM:       AS/400
      * PROGRAM:      MP3511
      * DESCRIPTION:  MP2: Build Workfile for List of Overridden Items
      * PROGRAMMER:   LeAnne Ramsey
      * DATE:         10/20/06
      *
      *
      * FUNCION:     This program is a clone of MP351. The existing MP351 is driven by
      *              the Invoice Header. We have to drive our logic in this program by
      *              the workfile in the "post invoice" function.
      *
      *              The existing programs/logic have been running since 2002. In October
      *              2006 Jodi Ware requested that we generate the "Overridden Items
      *              Listing' for her during the 'edit' runs of the Invoice Post
      *              function. We could not use MP351 since it extracts data based on
      *              JDE Batch Number---which we do not have in an 'edit' run.
      *              So, we cloned/tweaked the existing programs so we could use the
      *              same print program/print workfile---we just use this 'cloned'
      *              program to build the data in the print workfile.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/29/11  Barb Gutierrez
      *           Increased qty and rate in database.  Recompile only.  E001398.
      *
      * 03/11/14  LeAnne Ramsey (E2992)
      *           Added logic to move new Accounting Company from workfile
      *           MPP304 to workfile MPP351.
      *
      * 03/26/19  Brad Baden  (E14631)
      *           Recompile only due to field size changes in database.
      *
      * 05/24/21  Danny Nguyen   (S17068)
      *           DBFC on MPP103 file. Unit Cost Per Item 'PDITEMRT' field length changed
      *           from 9.4 to 11.4.
      *           DBFC on MPP105 file. Applied Amount 'IDAPAM' field length changed from
      *           9.2 to 11.2.
      *           DBFC on MPP351 files: The following field lengths changed from 9.2 to 11.2:
      *             Unit Cost Per Item 'W1ITEMRT'.
      *             Applied Amount 'W1APAM'.
      *             Difference Amount 'W1DIFFAM'.
      *           Changed work field 'wkapam' length from 9.2 to 11.2.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fmpp102    if   e           k disk
      *  MP2: Purchase order header
      *
      *
     Fmpp103    if   e           k disk
      *  MP2: Purchase order detail
      *
      *
     Fmpp105    if   e           k disk
      *  MP2: Invoice detail
      *  (records selected by open query)
      *
      *
     Fmpp304    if   e           k disk
      *  MP2: Workfile of invoices to post to JDE
      *
      *
     Fmpp351    o    e           k disk
      *  MP2: Workfile for list of overridden items
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
     D procfl          s              1     inz('Y')
      *
      * Workfields
      *
17068D** wkapam          s                   like(w1apam)
17068D wkapam          s             11  2
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read each record in the workfile of Invoices. Process the records with
      * a type of I=Invoice. The workfile will only have records for a single
      * Accounting Company on each run...so, we don't have to SETLL or READE.
      *
     C     *loval        setll     mpp304
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      mpp304                                 90
     C                   if        *in90 = *off and                             If not EOF
     C                             mjrtcd = 'I'
      *
      * Retrieve the vendor info on the associated purchase order header record.
      * Then, write workfile records for each 'overridden' invoice detail
      * record that you find.
      *
     C     mjposn        chain     mpp102                             92
     C                   if        *in92 = *off                                 If hit
      *
     C                   exsr      $detail
      *
     C                   endif                                                  If hit
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        LR
      /eject
      *---------------------------------------------------------------
      * Process Invoice Detail records looking for 'overridden' ones
      *---------------------------------------------------------------
      *
     C     $detail       begsr
      *
      * Clear record format
      *
     C                   clear                   w1rec
      *
     C                   move      phpono        w1pono
     C                   z-add     phjdvnno      w1jdvnno
     C                   move      phjdvnnm      w1jdvnnm
      *
     C                   z-add     mjacono       w1acono
     C                   z-add     mjposn        w1posn
     C                   move      mjinno        w1inno
      *
      * Read each 'overridden' record...records selected by open query in CL.
      *
     C     key01         setll     mpp105
      *
     C                   dou       *in91 = *on                                  Do detail
     C     key01         reade     mpp105                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   z-add     idapam        w1apam
     C                   z-add     idinqt        w1inqt
     C                   move      idcom         w1com
      *
      *
      * Retrieve data from the P.O. Detail file
      *
     C     key02         chain     mpp103                             92
     C                   if        *in92 = *off                                 If found
     C                   move(p)   pditemno      w1itemno
     C                   z-add     pditemrt      w1itemrt
     C                   move(p)   pdmcu         w1mcu
     C                   move(p)   pdobj         w1obj
     C                   move(p)   pdsub         w1sub
     C                   else
     C                   move      *blank        w1itemno
     C                   z-add     0             w1itemrt
     C                   move      *blank        w1mcu
     C                   move      *blank        w1obj
     C                   move      *blank        w1sub
     C                   endif                                                  If found
      *
      * Calculate the difference between a) the applied amount and
      * b) the calculated amount of cost X quantity
      *
      *
     C     w1itemrt      mult(h)   w1inqt        wkapam
     C     wkapam        sub       w1apam        w1diffam
      *
     C                   write     w1rec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do detail
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    mjposn
     C                   kfld                    mjinno
      *
      *
     C     key02         klist
     C                   kfld                    idposn
     C                   kfld                    idrcno
     C                   kfld                    idserno
      *
     C                   endsr
      /eject
