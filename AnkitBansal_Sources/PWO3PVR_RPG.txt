     H/TITLE Pmt HeldOver Warning  PV  Prompt & validate record
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Prompt & validate record
     H* Object type   : *PGM
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISJMIST
     H* Date          : 08/07/25  Time  : 03:48:36
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPWO3PVR#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Pmt HeldOver Warning  PV  Prompt & validate record
      *
      * Set wdw location allowed?
     D YSL             S              1     DIM(1)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S             63
     D  WP0002         S             63
     D  WP0003         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YWLCTP         S              1
     D  YWRTFN         S             10
     D  YWWDWD         S              3  0
     D  YWWDDP         S              3  0
     D  YWWDCR         S              5
     D  YWWDRW         S              3  0
     D  YWWDCL         S              3  0
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  YWPNNO         S              1  0
     D  W0WASM         S              1  0
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  YWPORW         S              3  0
     D  YWPOC1         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  W0INVL         S             25
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZWORK          S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * I :  Text 63 USR
     D  P1I0T1                 1     63
     D P2PARM          DS
      * I :  Text 63 USR 2
     D  P2I3T1                 1     63
     D P3PARM          DS
      * O :  Confirm               USR
     D  P3MMST                 1      1
     D                 DS
     D  ZAMSDA                 1    132
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1I0T1        PARM                    WP0001                         Text 63 USR
     C     P2I3T1        PARM                    WP0002                         Text 63 USR 2
     C                   PARM      P3MMST        WP0003                         Confirm
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Conduct screen conversation
     C                   DO        *HIVAL
      * Start new transaction
     C                   MOVEL     'Y'           W0TRN
      * Process current transaction
      * Display screen
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Reset screen fields
     C   30              CAS                     MALDSC
      * Reposition window
     C   26              CAS                     ZRRPWD
      * Process screen input
     C                   CAS                     DAPRSC
     C                   END
      *
     C                   END
      *
     C                   END
      *****************************************************************
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Enable PUTOVR
     C                   SETON                                        86
     C                   Z-ADD     1             YWPNNO                         Panel number
     C                   MOVEL     'S'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
     C                   Z-ADD     1             W0WASM
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPRSC        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate screen input
     C                   EXSR      DBVLSC
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * USER: User defined action
     C                   MOVEL     #DMMST        P3MMST                         Confirm
      * Exit program
     C                   EXSR      ZXEXPG
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBVLSC        BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Confirm               USR
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Confirm               USR
     C                   IF        '#DMMST' = YPMTFD
     C                   MOVEL     #DMMST        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHMMST
     C                   SELECT
     C                   WHEN      W0INVL = 'Y'                                 Y
     C                   Z-ADD     1             ZHMMST
     C                   WHEN      W0INVL = 'N'                                 N
     C                   Z-ADD     2             ZHMMST
     C                   ENDSL
     C                   EXFMT     ZGMMST
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHMMST = 1
     C                   MOVEL     'Y'           W0INVL                         Y
     C                   WHEN      ZHMMST = 2
     C                   MOVEL     'N'           W0INVL                         N
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #DMMST
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Bypass ref file checks if error already detected
     C   99              GOTO      DBEXIT
      * Confirm               USR required
     C                   IF        #DMMST = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   MALDSC        BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                   EVAL      #DIXT1 = ' '                                 @Text 51
     C                   EVAL      #DOBTX = ' '                                 Text descriptio
     C                   EVAL      #DA2TX = ' '                                 BOC Comment
     C                   EVAL      #DF3T1 = ' '                                 @Text 55
     C                   EVAL      #DEFT1 = ' '                                 Text Descriptio
     C                   EVAL      #DMFST = ' '                                 Usr Display 1
     C                   EVAL      #1ACVN = ' '                                 PRT Printer Dev
     C                   Z-ADD     *ZERO         #1AKNB                         PRT Copies
     C                   EVAL      #1AKST = ' '                                 PRT Hold Output
     C                   EVAL      #1ALST = ' '                                 PRT Night Queue
     C                   EVAL      #1AMST = ' '                                 PRT Save Output
     C                   EVAL      #1GIST = ' '                                 PRT Condense fo
     C                   EVAL      #DI0T1 = ' '                                 Text 63 USR
     C                   EVAL      #DI3T1 = ' '                                 Text 63 USR 2
     C                   EVAL      #DMMST = ' '                                 Confirm
      * USER: Load screen
     C                   MOVEL     P1I0T1        #DI0T1                         Text 63 USR
     C                   MOVEL     P2I3T1        #DI3T1                         Text 63 USR 2
     C                   MOVEL     'N'           #DMMST                         Confirm
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * S034163 JM 08/05/25 - Include next business date in warning messa
      *                     - Display tattoo number if it is new Pen.
      * S029664 JM 04/30/25 - Fix Held Over logic, It will display warnin
      *                     - message if New Pen has Heldover.
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   YKDDW1        BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *
      * Calculate window location for DDL - Confirm               USR
      * Window width
     C                   Z-ADD     8             YWWDWD
      * Window depth
     C                   Z-ADD     2             YWWDDP
      * Window reference corner
     C                   MOVEL     '*TL  '       YWWDCR
      * Window start row
     C                   Z-ADD     ##WSR         YWWDRW
     C                   ADD       7             YWWDRW
      * Window start column
     C                   Z-ADD     ##WSC         YWWDCL
     C                   ADD       15            YWWDCL
      * Retrieve window location
     C                   EXSR      ZURTLC
      * Window start row
     C                   Z-ADD     YWWDRW        ZG01RW
      * Window start column
     C                   Z-ADD     YWWDCL        ZG01CL
      *================================================================
     CSR   YKEXT1        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ##WSR         MULT      256           ZWORK
     C                   ADD       ##WSC         ZWORK
     C                   SUB       ZWORK         ZINPOS
     C                   SUB       1             ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
      *
      * Calculate window offset
     C     007           ADD       ##WSR         YWPORW
     C     014           ADD       ##WSC         YWPOC1
     C                   ADD       1             YWPOC1
     C                   IF        ZHCSRW = YWPORW AND
     C                             ZHCSCL = YWPOC1 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#DMMST'      YPMTFD                         Confirm
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
     C     ZHCSRW        SUB       ##WSR         YWPORW
     C     ZHCSCL        SUB       ##WSC         YWPOC1
     C                   SUB       1             YWPOC1
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      YWPORW        YYRW                           Row
     C                   PARM      YWPOC1        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZRRPWD        BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                   MOVEL     'Y'           YSL(1)                         Set wdw locatio
     C                   MOVEL     'R'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
      *
      * Redisplay previous panel
     C                   WRITE     ASSUME
      *================================================================
     CSR   ZREXIT        ENDSR
      /EJECT
     CSR   ZSSTLC        BEGSR
      *================================================================
      * Set window location
      *================================================================
     C                   IF        YSL(1) = 'Y'
     C                   IF        YWLCTP = 'S'
     C                   Z-ADD     021           YWWDRW                         Window start ro
     C                   Z-ADD     074           YWWDCL                         Window start co
     C                   MOVEL     '*BR  '       YWWDCR                         Window referenc
     C                   ELSE
     C                   MOVEL     'S'           YWLCTP                         Locate action t
     C                   MOVEL     '*CALC'       YWWDCR                         Window referenc
     C                   Z-ADD     -3            YWWDRW                         Window start ro
     C                   Z-ADD     -3            YWWDCL                         Window start co
     C                   END
     C                   Z-ADD     067           YWWDWD                         Window width
     C                   Z-ADD     011           YWWDDP                         Window depth
     C                   MOVEL     'N'           YSL(1)                         Set wdw locatio
      *
     C                   EXSR      ZURTLC                                       Retrieve window
     C                   EXSR      ZTWDFD                                       Move window fie
     C                   END
      *================================================================
     CSR   ZSEXIT        ENDSR
      /EJECT
     CSR   ZTWDFD        BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                   Z-ADD     YWWDRW        ##WSR                          Window start ro
     C                   Z-ADD     YWWDCL        ##WSC                          Window start co
     C                   EXSR      YKDDW1
      *================================================================
     CSR   ZTEXIT        ENDSR
      /EJECT
     CSR   ZURTLC        BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                   EVAL      W0RTN = ' '
      * Retrieval Function
     C                   EVAL      YWRTFN = ' '
     C                   MOVEL     '*WDWLOC'     YWRTFN
      *
     C                   SETOFF                                         90      *
      *
     C                   CALL      'YWRTLCI'                            90      *
     C                   PARM                    YWRTFN                         Retrieval Funct
     C                   PARM                    YWWDWD                         Window width
     C                   PARM                    YWWDDP                         Window depth
     C                   PARM                    YWWDCR                         Window referenc
     C                   PARM                    YWWDRW                         *Window start r
     C                   PARM                    YWWDCL                         *Window start c
     C                   PARM                    W0RTN                          Return code
      * If error on call to API - default window location to top left cor
     C                   IF        *IN90 OR
     C                             W0RTN <> ' '
     C                   Z-ADD     2             YWWDRW                         *Window start r
     C                   Z-ADD     2             YWWDCL                         *Window start c
     C                   END
      *
      *================================================================
     CSR   ZUEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                   CALL      'Y2CPMSC'
     C                   PARM                    ##PGM
     C                   PARM      'Y'           YILE
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialise Allow Set Window Location flags
     C                   MOVEA     *ALL'Y'       YSL
      * Set display size
     C                   SETOFF                                           93    *
     C     @#SCRW        COMP      27                                     93    *
      * Initialise window location variables.
     C                   Z-ADD     *ZEROS        ##WSR
     C                   Z-ADD     *ZEROS        ##WSC
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Modifications and Comments
     C                   EXSR      UASUBR                                       Modifications a
      * Load screen
     C                   EXSR      MALDSC
      *================================================================
     CSR   ZZEXIT        ENDSR
