      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1011
      * TITLE:       Maintain Weekly Sire Line Doses
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/08/01
      *
      *
      * FUNCTION: This program uses a subfile to maintain records for a farm/week in the
      *           Weekly Sire Line Doses file.
      *
      *           The program will create, delete and update records for a specific
      *           farm site/week.
      *
      *           This program is called from:
      *                HP4011-Work with Weekly Sire Line Doses.
      *
      *           It does not have selectors or positioners.
      *           It has F4-Prompt logic.
      *           It uses the standard message handling program.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/07/04  LeAnne Fedor
      *           Inactive Farms are no longer allowed.
      *
      * 10/14/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1011   cf   e             workstn
     F                                     sfile(hp1011S1:hdrrn1)
     F                                     infds(iofeed)
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl081a   uf a e           k disk
     F                                     infds(dbfeed)
      *  Weekly sire line doses
      *
      *
     Fhsp098    if   e           k disk
      *    Sire lines
      *
      *
     Fhsl098a   if   e           k disk    rename(sirec:sireca)
      *    Sire lines
      *
      *
     Fhsl098b   if   e           k disk    rename(sirec:sirecb)
      *    Sire lines
      *
      *
     Fhsp099    if   e           k disk
      *    Sire line sources
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      * This array is used to edit that a year occurs only once in the
      * subfile entries.
      *
     D sssi            s             10    dim(50)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D reset           s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkplin          s              2  0
     D wkrlin          s              2  0
     D wkdiff          s                   like(count)
     D wkfld           s                   like(count)
     D wkrmdr          s                   like(count)
      *
      *
      * Control fields
      *
     D editfl          s              1    inz('N')
     D wkedit          s              1    inz('N')
     D notfl           s              1    inz('N')
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkccyymmdd      s              8  0
     D wkyymmdd        s              6  0
     D wkwedt          s              8  0
      *
      *
      * Work fields
      *
     D wksssi          s             10
      *
      *
      * Parm fields
      *
     D xxcdyr          s                   like(swcdyr)
     D xxcdwk          s                   like(swcdwk)
     D xxmdywedt       s                   like(c1mdywedt)
     D xxsicd          s                   like(sisicd)
     D xxsids          s                   like(sisids)
     D xxaist          s                   like(siaist)
     D xxsscd          s                   like(sssscd)
     D xxssds          s                   like(ssssds)
     D xxfsbo          s                   like(fsfsbo)
     D xxfscd          s                   like(fsfscd)
     D xxalphfscd      s              5a
     D xxfsnm          s                   like(fsfsnm)
     D xxalphprime     s              3a
     D xxprime         s                   like(siprime)
     D xxsicomp        s                   like(sisicomp)
      *
     D xxcocd          s              3  0 inz(350)
     D xxalphcocd      s              3
     D xxreturn        s              7a
      *
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
      *
     D xxhpscdyr       s                   like(swcdyr)
     D xxhpscdwk       s                   like(swcdwk)
     D xxhpspicdt      s              5  0
     D xxday           s              1a
     D xxacyr          s                   like(swcdyr)
     D xxacpe          s                   like(swcdwk)
     D xxacwk          s                   like(swcdwk)
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * If the user is in Create mode, clear the farm site code but leave
      * the remaining fields.
      *
     C                   select
     C                   when      mode = create                                When create
     C                   z-add     0             c1fscd
      *
      * Make sure the record has not been deleted out from under the user.
      *
     C                   when      mode = revise                                When create
     C     key01         chain(n)  hsl081a                            92
     C                   if        *in92 = *off                                 If found
     C                   z-add     swwedt        wkwedt
     C                   else
     C                   eval      notfl = yes
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
      * Clear/fill the subfile
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the page of the subfile to display
      *
     C                   select
     C                   when      wkflow = 0 and error = 0
     C                   eval      hdpag1 = 1
      *
     C                   when      reset = yes and wkflow <= hdrrn1
     C                   eval      hdpag1 = wkflow
     C                   endsl
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * If the user has edited the data, then issue the 'accept changes'
      * message. (Don't issue the message if the user is in create mode but
      * has not entered anything in the subfile.)
      *
     C                   select
     C                   when      mode = create and wkedit = no
      *
     C                   when      error = 0 and editfl = yes
     C                   eval      error = 1
     C                   eval      mgid(e) = 'HS09026'
     C                   endsl
      *
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Write screen 1 to crt
      *
     C                   write     hp1011k1
     C                   write     hp1011ec
     C                   exfmt     hp1011c1
      *
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   eval      wkflow = idflow
     C                   eval      reset = no
     C                   eval      editfl = no
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
     C                   eval      routne = scrn1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      reset = yes
     C                   eval      routne = set1
      *
     C                   when      notfl = yes
     C                   eval      routne = set1
      *
     C                   when      *in11 = *on                                  F11-delete
     C                   exsr      $dlt081
     C                   eval      rtncd = '00'
     C                   eval      routne = exit
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
     C                   if        error <> 0                                   If error
     C                   eval      routne = scrn1
     C                   else
      *
     C                   select
     C                   when      mode = revise
     C                   exsr      $dlt081
     C                   exsr      $crt081
     C                   eval      rtncd = '00'
     C                   eval      routne = exit
      *
     C                   when      mode = create
     C                   exsr      $crt081
     C                   eval      routne = set1
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09165'     mgid(e)
     C                   clear                   mgw
     C                   move      c1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endsl
      *
     C                   endif                                                  If error
      *
      *
     C                   when      *in25 = *on                                  F25-rollup
     C                   eval      wkdiff = idflow + wkplin
     C                   if        hdrrn1 >= wkdiff                             If something
     C                   else
     C                   eval      hdrrn1 = count
     C                   exsr      $setoff
     C                   exsr      $clrln
     C                   do        wkplin                                       Do fill
     C                   exsr      $blank
     C                   enddo                                                  Do fill
     C                   endif                                                  If something
     C                   eval      routne = scrn1
     C                   other
      *
      * User pressed ENTER
      *
     C                   exsr      $edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Subroutine to edit input fields on screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
     C                   move      yes           editfl
      *
      * If you are in Create mode, edit the control record
      *
     C                   if        mode = create
     C                   exsr      $edc1
     C                   endif
      *
      * Edit the subfile if there are no errors in the control record.
      * If there are errors in the control record, you need to rewrite
      * all subfile records with the error indicators off.
      *
     C                   if        error = 0
     C                   exsr      $eds1
     C                   else
     C                   exsr      $offin
     C                   endif
      *
     C                   if        error = 0
     C                   z-add     1             hdpag1
     C                   endif
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Control record edits
      *---------------------------------------------------------------
      *
     C     $edc1         begsr
      *
      * Validate:
      *    1) Farm site
      *    2) Week-ending date
      *
     C                   exsr      $fscd
     C                   exsr      $wedt
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate farm site (create mode only)
      *----------------------------------------------------------------
      *
     C     $fscd         begsr
      *
      *
     C                   select
     C                   when      c1fscd = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     c1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      c1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      *
      * Must be a BGF farm
      *
     C                   if        fsppcd <> 'BGF'                              If not BGF
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09137'     mgid(e)
     C                   endif
     C                   endif                                                  If not BGF
      *
      *
      * Must be an Active farm
      *
     C                   if        fsaist = 'I'                                 If inactive
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04760'     mgid(e)
     C                   clear                   mgw
     C                   move      c1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If inactive
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit week-ending date
      *---------------------------------------------------------------
      *
     C     $wedt         begsr
      *
     C                   z-add     0             c1cdyr
     C                   z-add     0             c1cdwk
      *
     C                   select
     C                   when      c1mdywedt = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 c1mdywedt              92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      c1mdywedt     wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    wkwedt
      *
     C                   endif                                                  If bad date
     C                   endsl
      *
      * If date is valid, retrieve the following info from the OMS
      * Calendar file and verify that the date is a Saturday.
      *   1) HPS calendar year
      *   2) HPS calendar week
      *
      * You will call a SYNON program for this retrieval using as
      * input parms 1) company number and 2) date in the SYNON format of
      * CYYMMDD.
     C                   exsr      $synon
      *
      * Check the returned SYNON values.
      *
     C                   select
     C                   when      xxreturn <> *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09138'
     C                   clear                   mgw
     C                   move      xxcocd        xxalphcocd
     C                   movea     xxalphcocd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
      * Must be Saturday.
     C                   when      xxday <> '7'
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09030'
     C                   endif
      *
     C                   other
     C                   z-add     xxhpscdyr     c1cdyr
     C                   z-add     xxhpscdwk     c1cdwk
     C                   endsl
      *
      * If both farm site and date are valid, check that no records already exist
      * for this farm/date in the weekly file.
      *
     C                   if        *in31 = *off and *in32 = *off                If OK
     C     key01         chain(n)  hsl081a                            92
     C                   if        *in92 = *off                                 If already
     C                   seton                                        3132
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09136'
     C                   endif
     C                   endif                                                  If already
     C                   endif                                                  If OK
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  Use SYNON program to validate date
      *---------------------------------------------------------------
      *
     C     $synon        begsr
      *
      * Get the date into the SYNON format.
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmdd
     C                   else
     C                   z-add     wkyymmdd      xxcyymmdd
     C                   endif
      *
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm                    xxcocd
     C                   parm                    xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C                   parm      0             xxhpscdyr
     C                   parm      0             xxhpscdwk
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $eds1         begsr
      *
      * Initialize the source/sire array and indexes
      *
     C                   move      *blank        sssi
     C                   eval      x = 0
     C                   eval      y = 0
      *
      * Set the field that indicates whether the user entered/changed data.
      *
     C                   move      no            wkedit
      *
      * Read/process all changed subfile records
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do process
     C                   readc     hp1011s1                               80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set on MDT
     C                   seton                                        85
      *
      * Set off error indicators in the subfile
      *
     C                   exsr      $setoff
      *
     C                   move      *blank        d1sicd
      *
      * If there are any user entries
      *  a) set the flag indicating you have edited at least once and
      *  b) validate fields
      *
     C                   if        d1sscd <> *blank or                          If entry
     C                             d1sicomp <> *blank or
     C                             d1prime <> 0 or
     C                             d1dono <> 0
      *
     C                   move      yes           wkedit
      *
     C                   exsr      $sscd
     C                   exsr      $sicomp
     C                   exsr      $prime
     C                   exsr      $dono
     C                   endif                                                  If entry
      *
      * Reset indicators
     C                   exsr      $ind
     C                   update    hp1011s1
     C                   exsr      $setoff
     C                   endif                                                  If rec read
     C                   enddo                                                  Do process
      * Set MDT
     C                   setoff                                       85
      *
      *
     C                   if        wkedit = no and                              If no entry
     C                             error < maxmsg
     C                   add       1             error
     C                   movel     'HS01149'     mgid(e)
     C                   endif                                                  If no entry
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit sire line source
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) required
      *   2) must be valid in the master file
      *   3) must have an 'active' status
      *
     C     $sscd         begsr
      *
     C                   select
     C                   when      d1sscd = *blank
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
      * Sire line source must be valid in master file.
      *
     C                   eval      d1sscd = %triml(d1sscd)
     C     d1sscd        chain     hsp099                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01151'
     C                   movea     d1sscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   else
      *
     C                   if        ssaist = 'I'                                 If inactive
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01152'
     C                   movea     d1sscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If inactive
      *
     C                   endif                                                  If not found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Sire Line Company
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) required
      *   2) must exist in Sire Line Master
      *
     C     $sicomp       begsr
      *
     C                   select
     C                   when      d1sicomp = *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
     C     d1sicomp      chain     hsl098a                            92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01158'
     C                   movea     d1sicomp      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If not found
     C                   endsl                                                  If not found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit Prime Line
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) required
      *   2) cannot be negative
      *   2) must exist in Sire Line Master
      *
     C     $prime        begsr
      *
     C                   select
     C                   when      d1prime = 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   exsr      $err1
     C                   endif
      *
     C                   when      d1prime < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
     C     d1prime       chain     hsl098b                            92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01147'
     C                   move      d1prime       xxalphprime
     C                   movea     xxalphprime   mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If not found
     C                   endsl                                                  If not found
      *
      *
      * The Company/Prime Line combination must exist in the Sire Line Master.
      * And, it must have an "active" status.
      *
     C                   if        *in34 = *off and *in36 = *off                If OK so far
     C     key02         chain     hsl098a                            92
      *
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        3436
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01148'
     C                   clear                   mgw
     C                   movea     d1sicomp      mgw(1)
     C                   movel     d1prime       xxalphprime
     C                   movea     xxalphprime   mgw(3)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   other
      *
     C                   move      sisicd        d1sicd
      *
     C                   if        siaist = 'I'                                 If inactive
     C                   seton                                        3436
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01154'
     C                   movea     d1sicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If inactive
      *
     C                   endsl
      *
     C                   endif                                                  If OK so far
      *
      *
      * And, if everything is still OK, makte the last check
      *
     C                   if        *in34 = *off and *in36 = *off                If still good
     C                   exsr      $combo
     C                   endif                                                  If still good
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Edit that combination of sire source and sire line exist only one time in subfile
      *----------------------------------------------------------------------------------
      *
     C     $combo        begsr
      *
     C                   eval      wksssi = d1sscd + d1sicd
     C                   eval      x = 1
      *
     C     wksssi        lookup    sssi(x)                                92
     C                   if        *in92 = *on                                  If dup
     C                   seton                                        333436
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01155'
     C                   exsr      $err1
     C                   endif
     C                   else
      *
      * Load combination into the array
      *
     C                   add       1             y
     C                   eval      sssi(y) = wksssi
     C                   endif                                                  If dup
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit number of doses
      *---------------------------------------------------------------
      *
      * Validations:
      *   1) required
      *   2) cannot be negative
      *
     C     $dono         begsr
      *
     C                   select
     C                   when      d1dono = 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1dono < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   eval      hdrrn1 = 0
     C                   eval      count = 0
      *
     C                   clear                   hp1011s1
     C                   seton                                        83        sflclr
     C                   write     hp1011c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Refresh/fill the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Set indicators to control/protect screen fields
      *
     C                   exsr      $ind
      *
      * Loading the sbufile in this program is different than subfiles in
      * Work With programs and depends on the 'MODE'.
      * For CREATE mode, load a page of blank lines.
      * For REVISE mode, load a page of database records and, if you hit EOF,
      *                  finish loading the page with blank lines.
      *
     C                   select
     C                   when      mode = create
     C                   exsr      $setoff
     C                   exsr      $clrln
     C                   do        wkplin
     C                   exsr      $blank
     C                   enddo
      *
     C                   when      mode = revise
     C     key01         setll     hsl081a
     C                   dou       *in82 = *on
     C                   exsr      $load1
     C                   enddo
      *
      * Fill up the subfile page with blank lines if necessary
      *
     C                   if        wkplin <> 0 and wkplin <> count
     C     count         div       wkplin        wkfld
     C                   mvr                     wkrmdr
     C                   eval      wkdiff = wkplin - wkrmdr
     C                   exsr      $setoff
     C                   exsr      $clrln
     C                   do        wkdiff
     C                   exsr      $blank
     C                   enddo
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $load1        begsr
      *
      * Retrieve weekly records for farm.
      *
     C     key01         reade(n)  hsl081a                                82
     C                   if        *in82 = *off                                 If not EOF
     C                   seton                                        85
      *
      * Clear fields in subfile line
      *
     C                   exsr      $clrln
      *
      * Set up subfile line fields
      *
     C                   move      swsscd        d1sscd
     C                   move      swsicd        d1sicd
     C                   z-add     swdono        d1dono
      *
      * Retrieve Sire Line Code info.
      *
     C                   exsr      $sicd
      *
      * Reset indicators
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp1011s1
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
     C                   endif                                                  If not EOF
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Sire Line info
      *---------------------------------------------------------------
      *
     C     $sicd         begsr
      *
     C     d1sicd        chain     hsp098                             92
     C                   if        *in92 = *off                                 If found
     C                   move      sisicomp      d1sicomp
     C                   z-add     siprime       d1prime
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load blank subfile records for screen 1
      *---------------------------------------------------------------
      *
     C     $blank        begsr
      *
     C                   exsr      $ind
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp1011s1
     C                   seton                                        81
     C                   z-add     hdrrn1        hdpag1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear subfile line
      *---------------------------------------------------------------
      *
     C     $clrln        begsr
      *
     C                   move      *blank        d1sscd
     C                   move      *blank        d1sicomp
     C                   z-add     0             d1prime
     C                   z-add     0             d1dono
     C                   move      *blank        d1sicd
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Rewrite the subfile records with the indicators off
      *---------------------------------------------------------------
      *
      * This subroutine keeps the cursor from being in the subfile while
      * the displayed error message is for the control record.
      *
     C     $offin        begsr
      *
      * Read/process all changed subfile records
      *
     C                   dou       *in80 = *on                                  Do loop
     C                   readc     hp1011s1                               80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set on MDT
     C                   seton                                        85
      *
      * Set of the error indicators in the subfile and then reset indicators
      *
     C                   exsr      $setoff
     C                   exsr      $ind
     C                   update    hp1011s1
     C                   endif                                                  If rec read
     C                   enddo                                                  Do loop
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Reset indicators
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      *
      * If the record was deleted out from under the user, then set indicators
      * to control available function keys and input fields.
      *
     C                   if        notfl = yes                                  If not found
     C                   seton                                        62
     C                   else
      *
      *  Set up for user's action
      *
     C                   select
     C                   when      c1mode = revise                              WH revise
     C                   seton                                        60
     C                   when      c1mode = create                              WH create
     C                   seton                                        61
     C                   when      c1mode = delete                              WH delete
     C                   seton                                        62
     C                   endsl
      *
     C                   endif                                                  If not found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set off all subfile indicators
      *----------------------------------------------------------------
      *
     C     $setoff       begsr
      *
     C                   setoff                                       333435
     C                   setoff                                       36
     C                   setoff                                       535456
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Delete records for farm/week
      *----------------------------------------------------------------
      *
     C     $dlt081       begsr
      *
     C     key01         setll     hsl081a
      *
     C                   dou       *in91 = *on                                  Do delete
     C     key01         reade     hsl081a                                91
     C                   if        *in91 = *off
     C                   delete    swrec
     C                   endif
     C                   enddo                                                  Do delete
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Create weekly records for farm
      *----------------------------------------------------------------
      *
     C     $crt081       begsr
      *
     C                   dou       *in80 = *on                                  Do read loop
     C                   readc     hp1011s1                               80
     C                   if        *in80 = *off and d1sscd <> *blank            If record
     C                   z-add     c1fscd        swfscd
     C                   z-add     c1cdyr        swcdyr
     C                   z-add     c1cdwk        swcdwk
     C                   z-add     wkwedt        swwedt
     C                   move      d1sscd        swsscd
     C                   move      d1sicd        swsicd
     C                   z-add     d1dono        swdono
      *
     C                   write     swrec
     C                   endif                                                  If record
     C                   enddo                                                  Do read loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      *
      * Set off prompt indicators in all subfile records.
      *
     C                   exsr      $f4sflind
      *
     C                   select
      *
      *----------------------------------------------------------------
      * Prompted fields in the control record
      *----------------------------------------------------------------
      *
      * Farm site (only in create mode)
      *
     C                   when      fld = 'C1FSCD' and *in61 = *on
     C                   call      'HP5045'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        51
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        c1fscd
     C                   endif
      *
      *
      *----------------------------------------------------------------
      * Prompted fields in the subfile
      *----------------------------------------------------------------
      *
      * Sire source
     C                   when      fld = 'D1SSCD'
     C                   call      'HP5015'
     C                   parm      'A'           xxaist
     C                   parm      *blank        xxsscd
     C                   parm      *blank        xxssds
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If source
     C                   if        xxsscd <> *blank
     C                   move      xxsscd        d1sscd
     C                   endif
     C                   seton                                        8553
     C                   update    hp1011s1
     C                   setoff                                       8553
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page the user was on when he took F4.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  If source
      *
      *----------------------
      * Sire line company
      *----------------------
     C                   when      fld = 'D1SICOMP'
     C                   call      'HP5051'
     C                   parm      'A'           xxaist
     C                   parm      *blank        xxsicomp
     C                   parm      0             xxprime
     C                   parm      *blank        xxsicd
     C                   parm      *blank        xxsids
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxsicomp <> *blank
     C                   move      xxsicomp      d1sicomp
     C                   z-add     xxprime       d1prime
     C                   move      xxsicd        d1sicd
     C                   endif
     C                   seton                                        8554
     C                   update    hp1011s1
     C                   setoff                                       8554
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page the user was on when he took F4.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  If hit
      *
      *----------------------
      * Prime line
      *----------------------
     C                   when      fld = 'D1PRIME'
     C                   call      'HP5051'
     C                   parm      'A'           xxaist
     C                   parm      *blank        xxsicomp
     C                   parm      0             xxprime
     C                   parm      *blank        xxsicd
     C                   parm      *blank        xxsids
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxprime <> 0
     C                   move      xxsicomp      d1sicomp
     C                   z-add     xxprime       d1prime
     C                   move      xxsicd        d1sicd
     C                   endif
     C                   seton                                        8556
     C                   update    hp1011s1
     C                   setoff                                       8556
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page the user was on when he took F4.
      *
     C                   z-add     count         hdrrn1
     C                   z-add     hdrr1         hdpag1
     C                   endif                                                  If hit
      *
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $exit - seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *
      *---------------------------------------------------------------
      * $wrmsg - write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * $clmsg - clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set off f4 indicators in the subfile records
      *----------------------------------------------------------------
      *
     C     $f4sflind     begsr
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do indicators off
     C                   readc     hp1011s1                               80
     C                   if        *in80 = *off                                 If rec read
     C                   seton                                        85
     C                   setoff                                       535456
     C                   update    hp1011s1
     C                   endif                                                  If rec read
     C                   enddo                                                  Do indicators off
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $rrn1 - routine to find/retrieve the subfile record to update
      *          when returning from a select program on screen 1
      *----------------------------------------------------------------
      *
      * HDRR1 is the hidden field associated with the keyword SFLCSRRRN
      * on the control record in the DSPF.
      * HDRRN1 is the value associated with the keyword 'SFILE' in
      * the F-specs for the workstation.
      *
     C     $rrn1         begsr
      *
     C                   setoff                                       97
      *
     C                   if        hdrr1 <> 0
     C                   z-add     hdrr1         hdrrn1
     C     hdrrn1        chain     hp1011s1                           97
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $err1  - set the subfile to redisplay at the first page that
      *          has errors for screen 1
      *---------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   eval      hdpag1 = hdrrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     c1mode        parm                    mode
     C     c1fscd        parm                    xxfscd
     C     c1cdyr        parm                    xxcdyr
     C     c1cdwk        parm                    xxcdwk
     C     c1mdywedt     parm                    xxmdywedt
     C                   parm                    rtncd
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    c1fscd
     C                   kfld                    c1cdyr
     C                   kfld                    c1cdwk
      *
      *
     C     key02         klist
     C                   kfld                    d1sicomp
     C                   kfld                    d1prime
      *
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   z-add     11            wkplin                         sflpag
     C     wkplin        sub       1             wkrlin
      *
      *
      * The user can come into this program several different ways. Check
      * the entry mode and set the appropriate indicators to control the screen.
      * When you are deleting, just delete and get out---don't show any screens.
      *
     C                   select
     C                   when      mode = create
     C                   eval      routne = set1
     C                   seton                                        61
      *
     C                   when      mode = revise
     C                   eval      routne = set1
     C                   seton                                        60
      *
     C                   when      mode = delete
     C                   exsr      $dlt081
     C                   eval      routne = exit
     C                   endsl
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
