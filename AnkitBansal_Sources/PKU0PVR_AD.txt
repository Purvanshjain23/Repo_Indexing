// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKU0PVR
// ?Date: 14.08.2025 Time: 02:52:59
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

// LCL.Display Print Prompt  Usr = CND.Prompt is to be displayed
LCL.Display_Print_Prompt_Usr = 'Y';

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.CSD Company Number = PAR.CC Company Number
DTL.CSD_Company_Number = PAR.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

// DTL.Report Type Sum/Dtl USR = CND.Summary
DTL.Report_Type_Sum_Dtl_USR = 'S';

// Retrieve message - 'Ted_Koziol@Seaboardpork.com'
DTL.EMail_Address = RTVMSG(PRK0945);

CASE;

// IF JOB.*USER is Purva Patel
IF JOB.*USER = 'ISPPATE';

// OR JOB.*USER is Purva Patel Prod
OR JOB.*USER = 'ISPURVAP';

// DTL.EMail Address = CON.Purva_Droge@Seaboardpork.
DTL.EMail_Address = 'Purva_Droge@Seaboardpork.';

// DTL.EMail Address = CONCAT(DTL.EMail Address,CON.com,CON.*ZERO)
DTL.EMail_Address = DTL.EMail_Address + 'com' (*ZERO);

ENDIF;

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(LCL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


// DTL.Condition Name 1 USR = Condition name of DTL.Report Type Sum/Dtl USR
DTL.Condition_Name_1_USR = RTVCND(DTL.Report_Type_Sum_Dtl_USR);

//?USER: Validate fields

//?Producer is required if Location is entered.
CASE;

// IF DTL.CSD Location Code is Entered
IF DTL.CSD_Location_Code <> *BLANK;

// AND DTL.CSD Producer Code is Blank
AND DTL.CSD_Producer_Code = *BLANK;

// Send error message - 'Producer is required'
ERROR(PRK0643);
MSGPARM(DTL.CSD_Producer_Code);

ENDIF;

//?F4=Prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.CSD Producer Code
IF PGM.*Cursor_field = DTL.CSD_Producer_Code;

// Call program Sel Producer          SR.
CALL PROGRAM(Sel Producer          SR) ('PKA1SRR');
PARAMETER(DTL.CSD_Producer_Code);

QUIT;

// IF PGM.*Cursor field <IS> DTL.CSD Location Code
IF PGM.*Cursor_field = DTL.CSD_Location_Code;

CASE;

// IF DTL.CSD Producer Code is SEABOA
IF DTL.CSD_Producer_Code = 'SEABOA';

// Call program Sel HPS Farm Site     UP.
CALL PROGRAM(Sel HPS Farm Site     UP) ('HP5003');
PARAMETER(LCL.Return_Code_USR);
PARAMETER(LCL.HRH_Farm_Site);
PARAMETER(DTL.Location_Name_DRV);
PARAMETER(NLL.MTech_Farm_Site_Ref);

// LCL.Farm Site 6.0 USR = LCL.HRH Farm Site
LCL.Farm_Site_6_0_USR = LCL.HRH_Farm_Site;

// DTL.CSD Location Code = CVTVAR(LCL.Farm Site 6.0 USR)
DTL.CSD_Location_Code = CVTVAR(LCL.Farm_Site_6_0_USR);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Sel Producer Loc      SR.
CALL PROGRAM(Sel Producer Loc      SR) ('PKKMSRR');
PARAMETER(DTL.CSD_Producer_Code);
PARAMETER(DTL.CSD_Location_Code);

QUIT;

ENDIF;

ENDIF;

ENDIF;

//?Initialize Month and Week.
CASE;

// IF DTL.CSD Type is Monthly
IF DTL.CSD_Type = 'M';

// DTL.CSD Week = CON.*ZERO
DTL.CSD_Week = *ZERO;

//?Initialize Month and Week.
// IF DTL.CSD Type is Weekly
IF DTL.CSD_Type = 'W';

// DTL.CSD Month = CON.*ZERO
DTL.CSD_Month = *ZERO;

ENDIF;

//?If Producer or Location entered, set Report Type = Detail
CASE;

// IF DTL.CSD Producer Code is Entered
IF DTL.CSD_Producer_Code <> *BLANK;

// OR DTL.CSD Location Code is Entered
OR DTL.CSD_Location_Code <> *BLANK;

// DTL.Report Type Sum/Dtl USR = CND.Detail
DTL.Report_Type_Sum_Dtl_USR = 'D';

ENDIF;

//?VAL:  Producer
CASE;

// IF DTL.CSD Producer Code is Entered
IF DTL.CSD_Producer_Code <> *BLANK;

EXECUTE FUNCTION(Val Prod Existance    RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1176016;
PARAMETER(DTL.CSD_Producer_Code);
PARAMETER(LCL.PD_Name);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Producer not found.'
ERROR(PRK0009);

ENDIF;

//?VAL:  Producer
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Producer Name         DRV = CON.*BLANK
DTL.Producer_Name_DRV = *BLANK;

ENDIF;

//?VAL:  Location
CASE;

// IF DTL.CSD Location Code is Entered
IF DTL.CSD_Location_Code <> *BLANK;

CASE;

// IF DTL.CSD Producer Code is SEABOA
IF DTL.CSD_Producer_Code = 'SEABOA';

// LCL.Farm Site 6.0 USR = CVTVAR(DTL.CSD Location Code)
LCL.Farm_Site_6_0_USR = CVTVAR(DTL.CSD_Location_Code);

// LCL.HRH Farm Site = LCL.Farm Site 6.0 USR
LCL.HRH_Farm_Site = LCL.Farm_Site_6_0_USR;

// Call program Val HPS Farm Site     UP.
CALL PROGRAM(Val HPS Farm Site     UP) ('HP256');
PARAMETER(LCL.Return_Code_USR);
PARAMETER(LCL.HRH_Farm_Site);
PARAMETER(*BLANK);
PARAMETER(DTL.Location_Name_DRV);
PARAMETER(NLL.MTech_Farm_Site_Ref);

CASE;

// IF LCL.Return Code USR is *Normal
IF LCL.Return_Code_USR = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Farm Site &1 invalid.'
ERROR(PRK0688);
MSGPARM(LCL.HRH_Farm_Site);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Producer Location RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1233183;
PARAMETER(DTL.CSD_Producer_Code);
PARAMETER(DTL.CSD_Location_Code);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Producer Location not found.'
ERROR(PRK0015);

ENDIF;

ENDIF;

//?VAL:  Location
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Location Name DRV = CON.*BLANK
DTL.Location_Name_DRV = *BLANK;

ENDIF;

//?CALC: Screen function fields

// DTL.Condition Name USR = Condition name of DTL.CSD Type
DTL.Condition_Name_USR = RTVCND(DTL.CSD_Type);

// DTL.Condition Name 1 USR = Condition name of DTL.Report Type Sum/Dtl USR
DTL.Condition_Name_1_USR = RTVCND(DTL.Report_Type_Sum_Dtl_USR);

// DTL.Condition Name 2 USR = Condition name of DTL.CSD Source Type
DTL.Condition_Name_2_USR = RTVCND(DTL.CSD_Source_Type);

EXECUTE FUNCTION(Producer Name         DRV) TYPE(DRVFLD)                        AB1100361;
PARAMETER(DTL.Producer_Name_DRV);
PARAMETER(DTL.CSD_Producer_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.Producer_Name_DRV);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: User defined action

CASE;

// IF LCL.Display Print Prompt  Usr is Prompt is to be displayed
IF LCL.Display_Print_Prompt_Usr = 'Y';

CASE;

// IF DTL.Document Name USR EQ WRK.Blank USR
IF DTL.Document_Name_USR = WRK.Blank_USR;

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Print Standard Deviation');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('HPE');
PARAMETER(1);

// IF *OTHERWISE
IF *OTHERWISE;

// Send information message - 'File has been Emailed.'
MESSAGE(PRK0946 *INFO);

ENDIF;

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// Retrieve message - 'JOB(&1) jobq(&2) log(&3) hold(&4)'
PGM.*Sbmjob_override_string = RTVMSG(PRK0812);
PARAMETER('PRTSTDDEV');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('4 00 *NOLIST');
PARAMETER(*NO);

// Call program Prt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Prt Std Deviation     UP) ('PKU2UPC');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(DTL.CSD_Source_Type);
PARAMETER(DTL.CSD_Producer_Code);
PARAMETER(DTL.CSD_Location_Code);
PARAMETER(DTL.CSD_Month);
PARAMETER(DTL.CSD_Week);
PARAMETER(DTL.CSD_Year);
PARAMETER(DTL.Report_Type_Sum_Dtl_USR);
PARAMETER(DTL.Document_Name_USR);
PARAMETER(DTL.EMail_Address);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBEND;

ENDIF;

ENDIF;

