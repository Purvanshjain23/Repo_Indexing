     H/TITLE Exc TRG POAZCPP ProcessXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 01/23/19  Time  : 10:49:34
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPUA9CPL0  IF A E           K DISK
      * UPD : Packaging BOM TRG         Update index
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUA91        E DS                  EXTNAME(PUA9CPL0)
      * UPD : Packaging BOM TRG         Update index
      * Renamed input format fields
     D  WAAIC3       E                     EXTFLD(A9AIC3)
     D  WAHGCD       E                     EXTFLD(A9HGCD)
     D  WABRAA       E                     EXTFLD(A9BRAA)
     D  WAAVTS       E                     EXTFLD(A9AVTS)
     D  WAIYSC       E                     EXTFLD(A9IYSC)
     D  WAIZSC       E                     EXTFLD(A9IZSC)
     D  WAA3DX       E                     EXTFLD(A9A3DX)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S             25
     D  WL0004         S             26
     D  WL0005         S              1
     D  WL0006         S              2
     D  WL0007         S              8  0
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS           106
      * RCD: Packaging BOM             Retrieval index
      * I :  Company Number
     D  P1AIC3                 1      2P 0
      * I :  Item Code
     D  P1HGCD                 3      6P 0
      * I :  Packaging Item Code
     D  P1BRAA                 7     31
      * I :  Packaging Item Quantity
     D  P1M1QT                32     35P 3
      * I :  Pckg Item Type
     D  P1I5SX                36     37
      * I :  Pckg Reporting Group
     D  P1D8AA                38     42
      * I :  Pckg Group Category
     D  P1M3SX                43     47
      * I :  Pckg BOM Unused Sts 1
     D  P1M7SX                48     48
      * I :  Pckg BOM Unused Sts 2
     D  P1M8SX                49     49
      * I :  Record Status
     D  P1VSST                50     50
      * I :  Create Date
     D  P1MJDT                51     54P 0
      * I :  Create Time
     D  P1BETM                55     58P 0
      * I :  Create User
     D  P1CCVN                59     68
      * I :  Create Program
     D  P1CDVN                69     78
      * I :  Change Date
     D  P1MKDT                79     82P 0
      * I :  Change Time
     D  P1BFTM                83     86P 0
      * I :  Change User
     D  P1CEVN                87     96
      * I :  Change Program
     D  P1CFVN                97    106
     D P2PARM          DS           106
      * RCD: Packaging BOM             Retrieval index
      * I :  Company Number
     D  P2AIC3                 1      2P 0
      * I :  Item Code
     D  P2HGCD                 3      6P 0
      * I :  Packaging Item Code
     D  P2BRAA                 7     31
      * I :  Packaging Item Quantity
     D  P2M1QT                32     35P 3
      * I :  Pckg Item Type
     D  P2I5SX                36     37
      * I :  Pckg Reporting Group
     D  P2D8AA                38     42
      * I :  Pckg Group Category
     D  P2M3SX                43     47
      * I :  Pckg BOM Unused Sts 1
     D  P2M7SX                48     48
      * I :  Pckg BOM Unused Sts 2
     D  P2M8SX                49     49
      * I :  Record Status
     D  P2VSST                50     50
      * I :  Create Date
     D  P2MJDT                51     54P 0
      * I :  Create Time
     D  P2BETM                55     58P 0
      * I :  Create User
     D  P2CCVN                59     68
      * I :  Create Program
     D  P2CDVN                69     78
      * I :  Change Date
     D  P2MKDT                79     82P 0
      * I :  Change Time
     D  P2BFTM                83     86P 0
      * I :  Change User
     D  P2CEVN                87     96
      * I :  Change Program
     D  P2CFVN                97    106
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     I@A9CPED
      * Packaging BOM TRG         Update index
      * Renamed input format fields
     I              A9AIC3                      WAAIC3
     I              A9HGCD                      WAHGCD
     I              A9BRAA                      WABRAA
     I              A9AVTS                      WAAVTS
     I              A9IYSC                      WAIYSC
     I              A9IZSC                      WAIZSC
     I              A9A3DX                      WAA3DX
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Packaging
     C                   PARM                    P2PARM                         RCD: Packaging
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc TRG POAZCPP ProcessXF
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Crt Packaging BOM TRG CR - Packaging BOM TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P2BRAA        WL0003                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0004                         PBT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0005                         PBT TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         PBT Process Sta
     C                   Z-ADD     0             WL0007                         PBT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
      * Ensure If Something Did Change Then Create Record.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10
      *   |- c1    : PR1.Company Number NE PR2.Company Number
      *   |- c2    : PR1.Item Code NE PR2.Item Code
      *   |- c3    : PR1.Packaging Item Code NE PR2.Packaging Item Code
      *   |- c4    : PR1.Packaging Item Quantity NE PR2.Packaging Item Qu
      *   |- c5    : PR1.Pckg Item Type NE PR2.Pckg Item Type
      *   |- c6    : PR1.Pckg Reporting Group NE PR2.Pckg Reporting Group
      *   |- c7    : PR1.Pckg Group Category NE PR2.Pckg Group Category
      *   |- c8    : PR1.Pckg BOM Unused Sts 1 NE PR2.Pckg BOM Unused Sts
      *   |- c9    : PR1.Pckg BOM Unused Sts 2 NE PR2.Pckg BOM Unused Sts
      *   |- c10   : PR1.Record Status NE PR2.Record Status
      *   '-
     C                   IF        P3D8SC = '3'
      * Crt Packaging BOM TRG CR - Packaging BOM TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P1AIC3 <> P2AIC3 OR
     C                             P1HGCD <> P2HGCD OR
     C                             P1BRAA <> P2BRAA OR
     C                             P1M1QT <> P2M1QT OR
     C                             P1I5SX <> P2I5SX OR
     C                             P1D8AA <> P2D8AA OR
     C                             P1M3SX <> P2M3SX OR
     C                             P1M7SX <> P2M7SX OR
     C                             P1M8SX <> P2M8SX OR
     C                             P1VSST <> P2VSST
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P2BRAA        WL0003                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0004                         PBT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0005                         PBT TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         PBT Process Sta
     C                   Z-ADD     0             WL0007                         PBT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Crt Packaging BOM TRG CR - Packaging BOM TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   Z-ADD     P1HGCD        WL0002                         Item Code
     C                   MOVEL(P)  P1BRAA        WL0003                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0004                         PBT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0005                         PBT TRG Databas
     C                   MOVEL(P)  '0'           WL0006                         PBT Process Sta
     C                   Z-ADD     0             WL0007                         PBT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Crt Packaging BOM TRG CR - Packaging BOM TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @A9CPED
     C                   Z-ADD     WL0001        WAAIC3                         Company Number
     C                   Z-ADD     WL0002        WAHGCD                         Item Code
     C                   MOVEL     WL0003        WABRAA                         Packaging Item
     C                   MOVEL     WL0004        WAAVTS                         PBT Timestamp
     C                   MOVEL     WL0005        WAIYSC                         PBT TRG Databas
     C                   MOVEL     WL0006        WAIZSC                         PBT Process Sta
     C                   Z-ADD     WL0007        WAA3DX                         PBT Process Dat
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WAAVTS                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WAHGCD                         Item Code
     C                   KFLD                    WABRAA                         Packaging Item
     C                   KFLD                    WAAVTS                         PBT Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @A9CPED                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5106'     W0RTN
      * Send message 'Packaging BOM TRG      EX'
     C                   MOVEL     'USR5106'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @A9CPED                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WAAVTS                         PBT Timestamp
     C                   Z-ADD     *ZERO         WAA3DX                         PBT Process Dat
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   EVAL      WL0003 = ' '
     C                   MOVEL     XDTSDL        WL0004
     C                   EVAL      WL0005 = ' '
     C                   EVAL      WL0006 = ' '
     C                   Z-ADD     *ZERO         WL0007
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
