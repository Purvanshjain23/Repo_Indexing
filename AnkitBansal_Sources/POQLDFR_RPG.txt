     H/TITLE WW Scheduling Orders  DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 04/20/10  Time  : 13:20:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOQLDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Scheduling Orders  DF  Display file
      *
     FPDKLREL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Company Item Avail Group  Co/Group/Item
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAADREL8IF  E           K        DISK
      * RSQ : Warehouse                 Production Warehouse
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAB1REL4IF  E           K        DISK
      * RTV : Item Balance Detail       Active only
      *
     FPOB5CPL4IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Itm/Whs/PDte(d)/Ord
      *
     FOPEYCPL1IF  E           K        DISK
      * RTV : Order Events              Retrieval index       NV
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FCAB7CPLJIF  E           K        DISK
      * RSQ : Item Transaction Detail   Co/Itm/Whs/PDte    R/RR
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FPDIOREL3IF  E           K        DISK
      * RSQ : Item Bill Of Material     Consumed Items
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 038  5 0A
     E                    W0END   7 038  5 0A
     E                    W0NAM   7 038 10
      * Long constants
     E                    @CN#    1   2  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@ADREYH
      * Warehouse                 Production Warehouse
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@ADREWA
      * Warehouse                 ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@BZRED0
      * Company Item              RSQ by Item only      NV
      * Renamed input format fields
     I              BZAIC3                          WDAIC3
     I              BZHGCD                          WDHGCD
     I              BZAVNA                          WDAVNA
     I              BZAWNA                          WDAWNA
     I              BZL7NA                          WDL7NA
     I              BZL8NA                          WDL8NA
     I              BZL6NA                          WDL6NA
     I              BZMFNA                          WDMFNA
     I              BZADCD                          WDADCD
     I              BZAWPC                          WDAWPC
     I              BZLXST                          WDLXST
     I              BZAECD                          WDAECD
     I              BZAXPC                          WDAXPC
     I              BZLYST                          WDLYST
     I              BZAFCD                          WDAFCD
     I              BZAICD                          WDAICD
     I              BZAIWG                          WDAIWG
     I              BZHICD                          WDHICD
     I              BZRBCD                          WDRBCD
     I              BZFZST                          WDFZST
     I              BZAVST                          WDAVST
     I              BZCZWG                          WDCZWG
     I              BZC0WG                          WDC0WG
     I              BZURTN                          WDURTN
     I              BZAJC8                          WDAJC8
     I              BZRINB                          WDRINB
     I              BZRHNB                          WDRHNB
     I              BZRGNB                          WDRGNB
     I              BZLNCD                          WDLNCD
     I              BZTFNB                          WDTFNB
     I              BZN0CD                          WDN0CD
     I              BZX4ST                          WDX4ST
     I              BZTMVA                          WDTMVA
     I              BZTNVA                          WDTNVA
     I              BZBLPR                          WDBLPR
     I              BZBMPR                          WDBMPR
     I              BZLRCD                          WDLRCD
     I              BZU9ST                          WDU9ST
     I              BZCMCO                          WDCMCO
     I              BZQ1CD                          WDQ1CD
     I              BZQ8CD                          WDQ8CD
     I              BZCHTM                          WDCHTM
     I              BZQZCD                          WDQZCD
     I              BZXWST                          WDXWST
     I              BZXXST                          WDXXST
     I              BZVMST                          WDVMST
     I              BZSWGH                          WDSWGH
     I              BZPPHE                          WDPPHE
     I              BZR3CD                          WDR3CD
     I              BZSDCD                          WDSDCD
     I              BZICN1                          WDICN1
     I              BZSVCD                          WDSVCD
     I              BZICN2                          WDICN2
     I              BZSWCD                          WDSWCD
     I              BZV2NB                          WDV2NB
     I              BZSXCD                          WDSXCD
     I              BZITCN                          WDITCN
     I              BZSYCD                          WDSYCD
     I              BZITC5                          WDITC5
     I              BZSZCD                          WDSZCD
     I              BZICN6                          WDICN6
     I              BZS0CD                          WDS0CD
     I              BZICN7                          WDICN7
     I              BZS1CD                          WDS1CD
     I              BZICN8                          WDICN8
     I              BZS2CD                          WDS2CD
     I              BZICN9                          WDICN9
     I              BZS3CD                          WDS3CD
     I              BZICN0                          WDICN0
     I              BZS4CD                          WDS4CD
     I              BZSFNB                          WDSFNB
     I              BZA3WG                          WDA3WG
     I              BZSJNB                          WDSJNB
     I              BZLLCD                          WDLLCD
     I              BZLMCD                          WDLMCD
     I              BZP3ST                          WDP3ST
     I              BZSKNB                          WDSKNB
     I              BZSLNB                          WDSLNB
     I              BZSMNB                          WDSMNB
     I              BZP4ST                          WDP4ST
     I              BZCFNB                          WDCFNB
     I              BZCGNB                          WDCGNB
     I              BZILNB                          WDILNB
     I              BZCHNB                          WDCHNB
     I              BZCINB                          WDCINB
     I              BZCJNB                          WDCJNB
     I              BZCMNB                          WDCMNB
     I              BZCNNB                          WDCNNB
     I              BZCRNB                          WDCRNB
     I              BZCSNB                          WDCSNB
     I              BZCVNB                          WDCVNB
     I              BZCWNB                          WDCWNB
     I              BZCXNB                          WDCXNB
     I              BZCZNB                          WDCZNB
     I              BZC0NB                          WDC0NB
     I              BZN1CD                          WDN1CD
     I              BZB4NB                          WDB4NB
     I              BZB5NB                          WDB5NB
     I              BZX5ST                          WDX5ST
     I              BZX6ST                          WDX6ST
     I              BZX7ST                          WDX7ST
     I              BZPCCT                          WDPCCT
     I              BZBDNB                          WDBDNB
     I              BZBJNB                          WDBJNB
     I              BZSUST                          WDSUST
     I              BZSVST                          WDSVST
     I              BZSYST                          WDSYST
     I              BZSZST                          WDSZST
     I              BZS1ST                          WDS1ST
     I              BZXRCD                          WDXRCD
     I              BZXTCD                          WDXTCD
     I              BZXUCD                          WDXUCD
     I              BZF5WG                          WDF5WG
     I              BZF6WG                          WDF6WG
     I              BZF7WG                          WDF7WG
     I              BZBLNB                          WDBLNB
     I              BZBNNB                          WDBNNB
     I              BZS2ST                          WDS2ST
     I              BZS4ST                          WDS4ST
     I              BZS5ST                          WDS5ST
     I              BZS6ST                          WDS6ST
     I              BZS8ST                          WDS8ST
     I              BZS9ST                          WDS9ST
     I              BZTCST                          WDTCST
     I              BZTDST                          WDTDST
     I              BZUVST                          WDUVST
     I              BZUWST                          WDUWST
     I              BZUXST                          WDUXST
     I              BZVSST                          WDVSST
     I              BZAATM                          WDAATM
     I              BZAYNA                          WDAYNA
     I              BZA0NA                          WDA0NA
     I              BZAXDT                          WDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      * Outward parameters
     IPARC        DS                              5
      * KEY : Availability Group Comnt  Retrieval index
      * I : RST Availability Group Code
     I                                        1   3 PAV4CD
      *
      * Outward parameters
     IPBRC        DS                             17
      * KEY : PS Production Adjustment  Co/CItm/Whs/Itm/PDte
      * I : RST Company Number
     I                                    P   1   20PBAIC3
      * I : RST PS Consumed Item Code
     I                                    P   3   60PBD8C7
      * I : RST Warehouse Code
     I                                        7   9 PBAJCD
      *
      * Outward parameters
     IPCRC        DS                             16
      * KEY : PS Production Detail Com  Co/Itm/Whs/Dte/Typ/Seq
      * I : RST Company Number
     I                                    P   1   20PCAIC3
      * I : RST Item Code
     I                                    P   3   60PCHGCD
      * I : RST Warehouse Code
     I                                        7   9 PCAJCD
      * I : MAP Production Date
     I                                    P  10  130PCELDT
      *
      * Outward parameters
     IPDRC        DS                             13
      * KEY : Order Detail Schedule     Co/Item/Whse/SchdDte
      * I : RST Company Number
     I                                    P   1   20PDAIC3
      * I : RST Item Code
     I                                    P   3   60PDHGCD
      * I : RST Warehouse Code
     I                                        7   9 PDAJCD
      *
      * Outward parameters
     IPERC        DS                             27
      * KEY : Order Detail              CItm/PrWhs/SSD/Itm/DD+
      * I : RST Consumed Item Code
     I                                    P   1   40PENUDT
      * I : RST Production Warehouse
     I                                        5   7 PEF6SX
      *
      * Outward parameters
     IPFRC        DS                              6
      * KEY : Company Item              Retrieval index       NV
      * I : RST Company Number
     I                                    P   1   20PFAIC3
      * I : RST Item Code
     I                                    P   3   60PFHGCD
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item Avail Group
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
      * N :  Enterprise Code 1
     I                                       12  15 P2DQCD
      * N :  Enterprise Code 2
     I                                       16  27 P2DRCD
      * N :  Salesperson Code
     I                                       28  30 P2BCCD
      * N :  System Date Format
     I                                       31  33 P2B8NA
      * N :  User Profile Name
     I                                       34  43 P2AJVN
      * N :  Allow Multi-Company
     I                                       44  44 P2I6ST
      * N :  Default Printer
     I                                       45  54 P2MPNA
      * N :  First Time Flag
     I                                       55  55 P2TAST
      * N :  Name
     I                                       56  85 P2ADTX
      * N :  System Value Alpha
     I                                       86 125 P2BXTX
      * N :  Access Denied (Y/N)
     I                                      126 126 P2WVST
     IP3PARM      DS
      * FLD: *Arrays
      * N :  PRT Printer Device
     I                                        1  10 P3WRST
      * N :  PRT Hold Output Sts
     I                                       11  14 P3WSST
      * N :  PRT Save Output Sts
     I                                       15  18 P3WTST
      * N :  PRT Number of Copies
     I                                       19  200P3DYNB
      * N :  PRT Night Queue Run Sts
     I                                       21  21 P3WUST
      * N :  PRT Night Queue
     I                                       22  31 P3BVVN
      * N :  Program name USR
     I                                       32  41 P3BMVN
      * N :  Program Name$ USR
     I                                       42  51 P3BWVN
      * N :  Display Prt Opt Pmt USR
     I                                       52  55 P3XFST
     IP4PARM      DS
      * FLD: PS Production Adjustment
      * N :  Production Date
     I                                    P   1   40P4ELDT
      * N :  PS Adjustment Quantity
     I                                    P   5   70P4PIAD
     IP5PARM      DS
      * N :  USR Item Code
     I                                    P   1   40P5DKCD
     IP6PARM      DS
      * N :  Count 2 USR
     I                                    P   1   30P6A7NX
     IP7PARM      DS
      * N :  Prod Date Alpha USR
     I                                        1   7 P7TOTX
     IP8PARM      DS
      * N :  Email Selection usr
     I                                        1   1 P8VQSX
     IP9PARM      DS
      * FLD: *Arrays
      * N :  Display Flag
     I                                        1   1 P9QKST
      * N :  Record Found USR
     I                                        2   2 P9WXST
      * N :  Status - Y or N
     I                                        3   3 P9B8ST
      * N :  Report Type Schedule  USR
     I                                        4   4 P9RYST
      * N :  Print On Schedule
     I                                        5   5 P9SVST
      * N :  Sel Value 1 USR
     I                                        6   6 P9EXSX
      * N :  Sel Value 2 USR
     I                                        7   7 P9E0SX
      * N :  Sel Value 3 USR
     I                                        8   8 P9E1SX
      * N :  Sel Value 4 USR
     I                                        9   9 P9LGSX
      * N :  Sel Value 5 USR
     I                                       10  10 P9LHSX
      * N :  Status Flag 1  Y/N
     I                                       11  11 P9Q1ST
      * N :  Qty On-Hand USR 2
     I                                    P  12  140P9MSQT
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(AGEDN-    1 256 #S0001
     I              'OTSLD) JOBD(*USRPRF)'
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Company Number Req'
      * Company Number
     I                                        1   3 ZA0001
      * Message data for 'Warehouse Invalid for Co'
      * Warehouse Code
     I                                        1   3 ZA0002
      * Company Number
     I                                        4   6 ZA0003
      * Message data for 'Warehouse not found'
      * Message data for 'PS Item Summary'
      * Qty On-Hand USR
     I                                    P   1   30ZA0004
      * Qty Remaining Prod USR
     I                                    P   4   60ZA0005
      * Qty Sched Ord 1 USR
     I                                    P   7   90ZA0006
      * Qty EOD Inv 1 USR
     I                                    P  10  120ZA0007
      * Qty Sched Ord 2 USR
     I                                    P  13  150ZA0008
      * Qty EOD Inv 2 USR
     I                                    P  16  180ZA0009
      * Qty Sched Prod 2 USR
     I                                    P  19  210ZA0010
      * Qty Sched Ord 3 USR
     I                                    P  22  240ZA0011
      * Qty EOD Inv 3 USR
     I                                    P  25  270ZA0012
      * Qty Sched Prod 3 USR
     I                                    P  28  300ZA0013
      * Qty Sched Ord 4 USR
     I                                    P  31  330ZA0014
      * Qty EOD Inv 4 USR
     I                                    P  34  360ZA0015
      * Qty Sched Prod 4 USR
     I                                    P  37  390ZA0016
      * Qty Sched Ord 5 USR
     I                                    P  40  420ZA0017
      * Qty EOD Inv 5 USR
     I                                    P  43  450ZA0018
      * Qty Sched Prod 5 USR
     I                                    P  46  480ZA0019
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0020
      * Application Code
     I                                       11  16 ZA0021
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0022
      * Application Code
     I                                       11  16 ZA0023
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * First Time Processing
      * CASE: WRK.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     Z-ADDP2AIC3    #2AIC3           Company Number
     C                     MOVELP2AJCD    #CAJCD           Warehouse Code
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     MOVEL'Y'       #CSVST           Print On Schedu
     C                     MOVEL#CSVST    P9SVST           Print On Schedu
     C                     MOVEL'A'       #CP2ST           Active Status F
     C                     MOVEL#CEXSX    P9EXSX           Sel Value 1 USR
     C                     MOVEL#CE0SX    P9E0SX           Sel Value 2 USR
     C                     MOVEL#CE1SX    P9E1SX           Sel Value 3 USR
     C                     MOVEL#CLGSX    P9LGSX           Sel Value 4 USR
     C                     MOVEL#CLHSX    P9LHSX           Sel Value 5 USR
     C                     Z-ADD##JDT     #CFFDT           USR Day 1
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 1
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CFFDT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLNSX    P      Production Day
      * CTL.USR Day 2 = CTL.USR Day 1 + CON.1 *DAYS
     C           #CFFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE1DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 2
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE1DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLOSX    P      Production Day
      * CTL.USR Day 3 = CTL.USR Day 2 + CON.1 *DAYS
     C           #CE1DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE2DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 3
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE2DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLPSX    P      Production Day
      * CTL.USR Day 4 = CTL.USR Day 3 + CON.1 *DAYS
     C           #CE2DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE3DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 4
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE3DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLQSX    P      Production Day
      * CTL.USR Day 5 = CTL.USR Day 4 + CON.1 *DAYS
     C           #CE3DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE4DT
     C                     END
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 5
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE4DT    WL0002           Post to G/L Dat
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Kill Day Status
     C                     MOVELWL0004    #CLRSX    P      Production Day
      * RTV Next Prod Date     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#CFFDT    WL0006           Post to G/L Dat
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    #CGXDT           Production Date
     C                     MOVEL'N'       WUTAST           First Time Flag
     C                     END                             *FI
      * INIT:  Availability Group
      * CASE: CTL.Availability Group Code is Blank
     C           #2V4CD    IFEQ *BLANK                     *IF
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     END                             *FI
      * Descriptions:
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
      * RTV Group Description  RT - Availability Group  * 
     C                     EXSR SDRVGN
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SERVGN
      * All/Active Items
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
      * CTL.Condition Name 10 USR = Condition name of CTL.Active Status F
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1216184   Y2LSNO  70       List number
     C                     PARM #CP2ST    W0INVL 25        Active Status F
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CIXTX    PARM           W0CNNM 25        Condition Name
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CIXTX           Condition Name
     C                     END                             *FI
      * *Set Cursor: CTL.Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD012       W0ROW0
     C                     Z-ADD005       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
      * Val Production Whs     RT - Warehouse  * 
     C                     EXSR SFRVGN
     C                     Z-ADD*ZERO     P6A7NX           Count 2 USR
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLV4CD           Availability Gr
     C                     KFLD           KLIDSQ           Item Display Se
     C                     KFLD           KLHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    KLAIC3
     C                     MOVEL#2V4CD    KLV4CD
     C                     Z-ADD#2IDSQ    KLIDSQ
     C                     Z-ADD#2HGCD    KLHGCD
     C           KPOS      SETLL@KLREHI
     C                     READ @KLREHI                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2IDSQ    WZIDSQ
     C                     MOVEL#2IDSQ    WZIDSQ           Item Display Se
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2V4CD    WZV4CD
     C                     MOVEL#2V4CD    WZV4CD           Availability Gr
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@KLREHI                  90*
     C  N82                READ @KLREHI                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,41
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    OREQ *BLANK                     Availability Gr
     C           #2IDSQ    IFNE *ZERO                      Item Display Se
     C           KLIDSQ    CABNE#2IDSQ    BB020            Item Display Se
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    IFNE *BLANK                     Availability Gr
     C           KLV4CD    CABNE#2V4CD    BB020            Availability Gr
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2V4CD    OREQ *BLANK                     Availability Gr
     C           #2IDSQ    OREQ *ZERO                      Item Display Se
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           KLHGCD    CABLT#2HGCD    BB020            Item Code
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * RST:  Company Number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Company Number is not equal to zero
      *   |- c2    : CTL.Company Number NE DB1.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AIC3    IFNE *ZERO                      *IF
     C           #2AIC3    IFNE KLAIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST:  Availability Group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Availability Group Code is NE Blank
      *   |- c2    : CTL.Availability Group Code NE DB1.Availability Grou
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2V4CD    IFNE *BLANK                     *IF
     C           #2V4CD    IFNE KLV4CD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST:  Warehouse code if entered
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * Val Item Bal Exist    RT - IC Item Balance  * 
     C                     EXSR SGRVGN
      * CASE: PAR.Record Found USR is Record Not Found
     C           P9WXST    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Prd Sch Info   PS RT - Company/Item  * 
     C                     EXSR SHRVGN
      * Output Only:  Day 1
      * CASE:
      *  - c1 OR (c2 AND c3) OR c4
      *   |- c1    : PAR.Status Flag 1  Y/N is No
      *   |- c2    : RCD.Base/Conv/Loss Item is Base
      *   |- c3    : RCD.Credit Item Status is yes
      *   |- c4    : CTL.Production Day 1 USR is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P9Q1ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           #RQZCD    IFEQ 'B'                        *IF
     C           #RVMST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           #CLNSX    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       #RLISX           Output Only 1 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       #RLISX           Output Only 1 U
     C                     END                             *FI
      * Output Only:  Day 2
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PAR.Status Flag 1  Y/N is No
      *   |- c2    : RCD.Base/Conv/Loss Item is Base
      *   |- c3    : CTL.Production Day 2 USR is no
      *   '-
     C           P9Q1ST    IFEQ 'N'                        *IF
     C           #RQZCD    OREQ 'B'                        *OR
     C           #CLOSX    OREQ 'N'                        *OR
     C                     MOVEL'N'       #RLJSX           Output Only 2 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       #RLJSX           Output Only 2 U
     C                     END                             *FI
      * Output Only:  Day 3
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PAR.Status Flag 1  Y/N is No
      *   |- c2    : RCD.Base/Conv/Loss Item is Base
      *   |- c3    : CTL.Production Day 3 USR is no
      *   '-
     C           P9Q1ST    IFEQ 'N'                        *IF
     C           #RQZCD    OREQ 'B'                        *OR
     C           #CLPSX    OREQ 'N'                        *OR
     C                     MOVEL'N'       #RLKSX           Output Only 3 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       #RLKSX           Output Only 3 U
     C                     END                             *FI
      * Output Only:  Day 4
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PAR.Status Flag 1  Y/N is No
      *   |- c2    : RCD.Base/Conv/Loss Item is Base
      *   |- c3    : CTL.Production Day 4 USR is no
      *   '-
     C           P9Q1ST    IFEQ 'N'                        *IF
     C           #RQZCD    OREQ 'B'                        *OR
     C           #CLQSX    OREQ 'N'                        *OR
     C                     MOVEL'N'       #RLLSX           Output Only 4 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       #RLLSX           Output Only 4 U
     C                     END                             *FI
      * Output Only:  Day 5
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PAR.Status Flag 1  Y/N is No
      *   |- c2    : RCD.Base/Conv/Loss Item is Base
      *   |- c3    : CTL.Production Day 5 USR is no
      *   '-
     C           P9Q1ST    IFEQ 'N'                        *IF
     C           #RQZCD    OREQ 'B'                        *OR
     C           #CLRSX    OREQ 'N'                        *OR
     C                     MOVEL'N'       #RLMSX           Output Only 5 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       #RLMSX           Output Only 5 U
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001  92       Weight Producti
     C                     Z-ADD*ZERO     WN0002  70       Pieces Producti
      *
      * Rtv Sch Item Info 5dy IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLOQT           Qty Produced US
     C                     Z-ADD*ZERO     #RLFQT           Qty Remaining P
     C                     Z-ADD*ZERO     #RLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     #RLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     #RLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     #RLHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     #RLMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLNQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RLJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     #RLRQT           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     #RLUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLTQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RLWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     #RNBQT           Qty EOD Inv 4 U
     C                     Z-ADD*ZERO     #RNHQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNDQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RM9QT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     #RNCQT           Qty EOD Inv 5 U
     C                     Z-ADD*ZERO     #RNIQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNEQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RNAQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0001           Weight Producti
     C                     Z-ADD*ZERO     WN0002           Pieces Producti
     C                     MOVEL*BLANK    #RB7ST           PS Production W
     C                     Z-ADD*ZERO     #RMSQT           Qty On-Hand USR
      * Day 1
     C                     EXSR UASUBR                     Day 1
      * Day 2
     C                     EXSR UCSUBR                     Day 2
      * Day 3
     C                     EXSR UDSUBR                     Day 3
      * Day 4
     C                     EXSR UESUBR                     Day 4
      * Day 5
     C                     EXSR UFSUBR                     Day 5
      * ***** Change Log
      * ** 03/09/2006 LJB
      * ** If par unit weight is zeros, skip the division and just
      * ** set par Qty Sched Prod 1 to zeros to prevent divide by zero er
      * *****
     C                     Z-ADD#RLFQT    #RLPQT           Qty Remaining H
     C                     Z-ADD#RLJQT    #RLQQT           Qty Prod Adj Ho
     C                     Z-ADD#RLWQT    #RLSQT           Qty Prod Adj Ho
     C                     Z-ADD#RM9QT    #RNFQT           Qty Prod Adj Ho
     C                     Z-ADD#RNAQT    #RNGQT           Qty Prod Adj Ho
      * Sel:  EOD Inv 1
      * CASE: CTL.Sel Value 1 USR is Negative
     C           #CEXSX    IFEQ '-'                        *IF
      * CASE: RCD.Qty EOD Inv 1 USR is GE Zero
     C           #RLGQT    IFGE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 1 USR is Positive
     C           #CEXSX    IFEQ '+'                        *IF
      * CASE: RCD.Qty EOD Inv 1 USR is LE Zero
     C           #RLGQT    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 1 USR is Zero
     C           #CEXSX    IFEQ '0'                        *IF
      * CASE: RCD.Qty EOD Inv 1 USR is NE Zero
     C           #RLGQT    IFNE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel:  EOD Inv 2
      * CASE: CTL.Sel Value 2 USR is Negative
     C           #CE0SX    IFEQ '-'                        *IF
      * CASE: RCD.Qty EOD Inv 2 USR is GE Zero
     C           #RLHQT    IFGE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 2 USR is Positive
     C           #CE0SX    IFEQ '+'                        *IF
      * CASE: RCD.Qty EOD Inv 2 USR is LE Zero
     C           #RLHQT    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 2 USR is Zero
     C           #CE0SX    IFEQ '0'                        *IF
      * CASE: RCD.Qty EOD Inv 2 USR is NE Zero
     C           #RLHQT    IFNE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel:  EOD Inv 3
      * CASE: CTL.Sel Value 3 USR is Negative
     C           #CE1SX    IFEQ '-'                        *IF
      * CASE: RCD.Qty EOD Inv 3 USR is GE Zero
     C           #RLRQT    IFGE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 3 USR is Positive
     C           #CE1SX    IFEQ '+'                        *IF
      * CASE: RCD.Qty EOD Inv 3 USR is LE Zero
     C           #RLRQT    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 3 USR is Zero
     C           #CE1SX    IFEQ '0'                        *IF
      * CASE: RCD.Qty EOD Inv 3 USR is NE Zero
     C           #RLRQT    IFNE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel:  EOD Inv 4
      * CASE: CTL.Sel Value 4 USR is Negative
     C           #CLGSX    IFEQ '-'                        *IF
      * CASE: RCD.Qty EOD Inv 4 USR is GE Zero
     C           #RNBQT    IFGE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 4 USR is Positive
     C           #CLGSX    IFEQ '+'                        *IF
      * CASE: RCD.Qty EOD Inv 4 USR is LE Zero
     C           #RNBQT    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 4 USR is Zero
     C           #CLGSX    IFEQ '0'                        *IF
      * CASE: RCD.Qty EOD Inv 4 USR is NE Zero
     C           #RNBQT    IFNE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel:  EOD Inv 5
      * CASE: CTL.Sel Value 5 USR is Negative
     C           #CLHSX    IFEQ '-'                        *IF
      * CASE: RCD.Qty EOD Inv 5 USR is GE Zero
     C           #RNCQT    IFGE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 5 USR is Positive
     C           #CLHSX    IFEQ '+'                        *IF
      * CASE: RCD.Qty EOD Inv 5 USR is LE Zero
     C           #RNCQT    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: CTL.Sel Value 5 USR is Zero
     C           #CLHSX    IFEQ '0'                        *IF
      * CASE: RCD.Qty EOD Inv 5 USR is NE Zero
     C           #RNCQT    IFNE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sel:  Print on Schedule
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Print On Schedule is Y/N Values
      *   |- c2    : CTL.Print On Schedule NE RCD.Print On Schedule
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CSVST    IFEQ 'N'                        *IF
     C           #CSVST    OREQ 'Y'
     C           #CSVST    IFNE #RSVST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Sel:  All/Active Items
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
      * Omt:  All Quantities = Zero (Column 1 - 5)
      * CASE: Column 1 - 3
      *  - c1 AND c2 AND c3 AND c4 AND c5 AND c6 AND c7 AND c8 AND c9
      *  -  AND c10
      *   |- c1    : RCD.Qty On-Hand USR is EQ Zero
      *   |- c2    : RCD.Qty Remaining Prod USR is EQ Zero
      *   |- c3    : RCD.Qty Sched Ord 1 USR is EQ Zero
      *   |- c4    : RCD.Qty EOD Inv 1 USR is EQ Zero
      *   |- c5    : RCD.Qty Sched Prod 2 USR is EQ Zero
      *   |- c6    : RCD.Qty Sched Ord 2 USR is EQ Zero
      *   |- c7    : RCD.Qty EOD Inv 2 USR is EQ Zero
      *   |- c8    : RCD.Qty Sched Prod 3 USR is EQ Zero
      *   |- c9    : RCD.Qty Sched Ord 3 USR is EQ Zero
      *   |- c10   : RCD.Qty EOD Inv 3 USR is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RLEQT    IFEQ *ZERO                      *IF
     C           #RLFQT    IFEQ *ZERO                      *IF
     C           #RLKQT    IFEQ *ZERO                      *IF
     C           #RLGQT    IFEQ *ZERO                      *IF
     C           #RLJQT    IFEQ *ZERO                      *IF
     C           #RLLQT    IFEQ *ZERO                      *IF
     C           #RLHQT    IFEQ *ZERO                      *IF
     C           #RLWQT    IFEQ *ZERO                      *IF
     C           #RLVQT    IFEQ *ZERO                      *IF
     C           #RLRQT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: Column 4 & 5
      *  - c5 AND c6 AND c7 AND c8 AND c9 AND c10
      *   |- c5    : RCD.Qty Sched Prod 4 USR is EQ Zero
      *   |- c6    : RCD.Qty Sched Ord 4 USR is EQ Zero
      *   |- c7    : RCD.Qty EOD Inv 4 USR is EQ Zero
      *   |- c8    : RCD.Qty Sched Prod 5 USR is EQ Zero
      *   |- c9    : RCD.Qty Sched Ord 5 USR is EQ Zero
      *   |- c10   : RCD.Qty EOD Inv 5 USR is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RM9QT    IFEQ *ZERO                      *IF
     C           #RMOQT    IFEQ *ZERO                      *IF
     C           #RNBQT    IFEQ *ZERO                      *IF
     C           #RNAQT    IFEQ *ZERO                      *IF
     C           #RMPQT    IFEQ *ZERO                      *IF
     C           #RNCQT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.Count 2 USR is Zero
     C           P6A7NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#1HGCD    P5DKCD           USR Item Code
     C                     ADD  1         P6A7NX           Count 2 USR
     C                     END                             *FI
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0006  30       Company Number
     C                     PARM #1HGCD    WQ0007  70       Item Code
     C           #RNUDT    PARM *ZERO     WQ0008  70       Component Item
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @KLREHI                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Print On Schedule
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CSVST'  IFEQ YPMTFD
      * Print On Schedule
     C                     MOVEL#CSVST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFSVST
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZFSVST
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZFSVST
     C                     ENDSL
     C                     EXFMTZESVST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFSVST    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZFSVST    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CSVST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Sel Value 1 USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CEXSX'  IFEQ YPMTFD
      * Sel Value 1 USR
     C                     MOVEL#CEXSX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFEXSX
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZFEXSX
     C           W0INVL    WHEQ '-'                        -
     C                     Z-ADD2         ZFEXSX
     C           W0INVL    WHEQ '+'                        +
     C                     Z-ADD3         ZFEXSX
     C           W0INVL    WHEQ '0'                        0
     C                     Z-ADD4         ZFEXSX
     C           W0INVL    WHEQ 'X'                        X
     C                     Z-ADD5         ZFEXSX
     C           W0INVL    WHEQ '5'                        5
     C                     Z-ADD6         ZFEXSX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD7         ZFEXSX
     C                     ENDSL
     C                     EXFMTZEEXSX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFEXSX    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZFEXSX    WHEQ 2
     C                     MOVEL'-'       W0INVL           -
     C           ZFEXSX    WHEQ 3
     C                     MOVEL'+'       W0INVL           +
     C           ZFEXSX    WHEQ 4
     C                     MOVEL'0'       W0INVL           0
     C           ZFEXSX    WHEQ 5
     C                     MOVEL'X'       W0INVL           X
     C           ZFEXSX    WHEQ 6
     C                     MOVEL'5'       W0INVL           5
     C           ZFEXSX    WHEQ 7
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CEXSX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Sel Value 2 USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CE0SX'  IFEQ YPMTFD
      * Sel Value 2 USR
     C                     MOVEL#CE0SX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFE0SX
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZFE0SX
     C           W0INVL    WHEQ '-'                        -
     C                     Z-ADD2         ZFE0SX
     C           W0INVL    WHEQ '+'                        +
     C                     Z-ADD3         ZFE0SX
     C           W0INVL    WHEQ '0'                        0
     C                     Z-ADD4         ZFE0SX
     C           W0INVL    WHEQ 'X'                        X
     C                     Z-ADD5         ZFE0SX
     C           W0INVL    WHEQ '5'                        5
     C                     Z-ADD6         ZFE0SX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD7         ZFE0SX
     C                     ENDSL
     C                     EXFMTZEE0SX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFE0SX    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZFE0SX    WHEQ 2
     C                     MOVEL'-'       W0INVL           -
     C           ZFE0SX    WHEQ 3
     C                     MOVEL'+'       W0INVL           +
     C           ZFE0SX    WHEQ 4
     C                     MOVEL'0'       W0INVL           0
     C           ZFE0SX    WHEQ 5
     C                     MOVEL'X'       W0INVL           X
     C           ZFE0SX    WHEQ 6
     C                     MOVEL'5'       W0INVL           5
     C           ZFE0SX    WHEQ 7
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CE0SX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Sel Value 3 USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CE1SX'  IFEQ YPMTFD
      * Sel Value 3 USR
     C                     MOVEL#CE1SX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFE1SX
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZFE1SX
     C           W0INVL    WHEQ '-'                        -
     C                     Z-ADD2         ZFE1SX
     C           W0INVL    WHEQ '+'                        +
     C                     Z-ADD3         ZFE1SX
     C           W0INVL    WHEQ '0'                        0
     C                     Z-ADD4         ZFE1SX
     C           W0INVL    WHEQ 'X'                        X
     C                     Z-ADD5         ZFE1SX
     C           W0INVL    WHEQ '5'                        5
     C                     Z-ADD6         ZFE1SX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD7         ZFE1SX
     C                     ENDSL
     C                     EXFMTZEE1SX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFE1SX    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZFE1SX    WHEQ 2
     C                     MOVEL'-'       W0INVL           -
     C           ZFE1SX    WHEQ 3
     C                     MOVEL'+'       W0INVL           +
     C           ZFE1SX    WHEQ 4
     C                     MOVEL'0'       W0INVL           0
     C           ZFE1SX    WHEQ 5
     C                     MOVEL'X'       W0INVL           X
     C           ZFE1SX    WHEQ 6
     C                     MOVEL'5'       W0INVL           5
     C           ZFE1SX    WHEQ 7
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CE1SX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Sel Value 4 USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CLGSX'  IFEQ YPMTFD
      * Sel Value 4 USR
     C                     MOVEL#CLGSX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFLGSX
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZFLGSX
     C           W0INVL    WHEQ '-'                        -
     C                     Z-ADD2         ZFLGSX
     C           W0INVL    WHEQ '+'                        +
     C                     Z-ADD3         ZFLGSX
     C           W0INVL    WHEQ '0'                        0
     C                     Z-ADD4         ZFLGSX
     C           W0INVL    WHEQ 'X'                        X
     C                     Z-ADD5         ZFLGSX
     C           W0INVL    WHEQ '5'                        5
     C                     Z-ADD6         ZFLGSX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD7         ZFLGSX
     C                     ENDSL
     C                     EXFMTZELGSX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFLGSX    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZFLGSX    WHEQ 2
     C                     MOVEL'-'       W0INVL           -
     C           ZFLGSX    WHEQ 3
     C                     MOVEL'+'       W0INVL           +
     C           ZFLGSX    WHEQ 4
     C                     MOVEL'0'       W0INVL           0
     C           ZFLGSX    WHEQ 5
     C                     MOVEL'X'       W0INVL           X
     C           ZFLGSX    WHEQ 6
     C                     MOVEL'5'       W0INVL           5
     C           ZFLGSX    WHEQ 7
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CLGSX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Sel Value 5 USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CLHSX'  IFEQ YPMTFD
      * Sel Value 5 USR
     C                     MOVEL#CLHSX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFLHSX
     C                     SELEC
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD1         ZFLHSX
     C           W0INVL    WHEQ '-'                        -
     C                     Z-ADD2         ZFLHSX
     C           W0INVL    WHEQ '+'                        +
     C                     Z-ADD3         ZFLHSX
     C           W0INVL    WHEQ '0'                        0
     C                     Z-ADD4         ZFLHSX
     C           W0INVL    WHEQ 'X'                        X
     C                     Z-ADD5         ZFLHSX
     C           W0INVL    WHEQ '5'                        5
     C                     Z-ADD6         ZFLHSX
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD7         ZFLHSX
     C                     ENDSL
     C                     EXFMTZELHSX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFLHSX    WHEQ 1
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C           ZFLHSX    WHEQ 2
     C                     MOVEL'-'       W0INVL           -
     C           ZFLHSX    WHEQ 3
     C                     MOVEL'+'       W0INVL           +
     C           ZFLHSX    WHEQ 4
     C                     MOVEL'0'       W0INVL           0
     C           ZFLHSX    WHEQ 5
     C                     MOVEL'X'       W0INVL           X
     C           ZFLHSX    WHEQ 6
     C                     MOVEL'5'       W0INVL           5
     C           ZFLHSX    WHEQ 7
     C                     MOVEL'1'       W0INVL           1
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CLHSX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZV4CD    CASNE#2V4CD    FBRQRL
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F4=Prompt  (Company/Warehouse/PA Group)
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Company Number
     C           W0CFL     IFEQ 'V2AIC3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0009  30       Company Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#CAJCD'                   *IF
      * SEL ShipCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PPHQSRR'              90  SEL ShipCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #CAJCD    PARM #CAJCD    WQ0010  3        Warehouse Code
     C                     PARM #2AIC3    WQ0011  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPHQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993331*
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Availability Group Code
     C           W0CFL     IFEQ '#2V4CD'                   *IF
      * Sel Avail Group       SR - Availability Group  * 
     C                     CALL 'PDDVSRR'              90  SEL Avail Group
     C                     PARM *BLANK    W0RTN   7
     C           #2V4CD    PARM #2V4CD    WQ0012  3        Availability Gr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDDVSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Val:  Company Number
      * CASE: CTL.Company Number is Equal to zero
     C           #2AIC3    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0001           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0001           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company Number Req'
     C                     MOVEL'USR2183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Val:  Warehouse Code
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     ELSE
      * CASE: *OTHERWISE
      * VAL Shipping Co WHS   RT - Warehouse  * 
     C                     EXSR SRRVGN
      * CASE: WRK.Warehouse Description is equal to blank
     C           WUF8NA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0002           Warehouse Code
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0003           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0003           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse Invalid for Co'
     C                     MOVEL'USR3404' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993331*
      *
     C                     END                             *FI
      * Rtv Warehouse/type Val RT - Warehouse  * 
     C                     EXSR SSRVGN
      * CASE: PAR.Record Found USR is Record Not Found
     C           P9WXST    IFEQ 'N'                        *IF
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Chg:  Warehouse Code
      * CASE: PAR.Warehouse Code NE CTL.Warehouse Code
     C           P2AJCD    IFNE #CAJCD                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  Print on Schedule
      * CASE: PAR.Print On Schedule NE CTL.Print On Schedule
     C           P9SVST    IFNE #CSVST                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CSVST    P9SVST           Print On Schedu
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  EOD Inv 1 Select
      * CASE: PAR.Sel Value 1 USR NE CTL.Sel Value 1 USR
     C           P9EXSX    IFNE #CEXSX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CEXSX    P9EXSX           Sel Value 1 USR
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  EOD Inv 2 Select
      * CASE: PAR.Sel Value 2 USR NE CTL.Sel Value 2 USR
     C           P9E0SX    IFNE #CE0SX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CE0SX    P9E0SX           Sel Value 2 USR
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  EOD Inv 3 Select
      * CASE: PAR.Sel Value 3 USR NE CTL.Sel Value 3 USR
     C           P9E1SX    IFNE #CE1SX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CE1SX    P9E1SX           Sel Value 3 USR
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  EOD Inv 4 Select
      * CASE: PAR.Sel Value 4 USR NE CTL.Sel Value 4 USR
     C           P9LGSX    IFNE #CLGSX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CLGSX    P9LGSX           Sel Value 4 USR
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Chg:  EOD Inv 5 Select
      * CASE: PAR.Sel Value 5 USR NE CTL.Sel Value 5 USR
     C           P9LHSX    IFNE #CLHSX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL#CLHSX    P9LHSX           Sel Value 5 USR
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * *Set Cursor: CTL.Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD012       W0ROW0
     C                     Z-ADD005       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * F5=Refresh
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F10=All/Active Items
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * CASE: CTL.Active Status Flag is Active
     C           #CP2ST    IFEQ 'A'                        *IF
     C                     MOVEL*BLANK    #CP2ST           Active Status F
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'A'       #CP2ST           Active Status F
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * F13=WW Production Hold Orders
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * WW Prod Order Hold     DF - PD Order Header  * 
     C                     CALL 'PDVLDFR'              90  WW Prod Order H
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDVLDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * F15=Edit PA Group Comment
      * CASE: CTL.*CMD key is CF15
     C           *IN15     IFEQ '1'                        *IF
      * Edt Avail Group Comnt EF - Availability Group Comnt  * 
     C                     CLEARPARC
     C                     MOVEL#2V4CD    PAV4CD    P      Availability Gr
      *
     C                     CALL 'POX8EFR'              90  Edt Avail Group
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Availabili
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POX8EFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
      * F16=WW PA
      * CASE: CTL.*CMD key is CF16
     C           *IN16     IFEQ '1'                        *IF
      * ** Pass Co# & Whse code                   09/01/2006 LJB workin
      * WW Product Availablty DF - Company Item Avail Group  * 
     C                     CALL 'PDFPDFR'              90  WW Product Avai
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0013  30       Company Number
     C                     PARM #CAJCD    WQ0014  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDFPDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993133*
     C                     END
     C                     END                             *FI
      * Add the trim and belly use new prompt screen
      * F21=Print Schedule
      * CASE: CTL.*CMD key is CF21
     C           *IN21     IFEQ '1'                        *IF
     C                     MOVEL'N'       P3WUST           PRT Night Queue
     C                     Z-ADD#CE1DT    P4ELDT           Production Date
      * Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P4ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WUV5ST           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WUV5ST           Production Type
     C                     END                             *FI
     C                     MOVEL'*YES'    P3XFST           Display Prt Opt
      * Prt Prd Schedule Rpts PV - PS Prod Item Schedule  * 
     C                     CALL 'PMAQPVR'              90  Prt Prd Schedul
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P4ELDT    WQ0015  70       Production Date
     C           #CAJCD    PARM #CAJCD    WQ0016  3        Warehouse Code
     C           P3XFST    PARM P3XFST    WQ0017  4        Display Prt Opt
     C                     PARM #2AIC3    WQ0018  30       Company Number
     C                     PARM WUV5ST    WQ0019  1        Production Type
     C                     PARM @CN,01    WQ0020 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ0021 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ0022  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ0023  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ0024  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ0025  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ0026 10        PRT Night Queue
     C                     PARM P2DNCD    WQ0027  6        Application Cod
     C                     PARM '1'       WQ0028  1        Paper Type USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAQPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993331*
     C                     END
     C                     END                             *FI
      * F23=Prt Aged not sold
      * CASE: CTL.*CMD key is CF23
     C           *IN23     IFEQ '1'                        *IF
      * PMT Prt/Sbm Opt    SHR PV - Print Options  * 
     C                     CALL 'PDKMPVR'              90  PMT Prt/Sbm Opt
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,02    WQ0029 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ0030 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ0031  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ0032  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ0033  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ0034  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ0035 10        PRT Night Queue
     C                     PARM P2DNCD    WQ0036  6        Application Cod
     C                     PARM '1'       WQ0037  1        Paper Type USR
     C           WUBDSX    PARM WUBDSX    WQ0038  4        Hold On Jobq
     C           WUBESX    PARM WUBESX    WQ0039  4        Job Log Create
     C           WUBCSX    PARM *BLANK    WQ0040  5        Hold
     C           WUY8CD    PARM *BLANK    WQ0041 17        Log
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKMPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD#2AIC3    WUAJAA           Company Number
     C                     Z-ADDP3DYNB    WUM8NB           System Value Nu
      * SBMJOB: PRT Aged not Sold     UP - Item Balance Detail  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PMGQUPC '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELWUH3TX    #SSTR     P      Return Code Usr
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDWUAJAA    #SPAK  309       Company Number
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVEL#CAJCD    #SSTR     P      Warehouse Code
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 3         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WRST    #SSTR     P      PRT Printer Dev
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 10        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WSST    #SSTR     P      PRT Hold Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3WTST    #SSTR     P      PRT Save Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     Z-ADDWUM8NB    #SPAK  309       System Value Nu
     C                     MOVEL#SPAK     #SSTR     P
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'P'       #STYP   1
     C                     PARM 15        #SLEN   50
     C                     PARM 5         #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PMGQUPC 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMGQUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
     C                     END
      * Send message 'Report has been submitted'
     C                     MOVEL'USR2720' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD1         WUHKNX           Numeral 1
      * CASE: WRK.Numeral 1             USR EQ WRK.Numeral 1
     C           WUHKNX    IFEQ WUHKNX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,41
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 2=Edit Production Adjustment
      * CASE: RCD.*SFLSEL is *Edit
     C           #1SEL     IFEQ '2'                        *IF
     C           #1SEL     OREQ ' 2'
      * Edt Prod Adjustments  DF - PS Production Adjustment  * 
     C                     CLEARPBRC
     C                     Z-ADD#1AIC3    PBAIC3           Company Number
     C                     Z-ADD#RNUDT    PBD8C7           PS Consumed Ite
     C                     MOVEL#CAJCD    PBAJCD    P      Warehouse Code
      *
     C                     CALL 'PORWDFR'              90  Edt Prod Adjust
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: PS Product
     C                     PARM #1HGCD    WQ0042  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PORWDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
      * 5=Display Item Warehouse inquiry Detail
      * CASE: RCD.*SFLSEL is Option 5
     C           #1SEL     IFEQ ' 5'                       *IF
     C           #1SEL     OREQ '5'
     C                     MOVEL'Y'       YL0011           *Initial call
      * Rtv Item Description   RT - Company/Item  * 
     C                     EXSR STRVGN
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0043  30       Company Number
     C                     PARM #1HGCD    WQ0044  70       Item Code
     C                     PARM YL0012    WQ0045 30        Description Lin
     C                     PARM #RADCD    WQ0046  2        U/M - Primary
     C                     PARM #RAWPC    WQ0047  94       Conversion Fact
     C                     PARM #RLXST    WQ0048  1        Operation Facto
     C                     PARM #RAECD    WQ0049  2        U/M - Second
     C                     PARM #RAXPC    WQ0050  94       Conversion Fact
     C                     PARM #RLYST    WQ0051  1        Operation Facto
     C                     PARM #RAFCD    WQ0052  2        U/M - Third
     C                     PARM #RAIWG    WQ0053 112       Unit Weight
     C                     PARM #RFZST    WQ0054  1        Production Date
     C                     PARM #RAVST    WQ0055  1        Catch Weight St
     C                     PARM #CAJCD    WQ0056  3        Warehouse Code
     C                     PARM #CF8NA    WQ0057 30        Warehouse Descr
     C                     PARM P2ADTX    WQ0058 30        Name
     C           YL0011    PARM YL0011    WQ0059  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
      * 7=Edit Comments
      * CASE: RCD.*SFLSEL is Option 7
     C           #1SEL     IFEQ '7'                        *IF
     C           #1SEL     OREQ ' 7'
      * Edt Prod Sched Commnt EF - PS Production Detail Com  * 
     C                     CLEARPCRC
     C                     Z-ADD#1AIC3    PCAIC3           Company Number
     C                     Z-ADD#1HGCD    PCHGCD           Item Code
     C                     MOVEL#CAJCD    PCAJCD    P      Warehouse Code
     C                     Z-ADD#CFFDT    PCELDT           Production Date
      *
     C                     CALL 'PDSNEFR'              90  Edt Prod Sched
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PCRC             KEY: PS Product
     C                     PARM P2ADTX    WQ0060 30        Name
     C                     PARM #RGENA    WQ0061 30        Description Lin
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDSNEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
      * 8=Display Item Orders
      * CASE: RCD.*SFLSEL is Option 8
     C           #1SEL     IFEQ '8'                        *IF
     C           #1SEL     OREQ ' 8'
     C                     MOVEL'Y'       YL0011           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0062  30       Company Number
     C                     PARM #1HGCD    WQ0063  70       Item Code
     C                     PARM #CFFDT    WQ0064  70       Scheduled Ship
     C                     PARM P2ADTX    WQ0065 30        Name
     C                     PARM #CAJCD    WQ0066  3        Warehouse Code
     C           YL0011    PARM YL0011    WQ0067  1        *Initial call
     C                     PARM 'FR'      WQ0068  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
      * 9=Display BOM
      * CASE: RCD.*SFLSEL is Option 9
     C           #1SEL     IFEQ '9'                        *IF
     C           #1SEL     OREQ ' 9'
      * DSP Bill of Material   ET - Company Item  * 
     C                     CALL 'PPVMETR'              90  DSP Bill of Mat
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0069  30       Company Number
     C                     PARM #1HGCD    WQ0070  70       Item Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPVMETR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * 10=Work With Item Allocation
      * CASE: RCD.*SFLSEL is Option 10
     C           #1SEL     IFEQ '10'                       *IF
      * WW Inv Allocation     DF - Order Detail Schedule  * 
     C                     CLEARPDRC
     C                     Z-ADD#1AIC3    PDAIC3           Company Number
     C                     Z-ADD#1HGCD    PDHGCD           Item Code
     C                     MOVEL#CAJCD    PDAJCD    P      Warehouse Code
      *
     C                     CALL 'POP5DFR'              90  WW Inv Allocati
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PDRC             KEY: Order Deta
     C                     PARM *ZERO     WQ0071  70       Order Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP5DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
      * 11=Work With Order Production Sched
      * CASE: RCD.*SFLSEL is Option 11
     C           #1SEL     IFEQ '11'                       *IF
      * Setup message data for message
     C                     Z-ADD#RLEQT    ZA0004           Qty On-Hand USR
     C                     Z-ADD#RLFQT    ZA0005           Qty Remaining P
     C                     Z-ADD#RLKQT    ZA0006           Qty Sched Ord 1
     C                     Z-ADD#RLGQT    ZA0007           Qty EOD Inv 1 U
     C                     Z-ADD#RLLQT    ZA0008           Qty Sched Ord 2
     C                     Z-ADD#RLHQT    ZA0009           Qty EOD Inv 2 U
     C                     Z-ADD#RLJQT    ZA0010           Qty Sched Prod
     C                     Z-ADD#RLVQT    ZA0011           Qty Sched Ord 3
     C                     Z-ADD#RLRQT    ZA0012           Qty EOD Inv 3 U
     C                     Z-ADD#RLWQT    ZA0013           Qty Sched Prod
     C                     Z-ADD#RMOQT    ZA0014           Qty Sched Ord 4
     C                     Z-ADD#RNBQT    ZA0015           Qty EOD Inv 4 U
     C                     Z-ADD#RM9QT    ZA0016           Qty Sched Prod
     C                     Z-ADD#RMPQT    ZA0017           Qty Sched Ord 5
     C                     Z-ADD#RNCQT    ZA0018           Qty EOD Inv 5 U
     C                     Z-ADD#RNAQT    ZA0019           Qty Sched Prod
      * Retrieve message PS Item Summary
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR3275' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           YL0013    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * WW OrdPrdSch Edit     DF - Order Detail  * 
     C                     CLEARPERC
     C                     Z-ADD#RNUDT    PENUDT           Consumed Item C
     C                     MOVEL#RB7ST    PEF6SX    P      Production Ware
      *
     C                     CALL 'POQJDFR'              90  WW OrdPrdSch Ed
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PERC             KEY: Order Deta
     C                     PARM #1HGCD    WQ0072  70       Item Code
     C                     PARM YL0013    WQ0073132        Message USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * 12=Display Scheduled Item Orders
      * CASE: RCD.*SFLSEL is Option 12
     C           #1SEL     IFEQ '12'                       *IF
      * Dsp Sched Item Orders DF - PD Order Detail Schedule  * 
     C                     CALL 'PDU0DFR'              90  Dsp Sched Trans
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0074  30       Company Number
     C                     PARM #1HGCD    WQ0075  70       Item Code
     C                     PARM P2ADTX    WQ0076 30        Name
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDU0DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * 13=Display Base Item Orders
      * CASE: RCD.*SFLSEL is Option 13
     C           #1SEL     IFEQ '13'                       *IF
      * Dsp Base Item Orders   RT - PD Item Bill Of Material  * 
     C                     EXSR SURVGN
     C                     END                             *FI
      * 15=Display Item Specifications
      * CASE: RCD.*SFLSEL is Option 15
     C           #1SEL     IFEQ '15'                       *IF
      * Dsp Item Specs        DR - Company Item  * 
     C                     CLEARPFRC
     C                     Z-ADD#1AIC3    PFAIC3           Company Number
     C                     Z-ADD#1HGCD    PFHGCD           Item Code
      *
     C                     CALL 'POQMD1R'              90  Dsp Item Specs
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PFRC             KEY: Company It
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQMD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C                     Z-ADD1         WUHKNX           Numeral 1
      * CASE: WRK.Numeral 1             USR EQ WRK.Numeral 1
     C           WUHKNX    IFEQ WUHKNX                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN73
     C           #RQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2I6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           #CLNSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           #CLOSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           #CLPSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           #CLQSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           #CLRSX    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @KLREHI fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDKLAIC3    #1AIC3           Company Number
     C                     MOVELKLV4CD    #1V4CD           Availability Gr
     C                     Z-ADDKLIDSQ    #1IDSQ           Item Display Se
     C                     MOVELKLUVST    #1UVST           EDI Status 1
     C                     MOVELKLUWST    #1UWST           EDI Status 2
     C                     MOVELKLUXST    #1UXST           EDI Status 3
     C                     MOVELKLVSST    #1VSST           Record Status
     C                     Z-ADDKLAATM    #1AATM           Job Time
     C                     MOVELKLAYNA    #1AYNA           User Id
     C                     MOVELKLA0NA    #1A0NA           Job Name
     C                     Z-ADDKLAXDT    #1AXDT           Job Date
     C                     Z-ADDKLHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     Z-ADD*ZERO     #RMSQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RNUDT           Consumed Item C
     C                     MOVEL*BLANK    #RB7ST           PS Production W
     C                     MOVEL*BLANK    #RDXSX           Display Flag 1
     C                     MOVEL*BLANK    #RVMST           Credit Item Sta
     C                     MOVEL*BLANK    #RQKST           Display Flag
     C                     MOVEL*BLANK    #RQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    #RPCCT           Piece Count Ite
     C                     Z-ADD*ZERO     #RBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     #RBJNB           Bags Per Unit
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     #RAWPC           Conversion Fact
     C                     MOVEL*BLANK    #RLXST           Operation Facto
     C                     MOVEL*BLANK    #RAECD           U/M - Second
     C                     Z-ADD*ZERO     #RAXPC           Conversion Fact
     C                     MOVEL*BLANK    #RLYST           Operation Facto
     C                     MOVEL*BLANK    #RAFCD           U/M - Third
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     MOVEL*BLANK    #RFZST           Production Date
     C                     MOVEL*BLANK    #RAVST           Catch Weight St
     C                     MOVEL*BLANK    #RGENA           Item Descriptio
     C                     Z-ADD*ZERO     #RLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLOQT           Qty Produced US
     C                     MOVEL*BLANK    #RLISX           Output Only 1 U
     C                     Z-ADD*ZERO     #RLPQT           Qty Remaining H
     C                     Z-ADD*ZERO     #RLMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLNQT           Qty Prod Adjust
     C                     MOVEL*BLANK    #RLJSX           Output Only 2 U
     C                     MOVEL*BLANK    #RCMAA           Shift/Priority
     C                     Z-ADD*ZERO     #RLTQT           Qty Prod Adjust
     C                     MOVEL*BLANK    #RLKSX           Output Only 3 U
     C                     Z-ADD*ZERO     #RLUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RLSQT           Qty Prod Adj Ho
     C                     Z-ADD*ZERO     #RNHQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNDQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RNFQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #RLLSX           Output Only 4 U
     C                     Z-ADD*ZERO     #RNIQT           Qty Prod Needed
     C                     Z-ADD*ZERO     #RNEQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     #RNGQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #RLMSX           Output Only 5 U
     C                     MOVEL*BLANK    #RSVST           Print On Schedu
     C                     Z-ADD*ZERO     #RLQQT           Qty Prod Adj Ho
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RLFQT           Qty Remaining P
     C                     Z-ADD*ZERO     #RLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     #RLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     #RLJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     #RLHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     #RLWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     #RLRQT           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     #RM9QT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     #RNBQT           Qty EOD Inv 4 U
     C                     Z-ADD*ZERO     #RNAQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     #RNCQT           Qty EOD Inv 5 U
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     Z-ADD*ZERO     #2IDSQ           Item Display Se
     C                     MOVEL*BLANK    #CP2ST           Active Status F
     C                     MOVEL*BLANK    #CLNSX           Production Day
     C                     MOVEL*BLANK    #CLOSX           Production Day
     C                     MOVEL*BLANK    #CLPSX           Production Day
     C                     MOVEL*BLANK    #CLQSX           Production Day
     C                     MOVEL*BLANK    #CLRSX           Production Day
     C                     Z-ADD*ZERO     #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #CAPTX           Company Name
     C                     Z-ADD*ZERO     #CGXDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCGXDT
     C                     MOVEL*BLANK    #2V4CD           Availability Gr
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    #CAJCD           Warehouse Code
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CSVST           Print On Schedu
     C                     MOVEL*BLANK    #CIXTX           Condition Name
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
      * Clear external version also
     C                     Z-ADD*ZERO     VCFFDT
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
      * Clear external version also
     C                     Z-ADD*ZERO     VCE1DT
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
      * Clear external version also
     C                     Z-ADD*ZERO     VCE2DT
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
      * Clear external version also
     C                     Z-ADD*ZERO     VCE3DT
     C                     Z-ADD*ZERO     #CE4DT           USR Day 5
      * Clear external version also
     C                     Z-ADD*ZERO     VCE4DT
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVEL*BLANK    #CEXSX           Sel Value 1 USR
     C                     MOVEL*BLANK    #CE0SX           Sel Value 2 USR
     C                     MOVEL*BLANK    #CE1SX           Sel Value 3 USR
     C                     MOVEL*BLANK    #CLGSX           Sel Value 4 USR
     C                     MOVEL*BLANK    #CLHSX           Sel Value 5 USR
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Production Date USR to display format
      * Convert date
     C           1000000   ADD  #CGXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCGXDT
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  #CFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  #CE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  #CE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  #CE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  #CE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE4DT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Kill/Prod Day Sts RT - Calendar  * Day 1
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0001    AFAIC3           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSA     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Kill Day Status
     C                     MOVEL*BLANK    WL0004           Production Day
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAFV9ST    WL0003           Kill Day Status
     C                     MOVELAFWAST    WL0004           Production Day
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Next Prod Date     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSB01           Company Number
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
      * Setup key
     C                     Z-ADDWL0005    WQSB01           Company Number
     C                     Z-ADDWL0006    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSB     SETLL@AFREBE                    *
     C           KRSSB     READE@AFREBE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           Production Date
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Plant Date of Last Order EQ PAR.Plant Date of Last Orde
     C           AFBCDT    IFEQ WL0006                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Production Day Status is yes
     C           AFWAST    IFEQ 'Y'                        *IF
     C                     Z-ADDAFBCDT    WL0007           Production Date
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAPTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #CAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Group Description  RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL#2V4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSD     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    WUWPST           Warehouse Type
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    #CF8NA           Warehouse Descr
     C                     MOVELADVHST    #CVHST           Lot Tracking Fl
     C                     MOVELADWPST    WUWPST           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Val Production Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAOCD    WQSF01           Production Ware
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Production Ware
      * Setup key
     C                     MOVEL#CAJCD    WQSF01           Production Ware
      * Establish starting position
     C           KRSSF     SETLL@ADREYH                    *
     C           KRSSF     READE@ADREYH                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P9Q1ST           Record Found US
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       P9Q1ST           Record Found US
     C                     GOTO SFEXIT                     *QUIT
     C           KRSSF     READE@ADREYH                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Val Item Bal Exist    RT - IC Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    B0AIC3           Company Number
     C                     Z-ADD#1HGCD    B0HGCD           Item Code
     C                     MOVEL#CAJCD    B0AJCD           Warehouse Code
      * Establish starting position
     C           KRSSG     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P9WXST           Record Found US
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       P9WXST           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSH     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RGENA           Description Lin
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     Z-ADD*ZERO     WURINB           Item Structure
     C                     Z-ADD*ZERO     WURHNB           Item Structure
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     MOVEL*BLANK    WUQ1CD           Default Warehou
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     MOVEL*BLANK    #RQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    WUXWST           Variety/Rendere
     C                     MOVEL*BLANK    #RVMST           Credit Item Sta
     C                     Z-ADD*ZERO     WUSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WUPPHE           Pieces Per Head
     C                     MOVEL*BLANK    WUR3CD           Department Code
     C                     MOVEL*BLANK    WUSDCD           Group for Packa
     C                     MOVEL*BLANK    WUX5ST           Seconds Item
     C                     MOVEL*BLANK    #RPCCT           Piece Count Ite
     C                     Z-ADD*ZERO     #RBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     #RBJNB           Bags Per Unit
     C                     MOVEL*BLANK    WUSUST           Export/Domestic
     C                     MOVEL*BLANK    #RSVST           Print On Schedu
     C                     MOVEL*BLANK    WUSYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    WUSZST           Fresh Sched As
     C                     MOVEL*BLANK    WUS1ST           Frozen Inv Allo
     C                     MOVEL*BLANK    WUXRCD           Primal Group Co
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    #RGENA           Description Lin
     C                     MOVELBZADCD    #RADCD           U/M - Primary
     C                     Z-ADDBZAIWG    #RAIWG           Unit Weight
     C                     Z-ADDBZRINB    WURINB           Item Structure
     C                     Z-ADDBZRHNB    WURHNB           Item Structure
     C                     Z-ADDBZRGNB    WURGNB           Item Structure
     C                     MOVELBZN0CD    WUN0CD           Item Type Code
     C                     MOVELBZQ1CD    WUQ1CD           Default Warehou
     C                     Z-ADDBZCHTM    #RCHTM           Fresh Chilling
     C                     MOVELBZQZCD    #RQZCD           Base/Conv/Loss
     C                     MOVELBZXWST    WUXWST           Variety/Rendere
     C                     MOVELBZVMST    #RVMST           Credit Item Sta
     C                     Z-ADDBZSWGH    WUSWGH           Std Weight/Head
     C                     Z-ADDBZPPHE    WUPPHE           Pieces Per Head
     C                     MOVELBZR3CD    WUR3CD           Department Code
     C                     MOVELBZSDCD    WUSDCD           Group for Packa
     C                     MOVELBZX5ST    WUX5ST           Seconds Item
     C                     MOVELBZPCCT    #RPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    #RBDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    #RBJNB           Bags Per Unit
     C                     MOVELBZSUST    WUSUST           Export/Domestic
     C                     MOVELBZSVST    #RSVST           Print On Schedu
     C                     MOVELBZSYST    WUSYST           Fresh Inv Alloc
     C                     MOVELBZSZST    WUSZST           Fresh Sched As
     C                     MOVELBZS1ST    WUS1ST           Frozen Inv Allo
     C                     MOVELBZXRCD    WUXRCD           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSI     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0002           Lot Tracking Fl
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBVHST    YL0002           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Current/Aged 5dys RT - Item Balance Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0003           Inv Current
     C                     Z-ADD*ZERO     YL0004           Inv Aged
     C                     Z-ADD*ZERO     YL0005           Not Used Qty
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1AIC3    WQSJ01           Company Number
     C           *LIKE     DEFN B1HGCD    WQSJ02           Item Code
     C           *LIKE     DEFN B1AJCD    WQSJ03           Warehouse Code
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Item Code
     C                     KFLD           WQSJ03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSJ01           Company Number
     C                     Z-ADD#1HGCD    WQSJ02           Item Code
     C                     MOVEL#CAJCD    WQSJ03           Warehouse Code
      * Establish starting position
     C           KRSSJ     SETLLCAB1RL4                    *
     C           KRSSJ     READECAB1RL4                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CLC Age Code #ofDays  XF - Item Balance Detail  * 
     C                     CALL 'PNO6XFR'              90  CLC Age Code #o
     C                     PARM *BLANK    W0RTN   7
     C                     PARM B1ELDT    WQ0001  70       Production Date
     C                     PARM B1AJCD    WQ0002  3        Warehouse Code
     C                     PARM B1AIC3    WQ0003  30       Company Number
     C                     PARM B1HGCD    WQ0004  70       Item Code
     C           YL0006    PARM *ZERO     WQ0005  40       @Number of Days
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO6XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: LCL.@Number of Days to Age is 5 day to 121 days & over
     C           YL0006    IFGE 5                          *IF
     C           YL0006    ANDLE9999
      * Rtv Inv Allocated-Dy  RT - Order Detail Sched-Inv  * 
     C                     EXSR SKRVGN
     C                     ADD  YL0007    YL0004           Inv Aged
      * Aged qty thats not usable
      * Compute:Aged qty not used
      * PAR.Not Used Qty =
      *    *COMPUTE (x1 - x2 +x3)
      * x1    : DB1.Quantity on Hand - U/M1
      * -     : PGM.*Synon (17,7) work field
      * x2    : LCL.OD Quantity Inv Sched
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Not Used Qty
     C           B1ARQT    SUB  YL0007    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  YL0005    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    YL0005           Not Used Qty
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  B1ARQT    YL0003           Inv Current
     C                     END                             *FI
     C           KRSSJ     READECAB1RL4                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Inv Allocated-Dy  RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0007           OD Quantity Inv
      * Declare restrictor key work fields
     C           *LIKE     DEFN B5AIC3    WQSK01           Company Number
     C           *LIKE     DEFN B5HGCD    WQSK02           Item Code
     C           *LIKE     DEFN B5AJCD    WQSK03           Warehouse Code
     C           *LIKE     DEFN B5JGDT    WQSK04           OD Production D
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
     C                     KFLD           WQSK04           OD Production D
      * Setup key
     C                     Z-ADDB1AIC3    WQSK01           Company Number
     C                     Z-ADDB1HGCD    WQSK02           Item Code
     C                     MOVELB1AJCD    WQSK03           Warehouse Code
     C                     Z-ADDB1ELDT    WQSK04           OD Production D
      * Establish starting position
     C           KRSSK     SETLL@B5CPM5                    *
     C           KRSSK     READE@B5CPM5                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DOC: 05/03/07 Change Log
     C                     EXSR UBSUBR                     DOC: 05/03/07 C
      * RTV Last Event Code    RT - Order Events  * 
     C                     EXSR SLRVGN
      * CASE: LCL.Event Code is GE than Shipped
     C           YL0009    IFGE '04'                       *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  B5IUQT    YL0007           OD Quantity Inv
     C                     END                             *FI
     C           KRSSK     READE@B5CPM5                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Last Event Code    RT - Order Events  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN EYAIC3    WQSL01           Company Number
     C           *LIKE     DEFN EYC4NB    WQSL02           Order Number
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Order Number
      * Setup key
     C                     Z-ADDB5AIC3    WQSL01           Company Number
     C                     Z-ADDB5C4NB    WQSL02           Order Number
      * Establish starting position
     C           KRSSL     SETLL@EYCPY2                    *
     C           KRSSL     READE@EYCPY2                  90*
      * Data record not found
     C   90                MOVEL'USR1074' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDEYQ2NB    YL0008           Event Number
     C                     MOVELEYJPCD    YL0009           Event Code
     C           KRSSL     READE@EYCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           I8AIC3           Company Number
     C                     KFLD           I8V5ST           Production Type
     C                     KFLD           I8ELDT           Production Date
     C                     KFLD           I8HGCD           Item Code
     C                     KFLD           I8AJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0008    I8AIC3           Company Number
     C                     MOVELWL0009    I8V5ST           Production Type
     C                     Z-ADDWL0010    I8ELDT           Production Date
     C                     Z-ADDWL0011    I8HGCD           Item Code
     C                     MOVELWL0012    I8AJCD           Warehouse Code
      * Establish starting position
     C           KRSSM     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0013           Weight Producti
     C                     Z-ADD*ZERO     WL0014           Pieces Producti
     C                     MOVEL*BLANK    WL0015           PS Production W
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           I8DXWG    ADD  I8D1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8WTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8GAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0013           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  I8BPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0014           Pieces Producti
     C                     MOVELI8B7ST    WL0015           PS Production W
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Actual Production RT - IC Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFDWG           Production Weig
     C                     Z-ADD*ZERO     #RLOQT           Production Quan
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSN01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSN02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSN03           Warehouse Code
     C           *LIKE     DEFN B7ELDT    WQSN04           Production Date
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Item Code
     C                     KFLD           WQSN03           Warehouse Code
     C                     KFLD           WQSN04           Production Date
      * Setup key
     C                     Z-ADD#1AIC3    WQSN01           Company Number
     C                     Z-ADD#1HGCD    WQSN02           Item Code
     C                     MOVEL#CAJCD    WQSN03           Warehouse Code
     C                     Z-ADD#CFFDT    WQSN04           Production Date
      * Establish starting position
     C           KRSSN     SETLL@B7CPGM                    *
     C           KRSSN     READE@B7CPGM                  90*
      * Data record not found
     C   90                MOVEL'USR0344' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B7AHWG    WUFDWG           Production Weig
     C                     ADD  B7A5QT    #RLOQT           Production Quan
     C           KRSSN     READE@B7CPGM                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUEEWG           Weight Schedule
     C                     Z-ADD*ZERO     #RLKQT           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSO01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSO02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSO03           Warehouse Code
      * Define keylist
     C           KPSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSO01           Company Number
     C                     Z-ADD#1HGCD    WQSO02           Item Code
     C                     MOVEL#CAJCD    WQSO03           Warehouse Code
     C                     Z-ADD#CFFDT    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSO     SETLL@BGWKKG                    *
     C           KRSSO     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0016           Company Number
     C                     Z-ADDOMC4NB    WL0017           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0018    WUGWST    P      Header Status
     C                     MOVELWL0019    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           'Y'       IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  OMAUWG    WUEEWG           Weight Schedule
     C                     ADD  OMCCQT    #RLKQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  OMD0WG    WUEEWG           Weight Schedule
     C                     ADD  OMAVQT    #RLKQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSO     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0016    BEAIC3           Company Number
     C                     Z-ADDWL0017    BEC4NB           Order Number
      * Establish starting position
     C           KRSSP     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0018           Header Status
     C                     MOVELBEOBST    WL0019           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0024           Weight Schedule
     C                     Z-ADD*ZERO     WL0025           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSQ01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSQ02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSQ03           Warehouse Code
     C           *LIKE     DEFN OMAODT    WQSQ04           Scheduled Ship
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Item Code
     C                     KFLD           WQSQ03           Warehouse Code
     C                     KFLD           WQSQ04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0020    WQSQ01           Company Number
     C                     Z-ADDWL0021    WQSQ02           Item Code
     C                     MOVELWL0022    WQSQ03           Warehouse Code
     C                     Z-ADDWL0023    WQSQ04           Scheduled Ship
      * Establish starting position
     C           KRSSQ     SETLL@BGWKKG                    *
     C           KRSSQ     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0016           Company Number
     C                     Z-ADDOMC4NB    WL0017           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0018    WUGWST    P      Header Status
     C                     MOVELWL0019    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0026    IFEQ 'S'                        *IF
     C                     ADD  OMAUWG    WL0024           Weight Schedule
     C                     ADD  OMCCQT    WL0025           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0026    IFEQ 'O'                        *IF
     C                     ADD  OMD0WG    WL0024           Weight Schedule
     C                     ADD  OMAVQT    WL0025           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSQ     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * VAL Shipping Co WHS   RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCBWC3    WQSR01           Shipping Compan
     C           *LIKE     DEFN WCAJCD    WQSR02           Warehouse Code
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Shipping Compan
     C                     KFLD           WQSR02           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSR01           Shipping Compan
     C                     MOVEL#CAJCD    WQSR02           Warehouse Code
      * Establish starting position
     C           KRSSR     SETLL@ADREWA                    *
     C           KRSSR     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUF8NA           Warehouse Descr
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCF8NA    WUF8NA           Warehouse Descr
     C           KRSSR     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Warehouse/type Val RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSS     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P9WXST           Record Found US
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       P9WXST           Record Found US
     C                     MOVELADWPST    WUWPST           Warehouse Type
     C                     GOTO SSEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDHGCD    WQST01           Item Code
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           Item Code
      * Setup key
     C                     Z-ADD#1HGCD    WQST01           Item Code
      * Establish starting position
     C           KRSST     SETLL@BZRED0                    *
     C           KRSST     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0012           Description Lin
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWDAVNA    YL0012           Description Lin
     C           KRSST     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Dsp Base Item Orders   RT - PD Item Bill Of Material  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN IOAIC3    WQSU01           Company Number
     C           *LIKE     DEFN IOHGCD    WQSU02           Item Code
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           Company Number
     C                     KFLD           WQSU02           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSU01           Company Number
     C                     Z-ADD#1HGCD    WQSU02           Item Code
      * Establish starting position
     C           KRSSU     SETLL@IOREYG                    *
     C           KRSSU     READE@IOREYG                  90*
      * Data record not found
     C   90                MOVEL'USR1679' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Dsp Base Item Orders  DF - PD Order Detail  * 
     C                     CALL 'PDU3DFR'              90  Dsp Base Item O
     C                     PARM *BLANK    W0RTN   7
     C                     PARM IOAIC3    WQ0077  30       Company Number
     C                     PARM IOC9NB    WQ0078  70       Item Code
     C                     PARM #CAJCD    WQ0079  3        Warehouse Code
     C                     PARM IOHGCD    WQ0080  70       Item Code Detai
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDU3DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C           KRSSU     READE@IOREYG                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0003    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSV     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0014           Company Number
     C                     MOVELDRBUVN    WN0004           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0027    DTAJVN           User Profile Na
     C                     MOVELWL0028    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSW     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0029           Company Number
     C                     MOVELDTAJCD    WL0030           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSX01           Application Cod
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WQSX01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSX01           Application Cod
     C                     MOVEL'P/S'     WQSX01           Application Cod
      * Establish starting position
     C           KRSSX     SETLL@DNRESF                    *
     C           KRSSX     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SYRVGN
     C                     END                             *FI
     C           KRSSX     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSY01           Application Cod
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSY01           Application Cod
      * Establish starting position
     C           KRSSY     SETLL@DNRESF                    *
     C           KRSSY     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SYEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSY     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Day 1
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
     C                     EXSR SIRVGN
      * *****
      * Include aged>=F if orders are sched. FP1090 per STEVE BURKE 05/03
      * Rtv Current/Aged 5dys RT - Item Balance Detail  * 
     C                     EXSR SJRVGN
     C                     Z-ADDYL0003    #RMSQT           Qty On-Hand USR
     C           #RMSQT    ADD  YL0004    #RLEQT           Qty On-Hand USR
      * *****
      * If inventory qty is less than zero then make zero
      * CASE: PAR.Qty On-Hand USR is LT Zero
     C           #RLEQT    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     END                             *FI
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     MOVEL'S'       WL0009    P      Production Type
     C                     Z-ADD#CFFDT    WL0010           Production Date
     C                     Z-ADD#1HGCD    WL0011           Item Code
     C                     MOVEL#CAJCD    WL0012    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    WN0001           Weight Producti
     C                     Z-ADDWL0014    WN0002           Pieces Producti
     C                     MOVELWL0015    YL0010    P      PS Production W
      * Shift/Priority
      * CASE: PAR.USR Day 1 EQ PAR.Production Date USR
     C           #CFFDT    IFEQ #CGXDT                     *IF
     C                     MOVELYL0010    #RB7ST           PS Production W
     C                     END                             *FI
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           #RPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 1 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           #RBDNB    MULT #RBJNB    W0WJ01           *Synon (15,0) w
     C           WN0002    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RLIQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wgt=0, skip the divide, default Qty Sched Prod=0  LJB
      * CASE: PAR.Unit Weight is Not equal zero
     C           #RAIWG    IFNE *ZERO                      *IF
     C           WN0001    DIV  #RAIWG    #RLIQT    H      Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLIQT           Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Actual Production RT - IC Transaction Detail  * 
     C                     EXSR SNRVGN
      * Remaining to Produce Quantity
      * CASE: PAR.Qty Sched Prod 1 USR GT PAR.Qty Produced USR
     C           #RLIQT    IFGT #RLOQT                     *IF
     C           #RLIQT    SUB  #RLOQT    #RLFQT           Qty Remaining P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLFQT           Qty Remaining P
     C                     END                             *FI
      * Rtv sched qty and wt, which is what is was doing FP1054 4/15/09
      * Rtv Sched Ship ALL    RT - Order Detail  * 
     C                     EXSR SORVGN
      * EOD Inventory
      * PAR.Qty EOD Inv 1 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty On-Hand USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Remaining Prod USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Qty Sched Ord 1 USR
     C           #RLEQT    ADD  #RLFQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  #RLKQT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RLGQT           Qty EOD Inv 1 U
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC: 05/03/07 Change Log
      *================================================================
      * 05/03/07 New RTV to see if aged product is allocated to orders
      * 05/04/07 If order is shipped, dont add to par                   F
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Day 2
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     MOVEL'P'       WL0009    P      Production Type
     C                     Z-ADD#CE1DT    WL0010           Production Date
     C                     Z-ADD#1HGCD    WL0011           Item Code
     C                     MOVEL#CAJCD    WL0012    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    WN0001           Weight Producti
     C                     Z-ADDWL0014    WN0002           Pieces Producti
     C                     MOVELWL0015    YL0010    P      PS Production W
      * Shift/Priority
      * CASE: PAR.USR Day 2 EQ PAR.Production Date USR
     C           #CE1DT    IFEQ #CGXDT                     *IF
     C                     MOVELYL0010    #RB7ST           PS Production W
     C                     END                             *FI
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           #RPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 2 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           #RBDNB    MULT #RBJNB    W0WJ01           *Synon (15,0) w
     C           WN0002    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RLJQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wgt=0, skip the divide, default Qty Sched Prod=0
      * CASE: PAR.Unit Weight is Not equal zero
     C           #RAIWG    IFNE *ZERO                      *IF
     C           WN0001    DIV  #RAIWG    #RLJQT    H      Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLJQT           Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           Company Number
     C                     Z-ADD#1HGCD    WL0021           Item Code
     C                     MOVEL#CAJCD    WL0022    P      Warehouse Code
     C                     Z-ADD#CE1DT    WL0023           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0024           Weight Schedule
     C                     Z-ADD#RLLQT    WL0025           Quantity Schedu
     C                     MOVEL'S'       WL0026    P      Ord/Sch Sts USR
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    WUEEWG           Weight Schedule
     C                     Z-ADDWL0025    #RLLQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 2 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 1 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 2 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 2 USR
     C           #RLGQT    ADD  #RLJQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  #RLLQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RLHQT           Qty EOD Inv 2 U
      * CASE: PAR.Qty EOD Inv 2 USR is LT Zero
     C           #RLHQT    IFLT *ZERO                      *IF
     C           #RLHQT    MULT -1        #RLMQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLMQT           Qty Prod Needed
     C                     END                             *FI
     C           #RLJQT    ADD  #RLMQT    #RLNQT           Qty Prod Adjust
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Day 3
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     MOVEL'P'       WL0009    P      Production Type
     C                     Z-ADD#CE2DT    WL0010           Production Date
     C                     Z-ADD#1HGCD    WL0011           Item Code
     C                     MOVEL#CAJCD    WL0012    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    WN0001           Weight Producti
     C                     Z-ADDWL0014    WN0002           Pieces Producti
     C                     MOVELWL0015    YL0010    P      PS Production W
      * Shift/Priority
      * CASE: PAR.USR Day 3 EQ PAR.Production Date USR
     C           #CE2DT    IFEQ #CGXDT                     *IF
     C                     MOVELYL0010    #RB7ST           PS Production W
     C                     END                             *FI
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           #RPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 3 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           #RBDNB    MULT #RBJNB    W0WJ01           *Synon (15,0) w
     C           WN0002    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RLWQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wgt=0, skip the divide, default Qty Sched Prod=0    LJ
      * CASE: PAR.Unit Weight is Not equal zero
     C           #RAIWG    IFNE *ZERO                      *IF
     C           WN0001    DIV  #RAIWG    #RLWQT    H      Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLWQT           Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           Company Number
     C                     Z-ADD#1HGCD    WL0021           Item Code
     C                     MOVEL#CAJCD    WL0022    P      Warehouse Code
     C                     Z-ADD#CE2DT    WL0023           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0024           Weight Schedule
     C                     Z-ADD#RLVQT    WL0025           Quantity Schedu
     C                     MOVEL'S'       WL0026    P      Ord/Sch Sts USR
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    WUEEWG           Weight Schedule
     C                     Z-ADDWL0025    #RLVQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 3 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 2 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 3 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 3 USR
     C           #RLHQT    ADD  #RLWQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  #RLVQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RLRQT           Qty EOD Inv 3 U
      * CASE: PAR.Qty EOD Inv 3 USR is LT Zero
     C           #RLRQT    IFLT *ZERO                      *IF
     C           #RLRQT    MULT -1        #RLUQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RLUQT           Qty Prod Needed
     C                     END                             *FI
     C           #RLWQT    ADD  #RLUQT    #RLTQT           Qty Prod Adjust
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Day 4
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     MOVEL'P'       WL0009    P      Production Type
     C                     Z-ADD#CE3DT    WL0010           Production Date
     C                     Z-ADD#1HGCD    WL0011           Item Code
     C                     MOVEL#CAJCD    WL0012    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    WN0001           Weight Producti
     C                     Z-ADDWL0014    WN0002           Pieces Producti
     C                     MOVELWL0015    YL0010    P      PS Production W
      * Shift/Priority
      * CASE: PAR.USR Day 4 EQ PAR.Production Date USR
     C           #CE3DT    IFEQ #CGXDT                     *IF
     C                     MOVELYL0010    #RB7ST           PS Production W
     C                     END                             *FI
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           #RPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 4 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           #RBDNB    MULT #RBJNB    W0WJ01           *Synon (15,0) w
     C           WN0002    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RM9QT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wgt=0, skip the divide, default Qty Sched Prod=0    LJ
      * CASE: PAR.Unit Weight is Not equal zero
     C           #RAIWG    IFNE *ZERO                      *IF
     C           WN0001    DIV  #RAIWG    #RM9QT    H      Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RM9QT           Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           Company Number
     C                     Z-ADD#1HGCD    WL0021           Item Code
     C                     MOVEL#CAJCD    WL0022    P      Warehouse Code
     C                     Z-ADD#CE3DT    WL0023           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0024           Weight Schedule
     C                     Z-ADD#RMOQT    WL0025           Quantity Schedu
     C                     MOVEL'S'       WL0026    P      Ord/Sch Sts USR
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    WUEEWG           Weight Schedule
     C                     Z-ADDWL0025    #RMOQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 4 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 3 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 4 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 4 USR
     C           #RLRQT    ADD  #RM9QT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  #RMOQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RNBQT           Qty EOD Inv 4 U
      * CASE: PAR.Qty EOD Inv 4 USR is LT Zero
     C           #RNBQT    IFLT *ZERO                      *IF
     C           #RNBQT    MULT -1        #RNHQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RNHQT           Qty Prod Needed
     C                     END                             *FI
     C           #RM9QT    ADD  #RNHQT    #RNDQT           Qty Prod Adjust
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Day 5
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0008           Company Number
     C                     MOVEL'P'       WL0009    P      Production Type
     C                     Z-ADD#CE4DT    WL0010           Production Date
     C                     Z-ADD#1HGCD    WL0011           Item Code
     C                     MOVEL#CAJCD    WL0012    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0013    WN0001           Weight Producti
     C                     Z-ADDWL0014    WN0002           Pieces Producti
     C                     MOVELWL0015    YL0010    P      PS Production W
      * Shift/Priority
      * CASE: PAR.USR Day 5 EQ PAR.Production Date USR
     C           #CE4DT    IFEQ #CGXDT                     *IF
     C                     MOVELYL0010    #RB7ST           PS Production W
     C                     END                             *FI
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           #RPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 5 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           #RBDNB    MULT #RBJNB    W0WJ01           *Synon (15,0) w
     C           WN0002    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RNAQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
      * ** If unit wgt=0, skip the divide, default Qty Sched Prod=0  LJB
      * CASE: PAR.Unit Weight is Not equal zero
     C           #RAIWG    IFNE *ZERO                      *IF
     C           WN0001    DIV  #RAIWG    #RNAQT    H      Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RNAQT           Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0020           Company Number
     C                     Z-ADD#1HGCD    WL0021           Item Code
     C                     MOVEL#CAJCD    WL0022    P      Warehouse Code
     C                     Z-ADD#CE4DT    WL0023           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0024           Weight Schedule
     C                     Z-ADD#RMPQT    WL0025           Quantity Schedu
     C                     MOVEL'S'       WL0026    P      Ord/Sch Sts USR
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    WUEEWG           Weight Schedule
     C                     Z-ADDWL0025    #RMPQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 5 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 4 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 5 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 5 USR
     C           #RNBQT    ADD  #RNAQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  #RMPQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RNCQT           Qty EOD Inv 5 U
      * CASE: PAR.Qty EOD Inv 5 USR is LT Zero
     C           #RNCQT    IFLT *ZERO                      *IF
     C           #RNCQT    MULT -1        #RNIQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #RNIQT           Qty Prod Needed
     C                     END                             *FI
     C           #RNAQT    ADD  #RNIQT    #RNEQT           Qty Prod Adjust
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * ***** Change Log
      *================================================================
      * ** 02/26/2009 SLM FP1054 - Remove * out Prt Prd Schedule      PV
      * ** 01/26/2009 RMC FP1054 - shift/priority name chg to PS PRoducti
      * **  Warehouse and not updated on this screen
      * ** 11/21/2008 slm e00243
      * ** new trim * belly reports being added to the f21
      * ** 04/14/2008 LJB FP1235
      * ** Change hardcoded program name to use variables from prompt scr
      * ** Add option to email the production schedule
      * ** 04/03/2008 LJB FP1235
      * ** Changed parms for Print Production Schedule to call
      * ** the Make Sheet with Variance report
      * ** 03/09/2006 LJB
      * ** Change routine: Rtv Prd Sch Info   PS RT in User:Init SF from
      * ** DBF to check for Unit Weight = Zeros. If it is, then skip the
      * ** division and just set production qty 1-5 to zeros, as needed.
      * ** 08/31/2006 RMC PFS019  print new prod sched pla9pfr
      * ** 09/14/2006 RMC PFS019  put pgm name in print sched prompt
      * ** 09/01/2006 LJB L60831A  Pass Co# & Whse code to the
      * **    Product Availability program
      * ** 04/25/2007 RMC FP1090 Dsp Alloc Inv Qty in orig On Hand Usr fi
      * **    dsp On Hand in new On Hand Usr 2 field
      * **    Did this way so the calcs across will still use the Qty OnH
      * **    Chgd in : Rtv Sch Item Info 5dy IF - PS Prod Item Schedule
      * ** 05/25/07 DLY029R JRB Changed Co Num from hard coded to RCD
      * ** in 9=Edit BOM
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03328
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  13        W0CSRR  50
     C           03328     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD13        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDEQ076
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CSVST'  YPMTFD           Print On Schedu
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ033
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CEXSX'  YPMTFD           Sel Value 1 USR
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ054
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CE0SX'  YPMTFD           Sel Value 2 USR
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ075
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CE1SX'  YPMTFD           Sel Value 3 USR
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ096
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CLGSX'  YPMTFD           Sel Value 4 USR
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ117
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CLHSX'  YPMTFD           Sel Value 5 USR
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P2AIC3           Company Number
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2DQCD           Enterprise Code
     C                     MOVEL*BLANK    P2DRCD           Enterprise Code
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     MOVEL*BLANK    P2ADTX           Name
     C                     MOVEL*BLANK    P2BXTX           System Value Al
     C                     MOVEL*BLANK    P2WVST           Access Denied (
     C                     MOVEL*BLANK    P3WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P3WSST           PRT Hold Output
     C                     MOVEL*BLANK    P3WTST           PRT Save Output
     C                     Z-ADD*ZERO     P3DYNB           PRT Number of C
     C                     MOVEL*BLANK    P3WUST           PRT Night Queue
     C                     MOVEL*BLANK    P3BVVN           PRT Night Queue
     C                     MOVEL*BLANK    P3BMVN           Program name US
     C                     MOVEL*BLANK    P3BWVN           Program Name$ U
     C                     MOVEL*BLANK    P3XFST           Display Prt Opt
     C                     Z-ADD*ZERO     P4ELDT           Production Date
     C                     Z-ADD*ZERO     P4PIAD           PS Adjustment Q
     C                     Z-ADD*ZERO     P5DKCD           USR Item Code
     C                     Z-ADD*ZERO     P6A7NX           Count 2 USR
     C                     MOVEL*BLANK    P7TOTX           Prod Date Alpha
     C                     MOVEL*BLANK    P8VQSX           Email Selection
     C                     MOVEL*BLANK    P9QKST           Display Flag
     C                     MOVEL*BLANK    P9WXST           Record Found US
     C                     MOVEL*BLANK    P9B8ST           Status - Y or N
     C                     MOVEL*BLANK    P9RYST           Report Type Sch
     C                     MOVEL*BLANK    P9SVST           Print On Schedu
     C                     MOVEL*BLANK    P9EXSX           Sel Value 1 USR
     C                     MOVEL*BLANK    P9E0SX           Sel Value 2 USR
     C                     MOVEL*BLANK    P9E1SX           Sel Value 3 USR
     C                     MOVEL*BLANK    P9LGSX           Sel Value 4 USR
     C                     MOVEL*BLANK    P9LHSX           Sel Value 5 USR
     C                     MOVEL*BLANK    P9Q1ST           Status Flag 1
     C                     Z-ADD*ZERO     P9MSQT           Qty On-Hand USR
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WABVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Export/Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Define work field Production Weight USR
     C                     Z-ADD*ZERO     WUFDWG  92
      * Define work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     WUEEWG 112
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Warehouse Description
     C                     MOVEL*BLANK    WUF8NA 30
      * Define work field Production Type
     C                     MOVEL*BLANK    WUV5ST  1
      * Define work field Hold On Jobq
     C                     MOVEL*BLANK    WUBDSX  4
      * Define work field Job Log Create
     C                     MOVEL*BLANK    WUBESX  4
      * Define work field Hold
     C                     MOVEL*BLANK    WUBCSX  5
      * Define work field Log
     C                     MOVEL*BLANK    WUY8CD 17
      * Define work field Company Number Pass   USR
     C                     Z-ADD*ZERO     WUAJAA 155
      * Define work field System Value Numeric
     C                     Z-ADD*ZERO     WUM8NB 155
      * Define work field Return Code Usr
     C                     MOVEL*BLANK    WUH3TX  7
      * Define work field Numeral 1             USR
     C                     Z-ADD*ZERO     WUHKNX  10
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WDAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WDAIWG           Unit Weight
     C                     Z-ADD*ZERO     WDCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WDC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WDURTN           Number Cases On
     C                     Z-ADD*ZERO     WDAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDTFNB           Transportation
     C                     Z-ADD*ZERO     WDTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WDTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WDBLPR           Market Overage
     C                     Z-ADD*ZERO     WDBMPR           Standard Overag
     C                     Z-ADD*ZERO     WDCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WDCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WDSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WDPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WDICN1           Item Category N
     C                     Z-ADD*ZERO     WDICN2           Item Category N
     C                     Z-ADD*ZERO     WDV2NB           Item Category N
     C                     Z-ADD*ZERO     WDITCN           Item Category N
     C                     Z-ADD*ZERO     WDITC5           Item Category N
     C                     Z-ADD*ZERO     WDICN6           Item Category N
     C                     Z-ADD*ZERO     WDICN7           Item Category N
     C                     Z-ADD*ZERO     WDICN8           Item Category N
     C                     Z-ADD*ZERO     WDICN9           Item Category N
     C                     Z-ADD*ZERO     WDICN0           Item Category N
     C                     Z-ADD*ZERO     WDSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WDA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WDSJNB           Production Lead
     C                     Z-ADD*ZERO     WDSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WDSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WDSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WDCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WDCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WDILNB           PM % 2nds Facto
     C                     Z-ADD*ZERO     WDCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WDCINB           PM Batch Size
     C                     Z-ADD*ZERO     WDCJNB           PM Lot Size
     C                     Z-ADD*ZERO     WDCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WDCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WDCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WDCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WDCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WDCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WDCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WDCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WDC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WDB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WDB5NB           PM Line Number
     C                     Z-ADD*ZERO     WDBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WDBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WDF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WDF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WDF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WDBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WDBNNB           Production Qty
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
     C                     MOVEL*BLANK    WL0004  1
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007  70
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     MOVEL*BLANK    WL0009  1
     C                     Z-ADD*ZERO     WL0010  70
     C                     Z-ADD*ZERO     WL0011  70
     C                     MOVEL*BLANK    WL0012  3
     C                     Z-ADD*ZERO     WL0013  92
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015  3
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0016  30
     C                     Z-ADD*ZERO     WL0017  70
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
      * Define local variables for subroutine SQRVGN.
     C                     Z-ADD*ZERO     WL0020  30
     C                     Z-ADD*ZERO     WL0021  70
     C                     MOVEL*BLANK    WL0022  3
     C                     Z-ADD*ZERO     WL0023  70
     C                     Z-ADD*ZERO     WL0024 112
     C                     Z-ADD*ZERO     WL0025 112
     C                     MOVEL*BLANK    WL0026  1
      * Define local variables for subroutine SWRVGN.
     C                     MOVEL*BLANK    WL0027 10
     C                     MOVEL*BLANK    WL0028  6
     C                     Z-ADD*ZERO     WL0029  30
     C                     MOVEL*BLANK    WL0030  3
      * Define local work field Kill Day Status
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Inv Current           USR
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Inv Aged              USR
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Not Used Qty
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field @Number of Days to Age
     C                     Z-ADD*ZERO     YL0006  40
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0007 112
      * Define local work field Event Number
     C                     Z-ADD*ZERO     YL0008  50
      * Define local work field Event Code
     C                     MOVEL*BLANK    YL0009  2
      * Define local work field PS Production Warehouse
     C                     MOVEL*BLANK    YL0010  3
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0011  1
      * Define local work field Description Line One
     C                     MOVEL*BLANK    YL0012 30
      * Define local work field Message USR
     C                     MOVEL*BLANK    YL0013132
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0014  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0015  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD11        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0003 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0003           User Profile Na
      *
     C                     MOVEL*BLANK    WN0004 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SVRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0003    ZA0020           User Profile Na
     C                     MOVEL'P/S'     ZA0021           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0004    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0003    WL0027    P      User Profile Na
     C                     MOVEL'P/S'     WL0028    P      Application Cod
     C                     EXSR SWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0029    P2AIC3           Company Number
     C                     MOVELWL0030    YL0015    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0004    WL0027    P      User Profile Na
     C                     MOVEL'P/S'     WL0028    P      Application Cod
     C                     EXSR SWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0029    P2AIC3           Company Number
     C                     MOVELWL0030    YL0015    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0015    P2AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0003    ZA0022           User Profile Na
     C                     MOVEL'P/S'     ZA0023           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0014    IFNE *ZERO                      *IF
     C                     Z-ADDYL0014    P2AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0015    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P2AJCD    PARM *BLANK    WQ0081  3        Warehouse Code
     C                     PARM YL0014    WQ0082  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SXRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     Z-ADD*ZERO     P6A7NX           Count 2 USR
      * ***** Change Log
     C                     EXSR UGSUBR                     ***** Change Lo
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** W0BEG
01043010490110001299013050155501561
01612025650258202607026280264902670
03077031050312603147031680318903330
03333033420334903355033610337003376
03382033910339703403034120341803424
034330343903445
** W0END
01045010780110701301013340155701590
01612025700258902614026350265602677
03083031050312603147031680318903331
03339033470335303359033660337403380
03387033950340103408034160342203429
034370344303450
** W0NAM
V2AIC3    #CAPTX    VCGXDT    #2V4CD    #CNVNA    #CAJCD    #CF8NA
#CSVST    #CIXTX    VCFFDT    VCE1DT    VCE2DT    VCE3DT    VCE4DT
V2HGCD    #CEXSX    #CE0SX    #CE1SX    #CLGSX    #CLHSX    #1SEL
V1HGCD    #RLEQT    #RLFQT    #RLKQT    #RLGQT    #RLJQT    #RLLQT
#RLHQT    #RLWQT    #RLVQT    #RLRQT    #RM9QT    #RMOQT    #RNBQT
#RNAQT    #RMPQT    #RNCQT
** @CN
00001 Production Schedule
00002 Aged Not Sold Report
