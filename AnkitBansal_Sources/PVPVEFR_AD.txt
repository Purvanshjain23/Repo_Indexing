// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVPVEFR
// ?Date: 14.08.2025 Time: 02:55:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History
DO;

//?R7522 JJH Producer Distribution List
DO;

//?- Create Edit Producer
ENDDO;

ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(LCL.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(LCL.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(LCL.Oms_Default_Printer);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(LCL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Initialize subfile record (new record)

// RCD.RS Record Status = CND.Active
RCD.RS_Record_Status = 'A';

//?USER: Validate subfile record fields

CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Val Prdcr Distrib Ent RT) TYPE(RTVOBJ) FILE(PVCRREP)           AB1329384;
PARAMETER(RCD.PD_Distribution_Code);
PARAMETER(LCL.*Return_code);
{
 //?USER: Processing if Data record not found

 // PAR.*Return code = CND.*Normal
 PAR.*Return_code = *BLANK;

 //?USER: Process Data record

 // PAR.*Return code = CND.*Record already exists
 PAR.*Return_code = 'Y2U0003';

 QUIT;

}


CASE;

// IF LCL.*Return code is *Record already exists
IF LCL.*Return_code = 'Y2U0003';

// Send error message - 'The Distribution Code &1 cannot be deleted because Entries are attached.'
ERROR(PRK1411);
MSGPARM(RCD.PD_Distribution_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

QUIT;

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Prdcr DistributionCR) TYPE(CRTOBJ) FILE(PVCSREP)           AB1329332;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Del Prdcr DistributionDL) TYPE(DLTOBJ) FILE(PVCSREP)           AB1329334;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Prdcr DistributionCH) TYPE(CHGOBJ) FILE(PVCSREP)           AB1329333;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


