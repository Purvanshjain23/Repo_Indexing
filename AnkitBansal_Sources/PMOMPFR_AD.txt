// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMOMPFR
// ?Date: 14.08.2025 Time: 12:05:39
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?3/19/12 E2011 RMC dont print addendum
// PAR.FAX DTL Status 1 = CND.No
PAR.FAX_DTL_Status_1 = 'N';

//?USER: Record selection processing

CASE;

// IF DB1.Record Status is Active
IF DB1.Record_Status = 'A';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF PAR.FAX DTL Status 1 is Yes
IF PAR.FAX_DTL_Status_1 = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT COA ULSD Company # header format

CASE;

IF NEW COA_Batch_Number;
//?Load form literals
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Generic Heading 1 - 5 = CON.Date:
CUR.Generic_Heading_1_5 = 'Date:';

// CUR.@Blank for 7 = CON.Lot #:
CUR.@Blank_for_7 = 'Lot #:';

// CUR.@Blank for 5 = CON.Name:
CUR.@Blank_for_5 = 'Name:';

// CUR.@Text 8 = CON.Address:
CUR.@Text_8 = 'Address:';

// CUR.@Blank for 6 = CON.Phone:
CUR.@Blank_for_6 = 'Phone:';

// CUR.Condition Desc. 1  USR = CON.Producer Registration #:
CUR.Condition_Desc_1_USR = 'Producer Registration #:';

// CUR.USR 15 Text           USR = CON.Employer ID #:
CUR.USR_15_Text_USR = 'Employer ID #:';

// CUR.Description 21A Usr = CON.EPA RFS Company ID #:
CUR.Description_21A_Usr = 'EPA RFS Company ID #:';

ENDIF;

// CUR.USR Date - ATR = JOB.*Job date
CUR.USR_Date_ATR = JOB.*Job_date;

EXECUTE FUNCTION(RTV Co Addr & Phone FaxRT) TYPE(RTVOBJ) FILE(CAABREP)          AC1833051;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Telephone_Number_FF);
PARAMETER(NLL.Fax_Number_FF);
PARAMETER(LCL.State_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Compressd Name/Add US.
EXECUTE FUNCTION(RTV Compressd Name/Add US) TYPE(EXCUSRSRC) ('PDRXUFR');
PARAMETER(CUR.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(NLL.Name_Address_Line_1);
PARAMETER(CUR.USR_Compressed_Address_1);
PARAMETER(CUR.USR_Compressed_Address_2);
PARAMETER(NLL.Name_Address_Line_4);
PARAMETER(NLL.Name_Address_Line_5);
{
 * Use this function to compress name/address information
 *
 E                    UAD         5 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C           UJ1UF     BEGSR
 *=============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS INFORMATION
 *=============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 *============================================================
 C                     ENDSR
}


// CUR.USR Compressed Address 3 = LCL.Telephone Number FF
CUR.USR_Compressed_Address_3 = LCL.Telephone_Number_FF;

EXECUTE FUNCTION(RTV all used fields    RT) TYPE(RTVOBJ) FILE(PMCCCPP)          AC1851689;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.COA_ULSD_Company_#);
PARAMETER(CUR.COA_Batch_Number);
PARAMETER(NLL.COA_Active_Whse_Tank);
PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
PARAMETER(NLL.COA_Date_Open_for_Ship);
PARAMETER(NLL.COA_Time_Open_for_Ship);
PARAMETER(NLL.COA_Open_for_Ship_Inits);
PARAMETER(NLL.COA_Date_Close_from_Ship);
PARAMETER(NLL.COA_Time_Close_from_Ship);
PARAMETER(NLL.COA_Close_from_Ship_Inits);
PARAMETER(NLL.COA_Gallons_Used);
PARAMETER(NLL.COA_Comment);
PARAMETER(NLL.COA_Batch_Header_Sts);
PARAMETER(NLL.COA_Batch_Properties_Cmpl);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV all used fields    RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1851688;
PARAMETER(CUR.Company_Number);
PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
PARAMETER(NLL.COA_Bio_dsl_Fuel_Cd_Descr);
PARAMETER(CUR.COA_Producer_Regist_Nbr);
PARAMETER(CUR.COA_Employer_ID);
PARAMETER(NLL.COA_Sold_From_Address);
PARAMETER(NLL.COA_Sold_From_Name);
PARAMETER(CUR.COA_ULSD_Company_#);
PARAMETER(CUR.COA_ULSD_Facility_#);
PARAMETER(NLL.COA_RIN_Equivalence_Valu);
PARAMETER(NLL.COA_RIN_Renewable_Enrgy);
PARAMETER(NLL.COA_RIN_Type_Flag);
PARAMETER(NLL.COA_Density_Loadout);
PARAMETER(NLL.COA_Density_Reference);
PARAMETER(NLL.COA_Temperature_Loadout);
PARAMETER(NLL.COA_Temperature_Ref);
PARAMETER(NLL.COA_BOL_Percent);
PARAMETER(NLL.COA_Sale_Location);
PARAMETER(NLL.COA_Active_Whse_Tank_1);
PARAMETER(NLL.COA_Active_Whse_Tank_2);
PARAMETER(NLL.COA_Active_Whse_Tank_3);
PARAMETER(NLL.COA_Active_Whse_Tank_4);
PARAMETER(NLL.COA_Active_Whse_Tank_5);
PARAMETER(NLL.COA_Active_Whse_Tank_6);
PARAMETER(LCL.COA_Temp_Conv_Factor_1);
PARAMETER(LCL.Operation_Factor_1);
PARAMETER(LCL.COA_Temp_Conv_Factor_2);
PARAMETER(LCL.Operation_Factor_2);
PARAMETER(NLL.COA_RFS_Renew_Fuel_Code);
PARAMETER(NLL.COA_RFS_Rnwbl_Feedstock);
PARAMETER(NLL.Sold_To_Customer_hpb_biod);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF CUR.COA Producer Regist Nbr is Not Entered
IF CUR.COA_Producer_Regist_Nbr = *BLANK;

// CUR.Condition Desc. 1  USR = CON.*BLANK
CUR.Condition_Desc_1_USR = *BLANK;

ENDIF;

// Print COA Batch Number header format
PRINT COA Batch Number header format;

ENDIF;

// SUPPRESSED PRINT COA Print Sequence header format

// SUPPRESSED PRINT COA Property header format

//?USER: Process before print of detail format

//?New for print seq not being page - OF after 25 props printed
CASE;

// IF LCL.Count USR is gt 25
IF LCL.Count_USR > 25;

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// PGM.*new page flag = CND.*Yes
PGM.*new_page_flag = 'Y';

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*new page flag = CND.*No
PGM.*new_page_flag = *BLANK;

ENDIF;

ENDIF;

//?USER: On print of detail format

EXECUTE FUNCTION(Rtv Footnote Ind      RT) TYPE(RTVOBJ) FILE(PMCBREP)           AC1897072;
PARAMETER(CUR.Company_Number);
PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
PARAMETER(CUR.COA_Property);
PARAMETER(LCL.COA_Footnote_Indicator);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.COA Footnote Indicator is Not Entered
IF LCL.COA_Footnote_Indicator = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.COA Property = CONCAT(DB1.COA Property,LCL.COA Footnote Indicator,CON.*ZERO)
CUR.COA_Property = DB1.COA_Property + LCL.COA_Footnote_Indicator (*ZERO);

ENDIF;

// LCL.Count USR = LCL.Count USR + CON.1
LCL.Count_USR = LCL.Count_USR + 1;

//?USER: Print required level totals

// SUPPRESSED PRINT COA Property totals format

// SUPPRESSED PRINT COA Print Sequence totals format

CASE;

IF NEW COA_Batch_Number;
// Print COA Batch Number totals format
PRINT COA Batch Number totals format;

//?Embedded PRTOBJ : Prt Prop Def Comment  PO
EXECUTE FUNCTION(Prt Prop Def Comment  PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// SUPPRESSED PRINT COA ULSD Company # totals format

// SUPPRESSED PRINT Company Number totals format

//?USER: On print of final totals format

// Call program Rtv Alpha Value       XF.
CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
PARAMETER(PAR.Company_Number);
PARAMETER('COAVERSN');
PARAMETER(CUR.Text_USR_40);

