      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:   HOG PRODUCTION
      * PROGRAM:  HP5951
      * TITLE:    SELECT OPEN BGF/GF GROUP FOR A MARKET SALE
      * AUTHOR:   LEANNE FEDOR
      * CREATED:  04/12/04
      *
      * FUNCTION: THIS IS A SELECT FUNCTION WINDOW DISPLAY OF
      *           OPEN BGF AND GROW FINISH HOG GROUPS ON A FARM.
      *
      *         RESTRICTORS:  Farm
      *         POSITIONERS:  Building, room
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE     PROGRAMMER
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD5951   CF   E             WORKSTN SFILE(HP5951S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
      *
     FHSL034P   IF   E           K DISK    INFDS(DBFEED)
      *    HOG GROUP (Open groups only)
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      * Workfields for date manipulation
      *
     D wkmmddyy        s               D   datfmt(*mdy)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP5951K1
     C                   EXFMT     HP5951C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS IN THE CONTROL RECORD.
      *
     C     SVBLCD        WHENNE    C1BLCD
     C     SVRMCD        ORNE      C1RMCD
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
     C                   MOVEL     C1BLCd        SVBLCD
     C                   MOVEL     C1RMCD        SVRMCD
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED A GROUP, THEN SET THE ROUTINE TO EXIT
      * THIS SELECTION PROGRAM.  IF NO GROUP WAS SELECTED, THEN
      * SET TO REDISPLAY THE SCREEN OF GROUPS.
      *
     C     RGHGCD        IFNE      *BLANK
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP5951R1                       REF WINDOW
     C                   WRITE     HP5951R1                                     REF WINDOW
      *
     C                   CLEAR                   HP5951S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP5951C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FILE
      *
     C     KEY01         SETLL     HSL034P
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
     C     c1fscd        READE     HSL034P                                82
     C                   if        *in82 = *off and                              IF READ
     C                             hgppcd <> 'NUR  '
      *
      * Flip date from ccyymmdd to mmddyy using the 'date format' fields
      *
     C     *iso          move      hgopdt        wkmmddyy
     C                   move      wkmmddyy      dfopdtmdy
      *
     C                   MOVEL     HGHGCD        DFHGCD
     C                   MOVEL     HGBLCD        DFBLCD
     C                   MOVEL     HGRMCD        DFRMCD
     C                   MOVEL     HGPTCD        DFPTCD
     C                   MOVEL     HGPPCD        DFPPCD
     C                   MOVEL     HGGSCD        DFGSCD
     C                   MOVEL     HGGTCD        DFGTCD
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   WRITE     HP5951S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVEL     YES           NORECS
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------------
      * SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS SCREEN 1 SELECTIONS
      *---------------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      * CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      * PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP5951S1                           82
     C                   MOVEL     DFHGCD        RGHGCD
     C                   MOVEL     DFBLCD        RGBLCD
     C                   MOVEL     DFRMCD        RGRMCD
     C                   MOVEL     DFGSCD        RGGSCD
     C                   MOVEL     DFPTCD        RGPTCD
     C                   MOVEL     DFPPCD        RGPPCD
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
     C     KEY01         KLIST
     C                   KFLD                    C1FSCD
     C                   KFLD                    C1BLCD
     C                   KFLD                    C1RMCD
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1FSCD
     C                   PARM                    C1FSNM
     C     C1BLCD        PARM                    RGBLCD
     C     C1RMCD        PARM                    RGRMCD
     C                   PARM                    RGHGCD
     C                   PARM                    RGGSCD
     C                   PARM                    RGPTCD
     C                   PARM                    RGPPCD
      *
     C                   MOVEL     C1BLCD        SVBLCD
     C                   MOVEL     C1RMCD        SVRMCD
      *
     C     *LIKE         DEFINE    HGBLCD        RGBLCD
     C     *LIKE         DEFINE    HGRMCD        RGRMCD
     C     *LIKE         DEFINE    HGHGCD        RGHGCD
     C     *LIKE         DEFINE    HGGSCD        RGGSCD
     C     *LIKE         DEFINE    HGPTCD        RGPTCD
     C     *LIKE         DEFINE    HGPPCD        RGPPCD
     C     *LIKE         DEFINE    C1BLCD        SVBLCD
     C     *LIKE         DEFINE    C1RMCD        SVRMCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             ERROR             3 0          ERRORS
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     8             WKPLIN            2 0          SFLPAG
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP5951R2                                     DUMMY FMT
     C                   WRITE     HP5951R1                                     REF WINDOW
      *
     C                   ENDSR
      /EJECT
