// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDICE1R
// ?Date: 14.08.2025 Time: 03:34:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize key screen

//?Set to Add Mode if no carrier passed in
CASE;

// IF PAR.SCAT Code EQ WRK.BLANK
IF PAR.SCAT_Code = WRK.BLANK;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

//?Set to Add Mode if no carrier passed in
// IF *OTHERWISE
IF *OTHERWISE;

// KEY.Carrier Code = KEY.SCAT Code
KEY.Carrier_Code = KEY.SCAT_Code;

ENDIF;

//?USER: Validate key screen

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

//?Prompt
CASE;

// IF PGM.*Cursor field <IS> KEY.Carrier Code
IF PGM.*Cursor_field = KEY.Carrier_Code;

// AND KEY.*CMD key is *Prompt
AND KEY.*CMD_key = '04';

// Call program SEL Active Carrier     SR.
CALL PROGRAM(SEL Active Carrier     SR) ('OMY6SRR');
PARAMETER(KEY.Carrier_Code);

ENDIF;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(KEY.Carrier_Code);
PARAMETER(WRK.Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF WRK.Name EQ WRK.USR BLanks
IF WRK.Name = WRK.USR_BLanks;

// Send error message - 'Carrier Info not found.'
ERROR(USR1180);
MSGPARM(KEY.Carrier_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// KEY.SCAT Code = WRK.Name
KEY.SCAT_Code = WRK.Name;

EXECUTE FUNCTION(Rtv Carrier Password   RT) TYPE(RTVOBJ) FILE(PDLZREP)          AC1506672;
PARAMETER(KEY.SCAT_Code);
{
 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// Send error message - 'Carrier Password already exists.'
ERROR(USR2608);

ENDIF;

ENDIF;

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.SCAT Code = WRK.Name
DTL.SCAT_Code = WRK.Name;

// DTL.Name = WRK.Name
DTL.Name = WRK.Name;

// DTL.Carrier Password Filler = CON.X
DTL.Carrier_Password_Filler = 'X';

// DTL.USR Date - ATR = JOB.*Job date
DTL.USR_Date_ATR = JOB.*Job_date;

//?USER: Initialize detail screen (existing record)

// DTL.SCAT Code = DB1.SCAT Code
DTL.SCAT_Code = DB1.SCAT_Code;

// DTL.Password = DB1.Password
DTL.Password = DB1.Password;

// WRK.Carrier Code = DTL.SCAT Code
WRK.Carrier_Code = DTL.SCAT_Code;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(WRK.Carrier_Code);
PARAMETER(DTL.Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Carrier Passwrd CR) TYPE(CRTOBJ) FILE(PDLZREP)          AC1497040;

//?USER: Change DBF record

EXECUTE FUNCTION(CHG PD Carrier Passwrd CH) TYPE(CHGOBJ) FILE(PDLZREP)          AC1497041;

//?USER: Process command keys

CASE;

// IF DTL.USR Date - ATR is Entered
IF DTL.USR_Date_ATR <> *ZERO;

// WRK.Date To Alpha         USR = CVTVAR(DTL.USR Date - ATR)
WRK.Date_To_Alpha_USR = CVTVAR(DTL.USR_Date_ATR);

// Call program Zzz Actual Dlvry Dt/Tm XF.
SBMJOB;
CALL PROGRAM(Zzz Actual Dlvry Dt/Tm XF) ('PDIUXFR');
PARAMETER(WRK.Date_To_Alpha_USR);
PARAMETER(DTL.Carrier_Code);
SBMJOBEND;

ENDIF;

