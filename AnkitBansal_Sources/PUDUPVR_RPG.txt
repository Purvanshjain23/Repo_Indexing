     H/TITLE PMT Whse Price UPL Upd PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 08/29/17  Time  : 14:10:32
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPUDUPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PMT Whse Price UPL Upd PV Prompt & validate record
      *
     FPPBSCPLBIF  E           K        DISK
      * RSQ : Inventory Stock Closing   WeekEnd(D)/WhsCo/Whs/Itm
      *
     FPPBTCPL2IF  E           K        DISK
      * RSQ : Inventory Value File      WeekEnd-d
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1  05  6   @CN    25
     I@BSCPZF
      * Inventory Stock Closing   WeekEnd(D)/WhsCo/Whs/Itm
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
     I@BTCPBM
      * Inventory Value File      WeekEnd-d
      * Renamed input format fields
     I              BTWQSX                          WBWQSX
     I              BTAJDX                          WBAJDX
     I              BTEKC7                          WBEKC7
     I              BTELC7                          WBELC7
     I              BTWHSX                          WBWHSX
     I              BTWFSX                          WBWFSX
     I              BTGUAA                          WBGUAA
     I              BTGVAA                          WBGVAA
     I              BTBVNY                          WBBVNY
     I              BTBWNY                          WBBWNY
     I              BTBXNY                          WBBXNY
     I              BTF5PR                          WBF5PR
     I              BTGWAA                          WBGWAA
     I              BTGXAA                          WBGXAA
     I              BTWISX                          WBWISX
     I              BTWJSX                          WBWJSX
     I              BTFSVL                          WBFSVL
     I              BTFTVL                          WBFTVL
     I              BTAKDX                          WBAKDX
     I              BTFUVL                          WBFUVL
     I              BTM8WG                          WBM8WG
     I              BTFVVL                          WBFVVL
     I              BTFWVL                          WBFWVL
     I              BTRGNA                          WBRGNA
     I              BTFXVL                          WBFXVL
     I              BTWKSX                          WBWKSX
     I              BTFYVL                          WBFYVL
     I              BTRFNA                          WBRFNA
     I              BTFZVL                          WBFZVL
     I              BTWLSX                          WBWLSX
     I              BTM9WG                          WBM9WG
     I              BTWPSX                          WBWPSX
     I              BTQDDT                          WBQDDT
     I              BTVSST                          WBVSST
     I              BTMJDT                          WBMJDT
     I              BTBETM                          WBBETM
     I              BTCCVN                          WBCCVN
     I              BTCDVN                          WBCDVN
     I              BTMKDT                          WBMKDT
     I              BTBFTM                          WBBFTM
     I              BTCEVN                          WBCEVN
     I              BTCFVN                          WBCFVN
      *
     I@DNRESF
      * Application               RSQ Application Code
      * Renamed input format fields
     I              DNDNCD                          WCDNCD
     I              DNAUNA                          WCAUNA
     I              DNVKST                          WCVKST
     I              DNRSCD                          WCRSCD
     I              DNUVST                          WCUVST
     I              DNUWST                          WCUWST
     I              DNUXST                          WCUXST
     I              DNAATM                          WCAATM
     I              DNAYNA                          WCAYNA
     I              DNA0NA                          WCA0NA
     I              DNAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * N :  USR Update Flag
     I                                        1   1 P1R4ST
     IP2PARM      DS
      * N :  ISC Post Warehouse Sts
     I                                        1   1 P2WOSX
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(PRTWH-    1 256 #S0001
     I              'PRUPL) JOBD(*USRPRF)'
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Generic Message 80'
      * Generic Message 80 USR
     I                                        1  80 ZA0001
      * Message data for 'Generic Message 80 ERR'
      * Generic Message 80 USR
     I                                        1  80 ZA0002
      * Message data for 'Generic Message 80'
      * Generic Message 80 USR
     I                                        1  80 ZA0003
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process command keys
      * F8=Submit to Update
      * CASE: DTL.*CMD key is CF08
     C           *IN08     IFEQ '1'                        *IF
     C                     MOVEL'Y'       P1R4ST           USR Update Flag
      * RTV Curr Week/Post Whs RT - Inventory Stock Closing  * 
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    #DAIDX           ISC Week Ending
     C                     MOVELWL0002    P2WOSX    P      ISC Post Wareho
      * Validate if F8=Submit is allowed.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.ISC Post Warehouse Sts is Open
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2WOSX    IFEQ 'O'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * RTV Week Ending Exist  RT - Inventory Value File  * 
     C                     EXSR SBRVGN
      * If IVF record exist, do NOT allow F8=Submit to Update.
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    P1R4ST           USR Update Flag
     C                     END                             *FI
     C                     END                             *FI
      * Update Inventory Stock Closing file?
      * CASE: PAR.USR Update Flag is Yes
     C           P1R4ST    IFEQ 'Y'                        *IF
      * EXC Whse Price UPL Upd XF - ISC Warehouse Price UPL  * 
     C                     CALL 'PUENXFR'              90  EXC Whse Price
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #DAIDX    WQ0001  80       ISC Week Ending
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUENXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Setup message data for message
     C                     MOVEL@CN,001   ZA0001           Generic Message
      * Send message 'Generic Message 80'
     C                     MOVEL'USR4976' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     ZQ      50
     C           @CN,002   CAT  @CN,003:ZQYL0001    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0001    CAT  @CN,004:ZQYL0001    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0001    ZA0002           Generic Message
      * Send message 'Generic Message 80 ERR'
     C                     MOVEL'USR4977' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * F9=Print
      * CASE: DTL.*CMD key is CF09
     C           *IN09     IFEQ '1'                        *IF
      * SBMJOB: PRT Whse Price Upload  PF - ISC Warehouse Price UPL  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PUDWPFR '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELW0RTN     #SSTR     P      *Return code
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PUDWPFR 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUDWPFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Setup message data for message
     C                     MOVEL@CN,005   ZA0003           Generic Message
      * Send message 'Generic Message 80'
     C                     MOVEL'USR4976' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * F10=Display Uploaded File
      * CASE: DTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * DSP Whse Price Upload  DF - ISC Warehouse Price UPL  * 
     C                     CALL 'PUDVDFR'              90  DSP Whse Price
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #DAIDX    WQ0002  80       ISC Week Ending
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUDVDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #DAIDX           ISC Week Ending
      * Clear external version also
     C                     Z-ADD*ZERO     VDAIDX
      * USER: Load screen
      * RTV Curr Week/Post Whs RT - Inventory Stock Closing  * 
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0001    #DAIDX           ISC Week Ending
     C                     MOVELWL0002    P2WOSX    P      ISC Post Wareho
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert ISC Week Ending Date to display format
      * Convert date
     C                     Z-ADD#DAIDX    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    VDAIDX
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Curr Week/Post Whs RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0001           ISC Week Ending
     C                     MOVEL*BLANK    WL0002           ISC Post Wareho
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WAAIDX           ISC Week Ending
     C                     KFLD           WAB2C3           ISC Warehouse C
     C                     KFLD           WAGRAA           ISC Warehouse C
     C                     KFLD           WAEJC7           ISC Item Code
      * Initialize key list
     C                     MOVEL*HIVAL    WAAIDX           ISC Week Ending
     C                     MOVEL*LOVAL    WAB2C3           ISC Warehouse C
     C                     MOVEL*LOVAL    WAGRAA           ISC Warehouse C
     C                     MOVEL*LOVAL    WAEJC7           ISC Item Code
      * Setup key
      * Establish starting position
     C           KPSSA     SETLL@BSCPZF                    *
     C                     READ @BSCPZF                  90*
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAAIDX    WL0001           ISC Week Ending
     C                     MOVELWAWOSX    WL0002           ISC Post Wareho
     C                     GOTO SAEXIT                     *QUIT
     C                     READ @BSCPZF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Week Ending Exist  RT - Inventory Value File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAJDX    WQSB01           IVF Week Ending
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           IVF Week Ending
      * Setup key
     C                     Z-ADD#DAIDX    WQSB01           IVF Week Ending
      * Establish starting position
     C           KRSSB     SETLL@BTCPBM                    *
     C           KRSSB     READE@BTCPBM                  90*
      * Data record not found
     C   90                MOVEL'USR3531' W0RTN   7
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCDNCD    WQSC01           Application Cod
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSC01           Application Cod
     C                     MOVEL'I/C'     WQSC01           Application Cod
      * Establish starting position
     C           KRSSC     SETLL@DNRESF                    *
     C           KRSSC     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           WCRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELWCAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
     C           KRSSC     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCDNCD    WQSD01           Application Cod
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Application Cod
      * Setup key
     C                     MOVELWCRSCD    WQSD01           Application Cod
      * Establish starting position
     C           KRSSD     SETLL@DNRESF                    *
     C           KRSSD     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCAUNA    WUAUNA           Description
     C           KRSSD     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         XDV84T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX01           DD
     C                     Z-ADDXDI8MM    XDEX02           MM
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX01           MM
     C                     Z-ADDXDI8DD    XDEX02           DD
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
      * YMD format
     C           1000      MULT XDI8CC    XDEY01           Y
     C                     ADD  XDI8YY    XDEY01            YYY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV84E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1R4ST           USR Update Flag
     C                     MOVEL*BLANK    P2WOSX           ISC Post Wareho
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WAB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WAEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WAF3PR           ISC Item Market
     C                     Z-ADD*ZERO     WABSNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABTNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABUNY           ISC Item Struct
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAORQT           ISC End Inv Par
     C                     Z-ADD*ZERO     WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     Z-ADD*ZERO     WAOUQT           ISC Commission
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC TF Exempt N
     C                     Z-ADD*ZERO     WAM7WG           ISC TF Exempt L
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAJDX           IVF Week Ending
     C                     Z-ADD*ZERO     WBEKC7           IVF Item Code
     C                     Z-ADD*ZERO     WBELC7           IVF WIP - FG It
     C                     Z-ADD*ZERO     WBBVNY           IVF Item Struct
     C                     Z-ADD*ZERO     WBBWNY           IVF Item Struct
     C                     Z-ADD*ZERO     WBBXNY           IVF Item Struct
     C                     Z-ADD*ZERO     WBF5PR           IVF Item Market
     C                     Z-ADD*ZERO     WBFSVL           IVF Beg Inv Pri
     C                     Z-ADD*ZERO     WBFTVL           IVF Sales Price
     C                     Z-ADD*ZERO     WBAKDX           IVF Sales Price
     C                     Z-ADD*ZERO     WBFUVL           IVF Market Pric
     C                     Z-ADD*ZERO     WBM8WG           IVF Warehouse P
     C                     Z-ADD*ZERO     WBFVVL           IVF Warehouse P
     C                     Z-ADD*ZERO     WBFWVL           IVF Ovrrde Prod
     C                     Z-ADD*ZERO     WBFXVL           IVF Curr Wk Pro
     C                     Z-ADD*ZERO     WBFYVL           IVF Ovrrde Inv
     C                     Z-ADD*ZERO     WBFZVL           IVF Cur Wk Inv
     C                     Z-ADD*ZERO     WBM9WG           IVF Unused Weig
     C                     Z-ADD*ZERO     WBQDDT           IVF Unused Date
     C                     Z-ADD*ZERO     WBMJDT           Create Date
     C                     Z-ADD*ZERO     WBBETM           Create Time
     C                     Z-ADD*ZERO     WBMKDT           Change Date
     C                     Z-ADD*ZERO     WBBFTM           Change Time
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  80
     C                     MOVEL*BLANK    WL0002  1
      * Define local work field Generic Message 80 USR
     C                     MOVEL*BLANK    YL0001 80
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SCRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Update completed.
00002 Inventory & Production Va
00003 lues have started, cannot
00004 run update at this time.
00005 Job submitted.
