// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMTHXFR
// ?Date: 14.08.2025 Time: 03:44:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?E921 09/28/2010 EPA RFS2 Modifications -- Report RFS0200 is now RFS0201
//?   and reports only transactions made with RFS1 RINS during the Quarter
//?F1110 - EPA Quarterly Reporting -- Report RFS0200
//?     RFS RIN Transaction Report - send quarterly to the EPA
//?Q1 =  Jan - Mar (Due May 31)         Q2 = Apr - Jun (Due Aug 31)
//?Q3 =  Jul - Sep (Due Nov 30)         Q4 = Oct - Dec (Due Feb 28)
//?Set field values that wont change per batch:
// PAR.RFS Report Form ID = CND.RFS0201
PAR.RFS_Report_Form_ID = 'RFS0201';

// PAR.RFS CBI = CND.Non Confidential Business
PAR.RFS_CBI = 'N';

//?Format report date: MM/DD/YYYY
EXECUTE FUNCTION(Clc Fmt Dt MM/DD/YYYY IF) TYPE(EXCINTFUN)                      AC1874414;
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.RFS_Report_Date);
{
 //?Execute internal function

 //?Format input date as : MM/DD/YYYY
 // PAR.Date 7A              USR = CVTVAR(PAR.Date In)
 PAR.Date_7A_USR = CVTVAR(PAR.Date_In);

 // WRK.Month (Char) USR = SUBSTRING(PAR.Date 7A              USR,CON.4,CON.2)
 WRK.Month_Char_USR = SUBSTRING(PAR.Date_7A_USR:4:2);

 // WRK.Day (Alpha) USR = SUBSTRING(PAR.Date 7A              USR,CON.6,CON.2)
 WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_7A_USR:6:2);

 // WRK.Year Code = PAR.Date In *YEAR
 WRK.Year_Code = DATEDTLS(PAR.Date_In 'YR' 1111111 'NONE' 'N' 1);

 // WRK.Year USR = WRK.Year Code
 WRK.Year_USR = WRK.Year_Code;

 // WRK.Month MM/  3A = CONCAT(WRK.Month (Char) USR,CON./,CON.*ZERO)
 WRK.Month_MM_3A = WRK.Month_Char_USR + '/' (*ZERO);

 // WRK.Day DD/  3A = CONCAT(WRK.Day (Alpha) USR,CON./,CON.*ZERO)
 WRK.Day_DD_3A = WRK.Day_Alpha_USR + '/' (*ZERO);

 // WRK.Month/Day MM/DD/ = CONCAT(WRK.Month MM/  3A,WRK.Day DD/  3A,CON.*ZERO)
 WRK.Month_Day_MM_DD = WRK.Month_MM_3A + WRK.Day_DD_3A (*ZERO);

 // PAR.MMDDYYYY Usr = CONCAT(WRK.Month/Day MM/DD/,WRK.Year USR,CON.*ZERO)
 PAR.MMDDYYYY_Usr = WRK.Month_Day_MM_DD + WRK.Year_USR (*ZERO);

}


// WRK.Year Alpha (YY) USR = SUBSTRING(PAR.RFS Report Year,CON.3,CON.2)
WRK.Year_Alpha_YY_USR = SUBSTRING(PAR.RFS_Report_Year:3:2);

// WRK.Text 3 Length USR = CONCAT(CON.1,WRK.Year Alpha (YY) USR,CON.*ZERO)
WRK.Text_3_Length_USR = '1' + WRK.Year_Alpha_YY_USR (*ZERO);

//?Set Compliance From and To Dates
CASE;

// IF PAR.RFS Compliance Period is Quarter 1 (Jan-Mar)
IF PAR.RFS_Compliance_Period = 'Q1';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0101,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0101' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0331,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0331' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 2 (Apr-Jun)
IF PAR.RFS_Compliance_Period = 'Q2';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0401,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0401' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0630,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0630' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 3 (Jly-Sep)
IF PAR.RFS_Compliance_Period = 'Q3';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0701,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0701' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0930,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0930' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 4 (Oct-Dec)
IF PAR.RFS_Compliance_Period = 'Q4';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.1001,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '1001' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.1231,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '1231' (*ZERO);

ENDIF;

// PAR.Date From             USR = CVTVAR(WRK.Date From Alpha       USR)
PAR.Date_From_USR = CVTVAR(WRK.Date_From_Alpha_USR);

// PAR.Date To               USR = CVTVAR(WRK.Date To Alpha         USR)
PAR.Date_To_USR = CVTVAR(WRK.Date_To_Alpha_USR);

//?Read COA Batch Header RIN file and create records - Lf selects rfs1 only
EXECUTE FUNCTION(RTV Crt RFS RIN Trn FL RT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1874499;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_To_USR);
PARAMETER(PAR.RFS_Report_Form_ID);
PARAMETER(PAR.RFS_Report_Type);
PARAMETER(PAR.RFS_CBI);
PARAMETER(PAR.RFS_Report_Date);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.RFS_Company_ID);
PARAMETER(PAR.RFS_Compliance_Period);
{
 //?USER: Initialize routine

 //?S00923 RMC 8/27/09 Use diff logical to get the seq nos. right
 // LCL.Record Found USR = CND.Record Not Found
 LCL.Record_Found_USR = 'N';

 //?USER: Process Data record

 //?Force Break if Retired RIN
 CASE;

 // IF DB1.COA Retired RIN Reason Cd is *Blank
 IF DB1.COA_Retired_RIN_Reason_Cd = *BLANK;

 // PAR.Break = CND.No
 PAR.Break = 'N';

 //?Force Break if Retired RIN
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Break = CND.Yes
 PAR.Break = 'Y';

 ENDIF;

 //?Create 1 record for each batch/trans date/partner/sequential RINS
 //?Break in Batch No or Trans Date or RET RIN Write Record
 CASE;

 // IF DB1.COA Batch Number NE LCL.COA Batch Number
 IF DB1.COA_Batch_Number <> LCL.COA_Batch_Number;

 // OR DB1.COA RIN Transaction Date NE LCL.COA RIN Transaction Date
 OR DB1.COA_RIN_Transaction_Date <> LCL.COA_RIN_Transaction_Date;

 // OR DB1.COA Retired RIN Reason Cd NE LCL.COA Retired RIN Reason Cd
 OR DB1.COA_Retired_RIN_Reason_Cd <> LCL.COA_Retired_RIN_Reason_Cd;

 // OR DB1.COA RIN Trans Partner Id NE LCL.COA RIN Trans Partner Id
 OR DB1.COA_RIN_Trans_Partner_Id <> LCL.COA_RIN_Trans_Partner_Id;

 // OR DB1.COA RIN SSSSSSSS NE LCL.Last COA RIN EEEEEEEE usr
 OR DB1.COA_RIN_SSSSSSSS <> LCL.Last_COA_RIN_EEEEEEEE_usr;

 // OR PAR.Break is Yes
 OR PAR.Break = 'Y';

 // OR DB1.COA ULSD Company # NE LCL.ULSD Comp ship to #
 OR DB1.COA_ULSD_Company_# <> LCL.ULSD_Comp_ship_to_#;

 //?Write RCD if not 1st time and for every RET record
 CASE;

 // IF LCL.COA Batch Number is Not zero
 IF LCL.COA_Batch_Number <> *ZERO;

 // Execute function *Move-Right.
 EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(LCL.COA_RIN_EEEEEEEE);
 {
  C                     MOVE #IPANA    #OO9NA
 }

 //?----------- Write 1 rcd per seq of RINs  -----------------
 EXECUTE FUNCTION(Crt RFS RIN Trans Rpt CR) TYPE(CRTOBJ) FILE(PMDQCPP)           AC1874241;
 PARAMETER(PAR.RFS_Report_Form_ID);
 PARAMETER(PAR.RFS_Report_Type);
 PARAMETER(PAR.RFS_CBI);
 PARAMETER(PAR.RFS_Report_Date);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(PAR.RFS_Compliance_Period);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Retired_RIN_Code);
 PARAMETER(PAR.RFS_Transaction_Date);
 PARAMETER(LCL.COA_RIN_Trans_Partner_Nm);
 PARAMETER(LCL.COA_RIN_Trans_Partner_Id);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 // LCL.Record Found USR = CND.Record Found
 LCL.Record_Found_USR = 'Y';

 // LCL.Status - Y or N = CND.yes
 LCL.Status_Y_or_N = 'Y';

 ENDIF;

 //?If date in range- setup record
 CASE;

 // IF DB1.COA RIN Transaction Date GE PAR.Date From             USR
 IF DB1.COA_RIN_Transaction_Date >= PAR.Date_From_USR;

 // AND DB1.COA RIN Transaction Date LE PAR.Date To               USR
 AND DB1.COA_RIN_Transaction_Date <= PAR.Date_To_USR;

 EXECUTE FUNCTION(Rtv Fuel Code f/Batch  RT) TYPE(RTVOBJ) FILE(PMCCCPP)          AC1874503;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV for RFS EPA Rpts  RT) TYPE(RTVOBJ) FILE(PMCAREP)           AC1874383;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.COA_Bio_diesel_Fuel_Code);
 PARAMETER(LCL.COA_Bio_dsl_Fuel_Cd_Descr);
 PARAMETER(LCL.COA_Producer_Regist_Nbr);
 PARAMETER(LCL.COA_Employer_ID);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu);
 PARAMETER(LCL.COA_RIN_Renewable_Enrgy);
 PARAMETER(LCL.COA_RIN_Type_Flag);
 PARAMETER(LCL.COA_Density_Loadout);
 PARAMETER(LCL.COA_BOL_Percent);
 PARAMETER(LCL.COA_RFS_Renew_Fuel_Code);
 PARAMETER(LCL.COA_RFS_Rnwbl_Feedstock);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Format Tran date as MM/DD/YYYY
 EXECUTE FUNCTION(Clc Fmt Dt MM/DD/YYYY IF) TYPE(EXCINTFUN)                      AC1874414;
 PARAMETER(DB1.COA_RIN_Transaction_Date);
 PARAMETER(PAR.RFS_Transaction_Date);
 {
  //?Execute internal function

  //?Format input date as : MM/DD/YYYY
  // PAR.Date 7A              USR = CVTVAR(PAR.Date In)
  PAR.Date_7A_USR = CVTVAR(PAR.Date_In);

  // WRK.Month (Char) USR = SUBSTRING(PAR.Date 7A              USR,CON.4,CON.2)
  WRK.Month_Char_USR = SUBSTRING(PAR.Date_7A_USR:4:2);

  // WRK.Day (Alpha) USR = SUBSTRING(PAR.Date 7A              USR,CON.6,CON.2)
  WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_7A_USR:6:2);

  // WRK.Year Code = PAR.Date In *YEAR
  WRK.Year_Code = DATEDTLS(PAR.Date_In 'YR' 1111111 'NONE' 'N' 1);

  // WRK.Year USR = WRK.Year Code
  WRK.Year_USR = WRK.Year_Code;

  // WRK.Month MM/  3A = CONCAT(WRK.Month (Char) USR,CON./,CON.*ZERO)
  WRK.Month_MM_3A = WRK.Month_Char_USR + '/' (*ZERO);

  // WRK.Day DD/  3A = CONCAT(WRK.Day (Alpha) USR,CON./,CON.*ZERO)
  WRK.Day_DD_3A = WRK.Day_Alpha_USR + '/' (*ZERO);

  // WRK.Month/Day MM/DD/ = CONCAT(WRK.Month MM/  3A,WRK.Day DD/  3A,CON.*ZERO)
  WRK.Month_Day_MM_DD = WRK.Month_MM_3A + WRK.Day_DD_3A (*ZERO);

  // PAR.MMDDYYYY Usr = CONCAT(WRK.Month/Day MM/DD/,WRK.Year USR,CON.*ZERO)
  PAR.MMDDYYYY_Usr = WRK.Month_Day_MM_DD + WRK.Year_USR (*ZERO);

 }

 CASE;

 // IF LCL.COA ULSD Facility # is Blanks
 IF LCL.COA_ULSD_Facility_# = *BLANK;

 // LCL.COA ULSD Facility # = CON.NOTOP
 LCL.COA_ULSD_Facility_# = 'NOTOP';

 ENDIF;

 // LCL.COA Batch Number = DB1.COA Batch Number
 LCL.COA_Batch_Number = DB1.COA_Batch_Number;

 // LCL.COA RIN Transaction Date = DB1.COA RIN Transaction Date
 LCL.COA_RIN_Transaction_Date = DB1.COA_RIN_Transaction_Date;

 // LCL.COA RIN Trans Partner Id = DB1.COA RIN Trans Partner Id
 LCL.COA_RIN_Trans_Partner_Id = DB1.COA_RIN_Trans_Partner_Id;

 // LCL.COA Retired RIN Reason Cd = DB1.COA Retired RIN Reason Cd
 LCL.COA_Retired_RIN_Reason_Cd = DB1.COA_Retired_RIN_Reason_Cd;

 // PAR.RFS Transaction Type = DB1.RFS Transaction Type
 PAR.RFS_Transaction_Type = DB1.RFS_Transaction_Type;

 // LCL.COA Batch Header RIN = DB1.COA Batch Header RIN
 LCL.COA_Batch_Header_RIN = DB1.COA_Batch_Header_RIN;

 // LCL.ULSD Comp ship to # = DB1.COA ULSD Company #
 LCL.ULSD_Comp_ship_to_# = DB1.COA_ULSD_Company_#;

 // LCL.Status - Y or N = CND.no
 LCL.Status_Y_or_N = 'N';

 // LCL.COA RIN Trans Partner Nm = DB1.COA RIN Trans Partner Nm
 LCL.COA_RIN_Trans_Partner_Nm = DB1.COA_RIN_Trans_Partner_Nm;

 //?Trans Partner Name & Ret Rin Reason
 CASE;

 // IF DB1.COA Retired RIN Reason Cd is *Blank
 IF DB1.COA_Retired_RIN_Reason_Cd = *BLANK;

 CASE;

 // IF DB1.Order Number is Greater then zero
 IF DB1.Order_Number > *ZERO;

 //?we want the trans partner name to be the same per parent cust#.
 EXECUTE FUNCTION(Rtv Customer Number    RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1292494;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Ship_To_Customer);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Parent Customer    RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1225254;
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(LCL.Parent_Customer);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(LCL.Parent_Customer);
 PARAMETER(LCL.Customer_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Customer Name is Not Blank
 IF LCL.Customer_Name <> *BLANK;

 // LCL.COA RIN Trans Partner Nm = LCL.Customer Name
 LCL.COA_RIN_Trans_Partner_Nm = LCL.Customer_Name;

 ENDIF;

 ENDIF;

 // PAR.RFS Retired RIN Code = CND.Not Applicable
 PAR.RFS_Retired_RIN_Code = 'NA';

 //?Trans Partner Name & Ret Rin Reason
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.RFS Retired RIN Code = LCL.COA Retired RIN Reason Cd
 PAR.RFS_Retired_RIN_Code = LCL.COA_Retired_RIN_Reason_Cd;

 //?6/26/09 output NA here per instructions sent 6/25/09
 // LCL.COA RIN Trans Partner Nm = CON.NA
 LCL.COA_RIN_Trans_Partner_Nm = 'NA';

 // LCL.COA RIN Trans Partner Id = CON.NA
 LCL.COA_RIN_Trans_Partner_Id = 'NA';

 ENDIF;

 ENDIF;

 // PAR.Break = CND.No
 PAR.Break = 'N';

 ENDIF;

 //?If date in range- get RIN EEEEEEEE number
 CASE;

 // IF DB1.COA RIN Transaction Date GE PAR.Date From             USR
 IF DB1.COA_RIN_Transaction_Date >= PAR.Date_From_USR;

 // AND DB1.COA RIN Transaction Date LE PAR.Date To               USR
 AND DB1.COA_RIN_Transaction_Date <= PAR.Date_To_USR;

 // LCL.COA RIN EEEEEEEE = DB1.COA RIN EEEEEEEE
 LCL.COA_RIN_EEEEEEEE = DB1.COA_RIN_EEEEEEEE;

 // LCL.Last COA RIN EEEEEEEE usr = DB1.COA RIN EEEEEEEE + CON.1
 LCL.Last_COA_RIN_EEEEEEEE_usr = DB1.COA_RIN_EEEEEEEE + 1;

 ENDIF;

 //?USER: Exit processing

 //?Write blank record if none are found / or write last rcd
 CASE;

 // IF LCL.Record Found USR is Record Not Found
 IF LCL.Record_Found_USR = 'N';

 EXECUTE FUNCTION(RTV for RFS EPA Rpts  RT) TYPE(RTVOBJ) FILE(PMCAREP)           AC1874383;
 PARAMETER(DB1.Company_Number);
 PARAMETER('B99.9');
 PARAMETER(LCL.COA_Bio_dsl_Fuel_Cd_Descr);
 PARAMETER(LCL.COA_Producer_Regist_Nbr);
 PARAMETER(LCL.COA_Employer_ID);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu);
 PARAMETER(LCL.COA_RIN_Renewable_Enrgy);
 PARAMETER(LCL.COA_RIN_Type_Flag);
 PARAMETER(LCL.COA_Density_Loadout);
 PARAMETER(LCL.COA_BOL_Percent);
 PARAMETER(LCL.COA_RFS_Renew_Fuel_Code);
 PARAMETER(LCL.COA_RFS_Rnwbl_Feedstock);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?----------- Write 1 blank RIN Rcd ----------------
 EXECUTE FUNCTION(Crt RFS RIN Trans Rpt CR) TYPE(CRTOBJ) FILE(PMDQCPP)           AC1874241;
 PARAMETER(PAR.RFS_Report_Form_ID);
 PARAMETER(PAR.RFS_Report_Type);
 PARAMETER(PAR.RFS_CBI);
 PARAMETER(PAR.RFS_Report_Date);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(PAR.RFS_Compliance_Period);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER('NA');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 //?Write blank record if none are found / or write last rcd
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Write Last RCD if it wasnt written
 CASE;

 // IF LCL.Status - Y or N is no
 IF LCL.Status_Y_or_N = 'N';

 // Execute function *Move-Right.
 EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(LCL.COA_RIN_EEEEEEEE);
 {
  C                     MOVE #IPANA    #OO9NA
 }

 EXECUTE FUNCTION(Crt RFS RIN Trans Rpt CR) TYPE(CRTOBJ) FILE(PMDQCPP)           AC1874241;
 PARAMETER(PAR.RFS_Report_Form_ID);
 PARAMETER(PAR.RFS_Report_Type);
 PARAMETER(PAR.RFS_CBI);
 PARAMETER(PAR.RFS_Report_Date);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(PAR.RFS_Compliance_Period);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Retired_RIN_Code);
 PARAMETER(PAR.RFS_Transaction_Date);
 PARAMETER(LCL.COA_RIN_Trans_Partner_Nm);
 PARAMETER(LCL.COA_RIN_Trans_Partner_Id);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 ENDIF;

 ENDIF;

 // PAR.RFS Company ID = LCL.COA ULSD Company #
 PAR.RFS_Company_ID = LCL.COA_ULSD_Company_#;

}


