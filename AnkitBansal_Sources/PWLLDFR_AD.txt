// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWLLDFR
// ?Date: 14.08.2025 Time: 02:56:48
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 5/04/2021 JBB F17058 - Tattoo Repayments by Business User
//?                        Function created.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('REPAY');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?If Access Denied = Yes, exit program
CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?If Company# = 360 or 440, protect company field
CASE;

// IF LCL.CC Company Number is SBD Farms of Guymon, Ok
IF LCL.CC_Company_Number = 360;

// OR LCL.CC Company Number is Sioux City
OR LCL.CC_Company_Number = 440;

// LCL.allow Input - Company# = CND.No
LCL.allow_Input_Company# = 'N';

ENDIF;

//?USER: Initialize subfile control

// CTL.CC Company Number = LCL.CC Company Number
CTL.CC_Company_Number = LCL.CC_Company_Number;

//?USER: Initialize subfile record from DBF record

//?Load records for CTL.CC Company Number
CASE;

// IF DB1.CC Company Number EQ CTL.CC Company Number
IF DB1.CC_Company_Number = CTL.CC_Company_Number;

//?Load Repayment Status description
CASE;

// IF RCD.TRH Repayment Status is Cancelled
IF RCD.TRH_Repayment_Status = 'X';

// RCD.Repay Status Description = CON.Cancelled
RCD.Repay_Status_Description = 'Cancelled';

//?Load Repayment Status description
// IF RCD.TRH Repayment Status is Created
IF RCD.TRH_Repayment_Status = 'C';

// RCD.Repay Status Description = CON.Created
RCD.Repay_Status_Description = 'Created';

//?Load Repayment Status description
// IF RCD.TRH Repayment Status is In Progress
IF RCD.TRH_Repayment_Status = 'I';

// RCD.Repay Status Description = CON.In progress
RCD.Repay_Status_Description = 'In progress';

//?Load Repayment Status description
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Repay Status Description = CON.Repaid
RCD.Repay_Status_Description = 'Repaid';

ENDIF;

//?Load current payment step if repayment is In Progress
CASE;

// IF RCD.TRH Repayment Status is In Progress
IF RCD.TRH_Repayment_Status = 'I';

// Call program Rtv Pymt Parms+Repay  XF.
CALL PROGRAM(Rtv Pymt Parms+Repay  XF) ('PWIOXFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(LCL.Pmt_Current_Payment_Date);
PARAMETER(LCL.Pmt_Current_Payment_Step);
PARAMETER(NLL.PP_Repayment_Status);

//?If dates are equal, load payment step to record
CASE;

// IF LCL.Pmt Current Payment Date EQ RCD.TRH Payment Date
IF LCL.Pmt_Current_Payment_Date = RCD.TRH_Payment_Date;

//?If Tattoo Header Payment Step <> PPP Payment Step, update
CASE;

// IF DB1.TRH Payment Step NE LCL.Pmt Current Payment Step
IF DB1.TRH_Payment_Step <> LCL.Pmt_Current_Payment_Step;

EXECUTE FUNCTION(Chg Tattoo Repay Step CH) TYPE(CHGOBJ) FILE(PWAWCPP)           AB1368894;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(LCL.Pmt_Current_Payment_Step);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

// RCD.TRH Payment Step = LCL.Pmt Current Payment Step
RCD.TRH_Payment_Step = LCL.Pmt_Current_Payment_Step;

ENDIF;

ENDIF;

//?On first pass, position cursor on SFL selector
CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

SET CURSOR;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

//?Convert HH:MM:SS to HH:MM
// RCD.TRH Time Start HH:MM = RCD.TRH Time Start / CON.100 *
RCD.TRH_Time_Start_HHMM = RCD.TRH_Time_Start / 100;

// RCD.TRH Time Complete HH:MM = RCD.TRH Time Complete / CON.100 *
RCD.TRH_Time_Complete_HHMM = RCD.TRH_Time_Complete / 100;

//?Load records for CTL.CC Company Number
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?Change in Company Number
CASE;

// IF CTL.CC Company Number is *ZERO
IF CTL.CC_Company_Number = *ZERO;

// CTL.CC Company Number = LCL.CC Company Number
CTL.CC_Company_Number = LCL.CC_Company_Number;

//?Change in Company Number
// IF *OTHERWISE
IF *OTHERWISE;

//?F6=Create   F21=Print
CASE;

// IF LCL.CC Company Number NE CTL.CC Company Number
IF LCL.CC_Company_Number <> CTL.CC_Company_Number;

// LCL.CC Company Number = CTL.CC Company Number
LCL.CC_Company_Number = CTL.CC_Company_Number;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?F6=Create   F21=Print
// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

//?Check for a Repayment ID already in an open status (C or P)
// Call program Chk for Incmplt Repay XF.
CALL PROGRAM(Chk for Incmplt Repay XF) ('PWM7XFR');
PARAMETER(CTL.CC_Company_Number);
PARAMETER(LCL.TRH_Repayment_ID);
PARAMETER(LCL.TRH_Repayment_Status);

//?If a Repayment ID is incomplete, send error message
CASE;

// IF LCL.TRH Repayment Status is Created or In Progress
IF LCL.TRH_Repayment_Status = 'C'/'I';

//?Load status text for message
CASE;

// IF LCL.TRH Repayment Status is Created
IF LCL.TRH_Repayment_Status = 'C';

// LCL.Text 12 USR = CON.Created
LCL.Text_12_USR = 'Created';

//?Load status text for message
// IF LCL.TRH Repayment Status is In Progress
IF LCL.TRH_Repayment_Status = 'I';

// LCL.Text 12 USR = CON.In progress
LCL.Text_12_USR = 'In progress';

ENDIF;

// Send error message - 'Cannot Create a new Repayment. Repay ID &1 in a status of &2.'
ERROR(PRK1572);
MSGPARM(LCL.TRH_Repayment_ID);
MSGPARM(LCL.Text_12_USR);

//?If a Repayment ID is incomplete, send error message
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(CTL.CC_Company_Number);
PARAMETER('HPEREPAYBU');
PARAMETER(LCL.System_Value_Alpha_USR);

// Call program Pmt Create Repay Hdr  PV.
CALL PROGRAM(Pmt Create Repay Hdr  PV) ('PWMTPVR');
PARAMETER(CTL.CC_Company_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F6=Create   F21=Print
// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Zzz Repayment Listing PV.
CALL PROGRAM(Zzz Repayment Listing PV) ('PWL5PVR');
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.TRH_Repayment_ID);

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?5=Display  7=Work With Details  9=Edit/View Comments  11=Cancel
CASE;

// IF RCD.*SFLSEL is *Option 5 request
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp Tattoo Repay Hdr  DR.
CALL PROGRAM(Dsp Tattoo Repay Hdr  DR) ('PWL9D1R');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);

//?5=Display  7=Work With Details  9=Edit/View Comments  11=Cancel
// IF RCD.*SFLSEL is *Option 7 request
IF RCD.*SFLSEL = '7'/'7';

//?Work with Tattoo Repayment Details
DO;

// Call program WW Tattoo Repay Dtl   DF.
CALL PROGRAM(WW Tattoo Repay Dtl   DF) ('PWLKDFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(RCD.TRH_Repayment_Status);
PARAMETER(RCD.TRH_Date_Start);
PARAMETER(RCD.TRH_Time_Start);
PARAMETER(RCD.TRH_Date_Complete);
PARAMETER(RCD.TRH_Time_Complete);
PARAMETER(RCD.TRH_Payment_Date);
PARAMETER(RCD.TRH_Payment_Step);
PARAMETER(RCD.TRH_Backup_File_Prefix);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

//?5=Display  7=Work With Details  9=Edit/View Comments  11=Cancel
// IF RCD.*SFLSEL is *option 9 request
IF RCD.*SFLSEL = '9'/'9';

//?Edit/View comments
DO;

// Call program Edt Tattoo Repay Cmnt EF.
CALL PROGRAM(Edt Tattoo Repay Cmnt EF) ('PWLJEFR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

//?5=Display  7=Work With Details  9=Edit/View Comments  11=Cancel
// IF RCD.*SFLSEL is *Option 11 (Reusable)
IF RCD.*SFLSEL = '11';

//?Cancel Repayment
DO;

//?If not already cancelled, view cancel screen
CASE;

// IF NOT RCD.TRH Repayment Status is Cancelled
IF ! RCD.TRH_Repayment_Status = 'X';

EXECUTE FUNCTION(Chk Status for Cancel RT) TYPE(RTVOBJ) FILE(PWAXCPP)           AB1368483;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(LCL.Continue_Process_USR);
{
 //?USER: Initialize routine

 //?Initialize Continue Flag = Yes
 // PAR.Continue Process USR = CND.Yes
 PAR.Continue_Process_USR = 'Y';

 //?USER: Process Data record

 //?If status is Edited, In Progress, or Repaid: Do not allow Unpay
 CASE;

 // IF DB1.TRD Repayment Status is Unpaid/Edited/Repaid
 IF DB1.TRD_Repayment_Status = 'E'/'R'/'U';

 // PAR.Continue Process USR = CND.No
 PAR.Continue_Process_USR = 'N';

 QUIT;

 ENDIF;

}


//?Continue Cancel Y/N
CASE;

// IF LCL.Continue Process USR is No
IF LCL.Continue_Process_USR = 'N';

// Send error message - 'Cannot cancel a Repayment if detail is Unpaid, Edited, or Repaid.'
ERROR(PRK1595);
MSGPARM(RCD.*SFLSEL);

//?Continue Cancel Y/N
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Pmt Cancel Repayment  PV.
CALL PROGRAM(Pmt Cancel Repayment  PV) ('PWNMPVR');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(RCD.TRH_Repayment_Status);
PARAMETER(RCD.TRH_Date_Start);
PARAMETER(RCD.TRH_Time_Start);
PARAMETER(RCD.TRH_Payment_Date);
PARAMETER(RCD.TRH_Payment_Step);
PARAMETER(RCD.TRH_Backup_File_Prefix);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

ENDDO;

ENDIF;

