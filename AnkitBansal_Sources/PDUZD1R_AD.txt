// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDUZD1R
// ?Date: 14.08.2025 Time: 03:33:14
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?5/18/04 RMC PKTR01 - Co is now Load Start Co
EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Load detail screen from DBF record

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(DTL.Carrier_Code);
PARAMETER(DTL.Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(DB1.Shipping_Line);
PARAMETER(DTL.USR_Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


EXECUTE FUNCTION(Rtv 1st Ord Delv Date RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC1409516;
PARAMETER(DTL.Load_ID);
PARAMETER(*ZERO);
PARAMETER(DTL.Delivery_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Delivery Date     RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1409517;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Requested_Delivery_Date);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


EXECUTE FUNCTION(RTV Act ShpDt Last Ord RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1444830;
PARAMETER(DTL.Load_ID);
PARAMETER(99999);
PARAMETER(DTL.Actual_Ship_Date);
PARAMETER(DTL.Ship_To_Name);
PARAMETER(DTL.Ship_To_City);
PARAMETER(DTL.Ship_To_State_Code);
{
 //?USER: Initialize routine

 // PAR.Actual Shipped Date = CON.*ZERO
 PAR.Actual_Shipped_Date = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Actual Ship Date  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1444831;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Ship_To_Name);
 PARAMETER(PAR.Ship_To_City);
 PARAMETER(PAR.Ship_To_State_Code);
 PARAMETER(WRK.Actual_Shipped_Date);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF WRK.Actual Shipped Date GT PAR.Actual Shipped Date
 IF WRK.Actual_Shipped_Date > PAR.Actual_Shipped_Date;

 // PAR.Actual Shipped Date = WRK.Actual Shipped Date
 PAR.Actual_Shipped_Date = WRK.Actual_Shipped_Date;

 ENDIF;

}


//?Use Sail Port information for Ship To information if available
CASE;

// IF DB1.Sail Port Delv Terminal NE WRK.BLANK
IF DB1.Port_Delv_Terminal <> WRK.BLANK;

EXECUTE FUNCTION(RTV Shp Line/Port All  RT) TYPE(RTVOBJ) FILE(PDLCREP)          AC1502160;
PARAMETER(DB1.Shipping_Line);
PARAMETER(DB1.Port_Delv_Terminal);
PARAMETER(DTL.Port_City);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(DTL.Ship_To_State_Code);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


// DTL.Ship To City = DTL.Sail Port City
DTL.Ship_To_City = DTL.Port_City;

ENDIF;

// DTL.Trailer ID USR = DTL.Trailer Id
DTL.Trailer_ID_USR = DTL.Trailer_Id;

//?USER: Process command keys

CASE;

// IF DTL.*CMD key is CF20
IF DTL.*CMD_key = '20';

// Call program DSP PD Traffic Comment DF.
CALL PROGRAM(DSP PD Traffic Comment DF) ('PDSKDFR');
PARAMETER(DTL.Load_ID);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

