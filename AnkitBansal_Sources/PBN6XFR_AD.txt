// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBN6XFR
// ?Date: 14.08.2025 Time: 03:48:40
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//? 2/17/17 Brad Baden  E9064 - Add company 440 processing
//?         Changed the logic in the program to read the Company
//?         Defaults Internal file to process every Plant Company,
//?         instead of hard coding each and every Plant Company.
//?         The data for calculating the average weight is now
//?         stored in an array for the restricted Item and the
//?         current Plant Company in the file.  After the array is
//?         built, the array is read and the average calculated
//?         based on each record in the array.
ENDDO;

EXECUTE FUNCTION(Bld Avg Unit Weight array) TYPE(RTVOBJ) FILE(PDJYREP)          AC2132452;
PARAMETER(PAR.Item_Code);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Clr Co/ITM Avg Unit Wgt) TYPE(DLTOBJ) ARRAY(ARR_Co_ITM_Avg_UnitAC2132455;
 //?USER: Process Data record

 //?If record is active, process it
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 EXECUTE FUNCTION(RTV Pces*Bag,Unit wtAvgRT) TYPE(RTVOBJ) FILE(CABZREP)          AC2093462;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(LCL.UOM_Primary);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(LCL.Piece_Count_Item);
 PARAMETER(LCL.Pieces_Per_Bag);
 PARAMETER(LCL.Bags_Per_Unit);
 PARAMETER(LCL.Record_Status);
 PARAMETER(LCL.Record_Status_1_Usr);
 {
  //?USER: Processing if Data record not found

  // PAR.Record Status 1 Usr = CND.*Does Not Exist
  PAR.Record_Status_1_Usr = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Status 1 Usr = CND.*Exists
  PAR.Record_Status_1_Usr = 'E';

 }

 //?If record found, calc Total Pieces per Unit/Crt array record
 CASE;

 // IF LCL.Record Status 1 Usr is *Exists
 IF LCL.Record_Status_1_Usr = 'E';

 // LCL.Total Pieces per Unit = LCL.Pieces Per Bag * LCL.Bags Per Unit *
 LCL.Total_Pieces_per_Unit = LCL.Pieces_Per_Bag * LCL.Bags_Per_Unit;

 //?If Total Pieces per unit is zero, make it 1
 CASE;

 // IF LCL.Total Pieces per Unit is EQ 0
 IF LCL.Total_Pieces_per_Unit = 0;

 // LCL.Total Pieces per Unit = CON.1
 LCL.Total_Pieces_per_Unit = 1;

 ENDIF;

 EXECUTE FUNCTION(Crt Co/ITM Avg Unit Wgt) TYPE(CRTOBJ) ARRAY(ARR_Co_ITM_Avg_UnitAC2132454;
 PARAMETER(PAR.Item_Code);
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.UOM_Primary);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(LCL.Piece_Count_Item);
 PARAMETER(LCL.Pieces_Per_Bag);
 PARAMETER(LCL.Bags_Per_Unit);
 PARAMETER(LCL.Record_Status);
 PARAMETER(LCL.Total_Pieces_per_Unit);
 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(Rtv Co/ITM Avg Unit Wgt) TYPE(RTVOBJ) ARRAY(ARR_Co_ITM_Avg_UnitAC2132456;
PARAMETER(PAR.DP_Unit_Weight_Average);
PARAMETER(PAR.DP_Total_Pieces_per_unit);
PARAMETER(PAR.DP_Record_Status);
PARAMETER(PAR.DP_Base_Unit_of_Measure);
PARAMETER(PAR.UOM_Primary);
PARAMETER(LCL.Count_USR);
{
 //?USER: Initialize routine

 // PAR.Count USR = CON.*ZERO
 PAR.Count_USR = *ZERO;

 // PAR.DP Record Status = CND.*blank
 PAR.DP_Record_Status = *BLANK;

 //?USER: Process Data record

 // PAR.Count USR = PAR.Count USR + CON.1
 PAR.Count_USR = PAR.Count_USR + 1;

 // LCL.Unit Weight = LCL.Unit Weight + DB1.Unit Weight
 LCL.Unit_Weight = LCL.Unit_Weight + DB1.Unit_Weight;

 //?If at least one Record Status is Active, return value
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PAR.DP Record Status = DB1.Record Status
 PAR.DP_Record_Status = DB1.Record_Status;

 ENDIF;

 //?If U/M Primary is not blank, populate the return value
 CASE;

 // IF DB1.U/M - Primary is Entered
 IF DB1.UOM_Primary <> *BLANK;

 // PAR.U/M - Primary = DB1.U/M - Primary
 PAR.UOM_Primary = DB1.UOM_Primary;

 ENDIF;

 //?USER: Exit processing

 //?If count > 0, calculate DP Unit Average Weight
 CASE;

 // IF PAR.Count USR is GT 0
 IF PAR.Count_USR > *ZERO;

 // PAR.DP Unit Weight Average = LCL.Unit Weight / PAR.Count USR *
 PAR.DP_Unit_Weight_Average = LCL.Unit_Weight / PAR.Count_USR;

 ENDIF;

 // PAR.DP Total Pieces per unit = DB1.Total Pieces per Unit
 PAR.DP_Total_Pieces_per_unit = DB1.Total_Pieces_per_Unit;

}


//?Use the item dft fields if item not assigned to a company
CASE;

// IF LCL.Count USR is Zero
IF LCL.Count_USR = *ZERO;

EXECUTE FUNCTION(Rtv DP Fields         RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC2098562;
PARAMETER(PAR.Item_Code);
PARAMETER(LCL.UOM_Primary_Dft);
PARAMETER(LCL.UOM_Pricing_Dft);
PARAMETER(LCL.Unit_Weight);
PARAMETER(LCL.Pieces_Per_Bag);
PARAMETER(LCL.Bags_Per_Unit);
PARAMETER(LCL.Record_Status);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.DP Total Pieces per unit = LCL.Pieces Per Bag * LCL.Bags Per Unit *
PAR.DP_Total_Pieces_per_unit = LCL.Pieces_Per_Bag * LCL.Bags_Per_Unit;

// PAR.U/M - Primary = LCL.U/M - Primary Dft
PAR.UOM_Primary = LCL.UOM_Primary_Dft;

CASE;

// IF PAR.DP Total Pieces per unit is EQ 0
IF PAR.DP_Total_Pieces_per_unit = 0;

// PAR.DP Total Pieces per unit = CON.1
PAR.DP_Total_Pieces_per_unit = 1;

ENDIF;

// PAR.DP Unit Weight Average = LCL.Unit Weight
PAR.DP_Unit_Weight_Average = LCL.Unit_Weight;

// PAR.DP Record Status = LCL.Record Status
PAR.DP_Record_Status = LCL.Record_Status;

ENDIF;

// PAR.DP Base Unit of Measure = PAR.U/M - Primary
PAR.DP_Base_Unit_of_Measure = PAR.UOM_Primary;

