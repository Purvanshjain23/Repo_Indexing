     H/TITLE Edt Item/Warehouse WIM ER Edit record(1 screen)
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Edit record(1 screen)
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 04/11/23  Time  : 13:53:12
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPUYNE1R#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Edt Item/Warehouse WIM ER Edit record(1 screen)
      *
     FPUCGCPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : WIM Item Balance          Retrieval index
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAABREL3  IF   E           K DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3  IF   E           K DISK
      * RTV : Warehouse Codes           Active records only
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FOMBYREL1  IF   E           K DISK
      * RTV : Item Default              Retrieval index
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FOMFAREL1  IF   E           K DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FOME9REL0  IF   E           K DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOME8REL0  IF   E           K DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUCGCPL0  UF A E           K DISK
      * UPD : WIM Item Balance          Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
     D @1DBRC        E DS                  EXTNAME(PUCGCPL0)
      * UPD : WIM Item Balance          Update index
      * Current/previous master file format fields for change control
      *
     D #1DBRC          DS           254
      * Stored master file format fields
     D  #1DB1                  1      1
      *
     D YARDCS          DS           254
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      /EJECT
     D XDITS           DS
      * Internal date
     D  XDITSM                 1     26
     D  XDITSD                 1     10
     D  XDITSX                11     11
     D  XDITST                12     19
     D  XDITSZ                20     20
     D  XDITSN                21     26  0
      /EJECT
     D XDI2T           DS
      * Internal date
     D  XDI2DT                 1     10
     D  XDI2CY                 1      4  0
     D  XDI2CC                 1      1  0
     D  XDI2YY                 2      4  0
     D  XDI2MM                 6      7  0
     D  XDI2DD                 9     10  0
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XTC2            DS
      * Time: hours, minutes, seconds TM#
     D  XTTI2                  1      8
     D  XTH2                   1      2  0
     D  XTN2                   4      5  0
     D  XTS2                   7      8  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S             30
     D  WP0002         S             30
     D  WP0003         S             30
     D  WP0004         S             25
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0RPT          S              1
     D  W0BYP          S              1
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  W0GRP          S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0PMD          S              3
     D  YN0001         S              8  0
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S             30
     D  WL0004         S              8  0
     D  WL0005         S              3  0
     D  WL0006         S             30
     D  WL0007         S              3
     D  WL0008         S             30
     D  Y2LSNO         S              7  0
     D  W0INVL         S             25
     D  W0VLMP         S              1
     D  W0CNNM         S             25
     D  WUI3ST         S              1
     D  WUDMCD         S              3
     D  ZADFMF         S             10
     D  WUEOCD         S              7
     D  W0DCF          S              1
     D  WK1X01         S              1
     D  WK1X02         S              1
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  W0CLPG         S             10
     D  WQ0003         S              3
     D  YN0002         S             30
     D  YN0003         S              2
     D  YN0004         S              2
     D  YN0005         S              2
     D  YL0001         S              1
     D  YL0002         S              3  0
     D  YL0003         S              3  0
     D  YL0004         S              3  0
     D  YL0005         S              1
     D  WQ0004         S              3  0
     D  WQ0005         S              3  0
     D  WQ0006         S              3  0
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  W0EXVL         S             25
     D  XDTSDL         S             26
     D  WN0001         S             26
     D  WN0002         S             50
     D  WN0003         S             15
     D  WN0004         S             50
     D  WN0005         S             15
     D  ##TMS          S             26
     D  WN0006         S             26
     D  WN0007         S             50
     D  WN0008         S             15
     D  WN0009         S             26
     D  WN0010         S             50
     D  WN0011         S             15
     D  YARDC          S              1
     D  XDDTFM         S              3
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  WUAUNA         S             30
     D  WQSJ01         S                   LIKE(DNDNCD)
     D  WQSK01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D J3              S              1    DIM(3)
     D K3              S              1    DIM(3)
     D J7              S              1    DIM(7)
     D K7              S              1    DIM(7)
     D #L3             S              1    DIM(3)
     D #L7             S              1    DIM(7)
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS            11
      * KEY: WIM Item Balance          Retrieval index
      * B :  Company Number
     D  P1AIC3                 1      2P 0
      * B :  Item Code
     D  P1HGCD                 3      6P 0
      * B :  Warehouse Code
     D  P1AJCD                 7      9
      * B :  Inventory Item Type
     D  P1NDSC                10     11
     D P2PARM          DS
      * I : MAP Company Name
     D  P2APTX                 1     30
     D P3PARM          DS
      * I : MAP Item Description
     D  P3GENA                 1     30
     D P4PARM          DS
      * I : MAP USR Warehouse description
     D  P4CCNA                 1     30
     D P5PARM          DS
      * I : MAP Inventory Item Type Dsc U
     D  P5UUU1                 1     25
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Warehouse Shp/Act Co Invl'
      * Company Number
     D  ZA0001                 1      3
      * Warehouse Code
     D  ZA0002                 4      6
      * Message data for 'Whs ActCo N/Alw COPACK'
      * Accounting Company
     D  ZA0003                 1      3
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WAAJCD
     I              ADF8NA                      WAF8NA
     I              ADACNA                      WAACNA
     I              ADADNA                      WAADNA
     I              ADAENA                      WAAENA
     I              ADAJNA                      WAAJNA
     I              ADBTTX                      WABTTX
     I              ADAOCD                      WAAOCD
     I              ADBGCD                      WABGCD
     I              ADVHST                      WAVHST
     I              ADMPNA                      WAMPNA
     I              ADWPST                      WAWPST
     I              ADXUST                      WAXUST
     I              ADT0ST                      WAT0ST
     I              ADT1ST                      WAT1ST
     I              ADDBNB                      WADBNB
     I              ADT2ST                      WAT2ST
     I              ADT3ST                      WAT3ST
     I              ADT4ST                      WAT4ST
     I              ADT6ST                      WAT6ST
     I              ADBWC3                      WABWC3
     I              ADBTC3                      WABTC3
     I              ADBUC3                      WABUC3
     I              ADBVC3                      WABVC3
     I              ADFCAA                      WAFCAA
     I              ADRQSX                      WARQSX
     I              ADRRSX                      WARRSX
     I              ADRSSX                      WARSSX
     I              ADRTSX                      WARTSX
     I              ADT7ST                      WAT7ST
     I              ADT8ST                      WAT8ST
     I              ADRNSX                      WARNSX
     I              ADROSX                      WAROSX
     I              ADRPSX                      WARPSX
     I              ADUVST                      WAUVST
     I              ADUWST                      WAUWST
     I              ADUXST                      WAUXST
     I              ADVSST                      WAVSST
     I              ADAATM                      WAAATM
     I              ADAYNA                      WAAYNA
     I              ADA0NA                      WAA0NA
     I              ADAXDT                      WAAXDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: WIM Item B
     C     P2APTX        PARM                    WP0001                         Company Name
     C     P3GENA        PARM                    WP0002                         Item Descriptio
     C     P4CCNA        PARM                    WP0003                         USR Warehouse d
     C     P5UUU1        PARM                    WP0004                         Inventory Item
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Repeat until cancelled
     C                   MOVEL     'Y'           W0RPT
      * Display and process key screen
     C                   DOU       W0RPT = 'N'
     C                   EXSR      BADSKY
     C                   END
      * Terminate program
     C                   EXSR      ZXEXPG
      *****************************************************************
      /EJECT
     CSR   BADSKY        BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                   MOVEL     'Y'           W0BYP
      * Initialize key screen
     C                   EXSR      MDIZ#K
      * Signal start of transaction
     C                   MOVEL     'Y'           W0TRN
      * Ensure transaction continues (if reset)
     C                   DOW       W0TRN = 'Y' OR
     C                             W0TRN = 'K'
     C                   MOVEL     'Y'           W0TRN
      * Conduct screen conversation
      * Convert internal to external form
     C                   DOW       W0TRN = 'Y'
     C  N09              EXSR      MNCV#K
      * Is bypass key screen still viable?
     C                   IF        W0BYP = 'Y'
      * One or more key fields is blank
      * HOME: Reset screen fields
     C                   IF        #1AIC3 = *ZERO OR
     C                             #1HGCD = *ZERO OR
     C                             #1AJCD = ' ' OR
     C                             #1NDSC = ' ' OR
     C                             *IN30
     C                   MOVEL     'N'           W0BYP
     C                   END
     C                   END
      * Bypass key screen
      * Display key screen
     C                   IF        W0BYP = 'N'
     C                   EXSR      BBEXFM
     C                   END
      * Cancel key screen bypass
     C                   MOVEL     'N'           W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09              CAS                     BCCHMD
      * HOME: Reset screen fields
     C   30              CAS                     BDHMKY
      * Process key screen input
     C                   CAS                     BEPRKY
     C                   END
     C                   DOW       W0TRN = 'R'
     C                   MOVEL     'Y'           W0TRN
     C                   EXSR      BEPRKY
     C                   END
      *
     C                   END
     C                   END
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBEXFM        BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSAK
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     'K'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDKEY
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   BCCHMD        BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'CHG'         W0PMD
     C                   ELSE
     C                   MOVEL     'ADD'         W0PMD
     C                   END
      *================================================================
     CSR   BCEXIT        ENDSR
      /EJECT
     CSR   BDHMKY        BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                   MOVEL     'N'           W0TRN
      *================================================================
     CSR   BDEXIT        ENDSR
      /EJECT
     CSR   BEPRKY        BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                   EXSR      MAIZ#1
      * Validate key fields
     C                   EXSR      BFVLKY
     C     *IN99         CABEQ     '1'           BEEXIT
     C     YPMTFD        CABNE     *BLANKS       BEEXIT
      * Check for existing record
     C     KRTV          KLIST
     C                   KFLD                    CGAIC3                         Company Number
     C                   KFLD                    CGHGCD                         Item Code
     C                   KFLD                    CGAJCD                         Warehouse Code
     C                   KFLD                    CGNDSC                         Inventory Item
      * Setup key
     C                   Z-ADD     #1AIC3        CGAIC3
     C                   Z-ADD     #1HGCD        CGHGCD
     C                   MOVEL     #1AJCD        CGAJCD
     C                   MOVEL     #1NDSC        CGNDSC
     C     KRTV          CHAIN     @CGCPJ8                            9091      *
      * Record locked
     C                   IF        *IN91
     C                   SETON                                        993132    *
     C                   SETON                                        3334      *
     C                   GOTO      BEEXIT
     C                   END                                                    FI 91
      *
      * If record does not exist, flip to add mode
     C                   IF        *IN90
     C                   MOVEL     'ADD'         W0PMD
      * USER: Initialize detail screen (new record)
      * Rtv Item desc/Vendor # RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0001                         Company Number
     C                   Z-ADD     #1HGCD        WL0002                         Item Code
     C                   EXSR      SARVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0003        #PGENA                         Description Lin
     C                   Z-ADD     WL0004        YN0001                         Vendor Item Def
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0005                         Company Number
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0006        #PAPTX                         Name
      * RTV Whse Descrip       RT - Warehouse Codes  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  #1AJCD        WL0007                         Warehouse Code
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0008        #PCCNA                         Warehouse Descr
     C                   MOVEL     'A'           #1VSST                         Record Status
     C                   ELSE
      * If record does exist, flip to change mode
     C                   MOVEL     'CHG'         W0PMD
      * Load screen fields from DBF
     C                   EXSR      MBFL#1
      * CALC: Detail screen function fields
     C                   EVAL      #DSMNA = ' '                                 Record Status D
      * Record Status Desc DRV
      * PAR.Record Status Desc DRV = Condition name of PAR.Record Status
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1255478       Y2LSNO                         List number
     C                   PARM      #1VSST        W0INVL                         Record Status
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DSMNA        PARM                    W0CNNM                         Record Status D
      *
     C                   EVAL      #DSQTX = ' '                                 Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0005                         Company Number
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0006        #DSQTX                         Name
      * USER: Initialize detail screen (existing record)
      * Rtv Item desc/Vendor # RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0001                         Company Number
     C                   Z-ADD     #1HGCD        WL0002                         Item Code
     C                   EXSR      SARVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0003        #PGENA                         Description Lin
     C                   Z-ADD     WL0004        YN0001                         Vendor Item Def
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0005                         Company Number
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0006        #PAPTX                         Name
      * RTV Whse Descrip       RT - Warehouse Codes  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  #1AJCD        WL0007                         Warehouse Code
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0008        #PCCNA                         Warehouse Descr
      * DTL.Inventory Item Type Dsc U = Condition name of DTL.Inventory I
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      2207509       Y2LSNO                         List number
     C                   PARM      #1NDSC        W0INVL                         Inventory Item
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #PUUU1        PARM                    W0CNNM                         Inventory Item
      *
     C                   END
      *..................................................
     C   99              GOTO      BEEXIT
      *
      * No error: Display and process details
     C                   IF        YPMTFD = ' '
     C                   EXSR      CADSDA
     C                   END
      *
      *================================================================
     CSR   BEEXIT        ENDSR
      /EJECT
     CSR   BFVLKY        BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                   MOVEL     V1AIC3        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC3            3
     C                   MOVEA     *BLANKS       K3
     C                   Z-ADD     3             C                 3 0
     C                   Z-ADD     3             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUDMCD        J3
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        3
     C     J3(C)         IFNE      ' '
     C                   MOVEA     J3(C)         K3(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K3            JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC3        TESTC             1
     C     TESTC         IFGT      '?'
     C     TESTC         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC3               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC3        WUDMCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                   IF        W0RTN = @CN(001)
     C                   MOVEL     'USR0752'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #1AIC3                         CD3 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUDMCD        #1AIC3                         CD3 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V1HGCD        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V1HGCD        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(001)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #1HGCD                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #1HGCD                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Inventory Item Type
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Inventory Item Type
     C                   IF        '#1NDSC' = YPMTFD
     C                   MOVEL     #1NDSC        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZFNDSC
     C                   SELECT
     C                   WHEN      W0INVL = 'FG'                                FG
     C                   Z-ADD     1             ZFNDSC
     C                   WHEN      W0INVL = 'WP'                                WP
     C                   Z-ADD     2             ZFNDSC
     C                   WHEN      W0INVL = 'PT'                                PT
     C                   Z-ADD     3             ZFNDSC
     C                   ENDSL
     C                   EXFMT     ZENDSC
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZFNDSC = 1
     C                   MOVEL     'FG'          W0INVL                         FG
     C                   WHEN      ZFNDSC = 2
     C                   MOVEL     'WP'          W0INVL                         WP
     C                   WHEN      ZFNDSC = 3
     C                   MOVEL     'PT'          W0INVL                         PT
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1NDSC
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        W0PMD <> 'ADD' OR
     C                             YPMTFD <> ' '
     C                   END
      * Check relations
      * Check reference to Company Item
     C                   EXSR      VACKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        993132    *
     C                   END
      * Check reference to Warehouse Codes
     C                   EXSR      VBCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9933      *
     C                   END
      * USER: Validate key screen
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YPMTFD = ' '
     C                   Z-ADD     #1AIC3        WL0005                         Company Number
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0006        #PAPTX                         Name
      * Rtv Desc/Sts          RT - Company Item  * 
     C                   EXSR      SDRVGN
      * Rtv Acct&Ship Co & Dsc RT - Warehouse Codes  * 
     C                   EXSR      SERVGN
      * If Accounting/Shipping Not Equal to Co Then Show Error.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Accounting Company EQ KEY.Company Number
      *   |- c2    : LCL.Shipping Company EQ KEY.Company Number
      *   '-
     C                   IF        YL0003 = #1AIC3 OR
     C                             YL0002 = #1AIC3
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        ZA0001                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0001 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
     C                   MOVEL     #1AJCD        ZA0002                         Warehouse Code
      * Send message 'Warehouse Shp/Act Co Invl'
     C                   MOVEL     'USR5188'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        993133    *
      *
     C                   GOTO      BFEXIT                                       *QUIT
     C                   END                                                    *FI
      * S16592 DN 05/22/20-New COPACK Logic for ALL Companies.
      * CASE: *OTHERWISE
      * RTV Item Str Type     RT - Item Default  * 
     C                   EXSR      SFRVGN
      * CASE: LCL.Item Structure Type Code is COPACK
      * RTV Alpha Value        RT - Company Values  * 
     C                   IF        YL0004 = 900
     C                   EXSR      SGRVGN
      * Allow to Assign COPACK if Yes Else Send Error Message.
      * CASE: LCL.Allow COPACK Items Whs AC is No
      * Setup message data for message
      * Convert Accounting Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        YL0005 = 'N'
     C                   IF        YL0003 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     YL0003        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        ZA0003                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0003 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Whs ActCo N/Alw COPACK'
     C                   MOVEL     'USR4897'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   GOTO      BFEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
      * KEY.Inventory Item Type Dsc U = Condition name of KEY.Inventory I
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      2207509       Y2LSNO                         List number
     C                   PARM      #1NDSC        W0INVL                         Inventory Item
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #PUUU1        PARM                    W0CNNM                         Inventory Item
      *
     C                   END
      * Company Number required
     C                   IF        #1AIC3 = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Item Code required
     C                   IF        #1HGCD = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9932      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Warehouse Code required
     C                   IF        #1AJCD = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9933      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Inventory Item Type required
     C                   IF        #1NDSC = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9934      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   BFEXIT        ENDSR
      /EJECT
     CSR   CADSDA        BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
      * Convert internal to external form
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      MOCV#D
      * Display detail screen
     C                   EXSR      CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Redisplay previous screen
     C   12              CAS                     CCDSPV
      * HOME: Reset screen fields
     C   30              CAS                     CCDSPV
      * Process detail screen input
     C                   CAS                     CFPRSC
     C                   END
     C                   IF        W0TRN = 'R'
     C                   IF        W0PMD = 'ADD'
     C                   EXSR      MAIZ#1
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   CBEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     '1'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y1SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CBEXIT        ENDSR
      /EJECT
     CSR   CCDSPV        BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30              MOVEL     'R'           W0TRN
     C   12              MOVEL     'K'           W0TRN
      *================================================================
     CSR   CCEXIT        ENDSR
      /EJECT
     CSR   CFPRSC        BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate details
     C                   EXSR      DCVLDL
      * QUIT if error:
     C   99              GOTO      CFEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           CFEXIT
      * Prompt for confirmation
     C                   EXSR      EAPMCF
      * Quit if not confirmed
     C                   IF        *IN99
     C                   SETOFF                                       99
     C                   GOTO      CFEXIT
     C                   END
      * No error: update record
     C                   EXSR      EBPR##
      *================================================================
     CSR   CFEXIT        ENDSR
      /EJECT
     CSR   DCVLDL        BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Initialise derived fields
     C                   IF        YPMTFD = ' '
     C                   EXSR      MFIZ#2
     C                   END
      * Validate Record Status
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Record Status
     C                   IF        '#1VSST' = YPMTFD
     C                   MOVEL     #1VSST        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHVSST
     C                   SELECT
     C                   WHEN      W0INVL = 'A'                                 A
     C                   Z-ADD     1             ZHVSST
     C                   WHEN      W0INVL = 'D'                                 D
     C                   Z-ADD     2             ZHVSST
     C                   WHEN      W0INVL = 'I'                                 I
     C                   Z-ADD     3             ZHVSST
     C                   ENDSL
     C                   EXFMT     ZGVSST
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHVSST = 1
     C                   MOVEL     'A'           W0INVL                         A
     C                   WHEN      ZHVSST = 2
     C                   MOVEL     'D'           W0INVL                         D
     C                   WHEN      ZHVSST = 3
     C                   MOVEL     'I'           W0INVL                         I
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1VSST
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Check relations
      * Check reference to Item Structure Class
     C                   EXSR      VCCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * Check reference to Item Structure Group
     C                   EXSR      VDCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * Check reference to Item Structure Type
     C                   EXSR      VECKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * CALC: Detail screen function fields
     C                   IF        YPMTFD = ' '
     C                   EVAL      #DSMNA = ' '                                 Record Status D
      * Record Status Desc DRV
      * PAR.Record Status Desc DRV = Condition name of PAR.Record Status
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1255478       Y2LSNO                         List number
     C                   PARM      #1VSST        W0INVL                         Record Status
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DSMNA        PARM                    W0CNNM                         Record Status D
      *
     C                   EVAL      #DSQTX = ' '                                 Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1AIC3        WL0005                         Company Number
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0006        #DSQTX                         Name
     C                   END
      * Record Status required
     C                   IF        #1VSST = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   EAPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert internal to external form
     C                   EXSR      MOCV#D
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      EAEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   EAEXIT        ENDSR
      /EJECT
     CSR   EBPR##        BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C     W0PMD         CASEQ     'ADD'         ECADRQ
      * Process update request
     C     W0PMD         CASNE     'ADD'         EECHRQ
     C                   END
     C                   IF        W0RTN = ' '
      * Exit after successful add
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'N'           W0RPT
     C                   END
      * Restart program for next record
     C                   MOVEL     'N'           W0TRN
     C                   END
      *================================================================
     CSR   EBEXIT        ENDSR
      /EJECT
     CSR   ECADRQ        BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Crt WIM Item Balance  CR - WIM Item Balance  * 
     C                   EXSR      SHCRRC
      * Send message '*Record added'
     C                   IF        W0RTN = ' '
     C                   MOVEL     'Y2U0011'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
      *================================================================
     CSR   ECEXIT        ENDSR
      /EJECT
     CSR   EECHRQ        BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Chg WIM Item Balance  CH - WIM Item Balance  * 
     C                   EXSR      SICHRC
      * Data update error
      * Reset screen fields if changed record
     C                   IF        W0RTN <> ' '
     C     W0RTN         CASEQ     'Y2U0007'     MBFL#1
     C                   END
     C                   ELSE
      * Send message '*Record changed'
     C                   IF        YARDC = 'Y'
     C                   MOVEL     'Y2U0012'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *================================================================
     CSR   EEEXIT        ENDSR
      /EJECT
     CSR   GADSAK        BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   GBDSAD        BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      * Protect key fields on detail screen
     C                   SETON                                        88        *
      * Enable key screen
     C                   SETON                                        87        *
      *================================================================
     CSR   GBEXIT        ENDSR
      /EJECT
     CSR   MAIZ#1        BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                   MOVEL     P2APTX        #PAPTX                         Company Name
     C                   Z-ADD     *ZERO         #1BOWG                         On Hand Weight
     C                   Z-ADD     *ZERO         #1DDQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         #1QVWG                         In Transit Weig
     C                   Z-ADD     *ZERO         #1S9QT                         In Transit UOM1
     C                   Z-ADD     *ZERO         #1TAQT                         Qty Available t
     C                   Z-ADD     *ZERO         #1QYWG                         On Hold Weight
     C                   Z-ADD     *ZERO         #1TDQT                         On Hold UOM1 Su
     C                   Z-ADD     *ZERO         #1QZWG                         Available Weigh
     C                   Z-ADD     *ZERO         #1TEQT                         Available UOM1
     C                   Z-ADD     *ZERO         #1RINB                         Item Structure
     C                   Z-ADD     *ZERO         #1RHNB                         Item Structure
     C                   Z-ADD     *ZERO         #1RGNB                         Item Structure
     C                   EVAL      #DSQTX = ' '                                 Company Name DR
     C                   MOVEL     P3GENA        #PGENA                         Item Descriptio
     C                   MOVEL     P4CCNA        #PCCNA                         USR Warehouse d
     C                   MOVEL     P5UUU1        #PUUU1                         Inventory Item
     C                   EVAL      #1VSST = ' '                                 Record Status
     C                   EVAL      #DSMNA = ' '                                 Record Status D
     C                   MOVEL     XDTSDL        #1BGTS                         Create Date Tim
      * Clear external version also
     C                   Z-ADD     *ZERO         V1BGTS
     C                   EVAL      #1RUU1 = ' '                                 Create User ID
     C                   EVAL      #1RVU1 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        #1BHTS                         Update Date Tim
      * Clear external version also
     C                   Z-ADD     *ZERO         V1BHTS
     C                   EVAL      #1RWU1 = ' '                                 Update User Id
     C                   EVAL      #1RXU1 = ' '                                 Update Program
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @CGCPJ8 fields to screen
      *================================================================
     C                   Z-ADD     CGBOWG        #1BOWG                         On Hand Weight
     C                   Z-ADD     CGDDQT        #1DDQT                         On Hand UOM1 Su
     C                   Z-ADD     CGQVWG        #1QVWG                         In Transit Weig
     C                   Z-ADD     CGS9QT        #1S9QT                         In Transit UOM1
     C                   Z-ADD     CGTAQT        #1TAQT                         Qty Available t
     C                   Z-ADD     CGQYWG        #1QYWG                         On Hold Weight
     C                   Z-ADD     CGTDQT        #1TDQT                         On Hold UOM1 Su
     C                   Z-ADD     CGQZWG        #1QZWG                         Available Weigh
     C                   Z-ADD     CGTEQT        #1TEQT                         Available UOM1
     C                   Z-ADD     CGRINB        #1RINB                         Item Structure
     C                   Z-ADD     CGRHNB        #1RHNB                         Item Structure
     C                   Z-ADD     CGRGNB        #1RGNB                         Item Structure
     C                   Z-ADD     CGAIC3        #1AIC3                         Company Number
     C                   Z-ADD     CGHGCD        #1HGCD                         Item Code
     C                   MOVEL     CGAJCD        #1AJCD                         Warehouse Code
     C                   MOVEL     CGNDSC        #1NDSC                         Inventory Item
     C                   MOVEL     CGVSST        #1VSST                         Record Status
     C                   MOVEL     CGBGTS        #1BGTS                         Create Date Tim
     C                   MOVEL     CGRUU1        #1RUU1                         Create User ID
     C                   MOVEL     CGRVU1        #1RVU1                         Create Program
     C                   MOVEL     CGBHTS        #1BHTS                         Update Date Tim
     C                   MOVEL     CGRWU1        #1RWU1                         Update User Id
     C                   MOVEL     CGRXU1        #1RXU1                         Update Program
      * Hold existing record image
     C                   MOVEL     @1DBRC        #1DBRC
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MDIZ#K        BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                   Z-ADD     *ZERO         #1AIC3                         Company Number
      * Clear external version also
     C                   EVAL      V1AIC3 = ' '
     C                   MOVEL     P2APTX        #PAPTX                         Company Name
     C                   Z-ADD     *ZERO         #1HGCD                         Item Code
      * Clear external version also
     C                   EVAL      V1HGCD = ' '
     C                   MOVEL     P3GENA        #PGENA                         Item Descriptio
     C                   EVAL      #1AJCD = ' '                                 Warehouse Code
     C                   MOVEL     P4CCNA        #PCCNA                         USR Warehouse d
     C                   EVAL      #1NDSC = ' '                                 Inventory Item
     C                   MOVEL     P5UUU1        #PUUU1                         Inventory Item
      * USER: Initialize key screen
     C                   Z-ADD     P1AIC3        #1AIC3                         Company Number
     C                   Z-ADD     P1HGCD        #1HGCD                         Item Code
     C                   MOVEL     P1AJCD        #1AJCD                         Warehouse Code
     C                   MOVEL     P1NDSC        #1NDSC                         Inventory Item
      *================================================================
     CSR   MDEXIT        ENDSR
      /EJECT
     CSR   MFIZ#2        BEGSR
      *================================================================
      * Initialise derived fields
      *================================================================
     C                   EVAL      #DSQTX = ' '                                 Company Name DR
     C                   EVAL      #DSMNA = ' '                                 Record Status D
      *================================================================
     CSR   MFEXIT        ENDSR
      /EJECT
     CSR   MNCV#K        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1AIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1AIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1HGCD <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1HGCD        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1HGCD                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1HGCD = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   MOCV#D        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1AIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1AIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1HGCD <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1HGCD        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1HGCD                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1HGCD = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Create Date Timestamp to display format
      * Convert date
     C                   IF        #1BGTS = XDTSDL
     C                   Z-ADD     *ZERO         V1BGTS
     C                   ELSE
     C                   MOVEL     #1BGTS        XDITSM
     C                   MOVEL     XDITSD        XDI2DT
     C                   MOVEL     XDITST        XTTI2
     C                   EXSR      XDV24T
     C     XDEXDT        MULT      1000000       V1BGTS
     C                   Z-ADD     XTH2          XTHH                           HH
     C                   Z-ADD     XTN2          XTNN                           MM
     C                   Z-ADD     XTS2          XTSS                           SS
     C                   ADD       XTTIM         V1BGTS
     C                   END
      * Convert Update Date Timestamp to display format
      * Convert date
     C                   IF        #1BHTS = XDTSDL
     C                   Z-ADD     *ZERO         V1BHTS
     C                   ELSE
     C                   MOVEL     #1BHTS        XDITSM
     C                   MOVEL     XDITSD        XDI2DT
     C                   MOVEL     XDITST        XTTI2
     C                   EXSR      XDV24T
     C     XDEXDT        MULT      1000000       V1BHTS
     C                   Z-ADD     XTH2          XTHH                           HH
     C                   Z-ADD     XTN2          XTNN                           MM
     C                   Z-ADD     XTS2          XTSS                           SS
     C                   ADD       XTTIM         V1BHTS
     C                   END
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Rtv Item desc/Vendor # RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    BZAIC3                         Company Number
     C                   KFLD                    BZHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0001        BZAIC3                         Company Number
     C                   Z-ADD     WL0002        BZHGCD                         Item Code
      * Establish starting position
     C     KRSSA         CHAIN     @BZREJU                            90        *
      * Data record not found
     C   90              MOVEL     'USR0326'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     BZAVNA        WL0003                         Description Lin
     C                   Z-ADD     BZAJC8        WL0004                         Vendor Item Def
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    ABAIC3                         Company Number
      * Setup key
     C                   Z-ADD     WL0005        ABAIC3                         Company Number
      * Establish starting position
     C     KRSSB         CHAIN     @ABREG3                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0003'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0006 = ' '                                 Name
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     ABADTX        WL0006                         Name
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse Codes  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    ADAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0007        ADAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSC         CHAIN     @ADRET1                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
      * PAR = CON By name
     C                   EVAL      WL0008 = ' '                                 Warehouse Descr
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   MOVEL     ADF8NA        WL0008                         Warehouse Descr
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Desc/Sts          RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    BZAIC3                         Company Number
     C                   KFLD                    BZHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #1AIC3        BZAIC3                         Company Number
     C                   Z-ADD     #1HGCD        BZHGCD                         Item Code
      * Establish starting position
     C     KRSSD         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     BZAVNA        #PGENA                         Description Lin
     C                   MOVEL     BZVSST        YL0001                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv Acct&Ship Co & Dsc RT - Warehouse Codes  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WAAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     #1AJCD        WAAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSE         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      #PCCNA = ' '                                 Warehouse Descr
     C                   Z-ADD     *ZERO         YL0002                         Shipping Compan
     C                   Z-ADD     *ZERO         YL0003                         Accounting Comp
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WAF8NA        #PCCNA                         Warehouse Descr
     C                   Z-ADD     WABWC3        YL0002                         Shipping Compan
     C                   Z-ADD     WABTC3        YL0003                         Accounting Comp
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV Item Str Type     RT - Item Default  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    BYHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #1HGCD        BYHGCD                         Item Code
      * Establish starting position
     C     KRSSF         CHAIN     @BYREA1                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1160'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0004                         Item Structure
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     BYRGNB        YL0004                         Item Structure
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Alpha Value        RT - Company Values  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    KMAIC3                         Company Number
     C                   KFLD                    KMV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     YL0003        KMAIC3                         Company Number
     C                   EVALR     KMV8CD = ' '                                 Company Value C
     C                   MOVEL     'COPACK'      KMV8CD                         Company Value C
      * Establish starting position
     C     KRSSG         CHAIN     @KMREHC                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2221'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SGEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     KMBXTX        YL0005                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHCRRC        BEGSR
      *================================================================
      * Crt WIM Item Balance  CR - WIM Item Balance  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0001                         Create Date Tim
     C                   EVAL      WN0002 = ' '                                 Create User ID
     C                   EVAL      WN0003 = ' '                                 Create Program
     C                   EVAL      WN0004 = ' '                                 Update User Id
     C                   EVAL      WN0005 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @CGCPJ7
     C                   Z-ADD     #1AIC3        CGAIC3                         Company Number
     C                   Z-ADD     #1HGCD        CGHGCD                         Item Code
     C                   MOVEL     #1AJCD        CGAJCD                         Warehouse Code
     C                   MOVEL     #1NDSC        CGNDSC                         Inventory Item
     C                   Z-ADD     #1BOWG        CGBOWG                         On Hand Weight
     C                   Z-ADD     #1DDQT        CGDDQT                         On Hand UOM1 Su
     C                   Z-ADD     #1QVWG        CGQVWG                         In Transit Weig
     C                   Z-ADD     #1S9QT        CGS9QT                         In Transit UOM1
     C                   Z-ADD     #1TAQT        CGTAQT                         Qty Available t
     C                   Z-ADD     #1QYWG        CGQYWG                         On Hold Weight
     C                   Z-ADD     #1TDQT        CGTDQT                         On Hold UOM1 Su
     C                   Z-ADD     #1QZWG        CGQZWG                         Available Weigh
     C                   Z-ADD     #1TEQT        CGTEQT                         Available UOM1
     C                   Z-ADD     #1RINB        CGRINB                         Item Structure
     C                   Z-ADD     #1RHNB        CGRHNB                         Item Structure
     C                   Z-ADD     #1RGNB        CGRGNB                         Item Structure
     C                   MOVEL     #1VSST        CGVSST                         Record Status
     C                   MOVEL     #1BHTS        CGBHTS                         Update Date Tim
      *
      * USER: Processing before Data update
      * Set Crt Time Stamp DDL IF
      * *** Set CREATE Time Stamp Info.
      * PAR.Create Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         CGBGTS                         Create Date Tim
     C                   EVAL      CGRUU1 = ' '                                 Create User ID
     C                   MOVEL     ##USR         CGRUU1                         Create User ID
     C                   EVAL      CGRVU1 = ' '                                 Create Program
     C                   MOVEL     ##PGM         CGRVU1                         Create Program
      * *** Set CHANGE Time Stamp Info.
      * Cannot set Update Date TS here, will error.
     C                   EVAL      CGRWU1 = ' '                                 Update User Id
     C                   EVAL      CGRXU1 = ' '                                 Update Program
     C     KLCRSH        KLIST
     C                   KFLD                    CGAIC3                         Company Number
     C                   KFLD                    CGHGCD                         Item Code
     C                   KFLD                    CGAJCD                         Warehouse Code
     C                   KFLD                    CGNDSC                         Inventory Item
      * Check for duplicate primary key
     C     KLCRSH        SETLL     @CGCPJ7                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5250'     W0RTN
      * Send message 'WIM Item Balance       EX'
     C                   MOVEL     'USR5250'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SHEXIT
     C                   ENDIF
      *
     C                   WRITE     @CGCPJ7                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SICHRC        BEGSR
      *================================================================
      * Chg WIM Item Balance  CH - WIM Item Balance  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0006                         Create Date Tim
     C                   EVAL      WN0007 = ' '                                 Create User ID
     C                   EVAL      WN0008 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0009                         Update Date Tim
     C                   EVAL      WN0010 = ' '                                 Update User Id
     C                   EVAL      WN0011 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @CGCPJ7
     C                   Z-ADD     #1AIC3        CGAIC3                         Company Number
     C                   Z-ADD     #1HGCD        CGHGCD                         Item Code
     C                   MOVEL(P)  #1AJCD        CGAJCD                         Warehouse Code
     C                   MOVEL(P)  #1NDSC        CGNDSC                         Inventory Item
      *
     C     KLCHSI        KLIST
     C                   KFLD                    CGAIC3                         Company Number
     C                   KFLD                    CGHGCD                         Item Code
     C                   KFLD                    CGAJCD                         Warehouse Code
     C                   KFLD                    CGNDSC                         Inventory Item
     C     KLCHSI        CHAIN     @CGCPJ7                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PUCGCPL0'    MDACP
     C                   MOVEL     '@CGCPJ7'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SIEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SIEXIT
     C                   ENDIF
      *
      * Check for changed record
     C                   IF        #1DBRC <> @1DBRC
     C                   MOVEL     'Y2U0007'     W0RTN
      * Send message '*Update not accepted'
     C                   MOVEL     'Y2U0007'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
      * Release record lock
     C                   UNLOCK    PUCGCPL0                             91      *
     C                   GOTO      SIEXIT
     C                   ENDIF                                                  FI #1DBRC
      * Store record data for null update check
     C                   MOVE      @1DBRC        YARDCS
      * Move non-key fields to @CGCPJ7
     C                   Z-ADD     #1BOWG        CGBOWG                         On Hand Weight
     C                   Z-ADD     #1DDQT        CGDDQT                         On Hand UOM1 Su
     C                   Z-ADD     #1QVWG        CGQVWG                         In Transit Weig
     C                   Z-ADD     #1S9QT        CGS9QT                         In Transit UOM1
     C                   Z-ADD     #1TAQT        CGTAQT                         Qty Available t
     C                   Z-ADD     #1QYWG        CGQYWG                         On Hold Weight
     C                   Z-ADD     #1TDQT        CGTDQT                         On Hold UOM1 Su
     C                   Z-ADD     #1QZWG        CGQZWG                         Available Weigh
     C                   Z-ADD     #1TEQT        CGTEQT                         Available UOM1
     C                   Z-ADD     #1RINB        CGRINB                         Item Structure
     C                   Z-ADD     #1RHNB        CGRHNB                         Item Structure
     C                   Z-ADD     #1RGNB        CGRGNB                         Item Structure
     C                   MOVEL(P)  #1VSST        CGVSST                         Record Status
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         CGBHTS                         Update Date Tim
     C                   EVAL      CGRWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         CGRWU1                         Update User Id
     C                   EVAL      CGRXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         CGRXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @CGCPJ7                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PUCGCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * Update saved record image
     C                   MOVEL     @1DBRC        #1DBRC
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         Application Cod
      * Setup key
     C                   EVALR     WQSJ01 = ' '                                 Application Cod
     C                   MOVEL     'C/S'         WQSJ01                         Application Cod
      * Establish starting position
     C     KRSSJ         SETLL     @DNRESF                                      *
     C     KRSSJ         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SKRVGN
     C                   END                                                    *FI
     C     KRSSJ         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    WQSK01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSK01                         Application Cod
      * Establish starting position
     C     KRSSK         SETLL     @DNRESF                                      *
     C     KRSSK         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SKEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSK         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check reference to Company Item
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     V1AIC3        WK1X01
     C                   MOVEL     V1HGCD        WK1X02
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1AIC3' defaulted for 'Company Number'.
      * Field '(KEY) #1HGCD' defaulted for 'Item Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1AIC3' OR
     C                             WK1X02 = '?' OR
     C                             YPMTFD = '#1HGCD'
     C                   CALL      'PDJISRR'                            90      SEL Company/Ite
     C                   PARM      *BLANK        W0RTN
     C     #1AIC3        PARM      #1AIC3        WQ0001                         Company Number
     C     #1HGCD        PARM      #1HGCD        WQ0002                         Item Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDJISRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        993132    *
     C                   END
      *
     C                   IF        #1AIC3 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #1HGCD <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X02 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VAEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1AIC3 = *ZERO AND
     C                             #1HGCD = *ZERO
     C                   GOTO      VAEXIT
     C                   END
      *
     C     KLVABZ        KLIST
     C                   KFLD                    BZAIC3                         Company Number
     C                   KFLD                    BZHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #1AIC3        BZAIC3
     C                   Z-ADD     #1HGCD        BZHGCD
     C     KLVABZ        CHAIN     @BZREJU                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
      * Send message 'Company Item           NF'
     C                   MOVEL     'USR0326'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR0326'     W0RTN
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   VBCKRL        BEGSR
      *================================================================
      * Check reference to Warehouse Codes
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     #1AJCD        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1AJCD' defaulted for 'Warehouse Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1AJCD'
     C                   CALL      'CAANSRR'                            90      SEL Warehouse
     C                   PARM      *BLANK        W0RTN
     C     #1AJCD        PARM      #1AJCD        WQ0003                         Warehouse Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'CAANSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        9933      *
     C                   END
      *
     C                   IF        #1AJCD <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VBEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1AJCD = ' '
     C                   GOTO      VBEXIT
     C                   END
      *
     C     KLVBWA        KLIST
     C                   KFLD                    WAAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     #1AJCD        WAAJCD
     C     KLVBWA        CHAIN     @ADREAO                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VBEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VBEXIT
     C                   END
      * Send message 'Warehouse Codes        NF'
     C                   MOVEL     'USR0007'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR0007'     W0RTN
      *================================================================
     CSR   VBEXIT        ENDSR
      /EJECT
     CSR   VCCKRL        BEGSR
      *================================================================
      * Check reference to Item Structure Class
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RINB' defaulted for 'Item Structure Class Code'.
     C                   IF        YPMTFD = '#1RINB'
     C                   CALL      'PDELSRR'                            90      SEL Item Class
     C                   PARM      *BLANK        W0RTN
     C     #1RINB        PARM      #1RINB        WQ0004                         Item Structure
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDELSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1RINB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VCEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1RINB = *ZERO
     C                   GOTO      VCEXIT
     C                   END
      *
     C     KLVCFA        KLIST
     C                   KFLD                    FARINB                         Item Structure
      * Setup key
     C                   Z-ADD     #1RINB        FARINB
     C     KLVCFA        CHAIN     @FAREBE                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VCEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VCEXIT
     C                   END
      * Send message 'Item Structure Class   NF'
     C                   MOVEL     'USR1170'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR1170'     W0RTN
      *================================================================
     CSR   VCEXIT        ENDSR
      /EJECT
     CSR   VDCKRL        BEGSR
      *================================================================
      * Check reference to Item Structure Group
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RHNB' defaulted for 'Item Structure Group Code'.
     C                   IF        YPMTFD = '#1RHNB'
     C                   CALL      'PDEMSRR'                            90      SEL Item Group
     C                   PARM      *BLANK        W0RTN
     C     #1RHNB        PARM      #1RHNB        WQ0005                         Item Structure
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDEMSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1RHNB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VDEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1RHNB = *ZERO
     C                   GOTO      VDEXIT
     C                   END
      *
     C     KLVDE9        KLIST
     C                   KFLD                    E9RHNB                         Item Structure
      * Setup key
     C                   Z-ADD     #1RHNB        E9RHNB
     C     KLVDE9        CHAIN     @E9REA8                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VDEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VDEXIT
     C                   END
      * Send message 'Item Structure Group   NF'
     C                   MOVEL     'USR1168'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR1168'     W0RTN
      *================================================================
     CSR   VDEXIT        ENDSR
      /EJECT
     CSR   VECKRL        BEGSR
      *================================================================
      * Check reference to Item Structure Type
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RGNB' defaulted for 'Item Structure Type Code'.
     C                   IF        YPMTFD = '#1RGNB'
     C                   CALL      'PDENSRR'                            90      SEL Item Type A
     C                   PARM      *BLANK        W0RTN
     C     #1RGNB        PARM      #1RGNB        WQ0006                         Item Structure
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDENSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1RGNB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VEEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1RGNB = *ZERO
     C                   GOTO      VEEXIT
     C                   END
      *
     C     KLVEE8        KLIST
     C                   KFLD                    E8RGNB                         Item Structure
      * Setup key
     C                   Z-ADD     #1RGNB        E8RGNB
     C     KLVEE8        CHAIN     @E8REBB                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VEEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VEEXIT
     C                   END
      * Send message 'Item Structure Type    NF'
     C                   MOVEL     'USR1166'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR1166'     W0RTN
      *================================================================
     CSR   VEEXIT        ENDSR
      /EJECT
     CSR   XDV24T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDI2DD        XDEX01                         DD
     C                   Z-ADD     XDI2MM        XDEX02                         MM
     C     1000          MULT      XDI2CC        XDEY02                         Y
     C                   ADD       XDI2YY        XDEY02                          YYY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDI2MM        XDEX01                         MM
     C                   Z-ADD     XDI2DD        XDEX02                         DD
     C     1000          MULT      XDI2CC        XDEY02                         Y
     C                   ADD       XDI2YY        XDEY02                          YYY
     C                   ELSE
      * YMD format
     C     1000          MULT      XDI2CC        XDEY01                         Y
     C                   ADD       XDI2YY        XDEY01                          YYY
     C                   Z-ADD     XDI2MM        XDEX03                         MM
     C                   Z-ADD     XDI2DD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDV24E        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y1SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y1EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
      * KEY Screen
     C                   IF        @#DFMT = '#RCDKEY'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      * DETAIL Screen
     C                   IF        @#DFMT = '#RCDDTL1'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
     C                   IF        ZHCSRW = 004 AND
     C                             ZHCSCL >= 026 AND
     C                             ZHCSCL <= 028 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1AIC3'      YPMTFD                         Company Number
     C                   END
      *
     C                   IF        ZHCSRW = 005 AND
     C                             ZHCSCL >= 026 AND
     C                             ZHCSCL <= 032 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1HGCD'      YPMTFD                         Item Code
     C                   END
      *
     C                   IF        ZHCSRW = 006 AND
     C                             ZHCSCL >= 026 AND
     C                             ZHCSCL <= 028 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1AJCD'      YPMTFD                         Warehouse Code
     C                   END
      *
     C                   IF        ZHCSRW = 007 AND
     C                             ZHCSCL >= 026 AND
     C                             ZHCSCL <= 027 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1NDSC'      YPMTFD                         Inventory Item
     C                   END
      *
     C                   IF        ZHCSRW = 009 AND
     C                             ZHCSCL = 032 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1VSST'      YPMTFD                         Record Status
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      1             YYLGCT                         # of grps
     C                   PARM      W0GRP         YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Initialise indicators for re-entry
     C                   MOVE      '0'           *IN
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define work field USR First Position
     C                   EVAL      WUI3ST = ' '
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WADBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WABWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WABTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WABUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WABVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WAAATM                         Job Time
     C                   Z-ADD     *ZERO         WAAXDT                         Job Date
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(002)      XDTSDL
      * Clear all neither parameters
      * Crt WIM Item Balance  CR - WIM Item Balance  * 
     C                   MOVEL     XDTSDL        CGBGTS                         Create Date Tim
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SARVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   EVAL      WL0003 = ' '
     C                   Z-ADD     *ZERO         WL0004
      * Define local variables for subroutine SBRVGN.
     C                   Z-ADD     *ZERO         WL0005
     C                   EVAL      WL0006 = ' '
      * Define local variables for subroutine SCRVGN.
     C                   EVAL      WL0007 = ' '
     C                   EVAL      WL0008 = ' '
      * Define null work field Vendor Item Default
     C                   Z-ADD     *ZERO         YN0001
      * Define null work field Description Line Two
     C                   EVAL      YN0002 = ' '
      * Define null work field UOM Primary
     C                   EVAL      YN0003 = ' '
      * Define null work field UOM Second
     C                   EVAL      YN0004 = ' '
      * Define null work field UOM Third
     C                   EVAL      YN0005 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0001 = ' '
      * Define local work field Shipping Company
     C                   Z-ADD     *ZERO         YL0002
      * Define local work field Accounting Company
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field Item Structure Type Code
     C                   Z-ADD     *ZERO         YL0004
      * Define local work field Allow COPACK Items Whs AC
     C                   EVAL      YL0005 = ' '
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
      * Select initial mode
      * Add mode
     C                   IF        @1NROP = *ZERO
     C                   MOVEL     'ADD'         W0PMD
     C                   ELSE
      * Change mode
     C                   MOVEL     'CHG'         W0PMD
     C                   END
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * VAL Rtv & Center HdgRP4IF
      * SET Screen HeadingsRP4 IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SJRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40RP4U - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co HeadRP4U - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
      * Force program into add mode if no whse present
      * CASE: PAR.Warehouse Code is Warehouse Code Blank
     C                   IF        P1AJCD = ' '
     C                   MOVEL     'ADD'         W0PMD                          *Program mode
     C                   END                                                    *FI
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 USR0752
00002 0001-01-01-00.00.00.00000
