// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKQ2DFR
// ?Date: 14.08.2025 Time: 02:50:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Initialize subfile control

EXECUTE FUNCTION(Rtv Source Type       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1141829;
PARAMETER(PAR.SR_Source_Code);
PARAMETER(WRK.SR_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// *RT.VCND           1182898*Bu = Condition name of ilt. in functions
CTL.SR_Type_Desc = RTVCND(WRK.SR_Type);

//?USER: Initialize subfile record from DBF record

// *RT.VCND           1182898*Bu = Condition name of ilt. in functions
RCD.Producer_Pay_Desc_Sel_USR = RTVCND(RCD.TH_Payment_Sts);

//?Held Over Processing
CASE;

// IF DB1.TH Held Over Record is Yes
IF DB1.TH_Held_Over_Record = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Record_selected = 'N';

//?Held Over Processing
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.TH Held Over GT WRK.Zero USR
IF DB1.TH_Held_Over > WRK.Zero_USR;

EXECUTE FUNCTION(Rtv Held Over Hd Kld  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1144132;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(WRK.Head_Total_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.TH Held Over Record is Yes
 IF DB1.TH_Held_Over_Record = 'Y';

 // PAR.Head Total USR = PAR.Head Total USR + DB1.TH Head Killed
 PAR.Head_Total_USR = PAR.Head_Total_USR + DB1.TH_Head_Killed;

 ENDIF;

}


CASE;

// IF WRK.Head Total USR is Greater then Zero
IF WRK.Head_Total_USR > *ZERO;

EXECUTE FUNCTION(Clc Tattoo Total Pay  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1144138;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Head_Killed);
PARAMETER(RCD.TH_CM_Base_Mkt_Price_Amt);
PARAMETER(RCD.TH_CM_Sort_Discount_Amt);
PARAMETER(RCD.TH_CM_Yield_Gain_Loss_Amt);
PARAMETER(RCD.TH_CM_Base_Carcass_Value);
PARAMETER(RCD.TH_CM_LN_AddOn_Deduct_Amt);
PARAMETER(RCD.TH_CM_Carcass_Gross_Amt);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Head Total USR = PAR.Head Total USR + DB1.TH Head Killed
 PAR.Head_Total_USR = PAR.Head_Total_USR + DB1.TH_Head_Killed;

 // PAR.Base Mkt Prc Amt Tot USR = PAR.Base Mkt Prc Amt Tot USR + DB1.TH CM Base Mkt
 PAR.Base_Mkt_Prc_Amt_Tot_USR = PAR.Base_Mkt_Prc_Amt_Tot_USR
 + DB1.TH_CM_Base_Mkt_Price_Amt;

 // PAR.Sort Loss Tot USR = PAR.Sort Loss Tot USR + DB1.TH CM Sort Discount Amt
 PAR.Sort_Loss_Tot_USR = PAR.Sort_Loss_Tot_USR + DB1.TH_CM_Sort_Discount_Amt;

 // PAR.Yield G/L Amt Tot USR = PAR.Yield G/L Amt Tot USR + DB1.TH CM Yield Gain/Los
 PAR.Yield_G_L_Amt_Tot_USR = PAR.Yield_G_L_Amt_Tot_USR + DB1.TH_CM_Yield_Gain_Loss_Amt;

 // PAR.Base Carc Val Tot USR = PAR.Base Carc Val Tot USR + DB1.TH CM Base Carcass V
 PAR.Base_Carc_Val_Tot_USR = PAR.Base_Carc_Val_Tot_USR + DB1.TH_CM_Base_Carcass_Value;

 // PAR.Lean Add/Ded Val Tot USR = PAR.Lean Add/Ded Val Tot USR + DB1.TH CM LN AddOn
 PAR.Lean_Add_Ded_Val_Tot_USR = PAR.Lean_Add_Ded_Val_Tot_USR
 + DB1.TH_CM_LN_AddOn_Deduct_Amt;

 // PAR.Gross Pay Amt Tot USR = PAR.Gross Pay Amt Tot USR + DB1.TH CM Carcass Gross
 PAR.Gross_Pay_Amt_Tot_USR = PAR.Gross_Pay_Amt_Tot_USR + DB1.TH_CM_Carcass_Gross_Amt;

}


// IF *OTHERWISE
IF *OTHERWISE;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

CASE;

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

// Call program Dsp Producer History  DF.
CALL PROGRAM(Dsp Producer History  DF) ('PKRUDFR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?Select Live Payment
CASE;

// IF RCD.*SFLSEL is Select Live Payment
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt Live Price        E1.
CALL PROGRAM(Edt Live Price        E1) ('PKGBE1R');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);

//?Held Over Processing
CASE;

// IF RCD.TH Held Over GT WRK.Zero USR
IF RCD.TH_Held_Over > WRK.Zero_USR;

EXECUTE FUNCTION(Rtv Live Price/UOM    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1145439;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.TH_Live_Purchase_UOM);
PARAMETER(RCD.TH_Live_Purchase_Price);

CASE;

// IF RCD.TH Live Purchase Price is Not Zeros
IF RCD.TH_Live_Purchase_Price <> *ZERO;

EXECUTE FUNCTION(Chg Pay Sts/Live Prc  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1144271;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Live_Purchase_UOM);
PARAMETER(RCD.TH_Live_Purchase_Price);
PARAMETER('SL');
{
 //?USER: Process Data record

 CASE;

 // IF DB1.TH Live Purchase Price is Zeros
 IF DB1.TH_Live_Purchase_Price = *ZERO;

 EXECUTE FUNCTION(Chg Pay Sts/Live Prc  CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1144096;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.TH_Live_Purchase_UOM);
 PARAMETER(PAR.TH_Live_Purchase_Price);
 PARAMETER(PAR.TH_Payment_Sts);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
  PARAMETER(DB1.TH_Payment_Sts);
  PARAMETER(DB1.TH_Payment_Type);
  {
   //?Execute internal function

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?Function Description:  If there are any fields that need to be
   //?Changed/Created during the Change functions or Create function
   //?Presently: Payment Type
   //?Add this routine to all of the change objects and create object
   //?that update the Payment Type
   CASE;

   // IF PAR.TH Payment Sts is Live anything
   IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

   // PAR.TH Payment Type = CND.Live
   PAR.TH_Payment_Type = 'L';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.TH Payment Type = CND.Carcass Merit
   PAR.TH_Payment_Type = 'C';

   ENDIF;

  }

 }

 ENDIF;

}


ENDIF;

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?Display Carcass Detail
CASE;

// IF RCD.*SFLSEL is *WW/Display request
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp Carcass Detail    DF.
CALL PROGRAM(Dsp Carcass Detail    DF) ('PKD2DFR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.TH_Purchase_Date);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

//?Tattoo header comment
CASE;

// IF RCD.*SFLSEL is *Option 7 request
IF RCD.*SFLSEL = '7'/'7';

// Call program Edt Tattoo Comment    EF.
CALL PROGRAM(Edt Tattoo Comment    EF) ('PKIVEFR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER('U');
PARAMETER(CTL.Oms_System_Value_Alpha);

ENDIF;

//?Edit buy order and load
CASE;

// IF RCD.*SFLSEL is *option 9 request
IF RCD.*SFLSEL = '9'/'9';

// Call program Edt Buy Order and Load ET.
CALL PROGRAM(Edt Buy Order and Load ET) ('PKAOETR');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(WRK.Head_Total_USR);
PARAMETER(CTL.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is Mark for Payment
IF RCD.*SFLSEL = '1'/'1';

EXECUTE FUNCTION(Chg Sel/UnSel Payment RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1115572;
PARAMETER(*MISSING);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER('SL');

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

