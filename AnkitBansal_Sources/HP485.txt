      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP485
      * TITLE:       SPECIFY SCHEDULED SALES MOVEMENTS TO CREATE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     11/24/99
      *
      * FUNCTION: Allows user to specify the method of creation:
      *           1) one movement with multiple detail lines per screen, or
      *           2) multiple movements per screen (each with only one detail line)
      *                  a) with system-generated movements
      *                  b) without system-generated movements
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 01/21/03  LeAnne Fedor
      *           Added logic for 2 'versions': full and restricted. The incoming parm
      *           controls the version.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD485    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
      *
     FHSP018    IF   E           K DISK
      *  Farm Sites
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER'
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4
     D  DAPER                  5      6
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parm fields
      *
     D xxmvsn          s              7  0
     D xxalphfscd      s              5
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxynfl          s                   like(dfmmfl)
     D xxaist          s              1
      *
      *
      * Workfields for date manipulation
      *
     D wkccyymmdd      s              8  0
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP485K1
     C                   WRITE     HP485EC
     C                   EXFMT     HP485R1
      *
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C                   when       *in03 = *on or *in12 = *on
     C                   MOVEL     EXIT          ROUTNE
      *
     C                   when       *in04 = *on
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL                                                  MAIN SELECT
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * Validate:
      *  1) Multiple movements flag
      *  2) System-generated movements flag
      *
     C                   exsr      $mmfl
     C                   exsr      $sgfl
      *
      *
      * The remaining info on the screen must be blank unless the system
      * will be automatically generating movements.
      *  1) Farm site code
      *  2) Scheduled ship date
      *  3) Number of head per movement
      *  4) Maximum number of movements
      *
     C                   exsr      $fscd
     C                   exsr      $scdt
     C                   exsr      $hdmv
     C                   exsr      $nbmv
      *
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $PROC1
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $mmfl - Validate multiple movements flag
      *----------------------------------------------------------------
      *
      * Multiple movements flag must be 'yes' or 'no'
      *
     C     $mmfl         begsr
      *
     C                   select
     C                   when      dfmmfl = *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   move      'HS09106'     mgid(e)
     C                   endif
      *
     C                   when      dfmmfl <> yes and dfmmfl <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   move      'HS09106'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $sgfl - Validate system-generated movements flag
      *----------------------------------------------------------------
      *
      * The flag requesting system-generated movements must be:
      *   1) No/blank when multiple movements flag is NO
      *   2) No/Yes   when multiple movements flag is YES
      *
      *
     C     $sgfl         begsr
      *
     C                   select
     C                   when      dfmmfl = no and
     C                             (dfsgfl <> no and dfsgfl <> *blank)
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   move      'HS00772'     mgid(e)
     C                   endif
      *
     C                   when      dfmmfl = yes and
     C                             (dfsgfl <> no and dfsgfl <> yes)
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   move      'HS00773'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $fscd - Validate farm site
      *----------------------------------------------------------------
      *
     C     $FSCD         BEGSR
      *
     C                   MOVE      *BLANK        DFFSNM
      *
     C                   SELECT                                                 Select 1
     C                   when      (dfsgfl = no or dfsgfl = *blank) and
     C                              dffscd <> 0
     C                   SETON                                        32
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00774'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfsgfl = yes
      *
     C                   select                                                 Select 2
     C                   when      dffscd = 0
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C                   when      dffscd < 0
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   other
      *
      * CHECK THAT FARM SITE EXISTS IN THE FARM SITE MASTER FILE
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD FARM
     C                   MOVEL     FSFSNM        DFFSNM
     C                   ELSE
      *
      * INVALID FARM SITE
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      dffscd        xxalphfscd
     C                   MOVEA     xxalphfscd    MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD FARM
     C                   endsl                                                  Select 2
     C                   ENDSL                                                  Select 1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCDT - EDIT SCHEDULED SHIP DATE
      *----------------------------------------------------------------
      *
      * Validations:
      *    1) Must be blank when the system generate flag is not yes
      *    2) Required when the system generate flag is yes
      *       a) cannot be in a closed period
      *       b) cannot be in a period that is currently being closed
      *
     C     $SCDT         begsr
      *
     C                   SELECT                                                 Select 1
     C                   when      (dfsgfl = no or dfsgfl = *blank) and
     C                              dfmdyscdt <> 0
     C                   SETON                                        33
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00774'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfsgfl = yes
      *
     C                   SELECT                                                 Select 2
     C     dfmdyscdt     WHENEQ    0
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVE      'HS09001'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C     *mdy          test(d)                 dfmdyscdt              92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip date from mmddyy to ccyymmdd using the 'date format' field
      * to add the century values.
      *
     C     *mdy          move      dfmdyscdt     wkcymdiso
     C                   move      wkcymdiso     wkccyymmdd
      *
      * IF THE DATE IS VALID,
      *     CHECK THAT IT IS NOT IN A CLOSED PERIOD
      *     IF IT IS IN THE CURRENT PERIOD,
      *         CHECK THAT THE PERIOD CLOSE PROGRAMS ARE NOT RUNNING
      *
     C                   SELECT                                                 Select 3
     C     wkccyymmdd    WHENLT    DABPDT
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09007'     MGID(E)
     C                   ENDIF
      *
     C     wkccyymmdd    WHENGE    DABPDT
     C     wkccyymmdd    ANDLE     DAEPDT
     C     DAPPFL        ANDNE     *BLANK
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09016'     MGID(E)
     C                   ENDIF
     C                   ENDSL                                                  Select 3
      *
     C                   ENDIF                                                  If bad date
     C                   ENDSL                                                  Select 2
     C                   endsl                                                  Select 1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $hdmv - Validate number of head per movement
      *----------------------------------------------------------------
      *
      * Validations:
      *    1) Must be blank when the system generate flag is not yes
      *    2) Required when the system generate flag is yes
      *
     C     $hdmv         begsr
      *
     C                   select                                                 Select 1
     C                   when      (dfsgfl = no or dfsgfl = *blank) and
     C                              dfhdmv <> 0
     C                   SETON                                        34
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00774'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfsgfl = yes
      *
     C                   select                                                 Select 2
     C                   when      dfhdmv = 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      dfhdmv < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl                                                  Select 2
      *
     C                   endsl                                                  Select 1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $nbmv - Validate maximum number of movements to generate
      *----------------------------------------------------------------
      *
      * Validations:
      *    1) Must be blank when the system generate flag is not yes
      *    2) Required when the system generate flag is yes
      *
     C     $nbmv         begsr
      *
     C                   select                                                 Select 1
     C                   when      (dfsgfl = no or dfsgfl = *blank) and
     C                              dfnbmv <> 0
     C                   SETON                                        35
     C                   if        error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00774'     MGID(E)
     C                   ENDIF
      *
     C                   when      dfsgfl = yes
      *
     C                   select                                                 Select 2
     C                   when      dfnbmv = 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      dfnbmv < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl                                                  Select 2
      *
     C                   endsl                                                  Select 1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   select
     C                   when      dfmmfl = no
     C                   call      'HP145'
     C                   parm      'CREATE'      mode
     C                   parm                    xxcocd
     C                   parm      0             xxmvsn
     C                   parm      *blank        rtncd
     C                   parm                    version
     C                   parm                    dfversion
      *
     C                   when      dfmmfl = yes
     C                   call      'HP165'
     C                   parm                    xxcocd
     C                   parm                    dffscd
     C                   parm                    dfmdyscdt
     C                   parm                    wkccyymmdd
     C                   parm                    dfhdmv
     C                   parm                    dfnbmv
     C                   parm                    version
     C                   parm                    dfversion
     C                   endsl
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *----------------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      *-------------------------
      * Multiple movements flag
      *------------------------
      *
     C                   when      fld = 'DFMMFL'
     C                   call      'HP522'
     C                   parm      *blank        xxynfl
     C                   seton                                        50
     C                   if        xxynfl <> *blank
     C                   move      xxynfl        dfmmfl
     C                   endif
      *
      *--------------------------------
      * System-generate movements flag
      *--------------------------------
      *
     C                   when      fld = 'DFSGFL'
     C                   call      'HP522'
     C                   parm      *blank        xxynfl
     C                   seton                                        51
     C                   if        xxynfl <> *blank
     C                   move      xxynfl        dfsgfl
     C                   endif
      *-----------
      * Farm
      *-----------
     C                   when      fld = 'DFFSCD'
     C                   call      'HP5040'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        52
     C                   if        xxfscd > 0                                   IF SELECTED
     C                   z-add     xxfscd        dffscd
     C                   movel     xxfsnm        dffsnm
     C                   endif                                                  IF SELECTED
     C                   other
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /eject
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    xxcocd            3
     C                   PARM                    version           1
     C                   PARM                    dfversion
      *
      *
      * BRING IN THE DATA AREA THAT CONTAINS THE CURRENT ACCOUNTING
      * PERIOD
      *
     C     *DTAARA       DEFINE                  DAAPER
     C                   IN        *DTAARA
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
