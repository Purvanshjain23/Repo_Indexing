// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDZOD3R
// ?Date: 14.08.2025 Time: 03:30:43
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize key screen

// KEY.Accounting Company Number = PAR.Accounting Company Number
KEY.Company_Number = PAR.Company_Number;

// KEY.Item Code = PAR.Item Code
KEY.Item_Code = PAR.Item_Code;

//?USER: Validate key screen

EXECUTE FUNCTION(Val Item Exists        RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1305841;
PARAMETER(KEY.Item_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Item Default not found.'
ERROR(USR1160);
MSGPARM(KEY.Item_Code);

ENDIF;

//?USER: Load detail screen from DBF record

//?Retrieve code names
EXECUTE FUNCTION(Rtv Quality Level Desc RT) TYPE(RTVOBJ) FILE(CAAIREP)          AC1124632;
PARAMETER(DB1.Quality_Level);
PARAMETER(2ND.USR_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Item Level Descr   RT) TYPE(RTVOBJ) FILE(PDILREP)          AC1287285;
PARAMETER(DB1.Item_Level);
PARAMETER(2ND.USR_Description_New);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Item Class Desc    RT) TYPE(RTVOBJ) FILE(OMFAREP)          AC1205440;
PARAMETER(DB1.Item_Structure_Class_Code);
PARAMETER(2ND.Item_Structure_Class_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Avl Dsp Grp Desc   RT) TYPE(RTVOBJ) FILE(PDJGREP)          AC1298156;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Group_for_Packaging);
PARAMETER(2ND.Group_decription);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod. Mkts Desc  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1277934;
PARAMETER(DB1.Default_Commod_Mark_basis);
PARAMETER(3RD.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod Group Desc  RT) TYPE(RTVOBJ) FILE(OMFZREP)          AC1277945;
PARAMETER(DB1.Commodity_Price_Group);
PARAMETER(3RD.Commodity_Price_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Price Method Desc  RT) TYPE(RTVOBJ) FILE(PDIHREP)          AC1298165;
PARAMETER(DB1.Price_Method_Default);
PARAMETER(3RD.Price_Method_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DB1.Default_Warehouse);
PARAMETER(3RD.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Department_Code);
PARAMETER(3RD.Department_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Vendor Name        RT) TYPE(RTVOBJ) FILE(CABJREP)          AC1111039;
PARAMETER(DB1.Vendor_Item_Default);
PARAMETER(3RD.Vendor_Name);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DB1.UOM_Primary);
PARAMETER(DTL.UOM_Description_1_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DB1.UOM_Second);
PARAMETER(DTL.UOM_Description_2_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DB1.UOM_Third);
PARAMETER(DTL.UOM_Description_3_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DB1.UOM_Pricing);
PARAMETER(DTL.UOM_Description_4_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


//?Retrieve condition names
// 2ND.Condition Desc. 1  USR = Condition name of DB1.Item Type Code
2ND.Condition_Desc_1_USR = RTVCND(DB1.Item_Type_Code);

// 2ND.Condition Desc. 2  USR = Condition name of DB1.Package Type Code
2ND.Condition_Desc_2_USR = RTVCND(DB1.Package_Type_Code);

// 2ND.Condition Desc. 3  USR = Condition name of DB1.Converted/Base Item
2ND.Condition_Desc_3_USR = RTVCND(DB1.Base_Conv_Loss_Item);

// 2ND.Condition Desc. 4  USR = Condition name of DB1.Variety/Rendered/Cut
2ND.Condition_Desc_4_USR = RTVCND(DB1.Variety_Rendered_Cut);

// 2ND.Condition Desc. 5  USR = Condition name of DB1.Production Date Control
2ND.Condition_Desc_5_USR = RTVCND(DB1.Production_Date_Control);

// 2ND.Condition Desc. 6  USR = Condition name of DB1.Catch Weight Status
2ND.Condition_Desc_6_USR = RTVCND(DB1.Catch_Weight_Status);

// 2ND.Condition Desc. 7  USR = Condition name of DB1.Credit Item Status
2ND.Condition_Desc_7_USR = RTVCND(DB1.Credit_Item_Status);

// 2ND.Condition Desc. 8  USR = Condition name of DB1.Case Ready Status
2ND.Condition_Desc_8_USR = RTVCND(DB1.Frozen_Make_to_Order_Sts);

// 2ND.Condition Desc. 9  USR = Condition name of DB1.Record Status
2ND.Condition_Desc_9_USR = RTVCND(DB1.Record_Status);

// 2ND.Condition Name USR = Condition name of DB1.Seconds Item
2ND.Condition_Name_USR = RTVCND(DB1.Seconds_Item);

// 3RD.Condition Desc. 10 USR = Condition name of DB1.Item Pricing Operation
3RD.Condition_Desc_10_USR = RTVCND(DB1.Item_Pricing_Operation);

// PAR.Commodity Price Group = DB1.Commodity Price Group
PAR.Commodity_Price_Group = DB1.Commodity_Price_Group;

//?USER: Validate detail screen

//?Retrieve code names
EXECUTE FUNCTION(Rtv Quality Level Desc RT) TYPE(RTVOBJ) FILE(CAAIREP)          AC1124632;
PARAMETER(2ND.Quality_Level);
PARAMETER(2ND.USR_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Item Level Descr   RT) TYPE(RTVOBJ) FILE(PDILREP)          AC1287285;
PARAMETER(2ND.Item_Level);
PARAMETER(2ND.USR_Description_New);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Item Class Desc    RT) TYPE(RTVOBJ) FILE(OMFAREP)          AC1205440;
PARAMETER(2ND.Item_Structure_Class_Code);
PARAMETER(2ND.Item_Structure_Class_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Avl Dsp Grp Desc   RT) TYPE(RTVOBJ) FILE(PDJGREP)          AC1298156;
PARAMETER(2ND.Company_Number);
PARAMETER(2ND.Group_for_Packaging);
PARAMETER(2ND.Group_decription);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod. Mkts Desc  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1277934;
PARAMETER(3RD.Default_Commod_Mark_basis);
PARAMETER(3RD.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod Group Desc  RT) TYPE(RTVOBJ) FILE(OMFZREP)          AC1277945;
PARAMETER(3RD.Commodity_Price_Group);
PARAMETER(3RD.Commodity_Price_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Price Method Desc  RT) TYPE(RTVOBJ) FILE(PDIHREP)          AC1298165;
PARAMETER(3RD.Price_Method_Default);
PARAMETER(3RD.Price_Method_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(3RD.Default_Warehouse);
PARAMETER(3RD.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
PARAMETER(3RD.Company_Number);
PARAMETER(3RD.Department_Code);
PARAMETER(3RD.Department_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Vendor Name        RT) TYPE(RTVOBJ) FILE(CABJREP)          AC1111039;
PARAMETER(3RD.Vendor_Item_Default);
PARAMETER(3RD.Vendor_Name);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DTL.UOM_Primary);
PARAMETER(DTL.UOM_Description_1_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DTL.UOM_Second);
PARAMETER(DTL.UOM_Description_2_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DTL.UOM_Third);
PARAMETER(DTL.UOM_Description_3_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(DTL.UOM_Pricing);
PARAMETER(DTL.UOM_Description_4_USR);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


//?Retrieve condition names
// 2ND.Condition Desc. 1  USR = Condition name of 2ND.Item Type Code
2ND.Condition_Desc_1_USR = RTVCND(2ND.Item_Type_Code);

// 2ND.Condition Desc. 2  USR = Condition name of 2ND.Package Type Code
2ND.Condition_Desc_2_USR = RTVCND(2ND.Package_Type_Code);

// 2ND.Condition Desc. 3  USR = Condition name of 2ND.Converted/Base Item
2ND.Condition_Desc_3_USR = RTVCND(2ND.Base_Conv_Loss_Item);

// 2ND.Condition Desc. 4  USR = Condition name of 2ND.Variety/Rendered/Cut
2ND.Condition_Desc_4_USR = RTVCND(2ND.Variety_Rendered_Cut);

// 2ND.Condition Desc. 5  USR = Condition name of 2ND.Production Date Control
2ND.Condition_Desc_5_USR = RTVCND(2ND.Production_Date_Control);

// 2ND.Condition Desc. 6  USR = Condition name of 2ND.Catch Weight Status
2ND.Condition_Desc_6_USR = RTVCND(2ND.Catch_Weight_Status);

// 2ND.Condition Desc. 7  USR = Condition name of 2ND.Credit Item Status
2ND.Condition_Desc_7_USR = RTVCND(2ND.Credit_Item_Status);

// 2ND.Condition Desc. 8  USR = Condition name of 2ND.Case Ready Status
2ND.Condition_Desc_8_USR = RTVCND(2ND.Frozen_Make_to_Order_Sts);

// 2ND.Condition Desc. 9  USR = Condition name of 2ND.Record Status
2ND.Condition_Desc_9_USR = RTVCND(2ND.Record_Status);

// 2ND.Condition Name USR = Condition name of 2ND.Seconds Item
2ND.Condition_Name_USR = RTVCND(2ND.Seconds_Item);

// 3RD.Condition Desc. 10 USR = Condition name of 3RD.Item Pricing Operation
3RD.Condition_Desc_10_USR = RTVCND(3RD.Item_Pricing_Operation);

