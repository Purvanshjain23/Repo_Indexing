// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWGXXFR
// ?Date: 14.08.2025 Time: 02:56:25
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification History
DO;

//? 6/20/2018 JBB E13291 - Repayment process for 440
//?   This function will either set the Hog Voucher Detail record
//?   for repayment, or else unselect the record for repayment.  An
//?   error message is returned if the record is not ready for the
//?   requested update action.
//?11/04/2020 ISE H16853 - Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Rtv for Repayment Chg RT) TYPE(RTVOBJ) FILE(PKBLCPP)           AB1345624;
PARAMETER(PAR.VCH_Company_number);
PARAMETER(PAR.VCH_Batch_Number);
PARAMETER(PAR.VCH_Header_Number);
PARAMETER(PAR.VCD_Line);
PARAMETER(PAR.VCD_Repayment_Flag);
{
 //?USER: Initialize routine

 //?Default return code to Error.  Will change if no errors.
 // PGM.*Return code = CND.Error Found
 PGM.*Return_code = 'ERROR';

 //?USER: Process Data record

 // LCL.VCD Repayment Flag = PAR.VCD Repayment Flag
 LCL.VCD_Repayment_Flag = PAR.VCD_Repayment_Flag;

 //?Set Push Payment Status to incoming PAR value
 CASE;

 // IF PAR.VCD Repayment Flag is Repayment
 IF PAR.VCD_Repayment_Flag = 'R';

 // AND DB1.VCD Push Payment Status is Yes
 AND DB1.VCD_Push_Payment_Status = 'Y';

 // AND DB1.VCD Repayment Flag is Not entered
 AND DB1.VCD_Repayment_Flag = *BLANK;

 // LCL.VCD Push Payment Status = CND.No
 LCL.VCD_Push_Payment_Status = 'N';

 //?Set Push Payment Status to incoming PAR value
 // IF PAR.VCD Repayment Flag is Not entered
 IF PAR.VCD_Repayment_Flag = *BLANK;

 // AND DB1.VCD Push Payment Status is No
 AND DB1.VCD_Push_Payment_Status = 'N';

 // AND DB1.VCD Repayment Flag is Repayment
 AND DB1.VCD_Repayment_Flag = 'R';

 // LCL.VCD Push Payment Status = CND.Yes
 LCL.VCD_Push_Payment_Status = 'Y';

 //?Set Push Payment Status to incoming PAR value
 // IF PAR.VCD Repayment Flag is Not entered
 IF PAR.VCD_Repayment_Flag = *BLANK;

 // Send error message - 'Cannot select record for Push to Pay Repayment.  See second level text.'
 ERROR(PRK1501);

 QUIT;

 //?Set Push Payment Status to incoming PAR value
 // IF PAR.VCD Repayment Flag is Repayment
 IF PAR.VCD_Repayment_Flag = 'R';

 // Send error message - 'Cannot unselect record for Push to Pay Repayment.  See second level text.'
 ERROR(PRK1502);

 QUIT;

 ENDIF;

 //?If here, no errors encountered.  Set return code to *Normal
 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 EXECUTE FUNCTION(Chg Vchr Dtl-Repayment CH) TYPE(CHGOBJ) FILE(PKBLCPP)          AB1345623;
 PARAMETER(PAR.VCH_Company_number);
 PARAMETER(PAR.VCH_Batch_Number);
 PARAMETER(PAR.VCH_Header_Number);
 PARAMETER(PAR.VCD_Line);
 PARAMETER(LCL.VCD_Push_Payment_Status);
 PARAMETER(PAR.VCD_Repayment_Flag);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


