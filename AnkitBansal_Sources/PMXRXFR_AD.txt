// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMXRXFR
// ?Date: 14.08.2025 Time: 03:44:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?* Actual Ship Date Range = 1080707 - 1080816
//?* Ship To Customer 403301
EXECUTE FUNCTION(Fix Zero IC AbsFrt Err RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1896886;
PARAMETER(403301);
PARAMETER(1080707);
PARAMETER(1080816);
{
 //?USER: Process Data record

 //?QUIT: DB1.Actual Ship Date > PAR.Date To
 CASE;

 // IF DB1.Actual Shipped Date GT PAR.Date To               USR
 IF DB1.Actual_Shipped_Date > PAR.Date_To_USR;

 QUIT;

 ENDIF;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?OMT: Shipping Method = Collect
 CASE;

 // IF DB1.Shipping Method is Not Prepaid
 IF DB1.Shipping_Method = 'CR'/'CT';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?OMT: Weight Billed = 0
 CASE;

 // IF DB1.Weight Billed is Equal to zero
 IF DB1.Weight_Billed = *ZERO;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?OMT: Order Types <> OR
 CASE;

 // IF DB1.Order Type - Sales is Not Regular Order
 IF DB1.Order_Type_Sales <> 'OR';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?* New FOB Gross Amount
 // PAR.FOB Gross Amount = DB1.Extended Amount
 PAR.FOB_Gross_Amount = DB1.Extended_Amount;

 //?* New Absorbed Freight Rate /CWT
 EXECUTE FUNCTION(RTV Abs Freight Rate   RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1391554;
 PARAMETER(DB1.Shipping_Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?* New Unit Price & Price Overage Override
 // PAR.Unit Price
 PAR.Unit_Price = DB1.Unit_Price + ( PAR.Absorbed_Freight_Rate_CWT / 100 'H' );

 // PAR.Price Overage Override = PAR.Unit Price
 PAR.Price_Overage_Override = PAR.Unit_Price;

 //?* New Extended Amount & Billing Detail Gross
 // PAR.Extended Amount = PAR.Unit Price * DB1.Weight Billed *Rounded
 PAR.Extended_Amount = PAR.Unit_Price * DB1.Weight_Billed 'H';

 // PAR.Billing Detail Gross Dol. = PAR.Extended Amount
 PAR.Billing_Detail_Gross_Dol = PAR.Extended_Amount;

 //?* New Unit Price Ordered U/M
 // PAR.Unit Price Ordered U/M = PAR.Billing Detail Gross Dol. / DB1.Quantity Billed *Rounded
 PAR.Unit_Price_Ordered_U_M = PAR.Billing_Detail_Gross_Dol / DB1.Quantity_Billed 'H';

 //?* New Absorbed Freight Amount
 // PAR.Absorbed Freight Amount = PAR.Extended Amount - PAR.FOB Gross Amount
 PAR.Absorbed_Freight_Amount = PAR.Extended_Amount - PAR.FOB_Gross_Amount;

 //?* UPDATE Sales History
 EXECUTE FUNCTION(Fix Zero IC AbsFrt Err CH) TYPE(CHGOBJ) FILE(OMHSTPP)          AC1896932;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 PARAMETER(PAR.Unit_Price);
 PARAMETER(PAR.Unit_Price_Ordered_U_M);
 PARAMETER(PAR.Extended_Amount);
 PARAMETER(PAR.Billing_Detail_Gross_Dol);
 PARAMETER(PAR.FOB_Gross_Amount);
 PARAMETER(PAR.Price_Overage_Override);
 PARAMETER(PAR.Absorbed_Freight_Amount);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


//?* Ship To Customer 403002
EXECUTE FUNCTION(Fix Zero IC AbsFrt Err RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1896886;
PARAMETER(403002);
PARAMETER(1080707);
PARAMETER(1080816);
{
 //?USER: Process Data record

 //?QUIT: DB1.Actual Ship Date > PAR.Date To
 CASE;

 // IF DB1.Actual Shipped Date GT PAR.Date To               USR
 IF DB1.Actual_Shipped_Date > PAR.Date_To_USR;

 QUIT;

 ENDIF;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?OMT: Shipping Method = Collect
 CASE;

 // IF DB1.Shipping Method is Not Prepaid
 IF DB1.Shipping_Method = 'CR'/'CT';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?OMT: Weight Billed = 0
 CASE;

 // IF DB1.Weight Billed is Equal to zero
 IF DB1.Weight_Billed = *ZERO;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?OMT: Order Types <> OR
 CASE;

 // IF DB1.Order Type - Sales is Not Regular Order
 IF DB1.Order_Type_Sales <> 'OR';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?* New FOB Gross Amount
 // PAR.FOB Gross Amount = DB1.Extended Amount
 PAR.FOB_Gross_Amount = DB1.Extended_Amount;

 //?* New Absorbed Freight Rate /CWT
 EXECUTE FUNCTION(RTV Abs Freight Rate   RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1391554;
 PARAMETER(DB1.Shipping_Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?* New Unit Price & Price Overage Override
 // PAR.Unit Price
 PAR.Unit_Price = DB1.Unit_Price + ( PAR.Absorbed_Freight_Rate_CWT / 100 'H' );

 // PAR.Price Overage Override = PAR.Unit Price
 PAR.Price_Overage_Override = PAR.Unit_Price;

 //?* New Extended Amount & Billing Detail Gross
 // PAR.Extended Amount = PAR.Unit Price * DB1.Weight Billed *Rounded
 PAR.Extended_Amount = PAR.Unit_Price * DB1.Weight_Billed 'H';

 // PAR.Billing Detail Gross Dol. = PAR.Extended Amount
 PAR.Billing_Detail_Gross_Dol = PAR.Extended_Amount;

 //?* New Unit Price Ordered U/M
 // PAR.Unit Price Ordered U/M = PAR.Billing Detail Gross Dol. / DB1.Quantity Billed *Rounded
 PAR.Unit_Price_Ordered_U_M = PAR.Billing_Detail_Gross_Dol / DB1.Quantity_Billed 'H';

 //?* New Absorbed Freight Amount
 // PAR.Absorbed Freight Amount = PAR.Extended Amount - PAR.FOB Gross Amount
 PAR.Absorbed_Freight_Amount = PAR.Extended_Amount - PAR.FOB_Gross_Amount;

 //?* UPDATE Sales History
 EXECUTE FUNCTION(Fix Zero IC AbsFrt Err CH) TYPE(CHGOBJ) FILE(OMHSTPP)          AC1896932;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
 PARAMETER(PAR.Unit_Price);
 PARAMETER(PAR.Unit_Price_Ordered_U_M);
 PARAMETER(PAR.Extended_Amount);
 PARAMETER(PAR.Billing_Detail_Gross_Dol);
 PARAMETER(PAR.FOB_Gross_Amount);
 PARAMETER(PAR.Price_Overage_Override);
 PARAMETER(PAR.Absorbed_Freight_Amount);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


