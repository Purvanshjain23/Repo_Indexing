      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1131
      * TITLE:       Revise Farm Feed Ticket Override
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     09/23/09
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete records.
      *
      *           This program is called from HP4131-Work With Farm Feed Ticket Overrides.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *           Changed array MGW beginning position for 2nd parm to support Bin Code 6A.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1131   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsl036b   if   e           k disk
      *  Bin set bins
      *
      *
     Fhsl113a   if   e           k disk
      *  Rooms/Bin Sets
      *
      *
     Fhsp131    uf a e           k disk
      *  Farm feed ticket overrides
      *
      *
     Fhsp9131   o    e           k disk
      *  History Farm feed ticket overrides
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
      *
      *
      * Parms
      *
     D xxaist          s                   like(fsaist)
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxalphfscd      s              5
     D xxbicd          s                   like(bnbncd)
     D xxbncd          s                   like(bnbncd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   z-add     0             d1ffscd
     C                   z-add     0             d1tfscd
     C                   move      *blank        d1ffsnm
     C                   move      *blank        d1tfsnm
     C                   move      *blank        d1bncd
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     d1ffscd       chain(n)  hsp131                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fftfscd       d1tfscd
     C                   move      ffbncd        d1bncd
      *
      * Retrieve Names of From/To Farm Sites
      *
     C     d1ffscd       chain     hsp018                             92
     C                   if        *in92 = *off
     C                   move      fsfsnm        d1ffsnm
     C                   endif
      *
     C     d1tfscd       chain     hsp018                             92
     C                   if        *in92 = *off
     C                   move      fsfsnm        d1tfsnm
     C                   endif
      *
     C                   else
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1131k1
     C                   write     hp1131ec
     C                   exfmt     hp1131r1
      *
      * Clear messages
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-select
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   1) from farm site
      *
     C                   if        action = create
     C                   exsr      $ffscd
     C                   endif
      *
      * Always validate:
      *   1) override to farm site
      *   2) override to bin
      *
     C                   exsr      $tfscd
     C                   exsr      $bncd
     C                   endif                                                  If here
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate From Farm Site  (in create mode only)
      *---------------------------------------------------------------
      *
     C     $ffscd        begsr
      *
     C                   move      *blank        d1ffsnm
      *
     C                   select
     C                   when      d1ffscd = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1ffscd < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1ffscd       chain     hsp018                             92
     C                   if        *in92 = *on                                  If invalid
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1ffscd       xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsnm        d1ffsnm
      *
      * The Farm can only be the "From" Farm on one Feed Ticket Override record.
      *
     C     d1ffscd       chain     hsp131                             92
     C                   if        *in92 = *off
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00904'     mgid(e)
     C                   clear                   mgw
     C                   move      d1ffscd       xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If invalid
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Override To Farm Site
      *---------------------------------------------------------------
      *
     C     $tfscd        begsr
      *
     C                   move      *blank        d1tfsnm
      *
     C                   select
     C                   when      d1tfscd = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1tfscd < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1tfscd       chain     hsp018                             92
     C                   if        *in92 = *on                                  If invalid
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1tfscd       xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsnm        d1tfsnm
      *
      * The "override to" farm cannot be the same as the "from" farm.
      *
     C                   if        d1ffscd = d1tfscd
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00903'     mgid(e)
     C                   endif
     C                   endif
     C                   endif                                                  If invalid
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Bin
      *---------------------------------------------------------------
      *
     C     $bncd         begsr
      *
     C                   select
     C                   when      d1bncd = *blank
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
      * Check that the Bin exists for this Farm in the 'Bin Set Bins' file
      *
     C     key02         chain     hsl036b                            92
     C                   if        *in92 = *on                                  If bad bin
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00139'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1bncd        mgw(1)
     C                   move      d1tfscd       xxalphfscd
      ** P405-Changed beginning length of 2nd parm to support Bin Code 6A.
P405 C**                 movea     xxalphfscd    mgw(6)
P405 C                   movea     xxalphfscd    mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      * Check that 'bin set' is tied/assigned to at least one Room
      *
     C     key01         chain     hsl113a                            92
     C                   if        *in92 = *on                                  If not assigned
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00163'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1bncd        mgw(1)
      ** P405-Changed beginning length of 2nd parm to support Bin Code 6A.
P405 C**                 movea     bnbicd        mgw(6)
P405 C                   movea     bnbicd        mgw(7)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not assigned
     C                   endif                                                  If bad bin
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * From Farm Site
     C                   select
     C                   when      fld = 'D1FFSCD' and *in61 = *on
     C                   call      'HP5040'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        51
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1ffscd
     C                   move      xxfsnm        d1ffsnm
     C                   endif
      *
      * To Farm Site
     C                   when      fld = 'D1TFSCD'
     C                   call      'HP5040'
     C                   parm      'A'           xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        52
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1tfscd
     C                   move      xxfsnm        d1tfsnm
     C                   endif
      * Bin
     C                   when      fld = 'D1BNCD'
     C                   call      'HP532'
     C                   parm      d1tfscd       xxfscd
     C                   parm      *blank        xxbncd
     C                   PARM      *blank        XXbicd
     C                   seton                                        53
     C                   if        xxbncd <> *blank
     C                   move      xxbncd        d1bncd
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting, perform deletion integrity checks.
      * ...there are no checks.
      *
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
     C     d1ffscd       chain     hsp131                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   exsr      $wrt9131
     C                   delete    ffrec
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   z-add     d1ffscd       ffffscd
     C                   z-add     d1tfscd       fftfscd
     C                   move      d1bncd        ffbncd
      *
     C                   if        action = create                              If create
     C                   write     ffrec
     C                   exsr      $wrt9131
     C                   else
     C                   update    ffrec
     C                   exsr      $wrt9131
     C                   endif                                                  If create
      *
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      * If there are any errors, redisplay the screen; otherwise, exit
      * the program automatically. (The user does not have to take any
      * function key to exit.)
      *
     C                   if        error > 0
     C                   movel     scrn1         routne
     C                   else
     C                   movel     exit          routne
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a History record
      *---------------------------------------------------------------
      *
     C     $wrt9131      begsr
      *
     C                   z-add     ffffscd       h1ffscd
     C                   z-add     fftfscd       h1tfscd
     C                   move      ffbncd        h1bncd
     C                   move      action        h1action
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     h1updt
     C                   time                    h1uptm
     C                   move      sdusr         h1upusr
      *
     C                   write     h1rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    d1ffscd
     C                   parm                    rtncd
      *
     C                   movel     mode          action
      * Key lists
      *
     C     key01         klist
     C                   kfld                    bnfscd
     C                   kfld                    bnbicd
      *
     C     key02         klist
     C                   kfld                    d1tfscd
     C                   kfld                    d1bncd
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
