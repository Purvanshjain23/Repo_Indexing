      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF712
      * TITLE:       View Claim Adjustments
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     04/05/05
      *
      *
      * FUNCTION: This View displays a specific record from the Claim Adjustments
      *           file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/29/06  LeAnne Ramsey
      *           Added 3 new fields to screen/program:
      *             1) net claim price/pound
      *             2) affect sales pounds flag
      *             3) aggregate net product revenue price per pound
      *
      * 06/06/07  LeAnne Ramsey
      *           Added 2 new fields to screen/program:
      *             1) SBD responsibility percent
      *             2) TF responsibility percent
      *
      * 06/26/10  LeAnne Ramsey   (C841)
      *           Two of the 3 fields added to screen/program on 8/29/06 above
      *             1) net claim price/pound
      *             3) aggregate net product revenue price per pound
      *           were on the screen but had no program logic to populate them.
      *           I added that logic.
      *
      * 01/05/11  LeAnne Ramsey (E1245)
      *           A new field was added to TFP022-Claim Adjustments:
      *              1) customer type
      *           When it is an Affiliated Sales claim, it will hold "IS".
      *           Otherwise, it will be blank.
      *           When this claim is an Affiliated Sales claim we will display
      *           that on the screen.....because the "sharing" rules are different
      *           for these claims.
      *
      * 11/28/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 2 STF fields to TFP022 file:
      *             CLXRPPC  - STF RESPONSIBILITY %
      *             CLXNCLAM - STF NET CLAIM AMT
      *           Display the 2 STF fields on the screen.
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES CLANPRPR IN TFP022
      *         CHANGE @@NCLPR  TO SIZE 10.6
      *           CHANGES CLNCLPR IN TFP022
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfd712    cf   e             workstn infds(iofeed)
      *
      *
     Ftfp096    if   e           k disk
      *    Data source codes
      *
      *
     Ftfp022    if   e           k disk
      *    Claim adjustments
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Work fields for date manipulation
      *
     D wkisodt         s               D   datfmt(*iso)
      *
      *
      * Parm fields
      *
     D xxwedt          s                   like(clwedt)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for Screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Retrieve the Claim Adjustment record.
      *
     C     key01         chain     tfp022                             92
     C                   if        *in92 = *on                                  If not found
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   else
      *
     C                   z-add     clcono        d1cono
     C                   z-add     clprcd        d1prcd
     C                   z-add     clmmno        d1mmno
      *
     C                   z-add     clacllb       d1acllb
     C                   z-add     clagclam      d1agclam
     C                   z-add     clanclam      d1anclam
     C                   z-add     clclsxam      d1clsxam
      *
     C                   z-add     clsnclam      d1snclam
     C                   z-add     cltnclam      d1tnclam
12011C                   z-add     clxnclam      d1xnclam
      *
     C                   move      clmmty        d1mmty
     C                   move      clsalefl      d1salefl
     C                   move      clafslfl      d1afslfl
      *
     C                   z-add     clanprpr      d1anprpr
     C                   z-add     clnclpr       d1nclpr
      *
     C                   z-add     clsrppc       d1srppc
     C                   z-add     cltrppc       d1trppc
12011C                   z-add     clxrppc       d1xrppc
     C                   move      clrpdept      d1rpdept
     C                   move      clrpfl        d1rpfl
     C                   move      clrscd        d1rscd
     C                   move      clprrsty      d1prrsty
      *
      * If this is for an Affiliated Sales Claim, set the indicator to
      * say that on the screen.
      *
     C                   if        clcutycd = 'IS'
     C                   seton                                        45
     C                   else
     C                   setoff                                       45
     C                   endif
      *
12011 * If NOT company 440, then hide 'STF' text on screen.
  |   *
  |  C                   if        clcono <> 440
  |  C                   setoff                                       46
  |  C                   else
  |  C                   seton                                        46
12011C                   endif
      *
      * Flip Week-Beginning to MMDDYY format
      *
     C     *iso          test(d)                 clwbdt                 92
     C                   if        *in92 = *off                                 If OK begin
     C                   move      clwbdt        wkisodt
     C     *mdy          move      wkisodt       d1wbmdy
     C                   endif                                                  If OK begin
      *
      * Flip Week-Ending to MMDDYY format
      *
     C     *iso          test(d)                 clwedt                 92
     C                   if        *in92 = *off                                 If OK end
     C                   move      clwedt        wkisodt
     C     *mdy          move      wkisodt       d1wemdy
     C                   endif                                                  If OK end
      *
      *
      * Flip Original Sale Week-ending Date to MMDDYY format
      *
     C     *iso          test(d)                 closwedt               92
     C                   if        *in92 = *off                                 If OK date
     C                   move      closwedt      wkisodt
     C     *mdy          move      wkisodt       d1osmdy
     C                   endif                                                  If OK date
      *
      *
      * Retrieve Data Source Description
      *
     C     cldscd        chain     tfp096                             92
     C                   if        *in92 = *off
     C                   move      dsdsds        d1dsds
     C                   else
     C                   move      *blank        d1dsds
     C                   endif
      *
     C                   endif                                                  If not found
      *
      * Display screen 1
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     tf712k1
     C                   write     tf712ec
     C                   exfmt     tf712r1
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      *
      * Process user's entry and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   move      '03'          rtncd
     C                   eval      routne = exit
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * End job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    d1mmno
     C                   parm                    d1mmlnno
     C                   parm                    d1clno
     C                   parm                    d1cllnno
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1mmno
     C                   kfld                    d1mmlnno
     C                   kfld                    d1clno
     C                   kfld                    d1cllnno
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
