// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKA0PVR
// ?Date: 14.08.2025 Time: 02:48:51
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.PPWS_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.PPWS Company Number
DTL.CC_Company_Number = WRK.PPWS_Company_Number;

// DTL.BOH Company Number = WRK.PPWS Company Number
DTL.BOH_Company_Number = WRK.PPWS_Company_Number;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// DTL.Email Producers = CND.No
DTL.Email_Producers = 'N';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Validate fields

//?Source Type
CASE;

// IF DTL.SR Type is *ALL values
IF DTL.SR_Type = 'E'/'I';

// DTL.Condition Name USR = Condition name of DTL.SR Type
DTL.Condition_Name_USR = RTVCND(DTL.SR_Type);

//?Source Type
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Condition Name USR = CON.*BLANK
DTL.Condition_Name_USR = *BLANK;

ENDIF;

//?Val: Date Range
CASE;

// IF DTL.Date From USR GT DTL.Date To   USR
IF DTL.Date_From_USR > DTL.Date_To_USR;

// Send error message - 'From date must be less than or equal to the to date.'
ERROR(PRK0472);

ENDIF;

//?Val: Source Code
CASE;

// IF DTL.SR Source Code NE WRK.Blank USR
IF DTL.SR_Source_Code <> WRK.Blank_USR;

EXECUTE FUNCTION(Val Source            RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1202234;
PARAMETER(DTL.SR_Source_Code);
PARAMETER(DTL.SR_Description);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'Source not found.'
ERROR(PRK1470);
MSGPARM(DTL.SR_Source_Code);

ENDIF;

ENDIF;

//?Val: Producer Code
CASE;

// IF DTL.Producer Code         USR NE WRK.Blank USR
IF DTL.Producer_Code_USR <> WRK.Blank_USR;

EXECUTE FUNCTION(Val Prod Existance    RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1176016;
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.PD_Name);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'Producer not found.'
ERROR(PRK1045);
MSGPARM(DTL.Producer_Code_USR);

ENDIF;

//?Val: Producer Code
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.PD Name = CON.*BLANK
DTL.PD_Name = *BLANK;

ENDIF;

//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
//?SNDERRMSG if Producer not entered when Producer Loc entered.
CASE;

// IF DTL.Producer Code         USR is Blank
IF DTL.Producer_Code_USR = *BLANK;

// AND DTL.PL Location Code is Entered
AND DTL.PL_Location_Code <> *BLANK;

// Send error message - 'You must enter a Producer Code if a Producer Loc Code is entered.'
ERROR(PRK1481);
MSGPARM(DTL.Producer_Code_USR);

ENDIF;

//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
//?Val: Producer Loc Code
CASE;

// IF DTL.PL Location Code is Entered
IF DTL.PL_Location_Code <> *BLANK;

EXECUTE FUNCTION(Rtv Prod Loc Exist    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1343763;
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.PL_Name);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'Producer Location not found.'
ERROR(PRK0015);

ENDIF;

//?Val: Producer Loc Code
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.PL Name = CON.*BLANK
DTL.PL_Name = *BLANK;

ENDIF;

//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
//?F4=Prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.SR Source Code
IF PGM.*Cursor_field = DTL.SR_Source_Code;

// Call program Sel Source            SR.
CALL PROGRAM(Sel Source            SR) ('PKDRSRR');
PARAMETER(DTL.SR_Source_Code);

// IF PGM.*Cursor field <IS> DTL.Producer Code         USR
IF PGM.*Cursor_field = DTL.Producer_Code_USR;

// Call program Sel Producer          SR.
CALL PROGRAM(Sel Producer          SR) ('PKA1SRR');
PARAMETER(DTL.Producer_Code_USR);

//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
// IF PGM.*Cursor field <IS> DTL.PL Location Code
IF PGM.*Cursor_field = DTL.PL_Location_Code;

CASE;

// IF DTL.Producer Code         USR is Blank
IF DTL.Producer_Code_USR = *BLANK;

// Send error message - 'You must enter a Producer Code if a Producer Loc Code is entered.'
ERROR(PRK1481);
MSGPARM(DTL.Producer_Code_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Sel Prod Loc by Prod  SR.
CALL PROGRAM(Sel Prod Loc by Prod  SR) ('PWF5SRR');
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.PL_Location_Code);

ENDIF;

ENDIF;

//?C9426 JJH 06/26/17 - Defer confirm after Prompt
// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Validate relations

//?R7522 JJH 01/02/17 - Producer Distribution Entry
//?E12120 JJH 02/27/18 - Producer Loc Distribution Entry
//?Validate Producer has Email in Producer Distribution Entry
CASE;

// IF DTL.Email Producers is PDF
IF DTL.Email_Producers = 'P';

// OR DTL.Email Producers is XLS
OR DTL.Email_Producers = 'X';

CASE;

// IF DTL.Producer Code         USR is Entered
IF DTL.Producer_Code_USR <> *BLANK;

// AND DTL.PL Location Code is Blank
AND DTL.PL_Location_Code = *BLANK;

//?T13559 DN 08/21/18-Changed RTVOBJ to also Check if Active.
EXECUTE FUNCTION(Val Prdcr DistEnt Eml RT) TYPE(RTVOBJ) FILE(PVCRREP)           AB1329785;
PARAMETER(DTL.Producer_Code_USR);
PARAMETER('HPE-DLVRCV');
PARAMETER(LCL.Return_Code_USR);
{
 //?USER: Initialize routine

 // PAR.Return Code USR = CND.*Record does not exist
 PAR.Return_Code_USR = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.PDE Destination Type is Email
 IF DB1.PDE_Destination_Type = 'E';

 // AND DB1.RS Record Status is Active
 AND DB1.RS_Record_Status = 'A';

 // PAR.Return Code USR = CND.*Record already exists
 PAR.Return_Code_USR = 'Y2U0003';

 QUIT;

 ENDIF;

}


CASE;

// IF LCL.Return Code USR is *Record does not exist
IF LCL.Return_Code_USR = 'Y2U0005';

// Send error message - 'No active Email found for Producer &1 in Producer Distribution Entry.'
ERROR(PRK1412);
MSGPARM(DTL.Producer_Code_USR);

ENDIF;

// IF DTL.Producer Code         USR is Entered
IF DTL.Producer_Code_USR <> *BLANK;

// AND DTL.PL Location Code is Entered
AND DTL.PL_Location_Code <> *BLANK;

//?T13559 DN 08/21/18-Changed RTVOBJ to also Check if Active.
EXECUTE FUNCTION(Val Prod Loc Dist Eml RT) TYPE(RTVOBJ) FILE(PWALREP)           AB1343729;
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.PL_Location_Code);
PARAMETER('HPE-DLVRCV');
PARAMETER(LCL.Return_Code_USR);
{
 //?USER: Initialize routine

 // PAR.Return Code USR = CND.*Record does not exist
 PAR.Return_Code_USR = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.PDE Destination Type is Email
 IF DB1.PDE_Destination_Type = 'E';

 // AND DB1.RS Record Status is Active
 AND DB1.RS_Record_Status = 'A';

 // PAR.Return Code USR = CND.*Record already exists
 PAR.Return_Code_USR = 'Y2U0003';

 QUIT;

 ENDIF;

}


CASE;

// IF LCL.Return Code USR is *Record does not exist
IF LCL.Return_Code_USR = 'Y2U0005';

// Send error message - 'No active Email found for Producer &1 Loc &2 in Prod Loc Distrib Entry.'
ERROR(PRK1480);
MSGPARM(DTL.Producer_Code_USR);
MSGPARM(DTL.PL_Location_Code);

ENDIF;

ENDIF;

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Delivery Schedule');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.Company Number Alpha Usr = CVTVAR(DTL.BOH Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(DTL.BOH_Company_Number);

// WRK.Date Alpha USR = CVTVAR(DTL.Date From USR)
WRK.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// WRK.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
WRK.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

//?T13559 DN 08/08/18-Added PL Location Code as Parm.
// Execute command - 'SBM Prt Delivery Schedule'
EXECUTE COMMAND(PRK0324);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(DTL.SR_Type);
PARAMETER(DTL.SR_Source_Code);
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(DTL.PL_Location_Code);

//?E12120 JJH 11/28/17 - Option to Email as .XLS
//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
//?Send Producer Emails as PDF or XLS
CASE;

// IF DTL.Email Producers is PDF
IF DTL.Email_Producers = 'P';

// OR DTL.Email Producers is XLS
OR DTL.Email_Producers = 'X';

// LCL.Company Number Alpha Usr = CVTVAR(DTL.BOH Company Number)
LCL.Company_Number_Alpha_Usr = CVTVAR(DTL.BOH_Company_Number);

//?C4926 JJH 06/05/17 - Pass From Library to PWASUPR
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER('HPELIB');
PARAMETER(LCL.From_Library_USR);

//?E12120 JJH 02/27/18 - Producer Loc for Delivery Schedule Report
// Call program Prt Delivery Schedule CL.
CALL PROGRAM(Prt Delivery Schedule CL) ('PWASUPR');
PARAMETER('P');
PARAMETER(LCL.Company_Number_Alpha_Usr);
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(DTL.SR_Type);
PARAMETER(DTL.SR_Source_Code);
PARAMETER(LCL.From_Library_USR);
PARAMETER(DTL.Email_Producers);

ENDIF;

ENDIF;

