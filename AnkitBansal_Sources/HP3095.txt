      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP3095
      * TITLE:       Reset Printed Count on Bill-of-Ladings
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     09/18/00
      *
      * FUNCTION:  This function is for I.S. personnel only. Each time a
      *            sales or transfer movement is printed, its 'printed
      *            count' is incremented by 1.
      *
      *            The users can only 'batch' print BOL's for movements
      *            that have never been printed (ie: count is zero).
      *
      *            Sometimes the user's printers jam/screw up and they
      *            need to reprint an entire batch. But, unless we reset
      *            the 'print count' to zero for the affected movements,
      *            the user must print each movement indivdually!!
      *
      *            So, this function resets the count to zero so that they
      *            can reprint a whole bunch in a batch!
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 12/17/02  LeAnne Fedor
      *           We have removed 'production phase/type' from the Sales Movement
      *           Header. So, removed the logic that compared the LDA phase/type to
      *           the Sales Movement Header phase/type when processing Sales Movements.
      *
      * 07/13/04  LeAnne Fedor
      *           We have add 'cell' as a selection. It will work the same way that the
      *           'farm' selector works.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl074g   uf   e           k disk
      *  Transfer movement header (only scheduled movements)
      *
      *
     Fhsl084e   uf   e           k disk
      *  Sales movement header (only scheduled movements)
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkcell          s                   like(fscell)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfsbo                 1      5
     D  ldfymd                 6     13  0
     D  ldtymd                14     21  0
     D  ldptcd                22     26
     D  ldppcd                27     31
     D  ldfscd                32     36  0
     D  ldcell                37     38  0
     D  ldtran                44     44
     D  ldsale                45     45
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Update transfers if specified.
      *
     C                   if        ldtran = yes                                 If transfers
     C                   exsr      $tran
     C                   endif                                                  If transfers
      *
      * Update sale movements if specified.
      *
     C                   if        ldsale = yes                                 If sales
     C                   exsr      $sale
     C                   endif                                                  If sales
      *
     C                   seton                                        lr
      *
      *
      /eject
      *---------------------------------------------------------------
      * Process scheduled transfer movements
      *---------------------------------------------------------------
      *
     C     $tran         begsr
      *
     C     *loval        setll     hsl074g
      *
     C                   dou       *in90 = *on                                  Do transfers
     C                   read      hsl074g                                90
     C                   if        *in90 = *off     and                         If not EOF
     C                             mhscdt >= ldfymd and
     C                             mhscdt <= ldtymd
      *
      * Retrieve the CELL associated with the farm.
      *
     C                   z-add     0             wkcell
     C                   if        ldcell <> 0                                  If 1 cell
     C     mhorfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        wkcell
     C                   endif
     C                   endif                                                  If 1 cell
      *
     C                   if        (ldfsbo <> *blank and ldfsbo <> mhorbo) or
     C                             (ldptcd <> *blank and ldptcd <> mhorpt) or
     C                             (ldppcd <> *blank and ldppcd <> mhorpp) or
     C                             (ldfscd <> 0 and ldfscd <> mhorfs) or
     C                             (ldcell <> 0 and ldcell <> wkcell)
     C                   else
     C                   z-add     0             mhptct
     C                   update    mhrec
     C                   endif
      *
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do transfers
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process sales movements
      *---------------------------------------------------------------
      *
     C     $sale         begsr
      *
     C     *loval        setll     hsl084e
      *
     C                   dou       *in90 = *on                                  Do sales
     C                   read      hsl084e                                90
     C                   if        *in90 = *off     and                         If not EOF
     C                             shscdt >= ldfymd and
     C                             shscdt <= ldtymd
      *
      * Retrieve the CELL associated with the farm.
      *
     C                   z-add     0             wkcell
     C                   if        ldcell <> 0                                  If 1 cell
     C     shfscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        wkcell
     C                   endif
     C                   endif                                                  If 1 cell
      *
     C                   if        (ldfsbo <> *blank and ldfsbo <> shfsbo) or
     C                             (ldfscd <> 0 and ldfscd <> shfscd) or
     C                             (ldcell <> 0 and ldcell <> wkcell)
     C                   else
     C                   z-add     0             shptct
     C                   update    shrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /eject
