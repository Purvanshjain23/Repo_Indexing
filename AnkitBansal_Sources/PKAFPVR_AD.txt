// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKAFPVR
// ?Date: 14.08.2025 Time: 02:51:03
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 11/11/2020 - Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// *MO.VE             1183529*Bu = ilt. in functions
WRK.First_Time_Flag_Usr = 'Y';

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr is Yes
IF WRK.First_Time_Flag_Usr = 'Y';

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

// DTL.Oms Name = PAR.Oms Name
DTL.Oms_Name = PAR.Oms_Name;

// Call program Rtv Dflt Cut Mtx 2 OMS XF.
CALL PROGRAM(Rtv Dflt Cut Mtx 2 OMS XF) ('PDKHXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);

// Call program Val Cutout Matrix     XF.
CALL PROGRAM(Val Cutout Matrix     XF) ('PDLGXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(DTL.Description_30_USR);
PARAMETER(WRK.Record_Found_USR);

ENDIF;

//?USER: Validate fields

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?SEL: Cutout Matrix
CASE;

// IF PGM.*Cursor field <IS> DTL.Cutout Matrix Code USR
IF PGM.*Cursor_field = DTL.Cutout_Matrix_Code_USR;

// OR PGM.*Cursor field <IS> DTL.Effective Month/Day USR
OR PGM.*Cursor_field = DTL.Effective_Month_Day_USR;

// Call program Sel Cutout Matrix     SR.
CALL PROGRAM(Sel Cutout Matrix     SR) ('PDAZSRR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(DTL.Description_30_USR);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Val Cutout Matrix     XF.
CALL PROGRAM(Val Cutout Matrix     XF) ('PDLGXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(DTL.Description_30_USR);
PARAMETER(WRK.Record_Found_USR);

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Calc Kill/Rend/Cut Value');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('HPE');
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.TH Kill Date = DTL.TH Kill Date
WRK.TH_Kill_Date = DTL.TH_Kill_Date;

// WRK.Kill Date 2 USR = DTL.Kill Date 2 USR
WRK.Kill_Date_2_USR = DTL.Kill_Date_2_USR;

// PAR.Kill Date Usr = WRK.TH Kill Date
PAR.Kill_Date_Usr = WRK.TH_Kill_Date;

// DOW PAR.Kill Date Usr LE WRK.Kill Date 2 USR
DOW PAR.Kill_Date_Usr <= WRK.Kill_Date_2_USR;

// WRK.Date Alpha USR = CVTVAR(PAR.Kill Date Usr)
WRK.Date_Alpha_USR = CVTVAR(PAR.Kill_Date_Usr);

// Execute command - 'Clc Kill/Rend/Cut Val'
EXECUTE COMMAND(PRK0631);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);

// PAR.Kill Date Usr = PAR.Kill Date Usr + CON.1 *DAYS
PAR.Kill_Date_Usr = DATEINCR(PAR.Kill_Date_Usr 1 'DY' 1111111 'NONE' 'N' 1);

ENDDO;

ENDIF;

