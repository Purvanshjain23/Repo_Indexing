// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWONE1R
// ?Date: 14.08.2025 Time: 02:57:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?**NOTE: This program was cloned from PWCYE1R. Primary purpose is
//?        to show the JDE E1 info. Any changes to this function
//?        should consider changing PWCYE1R as well.
//?R17061 DN 04/29/21-Commented Out. Use RP4 Source.
// Execute function Mov ApplN to CompanyRP4US.
EXECUTE FUNCTION(Mov ApplN to CompanyRP4US) TYPE(EXCUSRSRC) ('PWIVUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                   movel     #IEVTX        ##CMP
}


//?R17061 DN 04/29/21-Commented Out. Use RP4 Source.
EXECUTE FUNCTION(Val Application/UserRP4IF) TYPE(EXCINTFUN)                     AB1350460;
PARAMETER(LCL.Oms_Warehouse_Code);
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(LCL.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(LCL.Oms_Default_Printer);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(LCL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to CompanyRP4US.
 EXECUTE FUNCTION(Mov ApplN to CompanyRP4US) TYPE(EXCUSRSRC) ('PWIVUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                   movel     #IEVTX        ##CMP
 }

 ENDIF;

}


// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('M3VEND');
PARAMETER(LCL.System_Value_Alpha_USR);

//?T8163 DN  01/16/17 - Get M3 Division #.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('M3HPEDIV');
PARAMETER(PAR.M3_Supplier_Division);

//?SDN440 RMC 5/7/2021 GET E1 HPE SEARCH TYPE F/VENDOR
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('E1SRCHTYP');
PARAMETER(LCL.Search_Type_3A);

//?R17061 DN 07/23/21-Get Security Cost Center.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('E1MCU');
PARAMETER(LCL.Business_Unit_Cost_Center);

//?USER: Initialize key screen

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

//?USER: Initialize detail screen (new record)

// DTL.RS Record Status = CND.Active
DTL.RS_Record_Status = 'A';

// DTL.Vendor 1099 = CND.No
DTL.Vendor_1099 = 'N';

// WRK.Fax Area Code # 2 = WRK.Blank USR
WRK.Fax_Area_Code_#_2 = WRK.Blank_USR;

// WRK.Fax Telephone 2 = WRK.Blank USR
WRK.Fax_Telephone_2 = WRK.Blank_USR;

//?R10690 JJH 06/05/17 - Set unused fields in Vendor Address = Blank
// WRK.Fax Attn 1 = WRK.Blank USR
WRK.Fax_Attn_1 = WRK.Blank_USR;

// WRK.Fax Attn 2 = WRK.Blank USR
WRK.Fax_Attn_2 = WRK.Blank_USR;

// WRK.Fax Attn 2 = WRK.Blank USR
WRK.Fax_Attn_2 = WRK.Blank_USR;

//?USER: Initialize detail screen (existing record)

//?R10690 JJH 06/05/17 - Initialization for existing Vendor Address
// Call program Rtv Trucker Address   XF.
CALL PROGRAM(Rtv Trucker Address   XF) ('PWCXXFR');
PARAMETER(DB1.TRK_Trucker_Code);
PARAMETER(NLL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(DTL.Trucker_Address_1_USR);
PARAMETER(DTL.Trucker_Address_2_USR);
PARAMETER(DTL.Trucker_Address_3_USR);
PARAMETER(DTL.Trucker_City_USR);
PARAMETER(DTL.Trucker_State_USR);
PARAMETER(DTL.Trucker_Zip_10_USR);
PARAMETER(DTL.Trucker_Area_Code_USR);
PARAMETER(DTL.Trucker_Phone_USR);
PARAMETER(DTL.Trucker_Fax_Area_Code_USR);
PARAMETER(DTL.Trucker_Fax_Telephone_USR);
PARAMETER(NLL.Fax_Attn_1);
PARAMETER(NLL.Fax_Area_Code_#_2);
PARAMETER(NLL.Fax_Telephone_2);
PARAMETER(NLL.Fax_Attn_2);
PARAMETER(DTL.Vendor_1099);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(NLL.Country_Code);

// WRK.Fax Attn 1 = WRK.Blank USR
WRK.Fax_Attn_1 = WRK.Blank_USR;

// WRK.Fax Area Code # 2 = WRK.Blank USR
WRK.Fax_Area_Code_#_2 = WRK.Blank_USR;

// WRK.Fax Telephone 2 = WRK.Blank USR
WRK.Fax_Telephone_2 = WRK.Blank_USR;

// WRK.Fax Attn 2 = WRK.Blank USR
WRK.Fax_Attn_2 = WRK.Blank_USR;

// WRK.Country Code Usr = WRK.Blank USR
WRK.Country_Code_Usr = WRK.Blank_USR;

//?W17061 DN 04/29/21-Get JDE E1 Info.
// Call program Rtv Vendor Addr/FaxE1 UP.
CALL PROGRAM(Rtv Vendor Addr/FaxE1 UP) ('VNDFAXRE1');
PARAMETER(WRK.Vendor_Return_Code_Usr);
PARAMETER(DB1.TRK_VND_Address_Number);
PARAMETER(DTL.Pass_Name);
PARAMETER(DTL.Address_1);
PARAMETER(DTL.Address_2);
PARAMETER(DTL.Address_3);
PARAMETER(DTL.City);
PARAMETER(DTL.State);
PARAMETER(DTL.Zip);
PARAMETER(DTL.Area_Code);
PARAMETER(DTL.Telephone);
PARAMETER(DTL.Fax_Area_Code_#_1);
PARAMETER(DTL.Fax_Telephone_1);
PARAMETER(DTL.Fax_Area_Code_#_2);
PARAMETER(DTL.Fax_Telephone_2);
PARAMETER(DTL.Vendor_1099_E1);
PARAMETER(DTL.Vendor_Tax_Id_E1);
PARAMETER(DTL.Country_Code);
PARAMETER(NLL.Producer_Trucker_Sts_Usr);

CASE;

// IF WRK.Vendor Return Code Usr is Vendor Error
IF WRK.Vendor_Return_Code_Usr = 'ERR';

// DTL.Address 1 = CON.Not Found
DTL.Address_1 = 'Not Found';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

ENDIF;

// DTL.Record Status Desc Usr = Condition name of DB1.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DB1.RS_Record_Status);

//?USER: Validate detail screen fields

// DTL.Record Status Desc Usr = Condition name of DTL.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DTL.RS_Record_Status);

//?R10690 JJH 06/05/17 - Do not validate JDE Vendor
//?R17061 DN 07/28/21-Do NOT Allow JDE Vendor for Input. Use F13.
//?       Commented Out Validation Logic.
//?USER: Validate detail screen relations

//?R10690 JJH 06/05/17 - No longer required because M3 Vendor and
//?  AS/400 Vendor Address are created seperately.
//?E11442 JJH 08/18 - Validation for M3 Supplier Division/Group
//?R17061 DN 04/29/21-Commented Out. No Longer Used.
//?USER: Create DBF record

EXECUTE FUNCTION(Crt Trucker/Trk Addr  IF) TYPE(EXCINTFUN) FILE(PKBAREP)        AB1335251;
PARAMETER(DTL.TRK_Trucker_Code);
PARAMETER(DTL.TRK_Name);
PARAMETER(DTL.TRK_Sts);
PARAMETER(DTL.TRK_VND_Address_Number);
PARAMETER(DTL.TRK_M3_Supplier_Id);
PARAMETER(DTL.TRK_Name);
PARAMETER(DTL.Trucker_Address_1_USR);
PARAMETER(DTL.Trucker_Address_2_USR);
PARAMETER(DTL.Trucker_Address_3_USR);
PARAMETER(DTL.Trucker_City_USR);
PARAMETER(DTL.Trucker_State_USR);
PARAMETER(DTL.Trucker_Zip_10_USR);
PARAMETER(DTL.Trucker_Area_Code_USR);
PARAMETER(DTL.Trucker_Phone_USR);
PARAMETER(DTL.Trucker_Fax_Area_Code_USR);
PARAMETER(DTL.Trucker_Fax_Telephone_USR);
PARAMETER(WRK.Fax_Attn_1);
PARAMETER(WRK.Fax_Area_Code_#_2);
PARAMETER(WRK.Fax_Telephone_2);
PARAMETER(WRK.Fax_Attn_2);
PARAMETER(DTL.Vendor_1099);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(WRK.Country_Code_Usr);
{
 //?Execute internal function

 //?Modifications and Comments
 DO;

 //?R10690 JJH 06/05/17 - Trucker Address
 //?- This function replaces Crt Trucker/Vendor    If, as we no longer
 //?  use the JDE Address file.
 //?- This function creates the Trucker Address when the Trucker
 //?  record is created.
 ENDDO;

 EXECUTE FUNCTION(Crt Trucker           CR) TYPE(CRTOBJ) FILE(PKBAREP)           AB1104278;
 PARAMETER(PAR.TRK_Trucker_Code);
 PARAMETER(PAR.TRK_Name);
 PARAMETER(PAR.TRK_Sts);
 PARAMETER(PAR.TRK_VND_Address_Number);
 PARAMETER(PAR.TRK_M3_Supplier_Id);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 EXECUTE FUNCTION(Crt Trucker Address   CR) TYPE(CRTOBJ) FILE(PWAFREP)           AB1335149;
 PARAMETER(PAR.TRK_Trucker_Code);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Pass_Name);
 PARAMETER(PAR.Address_1);
 PARAMETER(PAR.Address_2);
 PARAMETER(PAR.Address_3);
 PARAMETER(PAR.City);
 PARAMETER(PAR.State);
 PARAMETER(PAR.Zip);
 PARAMETER(PAR.Area_Code);
 PARAMETER(PAR.Telephone);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(PAR.Fax_Telephone);
 PARAMETER(PAR.Fax_Attn_1);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(PAR.Fax_Telephone_2);
 PARAMETER(PAR.Fax_Attn_2);
 PARAMETER(PAR.Vendor_1099);
 PARAMETER(PAR.Vendor_Tax_Id);
 PARAMETER(PAR.Country_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Trucker/Trk Addr  IF) TYPE(EXCINTFUN) FILE(PKBAREP)        AB1335409;
PARAMETER(DTL.TRK_Trucker_Code);
PARAMETER(DTL.TRK_Name);
PARAMETER(DTL.TRK_Sts);
PARAMETER(DTL.TRK_VND_Address_Number);
PARAMETER(DTL.TRK_M3_Supplier_Id);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.TRK_VND_Address_Number);
PARAMETER(DTL.Pass_Name);
PARAMETER(DTL.Trucker_Address_1_USR);
PARAMETER(DTL.Trucker_Address_2_USR);
PARAMETER(DTL.Trucker_Address_3_USR);
PARAMETER(DTL.Trucker_City_USR);
PARAMETER(DTL.Trucker_State_USR);
PARAMETER(DTL.Trucker_Zip_10_USR);
PARAMETER(DTL.Trucker_Area_Code_USR);
PARAMETER(DTL.Trucker_Phone_USR);
PARAMETER(DTL.Trucker_Fax_Area_Code_USR);
PARAMETER(DTL.Trucker_Fax_Telephone_USR);
PARAMETER(LCL.Fax_Attn_1);
PARAMETER(DTL.Fax_Area_Code_#_2);
PARAMETER(DTL.Fax_Telephone_2);
PARAMETER(LCL.Fax_Attn_2);
PARAMETER(DTL.Vendor_1099);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(DTL.Country_Code);
{
 //?Execute internal function

 //?Modifications and Comments
 DO;

 //?R10690 JJH 06/05/17 - Trucker Address
 //?- This function replaces Chg Trucker/Vendor    If, as we no longer
 //?  use the JDE Address file.
 //?- This function changes the Trucker Address when the Trucker
 //?  record is created.
 ENDDO;

 EXECUTE FUNCTION(Chg Trucker           CH) TYPE(CHGOBJ) FILE(PKBAREP)           AB1104279;
 PARAMETER(PAR.TRK_Trucker_Code);
 PARAMETER(PAR.TRK_Name);
 PARAMETER(PAR.TRK_Sts);
 PARAMETER(PAR.TRK_VND_Address_Number);
 PARAMETER(PAR.TRK_M3_Supplier_Id);
 PARAMETER(PAR.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 EXECUTE FUNCTION(Chg Trucker Address   CH) TYPE(CHGOBJ) FILE(PWAFREP)           AB1335150;
 PARAMETER(PAR.TRK_Trucker_Code);
 PARAMETER(PAR.Address_Number);
 PARAMETER(PAR.TRK_Name);
 PARAMETER(PAR.Address_1);
 PARAMETER(PAR.Address_2);
 PARAMETER(PAR.Address_3);
 PARAMETER(PAR.City);
 PARAMETER(PAR.State);
 PARAMETER(PAR.Zip);
 PARAMETER(PAR.Area_Code);
 PARAMETER(PAR.Telephone);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(PAR.Fax_Telephone);
 PARAMETER(PAR.Fax_Attn_1);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(PAR.Fax_Telephone_2);
 PARAMETER(PAR.Fax_Attn_2);
 PARAMETER(PAR.Vendor_1099);
 PARAMETER(PAR.Vendor_Tax_Id);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.RS_Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

