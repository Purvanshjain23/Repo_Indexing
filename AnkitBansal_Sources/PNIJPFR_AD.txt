// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNIJPFR
// ?Date: 14.08.2025 Time: 12:05:53
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E2490 RMC 6/13/13 Print cust name- so prt 5,0 qtys instead of 7,0
//?E2490 RMC 3/4/13 Sel "OR" regular orders only
//?FP1054 6/10/09 Print orders that ship curr day too. they need signoff
//?  for any orders that have been ship off cut
//?FP1054 5/04/09 New print to show ship off cut orders for the job date
// LCL.Date From             USR = JOB.*Job date + CON.-3 *DAYS
LCL.Date_From_USR = DATEINCR(JOB.*Job_date '-3' 'DY' 1111111 'NONE' 'N' 1);

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

EXECUTE FUNCTION(RTV Order Type         RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1564834;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(LCL.Order_Type_Sales);
{
 //?USER: Process Data record

 // PAR.Order Type - Sales = DB1.Order Type - Sales
 PAR.Order_Type_Sales = DB1.Order_Type_Sales;

 QUIT;

}


EXECUTE FUNCTION(RTV Qty/Wgt Ord/Sched RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1648058;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.Order_Sequence_Number);
PARAMETER(DB1.Order_Secondary_Line_Seq);
PARAMETER(LCL.Detail_Line_Status);
PARAMETER(LCL.Quantity_Ordered);
PARAMETER(LCL.Weight_Ordered);
PARAMETER(NLL.Quantity_Scheduled);
PARAMETER(NLL.Weight_Scheduled);
PARAMETER(NLL.Requested_Ship_Date);
PARAMETER(NLL.Consumed_Item_Code);
PARAMETER(LCL.Item_Age_Days);
PARAMETER(LCL.Production_Ovr_AgeDte_Fr);
PARAMETER(LCL.Production_Ovr_AgeDte_To);
PARAMETER(NLL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


//?E2490 Sel "OR" regular orders only
CASE;

// IF LCL.Order Type - Sales is Not Regular Order
IF LCL.Order_Type_Sales <> 'OR';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Only show orders that are available or on hold- SHOW ALL Not cancelled
CASE;

// IF LCL.Detail Line Status is Cancelled
IF LCL.Detail_Line_Status = 'X';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Only show orders that have sched wt for the prod date >0
CASE;

// IF DB1.OD Weight Scheduled is Greater than zero
IF DB1.OD_Weight_Scheduled > *ZERO;

//?Only show orders that have sched wt for the prod date >0
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF DB1.Scheduled Ship Date GE LCL.Date From             USR
IF DB1.Scheduled_Ship_Date >= LCL.Date_From_USR;

// AND DB1.Scheduled Ship Date LE JOB.*Job date
AND DB1.Scheduled_Ship_Date <= JOB.*Job_date;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

EXECUTE FUNCTION(Rtv Chill Time        RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1304403;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Item_Code);
PARAMETER(LCL.Fresh_Chilling_Time);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Fresh Chilling Time is GT Zero
IF LCL.Fresh_Chilling_Time > *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(TOP_Company_Name_DRV);
PARAMETER(TOP_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT OD Production Date header format

CASE;

IF NEW Item_Code;
EXECUTE FUNCTION(Item Description DRV) TYPE(DRVFLD)                             AC1633414;
PARAMETER(CUR.Item_Description_DRV);
PARAMETER(CUR.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Description   RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1325690;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Description_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print Item Code header format
PRINT Item Code header format;

ENDIF;

// SUPPRESSED PRINT Warehouse Code header format

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Unit Weight        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1298772;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(LCL.Unit_Weight);
PARAMETER(LCL.Quality_Level);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Quantity Ordered 5.0 USR = LCL.Quantity Ordered
CUR.Quantity_Ordered_5_0_USR = LCL.Quantity_Ordered;

// CUR.Weight Order Needs USR = LCL.Weight Ordered
CUR.Weight_Order_Needs_USR = LCL.Weight_Ordered;

// CUR.Quantity Sched 5.0 USR = DB1.OD Qty/Cnsmd Pieces Sched
CUR.Quantity_Sched_5_0_USR = DB1.OD_Qty_Cnsmd_Pieces_Sched;

// CUR.Weight Sched Prod USR = DB1.OD Weight Scheduled
CUR.Weight_Sched_Prod_USR = DB1.OD_Weight_Scheduled;

EXECUTE FUNCTION(RTV Ship To Name       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1313894;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Sales Route/Desc   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1507292;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Sales_Route_Code);
PARAMETER(NLL.Sales_Route_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 //?Get sales route description
 CASE;

 // IF DB1.Sales Route Code NE WRK.BLANK
 IF DB1.Sales_Route_Code <> WRK.BLANK;

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Description);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Get sales route description
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Sales Route Description = CON.*BLANK
 PAR.Sales_Route_Description = *BLANK;

 ENDIF;

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?USER: Process after print of detail format

NXT.Quantity_Scheduled_1_SUM = SUM(CUR.Quantity_Sched_5_0_USR);

NXT.Weight_Sched_Prod_SUM = SUM(CUR.Weight_Sched_Prod_USR);

//?USER: Print required level totals

// SUPPRESSED PRINT Warehouse Code totals format

CASE;

IF NEW Item_Code;
// Print Item Code totals format
PRINT Item Code totals format;

ENDIF;

// SUPPRESSED PRINT OD Production Date totals format

// SUPPRESSED PRINT Company Number totals format

