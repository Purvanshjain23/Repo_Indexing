// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PULRXFR
// ?Date: 14.08.2025 Time: 03:50:45
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Format Data.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// Execute function Get System Date 2     US.
EXECUTE FUNCTION(Get System Date 2     US) TYPE(EXCUSRSRC) ('PULQUFR');
PARAMETER(LCL.System_Date_Nbr_USR);
{
 * Get System Date - CCYYMMDD
 C                     MOVE *DATE     #OC0NZ
}


// LCL.Production Date USR D8# = LCL.System Date Nbr USR
LCL.Production_Date_USR_D8# = LCL.System_Date_Nbr_USR;

// LCL.@Date - ATR = LCL.Production Date USR D8#
LCL.@Date_ATR = LCL.Production_Date_USR_D8#;

EXECUTE FUNCTION(Convert DTE to mm/dd/yyyy) TYPE(EXCINTFUN)                     AC1561339;
PARAMETER(LCL.@Date_ATR);
PARAMETER(LCL.Date_mm_dd_yyyy_USR);
{
 //?Execute internal function

 //?Break apart date.
 // PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
 PAR.YYYY_numeric_USR = DATEDTLS(PAR.@Date_ATR 'YR' 1111111 'NONE' 'N' 1);

 // PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
 PAR.MM_numeric_USR = DATEDTLS(PAR.@Date_ATR 'MO' 1111111 'NONE' 'N' 1);

 // PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
 PAR.DD_numeric_USR = DATEDTLS(PAR.@Date_ATR 'DM' 1111111 'NONE' 'N' 1);

 //?Convert to alpha.
 // PAR.YYYY alpha   USR = CVTVAR(PAR.YYYY numeric USR)
 PAR.YYYY_alpha_USR = CVTVAR(PAR.YYYY_numeric_USR);

 // PAR.MM   alpha   USR = CVTVAR(PAR.MM   numeric USR)
 PAR.MM_alpha_USR = CVTVAR(PAR.MM_numeric_USR);

 // PAR.DD   alpha   USR = CVTVAR(PAR.DD   numeric USR)
 PAR.DD_alpha_USR = CVTVAR(PAR.DD_numeric_USR);

 //?Put back together.
 // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.MM   alpha   USR,CON./,CON.*ZERO)
 PAR.Date_mm_dd_yyyy_USR = PAR.MM_alpha_USR + '/' (*ZERO);

 // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.DD   alpha   USR,CO
 PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.DD_alpha_USR (*ZERO);

 // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,CON./,CON.*ZERO)
 PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + '/' (*ZERO);

 // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.YYYY alpha   USR,CO
 PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.YYYY_alpha_USR (*ZERO);

}


// LCL.PFS Company Number Alpha = CVTVAR(PAR.PFS Company Number)
LCL.PFS_Company_Number_Alpha = CVTVAR(PAR.PFS_Company_Number);

ENDIF;

//?From Baseline: Are There Any Records with Fallout Flag=Y?
CASE;

// IF PAR.Called from Job Schedule is Yes
IF PAR.Called_from_Job_Schedule = 'Y';

EXECUTE FUNCTION(Rtv Any Balance Flag=Y RT) TYPE(RTVOBJ) FILE(PUBBCPP)          AC2167371;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(LCL.System_Date_Nbr_USR);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.PFS Balance Flag is Yes
 IF DB1.PFS_Balance_Flag = 'Y';

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

 ENDIF;

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

//?Format Email Subject/Message & Send Email to Notify Error.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Email Subject USR = CONCAT(CON.Co,LCL.PFS Company Number Alpha,CON.1)
LCL.Email_Subject_USR = 'Co' + LCL.PFS_Company_Number_Alpha (1);

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.Balance & Fallout Codes,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + 'Balance & Fallout Codes' (1);

EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
PARAMETER('DTALIB');
PARAMETER(LCL.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Concatenate 'TEST' to Email Subject Line if Not Prod Data.
CASE;

// IF NOT LCL.System Value Alpha is PRKFLIB
IF ! LCL.System_Value_Alpha = 'PRKFLIB';

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.- TEST,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + '- TEST' (1);

ENDIF;

// LCL.Email Message USR = CONCAT(CON.BASELINE: PFS Balance Cod,CON.es missing for Plant,CON.*ZERO)
LCL.Email_Message_USR = 'BASELINE: PFS Balance Cod' + 'es missing for Plant' (*ZERO);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,LCL.PFS Company Number Alpha,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + LCL.PFS_Company_Number_Alpha (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.for Production Date,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + 'for Production Date' (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,LCL.Date mm/dd/yyyy USR,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + LCL.Date_mm_dd_yyyy_USR (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON..,CON.*ZERO)
LCL.Email_Message_USR = LCL.Email_Message_USR + '.' (*ZERO);

EXECUTE FUNCTION(Exc ESNDMAIL Generic  IF) TYPE(EXCINTFUN)                      AC2144041;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER('PFSBALFALL');
PARAMETER(LCL.Email_Subject_USR);
PARAMETER(LCL.Email_Message_USR);
{
 //?Execute internal function

 //?Execute ESNDMAIL to Send Email Message.
 EXECUTE FUNCTION(RTV Alpha Value 2     RT) TYPE(RTVOBJ) FILE(PDKMREP)           AC2134765;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Value_Code);
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Email Address is Entered
 IF LCL.Email_Address <> *BLANK;

 // Call program Exc ESNDMAIL Generic  CL.
 CALL PROGRAM(Exc ESNDMAIL Generic  CL) ('PUE8UPC');
 PARAMETER(LCL.Email_Address);
 PARAMETER(PAR.Email_Subject_USR);
 PARAMETER(PAR.Email_Message_USR);

 ENDIF;

}


ENDIF;

ENDIF;

ENDIF;

//?Build/Send Balance Fallout Hdr/Dtl to Staging File for Carlisle.
CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// OR PAR.Called from Job Schedule is No
OR PAR.Called_from_Job_Schedule = 'N';

// LCL.PFS Batch Time = JOB.*Job time
LCL.PFS_Batch_Time = JOB.*Job_time;

//?Note: Only the DTL file will be picked up by Carlisle.
EXECUTE FUNCTION(Crt Bal Fallout Hdr/DtlRT) TYPE(RTVOBJ) FILE(PUBBCPP)          AC2167328;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(LCL.System_Date_Nbr_USR);
PARAMETER(LCL.PFS_Batch_Time);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt PFS Bal Fallout DtlCR) TYPE(CRTOBJ) FILE(PUBDCPP)          AC2166142;
 PARAMETER(PAR.PFS_Company_Number);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(PAR.PFS_Batch_Time);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(DB1.PFS_Item_Code);
 PARAMETER(JOB.*USER);
 PARAMETER(DB1.PFS_Balance_Flag);
 PARAMETER(DB1.PFS_Fallout_Flag);
 PARAMETER(DB1.PFS_Notes);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(DB1.PFS_Error_Reason);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(PAR.PFS_Batch_Time);
 //?USER: Exit processing

 EXECUTE FUNCTION(Crt PFS Bal Fallout HdrCR) TYPE(CRTOBJ) FILE(PUBCCPP)          AC2166145;
 PARAMETER(PAR.PFS_Company_Number);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(PAR.PFS_Batch_Time);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(JOB.*USER);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(DB1.PFS_Error_Reason);
 PARAMETER(PAR.PFS_Production_Date);
 PARAMETER(PAR.PFS_Batch_Time);
}


//?Copy DTL File to Staging File & Update Process Sts=9 (Sent).
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Format Data.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.PFS Batch Date = LCL.System Date Nbr USR
LCL.PFS_Batch_Date = LCL.System_Date_Nbr_USR;

// LCL.PFS Batch Date Alpha = CVTVAR(LCL.PFS Batch Date)
LCL.PFS_Batch_Date_Alpha = CVTVAR(LCL.PFS_Batch_Date);

// LCL.PFS Batch Time Alpha = CVTVAR(LCL.PFS Batch Time)
LCL.PFS_Batch_Time_Alpha = CVTVAR(LCL.PFS_Batch_Time);

// LCL.PFS Production Date Alpha = LCL.PFS Batch Date Alpha
LCL.PFS_Production_Date_Alpha = LCL.PFS_Batch_Date_Alpha;

ENDIF;

// Call program Exc Cpy Dtl 4/Carlisle CL.
CALL PROGRAM(Exc Cpy Dtl 4/Carlisle CL) ('PULTUPC');
PARAMETER(LCL.PFS_Company_Number_Alpha);
PARAMETER(LCL.PFS_Batch_Date_Alpha);
PARAMETER(LCL.PFS_Batch_Time_Alpha);
PARAMETER(LCL.PFS_Production_Date_Alpha);

EXECUTE FUNCTION(Upd Process Status     RT) TYPE(RTVOBJ) FILE(PUBCCPP)          AC2167720;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER(LCL.System_Date_Nbr_USR);
PARAMETER(LCL.PFS_Batch_Time);
PARAMETER(LCL.System_Date_Nbr_USR);
PARAMETER(9);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg PFS Bal Fallout HdrCH) TYPE(CHGOBJ) FILE(PUBCCPP)          AC2166146;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Batch_Date);
 PARAMETER(DB1.PFS_Batch_Time);
 PARAMETER(DB1.PFS_Production_Date);
 PARAMETER(DB1.PFS_User_ID);
 PARAMETER(PAR.PFS_Batch_Date);
 PARAMETER(JOB.*Job_time);
 PARAMETER('C');
 PARAMETER(PAR.PFS_Process_Status);
 PARAMETER(DB1.PFS_Error_Reason);
 PARAMETER(PAR.PFS_Batch_Date);
 PARAMETER(JOB.*Job_time);
 EXECUTE FUNCTION(Upd Process Status     RT) TYPE(RTVOBJ) FILE(PUBDCPP)          AC2167740;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Batch_Date);
 PARAMETER(DB1.PFS_Batch_Time);
 PARAMETER(DB1.PFS_Production_Date);
 PARAMETER(PAR.PFS_Process_Status);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg PFS Bal Fallout DtlCH) TYPE(CHGOBJ) FILE(PUBDCPP)          AC2166143;
  PARAMETER(DB1.PFS_Company_Number);
  PARAMETER(DB1.PFS_Batch_Date);
  PARAMETER(DB1.PFS_Batch_Time);
  PARAMETER(DB1.PFS_Production_Date);
  PARAMETER(DB1.PFS_Item_Code);
  PARAMETER(JOB.*USER);
  PARAMETER(DB1.PFS_Balance_Flag);
  PARAMETER(DB1.PFS_Fallout_Flag);
  PARAMETER(DB1.PFS_Notes);
  PARAMETER('C');
  PARAMETER(PAR.PFS_Process_Status);
  PARAMETER(DB1.PFS_Error_Reason);
  PARAMETER(PAR.PFS_Batch_Date);
  PARAMETER(JOB.*Job_time);
 }

}


ENDIF;

//?From Baseline: Send Completed Email Message.
CASE;

// IF PAR.Called from Job Schedule is Yes
IF PAR.Called_from_Job_Schedule = 'Y';

// LCL.Email Subject USR = CONCAT(CON.Co,LCL.PFS Company Number Alpha,CON.1)
LCL.Email_Subject_USR = 'Co' + LCL.PFS_Company_Number_Alpha (1);

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.Balance & Fallout Codes,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + 'Balance & Fallout Codes' (1);

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.Created,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + 'Created' (1);

// LCL.Email Message USR = CONCAT(CON.BASELINE: Balance & Fallo,CON.out Codes sent to,CON.*ZERO)
LCL.Email_Message_USR = 'BASELINE: Balance & Fallo' + 'out Codes sent to' (0);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.Carlisle - Co,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + 'Carlisle - Co' (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,LCL.PFS Company Number Alpha,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + LCL.PFS_Company_Number_Alpha (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.for Production Date,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + 'for Production Date' (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,LCL.Date mm/dd/yyyy USR,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + LCL.Date_mm_dd_yyyy_USR (1);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON..,CON.*ZERO)
LCL.Email_Message_USR = LCL.Email_Message_USR + '.' (*ZERO);

EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
PARAMETER('DTALIB');
PARAMETER(LCL.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Concatenate 'TEST' to Email Subject Line if Not Prod Data.
CASE;

// IF NOT LCL.System Value Alpha is PRKFLIB
IF ! LCL.System_Value_Alpha = 'PRKFLIB';

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.- TEST,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + '- TEST' (1);

ENDIF;

EXECUTE FUNCTION(Exc ESNDMAIL Generic  IF) TYPE(EXCINTFUN)                      AC2144041;
PARAMETER(PAR.PFS_Company_Number);
PARAMETER('PFSBALFALL');
PARAMETER(LCL.Email_Subject_USR);
PARAMETER(LCL.Email_Message_USR);
{
 //?Execute internal function

 //?Execute ESNDMAIL to Send Email Message.
 EXECUTE FUNCTION(RTV Alpha Value 2     RT) TYPE(RTVOBJ) FILE(PDKMREP)           AC2134765;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Value_Code);
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Email Address is Entered
 IF LCL.Email_Address <> *BLANK;

 // Call program Exc ESNDMAIL Generic  CL.
 CALL PROGRAM(Exc ESNDMAIL Generic  CL) ('PUE8UPC');
 PARAMETER(LCL.Email_Address);
 PARAMETER(PAR.Email_Subject_USR);
 PARAMETER(PAR.Email_Message_USR);

 ENDIF;

}


ENDIF;

ENDIF;

