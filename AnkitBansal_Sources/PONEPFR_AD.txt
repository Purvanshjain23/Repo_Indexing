// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PONEPFR
// ?Date: 14.08.2025 Time: 12:06:16
// ?------------------------------------------------------------------------------------------------

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number header format

ENDIF;

CASE;

IF NEW Order_Number;
// SUPPRESSED PRINT Order Number header format

ENDIF;

CASE;

IF NEW ED_Export_Document_Type;
// SUPPRESSED PRINT ED Export Document Type header format

ENDIF;

//?USER: Process before print of detail format

// CUR.Date                  USR = DB1.ED Sail Date
CUR.Date_USR = DB1.ED_Sail_Date;

// CUR.USR Uom = CON.Lbs
CUR.USR_Uom = 'Lbs';

// CUR.USR UOM 2 = CON.Lbs
CUR.USR_UOM_2 = 'Lbs';

//?11/19/08  dont print the 'contract no xxxxxxxx' per janelle
// CUR.Text USR 8 = CON.*BLANK
CUR.Text_USR_8 = *BLANK;

//?04/24/08  dont print the consignee or booking text any more per Janelle
// CUR.Text USR 20 = CON.*BLANK
CUR.Text_USR_20 = *BLANK;

// CUR.ED Product Net Weight lbs = DB1.ED Total Net Weight lbs
CUR.ED_Product_Net_Weight_lbs = DB1.ED_Total_Net_Weight_lbs;

//?11/05/02    This used to be pre-typed on the forms
//?12/05/02    Condition it from the Edit screen
//?02/04/09    Take the INC off of Seaboard Farms, Inc
CASE;

// IF CUR.ED Cert of Orig Sbd addr is Yes
IF CUR.ED_Cert_of_Orig_Sbd_addr = 'Y';

// WRK.Text Usr 50 = CONCAT(CON.Seaboard Farms, 9000,CON. W 67th Street,Suite 200,,CON.*ZERO)
WRK.Text_Usr_50 = 'Seaboard Farms, 9000' + ' W 67th Street,Suite 200,' (*ZERO);

// WRK.text usr 75 = CONCAT(WRK.Text Usr 50,CON.Shawnee Mission, KS 66202,CON.*ZERO)
WRK.text_usr_75 = WRK.Text_Usr_50 + 'Shawnee Mission, KS 66202' (*ZERO);

// CUR.Check Protection Txt 1 = CONCAT(WRK.text usr 75,CON.-3677,CON.*ZERO)
CUR.Check_Protection_Txt_1 = WRK.text_usr_75 + '-3677' (*ZERO);

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Check Protection Txt 1 = CON.*BLANK
CUR.Check_Protection_Txt_1 = *BLANK;

ENDIF;

//?USER: On print of detail format

//?R15161 DN 07/25/19-Get Booking # from Export Doc Order Hdr Ext2.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?NOTE: EDE2 Booking Number is currently hidden.
EXECUTE FUNCTION(Rtv Booking Number     RT) TYPE(RTVOBJ) FILE(PUBICPP)          AC2173560;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.EDE2_Booking_Number);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?R16637 DN 12/17/20-Suppress Consignee Blank Address Lines.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Fmt Suppress Addr LinesIF) TYPE(EXCINTFUN)                     AC2191192;
PARAMETER(CUR.ED_Consignor_Addr_2);
PARAMETER(CUR.ED_Consignor_Addr_3);
PARAMETER(CUR.ED_Consignor_Addr_4);
PARAMETER(CUR.ED_Consignor_State);
PARAMETER(CUR.ED_Consignor_Postal);
PARAMETER(CUR.ED_Consignor_Country_Code);
PARAMETER(CUR.ED_Consignee_Addr_2);
PARAMETER(CUR.ED_Consignee_Addr_3);
PARAMETER(CUR.ED_Consignee_Addr_4);
PARAMETER(CUR.ED_Consignee_State);
PARAMETER(CUR.ED_Consignee_Postal);
PARAMETER(CUR.ED_Consignee_Country_Code);
PARAMETER(LCL.Blank_1_USR);
PARAMETER(LCL.Blank_for_30_USR);
PARAMETER(CUR.Consignee_Country_Desc_U);
{
 //?Execute internal function

 //?CONSIGNOR: Format & Suppress Blank Address Lines.
 CASE;

 // IF PAR.ED Consignor Addr 2 is Not Blank
 IF PAR.ED_Consignor_Addr_2 <> *BLANK;

 // AND PAR.ED Consignor Addr 3 is Not Blank
 AND PAR.ED_Consignor_Addr_3 <> *BLANK;

 //?If Addr4/City is Entered then Concat State & Zip.
 CASE;

 // IF PAR.ED Consignor Addr 4 is Not Blank
 IF PAR.ED_Consignor_Addr_4 <> *BLANK;

 // PAR.ED Consignor Addr 4 = CONCAT(PAR.ED Consignor Addr 4,PAR.ED Consignor State,CON.1)
 PAR.ED_Consignor_Addr_4 = PAR.ED_Consignor_Addr_4 + PAR.ED_Consignor_State (1);

 // PAR.ED Consignor Addr 4 = CONCAT(PAR.ED Consignor Addr 4,PAR.ED Consignor Postal,CON.1)
 PAR.ED_Consignor_Addr_4 = PAR.ED_Consignor_Addr_4 + PAR.ED_Consignor_Postal (1);

 ENDIF;

 //?CONSIGNOR: Format & Suppress Blank Address Lines.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Check Blank Address Lines to Suppress.
 CASE;

 // IF PAR.ED Consignor Addr 2 is eq blank
 IF PAR.ED_Consignor_Addr_2 = *BLANK;

 //?Shouldn't have too many scenarios with Addr 2 is blank.
 // PAR.ED Consignor Addr 2 = PAR.ED Consignor Addr 3
 PAR.ED_Consignor_Addr_2 = PAR.ED_Consignor_Addr_3;

 // PAR.ED Consignor Addr 3 = CON.*BLANK
 PAR.ED_Consignor_Addr_3 = *BLANK;

 ENDIF;

 //?Check Addr 4/City & Suppress Blank Address Line.
 CASE;

 // IF PAR.ED Consignor Addr 4 is eq blank
 IF PAR.ED_Consignor_Addr_4 = *BLANK;

 //?Check Addr 4/City & Suppress Blank Address Line.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Addr4/City is Entered, Concat State & Zip.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ED Consignor Addr 4 = CONCAT(PAR.ED Consignor Addr 4,PAR.ED Consignor State,CON.1)
 PAR.ED_Consignor_Addr_4 = PAR.ED_Consignor_Addr_4 + PAR.ED_Consignor_State (1);

 // PAR.ED Consignor Addr 4 = CONCAT(PAR.ED Consignor Addr 4,PAR.ED Consignor Postal,CON.1)
 PAR.ED_Consignor_Addr_4 = PAR.ED_Consignor_Addr_4 + PAR.ED_Consignor_Postal (1);

 ENDIF;

 CASE;

 // IF PAR.ED Consignor Addr 2 is Blank
 IF PAR.ED_Consignor_Addr_2 = *BLANK;

 // PAR.ED Consignor Addr 2 = PAR.ED Consignor Addr 4
 PAR.ED_Consignor_Addr_2 = PAR.ED_Consignor_Addr_4;

 // PAR.ED Consignor Addr 4 = CON.*BLANK
 PAR.ED_Consignor_Addr_4 = *BLANK;

 // IF PAR.ED Consignor Addr 3 is Blank
 IF PAR.ED_Consignor_Addr_3 = *BLANK;

 // PAR.ED Consignor Addr 3 = PAR.ED Consignor Addr 4
 PAR.ED_Consignor_Addr_3 = PAR.ED_Consignor_Addr_4;

 // PAR.ED Consignor Addr 4 = CON.*BLANK
 PAR.ED_Consignor_Addr_4 = *BLANK;

 ENDIF;

 ENDIF;

 ENDIF;

 //?CONSIGNEE: Format & Suppress Blank Address Lines.
 CASE;

 // IF PAR.ED Consignee Addr 2 is Not Blank
 IF PAR.ED_Consignee_Addr_2 <> *BLANK;

 // AND PAR.ED Consignee Addr 3 is Not Blank
 AND PAR.ED_Consignee_Addr_3 <> *BLANK;

 //?If Addr4/City is Entered then Concat State & Zip.
 CASE;

 // IF PAR.ED Consignee Addr 4 is Not Blank
 IF PAR.ED_Consignee_Addr_4 <> *BLANK;

 // PAR.ED Consignee Addr 4 = CONCAT(PAR.ED Consignee Addr 4,PAR.ED Consignee State,CON.1)
 PAR.ED_Consignee_Addr_4 = PAR.ED_Consignee_Addr_4 + PAR.ED_Consignee_State (1);

 // PAR.ED Consignee Addr 4 = CONCAT(PAR.ED Consignee Addr 4,PAR.ED Consignee Postal,CON.1)
 PAR.ED_Consignee_Addr_4 = PAR.ED_Consignee_Addr_4 + PAR.ED_Consignee_Postal (1);

 ENDIF;

 //?CONSIGNEE: Format & Suppress Blank Address Lines.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Check Blank Address Lines to Suppress.
 CASE;

 // IF PAR.ED Consignee Addr 2 is eq blank
 IF PAR.ED_Consignee_Addr_2 = *BLANK;

 //?Shouldn't have too many scenarios with Addr 2 is blank.
 // LCL.ED Consignee Addr 3 = PAR.ED Consignee Addr 3
 LCL.ED_Consignee_Addr_3 = PAR.ED_Consignee_Addr_3;

 // PAR.ED Consignee Addr 2 = LCL.ED Consignee Addr 3
 PAR.ED_Consignee_Addr_2 = LCL.ED_Consignee_Addr_3;

 // PAR.ED Consignee Addr 3 = LCL.USR Blank Field
 PAR.ED_Consignee_Addr_3 = LCL.USR_Blank_Field;

 ENDIF;

 //?Check Addr 4/City & Suppress Blank Address Line.
 CASE;

 // IF PAR.ED Consignee Addr 4 is eq blank
 IF PAR.ED_Consignee_Addr_4 = *BLANK;

 //?S17055 DN 04/06/21-Concat Consignee State & Zip if Entered.
 CASE;

 // IF PAR.ED Consignee Postal is Entered
 IF PAR.ED_Consignee_Postal <> *BLANK;

 //?Get State for Domestic Address Else Concat Only Zip Code.
 CASE;

 // IF PAR.ED Consignee State is State code not Blanks
 IF PAR.ED_Consignee_State <> *BLANK;

 // AND PAR.ED Consignee State is Not International
 AND PAR.ED_Consignee_State <> '.';

 // LCL.ED Consignee Addr 4 = PAR.ED Consignee State
 LCL.ED_Consignee_Addr_4 = PAR.ED_Consignee_State;

 // LCL.ED Consignee Addr 4 = CONCAT(LCL.ED Consignee Addr 4,PAR.ED Consignee Postal,CON.1)
 LCL.ED_Consignee_Addr_4 = LCL.ED_Consignee_Addr_4 + PAR.ED_Consignee_Postal (1);

 //?Get State for Domestic Address Else Concat Only Zip Code.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Consignee Addr 4 = PAR.ED Consignee Postal
 LCL.ED_Consignee_Addr_4 = PAR.ED_Consignee_Postal;

 ENDIF;

 //?Concat State/Zip to Last Non Blank Address Line.
 CASE;

 // IF PAR.ED Consignee Addr 3 is Not Blank
 IF PAR.ED_Consignee_Addr_3 <> *BLANK;

 // PAR.ED Consignee Addr 3 = CONCAT(PAR.ED Consignee Addr 3,LCL.ED Consignee Addr 4,CON.1)
 PAR.ED_Consignee_Addr_3 = PAR.ED_Consignee_Addr_3 + LCL.ED_Consignee_Addr_4 (1);

 //?Concat State/Zip to Last Non Blank Address Line.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Must Concat on Address 2 Line.
 // PAR.ED Consignee Addr 2 = CONCAT(PAR.ED Consignee Addr 2,LCL.ED Consignee Addr 4,CON.1)
 PAR.ED_Consignee_Addr_2 = PAR.ED_Consignee_Addr_2 + LCL.ED_Consignee_Addr_4 (1);

 ENDIF;

 ENDIF;

 //?Check Addr 4/City & Suppress Blank Address Line.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Addr4/City is Entered, Concat State & Zip.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Consignee Addr 4 = CONCAT(PAR.ED Consignee Addr 4,PAR.ED Consignee State,CON.1)
 LCL.ED_Consignee_Addr_4 = PAR.ED_Consignee_Addr_4 + PAR.ED_Consignee_State (1);

 // LCL.ED Consignee Addr 4 = CONCAT(LCL.ED Consignee Addr 4,PAR.ED Consignee Postal,CON.1)
 LCL.ED_Consignee_Addr_4 = LCL.ED_Consignee_Addr_4 + PAR.ED_Consignee_Postal (1);

 ENDIF;

 CASE;

 // IF PAR.ED Consignee Addr 2 is Blank
 IF PAR.ED_Consignee_Addr_2 = *BLANK;

 // PAR.ED Consignee Addr 2 = LCL.ED Consignee Addr 4
 PAR.ED_Consignee_Addr_2 = LCL.ED_Consignee_Addr_4;

 // PAR.ED Consignee Addr 4 = LCL.USR Blank Field
 PAR.ED_Consignee_Addr_4 = LCL.USR_Blank_Field;

 // IF PAR.ED Consignee Addr 3 is Blank
 IF PAR.ED_Consignee_Addr_3 = *BLANK;

 // PAR.ED Consignee Addr 3 = LCL.ED Consignee Addr 4
 PAR.ED_Consignee_Addr_3 = LCL.ED_Consignee_Addr_4;

 // PAR.ED Consignee Addr 4 = LCL.USR Blank Field
 PAR.ED_Consignee_Addr_4 = LCL.USR_Blank_Field;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Get Consignor Country Desc.
 CASE;

 // IF PAR.ED Consignor Country Code is Entered
 IF PAR.ED_Consignor_Country_Code <> *BLANK;

 EXECUTE FUNCTION(Rtv Country Desc       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC2188699;
 PARAMETER(PAR.ED_Consignor_Country_Code);
 PARAMETER(PAR.Consignor_Country_Desc_U);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Move Country Desc to Addr 3 or 4 if Blank.
 CASE;

 // IF PAR.ED Consignor Addr 3 is eq blank
 IF PAR.ED_Consignor_Addr_3 = *BLANK;

 // PAR.ED Consignor Addr 3 = PAR.Consignor Country Desc U
 PAR.ED_Consignor_Addr_3 = PAR.Consignor_Country_Desc_U;

 // PAR.Consignor Country Desc U = CON.*BLANK
 PAR.Consignor_Country_Desc_U = *BLANK;

 //?Move Country Desc to Addr 3 or 4 if Blank.
 // IF PAR.ED Consignor Addr 4 is eq blank
 IF PAR.ED_Consignor_Addr_4 = *BLANK;

 // PAR.ED Consignor Addr 4 = PAR.Consignor Country Desc U
 PAR.ED_Consignor_Addr_4 = PAR.Consignor_Country_Desc_U;

 // PAR.Consignor Country Desc U = CON.*BLANK
 PAR.Consignor_Country_Desc_U = *BLANK;

 ENDIF;

 ENDIF;

 //?Get Consignee Country Desc.
 CASE;

 // IF PAR.ED Consignee Country Code is Entered
 IF PAR.ED_Consignee_Country_Code <> *BLANK;

 //?Set 'THE PEOPLE'S REPUBLIC OF CHINA' Else Get Country Desc.
 CASE;

 // IF PAR.ED Consignee Country Code is China
 IF PAR.ED_Consignee_Country_Code = 'CHN';

 // PAR.Consignee Country Desc U = CONCAT(CON.THE PEOPLE'S REPUBLIC OF,CON.CHINA,CON.1)
 PAR.Consignee_Country_Desc_U = 'THE PEOPLE'S REPUBLIC OF' + 'CHINA' (1);

 //?Set 'THE PEOPLE'S REPUBLIC OF CHINA' Else Get Country Desc.
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv Country Desc       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC2188699;
 PARAMETER(PAR.ED_Consignee_Country_Code);
 PARAMETER(PAR.Consignee_Country_Desc_U);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 //?Move Country Desc to Addr 3 or 4 if Blank.
 CASE;

 // IF PAR.ED Consignee Addr 3 is eq blank
 IF PAR.ED_Consignee_Addr_3 = *BLANK;

 // PAR.ED Consignee Addr 3 = PAR.Consignee Country Desc U
 PAR.ED_Consignee_Addr_3 = PAR.Consignee_Country_Desc_U;

 // PAR.Consignee Country Desc U = CON.*BLANK
 PAR.Consignee_Country_Desc_U = *BLANK;

 //?Move Country Desc to Addr 3 or 4 if Blank.
 // IF PAR.ED Consignee Addr 4 is eq blank
 IF PAR.ED_Consignee_Addr_4 = *BLANK;

 // PAR.ED Consignee Addr 4 = PAR.Consignee Country Desc U
 PAR.ED_Consignee_Addr_4 = PAR.Consignee_Country_Desc_U;

 // PAR.Consignee Country Desc U = CON.*BLANK
 PAR.Consignee_Country_Desc_U = *BLANK;

 ENDIF;

 ENDIF;

}


ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT ED Export Document Type totals format

CASE;

IF NEW Order_Number;
// WRK.Month                 USR = CUR.ED Sworn on Date *MONTH
WRK.Month_USR = DATEDTLS(CUR.ED_Sworn_on_Date 'MO' 1111111 'NONE' 'N' 1);

EXECUTE FUNCTION(Load Month Description) TYPE(EXCINTFUN)                        AC1520585;
PARAMETER(WRK.Month_USR);
PARAMETER(CUR.Month_Description_USR);
{
 //?Execute internal function

 // PAR.Month Description     USR = CND.NOT ENTERED
 PAR.Month_Description_USR = *BLANK;

 CASE;

 // IF PAR.Month                 USR is January
 IF PAR.Month_USR = 01;

 // PAR.Month Description     USR = CON.January
 PAR.Month_Description_USR = 'January';

 // IF PAR.Month                 USR is February
 IF PAR.Month_USR = 02;

 // PAR.Month Description     USR = CON.February
 PAR.Month_Description_USR = 'February';

 // IF PAR.Month                 USR is March
 IF PAR.Month_USR = 03;

 // PAR.Month Description     USR = CON.March
 PAR.Month_Description_USR = 'March';

 // IF PAR.Month                 USR is April
 IF PAR.Month_USR = 04;

 // PAR.Month Description     USR = CON.April
 PAR.Month_Description_USR = 'April';

 // IF PAR.Month                 USR is May
 IF PAR.Month_USR = 05;

 // PAR.Month Description     USR = CON.May
 PAR.Month_Description_USR = 'May';

 // IF PAR.Month                 USR is June
 IF PAR.Month_USR = 06;

 // PAR.Month Description     USR = CON.June
 PAR.Month_Description_USR = 'June';

 // IF PAR.Month                 USR is July
 IF PAR.Month_USR = 07;

 // PAR.Month Description     USR = CON.July
 PAR.Month_Description_USR = 'July';

 // IF PAR.Month                 USR is August
 IF PAR.Month_USR = 08;

 // PAR.Month Description     USR = CON.August
 PAR.Month_Description_USR = 'August';

 // IF PAR.Month                 USR is September
 IF PAR.Month_USR = 09;

 // PAR.Month Description     USR = CON.September
 PAR.Month_Description_USR = 'September';

 // IF PAR.Month                 USR is October
 IF PAR.Month_USR = 10;

 // PAR.Month Description     USR = CON.October
 PAR.Month_Description_USR = 'October';

 // IF PAR.Month                 USR is November
 IF PAR.Month_USR = 11;

 // PAR.Month Description     USR = CON.November
 PAR.Month_Description_USR = 'November';

 // IF PAR.Month                 USR is December
 IF PAR.Month_USR = 12;

 // PAR.Month Description     USR = CON.December
 PAR.Month_Description_USR = 'December';

 ENDIF;

}


// CUR.Year Code = CUR.ED Sworn on Date *YEAR
CUR.Year_Code = DATEDTLS(CUR.ED_Sworn_on_Date 'YR' 1111111 'NONE' 'N' 1);

// WRK.Day NBR USR = CUR.ED Sworn on Date *DAY OF MONTH
WRK.Day_NBR_USR = DATEDTLS(CUR.ED_Sworn_on_Date 'DM' 1111111 'NONE' 'N' 1);

// WRK.Day USR = WRK.Day NBR USR
WRK.Day_USR = WRK.Day_NBR_USR;

CASE;

// IF WRK.Day NBR USR is One
IF WRK.Day_NBR_USR = 1;

// OR WRK.Day NBR USR is EQ 21
OR WRK.Day_NBR_USR = 21;

// OR WRK.Day NBR USR is EQ 31
OR WRK.Day_NBR_USR = 31;

// CUR.Text USR 4 = CONCAT(WRK.Day USR,CON.st,CON.*ZERO)
CUR.Text_USR_4 = WRK.Day_USR + 'st' (0);

// IF WRK.Day NBR USR is Two
IF WRK.Day_NBR_USR = 2;

// OR WRK.Day NBR USR is EQ 22
OR WRK.Day_NBR_USR = 22;

// CUR.Text USR 4 = CONCAT(WRK.Day USR,CON.nd,CON.*ZERO)
CUR.Text_USR_4 = WRK.Day_USR + 'nd' (0);

// IF WRK.Day NBR USR is Three
IF WRK.Day_NBR_USR = 3;

// OR WRK.Day NBR USR is EQ 23
OR WRK.Day_NBR_USR = 23;

// CUR.Text USR 4 = CONCAT(WRK.Day USR,CON.rd,CON.*ZERO)
CUR.Text_USR_4 = WRK.Day_USR + 'rd' (0);

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Text USR 4 = CONCAT(WRK.Day USR,CON.th,CON.*ZERO)
CUR.Text_USR_4 = WRK.Day_USR + 'th' (0);

ENDIF;

// Print Order Number totals format
PRINT Order Number totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

