// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDMQEFR
// ?Date: 14.08.2025 Time: 03:35:14
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record (existing record)

// RCD.USR Output Only Status = CND.yes
RCD.USR_Output_Only_Status = 'Y';

//?USER: Initialize subfile record (new record)

CASE;

// IF CTL.Commodity Market Code NE WRK.BLANK
IF CTL.Commodity_Market_Code <> WRK.BLANK;

// AND CTL.Commodity Price Group NE WRK.BLANK
AND CTL.Commodity_Price_Group <> WRK.BLANK;

// RCD.USR Output Only Status = CND.yes
RCD.USR_Output_Only_Status = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.USR Output Only Status = CND.no
RCD.USR_Output_Only_Status = 'N';

ENDIF;

//?CALC: Subfile control function fields

//?Reload subfile if market code or price group has changed
CASE;

// IF CTL.Commodity Market Code NE CTL.Commodity Market Code USR
IF CTL.Commodity_Market_Code <> CTL.Commodity_Market_Code_USR;

// OR CTL.Commodity Price Group NE CTL.@Commodity Price Group
OR CTL.Commodity_Price_Group <> CTL.@Commodity_Price_Group;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// CTL.Commodity Market Code = CTL.Commodity Market Code USR
CTL.Commodity_Market_Code = CTL.Commodity_Market_Code_USR;

// CTL.Commodity Price Group = CTL.@Commodity Price Group
CTL.Commodity_Price_Group = CTL.@Commodity_Price_Group;

//?USER: Validate subfile record fields

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

ENDIF;

CASE;

// IF RCD.USR Output Only Status is yes
IF RCD.USR_Output_Only_Status = 'Y';

// AND PGM.*Program mode is *ADD
AND PGM.*Program_mode = 'ADD';

// RCD.Commodity Market Code = CTL.Commodity Market Code
RCD.Commodity_Market_Code = CTL.Commodity_Market_Code;

// RCD.Commodity Price Group = CTL.Commodity Price Group
RCD.Commodity_Price_Group = CTL.Commodity_Price_Group;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT OM Commod Mrkt/Prc CR) TYPE(CRTOBJ) FILE(OMF0CPP)          AC1185925;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG OM Commod Mrkt/Prc CH) TYPE(CHGOBJ) FILE(OMF0CPP)          AC1185926;
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


