      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP2068 - UC: Move Edited CullSales into HPS
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     08/18/09
      *
      * FUNCTION:    This function reads the Editing File of Uploaded Cull Sale
      *              Movement Data and writes the records to the HPS files.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 02/01/17  Brad Baden    (E7986)
      *           Added logic for new business office to read a specific
      *           file, and removed data area DAAPER processing which is
      *           replaced with file HSP0071.
      *
      * 04/05/17  Brad Baden    (E9942)
      *           Fix field name that chains to HSP018 so that the Iowa
      *           Business Office is populated in file HSP084.
      ****************************************************************
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *  Farm Site
      *
      *
     FHsp0071   if   e           k disk
      *  Company Control
      *
      *
     Fhsp058    uf a e           k disk
      *  Movement event
      *
      *
     Fhsp084    uf a e           k disk
      *  Sales movement header
      *
      *
     FHsp085    uf a e           k disk
      *  Sales movement detail
      *
      *
     Fhsp2067   uf   e           k disk
      *   Editing file of uploaded sales movements - Guymon
      *
     Fhsp2069   uf   e           k disk
      *   Editing file of uploaded sales movements - Iowa
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control and save fields
      *
     D first           s              1    inz('Y')
     D procfl          s              1    inz('Y')
     D svmvsn          s                   like(e1mvsn)
      *
      *
      * Workfields
      *
     D wkupdt          s                   like(meupdt)
     D wkuptm          s                   like(meuptm)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Parms
      *
     D xxnodata        s              1
     D xxperclo        s              1
     D xxperrun        s              1
     D xxediterr       s              1
     D p1bobo          s              5
      *
     D eeditfl         s                   like(e1editfl)
     D emvsn           s                   like(e1mvsn)
     D ecvno           s                   like(e1cvno)
     D eticd           s                   like(e1ticd)
     D eltcd           s                   like(e1ltcd)
     D emdy            s                   like(e1mdy)
     D escdt           s                   like(e1scdt)
     D efscd           s                   like(e1fscd)
     D eblcd           s                   like(e1blcd)
     D ermcd           s                   like(e1rmcd)
     D ehgsn           s                   like(e1hgsn)
     D ehd             s                   like(e1hd)
     D esplit          s                   like(e1split)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      ****************************************************************
      * Data areas
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DAAPER'
      *  NOTE: The use of this data area commented out and replaced
      *        with checking file HSP0071 for the period and dates.
      *        E7986 Brad Baden
      *---------------------------------------------------------------
     D
     D*daaper          ds                  dtaara(daaper)
     D* daccyy                 1      4  0
     D* daper                  5      6  0
     D* dabpdt                 7     14  0
     D* daepdt                15     22  0
     D* dapgfl                23     23
     D* dappfl                24     24
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * We want to make "Period" checks first. And, only continue if there are no
      * errors. So, this is an all-or-nothing interface.
      *
     C                   exsr      $first
      *
      *
      * If there were no errors, read/process all the records in the Editing File.
      *
     C                   if        procfl = yes                                 If process

     C     *start        setll     hsp2067
     C     *start        setll     hsp2069

     C                   dou       *in90 = *on                                  Do loop
      *
     C                   if        p1bobo = 'OKLIV'
     C                   read      hsp2067                                90
     C                   else
     C                   read      hsp2069                                90
     C                   endif                                                  if p1bobo = 'OKLIV'

     C                   if        *in90 = *off                                 If not EOF
     C                   exsr      $loadflds
      *
      * If this line represents a new Movement, write a Sales Header
      *
     C                   if        emvsn <> svmvsn
     C                   exsr      $crtsh
     C                   z-add     emvsn         svmvsn
     C                   endif
      *
      * Write Sales Detial
      * Write Movement Event
     C                   exsr      $crtsd
     C                   exsr      $crtme
      *
      * Delete the "editing" record.
      *
     C                   if        p1bobo = 'OKLIV'
     C                   delete    e1rec
     C                   else
     C                   delete    e2rec
     C                   endif                                                  p1bobo = 'OKLIV'
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
     C                   endif                                                  If process
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Create a Sales Header record
      *----------------------------------------------------------------
      *
     C     $crtsh        begsr
      *
     C                   move      'CULLS'       shstcd
     C                   move      'SC'          shmscd
     C                   z-add     ecvno         shcvno
     C                   z-add     emvsn         shmvsn
     C                   move      eltcd         shltcd
     C                   move      eticd         shticd
     C                   z-add     escdt         shscdt
     C                   z-add     efscd         shfscd
      *
      * Retrieve Farm Site Business Office
      *
      *  Fix field name from e1fscd to efscd
     C     efscd         chain     hsp018                             92
     C                   if        *in92 = *off
     C                   move      fsfsbo        shfsbo
     C                   endif
      *
     C                   z-add     wkupdt        shupdt
     C                   z-add     wkuptm        shuptm
     C                   move      sdpgm         shpgm
      *
     C                   write     shrec
     C                   clear                   shrec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Create Sales Detail Records
      *----------------------------------------------------------------
      *
     C     $crtsd        begsr
      *
     C                   z-add     emvsn         sgmvsn
     C                   z-add     ehgsn         sghgsn
     C                   z-add     ehd           sgschd
      *
     C                   write     sgrec
     C                   clear                   sgrec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Create a Movement Event Record for the Group
      *----------------------------------------------------------------
      *
     C     $crtme        begsr
      *
      * Set up TimeStamp
      *
     C                   z-add     wkupdt        meupdt
     C                   z-add     wkuptm        meuptm
     C                   move      sdusr         meuscd
     C                   move      sdpgm         mepgm
      *
     C                   move      'S'           memtcd
     C                   move      'O'           meodfl
      *
     C                   z-add     emvsn         memvsn
     C                   z-add     ecvno         mecvno
     C                   z-add     escdt         memedt
     C                   z-add     ehgsn         mehgsn
     C                   z-add     0             mehsn
     C                   z-add     0             melnno
      *
     C                   write     merec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Make 1-time checks before processing
      *----------------------------------------------------------------
      *
     C     $first        begsr
      *
     C*                  in        daaper
     C                   if        p1bobo = 'OKLIV'
     C                   eval      cccocd = '350'
     C                   else
     C                   eval      cccocd = '340'
     C                   endif                                                  if p1bobo = 'OKLIV'

     C     cccocd        chain     hsp0071
     C                   if        not %found(hsp0071)
     C                   eval      procfl = no
     C                   leaveSR                                                Leave subroutine
     C                   endif                                                  if not %found(hsp007

     C     *start        setll     hsp2067
     C     *start        setll     hsp2069
      *
     C                   dou       *in91 = *on                                  Do loop
     C                   if        p1bobo = 'OKLIV'
     C                   read      hsp2067                                91
     C                   else
     C                   read      hsp2069                                91
     C                   endif                                                  if p1bobo = 'OKLIV'

     C                   if        *in91 = *off                                 If not EOF
     C                   exsr      $loadflds
      *
     C                   move      no            first
      *
     C                   if        eeditfl = yes
     C                   else
     C                   move      yes           xxediterr
     C                   endif
      *
      * Scheduled Ship Date cannot be in a Closed Period.
      *
     C                   if        escdt < ccbpdt
     C                   move      yes           xxperclo
     C                   endif
      *
      * Scheduled Ship Date cannot be in a Period that is being Closed.
      *
     C                   if        escdt >= ccbpdt and
     C                             escdt <= ccepdt and
     C                             ccppfl <> *blank
     C                   move      yes           xxperrun
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * If you did not have data, set the 'No Data' error flag.
      *
     C                   if        first = yes
     C                   move      yes           xxnodata
     C                   endif
      *
      * Were there any errors?
      *
     C                   if        xxnodata = yes or xxperclo = yes or
     C                             xxperrun = yes or xxediterr = yes
     C                   move      no            procfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Load editing fields
      *----------------------------------------------------------------
      *
     C     $loadflds     begsr
      *
      *
     C                   if        p1bobo = 'OKLIV'
     C                   eval      eeditfl = e1editfl
     C                   eval      emvsn   = e1mvsn
     C                   eval      ecvno   = e1cvno
     C                   eval      eticd   = e1ticd
     C                   eval      eltcd   = e1ltcd
     C                   eval      emdy    = e1mdy
     C                   eval      escdt   = e1scdt
     C                   eval      efscd   = e1fscd
     C                   eval      eblcd   = e1blcd
     C                   eval      ermcd   = e1rmcd
     C                   eval      ehgsn   = e1hgsn
     C                   eval      ehd     = e1hd
     C                   eval      esplit  = e1split
     C                   else
      *
     C                   eval      eeditfl = e2editfl
     C                   eval      emvsn   = e2mvsn
     C                   eval      ecvno   = e2cvno
     C                   eval      eticd   = e2ticd
     C                   eval      eltcd   = e2ltcd
     C                   eval      emdy    = e2mdy
     C                   eval      escdt   = e2scdt
     C                   eval      efscd   = e2fscd
     C                   eval      eblcd   = e2blcd
     C                   eval      ermcd   = e2rmcd
     C                   eval      ehgsn   = e2hgsn
     C                   eval      ehd     = e2hd
     C                   eval      esplit  = e2split
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parms
      *
     C     *entry        plist
     C                   parm                    xxnodata
     C                   parm                    xxperclo
     C                   parm                    xxperrun
     C                   parm                    xxediterr
     C                   parm                    p1bobo
      *
      * Set up the date/time/user for time-stamping the Movement Event record.
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkupdt
     C                   time                    wkuptm
      *
     C                   endsr
      /EJECT
