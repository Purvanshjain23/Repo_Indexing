      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Margin Management
      * PROGRAM:     SD217 - Signal Demand: Planned Availability
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     03/05/08
      *
      * FUNCTION: This program builds the Planned Availability file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      * 05/07/08  LeAnne Ramsey
      *           I was picking up records from PDI8CPL9-Prod Item Schedule
      *           that had Item=0 and Warehouse=blank. Per Purva D., I should
      *           exclude these records since she does not know when the
      *           Synon programs that create these "blank" records can be fixed.
      *           Also, I checked out SDP217 and changed "file text"--no file
      *           changes.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel1  if   e           k disk
      *    Item default
      *
      *
     Fpkaocpl1  if   e           k disk
      *   Kill/cut plan
      *
      *
     Fpdjccpl4  if   e           k disk
      *   PS Prod schedule        (LF selects only Production Type = S)
      *
      *
     Fpdi8cpl9  if   e           k disk
      *   PS Prod item schedule   (LF selects only Active, Raw Material records)
      *
      *
     Fsdp217    o    e           k disk
      *    Signal Demand: Planned availability
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Workfields
      *
     D wkcono          s                   like(paaic3)
     D wkpulb          s             15  6
     D wkrate          s             15  6
      *
      *
      * Fields for date manipulation
      *
     D wksysdt7        s              7  0
     D wkisodate       s               d   datfmt(*iso)
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Process Kill/Cut Plan records for system date forward.
      * (Since we don't have a LF keyed by date, we will process hardcoded 360
      * records followed by 960 records.
      *
      * Seaboard
     C                   z-add     360           wkcono
     C     key01         setll     pkaocpl1
     C                   dou       *in90 = *on                                  Do Seaboard
     C     wkcono        reade     pkaocpl1                               90
     C                   if        *in90 = *off
     C                   exsr      $schedule
     C                   endif
     C                   enddo                                                  Do Seaboard
      *
      * Triumph
     C                   z-add     960           wkcono
     C     key01         setll     pkaocpl1
     C                   dou       *in90 = *on                                  Do Triumph
     C     wkcono        reade     pkaocpl1                               90
     C                   if        *in90 = *off
     C                   exsr      $schedule
     C                   endif
     C                   enddo                                                  Do Triumph
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Scheduled Data
      *---------------------------------------------------------------
      *
     C     $schedule     begsr
      *
      * Flip Synon Kill/Cut Date (from the Kill/Cut Plan file) to CCYYMMDD.
      *
     C     *cymd         test(d)                 aoaddt                 92
     C                   if        *in92 = *off
     C     *cymd         move      aoaddt        wkisodate
     C     *iso          move      wkisodate     paaddt
     C                   else
     C                   z-add     0             paaddt
     C                   endif
      *
      * Planned Cut Head
     C                   z-add     aox3nb        pax3nb
      *
      * Cut Average Cold Weight
     C                   z-add     aox2nb        pax2nb
      *
      * Calc "Total Pounds That Will Be Produced Today" for later calcs:
      *      Cut Average Cold Weight * Planned Cut Head
      *
     C     pax2nb        mult(h)   pax3nb        wkpulb
      *
      *
      * Find a Production Date from the Prod Schedule file using
      * Key:  Company/Cut Avg Cold Wgt/Kill Date from Kill/Cut Plan file
      * Note: LF selects only records where Production Type = S
      *
     C     key02         setgt     pdjccpl4
     C     key03         readpe    pdjccpl4                               92
     C                   if        *in92 = *off                                 If date found
      *
      * Process all Prod Item Schedule records using
      * Key:  Company/Production Type/Production Date from Prod Schedule file.
      * Note: LF selects only Active, Raw Material records
      *       Omit records where Item is zero (this is a Synon bug)
      *
     C     key04         setll     pdi8cpl9
     C                   dou       *in91 = *on                                  Do schedule
     C     key04         reade     pdi8cpl9                               91
     C                   if        *in91 = *off and i8hgcd <> 0                 If not EOF
     C                   z-add     i8aic3        paaic3
     C                   z-add     i8hgcd        pahgcd
     C                   move      i8ajcd        paajcd
     C                   z-add     i8djpc        padjpc
      *
      * Planned Pounds:
      *   Total Pounds That Will Be Produced Today * % of Carcass Yield
      *
     C                   eval      wkrate = padjpc / 100
     C                   eval(h)   papllb = wkpulb * wkrate
      *
      * Planned Pieces:
      *   Pieces per Head * Planned Cut Head
      *
     C     i8hgcd        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If item hit
     C                   eval(h)   paplps = bypphe * pax3nb
     C                   else
     C                   z-add     0             paplps
     C                   endif                                                  If item hit
      *
      * Average Piece Weight:
      *   Planned Pounds / Planned Pieces
      *
     C                   if        paplps <> 0
     C                   eval(h)   paavpslb = papllb / paplps
     C                   else
     C                   z-add     0             paavpslb
     C                   endif
      *
     C                   write     parec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do schedule
      *
     C                   endif                                                  If date found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkcono
     C                   kfld                    wksysdt7
      *
     C     key02         klist
     C                   kfld                    wkcono
     C                   kfld                    aox2nb
     C                   kfld                    aoaddt
      *
     C     key03         klist
     C                   kfld                    wkcono
     C                   kfld                    aox2nb
      *
     C     key04         klist
     C                   kfld                    wkcono
     C                   kfld                    jcv5st
     C                   kfld                    jceldt
      *
      *
      * Put system date into Synon format of CYYMMDD.
      *
     C     *mdy          movel     udate         wkisodate
     C     *cymd         movel     wkisodate     wksysdt7
      *
     C                   endsr
      /EJECT
