// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNW7PFR
// ?Date: 14.08.2025 Time: 12:06:04
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Display Flag = CND.Yes
WRK.Display_Flag = 'Y';

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?** set up question mark character for container not found
// WRK.Text 1 Length USR = CON.?
WRK.Text_1_Length_USR = '?';

//?USER: Record selection processing

// WRK.Display Flag = CND.Yes
WRK.Display_Flag = 'Y';

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?Select Backhaul Carrier Code
CASE;

// IF PAR.OHE Backhaul Carrier Code NE WRK.Blank for 4           USR
IF PAR.OHE_Backhaul_Carrier_Code <> WRK.Blank_for_4_USR;

// AND PAR.OHE Backhaul Carrier Code NE DB1.OHE Backhaul Carrier Code
AND PAR.OHE_Backhaul_Carrier_Code <> DB1.OHE_Backhaul_Carrier_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select Backhaul Company
CASE;

// IF PAR.OHE Backhaul Return to Co is not equal to zero
IF PAR.OHE_Backhaul_Return_to_Co <> *ZERO;

// AND PAR.OHE Backhaul Return to Co NE DB1.OHE Backhaul Return to Co
AND PAR.OHE_Backhaul_Return_to_Co <> DB1.OHE_Backhaul_Return_to_Co;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select requested dates
CASE;

// IF PAR.Usr Date 1 is Entered
IF PAR.Usr_Date_1 <> *ZERO;

// AND PAR.Usr Date 2 is Entered
AND PAR.Usr_Date_2 <> *ZERO;

//?Select within requested date range if both dates are entered
CASE;

// IF DB1.OHE Backhaul ETA RtrnDate LT PAR.Usr Date 1
IF DB1.OHE_Backhaul_ETA_RtrnDate < PAR.Usr_Date_1;

// OR DB1.OHE Backhaul ETA RtrnDate GT PAR.Usr Date 2
OR DB1.OHE_Backhaul_ETA_RtrnDate > PAR.Usr_Date_2;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select requested dates
// IF PAR.Usr Date 1 is Entered
IF PAR.Usr_Date_1 <> *ZERO;

//?Select dates greater than from date if thru date is zeros
CASE;

// IF DB1.OHE Backhaul ETA RtrnDate LT PAR.Usr Date 1
IF DB1.OHE_Backhaul_ETA_RtrnDate < PAR.Usr_Date_1;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select requested dates
// IF PAR.Usr Date 2 is Entered
IF PAR.Usr_Date_2 <> *ZERO;

//?Select dates before thru date if from date is zeros
CASE;

// IF DB1.OHE Backhaul ETA RtrnDate GT PAR.Usr Date 2
IF DB1.OHE_Backhaul_ETA_RtrnDate > PAR.Usr_Date_2;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Select Shipping Line
CASE;

// IF PAR.Shipping Line is entered
IF PAR.Shipping_Line <> *BLANK;

// AND DB1.Shipping Line NE PAR.Shipping Line
AND DB1.Shipping_Line <> PAR.Shipping_Line;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Don't display comment line if comment is blanks
CASE;

// IF DB1.OHE Comment 1 is Blank
IF DB1.OHE_Comment_1 = *BLANK;

// WRK.Display Flag = CND.No
WRK.Display_Flag = 'N';

ENDIF;

//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

//?Carrier name
CASE;

// IF PAR.OHE Backhaul Carrier Code is Blank
IF PAR.OHE_Backhaul_Carrier_Code = *BLANK;

// TOP.Carrier Name 50A = CON.*ALL
TOP_Carrier_Name_50A = *ALL;

//?Carrier name
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(PAR.OHE_Backhaul_Carrier_Code);
PARAMETER(TOP_Carrier_Name_50A);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Company name
CASE;

// IF PAR.OHE Backhaul Return to Co is equal to zero
IF PAR.OHE_Backhaul_Return_to_Co = *ZERO;

// TOP.Company Name = CON.*ALL
TOP_Company_Name = *ALL;

//?Company name
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(PAR.OHE_Backhaul_Return_to_Co);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Shipping Line name
CASE;

// IF PAR.Shipping Line is not entered
IF PAR.Shipping_Line = *BLANK;

// TOP.USR Carrier Name = CON.*ALL
TOP_USR_Carrier_Name = *ALL;

//?Shipping Line name
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Name, Address, Fax RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1448662;
PARAMETER(PAR.Shipping_Line);
PARAMETER(TOP_USR_Carrier_Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.City);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Fax_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// TOP.From Date             USR = PAR.Usr Date 1
TOP_From_Date_USR = PAR.Usr_Date_1;

// TOP.Thru Date             USR = PAR.Usr Date 2
TOP_Thru_Date_USR = PAR.Usr_Date_2;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT OHE Backhaul Carrier Code header format

// SUPPRESSED PRINT OHE Backhaul Container# header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

//?** Rtv 1st 4 char of Carrier Name to get the SCAC
EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(CUR.OHE_Backhaul_Carrier_Code);
PARAMETER(CUR.USR_Carrier_Name_4);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?set off first time flag
CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT OHE Backhaul Container# totals format

// SUPPRESSED PRINT OHE Backhaul Carrier Code totals format

// SUPPRESSED PRINT Company Number totals format

