// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNHSXFR
// ?Date: 14.08.2025 Time: 03:45:12
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Bld Man/Frm Prc wf RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1932507;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Thru_Date_7_0_ATR);
PARAMETER(PAR.Customer_Number_NBR);
PARAMETER(PAR.Item_Code);
{
 //?USER: Initialize routine

 //?** Calculation Documentation:
 DO;

 //?** This is the equation to calc the Formula Price per Lb:
 //?** Accumulate accruals for this order/item (if aff inv prc=Y)
 //?**   (((Base Market Price/100) * Weight Billed) +
 //?**   (Absorbed Freight Rate * (Weight Billed / 100)) +
 //?**   Accruals) / Weight Billed)
 //?** This is the equation for the Published price:
 //?**   Base Market Price / Unit Weight
 ENDDO;

 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?** End when past date range end date
 CASE;

 // IF DB1.Actual Shipped Date GT PAR.Thru Date, 7.0 ATR
 IF DB1.Actual_Shipped_Date > PAR.Thru_Date_7_0_ATR;

 QUIT;

 ENDIF;

 //?** Select by company if requested
 CASE;

 // IF PAR.Company Number is greater than zero
 IF PAR.Company_Number > *ZERO;

 // AND DB1.Company Number NE PAR.Company Number
 AND DB1.Company_Number <> PAR.Company_Number;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?** Select by Customer if requested
 CASE;

 // IF PAR.Customer Number       NBR is not equal 0
 IF PAR.Customer_Number_NBR <> *ZERO;

 // AND DB1.Ship To Customer NE PAR.Customer Number       NBR
 AND DB1.Ship_To_Customer <> PAR.Customer_Number_NBR;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?** Select by Item if requested
 CASE;

 // IF PAR.Item Code is Entered
 IF PAR.Item_Code <> *ZERO;

 // AND DB1.Shipped Item Code NE PAR.Item Code
 AND DB1.Shipped_Item_Code <> PAR.Item_Code;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?** Only process Manual price method
 CASE;

 // IF DB1.Price Method Code is Manual
 IF DB1.Price_Method_Code = 'MAN';

 //?** Only process Manual price method
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?** Select Orders only
 CASE;

 // IF DB1.Order Type - Sales is Regular Order
 IF DB1.Order_Type_Sales = 'OR';

 //?** Select Orders only
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?** If weight billed > 0, calc manual price
 CASE;

 // IF DB1.Weight Billed is Not equal zero
 IF DB1.Weight_Billed <> *ZERO;

 // LCL.USR Amount 2   11.2 = DB1.Extended Amount / DB1.Weight Billed *Rounded
 LCL.USR_Amount_2_11_2 = DB1.Extended_Amount / DB1.Weight_Billed 'H';

 //?** If weight billed > 0, calc manual price
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.USR Amount 2   11.2 = CON.*ZERO
 LCL.USR_Amount_2_11_2 = *ZERO;

 ENDIF;

 //?** Get the Commod Mkt Basis and Group from the Company Item
 EXECUTE FUNCTION(RTV Price Method Dflt RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1932508;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Shipped_Item_Code);
 PARAMETER(LCL.UOM_Primary);
 PARAMETER(LCL.Conversion_Factor_1);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(LCL.Default_Commod_Mark_basis);
 PARAMETER(LCL.Commodity_Price_Group);
 PARAMETER(LCL.Price_Method_Default);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?** Use Commod Mkt Basis/Group to get the Base Mkt Price from CMP file
 EXECUTE FUNCTION(RTV Market Price       RT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC1199313;
 PARAMETER(LCL.Default_Commod_Mark_basis);
 PARAMETER(LCL.Commodity_Price_Group);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(LCL.Commodity_Market_Price);
 PARAMETER(NLL.USR_Date_Priced);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Commodity Market Price = DB1.Commodity Market Price
  PAR.Commodity_Market_Price = DB1.Commodity_Market_Price;

  // PAR.USR Date Priced = DB1.Market Price Date
  PAR.USR_Date_Priced = DB1.Market_Price_Date;

  QUIT;

 }

 //?** Calculation Documentation:
 DO;

 //?** This is the equation to calc the Formula Price per Lb:
 //?** Accumulate accruals for this order/item (if aff inv prc=Y)
 //?**   (((Base Market Price/100) * Weight Billed) +
 //?**   (Absorbed Freight Rate * (Weight Billed / 100)) +
 //?**   Accruals) / Weight Billed)
 //?** This is the equation for the Published price:
 //?**   Base Market Price / Unit Weight
 ENDDO;

 //?** Calc Formula or Published price per lb
 CASE;

 // IF LCL.Price Method Default is Published
 IF LCL.Price_Method_Default = 'PUB';

 //?** Calculate Published price
 //?** If unit weight > 0, calc the per lb price
 CASE;

 // IF LCL.Unit Weight is Not equal zero
 IF LCL.Unit_Weight <> *ZERO;

 // LCL.USR Amount 3   11.2 = LCL.Commodity Market Price / LCL.Unit Weight *Rounded
 LCL.USR_Amount_3_11_2 = LCL.Commodity_Market_Price / LCL.Unit_Weight 'H';

 //?** If unit weight > 0, calc the per lb price
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.USR Amount 3   11.2 = CON.*ZERO
 LCL.USR_Amount_3_11_2 = *ZERO;

 ENDIF;

 //?** Calc the difference, if there is one
 // LCL.USR Amount 4   11.2 = LCL.USR Amount 2   11.2 - LCL.USR Amount 3   11.2
 LCL.USR_Amount_4_11_2 = LCL.USR_Amount_2_11_2 - LCL.USR_Amount_3_11_2;

 //?** Calc Formula or Published price per lb
 // IF LCL.Price Method Default is Formula
 IF LCL.Price_Method_Default = 'FRM';

 // LCL.USR 3 Numeric         USR = CON.100
 LCL.USR_3_Numeric_USR = 100;

 EXECUTE FUNCTION(RTV Accrl,AffInvPrc=Y  RT) TYPE(RTVOBJ) FILE(PDICCPP)          AC1932524;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Shipped_Item_Code);
 PARAMETER(LCL.USR_Amount_5_11_2);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.USR Amount 5   11.2 = PAR.USR Amount 5   11.2 + DB1.Item Accrual Amt
  PAR.USR_Amount_5_11_2 = PAR.USR_Amount_5_11_2 + DB1.Item_Accrual_Amt;

 }

 //?** Calculate total base market price
 CASE;

 // IF DB1.Weight Billed is Not equal zero
 IF DB1.Weight_Billed <> *ZERO;

 // Calc Formula Price
 LCL.Total_Base_Cost = ( LCL.Commodity_Market_Price / LCL.USR_3_Numeric_USR 'H' )
 * DB1.Weight_Billed;

 //?** Calculate total base market price
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Total Base Cost = CON.*ZERO
 LCL.Total_Base_Cost = *ZERO;

 ENDIF;

 //?** Calculate total absorbed freight
 // Calc Actual Freight
 LCL.Bal_Act_Freight_Amt_USR = DB1.Absorbed_Freight_Rate_CWT * ( DB1.Weight_Billed
 / LCL.USR_3_Numeric_USR 'H' );

 //?** Calculate Formula Price per lb
 //?** If weight billed > 0, calc formula price
 CASE;

 // IF DB1.Weight Billed is Not equal zero
 IF DB1.Weight_Billed <> *ZERO;

 CASE;

 // IF DB1.U/M - Base Price is Hundred Weight
 IF DB1.U_M_Base_Price = 'CW';

 // (Base+Frt+Acrls)/WB
 LCL.USR_Amount_3_11_2 = ( ( LCL.Total_Base_Cost + LCL.Bal_Act_Freight_Amt_USR )
 + LCL.USR_Amount_5_11_2 ) / DB1.Weight_Billed 'H';

 // IF DB1.U/M - Base Price is Cases
 IF DB1.U_M_Base_Price = 'CS';

 // (Base*Qty)+Acrls+AFrt)/WB
 LCL.USR_Amount_3_11_2 = ( ( ( LCL.Commodity_Market_Price * DB1.Quantity_Billed 'H' )
 + LCL.USR_Amount_5_11_2 ) + LCL.Bal_Act_Freight_Amt_USR ) / DB1.Weight_Billed 'H';

 ENDIF;

 //?** If weight billed > 0, calc formula price
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.USR Amount 3   11.2 = CON.*ZERO
 LCL.USR_Amount_3_11_2 = *ZERO;

 ENDIF;

 //?** Calc the difference, if there is one
 // LCL.USR Amount 4   11.2 = LCL.USR Amount 2   11.2 - LCL.USR Amount 3   11.2
 LCL.USR_Amount_4_11_2 = LCL.USR_Amount_2_11_2 - LCL.USR_Amount_3_11_2;

 //?** Calc Formula or Published price per lb
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?** Write the Work File record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CRT WF Man/Frm Price Dnld) TYPE(CRTOBJ) FILE(PNFGCPP)          AC1932504;
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Shipped_Item_Code);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Price_Method_Code);
 PARAMETER(LCL.Unit_Weight);
 PARAMETER(DB1.Quantity_Billed);
 PARAMETER(DB1.Weight_Billed);
 PARAMETER(DB1.Extended_Amount);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(LCL.Bal_Act_Freight_Amt_USR);
 PARAMETER(LCL.USR_Amount_5_11_2);
 PARAMETER(DB1.U_M_Base_Price);
 PARAMETER(DB1.Unit_Price_Ordered_U_M);
 PARAMETER(LCL.Commodity_Market_Price);
 PARAMETER(LCL.USR_Amount_2_11_2);
 PARAMETER(LCL.Price_Method_Default);
 PARAMETER(LCL.USR_Amount_3_11_2);
 PARAMETER(LCL.USR_Amount_4_11_2);
 ENDIF;

 ENDIF;

}


