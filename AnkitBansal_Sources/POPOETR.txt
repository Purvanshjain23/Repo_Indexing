// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POPOETR
// ?Date: 14.08.2025 Time: 03:39:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');

// LCL.Output Only 1 USR = CND.no
LCL.Output_Only_1_USR = 'N';

// PAR.USR Display 1 = CND.Yes
PAR.USR_Display_1 = 'Y';

//?USER: Initialize screen for new transaction

// CTL.Entered by User = JOB.*USER
CTL.Entered_by_User = JOB.*USER;

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(CTL.Date_Entered);
PARAMETER(CTL.Time_Entered);

SET CURSOR;

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CTL.Ship_To_Name_DRV);
PARAMETER(CTL.Ship_To_Customer);

// LCL.Output Only 1 USR = CND.yes
LCL.Output_Only_1_USR = 'Y';

//?** Make fields output if there are orders   FP1098 LJB
//?USER: Validate header key fields

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Ship To Customer
IF PGM.*Cursor_field = CTL.Ship_To_Customer;

// Call program SEL CPH Customer      SL.
CALL PROGRAM(SEL CPH Customer      SL) ('PMVVSRR');
PARAMETER(CTL.Ship_To_Customer);

ENDIF;

ENDIF;

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CTL.Ship_To_Name_DRV);
PARAMETER(CTL.Ship_To_Customer);

CASE;

// IF CTL.Ship To Name          DRV is blanks
IF CTL.Ship_To_Name_DRV = *BLANK;

// Send error message - 'Customer Master not found.'
ERROR(USR0170);
MSGPARM(CTL.Ship_To_Customer);

ENDIF;

//?USER: Initialize subfile record (old record)

EXECUTE FUNCTION(RTV Cust Price Detail  RT) TYPE(RTVOBJ) FILE(POC7REP)          AC1905225;
PARAMETER(DB2.Ship_To_Customer);
PARAMETER(DB2.Price_Code);
PARAMETER(DB2.Item_Code);
PARAMETER(RCD.USR_Weight_9_2);
PARAMETER(RCD.Price_1_USR);
PARAMETER(RCD.CPD_Weight_Unused_1);
PARAMETER(RCD.CPD_Price_Unused_1);
PARAMETER(RCD.Contract_Unit_Type);
PARAMETER(RCD.CPD_Unused_Sts_2);
PARAMETER(RCD.CPD_Unused_Sts_3);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(RCD.Record_Status);

//?Commented out the following added code, we do not want to always
//?default LB. We want to use the U/M Pricing.  SAZ 2/5/08
//?DLY029 if not Cases, default "LB" 08/30/07 RMC per PKD
EXECUTE FUNCTION(Rtv Item Pricing UOM  RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1825735;
PARAMETER(RCD.Item_Code);
PARAMETER(NLL.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(RCD.UOM_Pricing);

// RCD.USR Display 1 = CND.Yes
RCD.USR_Display_1 = 'Y';

// RCD.USR Display 2 = CND.Yes
RCD.USR_Display_2 = 'Y';

// RCD.USR Display 3 = CND.Yes
RCD.USR_Display_3 = 'Y';

//?Do not allow change to Units and Price if at least one Order
//?is invoiced for the Item.
EXECUTE FUNCTION(RTV Chk JCO Ld Invoicd RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1905630;
PARAMETER(DB2.Ship_To_Customer);
PARAMETER(DB2.Price_Code);
PARAMETER(DB2.Item_Code);
PARAMETER(WRK.USR_Status_Y_N);
PARAMETER(RCD.Record_Found_USR);

//?OUTPUT: Pricing Method fields & SFLSEL if Order Detail records found
CASE;

// IF RCD.Record Found USR is Record Found
IF RCD.Record_Found_USR = 'Y';

//?OUTPUT: Pricing Method Fields
// RCD.USR Display 2 = CND.No
RCD.USR_Display_2 = 'N';

//?OUTPUT: Subfile Select
// RCD.USR Display 3 = CND.No
RCD.USR_Display_3 = 'N';

ENDIF;

//?OUTPUT: Make Weight and Price fields output if Order is invoiced
CASE;

// IF WRK.USR Status (Y/N) is no
IF WRK.USR_Status_Y_N = 'N';

//?RMC 10/26/12 allow chg to max wt so they can reduce it
//?OUTPUT: Unit & Price Fields
// RCD.USR Display 1 = CND.No
RCD.USR_Display_1 = 'N';

ENDIF;

// RCD.Output Only 2 USR = CND.no
RCD.Output_Only_2_USR = 'N';

// RCD.Display Flag = CND.No
RCD.Display_Flag = 'N';

//?Rtv the Price Method Type and Price Type. Restrict on Contract (Q)
EXECUTE FUNCTION(RTV Prc Mth Typ/Prc TyRT) TYPE(RTVOBJ) FILE(PDIHREP)           AC1989095;
PARAMETER(RCD.Price_Method_Code);
PARAMETER(RCD.Price_Method_Type);
PARAMETER(RCD.PMH_Price_Type);

// RCD.Condition Desc. 1  USR = Condition name of RCD.PMH Price Type
RCD.Condition_Desc_1_USR = RTVCND(RCD.PMH_Price_Type);

//?USER: Initialize subfile record (new record)

// RCD.Output Only 2 USR = CND.no
RCD.Output_Only_2_USR = 'N';

//?** Set Record Status to output on *Add mode
CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

//?OUTPUT: Record Status
// RCD.Output Only 2 USR = CND.yes
RCD.Output_Only_2_USR = 'Y';

//?OUTPUT: Subfile Select
// RCD.USR Display 3 = CND.No
RCD.USR_Display_3 = 'N';

ENDIF;

//?** Price changes are now being allowed             E00249
//?USER: Validate header non-key fields

CASE;

// IF CTL.Price Start Date GT CTL.Price End Date
IF CTL.Price_Start_Date > CTL.Price_End_Date;

// Send error message - 'Start Date must be less than End Date.'
ERROR(USR3310);
MSGPARM(CTL.Price_Start_Date);
MSGPARM(CTL.Price_End_Date);

ENDIF;

//?USER: Validate subfile record fields

EXECUTE FUNCTION(Rtv Item Pricing UOM  RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1825735;
PARAMETER(RCD.Item_Code);
PARAMETER(NLL.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(RCD.UOM_Pricing);

//?If Prc meth cde entered, retrieve method type & price type from PM Hdr
//?If, Prc meth type NE Q, error
//?Otherwise, if price type = C date method & Market code are required.
//?If price type = I, blank Date Method & Mkt cde
//?If Price method code not entered, send error
CASE;

// IF RCD.Price Method Code is Blank
IF RCD.Price_Method_Code = *BLANK;

// Send error message - 'Price Method is Required.'
ERROR(USR4302);
MSGPARM(RCD.Price_Method_Code);

//?Price Method code entered
//?If Price method code not entered, send error
// IF *OTHERWISE
IF *OTHERWISE;

//?Rtv the Price Method Type and Price Type. Restrict on Contract (Q)
EXECUTE FUNCTION(RTV Prc Mth Typ/Prc TyRT) TYPE(RTVOBJ) FILE(PDIHREP)           AC1989095;
PARAMETER(RCD.Price_Method_Code);
PARAMETER(RCD.Price_Method_Type);
PARAMETER(RCD.PMH_Price_Type);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// RCD.Condition Desc. 1  USR = Condition name of RCD.PMH Price Type
RCD.Condition_Desc_1_USR = RTVCND(RCD.PMH_Price_Type);

CASE;

// IF RCD.PMH Price Type is Ceiling Price
IF RCD.PMH_Price_Type = 'C';

CASE;

// IF RCD.Date Method Code is Not Entered
IF RCD.Date_Method_Code = *BLANK;

// OR RCD.Commodity Market Code is Not Entered
OR RCD.Commodity_Market_Code = *BLANK;

// Send error message - 'Date Method and Commodity Market required for Price Method DVC'
ERROR(USR4312);
MSGPARM(RCD.Commodity_Market_Code);
MSGPARM(RCD.Date_Method_Code);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Commodity Market Code = CND.Not Entered
RCD.Commodity_Market_Code = *BLANK;

// RCD.Date Method Code = CND.Not Entered
RCD.Date_Method_Code = *BLANK;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Price Method invalid'
ERROR(USR1957);
MSGPARM(RCD.Price_Method_Code);

ENDIF;

ENDIF;

CASE;

// IF RCD.USR Weight, 9.2  2 is NE Zero
IF RCD.USR_Weight_9_2_2 <> *ZERO;

//?do this if the price code is there - it wont be on an add. C2353
CASE;

// IF RCD.Price Code is Entered
IF RCD.Price_Code > *ZERO;

// Call program CLC Sum Ship/Ord Unit XF.
CALL PROGRAM(CLC Sum Ship/Ord Unit XF) ('PPA6XFR');
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(RCD.Item_Code);
PARAMETER(LCL.Total_Weight_Ordered_USR);
PARAMETER(*ZERO);
PARAMETER(LCL.Total_Quantity_Ordered);

//?if weight
CASE;

// IF RCD.USR Weight, 9.2  2 LT LCL.Total Weight Ordered USR
IF RCD.USR_Weight_9_2_2 < LCL.Total_Weight_Ordered_USR;

// AND RCD.Contract Unit Type is Weight-LB
AND RCD.Contract_Unit_Type = 'W';

// Send error message - 'Invalid: MAX < fulfilled'
ERROR(USR4544);
MSGPARM(RCD.USR_Weight_9_2_2);

ENDIF;

//?if qty
CASE;

// IF RCD.USR Weight, 9.2  2 LT LCL.Total Quantity Ordered
IF RCD.USR_Weight_9_2_2 < LCL.Total_Quantity_Ordered;

// AND RCD.Contract Unit Type is Quantity
AND RCD.Contract_Unit_Type = 'Q';

// Send error message - 'Invalid: MAX < fulfilled'
ERROR(USR4544);
MSGPARM(RCD.USR_Weight_9_2_2);

ENDIF;

ENDIF;

ENDIF;

//?F4=Prompt
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> RCD.Price Method Code
IF PGM.*Cursor_field = RCD.Price_Method_Code;

// Call program SEL Prc Mth Typ/Prc TySR.
CALL PROGRAM(SEL Prc Mth Typ/Prc TySR) ('PNR6SRR');
PARAMETER(RCD.Price_Method_Code);
PARAMETER(RCD.PMH_Price_Type);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> RCD.Commodity Market Code
IF PGM.*Cursor_field = RCD.Commodity_Market_Code;

// Call program SEL Commod. Mkts Actve SR.
CALL PROGRAM(SEL Commod. Mkts Actve SR) ('PDEDSRR');
PARAMETER(RCD.Commodity_Market_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> RCD.Date Method Code
IF PGM.*Cursor_field = RCD.Date_Method_Code;

// Call program SEL OMS Mkt Date      SR.
CALL PROGRAM(SEL OMS Mkt Date      SR) ('PNSCSRR');
PARAMETER(RCD.Date_Method_Code);
PARAMETER(LCL.Date_Method_Description);

ENDIF;

ENDIF;

//?CALC: Subfile record function fields

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(RCD.Item_Desc_DRV);
PARAMETER(RCD.Item_Code);

//?CALC: Header function fields

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CTL.Ship_To_Name_DRV);
PARAMETER(CTL.Ship_To_Customer);

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

EXECUTE FUNCTION(Rtv Next Seq f/Cust   RT) TYPE(RTVOBJ) FILE(POC6REP)           AC1676980;
PARAMETER(CTL.Price_Code);

ENDIF;

//?USER: Create header DBF record

EXECUTE FUNCTION(Crt Customer Prc Hdr  CR) TYPE(CRTOBJ) FILE(POC6REP)           AC1675624;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(CTL.Price_Code);
PARAMETER(CTL.Price_Start_Date);
PARAMETER(CTL.Price_End_Date);
PARAMETER(CTL.Entered_by_User);
PARAMETER(CTL.Date_Entered);
PARAMETER(CTL.Time_Entered);
PARAMETER(CTL.CPH_Unused_Sts_1);
PARAMETER(CTL.CPH_Unused_Sts_2);
PARAMETER(CTL.CPH_Unused_Sts_3);
PARAMETER(CTL.EDI_Status_1);
PARAMETER(CTL.EDI_Status_2);
PARAMETER(CTL.EDI_Status_3);
PARAMETER(CTL.Record_Status);
PARAMETER(CTL.Job_Time);
PARAMETER(CTL.User_Id);
PARAMETER(CTL.Job_Name);
PARAMETER(CTL.Job_Date);

//?USER: Change header DBF record

EXECUTE FUNCTION(Chg Customer Prc Hdr  CH) TYPE(CHGOBJ) FILE(POC6REP)           AC1675625;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(CTL.Price_Code);
PARAMETER(CTL.Price_Start_Date);
PARAMETER(CTL.Price_End_Date);
PARAMETER(CTL.Entered_by_User);
PARAMETER(CTL.Date_Entered);
PARAMETER(CTL.Time_Entered);
PARAMETER(CTL.CPH_Unused_Sts_1);
PARAMETER(CTL.CPH_Unused_Sts_2);
PARAMETER(CTL.CPH_Unused_Sts_3);
PARAMETER(CTL.EDI_Status_1);
PARAMETER(CTL.EDI_Status_2);
PARAMETER(CTL.EDI_Status_3);
PARAMETER(CTL.Record_Status);
PARAMETER(CTL.Job_Time);
PARAMETER(CTL.User_Id);
PARAMETER(CTL.Job_Name);
PARAMETER(CTL.Job_Date);

//?USER: Delete detail DBF record

EXECUTE FUNCTION(Del Customer Prc Dtl  DL) TYPE(DLTOBJ) FILE(POC7REP)           AC1675642;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(RCD.Item_Code);

//?USER: Change detail DBF record

EXECUTE FUNCTION(CHG CPD and Ord Detail CH) TYPE(CHGOBJ) FILE(POC7REP)          AC1905138;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Commodity_Market_Code);
PARAMETER(RCD.Price_Method_Code);
PARAMETER(RCD.Date_Method_Code);
PARAMETER(RCD.Contract_Unit_Type);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Price_1_USR);
PARAMETER(RCD.Price_2_USR);
PARAMETER(RCD.USR_Weight_9_2);
PARAMETER(RCD.USR_Weight_9_2_2);
PARAMETER(RCD.PMH_Price_Type);

//?USER: Create detail DBF record

EXECUTE FUNCTION(Crt Customer Prc Dtl  CR) TYPE(CRTOBJ) FILE(POC7REP)           AC1675640;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Price_Code);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.USR_Weight_9_2_2);
PARAMETER(RCD.Price_2_USR);
PARAMETER(RCD.Commodity_Market_Code);
PARAMETER(RCD.Price_Method_Code);
PARAMETER(RCD.Date_Method_Code);
PARAMETER(RCD.CPD_Weight_Unused_1);
PARAMETER(RCD.CPD_Price_Unused_1);
PARAMETER(RCD.Contract_Unit_Type);
PARAMETER(RCD.CPD_Unused_Sts_2);
PARAMETER(RCD.CPD_Unused_Sts_3);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Job_Time);
PARAMETER(RCD.User_Id);
PARAMETER(RCD.Job_Name);
PARAMETER(RCD.Job_Date);

//?USER: Exit program processing

//?** Remove prompt for print when exiting      FP1098 LJB 06/25/2008
//?Print Confirmation   (this is option 6=print)
