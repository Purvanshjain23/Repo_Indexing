/*********************************************************************/
/*                                                                   */
/*  PROGRAM NUMBER:  PLHAUPC                                         */
/*  PROGRAM NAME:    RECREATE PRIMAL SCALE DETAIL PURGE FILE         */
/*  PROGRAMMER:      LARA BUSER                                      */
/*  CREATE DATE:     023/01/2006                                     */
/*                                                                   */
/*  FUNCTION:        THE PRIMAL SCALE DETAIL FILE HAS CHANGED. IT    */
/*                   IS NOW OWNED BY A NEW FILE: PRIMAL SCALE.       */
/*                   THE PURGED DATA IN THE HISTORY FILE NEEDS TO    */
/*                   BE SAVED, THE PURGE FILE NEEDS TO BE RECREATED  */
/*                   IN ALL LIBRARIES WHERE IT NOW RESIDES, ALONG    */
/*                   WITH DEPENDENT LOGICALS, AND THE SAVED DATA     */
/*                   NEEDS TO BE COPIED BACK INTO THE HISTORY        */
/*                   LIBRARY.                                        */
/*                                                                   */
/* STEP 1:  RENAME THE PKDLCPPPRG FILE IN PRKFHST.                   */
/*          NAME THE FILE: PKDLHSTSV                                 */
/*                                                                   */
/* STEP 2:  DELETE ALL COPIES OF PKDLCPPPRG IN ALL LIBRARIES         */
/*          WHERE IT RESIDES. FIRST REMOVE ALL THE DEPENDENT         */
/*          FILES (LOGICALS). THEN DELETE THE PHYSICALS.             */
/*                                                                   */
/* STEP 3:  CREATE DUPLICATES OF PKDLCPP IN ALL REQUIRED LIBRARIES.  */
/*          NAME THE DUPLICATE FILE: PKDLCPPPRG                      */
/*          THEN DUPLICATE THE REQUIRED DEPENDENT FILES.             */
/*                                                                   */
/*          CREATE PKDLCPPPRG TO ALLOW MULTIPLE MEMBERS              */
/*                                                                   */
/* STEP 4:  COPY THE DATA BACK INTO THE HISTORY LIBRARY FILE.        */
/*          PARMS SHOULD BE:                                         */
/*              FROM MEMBER  : ALL                                   */
/*              TO MEMBER    : FROM MEMBER                           */
/*              MEMBER OPTION: ADD                                   */
/*              FORMAT OPTION: *MAP AND *DROP                        */
/*                                                                   */
/* STEP 5:  VERIFY THAT ALL DATA COPIED SUCCESSFULLY.                */
/*          IF IT DID, THEN DELETE THE RENAMED FILE.                 */
/*          IF ANY STEP IN THE COPY OR DUPLICATE PROCESS FAILED      */
/*          SAVE THE RENAMED FILE AND SEND AN                        */
/*          ERROR MESSAGE TO EVERYONE WHO NEEDS TO BE NOTIFIED.      */
/*                                                                   */
/*********************************************************************/
/*  Modification History                                             */
/*  INIT  DATE   DESCRIPTION                                         */
/*  --- -------- ----------------------------------------------------*/
/*                                                                   */
/*********************************************************************/
 PLHAUPC:    PGM

             DCL        VAR(&MSG1) TYPE(*CHAR) LEN(125)

/*-------------------------------------------------------------------*/
/* STEP 1:  RENAME THE PKDLCPPPRG FILE IN PRKFHST.                   */
/*          NAME THE FILE: PKDLHSTSV                                 */
/*-------------------------------------------------------------------*/

             RNMOBJ     OBJ(PRKFHST/PKDLCPPPRG) OBJTYPE(*FILE) +
                          NEWOBJ(PKDLHSTSV)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('RENAME OF PKDLCPPPRG IN +
                          PRKFHST FAILED                     ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* CREATE THE NEW PRIMAL SCALE DETAIL PURGE FILE IN PRKFHST LIBRARY  */

             CRTDUPOBJ  OBJ(PKDLCPP) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKFHST) +
                          NEWOBJ(PKDLCPPPRG)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP to PRKFHST failed          ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* MAKE THE NEW PRIMAL SCALE DETAIL PURGE FILE MULTI-MEMBER          */

             CHGPF      FILE(PRKFHST/PKDLCPPPRG) MAXMBRS(*NOMAX) +
                          SIZE(*NOMAX)
             CLRPFM     FILE(PRKFHST/PKDLCPPPRG) MBR(*ALL)

/* COPY THE SAVED DATA INTO THE NEW PRIMAL SCALE DETAIL PURGE FILE   */

             CPYF       FROMFILE(PRKFHST/PKDLHSTSV) +
                          TOFILE(PRKFHST/PKDLCPPPRG) FROMMBR(*ALL) +
                          TOMBR(*FROMMBR) MBROPT(*ADD) FMTOPT(*MAP +
                          *DROP)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Copy of data from +
                          PKDLHSTSV to PKDLCPPPRG failed     ')
             GOTO       CMDLBL(ERROR)
             ENDDO
             SNDPGRMSG  TOPGR(PRKDEVLJB) MSG('The Copy of data from +
                          the saved file to the new PKDLCPPPRG file +
                          completed. Verify success then delete the +
                          saved file')

/*-------------------------------------------------------------------*/
/* STEP 2:  DELETE ALL COPIES OF PKDLCPPPRG IN ALL LIBRARIES         */
/*          WHERE IT RESIDES. FIRST REMOVE ALL THE DEPENDENT         */
/*          FILES (LOGICALS). THEN DELETE THE PHYSICALS.             */
/*                                                                   */
/* STEP 3:  CREATE DUPLICATES OF PKDLCPP IN ALL REQUIRED LIBRARIES.  */
/*          NAME THE DUPLICATE FILE: PKDLCPPPRG                      */
/*          THEN DUPLICATE THE REQUIRED DEPENDENT FILES.             */
/*                                                                   */
/*          CREATE PKDLCPPPRG TO ALLOW MULTIPLE MEMBERS              */
/*-------------------------------------------------------------------*/
/* PRKFGUP:                                                          */
/* DELETE ALL THE LOGICALS AND THE PHYSICAL:                         */
             DLTF       FILE(PRKFGUP/PKDLCPL*)
             DLTF       FILE(PRKFGUP/PKDLCPP)
/* CREATE A NEW PHYSICAL:                                            */
             CRTDUPOBJ  OBJ(PKDLCPP) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKFGUP) +
                          NEWOBJ(PKDLCPPPRG)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP to PRKFGUP failed          ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* CREATE NEW LOGICALS:                                              */
             CRTDUPOBJ  OBJ(PKDLCPL*) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKFGUP) NEWOBJ(*OBJ)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP Logicals to PRKFGUP failed')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* PRKFTFP:                                                          */
/* DELETE ALL THE LOGICALS AND THE PHYSICAL:                         */
             DLTF       FILE(PRKFTFP/PKDLCPL*)
             DLTF       FILE(PRKFTFP/PKDLCPP)
/* CREATE A NEW PHYSICAL:                                            */
             CRTDUPOBJ  OBJ(PKDLCPP) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKFTFP) +
                          NEWOBJ(PKDLCPPPRG)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP to PRKFTFP failed          ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* CREATE NEW LOGICALS:                                              */
             CRTDUPOBJ  OBJ(PKDLCPL*) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKFTFP) NEWOBJ(*OBJ)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP Logicals to PRKFTFP failed   ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* PRKTESTF:                                                         */
/* DELETE ALL THE LOGICALS AND THE PHYSICAL:                         */
             DLTF       FILE(PRKTESTF/PKDLCPL*)
             DLTF       FILE(PRKTESTF/PKDLCPP)
/* CREATE A NEW PHYSICAL:                                            */
             CRTDUPOBJ  OBJ(PKDLCPP) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKTESTF) +
                          NEWOBJ(PKDLCPPPRG)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP to PRKTESTF Failed          ')
             GOTO       CMDLBL(ERROR)
             ENDDO

/* CREATE NEW LOGICALS:                                              */
             CRTDUPOBJ  OBJ(PKDLCPL*) FROMLIB(HPEDEVGEN) +
                          OBJTYPE(*FILE) TOLIB(PRKTESTF) NEWOBJ(*OBJ)
             MONMSG     MSGID(CPF9999) EXEC(DO)
             CHGVAR     VAR(&MSG1) VALUE('Create of duplicate +
                          PKDLCPP Logicals to PRKTESTF failed')
             GOTO       CMDLBL(ERROR)
             ENDDO

             GOTO       CMDLBL(PGMMSG)

/*-------------------------------------------------------------------*/
/*                     ERROR MESSAGES                                */
/*-------------------------------------------------------------------*/
 ERROR:
             SNDPGRMSG  TOPGR(PRKDEVLJB) MSG(&MSG1) CONFMSG(*NO)

             SNDPGRMSG  TOPGR(PRKDEVLJB) MSG('Create of new Primal +
                          Scale Detail Purge file and copy of data +
                          Ended Abnormally.') CONFMSG(*NO)

             CHGJOB     LOG(4 00 *SECLVL)

             GOTO       CMDLBL(ENDPGM)
/*-------------------------------------------------------------------*/
/*                      PROGRAM END                                  */
/*-------------------------------------------------------------------*/
 PGMMSG:
             SNDPGRMSG  TOPGR(PRKDEVLJB) MSG('Create new Primal +
                          Scale Detail Purge file and copy of data +
                          completed normally.')

 ENDPGM:     ENDPGM
