// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBFEE1R
// ?Date: 14.08.2025 Time: 03:47:43
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(WRK.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.Display Flag = CND.Yes
WRK.Display_Flag = 'Y';

// WRK.Toggle Text 1         USR = CON.c/o
WRK.Toggle_Text_1_USR = 'c/o';

// WRK.Toggle Text 2         USR = CON.C/O
WRK.Toggle_Text_2_USR = 'C/O';

// WRK.Toggle Text 3         USR = CON.C/o
WRK.Toggle_Text_3_USR = 'C/o';

// WRK.Toggle Text 4         USR = CON.%
WRK.Toggle_Text_4_USR = '%';

// KEY.TPM Facility Type = PAR.TPM Facility Type
KEY.TPM_Facility_Type = PAR.TPM_Facility_Type;

// KEY.TPM Location Code = PAR.TPM Location Code
KEY.TPM_Location_Code = PAR.TPM_Location_Code;

//?Set to *ADD if no Location Code is passed in
CASE;

// IF PAR.TPM Location Code is NOT ENTERED
IF PAR.TPM_Location_Code = *BLANK;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?USER: Initialize key screen

//?Save entered location code
CASE;

// IF PAR.TPM Location Code is ENTERED
IF PAR.TPM_Location_Code <> *BLANK;

// KEY.TPM Location Code = PAR.TPM Location Code
KEY.TPM_Location_Code = PAR.TPM_Location_Code;

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.TPM Record Status = CND.ACTIVE
DTL.TPM_Record_Status = 'A';

// DTL.Effective Date = CON.1130101
DTL.Effective_Date = 1130101;

// DTL.Cancellation Date = CND.High Value
DTL.Cancellation_Date = 1991231;

//?USER: Initialize detail screen (existing record)

//?Default rec status = Active, if it is blanks
CASE;

// IF DB1.TPM Record Status is Blanks
IF DB1.TPM_Record_Status = *BLANK;

// DTL.TPM Record Status = CND.ACTIVE
DTL.TPM_Record_Status = 'A';

ENDIF;

// DTL.Condition Desc. 1  USR = Condition name of DTL.TPM Record Status
DTL.Condition_Desc_1_USR = RTVCND(DTL.TPM_Record_Status);

// Call program Zzz TPM CoLocated WhsesXF.
CALL PROGRAM(Zzz TPM CoLocated WhsesXF) ('PBFKXFR');
PARAMETER(DTL.Warehouse_1_USR);
PARAMETER(DTL.Warehouse_2_USR);
PARAMETER(DTL.Warehouse_3_USR);
PARAMETER(DTL.Warehouse_4_USR);
PARAMETER(DTL.Warehouse_5_USR);
PARAMETER(DTL.Warehouse_6_USR);
PARAMETER(DTL.Warehouse_7_USR);
PARAMETER(DTL.Warehouse_8_USR);
PARAMETER(WRK.Warehouse_9_USR);
PARAMETER(WRK.Warehouse_10_USR);
PARAMETER(DTL.TPM_Location_Code);
PARAMETER(WRK.Record_Selected_USR);

//?USER: Delete DBF record

EXECUTE FUNCTION(DLT TPM Loc Master     DL) TYPE(DLTOBJ) FILE(PBAPREP)          AC2051229;
PARAMETER(DTL.TPM_Facility_Type);
PARAMETER(DTL.TPM_Location_Code);

//?USER: Validate detail screen fields

// WRK.Text 3 Length USR = SUBSTRING(DTL.TPM Address 1,CON.1,CON.3)
WRK.Text_3_Length_USR = SUBSTRING(DTL.TPM_Address_1:1:3);

// WRK.Byte = SUBSTRING(DTL.TPM Address 1,CON.1,CON.1)
WRK.Byte = SUBSTRING(DTL.TPM_Address_1:1:1);

//?Test for "In Care Of" characters
CASE;

// IF WRK.Text 3 Length USR EQ WRK.Toggle Text 1         USR
IF WRK.Text_3_Length_USR = WRK.Toggle_Text_1_USR;

// OR WRK.Text 3 Length USR EQ WRK.Toggle Text 2         USR
OR WRK.Text_3_Length_USR = WRK.Toggle_Text_2_USR;

// OR WRK.Text 3 Length USR EQ WRK.Toggle Text 3         USR
OR WRK.Text_3_Length_USR = WRK.Toggle_Text_3_USR;

// OR WRK.Byte EQ WRK.Toggle Text 4         USR
OR WRK.Byte = WRK.Toggle_Text_4_USR;

// Send error message - 'Move this address line to Name field without "In Care Of" character'
ERROR(USR4547);
MSGPARM(DTL.TPM_Address_1);

ENDIF;

//?Zip cannot be blank if city is entered and not international
CASE;

// IF DTL.TPM Zip Code is Blanks
IF ( DTL.TPM_Zip_Code = *BLANK;

// AND DTL.TPM City is Not Blank
AND DTL.TPM_City <> *BLANK;

// AND DTL.TPM Region/State Code is Not International
AND DTL.TPM_Region_State_Code <> ''.'' );

// Send error message - 'Field cannot be blank'
ERROR(USR3741);
MSGPARM(DTL.TPM_Zip_Code);

ENDIF;

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Prompt processing for WAREHOUSE facility type
CASE;

// IF PAR.TPM Facility Type is Warehouse
IF PAR.TPM_Facility_Type = 'WAREHOUSE';

//?F4=Prompt for Warehouse Name and associated information
CASE;

// IF PGM.*Cursor field <IS> DTL.TPM Name
IF PGM.*Cursor_field = DTL.TPM_Name;

// Call program Zzz Warehouse Details  SR.
CALL PROGRAM(Zzz Warehouse Details  SR) ('PBFFSRR');
PARAMETER(PAR.Warehouse_Code);
PARAMETER(WRK.TPM_Name);
PARAMETER(WRK.TPM_Address_1);
PARAMETER(WRK.TPM_Address_2);
PARAMETER(WRK.TPM_City);
PARAMETER(WRK.TPM_Zip_Code);
PARAMETER(WRK.TPM_Region_State_Code);

//?Update screen if selection was made
CASE;

// IF WRK.TPM Name is Not Blank
IF WRK.TPM_Name <> *BLANK;

// DTL.TPM Name = WRK.TPM Name
DTL.TPM_Name = WRK.TPM_Name;

// DTL.TPM Address 1 = WRK.TPM Address 1
DTL.TPM_Address_1 = WRK.TPM_Address_1;

// DTL.TPM Address 2 = WRK.TPM Address 2
DTL.TPM_Address_2 = WRK.TPM_Address_2;

// DTL.TPM City = WRK.TPM City
DTL.TPM_City = WRK.TPM_City;

// DTL.TPM Zip Code = WRK.TPM Zip Code
DTL.TPM_Zip_Code = WRK.TPM_Zip_Code;

// DTL.TPM Region/State Code = WRK.TPM Region/State Code
DTL.TPM_Region_State_Code = WRK.TPM_Region_State_Code;

ENDIF;

ENDIF;

//?F4=Prompt for 1st associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 1 USR
IF PGM.*Cursor_field = DTL.Warehouse_1_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_1_USR);

ENDIF;

//?F4=Prompt for 2nd associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 2 USR
IF PGM.*Cursor_field = DTL.Warehouse_2_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_2_USR);

ENDIF;

//?F4=Prompt for 3rd associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 3 USR
IF PGM.*Cursor_field = DTL.Warehouse_3_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_3_USR);

ENDIF;

//?F4=Prompt for 4th associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 4 USR
IF PGM.*Cursor_field = DTL.Warehouse_4_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_4_USR);

ENDIF;

//?F4=Prompt for 5th associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 5 USR
IF PGM.*Cursor_field = DTL.Warehouse_5_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_5_USR);

ENDIF;

//?F4=Prompt for 6th associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 6 USR
IF PGM.*Cursor_field = DTL.Warehouse_6_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_6_USR);

ENDIF;

//?F4=Prompt for 7th associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 7 USR
IF PGM.*Cursor_field = DTL.Warehouse_7_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_7_USR);

ENDIF;

//?F4=Prompt for 8th associated warehouse code
CASE;

// IF PGM.*Cursor field <IS> DTL.Warehouse 8 USR
IF PGM.*Cursor_field = DTL.Warehouse_8_USR;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_8_USR);

ENDIF;

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT TPM Loc-Multi Whse CO) TYPE(CRTOBJ) FILE(PBAPREP)          AC2052311;
PARAMETER(DTL.TPM_Facility_Type);
PARAMETER(DTL.TPM_Location_Code);
PARAMETER(DTL.Effective_Date);
PARAMETER(DTL.Cancellation_Date);
PARAMETER(DTL.TPM_Country_Code);
PARAMETER(DTL.TPM_Region_State_Code);
PARAMETER(DTL.TPM_City);
PARAMETER(DTL.TPM_Sub_Region_County);
PARAMETER(DTL.TPM_Zip_Code);
PARAMETER(DTL.TPM_Name);
PARAMETER(DTL.TPM_Address_1);
PARAMETER(DTL.TPM_Address_2);
PARAMETER(DTL.TPM_Contact);
PARAMETER(DTL.TPM_Voice_Phone);
PARAMETER(DTL.TPM_Fax_Phone);
PARAMETER(DTL.Email_Address_Long_1);
PARAMETER(DTL.Email_Address_Long_2);
PARAMETER(DTL.TPM_Record_Status);
PARAMETER(DTL.TPM_Process_Status);
PARAMETER(DTL.TPM_Error_Reason);
PARAMETER(DTL.TPM_Create_Date);
PARAMETER(DTL.TPM_Create_Time);
PARAMETER(DTL.TPM_Change_Date);
PARAMETER(DTL.TPM_Change_Time);
PARAMETER(DTL.Warehouse_1_USR);
PARAMETER(DTL.Warehouse_2_USR);
PARAMETER(DTL.Warehouse_3_USR);
PARAMETER(DTL.Warehouse_4_USR);
PARAMETER(DTL.Warehouse_5_USR);
PARAMETER(DTL.Warehouse_6_USR);
PARAMETER(DTL.Warehouse_7_USR);
PARAMETER(DTL.Warehouse_8_USR);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.TPM_Create_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(DB1.TPM_Create_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 //?USER: Processing if Data update error

 EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
 PARAMETER(DB1.TPM_Create_Time);
 PARAMETER(NLL.User_Id);
 PARAMETER(NLL.Job_Name);
 PARAMETER(DB1.TPM_Create_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 //?Update Warehouse 1 if entered
 CASE;

 // IF PAR.Warehouse 1 USR is Entered
 IF PAR.Warehouse_1_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_1_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_1_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 2 if entered
 CASE;

 // IF PAR.Warehouse 2 USR is Entered
 IF PAR.Warehouse_2_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_2_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_2_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 3 if entered
 CASE;

 // IF PAR.Warehouse 3 USR is Entered
 IF PAR.Warehouse_3_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_3_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_3_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 4 if entered
 CASE;

 // IF PAR.Warehouse 4 USR is Entered
 IF PAR.Warehouse_4_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_4_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_4_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 5 if entered
 CASE;

 // IF PAR.Warehouse 5 USR is Entered
 IF PAR.Warehouse_5_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_5_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_5_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 6 if entered
 CASE;

 // IF PAR.Warehouse 6 USR is Entered
 IF PAR.Warehouse_6_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_6_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_6_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 7 if entered
 CASE;

 // IF PAR.Warehouse 7 USR is Entered
 IF PAR.Warehouse_7_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_7_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_7_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 8 if entered
 CASE;

 // IF PAR.Warehouse 8 USR is Entered
 IF PAR.Warehouse_8_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_8_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_8_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG TPM Loc-Multi Whse CH) TYPE(CHGOBJ) FILE(PBAPREP)          AC2052275;
PARAMETER(DTL.TPM_Facility_Type);
PARAMETER(DTL.TPM_Location_Code);
PARAMETER(DTL.Effective_Date);
PARAMETER(DTL.Cancellation_Date);
PARAMETER(DTL.TPM_Country_Code);
PARAMETER(DTL.TPM_Region_State_Code);
PARAMETER(DTL.TPM_City);
PARAMETER(DTL.TPM_Sub_Region_County);
PARAMETER(DTL.TPM_Zip_Code);
PARAMETER(DTL.TPM_Name);
PARAMETER(DTL.TPM_Address_1);
PARAMETER(DTL.TPM_Address_2);
PARAMETER(DTL.TPM_Contact);
PARAMETER(DTL.TPM_Voice_Phone);
PARAMETER(DTL.TPM_Fax_Phone);
PARAMETER(DTL.Email_Address_Long_1);
PARAMETER(DTL.Email_Address_Long_2);
PARAMETER(DTL.TPM_Record_Status);
PARAMETER(DTL.TPM_Process_Status);
PARAMETER(DTL.TPM_Error_Reason);
PARAMETER(DTL.TPM_Create_Date);
PARAMETER(DTL.TPM_Create_Time);
PARAMETER(DTL.TPM_Change_Date);
PARAMETER(DTL.TPM_Change_Time);
PARAMETER(DTL.Warehouse_1_USR);
PARAMETER(DTL.Warehouse_2_USR);
PARAMETER(DTL.Warehouse_3_USR);
PARAMETER(DTL.Warehouse_4_USR);
PARAMETER(DTL.Warehouse_5_USR);
PARAMETER(DTL.Warehouse_6_USR);
PARAMETER(DTL.Warehouse_7_USR);
PARAMETER(DTL.Warehouse_8_USR);
{
 //?USER: Processing before Data read

 //?This updates the TPM Location Master with the consolidated location
 //?code and then ties all associated warehouses to this code
 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(PAR.TPM_Change_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(PAR.TPM_Change_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing before Data update

 EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
 PARAMETER(DB1.TPM_Change_Time);
 PARAMETER(NLL.User_Id);
 PARAMETER(NLL.Job_Name);
 PARAMETER(DB1.TPM_Change_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?Update Warehouse 1 if entered
 CASE;

 // IF PAR.Warehouse 1 USR is Entered
 IF PAR.Warehouse_1_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_1_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_1_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 2 if entered
 CASE;

 // IF PAR.Warehouse 2 USR is Entered
 IF PAR.Warehouse_2_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_2_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_2_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 3 if entered
 CASE;

 // IF PAR.Warehouse 3 USR is Entered
 IF PAR.Warehouse_3_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_3_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_3_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 4 if entered
 CASE;

 // IF PAR.Warehouse 4 USR is Entered
 IF PAR.Warehouse_4_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_4_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_4_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 5 if entered
 CASE;

 // IF PAR.Warehouse 5 USR is Entered
 IF PAR.Warehouse_5_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_5_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_5_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 6 if entered
 CASE;

 // IF PAR.Warehouse 6 USR is Entered
 IF PAR.Warehouse_6_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_6_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_6_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 7 if entered
 CASE;

 // IF PAR.Warehouse 7 USR is Entered
 IF PAR.Warehouse_7_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_7_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_7_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

 //?Update Warehouse 8 if entered
 CASE;

 // IF PAR.Warehouse 8 USR is Entered
 IF PAR.Warehouse_8_USR <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(PAR.Warehouse_8_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(WRK.Inventory_Logic_Version);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 PARAMETER(WRK.Job_Time);
 PARAMETER(WRK.User_Id);
 PARAMETER(WRK.Job_Name);
 PARAMETER(WRK.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CHG WHS TPM Loc Code   CH) TYPE(CHGOBJ) FILE(CAADREP)          AC2051674;
 PARAMETER(PAR.Warehouse_8_USR);
 PARAMETER(WRK.Warehouse_Description);
 PARAMETER(WRK.Address_Line_1);
 PARAMETER(WRK.Address_Line_2);
 PARAMETER(WRK.Address_Line_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.Zip_Postal_Code);
 PARAMETER(WRK.Production_Warehouse_Code);
 PARAMETER(WRK.State_Code);
 PARAMETER(WRK.Lot_Tracking_Flag);
 PARAMETER(WRK.Default_Printer);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(WRK.Trans_Contol_AS400_Plant);
 PARAMETER(WRK.Warehouse_Location);
 PARAMETER(WRK.Warehouse_Std_Chill_Time);
 PARAMETER(WRK.Warehouse_Chill_Time);
 PARAMETER(WRK.Include_in_Auto_Pre_Pick);
 PARAMETER(WRK.Default_Manifest_Copies);
 PARAMETER(WRK.Default_Load_Sequence);
 PARAMETER(WRK.WHS_Slotting_Limit_Type);
 PARAMETER(WRK.Shipping_Company);
 PARAMETER(WRK.Accounting_Company);
 PARAMETER(WRK.WHS_Sched_Prod_Max_Days);
 PARAMETER(WRK.WHS_Inventory_Chill_Time);
 PARAMETER(WRK.Parent_Warehouse);
 PARAMETER(WRK.Default_Shipping_Whs);
 PARAMETER(WRK.WHS_Live_with_Carlisle);
 PARAMETER(WRK.WHS_PFS_Interface);
 PARAMETER(WRK.WHS_Req_Meter_Reading_Shp);
 PARAMETER(WRK.WHS_Default_Load_Type);
 PARAMETER(WRK.WHS_TMS_Planning_Region);
 PARAMETER(WRK.Default_Carrier_Code);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(WRK.WHS_Auto_Inv_Restoration);
 PARAMETER(WRK.EDI_Status_1);
 PARAMETER(WRK.EDI_Status_2);
 PARAMETER(WRK.EDI_Status_3);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing before Data update

  //?No PFS update from this function
  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


//?USER: Process command keys

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

RETURN;

ENDIF;

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

