// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLAXEFR
// ?Date: 14.08.2025 Time: 02:53:31
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?11/05/2020 ISE H16853 Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Create DBF record

EXECUTE FUNCTION(Crt Delivery Sched Cm IF) TYPE(EXCINTFUN) FILE(PLAKCPP)        AB1244993;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(RCD.DSD_Delivery_Date);
PARAMETER(RCD.DSD_Delivery_Time);
PARAMETER(RCD.DSD_Delivery_Time_Seq);
PARAMETER(RCD.DSC_Line_Number);
PARAMETER(RCD.DSC_Comment);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Next Line No      RT) TYPE(RTVOBJ) FILE(PLAKCPP)           AB1244994;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.DSH_Kill_Date);
 PARAMETER(PAR.DSD_Delivery_Date);
 PARAMETER(PAR.DSD_Delivery_Time);
 PARAMETER(PAR.DSD_Delivery_Time_Seq);
 PARAMETER(PAR.DSC_Line_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.DSC Line Number = CON.1
  PAR.DSC_Line_Number = 1;

  //?USER: Process Data record

  // PAR.DSC Line Number = DB1.DSC Line Number + CON.1
  PAR.DSC_Line_Number = DB1.DSC_Line_Number + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Crt Delivery Sched Cm CR) TYPE(CRTOBJ) FILE(PLAKCPP)           AB1244985;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.DSH_Kill_Date);
 PARAMETER(PAR.DSD_Delivery_Date);
 PARAMETER(PAR.DSD_Delivery_Time);
 PARAMETER(PAR.DSD_Delivery_Time_Seq);
 PARAMETER(PAR.DSC_Line_Number);
 PARAMETER(PAR.DSC_Comment);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Record_Status);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Del Delivery Sched Cm DL) TYPE(DLTOBJ) FILE(PLAKCPP)           AB1244987;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(RCD.DSD_Delivery_Date);
PARAMETER(RCD.DSD_Delivery_Time);
PARAMETER(RCD.DSD_Delivery_Time_Seq);
PARAMETER(RCD.DSC_Line_Number);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Delivery Sched Cm CH) TYPE(CHGOBJ) FILE(PLAKCPP)           AB1244986;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.DSH_Kill_Date);
PARAMETER(RCD.DSD_Delivery_Date);
PARAMETER(RCD.DSD_Delivery_Time);
PARAMETER(RCD.DSD_Delivery_Time_Seq);
PARAMETER(RCD.DSC_Line_Number);
PARAMETER(RCD.DSC_Comment);
PARAMETER(RCD.RS_User_Changed);
PARAMETER(RCD.RS_Date_Changed);
PARAMETER(RCD.RS_Time_Changed);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(RCD.RS_Job);
PARAMETER(RCD.RS_Program);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Process command keys

CASE;

// IF CTL.*CMD key is *Add
IF CTL.*CMD_key = '09';

// IF *OTHERWISE
IF *OTHERWISE;

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

