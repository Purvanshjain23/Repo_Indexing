// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNK2XFR
// ?Date: 14.08.2025 Time: 03:45:27
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// Execute function CVT to Upper Alpha 2   US.
EXECUTE FUNCTION(CVT to Upper Alpha 2   US) TYPE(EXCUSRSRC) ('PNK1UFR');
PARAMETER(PAR.Case_Sensitive_Field);
PARAMETER(PAR.Case_Upper_Field);
{
 E                    AR1        30  1               ARRAY 1
 E                    AR2        30  1               ARRAY 2
 C                     MOVEA#IMKTX    AR1              LOAD ARRAY
 C                     MOVEA*BLANK    AR2              LOAD ARRAY
 C                     Z-ADD1         X1      20       SET COUNTER
 C                     Z-ADD1         Y1      20       SET COUNTER
 * * * * * * * CHECK FOR ALPHABETIC CHARACTERS * * * * * * *
 * * * * * * * SKIP PERIODS, COMMAS, & OTHER   * * * * * * *
 C           X1        DOWLT31
 C           AR1,X1    IFEQ ' '
 C           AR1,X1    ORGE 'a'
 C           AR1,X1    ANDLE'Z'
 C           AR1,X1    ANDNE'.'
 C           AR1,X1    ANDNE','
 C           AR1,X1    ANDNE'~'
 C           AR1,X1    ANDNE'{'
 C           AR1,X1    ANDNE'}'
 C           AR1,X1    ANDNE'\'
 C                     MOVE AR1,X1    AR2,Y1
 C                     ADD  1         Y1
 C                     ADD  1         X1
 C                     ELSE
 C                     ADD  1         X1
 C                     END
 C                     END
 C                     Z-ADD1         Y1
 C           Y1        DOWLT31
 C           AR2,Y1    IFEQ 'a'
 C                     MOVEL'A'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'b'
 C                     MOVEL'B'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'c'
 C                     MOVEL'C'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'd'
 C                     MOVEL'D'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'e'
 C                     MOVEL'E'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'f'
 C                     MOVEL'F'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'g'
 C                     MOVEL'G'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'h'
 C                     MOVEL'H'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'i'
 C                     MOVEL'I'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'j'
 C                     MOVEL'J'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'k'
 C                     MOVEL'K'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'l'
 C                     MOVEL'L'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'm'
 C                     MOVEL'M'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'n'
 C                     MOVEL'N'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'o'
 C                     MOVEL'O'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'p'
 C                     MOVEL'P'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'q'
 C                     MOVEL'Q'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'r'
 C                     MOVEL'R'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 's'
 C                     MOVEL'S'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 't'
 C                     MOVEL'T'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'u'
 C                     MOVEL'U'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'v'
 C                     MOVEL'V'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'w'
 C                     MOVEL'W'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'x'
 C                     MOVEL'X'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'y'
 C                     MOVEL'Y'       AR2,Y1
 C                     ELSE
 C           AR2,Y1    IFEQ 'z'
 C                     MOVEL'Z'       AR2,Y1
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     END
 C                     ADD  1         Y1
 C                     END
 C                     MOVEAAR2       #OMLTX           LOAD OUTPUT
}


