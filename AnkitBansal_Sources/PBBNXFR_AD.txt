// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBBNXFR
// ?Date: 14.08.2025 Time: 03:47:19
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Create template from prompt screen entries
// LCL.Time In = PAR.LPT Load Plan Time * CON.100 *
LCL.Time_In = PAR.LPT_Load_Plan_Time * 100;

// LCL.Time Out = PAR.End Time USR * CON.100 *
LCL.Time_Out = PAR.End_Time_USR * 100;

// PAR.Time Out = PAR.End Time USR * CON.100 *
PAR.Time_Out = PAR.End_Time_USR * 100;

// LCL.Day of Week (SYN) USR = CVTVAR(PAR.LPT Load Plan Day of Week)
LCL.Day_of_Week_SYN_USR = CVTVAR(PAR.LPT_Load_Plan_Day_of_Week);

// LCL.LPT Load Plan Day of Week = PAR.LPT Load Plan Day of Week
LCL.LPT_Load_Plan_Day_of_Week = PAR.LPT_Load_Plan_Day_of_Week;

//?On Yard time is n hours less than load plan time
// LCL.Hour 1 USR = PAR.Hour 1 USR * CON.-1 *
LCL.Hour_1_USR = PAR.Hour_1_USR * -1;

// DOW LCL.LPT Load Plan Day of Week LE PAR.Day of Week
DOW LCL.LPT_Load_Plan_Day_of_Week <= PAR.Day_of_Week;

//?Write all records for the day of the week
// DOW LCL.Time In LE PAR.Time Out
DOW LCL.Time_In <= PAR.Time_Out;

//?calc on yard time
// LCL.CDD Unused Time 2 = LCL.Time In + LCL.Hour 1 USR *HOURS
LCL.CDD_Unused_Time_2 = TIMEINCR(LCL.Time_In LCL.Hour_1_USR 'HR');

// LCL.LPT On Yard Time = LCL.CDD Unused Time 2 / CON.100 *
LCL.LPT_On_Yard_Time = LCL.CDD_Unused_Time_2 / 100;

// LCL.LPT Load Plan Time = LCL.Time In / CON.100 *
LCL.LPT_Load_Plan_Time = LCL.Time_In / 100;

CASE;

// IF LCL.LPT Load Plan Time is EQ 0
IF LCL.LPT_Load_Plan_Time = *ZERO;

// LCL.LPT Load Plan Time = CND.EQ 24:00
LCL.LPT_Load_Plan_Time = 2400;

ENDIF;

//?create rcd for day/load plan time/on yard - if its already there, chg it.
EXECUTE FUNCTION(Crt Load Plan TemplateCR) TYPE(CRTOBJ) FILE(PBADCPP)           AC2033411;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.LPT_Load_Plan_Day_of_Week);
PARAMETER(LCL.LPT_Load_Plan_Time);
PARAMETER(LCL.LPT_On_Yard_Time);
PARAMETER(LCL.LPT_Unused_Sts);
PARAMETER(LCL.LPT_Unused_Number);
PARAMETER('A');
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

 //?USER: Processing if Data record already exists

 EXECUTE FUNCTION(Chg Load Plan TemplateCH) TYPE(CHGOBJ) FILE(PBADCPP)           AC2033412;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.LPT_Load_Plan_Day_of_Week);
 PARAMETER(DB1.LPT_Load_Plan_Time);
 PARAMETER(PAR.LPT_On_Yard_Time);
 PARAMETER(DB1.LPT_Unused_Sts);
 PARAMETER(DB1.LPT_Unused_Number);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


//?increment time load plan time
CASE;

// IF LCL.Time In is EQ 00:01:00
IF LCL.Time_In = 000100;

// LCL.Time In = CND.Not Entered
LCL.Time_In = *ZERO;

ENDIF;

CASE;

// IF LCL.Time In is EQ 24:00:00
IF LCL.Time_In = 240000;

// LCL.Time In = CON.240101
LCL.Time_In = 240101;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Time In = LCL.Time In + PAR.Hour 2 usr *MINUTES
LCL.Time_In = TIMEINCR(LCL.Time_In PAR.Hour_2_usr 'MN');

ENDIF;

//?Force fall out
CASE;

// IF LCL.Time In is Not Entered
IF LCL.Time_In = *ZERO;

// LCL.Time In = CON.240000
LCL.Time_In = 240000;

ENDIF;

ENDDO;

// LCL.Day of Week (SYN) USR = LCL.Day of Week (SYN) USR + CON.1
LCL.Day_of_Week_SYN_USR = LCL.Day_of_Week_SYN_USR + 1;

// LCL.LPT Load Plan Day of Week = CVTVAR(LCL.Day of Week (SYN) USR)
LCL.LPT_Load_Plan_Day_of_Week = CVTVAR(LCL.Day_of_Week_SYN_USR);

//?Reset starting time to par
// LCL.Time In = PAR.LPT Load Plan Time * CON.100 *
LCL.Time_In = PAR.LPT_Load_Plan_Time * 100;

ENDDO;

