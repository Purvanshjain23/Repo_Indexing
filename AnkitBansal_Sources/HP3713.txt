      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP3713
      * TITLE:       Create Active Weekly/Rotational Budgets with Listing
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/01/04
      *
      *            This function creates Active Weekly/Rotational Farm Budgets and
      *            prints a listing.
      *
      *            The budgets are created with a status of Active.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/10/04  LeAnne Fedor
      *           We are now forcing all FROM dates to be SUNDAY and all
      *           TO dates to be Saturday.
      *
      * 10/13/04  LeAnne Fedor
      *           Cost Per Unit Amount was changed from 9,2 to 9,4.
      *
      * 12/23/04  LeAnne Fedor
      *           Per AMB, we changed the logic to exclude WTF farms.
      *
      * 10/03/05  LeAnne Fedor
      *           Removed all/any logic that limited processing to Non-Zero
      *           Budgeted Quantities. The users now want to include items
      *           with budgeted quantities of zero in all processing.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *    Farm sites
      *
      *
     Fhsl185b   if   e           k disk
      *    Budget template header
      *
      *
     Fhsp186    if   e           k disk
      *    Budget template detail
      *
      *
     Fhsp187    if   e           k disk
      *    Budget template/farm links
      *
      *
     Fhsl188i   if   e           k disk    rename(jhrec:jhreci)
      *    Farm budget header
      *
      *
     Fhsp188    o    e           k disk
      *    Farm budget header
      *
      *
     Fhsp189    o    e           k disk
      *    Farm budget detail
      *
      *
     Fqprint    o    f   80        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
     D h1msg           c                   const('The following budgets -
     D                                     were created as Active:')
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s             80    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D procfl          s              1    inz('Y')
     D first           s              1    inz('Y')
     D firstitem       s              1    inz('Y')
      *
      *
      * Print fields
      *
     D l1fsnm          s             15
     D l1fmdy          s              6  0
     D l1tmdy          s              6  0
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wksysdt         s              8  0
     D wkdays          s              5  0
     D wkbfdt          s              8  0
     D wksatdt         s              8  0
      *
      *
      * Parm fields
      *
     d xxprtfl         s              1
      *
     D xxbgit          s                   like(jdbgit)
     D xxbgqt          s                   like(jdbgqt)
     D xxfbam          s                   like(jdfbam)
     D xxcpuam         s                   like(jdcpuam)
     D xxvol           s                   like(jdvol)
      *
     D xxname          s              9
     D xxabbrev        s              4
     D xxsatdt         s              8  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------------------------
      * Definition for external data area 'DAFBSN' for assigning the next budget number
      *---------------------------------------------------------------------------------
      *
     Dnextfbsn         s              7  0 dtaara(dafbsn)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *******************************************************************************
      * MAINLINE
      *******************************************************************************
      *
      * Prepare to read all Weekly/Rotational records in the Budget Template header
      * file.  (Position in the file greater than the Annual Budgets).
      *
     C     'A'           setgt     hsl185b
      *
      * If the Template is Active (and not Annual), continue.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsl185b                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             thcscd <> 'A' and
     C                             thaist = 'A'
     C                   move      yes           procfl
      *
      * See if any Farms are linked to the Template.
      *
     C     thbtcd        chain     hsp187                             92
     C                   if        *in92 = *on
     C                   move      no            procfl
     C                   endif
      *
      * See if any Items exist for the Template.
      *
     C     thbtcd        chain     hsp186                             92
     C                   if        *in92 = *on
     C                   move      no            procfl
     C                   endif
      *
      * So, if OK so far, process each Farm that is linked to this
      * Template.
      *
     C                   if        procfl = yes
     C                   exsr      $links
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *-------------------
      * EOF processing
      *-------------------
      *
      *
     C                   if        xxprtfl = yes
     C                   else
     C                   setoff                                       97
     C                   exsr      $h1hdr
     C                   except    nodata
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *-------------------------------------------------------------------------------------
      * Read/process each Farm that is linked to this Template
      *-------------------------------------------------------------------------------------
      *
     C     $links        begsr
      *
     C     thbtcd        setll     hsp187
      *
     C                   dou       *in91 = *on                                  Do farms
     C     thbtcd        reade     hsp187                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
      * We want to omit all WTF farms--so, check the Farm Type.
      *
     C     tlfscd        chain     hsp018                             92
     C                   if        *in92 = *off and fstfcd <> 'WTF  '           If not WTF
      *
      * If you already have an 'Active' budget for this farm/template,
      *     do not process
      * Otherwise,
      *     go create an active budget for this farm/template
      *
     C     key01         chain     hsl188i                            92
     C                   if        *in92 = *on
     C                   exsr      $items
     C                   endif
      *
     C                   endif                                                  If not WTF
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Read all Budget Items for the Template
      *-------------------------------------------------------------------------------------
      *
     C     $items        begsr
      *
     C                   move      yes           firstitem
     C     thbtcd        setll     hsp186
      *
     C                   dou       *in93 = *on                                  Do items
     C     thbtcd        reade     hsp186                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
      * Write a Farm Budget Header record and print the first time thru.
      *
     C                   if        firstitem = yes
     C                   exsr      $wrt188
     C                   exsr      $farm
     C                   move      no            firstitem
     C                   endif
      *
      * Always write a Farm Budget Detail record
      *
     C                   z-add     jhfbsn        jdfbsn
     C                   z-add     jhfscd        jdfscd
     C                   move      jhbtcd        jdbtcd
     C                   move      tdbgit        jdbgit
     C                   z-add     tdbtqt        jdbgqt
     C                   exsr      $fbam
     C                   write     jdrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Calculate Farm Budget Amount
      *----------------------------------------------------------------
      *
     C     $fbam         begsr
      *
     C                   call      'HP8701'
     C                   parm      jdbgit        xxbgit
     C                   parm      jdbgqt        xxbgqt
     C     jdvol         parm      0             xxvol
     C     jdcpuam       parm      0             xxcpuam
     C     jdfbam        parm      0             xxfbam
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Write a record to the Farm Budget Header file
      *-------------------------------------------------------------------------------------
      *
     C     $wrt188       begsr
      *
      * Get the next system-assigned 'farm budget number' from the Data Area
      *
     C     *lock         in        nextfbsn
     C                   add       1             nextfbsn
     C                   eval      jhfbsn = nextfbsn
     C                   out       nextfbsn
      *
      * Populate fields
      *
     C                   z-add     tlfscd        jhfscd
     C                   move      thbtcd        jhbtcd
     C                   z-add     thbtwk        jhbtwk
      *
      * Set Status to Active
      *
     C                   move      'A'           jhfbscd
      *
      * Set FROM Date
      *
     C                   z-add     wkbfdt        jhbfdt
      *
      * Calc TO date
     C                   select
     C                   when      thcscd = 'R'
     C                   z-add     0             jhbtdt
      *
     C                   when      thcscd = 'W'
     C     7             mult      thbtwk        wkdays
      *
      * Add the Template 'days' to the From Date to get the TO date. Then,
      * subtract 1 day to get to the previous Saturday since we are forcing all
      * budgets to end on a Saturday.
      *
     C                   movel     jhbfdt        wkisodate
     C                   adddur    wkdays:*days  wkisodate
     C                   subdur    1:*days       wkisodate
     C                   move      wkisodate     jhbtdt
     C                   endsl
      *
     C                   write     jhrec
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Retrieve Farm info and print a line for the farm
      *-------------------------------------------------------------------------------------
      *
     C     $farm         begsr
      *
     C     jhfscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
     C                   eval      l1fsnm = fsfsnm
     C                   else
     C                   eval      l1fsnm = 'Unknown'
     C                   endif                                                  If farm hit
      *
      * Print the Headings
      *
     C                   select
     C                   when      *inof = *on
     C                   exsr      $h1hdr
      *
     C                   when      first = yes
     C                   exsr      $h1hdr
     C                   move      no            first
     C                   endsl
      *
      *
      * Flip From Date from CCYYMMDD to MMDDYY for display
      *
     C     *iso          test(d)                 jhbfdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      jhbfdt        wkisodate
     C     *mdy          move      wkisodate     l1fmdy
     C                   endif                                                  If OK date
      *
      * Flip To Date from CCYYMMDD to MMDDYY for display
      *
     C     *iso          test(d)                 jhbtdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      jhbtdt        wkisodate
     C     *mdy          move      wkisodate     l1tmdy
     C                   endif                                                  If OK date
      *
      * Print detail line
      *
     C                   except    l1dtl
     C                   move      yes           xxprtfl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Print headings
      *-------------------------------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   except    h1hdr
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Initialization subroutine
      *-------------------------------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxprtfl
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    tlfscd
     C                   kfld                    tlbtcd
      *
      * Set up heading info
      *
     C                   time                    rtime
     C                   seton                                        97
      *
      *
      * Get the system date into CCYYMMDD format.
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wksysdt
      *
      *
      * We will use the system date to come up with our FROM date. The FROM
      * date must always be a SUNDAY.
      *
      * So, determine what 'day of the week' the system date is.
      *
     C                   call      'HP8005'
     C                   parm                    wksysdt
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
      * When the system date is Saturday
      *     Set the From Date equal to the system date + 1 day
      * When the system date is Sunday
      *     Set the From Date equal to the system date
      * Otherwise,
      *     Set the From Date equal to the previous Sunday
      *
     C                   select
     C                   when      xxabbrev = 'Sat '
     C                   movel     wksysdt       wkisodate
     C                   adddur    1:*days       wkisodate
     C                   move      wkisodate     wkbfdt
      *
     C                   when      xxabbrev = 'Sun '
     C                   z-add     wksysdt       wkbfdt
     C                   other
      *
      * Find previous Saturday using the generic program. Then, add 1
      * day to it to get the previous Sunday.
      *
     C                   call      'HPSAT'
     C                   parm                    wksysdt
     C     wksatdt       parm      0             xxsatdt
      *
     C                   movel     wksatdt       wkisodate
     C                   adddur    1:*days       wkisodate
     C                   move      wkisodate     wkbfdt
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oqprint    e            h1hdr          1 01
     O                       sdpgm               10
     O                                           47 'HOG PRODUCTION SYSTEM'
     O                                           70 'DATE'
     O                       udate         y     80
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                                           41 'WEEKLY/ROTATIONAL BUDGETS'
     O                                           59 ' THAT WERE CREATED'
     O                                           70 'PAGE'
     O                                           70 'TIME'
     O                       rtime               80 '  :  :  '
      *
     O          e            h1hdr          2
     O                       page          z     80
      *
      *
      *-------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------
      *
     O          e            h1hdr       0  1
     O                                            7 'Budget'
     O                                           15 'Farm'
     O                                           25 'Budget'
     O                                           37 'Creation'
     O                                           46 'From'
     O                                           56 'To'
      *
      *
     O          e            h1hdr       0  1
     O                                            7 'Number'
     O                                           15 'Site'
     O                                           26 'Template'
     O                                           37 'Schedule'
     O                                           74 'Farm Name'
     O                                           46 'Date'
     O                                           57 'Date'
      *
     O          e            h1hdr       0  2
     O                       dash                80
      *
      *
     O          e            h1hdr       0  2
     O               97      h1msg               45
      *
      *-------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------
      *
     O          e            l1dtl          1
     o                       jhfbsn        z      7
     O                       jhfscd        z     15
     O                       thbtcd              25
     O                       thcscd              34
     O                       l1fmdy         b    48 '  /  /  '
     O                       l1tmdy         b    59 '  /  /  '
     O                       l1fsnm         b    80
      *
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata         1
     O                                           16 'No budgets were '
     O                                           24 'created.'
