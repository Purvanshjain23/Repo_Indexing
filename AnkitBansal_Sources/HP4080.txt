      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4080
      * TITLE:       Specify Options for Activity Variance Report
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/02/02
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for generating the report.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/12  LeAnne Ramsey  (E2256)
      *           Per Sami Wilson, we are making more changes for E2256 from 9/17/12.
      *           We are adding 2 more fields/columns.
      *                   Shipped Ending Inventory Head
      *                   Variance Shipped Head
      *           So, since we will now have both Reported and Shipped Variance on the
      *           report, we needed to do somthing with the optional selections that were
      *           based on Reported Variance. Sami W. said that no one ever uses the
      *           optional selections....so, we just took them off the screen. The fields
      *           were: d1infl, d1inds, d1opcd, d1veninhd. Below is what was on the screen:
      *
      *        You may further limit the groups that are included on the report by entering
      *        either one or both of the following options:
      *        Groups to include .. ?                                           (Blank = All)
      *        Groups whose Ending Inventory Variance Head is: ?                (GT GE LT LE)
      *                                  an absolute value of:
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4080   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group
      *
      *
     Fhsp101    if   e           k disk
      *    Type of farm
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2    inz('00')
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D termfl          s              1
     D svdvcd          s                   like(oudvcd)
      *
      *
      * Parm fields
      *
     D xxcdyr          s              4  0
     D xxcdwk          s              2  0
      *
     D xxname          s              9
     D xxabbrev        s              4
      *
     D xxfsbo          s                   like(d1fsbo)
     D xxbods          s                   like(d1bods)
      *
     D xxalphcell      s              2a
     D xxalphfscd      s              5a
     D xxfscd          s                   like(d1fscd)
     D xxfsnm          s                   like(d1fsnm)
      *
     D xxhgcd          s                   like(d1hgcd)
      *
     D xxppcd          s                   like(d1ppcd)
     D xxppds          s                   like(d1ppds)
      *
     D xxptcd          s                   like(d1ptcd)
     D xxptds          s                   like(d1ptds)
      *
     D xxgtcd          s                   like(d1gtcd)
     D xxgtds          s                   like(d1gtds)
      *
     D xxtfcd          s                   like(d1tfcd)
     D xxtfds          s                   like(d1tfds)
      *
     D xxrpfl          s                   like(d1rpfl)
     D xxrpds          s                   like(d1rpds)
      *
     D xxsrfl          s                   like(d1srfl)
     D xxsrds          s                   like(d1srds)
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkccyymmdd      s              8  0
     D wkwedt          s              8  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------

     Dlda             uds                  dtaara(*lda)
     D  ldcdyr                 1      4  0
     D  ldcdwk                 5      6  0
     D  ldfcymd                7     14  0
     D  ldtcymd               15     22  0
      *
     D  ldrpfl                23     23
     D  ldtfcd                24     28
     D  ldblank               29     30
      *
     D  ldfsbo                31     35
     D  ldptcd                36     40
     D  ldppcd                41     45
     D  ldcell                46     47  0
     D  ldfscd                48     52  0
     D  ldhgcd                53     59
     D  ldhgsn                60     66  0
     D  ldgtcd                67     67
      *
     D  ldbods                75    104
     D  ldptds               105    114
     D  ldppds               115    144
     D  ldfsnm               145    169
     D  ldgtds               170    184
     D  ldtfds               185    202
     D  ldrpds               264    298
      *
     D  ldsrfl               300    300
     D  ldsrds               301    308
      *
     D  ldemail              350    399
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4080k1
     C                   write     hp4080ec
     C                   exfmt     hp4080r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
     C                   other
      *
      * Always check security for business office
      *
     C                   exsr      $chkbo
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) week-ending date
      *   2) shipped vs reported head
      *   3) report
      *   4) production type
      *   5) production phase
      *   6) group type
      *   7) type of farm
      *   8) cell
      *   9) farm site
      *  10) hog group
      *
     C                   exsr      $wemdy
     C                   exsr      $srfl
     C                   exsr      $rpfl
     C                   exsr      $email
     C                   exsr      $ptcd
     C                   exsr      $ppcd
     C                   exsr      $gtcd
     C                   exsr      $tfcd
     C                   exsr      $cell
     C                   exsr      $fscd
     C                   exsr      $hgcd
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
      *
     C                   if        error = 0                                    If no error
     C                   if        *in44 = *off                                 If no F8
     C                   seton                                        44
     C                   else
     C                   if        *in08 = *on                                  If F8=submit
     C                   exsr      $proc1
     C                   endif                                                  If F8=submit
     C                   endif                                                  If no F8
     C                   else
     C                   setoff                                       44
     C                   endif                                                  If no error
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Saturday week-ending date
      *---------------------------------------------------------------
      *
     C     $wemdy        begsr
      *
     C                   select
     C                   when      d1wemdy = 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1wemdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1wemdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    wkwedt
      *
      * Check if date is a Saturday
      *
     C                   call      'HP8005'
     C                   parm                    wkwedt
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
     C                   if        xxabbrev <> 'Sat '                           If not Saturday
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09030'
     C                   endif
     C                   endif                                                  If not Saturday
      *
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Shipped vs Reported Head
      *----------------------------------------------------------------
      *
     C     $srfl         begsr
      *
     C                   move      *blank        d1srds
      *
     C                   select
     C                   when      d1srfl = 'S'
     C                   eval      d1srds = 'Shipped'
      *
     C                   when      d1srfl = 'R'
     C                   eval      d1srds = 'Reported'
     C                   other
      *
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09236'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Report
      *----------------------------------------------------------------
      *
     C     $rpfl         begsr
      *
     C                   move      *blank        d1rpds
      *
     C                   select
     C                   when      d1rpfl = 'D'
     C                   eval      d1rpds = 'Download By Phase/Cell/Farm'
      *
     C                   when      d1rpfl = 'C'
     C                   eval      d1rpds = 'Report By Phase/Cell/Farm'
      *
     C                   when      d1rpfl = 'V'
     C                   eval      d1rpds = 'Report By Phase/Ending Inventory +
     C                                       Variance'
     C                   other
      *
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09043'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Email address
      *----------------------------------------------------------------
      *
     C     $email        begsr
      *
     C                   if        d1rpfl = 'D' and d1email = *blank
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate production type
      *----------------------------------------------------------------
      *
     C     $ptcd         begsr
      *
     C                   move      *blank        d1ptds
      *
     C                   select
     C                   when      d1ptcd <> *blank
     C     d1ptcd        chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1ptds
     C                   else
     C                   seton                                        32
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ptcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate production phase
      *----------------------------------------------------------------
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        d1ppds
      *
     C                   select
     C                   when      d1ppcd = 'BGF  '
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00392'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     MGW           mgdt(e)
     C                   endif
      *
     C                   when      d1ppcd <> *blank
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1ppds
     C                   else
     C                   seton                                        33
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Group Type
      *----------------------------------------------------------------
      *
     C     $gtcd         begsr
      *
     C                   move      *blank        d1gtds
      *
     C                   if        d1gtcd <> *blank                             If group type
     C     d1gtcd        chain     hsp025                             92
     C                   if        *in92 = *off                                 If hit
     C                   movel     gtgtds        d1gtds
     C                   else
      *
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00137'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1gtcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endif                                                  If group type
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Type of Farm
      *----------------------------------------------------------------
      *
     C     $tfcd         begsr
      *
     C                   move      *blank        d1tfds
      *
     C                   if        d1tfcd <> *blank                             If type of farm
     C     d1tfcd        chain     hsp101                             92
     C                   if        *in92 = *off                                 If hit
     C                   movel     tftfds        d1tfds
     C                   else
      *
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01167'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1tfcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endif                                                  If type of farm
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Check the business office
      *---------------------------------------------------------------
      *
     C     $chkbo        begsr
      *
      * Set the 'Validate B.O.' flag depending on whether the user left
      * business office blank to get all business offices or entered a
      * specific office.
      *
     C                   if        d1fsbo = *blank
     C                   move      all           inbofl
     C                   else
     C                   move      yes           inbofl
     C                   endif
      *
      * Check the user's security to the buisness office.  Set the INDVFL flag
      * to YES to tell the security program to compare the function division
      * code to the B.O. division code.
      *
     C                   move      yes           indvfl
     C                   exsr      $sec
     C                   move      no            indvfl
      *
     C                   movel     oubods        d1bods
      *
     C                   if        oubofl = yes
     C                   seton                                        31
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Farm Site
      *----------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select                                                 Big select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Cannot be a BGF farm site
      *
     C                   if        fsppcd = 'BGF  '                             If BGF farm
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09092'
     C                   endif
     C                   endif                                                  If BGF farm
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1cell <> 0 and                              If cell mismatch
     C                             fscell <> d1cell
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
      * Must match business office if user keyed one
      *
     C                   if        d1fsbo <> *blank and                         If business
     C                             fsfsbo <> d1fsbo
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     d1fsbo        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If business
      *
      *
      * Must match Type of Farm if user keyed one
      *
     C                   if        d1tfcd <> *blank and                         If type of farm
     C                             fstfcd <> d1tfcd
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01159'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fstfcd        mgw(6)
     C                   movea     d1tfcd        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If type of farm
      *
     C                   endif                                                  If bad farm
     C                   endsl                                                  Big select
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate hog group
      *----------------------------------------------------------------
      *
     C     $hgcd         begsr
      *
     C                   z-add     0             ldhgsn
      *
     C                   select
     C                   when      d1hgcd = *blank
     C                   other
      *
     C     d1hgcd        chain     hsp034                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00261'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   if        hgppcd = 'BGF  '                             If BGF
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09093'     mgid(e)
     C                   endif
     C                   endif                                                  If BGF
      *
     C                   if        hggscd = 'VD'                                If voided
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09096'     mgid(e)
     C                   endif
     C                   endif                                                  If voided
      *
      * Check for match on Business Office
      *
     C                   if        d1fsbo <> *blank and
     C                             *in31 = *off and
     C                             d1fsbo <> hgfsbo
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00459'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     hgfsbo        mgw(8)
     C                   movea     d1fsbo        mgw(13)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for match on Production Type
      *
     C                   if        d1ptcd <> *blank and
     C                             *in32 = *off and
     C                             d1ptcd <> hgptcd
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00463'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     hgptcd        mgw(8)
     C                   movea     d1ptcd        mgw(13)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for match on Production Phase
      *
     C                   if        d1ppcd <> *blank and
     C                             *in33 = *off and
     C                             d1ppcd <> hgppcd
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00462'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     hgppcd        mgw(8)
     C                   movea     d1ppcd        mgw(13)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for match on Group Type
      *
     C                   if        d1gtcd <> *blank and
     C                             *in34 = *off and
     C                             d1gtcd <> hggtcd
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00458'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     hggtcd        mgw(8)
     C                   movea     d1gtcd        mgw(9)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for match on cell
      *
     C                   if        d1cell <> 0 and                              If cell entry
     C                             *in37 = *off
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *off and fscell <> d1cell            If mismatch
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00706'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(10)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If mismatch
     C                   endif                                                  If cell entry
      *
      *
      * Check for match on farm
      *
     C                   if        d1fscd <> 0 and
     C                             *in35 = *off and
     C                             d1fscd <> hgfscd
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00820'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   move      hgfscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(8)
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(13)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endsl
      *
      * Populate LDA with Hog Group number if appropriate
      *
     C                   if        *in36 = *off and d1hgcd <> *blank
     C                   z-add     hghgsn        ldhgsn
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
     C                   select
      *
      * Report
     C                   when      fld = 'D1RPFL'
     C                   call      'HP5019'
     C                   parm      *blank        xxrpfl
     C                   parm      *blank        xxrpds
     C                   seton                                        50
     C                   if        xxrpfl <> *blank
     C                   movel     xxrpfl        d1rpfl
     C                   movel     xxrpds        d1rpds
     C                   endif
      *
      * Shipped vs Reported
      *
     C                   when      fld = 'D1SRFL'
     C                   call      'HP5062'
     C                   parm      *blank        xxsrfl
     C                   parm      *blank        xxsrds
     C                   seton                                        49
     C                   if        xxsrfl <> *blank
     C                   movel     xxsrfl        d1srfl
     C                   movel     xxsrds        d1srds
     C                   endif
      *
      * Business office
     C                   when      fld = 'D1FSBO'
     C                   call      'HP503'
     C                   parm      *blank        xxfsbo
     C                   parm      *blank        xxbods
     C                   parm                    svdvcd
     C                   seton                                        51
     C                   if        xxfsbo <> *blank
     C                   movel     xxfsbo        d1fsbo
     C                   movel     xxbods        d1bods
     C                   endif
      *
      * Production type
      *
     C                   when      fld = 'D1PTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        52
     C                   if        xxptcd <> *blank
     C                   movel     xxptcd        d1ptcd
     C                   movel     xxptds        d1ptds
     C                   endif
      *
      * Production phase
      *
     C                   when      fld = 'D1PPCD'
     C                   call      'HP596'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        53
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1ppcd
     C                   movel     xxppds        d1ppds
     C                   endif
      *
      * Group type
     C                   when      fld = 'D1GTCD'
     C                   call      'HP531'
     C                   parm      *blank        xxgtcd
     C                   parm      *blank        xxgtds
     C                   seton                                        54
     C                   if        xxgtcd <> *blank
     C                   movel     xxgtcd        d1gtcd
     C                   movel     xxgtds        d1gtds
     C                   endif
      *
      * Type of farm
     C                   when      fld = 'D1TFCD'
     C                   call      'HP5018'
     C                   parm      *blank        xxtfcd
     C                   parm      *blank        xxtfds
     C                   seton                                        59
     C                   if        xxtfcd <> *blank
     C                   movel     xxtfcd        d1tfcd
     C                   movel     xxtfds        d1tfds
     C                   endif
      *
      * Farm site
     C                   when      fld = 'D1FSCD'
     C                   call      'HP551'
     C                   parm      d1fsbo        xxfsbo
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   parm      d1ppcd        xxppcd
     C                   parm      d1ptcd        xxptcd
     C                   seton                                        55
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
      *
      * Hog group
     C                   when      fld = 'D1HGCD'
     C                   call      'HP5002'
     C                   parm      d1fsbo        xxfsbo
     C                   parm      d1fscd        xxfscd
     C                   parm      d1ppcd        xxppcd
     C                   parm      *blank        xxhgcd
     C                   seton                                        56
     C                   if        xxhgcd <> *blank
     C                   move      xxhgcd        d1hgcd
     C                   endif
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Using the Saturday week-ending date, calculate the Sunday week-beginning date.
      *
     C                   z-add     wkwedt        ldtcymd
     C     *iso          move      ldtcymd       wkisodate
     C     wkisodate     subdur    6:*d          wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    ldfcymd
      *
      * Retrieve the Calendar Year/Week associated with this Saturday date.
      *
     C                   call      'HP8010'
     C                   parm                    wkwedt
     C     ldcdyr        parm      0             xxcdyr
     C     ldcdwk        parm      0             xxcdwk
      *
      * Populate remainder of LDA fields.
      *
     C                   move      *blank        ldblank
     C                   move      d1srfl        ldsrfl
     C                   move      d1srds        ldsrds
     C                   move      d1rpfl        ldrpfl
     C                   move      d1email       ldemail
      *
     C                   move      d1fsbo        ldfsbo
     C                   move      d1ptcd        ldptcd
     C                   move      d1ppcd        ldppcd
     C                   move      d1gtcd        ldgtcd
     C                   move      d1tfcd        ldtfcd
     C                   z-add     d1cell        ldcell
     C                   z-add     d1fscd        ldfscd
     C                   move      d1hgcd        ldhgcd
      *
     C                   move      d1rpds        ldrpds
     C                   move      d1bods        ldbods
     C                   move      d1ptds        ldptds
     C                   move      d1ppds        ldppds
     C                   move      d1fsnm        ldfsnm
     C                   move      d1gtds        ldgtds
     C                   move      d1tfds        ldtfds
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm      d1fsbo        inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm                    oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      * Initialize LDA fields
      *
     C                   z-add     0             ldcdyr
     C                   z-add     0             ldcdwk
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   z-add     0             ldcell
     C                   z-add     0             ldfscd
     C                   z-add     0             ldhgsn
      *
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      *
      * Execute the security routine to determine the user's authorizations.
      *
     C                   movel     no            inbofl
     C                   exsr      $sec
     C                   movel     yes           inbofl
      *
      * If errors on the initial call, set the terminal flag to yes.
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
      * Save the function's division code
      *
     C                   movel     oudvcd        svdvcd
      *
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4080CL)) JOB(WKACTVAR) JOBQ(__________)
