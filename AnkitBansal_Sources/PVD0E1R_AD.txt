// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVD0E1R
// ?Date: 14.08.2025 Time: 03:51:56
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PGM.*Program mode = PAR.*Program mode
PGM.*Program_mode = PAR.*Program_mode;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?USER: Initialize detail screen (existing record)

//?Update Table & Field Gen Name if they are blank
CASE;

// IF DB1.Table Gen Name is Blanks
IF DB1.Table_Gen_Name = *BLANK;

// OR DB1.Field Gen Name is Blanks
OR DB1.Field_Gen_Name = *BLANK;

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('BOTH');
PARAMETER(DTL.Model_Library);
PARAMETER(DTL.Table_Name);
PARAMETER(DTL.Field_Long_Name);
PARAMETER(DTL.Table_Gen_Name);
PARAMETER(DTL.Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(LCL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?Update Ref Table & Ref Field Gen Name if they are blank and fn key = Y
CASE;

// IF DB1.Foreign Key is Yes
IF DB1.Foreign_Key = 'Y';

// AND DB1.Referenced Table Gen Name is Blanks
AND ( DB1.Referenced_Table_Gen_Name = *BLANK;

// OR DB1.Referenced Field Gen Name is Blanks
OR DB1.Referenced_Field_Gen_Name = *BLANK );

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('BOTH');
PARAMETER(DB1.Model_Library);
PARAMETER(DTL.Referenced_Table);
PARAMETER(DTL.Referenced_Field);
PARAMETER(DTL.Referenced_Table_Gen_Name);
PARAMETER(DTL.Referenced_Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?USER: Delete DBF record

EXECUTE FUNCTION(Delete DDL Table Configur) TYPE(DLTOBJ) FILE(PVBVREP)          AC2221178;

//?USER: Validate detail screen fields

//?Primary Key Validation
CASE;

// IF DTL.Primary Key is Yes
IF DTL.Primary_Key = 'Y';

// AND DTL.Primary Key Name is eq blank
AND DTL.Primary_Key_Name = *BLANK;

// DTL.Primary Key Name = CONCAT(CON.PK_,DTL.Table Name,CON.*ZERO)
DTL.Primary_Key_Name = 'PK_' + DTL.Table_Name (*ZERO);

ENDIF;

//?Foreign Key Validation
CASE;

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

//?Referenced Table is required for a foreign key
CASE;

// IF DTL.Referenced Table is Blanks
IF DTL.Referenced_Table = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Referenced_Table);

ENDIF;

//?Populate Foreign Key Name
CASE;

// IF DTL.Foreign Key Name is Blank
IF DTL.Foreign_Key_Name = *BLANK;

// AND DTL.Referenced Table is Entered
AND DTL.Referenced_Table <> *BLANK;

// DTL.Foreign Key Name = CONCAT(CON.FK_,DTL.Table Name,CON.*ZERO)
DTL.Foreign_Key_Name = 'FK_' + DTL.Table_Name (0);

// DTL.Foreign Key Name = CONCAT(DTL.Foreign Key Name,CON._,CON.*ZERO)
DTL.Foreign_Key_Name = DTL.Foreign_Key_Name + '_' (0);

// DTL.Foreign Key Name = CONCAT(DTL.Foreign Key Name,DTL.Referenced Table,CON.*ZERO)
DTL.Foreign_Key_Name = DTL.Foreign_Key_Name + DTL.Referenced_Table (*ZERO);

ENDIF;

//?By default populate referenced field as the current field-user can update
CASE;

// IF DTL.Referenced Field is Blank
IF DTL.Referenced_Field = *BLANK;

// DTL.Referenced Field = DTL.Field Long Name
DTL.Referenced_Field = DTL.Field_Long_Name;

ENDIF;

ENDIF;

//?Update Table Name, Field Name and populate their Gen Name
CASE;

// IF DTL.Table Gen Name is Blanks
IF DTL.Table_Gen_Name = *BLANK;

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('BOTH');
PARAMETER(DTL.Model_Library);
PARAMETER(DTL.Table_Name);
PARAMETER(DTL.Field_Long_Name);
PARAMETER(DTL.Table_Gen_Name);
PARAMETER(DTL.Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?Update Ref Table Name, Ref Field Name and populate their Gen Name
CASE;

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Referenced Table is Entered
AND DTL.Referenced_Table <> *BLANK;

// AND DTL.Referenced Field is Entered
AND DTL.Referenced_Field <> *BLANK;

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('BOTH');
PARAMETER(DTL.Model_Library);
PARAMETER(DTL.Referenced_Table);
PARAMETER(DTL.Referenced_Field);
PARAMETER(DTL.Referenced_Table_Gen_Name);
PARAMETER(DTL.Referenced_Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?Format The Primary Key Name
CASE;

// IF DTL.Primary Key is Yes
IF DTL.Primary_Key = 'Y';

// AND DTL.Primary Key Name is Entered
AND DTL.Primary_Key_Name <> *BLANK;

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('PRIMARYKEY');
PARAMETER(DTL.Model_Library);
PARAMETER(LCL.Referenced_Table);
PARAMETER(LCL.Referenced_Field);
PARAMETER(NLL.Table_Gen_Name);
PARAMETER(NLL.Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(LCL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?Format Foreign Key Name
CASE;

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Foreign Key Name is Entered
AND DTL.Foreign_Key_Name <> *BLANK;

// Call program UpdateName&GetGenName  EX.
CALL PROGRAM(UpdateName&GetGenName  EX) ('PVD6UPR');
PARAMETER('FOREIGNKEY');
PARAMETER(DTL.Model_Library);
PARAMETER(LCL.Referenced_Table);
PARAMETER(LCL.Referenced_Field);
PARAMETER(NLL.Table_Gen_Name);
PARAMETER(NLL.Field_Gen_Name);
PARAMETER(LCL.Primary_Key_Name);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(PGM.*Return_code);

ENDIF;

//?USER: Validate detail screen relations

CASE;

// IF DTL.Table Gen Name is Blanks
IF DTL.Table_Gen_Name = *BLANK;

// AND NOT DTL.Table Name is Global
AND ! DTL.Table_Name = 'GLOBAL';

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Table_Gen_Name);

// IF DTL.Field Gen Name is Blanks
IF DTL.Field_Gen_Name = *BLANK;

// AND NOT DTL.Table Name is Global
AND ! DTL.Table_Name = 'GLOBAL';

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Field_Gen_Name);

// IF DTL.Primary Key is Yes
IF DTL.Primary_Key = 'Y';

// AND DTL.Primary Key Name is eq blank
AND DTL.Primary_Key_Name = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Primary_Key_Name);

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Foreign Key Name is Blank
AND DTL.Foreign_Key_Name = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Foreign_Key_Name);

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Referenced Table is Blanks
AND DTL.Referenced_Table = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Referenced_Table);

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Referenced Field is Blank
AND DTL.Referenced_Field = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Referenced_Field);

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Referenced Table Gen Name is Blanks
AND DTL.Referenced_Table_Gen_Name = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Referenced_Table_Gen_Name);

// IF DTL.Foreign Key is Yes
IF DTL.Foreign_Key = 'Y';

// AND DTL.Referenced Field Gen Name is Blanks
AND DTL.Referenced_Field_Gen_Name = *BLANK;

// Send error message - 'Value Required'
ERROR(USR1852);
MSGPARM(DTL.Referenced_Field_Gen_Name);

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Create DDL Table Configur) TYPE(CRTOBJ) FILE(PVBVREP)          AC2221176;
PARAMETER(DTL.Model_Library);
PARAMETER(DTL.Table_Name);
PARAMETER(DTL.Field_Long_Name);
PARAMETER(DTL.Field_DataType);
PARAMETER(DTL.Field_Length);
PARAMETER(DTL.Field_Length_Dec_Pos);
PARAMETER(DTL.Primary_Key);
PARAMETER(DTL.Foreign_Key);
PARAMETER(DTL.Unique_Key);
PARAMETER(DTL.Allow_Null);
PARAMETER(DTL.Generate_As_Identity);
PARAMETER(DTL.Generate_as_Row_Change_TS);
PARAMETER(DTL.Table_Gen_Name);
PARAMETER(DTL.Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(DTL.Primary_Key_Seq);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(DTL.Foreign_Key_Seq);
PARAMETER(DTL.Referenced_Table);
PARAMETER(DTL.Referenced_Field);
PARAMETER(DTL.Referenced_Table_Gen_Name);
PARAMETER(DTL.Referenced_Field_Gen_Name);
PARAMETER(DTL.Default_Value);
PARAMETER(DTL.Comment_On_Table);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Created_By);
PARAMETER(DTL.Created_Dt_Tm);
PARAMETER(DTL.Updated_By);
PARAMETER(DTL.Updated_Dt_Tm);

//?USER: Change DBF record

EXECUTE FUNCTION(Change DDL Table Configur) TYPE(CHGOBJ) FILE(PVBVREP)          AC2221177;
PARAMETER(DTL.Model_Library);
PARAMETER(DTL.Table_Name);
PARAMETER(DTL.Field_Long_Name);
PARAMETER(DTL.Field_DataType);
PARAMETER(DTL.Field_Length);
PARAMETER(DTL.Field_Length_Dec_Pos);
PARAMETER(DTL.Primary_Key);
PARAMETER(DTL.Foreign_Key);
PARAMETER(DTL.Unique_Key);
PARAMETER(DTL.Allow_Null);
PARAMETER(DTL.Generate_As_Identity);
PARAMETER(DTL.Generate_as_Row_Change_TS);
PARAMETER(DTL.Table_Gen_Name);
PARAMETER(DTL.Field_Gen_Name);
PARAMETER(DTL.Primary_Key_Name);
PARAMETER(DTL.Primary_Key_Seq);
PARAMETER(DTL.Foreign_Key_Name);
PARAMETER(DTL.Foreign_Key_Seq);
PARAMETER(DTL.Referenced_Table);
PARAMETER(DTL.Referenced_Field);
PARAMETER(DTL.Referenced_Table_Gen_Name);
PARAMETER(DTL.Referenced_Field_Gen_Name);
PARAMETER(DTL.Default_Value);
PARAMETER(DTL.Comment_On_Table);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Created_By);
PARAMETER(DTL.Created_Dt_Tm);
PARAMETER(DTL.Updated_By);
PARAMETER(DTL.Updated_Dt_Tm);

