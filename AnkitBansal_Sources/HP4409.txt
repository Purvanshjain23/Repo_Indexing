      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP4409
      * TITLE:       Specify Options for Sire Line Listing
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/31/05
      *
      * FUNCTION: Allows user to enter report options and submit job.
      *
      * NOTE: This is a pop-up window program. Please note that in
      *       window programs the record format containing the window
      *       definition must be written first. So, we write the error
      *       message subfile control record first followed by the
      *       command line record format. This is opposite of the non-window
      *       programs.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/14/10  LeAnne Ramsey  (E1079)
      *           Sire Line Company is now 2-characters instead of 1.
      *           Adjusted positions in messsage parms.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4409   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp098    if   e           k disk
      *    Sire lines
      *
      *
     Fhsl098a   if   e           k disk    rename(sirec:sireca)
      *    Sire lines
      *
      *
     Fhsl098b   if   e           k disk    rename(sirec:sirecb)
      *    Sire lines
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      *
      * Parms
      *
     D xxlistcd        s                   like(d1listcd)
     D xxlistds        s                   like(d1listds)
     D xxsicomp        s                   like(d1sicomp)
     D xxprime         s                   like(d1prime)
     D xxsicd          s                   like(d1sicd)
     D xxaist          s                   like(d1aist)
     D xxalphprime     s              3a
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      *  Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4409ec
     C                   write     hp4409k1
     C                   exfmt     hp4409r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in08 = *on                                  F3-exit
     C                   exsr      $edit1
     C                   if        error = 0
     C                   movel     '08'          rtncd
     C                   eval      routne = exit
     C                   else
     C                   eval      routne = scrn1
     C                   endif
     C                   other
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) Sort sequence
      *   2) Sire line code
      *   3) Sire line company
      *   4) Prime line
      *
     C                   exsr      $listcd
     C                   exsr      $sicd
     C                   exsr      $sicomp
     C                   exsr      $prime
      *
      * Trim leading blanks on Report Grouping fields.
      *
     C                   eval      d1gg0 = %triml(d1gg0)
     C                   eval      d1gg1 = %triml(d1gg1)
     C                   eval      d1gg2 = %triml(d1gg2)
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Sort Sequence
      *---------------------------------------------------------------
      *
     C     $listcd       begsr
      *
     C                   move      *blank        d1listds
      *
     C                   select
     C                   when      d1listcd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1listcd = 'S'
     C                   eval      d1listds = 'By Sire Line'
      *
     C                   when      d1listcd = 'R'
     C                   eval      d1listds = 'By Cognos Report Grouping/-
     C                             Sire Line'
      *
     C                   when      d1listcd = 'C'
     C                   eval      d1listds = 'By Sire Line Company/Prime Line'
      *
     C                   when      d1listcd = 'P'
     C                   eval      d1listds = 'By Prime Line/Sire Line Company'
     C                   other

     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01221'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Sire Line Code
      *---------------------------------------------------------------
      *
     C     $sicd         begsr
      *
     C                   select
     C                   when      d1sicd = *blank
     C                   other
      *
     C     d1sicd        chain     hsp098                             92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01153'
     C                   movea     d1sicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
      *
      * Compare the Sire Line status to the User's selected status
      *
     C                   if        d1aist <> *blank and                         If unmatched
     C                             siaist <> d1aist
     C                   seton                                        3235
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01223'
     C                   movea     siaist        mgw(1)
     C                   movea     d1aist        mgw(2)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If unmatched
      *
      *
      * Compare the Sire Line's "Company" to the User's selected "Company".
      *
     C                   if        d1sicomp <> *blank and                       If company
     C                             sisicomp <> d1sicomp
     C                   seton                                        3233
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01224'
     C                   movea     sisicd        mgw(1)
     C                   movea     sisicomp      mgw(6)
     C                   movea     d1sicomp      mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If company
      *
      *
      * Compare the Sire Line's "Prime Line" to the User's selection.
      *
     C                   if        d1prime <> 0 and                             If prime
     C                             siprime <> d1prime
     C                   seton                                        3234
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01225'
     C                   movea     sisicd        mgw(1)
     C                   movel     siprime       xxalphprime
     C                   movea     xxalphprime   mgw(6)
     C                   movel     d1prime       xxalphprime
     C                   movea     xxalphprime   mgw(9)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If company
     C                   endif                                                  If no hit
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Sire Line Company
      *---------------------------------------------------------------
      *
     C     $sicomp       begsr
      *
     C                   select
     C                   when      d1sicomp = *blank
     C                   other
      *
     C     d1sicomp      chain     hsl098a                            92
     C                   if        *in92 = *on                                  If no hit
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01158'
     C                   movea     d1sicomp      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Prime Line
      *---------------------------------------------------------------
      *
     C     $prime        begsr
      *
     C                   select                                                 Select 1
     C                   when      d1prime = 0
      *
     C                   when      d1prime < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     d1prime       chain     hsl098b                            92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01147'
     C                   move      d1prime       xxalphprime
     C                   movea     xxalphprime   mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not found
     C                   endsl                                                  Select 1
      *
      *
      *
      * If the user has entered both a Company and a Prime Line, check that
      * the combination exists in the Sire Line Master.
      *
     C                   if        *in33 = *off and *in34 = *off and            If OK so far
     C                             d1sicomp <> *blank and
     C                             d1prime <> 0
      *
     C     key01         chain     hsl098a                            92
     C                   select                                                 Select 2
     C                   when      *in92 = *on
     C                   seton                                        3334
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01148'
     C                   clear                   mgw
     C                   movea     d1sicomp      mgw(1)
     C                   movel     d1prime       xxalphprime
     C                   movea     xxalphprime   mgw(3)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   other
      *
      * Compare the record status to the User's selected status
      *
     C                   if        d1aist <> *blank and                         If unmatched
     C                             siaist <> d1aist
     C                   seton                                        333435
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01222'
     C                   movea     siaist        mgw(1)
     C                   movea     d1aist        mgw(2)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If unmatched
     C                   endsl                                                  Select 2
      *
     C                   endif                                                  If OK so far
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Sort sequence
     C                   select
     C                   when      fld = 'D1LISTCD'
     C                   call      'HP5052'
     C                   parm      *blank        xxlistcd
     C                   parm      *blank        xxlistds
     C                   seton                                        51
     C                   if        xxlistcd <> *blank
     C                   move      xxlistcd      d1listcd
     C                   move      xxlistds      d1listds
     C                   endif
      *
      * Sire line code
     C                   when      fld = 'D1SICD'
     C                   call      'HP5016'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxsicd
     C                   seton                                        52
     C                   if        xxsicd <> *blank
     C                   movel     xxsicd        d1sicd
     C                   endif
      *
      * Sire line company
     C                   when      fld = 'D1SICOMP'
     C                   call      'HP5053'
     C                   parm      *blank        xxsicomp
     C                   seton                                        53
     C                   if        xxsicomp <> *blank
     C                   move      xxsicomp      d1sicomp
     C                   endif
      *
      * Prime line
     C                   when      fld = 'D1PRIME'
     C                   call      'HP5054'
     C                   parm      0             xxprime
     C                   seton                                        54
     C                   if        xxprime <> 0
     C                   move      xxprime       d1prime
     C                   endif
      *
      * Active/inactive status
     C                   when      fld = 'D1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        55
     C                   if        xxaist <> *blank
     C                   move      xxaist        d1aist
     C                   endif
      *
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    d1listcd
     C                   parm                    d1listds
     C                   parm                    d1sicd
     C                   parm                    d1sicomp
     C                   parm                    d1prime
     C                   parm                    d1aist
     C                   parm                    d1gg0
     C                   parm                    d1gg1
     C                   parm                    d1gg2
     C                   parm                    rtncd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1sicomp
     C                   kfld                    d1prime
      *
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * This window logic keeps the screen in the calling program from being
      * cleared.
      *
     C                   write     assume
      *
     C                   endsr
      /eject
