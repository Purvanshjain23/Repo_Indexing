      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP740
      * TITLE:       VIEW HOG GROUP
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     04/06/94
      *
      * FUNCTION: USES AN VIEW RECORD FORMAT TO VIEW A HOG GROUP
      *
      *           THIS PROGRAM IS CALLED FROM HP440 - WORK WITH
      *           HOG GROUPS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 04/26/00  LeAnne Fedor
      *           Added group type to screen.
      *
      * 08/01/00  LeAnne Fedor
      *           Removed genetic line description from screen.
      *
      * 02/21/01  LeAnne Fedor
      *           Added production type code and description to screen.
      *
      * 07/18/01  LeAnne Fedor
      *           Added feed group code/description to screen. This new field is only
      *           valued for BGF groups.
      *
      * 07/22/02  LeAnne Fedor
      *           Added production phase code and description to screen.
      *
      * 11/26/02  LeAnne Fedor
      *           Added 'stocking density' and 'stayed/moved' codes and descriptions.
      *           Removed 'building description' and 'breed stock description' in an attempt
      *           to make the screen more readable.
      *
      * 05/13/09  LeAnne Ramsey
      *           Added logic to retrieve any overrides the user may have entered for
      *           a group.
      *
      * 07/06/09  LeAnne Ramsey
      *           Added new field 'Continuous Flow Flag' (Hog Group file) to screen.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD740    CF   E             WORKSTN INFDS(IOFEED)
      *
      *
     FHSP010    IF   E           K DISK
      *    Productoin type
      *
      *
     FHSP011    IF   E           K DISK
      *    Production phase
      *
      *
     FHSP017    IF   E           K DISK
      *    Feed group
      *
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
      *
     FHSP025    IF   E           K DISK
      *    GROUP TYPE
      *
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP
      *
      *
     FHSP056    IF   E           K DISK
      *  SEX
      *
      *
     Fhsp105    if   e           k disk
      *    Stocking density
      *
      *
     Fhsp106    if   e           k disk
      *    Stayed/moved codes
      *
      *
     Fhsp130    if   e           k disk
      *    Group overrides
      *
      /eject
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'HPHGSN'
      *---------------------------------------------------------------
     D                 DS
     D  DAHGSN                 1      7  0
     D  HGSN                   1      7  0
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   Z-ADD     0             DFFSCD
     C                   MOVE      *BLANK        DFFSNM
     C                   MOVE      *BLANK        DFBLCD
     C                   MOVE      *BLANK        DFRMCD
     C                   MOVE      *BLANK        DFGTCD
     C                   MOVE      *BLANK        DFGTDS
     C                   MOVE      *BLANK        DFSDCD
     C                   MOVE      *BLANK        DFSDDS
     C                   MOVE      *BLANK        DFSMCD
     C                   MOVE      *BLANK        DFSMDS
     C                   MOVE      *BLANK        DFSXCD
     C                   MOVE      *BLANK        DFSXDS
     C                   MOVE      *BLANK        DFFGCD
     C                   MOVE      *BLANK        DFFGDS
     C                   MOVE      *BLANK        DFCFFL
     C                   Z-ADD     0             DFOBFS
     C                   MOVE      *BLANK        DFOBNM
     C                   Z-ADD     0             DFONFS
     C                   MOVE      *BLANK        DFONNM
     C                   MOVE      *BLANK        DFBSCD
     C                   MOVE      *BLANK        DFGNCD
     C                   Z-ADD     0             DFCRDT
     C                   Z-ADD     0             DFOPDT
     C                   Z-ADD     0             DFDSDT
     C                   Z-ADD     0             DFCLDT
     C                   Z-ADD     0             DFVDDT
      *
      * RETRIEVE THE HOG GROUP RECORD USING THE CODE PASSED IN.
      *
     C     DFHGCD        CHAIN     HSP034                             90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     HGHGCD        DFHGCD
     C                   Z-ADD     HGHGSN        DFHGSN
     C                   MOVEL     HGPTCD        DFPTCD
     C                   MOVEL     HGPPCD        DFPPCD
     C                   MOVEL     HGGSCD        DFGSCD
     C                   Z-ADD     HGFSCD        DFFSCD
     C                   MOVEL     HGBLCD        DFBLCD
     C                   MOVEL     HGRMCD        DFRMCD
     C                   MOVEL     HGGTCD        DFGTCD
     C                   MOVEL     HGSDCD        DFSDCD
     C                   MOVEL     HGSMCD        DFSMCD
     C                   MOVEL     HGSXCD        DFSXCD
     C                   MOVEL     HGFGCD        DFFGCD
     C                   MOVEL     HGCFFL        DFCFFL
     C                   Z-ADD     HGOBFS        DFOBFS
     C                   Z-ADD     HGONFS        DFONFS
     C                   MOVEL     HGBSCD        DFBSCD
     C                   MOVEL     HGGNCD        DFGNCD
     C                   Z-ADD     HGADOI        DFADOI
     C                   Z-ADD     HGADOO        DFADOO
      *
      * Retrieve any "overrides" that the user may have entered for this
      * group.
      *
     C     hghgsn        chain     hsp130                             92
     C                   if        *in92 = *off
     C                   z-add     goobfs        dfobfs
     C                   z-add     goonfs        dfonfs
     C                   endif
      *
     C                   if        dfgscd = 'VD'
     C                   seton                                        65
     C                   endif
      *
      * EXECUTE THE SUBROUTINE TO RETRIEVE VARIOUS 'DESCRIPTIONS' TO
      * DISPLAY ON THE SCREEN.
      *
     C                   EXSR      $DESC1
      *
      * FLIP THE DATES FROM CCYYMMDD TO MMDDYY FOR DISPLAY PURPOSES
      *
     C                   EXSR      $FLIP1
     C                   ELSE
      *
      * HOG GROUP NOT FOUND
      *
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00262'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
      *
      * SET THE ROUTINE TO DISPLAY THE SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP740K1
     C                   WRITE     HP740EC
     C                   EXFMT     HP740R1
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * RETRIEVE VARIOUS DESCRIPTIONS FOR SCREEN1
      *---------------------------------------------------------------
      *
     C     $DESC1        BEGSR
      *
      * RETRIEVE FARM SITE DESCRIPTION
      *
     C     DFFSCD        CHAIN     HSP018                             96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FSFSNM        DFFSNM
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFFSNM
     C                   ENDIF                                                  IF FOUND
      *
      *
      * RETRIEVE PRODUCTION TYPE DESCRIPTION
      *
     C     DFPTCD        chain     HSP010                             92
     C                   if        *IN92 = *off                                 IF HIT
     C                   movel     PTPTDS        DFPTDS
     C                   else
     C                   movel(P)  'UNKNOWN'     DFPTDS
     C                   endif                                                  IF HIT
      *
      * RETRIEVE PRODUCTION PHASE DESCRIPTION
      *
     C     dfppcd        chain     HSP011                             92
     C                   if        *IN92 = *off                                 IF HIT
     C                   movel     PPPPDS        DFPPDS
     C                   else
     C                   movel(P)  'UNKNOWN'     DFPTDS
     C                   endif                                                  IF HIT
      *
      *
      * RETRIEVE GROUP TYPE DESCRIPTION
      *
     C                   if        DFGTCD <> *blank
     C     DFGTCD        chain     HSP025                             92
     C                   if        *IN92 = *off                                 IF FOUND
     C                   movel     GTGTDS        DFGTDS
     C                   else
     C                   movel(P)  'UNKNOWN'     DFGTDS
     C                   endif                                                  IF FOUND
     C                   endif                                                  IF FOUND
      *
      * RETRIEVE STOCKING DENSITY DESCRIPTION
      *
     C                   if        DFSDCD <> *blank
     C     DFSDCD        chain     HSP105                             92
     C                   if        *IN92 = *off                                 IF FOUND
     C                   movel     SDSDDS        DFSDDS
     C                   else
     C                   movel(P)  'UNKNOWN'     DFSDDS
     C                   endif                                                  IF FOUND
     C                   endif
      *
      *
      * RETRIEVE STAYED/MOVED CODE DESCRIPTION
      *
     C                   if        DFSMCD <> *blank
     C     DFSMCD        chain     HSP106                             92
     C                   if        *IN92 = *off                                 IF FOUND
     C                   movel     SMSMDS        DFSMDS
     C                   else
     C                   movel(P)  'UNKNOWN'     DFSMDS
     C                   endif                                                  IF FOUND
     C                   endif
      *
      *
      * RETRIEVE SEX DESCRIPTION
      *
     C     DFSXCD        IFNE      *BLANK
     C     DFSXCD        CHAIN     HSP056                             96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     SXSXDS        DFSXDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFSXDS
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF
      *
      * RETRIEVE FEED GROUP DESCRIPTION
      *
     C     DFFGCD        IFNE      *BLANK
     C     DFFGCD        CHAIN     HSP017                             96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FGFGDS        DFFGDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFFGDS
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF
      *
      * RETRIEVE ORIGIN BGF FARM SITE NAME
      *
     C     DFOBFS        IFNE      0
     C     DFOBFS        CHAIN     HSP018                             96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FSFSNM        DFOBNM
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFOBNM
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF
      *
      * RETRIEVE ORIGIN NURSERY FARM SITE NAME
      *
     C     DFONFS        IFNE      0
     C     DFONFS        CHAIN     HSP018                             96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FSFSNM        DFONNM
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFONNM
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      ********************************************************************
      * FLIP DATES FROM CCYYMMDD TO MMDDYY
      ********************************************************************
      *
     C     $FLIP1        BEGSR
      *
      * Create Date
      *
     C     *iso          test(d)                 hgcrdt                 92
     C                   if        *in92 = *off
     C                   move      hgcrdt        wkisodate
     C     *mdy          move      wkisodate     dfcrdt
     C                   endif
      *
      *
      * Opened Date
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off
     C                   move      hgopdt        wkisodate
     C     *mdy          move      wkisodate     dfopdt
     C                   endif
      *
      * Disposed Date
      *
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *off
     C                   move      hgdsdt        wkisodate
     C     *mdy          move      wkisodate     dfdsdt
     C                   endif
      *
      * Closed Date
      *
     C     *iso          test(d)                 hgcldt                 92
     C                   if        *in92 = *off
     C                   move      hgcldt        wkisodate
     C     *mdy          move      wkisodate     dfcldt
     C                   endif
      *
      * Voided Date
      *
     C     *iso          test(d)                 hgvddt                 92
     C                   if        *in92 = *off
     C                   move      hgvddt        wkisodate
     C     *mdy          move      wkisodate     dfvddt
     C                   endif
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * FARM BUILDING
      *
     C     K2P019        KLIST
     C                   KFLD                    DFFSCD
     C                   KFLD                    DFBLCD
      *
      * ROOMS
      *
     C     K3P020        KLIST
     C                   KFLD                    DFFSCD
     C                   KFLD                    DFBLCD
     C                   KFLD                    DFRMCD
      *
      * PARM LISTS
      *     MODE IS THE MODE COMING IN FROM THE WORK WITH.
      *     THE USER CAN COME IN IN REVISE MODE AND TAKE F11=DELETE
      *     WHICH WILL CHANGE THE PROCESSING TO THE 'DELETE' ACTION.
      *
     C     *ENTRY        PLIST
     C                   PARM                    DFFSBO
     C                   PARM                    DFBODS
     C                   PARM                    DFHGCD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
