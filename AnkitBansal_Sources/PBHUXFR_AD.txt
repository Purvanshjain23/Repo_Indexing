// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBHUXFR
// ?Date: 14.08.2025 Time: 03:48:03
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV TPM CoLoc Ship LinsIF) TYPE(EXCINTFUN)                     AC2062463;
PARAMETER(PAR.TPM_Facility_Type);
PARAMETER(PAR.Shipping_Line);
PARAMETER(PAR.Port_Delv_Terminal);
PARAMETER(PAR.TPM_Location_Code);
PARAMETER(PAR.Record_Selected_USR);
PARAMETER(PAR.Shipping_Line_1_USR);
PARAMETER(PAR.Shipping_Line_2_USR);
PARAMETER(PAR.Shipping_Line_3_USR);
PARAMETER(PAR.Shipping_Line_4_USR);
PARAMETER(PAR.Shipping_Line_5_USR);
PARAMETER(PAR.Shipping_Line_6_USR);
PARAMETER(PAR.Shipping_Line_7_USR);
PARAMETER(PAR.Shipping_Line_8_USR);
PARAMETER(PAR.Shipping_Line_9_USR);
PARAMETER(PAR.Shipping_Line_10_USR);
PARAMETER(PAR.Shipping_Line_11_USR);
PARAMETER(PAR.Shipping_Line_12_USR);
PARAMETER(PAR.Port_Delv_Terminal_USR_1);
PARAMETER(PAR.Port_Delv_Terminal_USR_2);
PARAMETER(PAR.Port_Delv_Terminal_USR_3);
PARAMETER(PAR.Port_Delv_Terminal_USR_4);
PARAMETER(PAR.Port_Delv_Terminal_USR_5);
PARAMETER(PAR.Port_Delv_Terminal_USR_6);
PARAMETER(PAR.Port_Delv_Terminal_USR_7);
PARAMETER(PAR.Port_Delv_Terminal_USR_8);
PARAMETER(PAR.Port_Delv_Terminal_USR_9);
PARAMETER(PAR.Port_Delv_Terminal_USR_10);
PARAMETER(PAR.Port_Delv_Terminal_USR_11);
PARAMETER(PAR.Port_Delv_Terminal_USR_12);
PARAMETER(PAR.Count_USR);
{
 //?Execute internal function

 CASE;

 // IF PAR.TPM Location Code is ENTERED
 IF PAR.TPM_Location_Code <> *BLANK;

 // PAR.Record Selected       USR = CND.no
 PAR.Record_Selected_USR = 'N';

 EXECUTE FUNCTION(RTV TPM CoLoc Ship LinsRT) TYPE(RTVOBJ) FILE(PDLCREP)          AC2062449;
 PARAMETER(PAR.Shipping_Line);
 PARAMETER(PAR.Port_Delv_Terminal);
 PARAMETER(PAR.TPM_Location_Code);
 PARAMETER(PAR.TPM_Facility_Type);
 PARAMETER(PAR.Shipping_Line_1_USR);
 PARAMETER(PAR.Shipping_Line_2_USR);
 PARAMETER(PAR.Shipping_Line_3_USR);
 PARAMETER(PAR.Shipping_Line_4_USR);
 PARAMETER(PAR.Shipping_Line_5_USR);
 PARAMETER(PAR.Shipping_Line_6_USR);
 PARAMETER(PAR.Shipping_Line_7_USR);
 PARAMETER(PAR.Shipping_Line_8_USR);
 PARAMETER(PAR.Shipping_Line_9_USR);
 PARAMETER(PAR.Shipping_Line_10_USR);
 PARAMETER(PAR.Shipping_Line_11_USR);
 PARAMETER(PAR.Shipping_Line_12_USR);
 PARAMETER(PAR.Port_Delv_Terminal_USR_1);
 PARAMETER(PAR.Port_Delv_Terminal_USR_2);
 PARAMETER(PAR.Port_Delv_Terminal_USR_3);
 PARAMETER(PAR.Port_Delv_Terminal_USR_4);
 PARAMETER(PAR.Port_Delv_Terminal_USR_5);
 PARAMETER(PAR.Port_Delv_Terminal_USR_6);
 PARAMETER(PAR.Port_Delv_Terminal_USR_7);
 PARAMETER(PAR.Port_Delv_Terminal_USR_8);
 PARAMETER(PAR.Port_Delv_Terminal_USR_9);
 PARAMETER(PAR.Port_Delv_Terminal_USR_10);
 PARAMETER(PAR.Port_Delv_Terminal_USR_11);
 PARAMETER(PAR.Port_Delv_Terminal_USR_12);
 PARAMETER(PAR.Record_Selected_USR);
 PARAMETER(PAR.Count_USR);
 {
  //?USER: Initialize routine

  // PAR.Record Selected       USR = CND.no
  PAR.Record_Selected_USR = 'N';

  // PAR.Count USR = CON.*ZERO
  PAR.Count_USR = *ZERO;

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  // PAR.Record Selected       USR = CND.no
  PAR.Record_Selected_USR = 'N';

  // PAR.Shipping Line 1 USR = PAR.Shipping Line
  PAR.Shipping_Line_1_USR = PAR.Shipping_Line;

  // PAR.Port Delv Terminal USR 1 = PAR.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_1 = PAR.Port_Delv_Terminal;

  //?USER: Process Data record

  //?Pass back all customers except matching, to prevent duplicates
  //?Put Ship Line & Port from the screen into the 1st position
  //?Select only active Ship Line records
  CASE;

  // IF PAR.Shipping Line is entered
  IF PAR.Shipping_Line <> *BLANK;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Shipping Line 1 USR = PAR.Shipping Line
  PAR.Shipping_Line_1_USR = PAR.Shipping_Line;

  // PAR.Port Delv Terminal USR 1 = PAR.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_1 = PAR.Port_Delv_Terminal;

  ENDIF;

  //?Populate the assigned Shipping Lines and Delivery Ports
  CASE;

  // IF PAR.Shipping Line 1 USR is Not Entered
  IF PAR.Shipping_Line_1_USR = *BLANK;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 1 USR = DB1.Shipping Line
  PAR.Shipping_Line_1_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 1 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_1 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.1
  PAR.Count_USR = 1;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 2 USR is Not Entered
  IF PAR.Shipping_Line_2_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 2 USR = DB1.Shipping Line
  PAR.Shipping_Line_2_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 2 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_2 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.2
  PAR.Count_USR = 2;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 3 USR is Not Entered
  IF PAR.Shipping_Line_3_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 3 USR = DB1.Shipping Line
  PAR.Shipping_Line_3_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 3 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_3 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.3
  PAR.Count_USR = 3;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 4 USR is Not Entered
  IF PAR.Shipping_Line_4_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 4 USR = DB1.Shipping Line
  PAR.Shipping_Line_4_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 4 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_4 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.4
  PAR.Count_USR = 4;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 5 USR is Not Entered
  IF PAR.Shipping_Line_5_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 5 USR = DB1.Shipping Line
  PAR.Shipping_Line_5_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 5 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_5 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.5
  PAR.Count_USR = 5;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 6 USR is Not Entered
  IF PAR.Shipping_Line_6_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 6 USR = DB1.Shipping Line
  PAR.Shipping_Line_6_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 6 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_6 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.6
  PAR.Count_USR = 6;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 7 USR is Not Entered
  IF PAR.Shipping_Line_7_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 7 USR = DB1.Shipping Line
  PAR.Shipping_Line_7_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 7 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_7 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.7
  PAR.Count_USR = 7;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 8 USR is Not Entered
  IF PAR.Shipping_Line_8_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 8 USR = DB1.Shipping Line
  PAR.Shipping_Line_8_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 8 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_8 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.8
  PAR.Count_USR = 8;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 9 USR is Not Entered
  IF PAR.Shipping_Line_9_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 9 USR = DB1.Shipping Line
  PAR.Shipping_Line_9_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 9 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_9 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.9
  PAR.Count_USR = 9;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 10 USR is Not Entered
  IF PAR.Shipping_Line_10_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 10 USR = DB1.Shipping Line
  PAR.Shipping_Line_10_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 10 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_10 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.10
  PAR.Count_USR = 10;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 11 USR is Not Entered
  IF PAR.Shipping_Line_11_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 11 USR = DB1.Shipping Line
  PAR.Shipping_Line_11_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 11 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_11 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.11
  PAR.Count_USR = 11;

  //?Populate the assigned Shipping Lines and Delivery Ports
  // IF PAR.Shipping Line 12 USR is Not Entered
  IF PAR.Shipping_Line_12_USR = *BLANK;

  // AND DB1.Shipping Line NE PAR.Shipping Line
  AND DB1.Shipping_Line <> PAR.Shipping_Line;

  // AND DB1.Record Status is Active
  AND DB1.Record_Status = 'A';

  // PAR.Shipping Line 12 USR = DB1.Shipping Line
  PAR.Shipping_Line_12_USR = DB1.Shipping_Line;

  // PAR.Port Delv Terminal USR 12 = DB1.Port Delv Terminal
  PAR.Port_Delv_Terminal_USR_12 = DB1.Port_Delv_Terminal;

  // PAR.Record Selected       USR = CND.yes
  PAR.Record_Selected_USR = 'Y';

  // PAR.Count USR = CON.12
  PAR.Count_USR = 12;

  ENDIF;

 }

 ENDIF;

}


