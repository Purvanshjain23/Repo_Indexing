// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDOOXFR
// ?Date: 14.08.2025 Time: 03:29:08
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Whse Dft Load Typ RT) TYPE(RTVOBJ) FILE(CAADREP)           AC2146564;
PARAMETER(PAR.Warehouse_Code);
PARAMETER(LCL.WHS_Default_Load_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.WHS Default Load Type is Bulk
IF LCL.WHS_Default_Load_Type = 'B';

EXECUTE FUNCTION(RTV Chg Prod/Lbl Dt   RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC2146563;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Actual_Shipped_Date);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Label Date is not entered
 IF DB1.Label_Date = *ZERO;

 // LCL.Label Date = PAR.Actual Shipped Date
 LCL.Label_Date = PAR.Actual_Shipped_Date;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Label Date = DB1.Label Date
 LCL.Label_Date = DB1.Label_Date;

 ENDIF;

 CASE;

 // IF DB1.Production Date is not entered
 IF DB1.Production_Date = *ZERO;

 // LCL.Production Date = PAR.Actual Shipped Date
 LCL.Production_Date = PAR.Actual_Shipped_Date;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Production Date = DB1.Production Date
 LCL.Production_Date = DB1.Production_Date;

 ENDIF;

 EXECUTE FUNCTION(CHG OM Manifest Detail CH) TYPE(CHGOBJ) FILE(OMFNCPP)          AC1402363;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
 PARAMETER(DB1.Case_Quantity);
 PARAMETER(DB1.Case_Weight);
 PARAMETER(DB1.Inventory_Updated_Flag);
 PARAMETER(LCL.Label_Date);
 PARAMETER(DB1.PT_Serial_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Production_Date);
 PARAMETER(DB1.Manifest_Gross_Weight);
 PARAMETER(DB1.Manifest_Lot_ID);
 PARAMETER(DB1.Manifest_Total_Tare);
 PARAMETER(DB1.Manifest_Co_Park_Lot_Nbr);
 PARAMETER(DB1.Manifest_Pallet_Number);
 PARAMETER(DB1.Manifest_Shift);
 PARAMETER(DB1.HPB_Meter_Net_Gallon);
 PARAMETER(DB1.Manifest_Net_Weight_Kg);
 PARAMETER(DB1.Manifest_Unused_Status_1A);
 PARAMETER(DB1.Manifest_Unused_Status_2A);
 PARAMETER(DB1.Manifest_Unused_Date);
 PARAMETER(DB1.HPB_COA_Batch_Number);
 PARAMETER(DB1.HPB_Meter_Start_Gallon);
 PARAMETER(DB1.HPB_Meter_Ending_Gallon);
 PARAMETER(DB1.HPB_Meter_Total_Gallon);
 PARAMETER(DB1.HPB_Meter_Net_Weight);
 PARAMETER(DB1.HPB_Density_Ref_Gravity);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 PARAMETER(*MISSING);
 PARAMETER(WRK.USR_Update_Flag);
 PARAMETER(LCL.COA_RIN_Modified_Sts);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing after Data update

  // PAR.USR Update Flag = CND.Yes
  PAR.USR_Update_Flag = 'Y';

  // PAR.COA RIN Modified Sts = CND.yes
  PAR.COA_RIN_Modified_Sts = 'Y';

 }

}


ENDIF;

//?WI517 DN 10/03/23-Added 'Called From Program' as Input Parm.
//?- Added 'Send Email f/Failed API U' Output Parm.
EXECUTE FUNCTION(UPD Inv From Shipping  RT) TYPE(RTVOBJ) FILE(OMFNCPP)          AC1358178;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.U_M_Ordered);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Billing_Activity_Type);
PARAMETER(PAR.To_Warehouse_Code_USR);
PARAMETER(PAR.Inter_Plant_Transfer_USR);
PARAMETER(PAR.Called_From_Program);
PARAMETER(PAR.Send_Email_f_Failed_API_U);
{
 //?USER: Initialize routine

 // PAR.First Time Flag = CND.Yes
 PAR.First_Time_Flag = 'Y';

 // PAR.Quantity Shipped Total = CON.*ZERO
 PAR.Quantity_Shipped_Total = *ZERO;

 // PAR.Weight Shipped Total = CON.*ZERO
 PAR.Weight_Shipped_Total = *ZERO;

 // PAR.Weight Billed = CON.*ZERO
 PAR.Weight_Billed = *ZERO;

 // PAR.Shift Number = CON.1
 PAR.Shift_Number = 1;

 // Call program RTV System Date/Time   UP.
 CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(LCL.Current_System_Time);

 //?WI517 DN 10/04/23-Initialize Flags.
 // LCL.API was Called? U = CND.No
 LCL.API_was_Called_U = 'N';

 // LCL.Inventory Updated USR = CND.No
 LCL.Inventory_Updated_USR = 'N';

 // LCL.First Time Through USR = CND.Yes
 LCL.First_Time_Through_USR = 'Y';

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?Set production date for break usage & rtv item info
 CASE;

 // IF PAR.First Time Flag is Yes
 IF PAR.First_Time_Flag = 'Y';

 // PAR.Production Date = DB1.Production Date
 PAR.Production_Date = DB1.Production_Date;

 // PAR.Manifest Lot ID = DB1.Manifest Lot ID
 PAR.Manifest_Lot_ID = DB1.Manifest_Lot_ID;

 // PAR.Label Date = DB1.Label Date
 PAR.Label_Date = DB1.Label_Date;

 EXECUTE FUNCTION(Rtv Base Values        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1125011;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Description_Line_One);
 PARAMETER(PAR.Description_Line_Two);
 PARAMETER(PAR.UOM_Primary);
 PARAMETER(PAR.Conversion_Factor_1);
 PARAMETER(PAR.Operation_Factor_1);
 PARAMETER(PAR.UOM_Second);
 PARAMETER(PAR.Conversion_Factor_2);
 PARAMETER(PAR.Operation_Factor_2);
 PARAMETER(PAR.UOM_Third);
 PARAMETER(PAR.UOM_Pricing);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Production_Date_Control);
 PARAMETER(PAR.Catch_Weight_Status);
 PARAMETER(WRK.Fresh_Chilling_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Set unit of measure for cost
 CASE;

 // IF PAR.Catch Weight Status is yes
 IF PAR.Catch_Weight_Status = 'Y';

 // PAR.U/M - Cost = CND.Pounds
 PAR.UOM_Cost = 'LB';

 //?Set unit of measure for cost
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.U/M - Cost = PAR.U/M - Primary
 PAR.UOM_Cost = PAR.UOM_Primary;

 ENDIF;

 // WRK.Order Number Alpha = CVTVAR(PAR.Order Number)
 WRK.Order_Number_Alpha = CVTVAR(PAR.Order_Number);

 // WRK.Description 14A      USR = CON.Confirm Order
 WRK.Description_14A_USR = 'Confirm Order';

 // PAR.Description = CONCAT(WRK.Description 14A      USR,WRK.Order Number Alpha,CON
 PAR.Description = WRK.Description_14A_USR + WRK.Order_Number_Alpha (1);

 // PAR.First Time Flag = CND.NO
 PAR.First_Time_Flag = 'N';

 ENDIF;

 //?When production date changes update inventory files
 CASE;

 // IF PAR.Production Date NE DB1.Production Date
 IF PAR.Production_Date <> DB1.Production_Date;

 // OR PAR.Manifest Lot ID NE DB1.Manifest Lot ID
 OR PAR.Manifest_Lot_ID <> DB1.Manifest_Lot_ID;

 //?Perform updates
 CASE;

 // IF PAR.Billing Activity Type is Invoice
 IF PAR.Billing_Activity_Type = '1';

 //?WI517 DN 07/07/23-Added 'Upd Both Legacy & WIM USR=Y',
 //?  Added 'Inventory Updated USR', 'API was Called? U' &
 //?  'Called From Program' Parms.
 // Call program Upd Balances Issue/Adj XF.
 CALL PROGRAM(Upd Balances Issue/Adj XF) ('PDQRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER('I');
 PARAMETER('IO');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(PAR.Production_Date);
 PARAMETER('OP');
 PARAMETER(PAR.Description);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Manifest_Lot_ID);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Shift_Number);
 PARAMETER(PAR.Label_Date);
 PARAMETER(PAR.Weight_Shipped_Total);
 PARAMETER(PAR.Quantity_Shipped_Total);
 PARAMETER('N');
 PARAMETER('Y');
 PARAMETER(LCL.Inventory_Updated_USR);
 PARAMETER(LCL.API_was_Called_U);
 PARAMETER(PAR.Called_From_Program);

 //?WI517 DN 10/04/23-Set 'Send Email f/Failed API U' for Failed API Call.
 CASE;

 // IF LCL.API was Called? U is Yes
 IF LCL.API_was_Called_U = 'Y';

 // AND LCL.Inventory Updated USR is No
 AND LCL.Inventory_Updated_USR = 'N';

 // AND LCL.First Time Through USR is Yes
 AND LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // PAR.Send Email f/Failed API U = CND.Yes
 PAR.Send_Email_f_Failed_API_U = 'Y';

 ENDIF;

 //?Perform updates
 // IF PAR.Billing Activity Type is Warehouse Transfer
 IF PAR.Billing_Activity_Type = '4';

 //?WI517 DN 10/05/23-Added 'Inventory Updated USR', 'API was Called? U'
 //?  & 'Called From Program' Parms.
 // Call program Upd Balances Transfer  XF.
 CALL PROGRAM(Upd Balances Transfer  XF) ('PDQTXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER('T');
 PARAMETER('TW');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(PAR.Production_Date);
 PARAMETER('OP');
 PARAMETER(PAR.Description);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Shift_Number);
 PARAMETER(PAR.Label_Date);
 PARAMETER(PAR.USR_Warehouse_Code);
 PARAMETER(PAR.Weight_Shipped_Total);
 PARAMETER(PAR.Quantity_Shipped_Total);
 PARAMETER('N');
 PARAMETER(PAR.Inter_Plant_Transfer_USR);
 PARAMETER(LCL.Inventory_Updated_USR);
 PARAMETER(LCL.API_was_Called_U);
 PARAMETER(PAR.Called_From_Program);

 //?WI517 DN 10/05/23-Set 'Send Email f/Failed API U' for Failed API Call.
 CASE;

 // IF LCL.API was Called? U is Yes
 IF LCL.API_was_Called_U = 'Y';

 // AND LCL.Inventory Updated USR is No
 AND LCL.Inventory_Updated_USR = 'N';

 // AND LCL.First Time Through USR is Yes
 AND LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // PAR.Send Email f/Failed API U = CND.Yes
 PAR.Send_Email_f_Failed_API_U = 'Y';

 ENDIF;

 ENDIF;

 // PAR.Production Date = DB1.Production Date
 PAR.Production_Date = DB1.Production_Date;

 // PAR.Manifest Lot ID = DB1.Manifest Lot ID
 PAR.Manifest_Lot_ID = DB1.Manifest_Lot_ID;

 // PAR.Label Date = DB1.Label Date
 PAR.Label_Date = DB1.Label_Date;

 // PAR.Quantity Shipped Total = CON.*ZERO
 PAR.Quantity_Shipped_Total = *ZERO;

 // PAR.Weight Shipped Total = CON.*ZERO
 PAR.Weight_Shipped_Total = *ZERO;

 ENDIF;

 //?Add up quantity and weight for production date
 // PAR.Quantity Shipped Total = PAR.Quantity Shipped Total + DB1.Case Quantity
 PAR.Quantity_Shipped_Total = PAR.Quantity_Shipped_Total + DB1.Case_Quantity;

 // PAR.Weight Shipped Total = PAR.Weight Shipped Total + DB1.Case Weight
 PAR.Weight_Shipped_Total = PAR.Weight_Shipped_Total + DB1.Case_Weight;

 // PAR.Weight Billed = PAR.Weight Billed + DB1.Case Weight
 PAR.Weight_Billed = PAR.Weight_Billed + DB1.Case_Weight;

 //?RMC FP1110 HPB Processing: Create RIN, create Batch Hdr RIN,
 //? Update Batch Header last EEEEEEEE gallon field
 CASE;

 // IF DB1.HPB COA Batch Number is Entered
 IF DB1.HPB_COA_Batch_Number > *ZERO;

 // Call program Exc Upd from Shipping XF.
 CALL PROGRAM(Exc Upd from Shipping XF) ('PMQMXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.HPB_COA_Batch_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(DB1.HPB_Meter_Total_Gallon);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Item_Code);

 ENDIF;

 //?USER: Exit processing

 //?Update inventory for last production date read
 CASE;

 // IF PAR.Billing Activity Type is Invoice
 IF PAR.Billing_Activity_Type = '1';

 // WRK.USR Counter = PAR.Quantity Shipped Total
 WRK.USR_Counter = PAR.Quantity_Shipped_Total;

 // WRK.AS Box Quantity = CVTVAR(WRK.USR Counter)
 WRK.AS_Box_Quantity = CVTVAR(WRK.USR_Counter);

 //?WI517 DN 07/07/23-Added 'Upd Both Legacy & WIM USR=Y'.
 //?  Added 'Inventory Updated USR', 'API was Called? U' &
 //?  'Called From Program' Parms.
 // Call program Upd Balances Issue/Adj XF.
 CALL PROGRAM(Upd Balances Issue/Adj XF) ('PDQRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER('I');
 PARAMETER('IO');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(PAR.Production_Date);
 PARAMETER('OP');
 PARAMETER(PAR.Description);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Manifest_Lot_ID);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Shift_Number);
 PARAMETER(PAR.Label_Date);
 PARAMETER(PAR.Weight_Shipped_Total);
 PARAMETER(PAR.Quantity_Shipped_Total);
 PARAMETER('N');
 PARAMETER('Y');
 PARAMETER(LCL.Inventory_Updated_USR);
 PARAMETER(LCL.API_was_Called_U);
 PARAMETER(PAR.Called_From_Program);

 //?WI517 DN 10/04/23-Set 'Send Email f/Failed API U' for Failed API Call.
 CASE;

 // IF LCL.API was Called? U is Yes
 IF LCL.API_was_Called_U = 'Y';

 // AND LCL.Inventory Updated USR is No
 AND LCL.Inventory_Updated_USR = 'N';

 // AND LCL.First Time Through USR is Yes
 AND LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // PAR.Send Email f/Failed API U = CND.Yes
 PAR.Send_Email_f_Failed_API_U = 'Y';

 ENDIF;

 //?Update inventory for last production date read
 // IF PAR.Billing Activity Type is Warehouse Transfer
 IF PAR.Billing_Activity_Type = '4';

 //?WI517 DN 10/05/23-Added 'Inventory Updated USR', 'API was Called? U'
 //?  & 'Called From Program' Parms.
 // Call program Upd Balances Transfer  XF.
 CALL PROGRAM(Upd Balances Transfer  XF) ('PDQTXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER('T');
 PARAMETER('TW');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(PAR.Production_Date);
 PARAMETER('OP');
 PARAMETER(PAR.Description);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Shift_Number);
 PARAMETER(PAR.Label_Date);
 PARAMETER(PAR.USR_Warehouse_Code);
 PARAMETER(PAR.Weight_Shipped_Total);
 PARAMETER(PAR.Quantity_Shipped_Total);
 PARAMETER('N');
 PARAMETER(PAR.Inter_Plant_Transfer_USR);
 PARAMETER(LCL.Inventory_Updated_USR);
 PARAMETER(LCL.API_was_Called_U);
 PARAMETER(PAR.Called_From_Program);

 //?WI517 DN 10/05/23-Set 'Send Email f/Failed API U' for Failed API Call.
 CASE;

 // IF LCL.API was Called? U is Yes
 IF LCL.API_was_Called_U = 'Y';

 // AND LCL.Inventory Updated USR is No
 AND LCL.Inventory_Updated_USR = 'N';

 // AND LCL.First Time Through USR is Yes
 AND LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // PAR.Send Email f/Failed API U = CND.Yes
 PAR.Send_Email_f_Failed_API_U = 'Y';

 ENDIF;

 ENDIF;

}


