// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POUEXFR
// ?Date: 14.08.2025 Time: 03:39:03
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// Send status message - 'Processing...'
MESSAGE(USR2303 *STATUS);

//?* FP1054 get order date for call to UPS Schedule Prod     IF - Order
EXECUTE FUNCTION(RTV for Avail-To-Sell RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1921437;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Order_Type_Sales);
PARAMETER(LCL.Order_Date);
PARAMETER(LCL.Requested_Delivery_Date);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?* Allocate Production *
// LCL.Production Date = PAR.Production Date
LCL.Production_Date = PAR.Production_Date;

// LCL.Quantity Ordered = PAR.Qty Sched Ord USR
LCL.Quantity_Ordered = PAR.Qty_Sched_Ord_USR;

// LCL.Weight Ordered = PAR.Qty Sched Ord USR * PAR.Unit Weight *Rounded
LCL.Weight_Ordered = PAR.Qty_Sched_Ord_USR * PAR.Unit_Weight 'H';

// LCL.Quantity Scheduled = PAR.Qty Sched Prod USR
LCL.Quantity_Scheduled = PAR.Qty_Sched_Prod_USR;

// LCL.Weight Scheduled = PAR.Qty Sched Prod USR * PAR.Unit Weight *Rounded
LCL.Weight_Scheduled = PAR.Qty_Sched_Prod_USR * PAR.Unit_Weight 'H';

EXECUTE FUNCTION(UPS Schedule Prod     IF) TYPE(EXCINTFUN)                      AC1654137;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(LCL.Production_Date);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Item_Code);
PARAMETER(LCL.Order_Type_Sales);
PARAMETER(LCL.Requested_Delivery_Date);
PARAMETER(LCL.Quantity_Ordered);
PARAMETER(LCL.Weight_Ordered);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);
PARAMETER(PAR.OD_Adj_Type_Override);
PARAMETER(PAR.Item_Age_Days);
PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
PARAMETER(PAR.Production_Ovr_AgeDte_To);
PARAMETER(PAR.UOM_Primary);
PARAMETER(PAR.Unit_Weight);
PARAMETER(PAR.Fresh_Chilling_Time);
PARAMETER(PAR.Base_Conv_Loss_Item);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Piece_Count_Item);
PARAMETER(PAR.Pieces_Per_Bag);
PARAMETER(PAR.Bags_Per_Unit);
PARAMETER(PAR.Export_Domestic);
PARAMETER(PAR.Print_On_Schedule);
PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
PARAMETER(PAR.Fresh_Sched_As_Ordered);
PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
PARAMETER(PAR.Primal_Group_Code);
PARAMETER(PAR.Warehouse_Type);
PARAMETER(PAR.Warehouse_Std_Chill_Time);
PARAMETER(PAR.Warehouse_Chill_Time);
PARAMETER(PAR.WHS_Inventory_Chill_Time);
PARAMETER(LCL.Order_Date);
{
 //?Execute internal function

 // LCL.Production Date = PAR.OD Production Date
 LCL.Production_Date = PAR.OD_Production_Date;

 //?DONT 5/5/09***** DEALLOCATE ALL OF THE ORIGINAL VALUE *****
 //?***** ALLOCATE THE NEW QUANTITY *****
 // LCL.ATS Quantity Need USR = PAR.Quantity Ordered
 LCL.ATS_Quantity_Need_USR = PAR.Quantity_Ordered;

 // LCL.ATS Weight Need USR = PAR.Weight Ordered
 LCL.ATS_Weight_Need_USR = PAR.Weight_Ordered;

 CASE;

 // IF PAR.OD Adj Type Override is Alloc Inventory Last
 IF PAR.OD_Adj_Type_Override = 'L';

 // OR PAR.Warehouse Type is Frozen
 OR PAR.Warehouse_Type = 'FZ';

 //?RMC 2/3/14 added OR condition
 // LCL.ATS Adj Type USR = CND.Order Allocate-Inv Last
 LCL.ATS_Adj_Type_USR = 'OL';

 // IF PAR.OD Adj Type Override is Alloc Inventory First
 IF PAR.OD_Adj_Type_Override = 'F';

 // LCL.ATS Adj Type USR = CND.Order Allocate-Inv First
 LCL.ATS_Adj_Type_USR = 'OI';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ATS Adj Type USR = CND.Order Allocate
 LCL.ATS_Adj_Type_USR = 'OA';

 ENDIF;

 //?change pgm from ORDALC to SCHASORD
 // Call program UPD ATS Order Allocate XF.
 CALL PROGRAM(UPD ATS Order Allocate XF) ('PDCNXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Quantity_Ordered);
 PARAMETER(PAR.Weight_Ordered);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER(LCL.ATS_Adj_Type_USR);
 PARAMETER('SCHASORD');
 PARAMETER(LCL.ATS_Quantity_Need_USR);
 PARAMETER(LCL.ATS_Weight_Need_USR);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER('OA');
 PARAMETER(LCL.Production_Date);
 PARAMETER(LCL.Order_Date);
 PARAMETER(PAR.Order_Type_Sales);
 PARAMETER(PAR.Requested_Delivery_Date);
 PARAMETER(PAR.Item_Age_Days);
 PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
 PARAMETER(PAR.Production_Ovr_AgeDte_To);
 PARAMETER(PAR.UOM_Primary);
 PARAMETER(PAR.Fresh_Chilling_Time);
 PARAMETER(PAR.Base_Conv_Loss_Item);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Piece_Count_Item);
 PARAMETER(PAR.Pieces_Per_Bag);
 PARAMETER(PAR.Bags_Per_Unit);
 PARAMETER(PAR.Export_Domestic);
 PARAMETER(PAR.Print_On_Schedule);
 PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
 PARAMETER(PAR.Fresh_Sched_As_Ordered);
 PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
 PARAMETER(PAR.Primal_Group_Code);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.Warehouse_Std_Chill_Time);
 PARAMETER(PAR.Warehouse_Chill_Time);
 PARAMETER(PAR.WHS_Inventory_Chill_Time);
 PARAMETER(PAR.Item_Age_Days);
 PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
 PARAMETER(PAR.Production_Ovr_AgeDte_To);

}


//?* Hold Production Date Quantity Scheduled
// LCL.Quantity 7.0 USR = LCL.Quantity Scheduled
LCL.Quantity_7_0_USR = LCL.Quantity_Scheduled;

//?* Update Order Detail *
//?Calculate Order Detail Quantity Scheduled and Weight Scheduled
// LCL.Quantity Scheduled
LCL.Quantity_Scheduled = PAR.Quantity_Scheduled + LCL.Quantity_Scheduled;

// LCL.Weight Scheduled = LCL.Quantity Scheduled * PAR.Unit Weight *Rounded
LCL.Weight_Scheduled = LCL.Quantity_Scheduled * PAR.Unit_Weight 'H';

EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(LCL.Quantity_Scheduled);
PARAMETER(LCL.Weight_Scheduled);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


EXECUTE FUNCTION(Chg Schedule Override CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1934083;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER('Y');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?* Refresh Order Detail Values *
// PAR.Quantity Sched 5.0 USR = LCL.Quantity Scheduled
PAR.Quantity_Sched_5_0_USR = LCL.Quantity_Scheduled;

// PAR.Quantity Scheduled = LCL.Quantity Scheduled
PAR.Quantity_Scheduled = LCL.Quantity_Scheduled;

// PAR.Weight Scheduled = LCL.Weight Scheduled
PAR.Weight_Scheduled = LCL.Weight_Scheduled;

// PAR.Qty Sched Prod USR = LCL.Quantity Scheduled
PAR.Qty_Sched_Prod_USR = LCL.Quantity_Scheduled;

