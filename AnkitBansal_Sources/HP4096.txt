      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP4096
      * TITLE:       Specify Group Changes
      * PROGRAMMER:  Barb Gutierrez
      * CREATED:     11/11/03
      *
      * FUNCTION: This function allows IS personnel ONLY, to change a few selected
      *           values for a group. The original program changed Production Phase and
      *           Group Type.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/23/07  LeAnne Ramsey
      *           Lisa McBride needs "stocking density" changed on her Nursery WTF groups.
      *           So, added logic to allow entry of a "stocking density" value.
      *           We only allow a "stocking density" change for Nursery WTF groups.
      *
      * 02/06/08  LeAnne Ramsey
      *           Sami Wilson needs "production type" changed for a group. So, added this
      *           field/logic.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4096   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
     Fhsp105    if   e           k disk
      *    Stocking density
      *
      *
     Fhsp106    if   e           k disk
      *    Stayed/moved
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *---------------------------------------------------------------
      * TABLE AND ARRAY SPECIFICATIONS
      *---------------------------------------------------------------
      *
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D rtncd           s              2    inz('00')
      *
      *
      * Control/save fields
      *
     D svhgcd          s                   like(hghgcd)
      *
      *
      * Parm fields
      *
     D xxhgcd          s                   like(hghgcd)
     D xxfsbo          s                   like(hgfsbo)
     D xxfscd          s                   like(hgfscd)
      *
     D xxnppcd         s                   like(ppppcd)
     D xxnppds         s                   like(ppppds)
      *
     D xxngtcd         s                   like(gtgtcd)
     D xxngtds         s                   like(gtgtds)
      *
     D xxnptcd         s                   like(ptptcd)
     D xxnptds         s                   like(ptptds)
      *
     D xxnsdcd         s                   like(sdsdcd)
     D xxnsdds         s                   like(sdsdds)
      *
     D xxnsmcd         s                   like(smsmcd)
     D xxnsmds         s                   like(smsmds)
      *
      *
      *---------------------------------------------------------------------------
      * DATA STRUCTURES
      *---------------------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      ****************************************************************
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4096k1
     C                   write     hp4096ec
     C                   exfmt     hp4096r1
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   move      *blank        svhgcd
     C                   eval      routne = edit1
      *
     C                   when      *in08 = *on                                  F8-call
     C                   eval      routne = edit1
     C                   other
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) Hog group
      *   2) New production type
      *   3) New production phase
      *   4) New group type
      *   5) New stocking density
      *   6) New stayed/moved
      *
     C                   if        d1hgcd <> svhgcd or d1hgcd = *blank
     C                   exsr      $hgcd
     C                   endif
      *
     C                   exsr      $nptcd
     C                   exsr      $nppcd
     C                   exsr      $ngtcd
     C                   exsr      $nsdcd
     C                   exsr      $nsmcd
      *
      * You must have changed something; otherwise, what's the point..
      *
     C                   if        d1cptcd = d1nptcd and
     C                             d1cppcd = d1nppcd and
     C                             d1cgtcd = d1ngtcd and
     C                             d1csdcd = d1nsdcd and
     C                             d1csmcd = d1nsmcd
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00861'
     C                   endif
     C                   endif
      *
      * If there are no errors and F8=Call has been taken, execute the call.
      *
     C                   if        error = 0 and *in08 = *on
     C                   exsr      $proc1
     C                   endif
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate Hog Group
      *---------------------------------------------------------------
      *
     C     $hgcd         begsr
      *
      * Clear screen
     C                   exsr      $clear
      *
      * Validate
     C                   select
     C                   when      d1hgcd = *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1hgcd        chain     hsp034                             92
     C                   if        *in92 = *on                                  If bad group
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00261'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      hgppcd        d1cppcd
     C                   move      hgppcd        d1nppcd
      *
     C                   move      hggtcd        d1cgtcd
     C                   move      hggtcd        d1ngtcd
      *
     C                   move      hgptcd        d1cptcd
     C                   move      hgptcd        d1nptcd
      *
     C                   move      hgsdcd        d1csdcd
     C                   move      hgsdcd        d1nsdcd
      *
     C                   move      hgsmcd        d1csmcd
     C                   move      hgsmcd        d1nsmcd
      *
     C                   move      hggscd        d1gscd
     C                   z-add     hghgsn        d1hgsn
     C                   z-add     hgfscd        d1fscd
      *
      * Retrieve Descriptions:
      *
     C     d1cppcd       chain     hsp011                             92
     C                   if        *in92 = *off
     C                   move      ppppds        d1cppds
     C                   endif
      *
     C     d1cgtcd       chain     hsp025                             92
     C                   if        *in92 = *off
     C                   move      gtgtds        d1cgtds
     C                   endif
      *
     C     d1cptcd       chain     hsp010                             92
     C                   if        *in92 = *off
     C                   move      ptptds        d1cptds
     C                   endif
      *
     C     d1csdcd       chain     hsp105                             92
     C                   if        *in92 = *off
     C                   move      sdsdds        d1csdds
     C                   endif
      *
     C     d1csmcd       chain     hsp106                             92
     C                   if        *in92 = *off
     C                   move      smsmds        d1csmds
     C                   endif
     C                   endif                                                  If bad group
     C                   endsl
      *
     C                   move      d1hgcd        svhgcd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear screen fields
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   move      *blank        d1gscd
     C                   z-add     0             d1hgsn
     C                   z-add     0             d1hgsn
      * Current fields
     C                   move      *blank        d1cppcd
     C                   move      *blank        d1cppds
      *
     C                   move      *blank        d1cgtcd
     C                   move      *blank        d1cgtds
      *
     C                   move      *blank        d1cptcd
     C                   move      *blank        d1cptds
      *
     C                   move      *blank        d1csdcd
     C                   move      *blank        d1csdds
      *
     C                   move      *blank        d1csmcd
     C                   move      *blank        d1csmds
      * New fields
     C                   move      *blank        d1nppcd
     C                   move      *blank        d1nppds
      *
     C                   move      *blank        d1ngtcd
     C                   move      *blank        d1ngtds
      *
     C                   move      *blank        d1nptcd
     C                   move      *blank        d1nptds
      *
     C                   move      *blank        d1nsdcd
     C                   move      *blank        d1nsdds
      *
     C                   move      *blank        d1nsmcd
     C                   move      *blank        d1nsmds
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate new Production Phase
      *----------------------------------------------------------------
      *
     C     $nppcd        begsr
      *
     C                   move      *blank        d1nppds
      *
     C                   select
     C                   when      d1nppcd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1nppcd       chain     hsp011                             92
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1nppcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      d1cppcd <> d1nppcd
     C                   move      ppppds        d1nppds
     C                   endsl
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate New Group Type
      *----------------------------------------------------------------
      *
     C     $ngtcd        begsr
      *
     C                   move      *blank        d1ngtds
      *
     C                   select
     C                   when      d1nppcd = 'BGF  ' and d1ngtcd = 'W'
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00860'
     C                   endif
      *
     C                   when      d1ngtcd = *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1ngtcd       chain     hsp025                             92
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00137'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ngtcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      d1cgtcd <> d1ngtcd
     C                   move      gtgtds        d1ngtds
     C                   endsl
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate new Production Type
      *----------------------------------------------------------------
      *
     C     $nptcd        begsr
      *
     C                   move      *blank        d1nptds
      *
     C                   select
     C                   when      d1nptcd = *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1nptcd       chain     hsp010                             92
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1nptcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      d1cptcd <> d1nptcd
     C                   move      ptptds        d1nptds
     C                   endsl
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate New Stocking Density
      *---------------------------------------------------------------
      *
     C     $nsdcd        begsr
      *
     C                   move      *blank        d1nsdds
      *
     C                   select
      * BGF
     C                   when      d1nppcd = 'BGF  ' and d1nsdcd <> 'N'
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00859'     mgid(e)
     C                   endif
      * Wean-to-Finish
     C                   when      d1ngtcd = 'W'
     C                   if        d1nsdcd <> 'S' and d1nsdcd <> 'D'
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00849'     mgid(e)
     C                   endif
     C                   endif
     C                   other
      *
      * Not Wean-to-Finish
     C                   if        d1nsdcd <> 'N'
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00848'     mgid(e)
     C                   endif
     C                   endif
     C                   endsl
      *
      * Retrieve a description if there are no errors and the "new" code
      * is different from the "old" code.
      *
     C                   if        *in33 = *off and d1nsdcd <> d1csdcd
     C     d1nsdcd       chain     hsp105                             92
     C                   if        *in92 = *off
     C                   move      sdsdds        d1nsdds
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate New Stayed/Moved
      *---------------------------------------------------------------
      *
     C     $nsmcd        begsr
      *
     C                   move      *blank        d1nsmds
      *
     C                   select
     C                   when      d1ngtcd = 'W' and d1nppcd = 'NUR  '
     C                   if        d1nsmcd <> 'N'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00854'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   when      d1ngtcd = 'W' and d1nppcd = 'GF   '
     C                   if        d1nsmcd <> 'S' and d1nsmcd <> 'M'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00853'     mgid(e)
     C                   endif
     C                   endif
     C                   other
      *
      * Not Wean-to-Finish
     C                   if        d1nsmcd <> 'N'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00848'     mgid(e)
     C                   endif
     C                   endif
     C                   endsl
      *
      * Retrieve Description if there are no errors and it is different than the
      * current value.
      *
     C                   if        *in35 = *off and d1nsmcd <> d1csmcd
     C     d1nsmcd       chain     hsp106                             92
     C                   if        *in92 = *off
     C                   move      smsmds        d1nsmds
     C                   endif
     C                   endif
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Execute the change
      *---------------------------------------------------------------
      *
     C     $proc1        begsr
      *
     C                   call      'HP1096 '
     C                   parm      d1hgcd        xxhgcd
     C                   parm      d1nppcd       xxnppcd
     C                   parm      d1ngtcd       xxngtcd
     C                   parm      d1nptcd       xxnptcd
     C                   parm      d1nsdcd       xxnsdcd
     C                   parm      d1nsmcd       xxnsmcd
      *
      * Issue completed message
      *
     C                   add       1             error
     C                   movel     'HS09046'     mgid(e)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Hog group
     C                   select
     C                   when      fld = 'D1HGCD'
     C                   call      'HP566'
     C                   parm      *blank        xxfsbo
     C                   parm      0             xxfscd
     C                   parm      *blank        xxhgcd
     C                   seton                                        50
     C                   if        xxhgcd <> *blank
     C                   move      xxhgcd        d1hgcd
     C                   endif
      *
      * Production phase
     C                   when      fld = 'D1NPPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxnppcd
     C                   parm      *blank        xxnppds
     C                   seton                                        51
     C                   if        xxnppcd <> *blank
     C                   movel     xxnppcd       d1nppcd
     C                   movel     xxnppds       d1nppds
     C                   endif
      * Group type
     C                   when      fld = 'D1NGTCD'
     C                   call      'HP531'
     C                   parm      *blank        xxngtcd
     C                   parm      *blank        xxngtds
     C                   seton                                        52
     C                   if        xxngtcd <> *blank
     C                   move      xxngtcd       d1ngtcd
     C                   move      xxngtds       d1ngtds
     C                   endif
      *
      * Production type
     C                   when      fld = 'D1NPTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxnptcd
     C                   parm      *blank        xxnptds
     C                   seton                                        54
     C                   if        xxnptcd <> *blank
     C                   movel     xxnptcd       d1nptcd
     C                   movel     xxnptds       d1nptds
     C                   endif
      * Stocking density
     C                   when      fld = 'D1NSDCD'
     C                   call      'HP5024'
     C                   parm      *blank        xxnsdcd
     C                   parm      *blank        xxnsdds
     C                   seton                                        53
     C                   if        xxnsdcd <> *blank
     C                   move      xxnsdcd       d1nsdcd
     C                   move      xxnsdds       d1nsdds
     C                   endif
      *
      * Stayed/Moved
     C                   when      fld = 'D1NSMCD'
     C                   call      'HP5025'
     C                   parm      *blank        xxnsmcd
     C                   parm      *blank        xxnsmds
     C                   seton                                        55
     C                   if        xxnsmcd <> *blank
     C                   move      xxnsmcd       d1nsmcd
     C                   move      xxnsmds       d1nsmds
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *    None
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
