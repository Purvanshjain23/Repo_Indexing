      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP451
      * TITLE:       SPECIFY PRINT OPTIONS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     04/18/96
      *
      * FUNCTION: ALLOWS USER TO ENTER PRINT SELECTIONS AND
      *           RETURNS SELECTIONS TO CALLING PROGRAM.
      *
      * NOTE: THIS IS A POP-UP WINDOW PROGRAM. PLEASE NOTE THAT IN
      *       WINDOW PROGRAMS THE RECORD FORMAT CONTAINING THE WINDOW
      *       DEFINITION MUST BE WRITTEN FIRST. SO, WE WRITE THE
      *       ERROR MESSAGE SUBFILE CONTROL RECORD FIRST FOLLOWED BY
      *       THE COMMAND LINE RECORD FORMAT.  THIS IS OPPOSITE OF
      *       THE NON-WINDOW PROGRAMS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 02/02/00  LeAnne Fedor
      *           Changed outque validation to call a CLP that checks for
      *           existance of the object instead of checking against the
      *           HPS outque file (We are also deleting the file.)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD451    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS                 (KEY: FNFNCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     D                UDS
     D  LDOUTU               401    410
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAJOBQ'
      *---------------------------------------------------------------
     D                 DS
     D  DAJOBQ                 1     10
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT.
      *
     C                   WRITE     HP451EC
     C                   WRITE     HP451K1
     C                   EXFMT     HP451R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VALIDATE NUMBER OF COPIES
      *
     C     DFCOPY        IFEQ      0
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *   HOLD OUTPUT?
      *
     C     DFHOLD        IFNE      YES
     C     DFHOLD        ANDNE     NO
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *   SEND OUTPUT TO WHICH QUEUE
      *
     C     DFOUTQ        IFNE      *BLANK
     C                   call      'HPCHKOBJCL'
     C                   parm                    dfoutq
     C                   parm      '*OUTQ'       xxtype
     C                   parm      *blank        xxerror
     C                   if        xxerror = 'Y'                                If invalid
     C                   seton                                        35
     C                   if        error < maxmsg                               If issue msg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09111'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOUTQ        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   endif                                                  If issue msg
     C                   endif                                                  If invalid
     C                   ENDIF
      *
      *   RUN IN NIGHT JOBQ?
      *
     C     DFNITE        IFNE      YES
     C     DFNITE        ANDNE     NO
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $PROC1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      * IF JOB IS TO RUN IN NIGHT JOBQ, RETRIEVE THE JOBQ FROM DTAARA
      *
     C     DFNITE        IFEQ      YES
     C     *DTAARA       DEFINE                  DAJOBQ
     C                   IN        *DTAARA
     C                   MOVEL     DAJOBQ        IOJOBQ
     C                   ELSE
     C                   MOVEL(P)  '*JOBD'       IOJOBQ
     C                   ENDIF
      *
      * SET UP PARM FIELDS FOR RETURN BACK TO CALLING PROGRAM
      *
     C                   Z-ADD     DFCOPY        IOCOPY
     C                   MOVEL     DFHOLD        IOHOLD
     C                   MOVEL     DFOUTQ        IOOUTQ
     C                   MOVEL     DFNITE        IONITE
      *
     C                   MOVEL     EXIT          ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
      * HOLD OUTPUT
      *
     C                   SELECT
     C     FLD           WHENEQ    'DFHOLD'
     C                   CALL      'HP522'
     C                   PARM      *BLANK        XXHOLD
     C                   SETON                                        54
     C     XXHOLD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHOLD        DFHOLD
     C                   ENDIF                                                  IF SELECTED
      *
      * NIGHT JOBQ
      *
     C     FLD           WHENEQ    'DFNITE'
     C                   CALL      'HP522'
     C                   PARM      *BLANK        XXNITE
     C                   SETON                                        56
     C     XXNITE        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXNITE        DFNITE
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    IOFNCD           10
     C     DFCOPY        PARM                    IOCOPY
     C     DFHOLD        PARM                    IOHOLD
     C     DFOUTQ        PARM                    IOOUTQ
     C     DFNITE        PARM                    IONITE
     C                   PARM                    IOJOBQ           10
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXFSBO            5
     C                   MOVE      *BLANK        XXERROR           1
     C                   MOVE      *BLANK        XXTYPE           10
     C     *LIKE         DEFINE    DFHOLD        XXHOLD
     C     *LIKE         DEFINE    DFNITE        XXNITE
      *
     C     *LIKE         DEFINE    DFHOLD        IOHOLD
     C     *LIKE         DEFINE    DFOUTQ        IOOUTQ
     C     *LIKE         DEFINE    DFNITE        IONITE
     C     *LIKE         DEFINE    DFCOPY        IOCOPY
      *
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * IF THE INCOMING PARMS ARE BLANK, RETRIEVE THE
      * PRINT DEFAULTS FOR THE CALLING FUNCTION.
      *
     C     DFHOLD        IFEQ      *BLANK                                       IF BLANK
     C     IOFNCD        CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        DFCOPY
     C                   MOVEL     FNHOLD        DFHOLD
     C                   ENDIF
      *
     C     DFCOPY        IFEQ      0
     C                   Z-ADD     1             DFCOPY
     C                   ENDIF
      *
     C     DFHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            DFHOLD
     C                   ENDIF
      *
     C                   MOVEL     NO            DFNITE
      *
      * MOVE THE USER'S OUTQ FROM THE LDA TO DISPLAY
      *
     C                   MOVEL     LDOUTU        DFOUTQ
     C                   ENDIF                                                  IF BLANK
      *
      * THIS WINDOW LOGIC KEEPS THE SCREEN IN THE CALLING
      * PROGRAM FROM BEING CLEARED.
      *
     C                   WRITE     ASSUME
      *
     C                   ENDSR
      /EJECT
