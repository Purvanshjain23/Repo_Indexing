      *
      * ENVIRONMENT: PORK
      * SYSTEM:      ACCOUNT RECEIVABLE SYSTEM
      * PROGRAM:     AR362E
      * TITLE:       FOREIGN CORPORATE TAX SAVINGS
      *              WORKFILE: TAX SAVINGS ANALYSIS FILE FOR PC
      *              DOWNLOAD
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     10/24/97
      *
      *  FUNCTION:   THIS PROGRAM BUILDS A WORKFILE OF EXPORT ONLY
      *              SALES DATA TO BE DOWNLOADED TO A PC FOR
      *              TAX SAVINGS ANALYSIS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/23/98  BRUCE LAWSON - Database change to OMHSTPLA
      *                          Recompile only.
      *
      * 02/23/99  LEANNE FEDOR
      *           RECOMPILE ONLY. DATABASE CHANGES TO:
      *                OPBFCPP--PD ORDER HEADER
      *                OPBGWKP--PD ORDER DETAIL
      *                OMHSTPP--OM HISTORY
      *******************************************************************
      /EJECT
      *******************************************************************
      * FILE SPECIFICTIONS
      *******************************************************************
      *
     FARP309  IF  E           K        DISK
      *  COSTS UPLOADED FROM P.C. FILE (FROM LINDA BARR SPREADSHEETS)
      *
     FOEIP362EO   E           K        DISK
      *  WORKFILE: EXPORT SALES ONLY
      *
     FOMHSTPLAIF  E           K        DISK
      *  Order Management History
      *
      *******************************************************************
      * EXTENSION SPECIFICATIONS
      *******************************************************************
      *
      *******************************************************************
      * INPUT SPECS
      *******************************************************************
      *
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     I              'Y'                   C         YES
     I              'N'                   C         NO
      *
      *
      *---------------------------------------------------------------
      *  DATA STRUCTURES
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     IPGMDS     ESDSUTPGFR
      *
      *
      *---------------------------------------------------------------
      * DATA STRUCTURE FOR PEAT MARWICK 'PRODUCT CODE'
      *---------------------------------------------------------------
      *
      *
     I            DS
     I                                        1  15 WKCODE
     I                                        1   1 WKDIV
     I                                        2   3 WKTYPE
     I                                        4   5 WKGROU
     I                                        6   7 WKCLAS
     I                                        8  12 WKPROD
     I                                       13  15 WKINV
      *
      *
      /EJECT
      *******************************************************************
      * MAINLINE PROCESSING
      *******************************************************************
      *
      * PROCESS EACH RECORD IN THE OMS HISTORY FILE. PLEASE
      * NOTE THAT AN OPEN QUERY HAS ALREADY BEEN RUN TO SELECT
      * OUT ONLY THOSE RECORDS WHERE:
      *      1) ACCOUNTING YEAR EQUALS SELECTED YEAR
      *      2) EXPORT STATUS EQUALS YES
      *      3) INVOICE SUFFIX EQUALS 'IN'
      *
      *
     C           *IN90     DOUEQ*ON                        MAIN DO LOOP
     C                     READ OMHSTPLA                 90
     C           *IN90     IFEQ *OFF                       IF NOT EOF
      *
     C           FIRST     IFEQ YES
     C                     MOVELNO        FIRST
     C                     EXSR $PROD
     C                     ENDIF
      *
      * BREAK PROCESSING ON OMS PRODUCT CODE AND INVOICE. PLEASE NOTE
      * THAT ONLY 'FINISHED GOOD' PRODUCTS WILL BE IN THIS OMS HISTORY
      * FILE. AND, THE OMS SYSTEM FORCES A FINISHED GOOD PRODUCT
      * CODE TO BE 99999 OR LESS.  THEREFORE, WHEN WE TRUNCATE
      * PRODUCT CODE FROM 7,0 TO 5,0 FOR THE SPECIAL PEAT MARWICK
      * CONCATENATED CODE, WE WILL NOT RISK SUMMING TOGETHER
      * SALES RECORDS FROM DIFFERENT PRODUCT CODES!  HOWEVER, THE
      * OMS INVOICE NUMBER IS 7,0 WHILE PEAT MARWICK REQUIRES 5,0.
      * AT THE TIME THIS PROGRAM WAS WRITTEN, INVOICE NUMBERS IN OMS
      * WERE NOT EXCEEDING 99999. SO, WHILE THIS IS NOT A PROBLEM NOW
      * IT COULD BE COME A PROBLEM IN THE FUTURE.
      *
     C           SVS5NB    IFNE F4S5NB
     C           SVCONB    ORNE F4CONB
     C                     Z-ADDWKCAMT    WECAMT    H
     C                     WRITEOEIR362E
     C                     CLEAROEIR362E
     C                     EXSR $PROD
     C                     ENDIF
      *
      * DETAIL PROCESSING
      *
      *
      * PLEASE NOTE: TWO FIELDS (SALESMAN COMMISSION AND BROKER DOLLARS)
      * ARE NOT BEING POPULATED AT THIS TIME.  SO, ONLY SALES DOLLARS, COST
      * DOLLARS, AND FREIGHT DOLLARS ARE BEING ACCUMULATED FOR EACH OMS PRODUCT.
      *
      * FOR SALES DOLLARS, ACCUMULATE THE 'BILLING DETAIL GROSS DOLLARS'
      *
     C                     ADD  F4KDVA    WESAMT
      *
      *
      * FOR COST DOLLARS, RETRIEVE A COST RECORD FROM THE P.C. FILE
      * THAT HAS BEEN UPLOADED MANUALLY PRIOR TO RUNNING THIS FUNCTION.
      *
     C                     EXSR $COST
      *
      *
      * THE LOGIC FOR FREIGHT DOLLARS WILL ACCUMULATE THE FIRST FREIGHT
      * FIELD THAT HAS A VALUE. THE THREE FREIGHT AMOUNT FIELDS CHECKED
      * ARE:
      *     ACTUAL FREIGHT AMOUNT
      *     RATED FREIGHT
      *     ABSORBED FREIGHT AMOUNT
      *
      *
     C                     SELEC
     C           F4ONVA    WHNE 0
     C                     ADD  F4ONVA    WEFRGT
     C           F4R1NB    WHNE 0
     C                     ADD  F4R1NB    WEFRGT
     C           F4ULVA    WHNE 0
     C                     ADD  F4ULVA    WEFRGT
     C                     ENDSL
      *
     C                     ENDIF                           IF NOT EOF
     C                     ENDDO                           MAIN DO LOOP
      *
      *
      *---------------------------------------------------------------
      * EOF PROCESSING
      *---------------------------------------------------------------
      *
      * IF YOU PROCESSED ANY DATA, THEN DO LAST RECORD
      * PROCESSING.
      *
      *
     C           FIRST     IFEQ NO                         IF DATA
     C                     Z-ADDWKCAMT    WECAMT    H
     C                     WRITEOEIR362E
     C                     CLEAROEIR362E
     C                     ENDIF                           IF DATA
      *
     C                     SETON                     LR
      /EJECT
      *----------------------------------------------------------------
      * $PROD - SET UP 'PRODUCT CODE' REQUIRED BY PEAT MARWICK SOFTWARE
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE CREATES A CONCATENATED 'PRODUCT CODE' THAT IS
      * REQUIRED BY PEAT MARWICK SOFTWARE.  THE 'CODE' IS 15 CHARACTERS
      * LONG AND IS MADE UP OF SIX DIFFERENT FIELDS. WE HAVE TO TRUNCATE
      * MOST OF OUR PORK FIELDS TO MAKE THEM FIT!! THE VALUES FOR THE
      * 'PRODUCT CODE' ARE:
      *
      *  FIELD  NAME      SIZE  VALUE
      *   1     DIVISION   1    DEFAULT TO 'P' FOR PORK
      *   2     TYPE       2    TRUNCATE THE LAST DIGIT
      *   3     GROUP      2    TRUNCATE THE LAST DIGIT
      *   4     CLASS      2    TRUNCATE THE FIRST DIGIT
      *   5     PRODUCT    5    TRUNCATE THE FIRST TWO DIGITS OF SHIPPED
      *                         ITEM CODE
      *   6     INVOICE    3    LEAVE BLANK, PEAT MARWICK WILL POPULATE
      *
      *
     C           $PROD     BEGSR
      *
     C                     MOVE *BLANK    WKCODE
     C                     MOVE 'P'       WKDIV
     C                     MOVELF4RGNB    WKTYPE
     C                     MOVELF4RHNB    WKGROU
     C                     MOVE F4RINB    WKCLAS
     C                     MOVE F4S5NB    WKPROD
      *
     C                     MOVE WKCODE    WEPROD
     C                     Z-ADDF4CONB    WEINVN
     C                     Z-ADDF4ESNB    WEACYR
     C                     Z-ADDF4ETNB    WEACPR
     C                     Z-ADDF4C4NB    WEORD
      *
     C                     Z-ADDF4S5NB    SVS5NB
     C                     Z-ADDF4CONB    SVCONB
      *
      * RESET ACCUMULATED COST FOR THIS PRODUCT TO ZERO
      *
     C                     Z-ADD0         WKCAMT
      *
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $COST - RETRIEVE/CALCULATE COSTS
      *---------------------------------------------------------------
      *
     C           $COST     BEGSR
      *
      * ACCUMUALTE 'WEIGHT BILLED' INTO POUNDS FIELD
      *
     C                     ADD  F4BYWG    WELBS
      *
      * RETRIEVE A COST PER POUND USING PRODUCT CODE AND PERIOD.
      *
     C           KEY01     CHAINARP309               92
     C           *IN92     IFEQ *OFF                       IF COST HIT
      *
      * SUM RETRIEVED DIRECT AND INDIRECT COSTS
      * THEN MULTIPLY TIMES THE POUNDS BILLED.
      *
     C           WCDCOS    ADD  WCICOS    WKFLD2
     C           F4BYWG    MULT WKFLD2    WKFLD3    H
      *
      * ACCUMULATE CALCULATED COST FOR PRODUCT
      *
     C                     ADD  WKFLD3    WKCAMT
      *
     C                     ENDIF                           IF COST HIT
      *
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C           *INZSR    BEGSR
      *
      *
      * KEY LISTS
      *
     C           KEY01     KLIST
     C                     KFLD           F4S5NB
     C                     KFLD           F4ETNB
      *
      *
      * FIELDS TO CONTROL PROCESSING
      *
     C                     MOVELYES       FIRST   1
      *
      * WORKFIELDS
      *
     C           *LIKE     DEFN WECAMT    WKCAMT
     C                     Z-ADD0         WKFLD2 114
     C                     Z-ADD0         WKFLD3 154
      *
      * SAVE FIELDS
      *
     C           *LIKE     DEFN F4S5NB    SVS5NB
     C           *LIKE     DEFN F4CONB    SVCONB
      *
     C                     ENDSR
      /EJECT
