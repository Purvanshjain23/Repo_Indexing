     H/TITLE Crt CrcMritPgm PremTFUpPV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 09/12/08  Time  : 15:44:29
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPLMZPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Crt CrcMritPgm PremTFUpPV Prompt & validate record
      *
     FPKBYREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Row  Retrieval index
      *
     FPKARREL0IF  E           K        DISK
      * RTV : Carcass Merit Program     Retrieval index
      *
     I@BYREGF
      * Carcass Merit Matrix Row  Retrieval index
      * Renamed input format fields
     I              BYAMCD                          WAAMCD
     I              BYE8NB                          WAE8NB
     I              BYEGNB                          WAEGNB
     I              BYEHNB                          WAEHNB
     I              BYEINB                          WAEINB
     I              BYEJNB                          WAEJNB
     I              BYEKNB                          WAEKNB
     I              BYAQPC                          WAAQPC
     I              BYEMNB                          WAEMNB
     I              BYE2NB                          WAE2NB
     I              BYLJA1                          WALJA1
     I              BYAAVN                          WAAAVN
     I              BYAADT                          WAAADT
     I              BYAMTM                          WAAMTM
     I              BYAJST                          WAAJST
     I              BYAHVN                          WAAHVN
     I              BYAGVN                          WAAGVN
     I              BYABVN                          WAABVN
     I              BYABDT                          WAABDT
     I              BYABTM                          WAABTM
      *
     I@ARREBF
      * Carcass Merit Program     Retrieval index
      * Renamed input format fields
     I              ARAMCD                          WBAMCD
     I              ARA3TX                          WBA3TX
     I              ARDLST                          WBDLST
     I              ARDMST                          WBDMST
     I              ARDOST                          WBDOST
     I              ARDQST                          WBDQST
     I              ARAZPC                          WBAZPC
     I              ARA0PC                          WBA0PC
     I              ARDTST                          WBDTST
     I              ARF5ST                          WBF5ST
     I              ARI1PR                          WBI1PR
     I              ARVEPR                          WBVEPR
     I              ARVFPR                          WBVFPR
     I              ARVHPR                          WBVHPR
     I              ARVIPR                          WBVIPR
     I              ARVJPR                          WBVJPR
     I              ARZ2ST                          WBZ2ST
     I              ARZ3ST                          WBZ3ST
     I              ARZ4ST                          WBZ4ST
     I              ARAAVN                          WBAAVN
     I              ARAADT                          WBAADT
     I              ARAMTM                          WBAMTM
     I              ARAJST                          WBAJST
     I              ARAHVN                          WBAHVN
     I              ARAGVN                          WBAGVN
     I              ARABVN                          WBABVN
     I              ARABDT                          WBABDT
     I              ARABTM                          WBABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Grade Type Invalid - Upl'
      * CMP Grading Type
     I                                        1   1 ZA0001
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
     C                     MOVEL'Y'       WUC9SS           Select to CMP U
      * Validation
     C                     EXSR UASUBR                     Validation
      * CASE: WRK.Select to CMP Upload Usr is Select to process
     C           WUC9SS    IFEQ 'Y'                        *IF
      * CASE: DTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * Prt/Upd CrcsMrt Prem  PF - Carcass Merit PrmLP TFUPL  * 
     C                     CALL 'PLMXPFR'              90  Prt/Upd CrcsMrt
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AMCD    WQ0001  3        CMP Program Cod
     C                     PARM #DSIA1    WQ0002  30       Weight Columns
     C                     PARM #DV1TX    WQ0003 30        Cmmp Prem Upl D
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLMXPFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     SETON                     33    *
     C                     END
      * Send message 'CMP Premiums Uploaded'
     C                     MOVEL'PRK1212' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     END                             *FI
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * Rtv CMP Info Record   RT - Carcass Merit Program  * 
     C                     EXSR SBRVGN
      * DTL.Grading Type Desc Usr = Condition name of DTL.CMP Grading Typ
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70       List number
     C                     PARM #1DLST    W0INVL 25        CMP Grading Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD8TX    PARM           W0CNNM 25        Grading Type De
      *
      * DTL.Sort Basis Desc Usr = Condition name of DTL.CMP Sort Basis
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70       List number
     C                     PARM #1DMST    W0INVL 25        CMP Sort Basis
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD9TX    PARM           W0CNNM 25        Sort Basis Desc
      *
      * DTL.Carc Wgt Type Desc Usr = Condition name of DTL.CMP Carc Wgt T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70       List number
     C                     PARM #1DQST    W0INVL 25        CMP Carc Wgt Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEATX    PARM           W0CNNM 25        Carc Wgt Type D
      *
      * DTL.Sort Weight Desc Usr = Condition name of DTL.CMP Optimal Row
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1104177   Y2LSNO  70       List number
     C                     PARM #1DTST    W0INVL 25        CMP Optimal Row
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEBTX    PARM           W0CNNM 25        Sort Weight Des
      *
      * DTL.CMP Type Desc Usr = Condition name of DTL.CMP Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70       List number
     C                     PARM #1F5ST    W0INVL 25        CMP Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DECTX    PARM           W0CNNM 25        CMP Type Desc U
      *
      * DTL.Record Status Desc Usr = Condition name of DTL.RS Record Stat
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100087   Y2LSNO  70       List number
     C                     PARM #1AJST    W0INVL 25        RS Record Statu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD6TX    PARM           W0CNNM 25        Record Status D
      *
     C                     END
      * CMP Program Code required
     C           #1AMCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Weight Columns TF Upl required
     C           #DSIA1    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Cmmp Prem Upl Desc Usr required
     C           #DV1TX    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVEL*BLANK    #DBSTX           Name USR
     C                     MOVEL*BLANK    #1DTST           CMP Optimal Row
     C                     Z-ADD*ZERO     #1VHPR           CMP Grade Type
     C                     Z-ADD*ZERO     #1VIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     #1VJPR           CMP Unused Pric
     C                     MOVEL*BLANK    #1Z2ST           CMP CLC Premium
     C                     MOVEL*BLANK    #1Z3ST           CMP Unused Sts
     C                     MOVEL*BLANK    #1Z4ST           CMP Unused Sts
     C                     MOVEL*BLANK    #1DOST           CMP Sts
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     MOVEL*BLANK    #1AMCD           CMP Program Cod
     C                     Z-ADD*ZERO     #DSIA1           Weight Columns
     C                     MOVEL*BLANK    #DV1TX           Cmmp Prem Upl D
     C                     MOVEL*BLANK    #1A3TX           CMP Description
     C                     MOVEL*BLANK    #1DLST           CMP Grading Typ
     C                     MOVEL*BLANK    #DD8TX           Grading Type De
     C                     MOVEL*BLANK    #1DMST           CMP Sort Basis
     C                     MOVEL*BLANK    #DD9TX           Sort Basis Desc
     C                     MOVEL*BLANK    #1DQST           CMP Carc Wgt Ty
     C                     MOVEL*BLANK    #DEATX           Carc Wgt Type D
     C                     Z-ADD*ZERO     #1AZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     #1A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    #DEBTX           Sort Weight Des
     C                     MOVEL*BLANK    #1F5ST           CMP Type
     C                     MOVEL*BLANK    #DECTX           CMP Type Desc U
     C                     Z-ADD*ZERO     #1I1PR           CMP Market Add/
     C                     Z-ADD*ZERO     #1VEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     #1VFPR           CMP Fixed Cost
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #DD6TX           Record Status D
      * CALC: Screen function fields
      * Rtv CMP Info Record   RT - Carcass Merit Program  * 
     C                     EXSR SCRVGN
      * DTL.Grading Type Desc Usr = Condition name of DTL.CMP Grading Typ
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70       List number
     C                     PARM #1DLST    W0INVL 25        CMP Grading Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD8TX    PARM           W0CNNM 25        Grading Type De
      *
      * DTL.Sort Basis Desc Usr = Condition name of DTL.CMP Sort Basis
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70       List number
     C                     PARM #1DMST    W0INVL 25        CMP Sort Basis
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD9TX    PARM           W0CNNM 25        Sort Basis Desc
      *
      * DTL.Carc Wgt Type Desc Usr = Condition name of DTL.CMP Carc Wgt T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70       List number
     C                     PARM #1DQST    W0INVL 25        CMP Carc Wgt Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEATX    PARM           W0CNNM 25        Carc Wgt Type D
      *
      * DTL.Sort Weight Desc Usr = Condition name of DTL.CMP Optimal Row
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1104177   Y2LSNO  70       List number
     C                     PARM #1DTST    W0INVL 25        CMP Optimal Row
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEBTX    PARM           W0CNNM 25        Sort Weight Des
      *
      * DTL.CMP Type Desc Usr = Condition name of DTL.CMP Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70       List number
     C                     PARM #1F5ST    W0INVL 25        CMP Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DECTX    PARM           W0CNNM 25        CMP Type Desc U
      *
      * DTL.Record Status Desc Usr = Condition name of DTL.RS Record Stat
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100087   Y2LSNO  70       List number
     C                     PARM #1AJST    W0INVL 25        RS Record Statu
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DD6TX    PARM           W0CNNM 25        Record Status D
      *
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Vry Row for TF Upload RT - Carcass Merit Matrix Row  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    W0RTN            *Return code
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAMCD           CMP Program Cod
     C                     KFLD           WAE8NB           CMMR Row Number
      * Setup key
     C                     MOVEL#1AMCD    WAAMCD           CMP Program Cod
     C                     Z-ADDWUSHA1    WAE8NB           CMMR Row Number
      * Establish starting position
     C           KRSSA     CHAIN@BYREGF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0132' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv CMP Info Record   RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WBAMCD           CMP Program Cod
      * Establish starting position
     C           KRSSB     CHAIN@ARREBF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #1A3TX           CMP Description
     C                     MOVEL*BLANK    #1DLST           CMP Grading Typ
     C                     MOVEL*BLANK    #1DMST           CMP Sort Basis
     C                     MOVEL*BLANK    #1DOST           CMP Sts
     C                     MOVEL*BLANK    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADD*ZERO     #1AZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     #1A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    #1DTST           CMP Optimal Row
     C                     MOVEL*BLANK    #1F5ST           CMP Type
     C                     Z-ADD*ZERO     #1I1PR           CMP Market Add/
     C                     Z-ADD*ZERO     #1VEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     #1VFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     #1VHPR           CMP Grade Type
     C                     MOVEL*BLANK    #1Z2ST           CMP CLC Premium
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA3TX    #1A3TX           CMP Description
     C                     MOVELWBDLST    #1DLST           CMP Grading Typ
     C                     MOVELWBDMST    #1DMST           CMP Sort Basis
     C                     MOVELWBDOST    #1DOST           CMP Sts
     C                     MOVELWBDQST    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADDWBAZPC    #1AZPC           CMP Std Lean Pe
     C                     Z-ADDWBA0PC    #1A0PC           CMP Lean Factor
     C                     MOVELWBDTST    #1DTST           CMP Optimal Row
     C                     MOVELWBF5ST    #1F5ST           CMP Type
     C                     Z-ADDWBI1PR    #1I1PR           CMP Market Add/
     C                     Z-ADDWBVEPR    #1VEPR           CMP % of Carcas
     C                     Z-ADDWBVFPR    #1VFPR           CMP Fixed Cost
     C                     Z-ADDWBVHPR    #1VHPR           CMP Grade Type
     C                     MOVELWBZ2ST    #1Z2ST           CMP CLC Premium
     C                     MOVELWBAJST    #1AJST           RS Record Statu
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv CMP Info Record   RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WBAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL#1AMCD    WBAMCD           CMP Program Cod
      * Establish starting position
     C           KRSSC     CHAIN@ARREBF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0039' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #1A3TX           CMP Description
     C                     MOVEL*BLANK    #1DLST           CMP Grading Typ
     C                     MOVEL*BLANK    #1DMST           CMP Sort Basis
     C                     MOVEL*BLANK    #1DOST           CMP Sts
     C                     MOVEL*BLANK    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADD*ZERO     #1AZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     #1A0PC           CMP Lean Factor
     C                     MOVEL*BLANK    #1DTST           CMP Optimal Row
     C                     MOVEL*BLANK    #1F5ST           CMP Type
     C                     Z-ADD*ZERO     #1I1PR           CMP Market Add/
     C                     Z-ADD*ZERO     #1VEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     #1VFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     #1VHPR           CMP Grade Type
     C                     MOVEL*BLANK    #1Z2ST           CMP CLC Premium
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBA3TX    #1A3TX           CMP Description
     C                     MOVELWBDLST    #1DLST           CMP Grading Typ
     C                     MOVELWBDMST    #1DMST           CMP Sort Basis
     C                     MOVELWBDOST    #1DOST           CMP Sts
     C                     MOVELWBDQST    #1DQST           CMP Carc Wgt Ty
     C                     Z-ADDWBAZPC    #1AZPC           CMP Std Lean Pe
     C                     Z-ADDWBA0PC    #1A0PC           CMP Lean Factor
     C                     MOVELWBDTST    #1DTST           CMP Optimal Row
     C                     MOVELWBF5ST    #1F5ST           CMP Type
     C                     Z-ADDWBI1PR    #1I1PR           CMP Market Add/
     C                     Z-ADDWBVEPR    #1VEPR           CMP % of Carcas
     C                     Z-ADDWBVFPR    #1VFPR           CMP Fixed Cost
     C                     Z-ADDWBVHPR    #1VHPR           CMP Grade Type
     C                     MOVELWBZ2ST    #1Z2ST           CMP CLC Premium
     C                     MOVELWBAJST    #1AJST           RS Record Statu
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Validation
      *================================================================
      * Valid Grading types
      * CASE: DTL.CMP Grading Type is Lean Percent Upload
     C           #1DLST    IFEQ 'P'                        *IF
     C           #1DLST    OREQ 'D'
     C           #1DLST    OREQ 'L'
     C           #1DLST    OREQ 'M'
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1DLST    ZA0001           CMP Grading Typ
      * Send message 'Grade Type Invalid - Upl'
     C                     MOVEL'PRK1210' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'N'       WUC9SS           Select to CMP U
     C                     END                             *FI
      * Verify that Rows for the weight do exists NF is error
     C                     EXSR UBSUBR                     Verify that Row
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Verify that Rows for the weight do exists NF is error
      *================================================================
      * CASE: WRK.Select to CMP Upload Usr is Select to process
     C           WUC9SS    IFEQ 'Y'                        *IF
      * at the present time input parm will not exceed 130
     C                     Z-ADD001       WUSHA1           Row Number Coun
      * DO WHILE:
      *  - c1 AND c2
      *   |- c1    : WRK.Row Number Count Usr LE DTL.Weight Columns TF Up
      *   |- c2    : WRK.Row Number Count Usr is Less then 999
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           WUSHA1    IFLE #DSIA1                     *IF
     C           WUSHA1    IFLT 999                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Vry Row for TF Upload RT - Carcass Merit Matrix Row  * 
     C                     EXSR SARVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ADD  001       WUSHA1           Row Number Coun
     C                     ELSE
      * CASE: *OTHERWISE
      * Set to 999 to end repeat
     C                     Z-ADD999       WUSHA1           Row Number Coun
      * Send message 'Carcass Mrt Mastrix RowNF'
     C                     MOVEL'PRK1211' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'N'       WUC9SS           Select to CMP U
     C                     END                             *FI
     C                     END                             *ITR
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                     MOVEL#1AMCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        CMP Program Cod
     C           YPMTFD    OREQ '#1AMCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AMCD' defaulted for 'CMP Program Code'.
     C                     CALL 'PKBASRR'              90  Sel Carc Merit
     C                     PARM *BLANK    W0RTN   7
     C           #1AMCD    PARM #1AMCD    WQ0004  3        CMP Program Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBASRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      *
     C           #1AMCD    IFNE *BLANK                     CMP Program Cod
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDGE031
     C           ZHCSCL    ANDLE033
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1AMCD'  YPMTFD           CMP Program Cod
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Select to CMP Upload Usr
     C                     MOVEL*BLANK    WUC9SS  1
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Row Number Count Usr
     C                     Z-ADD*ZERO     WUSHA1  30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAE8NB           CMMR Row Number
     C                     Z-ADD*ZERO     WAEGNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     WAEHNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     WAEINB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     WAEJNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     WAEKNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     WAAQPC           CMMR Std Dressi
     C                     Z-ADD*ZERO     WAEMNB           CMMR Sort Disco
     C                     Z-ADD*ZERO     WAE2NB           CMMR Unused Fie
     C                     Z-ADD*ZERO     WALJA1           CMMR Midpoint
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAZPC           CMP Std Lean Pe
     C                     Z-ADD*ZERO     WBA0PC           CMP Lean Factor
     C                     Z-ADD*ZERO     WBI1PR           CMP Market Add/
     C                     Z-ADD*ZERO     WBVEPR           CMP % of Carcas
     C                     Z-ADD*ZERO     WBVFPR           CMP Fixed Cost
     C                     Z-ADD*ZERO     WBVHPR           CMP Grade Type
     C                     Z-ADD*ZERO     WBVIPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WBVJPR           CMP Unused Pric
     C                     Z-ADD*ZERO     WBAADT           RS Date Changed
     C                     Z-ADD*ZERO     WBAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WBABDT           RS Date Added
     C                     Z-ADD*ZERO     WBABTM           RS Time Added
      * Define work field Company Number USR
     C                     Z-ADD*ZERO     WUGGNB  30
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Oms Warehouse Code
     C                     MOVEL*BLANK    YL0001  3
      * Define local work field Oms SalesPerson Code
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field Oms Allow Multi-Company
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Oms Default Printer
     C                     MOVEL*BLANK    YL0004 10
      * Define local work field Oms Name
     C                     MOVEL*BLANK    YL0005 30
      * Define local work field Oms System Value Alpha
     C                     MOVEL*BLANK    YL0006 40
      * Define local work field Oms Access Denied (Y/N)
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field PRT Night Queue Run Sts
     C                     MOVEL*BLANK    YL0008  1
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           YL0001    PARM *BLANK    WQ0005  3        Oms Warehouse C
     C           WUGGNB    PARM *ZERO     WQ0006  30       CC Company Numb
     C                     PARM 'HPE'     WQ0007  6        Oms Application
     C           YL0002    PARM *BLANK    WQ0008  3        Oms SalesPerson
     C           YL0003    PARM *BLANK    WQ0009  1        Oms Allow Multi
     C           YL0004    PARM *BLANK    WQ0010 10        Oms Default Pri
     C           YL0005    PARM *BLANK    WQ0011 30        Oms Name
     C           YL0006    PARM *BLANK    WQ0012 40        Oms System Valu
     C           YL0007    PARM *BLANK    WQ0013  1        Oms Access Deni
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           YL0007    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELYL0006    ##CMP
     C                     END                             *FI
      * CASE: LCL.Oms Access Denied (Y/N) is Yes
     C           YL0007    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL'N'       YL0008           PRT Night Queue
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
