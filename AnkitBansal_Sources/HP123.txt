      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP123
      * TITLE:       COPY AUTHORIZED FUNCTIONS FROM USER TO USER
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/14/95
      *
      * FUNCTION: THIS FUNCTION ALLOWS THE USER TO COPY ALL OF THE
      *           AUTHORIZED RECORDS OF ONE USER TO ANOTHER VALID USER.
      *
      *           THIS PROGRAM IS CALLED FROM HP426-WORK WITH USERS
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 03/27/96  LEANNE FEDOR
      *           RECOMPILE ONLY. A NEW FIELD 'DELETE MOVEMENTS FLAG'
      *           WAS ADDED TO THE AUTHORIZED USERS FILE.
      *
      * 04/30/96  LEANNE FEDOR
      *           RECOMPILE ONLY. A NEW FIELD 'MOVEMENT STATUS'
      *           WAS ADDED TO THE AUTHORIZED USERS FILE TO SUPPORT
      *           THE LOGIC FOR DELETING MOVEMENTS.
      *
      * 05/14/97  LEANNE FEDOR
      *           RECOMPILE ONLY.  OUTQUEUE WAS ADDED TO THE
      *           AUTHORIZED USERS FILE. THIS FIELD WILL NOW BE THE
      *           USER'S DEFAULT PRINTER IN HPS INSTEAD OF THE OUTQ
      *           ON THE USER'S PROFILE.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD123    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP001    IF   E           K DISK
      *    USERS                     (KEY: AUUSCD)
      *
     FHSP003    IF   E           K DISK
      *    FUNCTION AUTHORIZATION    (KEY: FAUSCD FAFNCD)
      *
     FHSL003A   O    E           K DISK
     F                                     RENAME(FAREC:FARECA)
      *    FUNCTION AUTHORIZATION    (KEY: FAFNCD FAUSCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP123K1
     C                   WRITE     HP123EC
     C                   EXFMT     HP123R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN09         WHENEQ    *ON                                          F9-REPLACE
     C                   MOVEL     EDIT1         ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VALIDATE THAT THE ORIGINAL USER IS VALID
      *
     C                   MOVE      *BLANK        C1USNM
     C                   MOVE      *BLANK        C1RUFL
     C                   MOVE      *BLANK        C1MDFL
     C                   MOVE      *BLANK        C1RMFL
     C                   MOVE      *BLANK        C1RVFL
     C                   MOVE      *BLANK        C1AFFL
      *
     C     C1USCD        IFEQ      *BLANK                                       IF NO FROM
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     C1USCD        CHAIN     HSP001                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     AUUSNM        C1USNM
     C                   MOVEL     AURUFL        C1RUFL
     C                   MOVEL     AUMDFL        C1MDFL
     C                   MOVEL     AURMFL        C1RMFL
     C                   MOVEL     AURVFL        C1RVFL
     C                   MOVEL     AUAFFL        C1AFFL
     C                   ELSE
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00556'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     C1USCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF NO FROM
      *
      * VALIDATE THAT THE 'COPY TO' USER IS VALID
      *
     C                   MOVE      *BLANK        DFUSNM
     C                   MOVE      *BLANK        DFRUFL
     C                   MOVE      *BLANK        DFMDFL
     C                   MOVE      *BLANK        DFRMFL
     C                   MOVE      *BLANK        DFRVFL
     C                   MOVE      *BLANK        DFAFFL
      *
     C     DFUSCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFUSCD        CHAIN     HSP001                             91
     C     *IN91         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00556'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     AUUSNM        DFUSNM
     C                   MOVEL     AURUFL        DFRUFL
     C                   MOVEL     AUMDFL        DFMDFL
     C                   MOVEL     AURMFL        DFRMFL
     C                   MOVEL     AURVFL        DFRVFL
     C                   MOVEL     AUAFFL        DFAFFL
      *
      * THE 'COPY FROM' AND 'COPY TO' USER CANNOT BE THE SAME.
      *
     C     C1USCD        IFEQ      DFUSCD                                       IF SAME USER
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00577'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF SAME USER
      *
      * MAKE SURE THAT THE 'ORIGINAL' USER AND THE 'COPY TO' USER
      * ARE SET UP WITH THE SAME RESTRICTIONS--UNLESS THE 'COPY TO'
      * IS NOT RESTRICTED.
      *
     C     DFRUFL        IFEQ      NO                                           IF NO RST
     C                   ELSE
     C     C1RUFL        IFNE      DFRUFL
     C     C1MDFL        ORNE      DFMDFL
     C     C1RMFL        ORNE      DFRMFL
     C     C1RVFL        ORNE      DFRVFL
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00557'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     C1USCD        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF                                                  IF NO RST
      *
      * THE 'COPY TO' USER MUST BE SET UP AS REQUIRING
      * 'AUTHORIZATION TO FUNCTIONS'
      *
     C     AUAFFL        IFEQ      YES
     C                   ELSE
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00575'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
      *
      * MAKE SURE THAT THE 'COPY TO' USER DOES NOT ALREADY HAVE
      * ASSIGNED FUNCTIONS.  IF HE DOES, ISSUE AN ERROR. ALL FUNCTIONS
      * FOR A USER MUST BE DELETED BEFORE ANY FUNCTIONS CAN BE COPIED
      * TO HIM.
      *
     C     DFUSCD        CHAIN     HSP003                             92
     C     *IN92         IFEQ      *OFF                                         IF ALREADY
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00562'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF ALREADY
      *
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF BLANK
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF F9=COPY
      *
     C     *IN09         IFEQ      *ON                                          IF COPY
      *
     C                   Z-ADD     0             COUNT
     C                   SETOFF                                       95
     C     C1USCD        SETLL     HSP003
      *
     C     *IN95         DOUEQ     *ON                                          DO COPY
     C     C1USCD        READE     HSP003                                 95
     C     *IN95         IFEQ      *OFF
     C                   MOVEL     DFUSCD        FAUSCD
     C                   MOVEL     FAFNCD        FAFNCD
     C                   WRITE     FARECA
     C                   ADD       1             COUNT
     C                   ENDIF
     C                   ENDDO                                                  DO COPY
      *
      * TELL USER HOW MANY RECORDS WERE COPIED
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09020'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     COUNT         COUNTA
     C                   MOVEA     COUNTA        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF COPY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF 'COPY FROM' USER
      *
     C     FLD           WHENEQ    'C1USCD'
     C                   MOVE      *BLANK        XXUSCD
     C                   MOVE      *BLANK        XXUSNM
     C                   CALL      'HP589'
     C                   PARM                    XXUSCD
     C                   PARM                    XXUSNM
     C                   SETON                                        50
     C     XXUSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXUSCD        C1USCD
     C                   MOVEL     XXUSNM        C1USNM
     C                   ENDIF                                                  IF SELECTED
      *
      * IF 'COPY TO' USER
      *
     C     FLD           WHENEQ    'DFUSCD'
     C                   MOVE      *BLANK        XXUSCD
     C                   MOVE      *BLANK        XXUSNM
     C                   CALL      'HP590'
     C                   PARM                    XXUSCD
     C                   PARM                    XXUSNM
     C                   SETON                                        51
     C     XXUSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXUSCD        DFUSCD
     C                   MOVEL     XXUSNM        DFUSNM
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1USCD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      *  FIELD TO COUNT THE NUMBER OF CHANGED RECORDS
      *
     C                   Z-ADD     0             COUNT             3 0
      * ALPHA PARM FIELDS
      *
     C     *LIKE         DEFINE    AUUSCD        XXUSCD
     C     *LIKE         DEFINE    AUUSNM        XXUSNM
     C                   MOVE      *BLANK        COUNTA            3
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * RETRIEVE USER NAME FOR HEADING
      *
     C     C1USCD        CHAIN     HSP001                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     AUUSNM        C1USNM
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     C1USNM
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
