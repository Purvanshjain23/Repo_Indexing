// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDXCXFR
// ?Date: 14.08.2025 Time: 03:36:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Count Ahead USR = CON.2
PAR.Count_Ahead_USR = 2;

//?Count print lines for Ham Group/Items.
DO;

EXECUTE FUNCTION(RTV/CNT Ham Group/Item RT) TYPE(RTVOBJ) FILE(PDM1REP)          AC1571650;
PARAMETER(PAR.Ham_Group_Number);
PARAMETER(PAR.Count_Records_USR);
{
 //?USER: Initialize routine

 // PAR.Count Records         USR = CON.*ZERO
 PAR.Count_Records_USR = *ZERO;

 //?USER: Process Data record

 // PAR.Count Records         USR = PAR.Count Records         USR + CON.1
 PAR.Count_Records_USR = PAR.Count_Records_USR + 1;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PAR.Count Ahead USR = PAR.Count Ahead USR + CON.4
PAR.Count_Ahead_USR = PAR.Count_Ahead_USR + 4;

// PAR.Count Ahead USR = PAR.Count Ahead USR + PAR.Count Records         USR
PAR.Count_Ahead_USR = PAR.Count_Ahead_USR + PAR.Count_Records_USR;

ENDIF;

ENDDO;

//?Count print lines for Ham Group/Customers.
DO;

EXECUTE FUNCTION(RTV/CNT Ham Group/Cust RT) TYPE(RTVOBJ) FILE(PDNCCPP)          AC1571651;
PARAMETER(PAR.Ham_Group_Number);
PARAMETER(PAR.Count_Records_USR);
{
 //?USER: Initialize routine

 // PAR.Count Records         USR = CON.*ZERO
 PAR.Count_Records_USR = *ZERO;

 //?USER: Process Data record

 // PAR.Count Records         USR = PAR.Count Records         USR + CON.1
 PAR.Count_Records_USR = PAR.Count_Records_USR + 1;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PAR.Count Ahead USR = PAR.Count Ahead USR + CON.4
PAR.Count_Ahead_USR = PAR.Count_Ahead_USR + 4;

// PAR.Count Ahead USR = PAR.Count Ahead USR + PAR.Count Records         USR
PAR.Count_Ahead_USR = PAR.Count_Ahead_USR + PAR.Count_Records_USR;

ENDIF;

ENDDO;

