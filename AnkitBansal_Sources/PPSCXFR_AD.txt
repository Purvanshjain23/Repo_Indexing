// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPSCXFR
// ?Date: 14.08.2025 Time: 03:41:43
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification Log
DO;

//?PIO 03/06/24  CHANGED THE FILE NAME FROM OPBGWKMI TO OPBGWKMP
ENDDO;

EXECUTE FUNCTION(Vry Mix Exempt-Item   RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1747800;
PARAMETER(PAR.Item_Code);
PARAMETER(*YES);
PARAMETER(PAR.WFO_Item_New_Exempt);
PARAMETER(PAR.Error_Ordtl_TFExp_Usr);
{
 //?USER: Initialize routine

 // LCL.WFO Sequence = CON.*ZERO
 LCL.WFO_Sequence = 0;

 // LCL.WFO Record Error/Ok = CND.*blanks
 LCL.WFO_Record_Error_Ok = *BLANK;

 // PAR.Error Ordtl TFExp Usr = CND.*blanks
 PAR.Error_Ordtl_TFExp_Usr = *BLANK;

 //?USER: Process Data record

 // LCL.WFO Record Error/Ok = CND.*blanks
 LCL.WFO_Record_Error_Ok = *BLANK;

 EXECUTE FUNCTION(RTV Bill Type, Event   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1366339;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Billing_Activity_Type);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Billing Activity Type is Not Credit Memo
 IF LCL.Billing_Activity_Type = '3'/'1'/'5'/'4';

 EXECUTE FUNCTION(Rtv Customer TFEx     RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1747887;
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Customer_TF_Exempt_Code);
 {
  //?USER: Initialize routine

  // PAR.Customer TF Exempt Code = WRK.BLANK
  PAR.Customer_TF_Exempt_Code = WRK.BLANK;

  //?USER: Processing if Data record not found

  // PAR.Customer TF Exempt Code = WRK.BLANK
  PAR.Customer_TF_Exempt_Code = WRK.BLANK;

  //?USER: Process Data record

  // PAR.Customer TF Exempt Code = DB1.Customer TF Exempt Code
  PAR.Customer_TF_Exempt_Code = DB1.Customer_TF_Exempt_Code;

 }

 CASE;

 // IF LCL.Customer TF Exempt Code is Exempt Customer
 IF LCL.Customer_TF_Exempt_Code = 'EC';

 // LCL.WFO Record Error/Ok = CND.*blanks
 LCL.WFO_Record_Error_Ok = *BLANK;

 //?Mixed customer anything is allowed.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Not Mixed
 //?Read the Order detail file by Order number and see what the current
 //?TF Exmpt flag is and if there are more then one Item on the
 //?on the Order.  If more then 1 record then Item can not be changed
 //?because we know that this is not a mixed, and this item has a
 //?TF Exempt of the Prv value, and all of the items on this order will
 //?stays as is.
 EXECUTE FUNCTION(Vry OrdDtl/AllTF-Item RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1748234;
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.WFO_Record_Error_Ok);
 PARAMETER(PAR.WFO_Item_New_Exempt);
 {
  //?USER: Initialize routine

  // PAR.WFO Record Error/Ok = CND.*blanks
  PAR.WFO_Record_Error_Ok = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Bill Type, Event   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1366339;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(LCL.Event_Code);
  PARAMETER(LCL.Billing_Activity_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF LCL.Billing Activity Type is Not Credit Memo
  IF LCL.Billing_Activity_Type = '3'/'1'/'5'/'4';

  CASE;

  // IF PAR.Item Code EQ DB1.Item Code
  IF PAR.Item_Code = DB1.Item_Code;

  // IF PAR.Ord TF Exempt Code EQ DB1.Ord TF Exempt Code
  IF PAR.Ord_TF_Exempt_Code = DB1.Ord_TF_Exempt_Code;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.WFO Record Error/Ok = CND.Error
  PAR.WFO_Record_Error_Ok = 'E';

  ENDIF;

  ENDIF;

 }

 ENDIF;

 CASE;

 // IF PAR.Crt WFO Exempt File Usr is *YES
 IF PAR.Crt_WFO_Exempt_File_Usr = *YES;

 // LCL.WFO Customer Exempt = LCL.Customer TF Exempt Code
 LCL.WFO_Customer_Exempt = LCL.Customer_TF_Exempt_Code;

 // LCL.WFO Item New Exempt = PAR.WFO Item New Exempt
 LCL.WFO_Item_New_Exempt = PAR.WFO_Item_New_Exempt;

 // LCL.WFO Item Prv Exempt = DB1.Ord TF Exempt Code
 LCL.WFO_Item_Prv_Exempt = DB1.Ord_TF_Exempt_Code;

 // LCL.WFO Sequence = LCL.WFO Sequence + CON.1
 LCL.WFO_Sequence = LCL.WFO_Sequence + 1;

 EXECUTE FUNCTION(Create WFO Exempt Info) TYPE(CRTOBJ) FILE(PPBXCPP)             AC1748215;
 PARAMETER(JOB.*USER);
 PARAMETER(LCL.WFO_Sequence);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.WFO_Customer_Exempt);
 PARAMETER(LCL.WFO_Item_Prv_Exempt);
 PARAMETER(LCL.WFO_Item_New_Exempt);
 PARAMETER(LCL.WFO_Record_Error_Ok);
 CASE;

 // IF LCL.WFO Record Error/Ok is Error
 IF LCL.WFO_Record_Error_Ok = 'E';

 // PAR.Error Ordtl TFExp Usr = CND.Error
 PAR.Error_Ordtl_TFExp_Usr = 'E';

 // IF *OTHERWISE
 IF *OTHERWISE;

 ENDIF;

 ENDIF;

 ENDIF;

}


