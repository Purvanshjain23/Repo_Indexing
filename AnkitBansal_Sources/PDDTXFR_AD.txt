// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDDTXFR
// ?Date: 14.08.2025 Time: 03:34:16
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Doc:  Move plan into schedule
DO;

//?This program will move the planned production into the scheduled
//?production for today.  Basically moving from the schedule to the
//?plan
ENDDO;

EXECUTE FUNCTION(Rtv PrdDay Dte -Durtn RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1369297;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(21);
PARAMETER(PAR.Production_Date_RGT);
{
 //?USER: Initialize routine

 // WRK.Count USR = CON.*ZERO
 WRK.Count_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF WRK.Count USR EQ PAR.*Duration (factor)
 IF WRK.Count_USR = PAR.*Duration_factor;

 // PAR.*DATE = DB1.Post to G/L Date
 PAR.*DATE = DB1.Post_to_G_L_Date;

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

}


//?Move planned prod to scheduled prod, clear remaining values
EXECUTE FUNCTION(RTV Chg Schd to Plan  RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1487790;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Production Type is Schedule Saved in the am
 IF DB1.Production_Type = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Production Type is Schedule
 IF DB1.Production_Type = 'S';

 EXECUTE FUNCTION(Rtv Standard Wgt/Pcs  RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1487798;
 PARAMETER(DB1.Company_Number);
 PARAMETER('P');
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(PAR.PS_Pieces_Standard);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.PS Weight Standard = DB1.PS Weight Standard
 PAR.PS_Weight_Standard = DB1.PS_Weight_Standard;

 // PAR.PS Pieces Standard = DB1.PS Pieces Standard
 PAR.PS_Pieces_Standard = DB1.PS_Pieces_Standard;

 ENDIF;

 CASE;

 // IF PAR.PS Pieces Standard is GT Zero
 IF PAR.PS_Pieces_Standard > *ZERO;

 // PAR.PS Avg Piece Wgt = PAR.PS Weight Standard / PAR.PS Pieces Standard *
 PAR.PS_Avg_Piece_Wgt = PAR.PS_Weight_Standard / PAR.PS_Pieces_Standard;

 ENDIF;

 EXECUTE FUNCTION(Chg Prod Item Schedule CH) TYPE(CHGOBJ) FILE(PDI8CPP)          AC1487799;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Avg_Piece_Wgt);
 PARAMETER(DB1.PS_Weight_Inv_On_Hand);
 PARAMETER(DB1.PS_Pieces_Inv_On_Hand);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(PAR.PS_Pieces_Standard);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.PS_Weight_Inv_Adj);
 PARAMETER(DB1.PS_Pieces_Inv_Adj);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


// Call program Zzz Apply PR +Adj     PF.
CALL PROGRAM(Zzz Apply PR +Adj     PF) ('PDMAPFR');
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.Production_Date_RGT);

// Call program Zzz Apply PR -Adj     PF.
CALL PROGRAM(Zzz Apply PR -Adj     PF) ('PDVZPFR');
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.Production_Date_RGT);

EXECUTE FUNCTION(UPS Re-Alc Ord By SD  IF) TYPE(EXCINTFUN)                      AC1425691;
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
{
 //?Execute internal function

 //?C6096 Deallocate order instead
 //?Delete OP Order Detail Schedule
 EXECUTE FUNCTION(DLT Ord Dtl Schedule   RT) TYPE(RTVOBJ) FILE(PDKNCPP)          AC1415697;
 PARAMETER(PAR.Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Ord Detail Sched   DL) TYPE(DLTOBJ) FILE(PDKNCPP)          AC1385631;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 //?Allocate the Orders
 EXECUTE FUNCTION(UPS Re-Alc Ord by SD  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1425674;
 PARAMETER(PAR.Company_Number);
 PARAMETER('A');
 {
  //?USER: Initialize routine

  //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
  //?USER: Process Data record

  EXECUTE FUNCTION(RTV Header Status      RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1231329;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(WRK.Header_Status);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF WRK.Header Status is Conf/Comp/Canc
  IF WRK.Header_Status = 'X'/'C'/'R';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Rtv Order Sched Today  RT) TYPE(RTVOBJ) FILE(PDKNCPP)          AC1576916;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Order_Scheduled_Today_USR);
  {
   //?USER: Initialize routine

   // PAR.Order Scheduled Today USR = CND.no
   PAR.Order_Scheduled_Today_USR = 'N';

   //?USER: Process Data record

   CASE;

   // IF DB1.OD Production Date EQ JOB.*Job date
   IF DB1.OD_Production_Date = JOB.*Job_date;

   // PAR.Order Scheduled Today USR = CND.yes
   PAR.Order_Scheduled_Today_USR = 'Y';

   QUIT;

   ENDIF;

  }

  //?Re-Allocate Order if Quantity Scheduled > 0 & order not scheduled today
  CASE;

  // IF DB1.Quantity Scheduled is Greater than zero
  IF DB1.Quantity_Scheduled > *ZERO;

  // AND PAR.Order Scheduled Today USR is no
  AND PAR.Order_Scheduled_Today_USR = 'N';

  CASE;

  // IF PAR.Order De-Alc/Alc Sts USR is De-Allocate
  IF PAR.Order_De_Alc_Alc_Sts_USR = 'D';

  // WRK.Quantity Scheduled = DB1.Quantity Scheduled
  WRK.Quantity_Scheduled = DB1.Quantity_Scheduled;

  // WRK.Weight Scheduled = DB1.Weight Scheduled
  WRK.Weight_Scheduled = DB1.Weight_Scheduled;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.Quantity_Scheduled);
  PARAMETER(WRK.Weight_Scheduled);
  PARAMETER('OD');
  PARAMETER('REALC');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  // IF PAR.Order De-Alc/Alc Sts USR is Allocate
  IF PAR.Order_De_Alc_Alc_Sts_USR = 'A';

  //?*-------------------------------------------------------------*
  //?* 05/17/02 PKD PK0421 Commented the deallocate.
  //?C6096 Deallocate order instead of deleted Detail Schedule
  // WRK.Quantity Scheduled = CON.*ZERO
  WRK.Quantity_Scheduled = *ZERO;

  // WRK.Weight Scheduled = CON.*ZERO
  WRK.Weight_Scheduled = *ZERO;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(WRK.Quantity_Scheduled);
  PARAMETER(WRK.Weight_Scheduled);
  PARAMETER('OA');
  PARAMETER('REALC');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  CASE;

  // IF DB1.Quantity Scheduled GT WRK.Quantity Scheduled
  IF DB1.Quantity_Scheduled > WRK.Quantity_Scheduled;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(WRK.Quantity_Scheduled);
  PARAMETER(WRK.Weight_Scheduled);
  PARAMETER('AO');
  PARAMETER('REALC');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

 }

}


// Call program Zzz Apply FC +Adj     PF.
CALL PROGRAM(Zzz Apply FC +Adj     PF) ('PDXYPFR');
PARAMETER(PAR.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.Production_Date_RGT);

