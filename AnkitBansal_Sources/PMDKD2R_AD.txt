// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMDKD2R
// ?Date: 14.08.2025 Time: 03:42:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.User Profile Name = JOB.*USER
PAR.User_Profile_Name = JOB.*USER;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('A/R');
PARAMETER(PAR.Company_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Allow_Multi_Company);
PARAMETER(NLL.Default_Printer);
PARAMETER(NLL.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?JBB WI-440  4/14/21 - M3 to JDE E1 Financials
EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company_Number);
PARAMETER('E1LIVE');
PARAMETER(LCL.Live_with_E1_usr);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Load detail screen from DBF record

//?Customer Rules for Existing Customer for DTL screen
DO;

// PAR.A/R Customer Number = DB1.A/R Customer Number
PAR.AR_Customer_Number = DB1.AR_Customer_Number;

// PAR.Parent Customer = DB1.Parent Customer
PAR.Parent_Customer = DB1.Parent_Customer;

// PAR.USR Order Entry Hold = DB1.Order Entry Hold
PAR.USR_Order_Entry_Hold = DB1.Order_Entry_Hold;

// PAR.USR Order Entry Hold Date = DB1.Order Entry Hold Date
PAR.USR_Order_Entry_Hold_Date = DB1.Order_Entry_Hold_Date;

EXECUTE FUNCTION(Rtv All Values FX/EM+ RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1743374;
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(DTL.Internet_Password);
PARAMETER(DTL.Email_Address);
PARAMETER(WRK.Email_User_ID);
PARAMETER(PAR.EDI_Trading_Partner_No);
PARAMETER(PAR.EDI_Cust_Duns_Number);
PARAMETER(PAR.EDI_Warehouse_Store_No);
PARAMETER(PAR.State_Tax_ID);
PARAMETER(PAR.Cust_Shipping_Temp_C_F);
PARAMETER(2ND.One_Invoice_Per_PO);
PARAMETER(PAR.EDI_Advanced_Ship_Notice);
PARAMETER(DTL.Customer_G_L_Vendor_Num);
PARAMETER(NLL.Air_Freight_Orders);
PARAMETER(DTL.Regional_Mgr_Fax_Email);
PARAMETER(NLL.Employee_Co_Packer_Sale);
PARAMETER(2ND.Customer_TF_Exempt_Code);
PARAMETER(NLL.Customer_Watch_Flag);
PARAMETER(DTL.Customer_Sales_Region);
PARAMETER(2ND.Customer_Market_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(DB1.State_Code);
PARAMETER(DTL.State_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV County Desc.       RT) TYPE(RTVOBJ) FILE(CAECREP)          AC1147093;
PARAMETER(DB1.State_Code);
PARAMETER(DB1.County_Code);
PARAMETER(DTL.Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(DB1.Country_Code);
PARAMETER(DTL.Country_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(PMDDREP)           AC1859875;
PARAMETER(2ND.Customer_Market_Code);
PARAMETER(2ND.Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Retrieve a/r customer name if not the same number
CASE;

// IF PAR.A/R Customer Number NE PAR.Ship To Customer
IF PAR.AR_Customer_Number <> PAR.Ship_To_Customer;

// Call program RTV Customer Name     XF.
CALL PROGRAM(RTV Customer Name     XF) ('PPH6XFR');
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(DTL.USR_A_R_Customer_Name);

//?Retrieve a/r customer name if not the same number
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.USR A/R Customer Name = DB1.Customer Name
DTL.USR_A_R_Customer_Name = DB1.Customer_Name;

ENDIF;

//?Retrieve parent customer name if not the same
CASE;

// IF PAR.Parent Customer NE PAR.Ship To Customer
IF PAR.Parent_Customer <> PAR.Ship_To_Customer;

// Call program RTV Customer Name     XF.
CALL PROGRAM(RTV Customer Name     XF) ('PPH6XFR');
PARAMETER(DB1.Parent_Customer);
PARAMETER(DTL.USR_Bill_To_Customer_Name);

//?Retrieve parent customer name if not the same
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.USR Bill To Customer Name = DB1.Customer Name
DTL.USR_Bill_To_Customer_Name = DB1.Customer_Name;

ENDIF;

//?Retrieve g/l customer
CASE;

// IF DTL.Customer G/L Vendor Num is Entered
IF DTL.Customer_G_L_Vendor_Num <> *ZERO;

// Call program Get Vendor Address    RT.
CALL PROGRAM(Get Vendor Address    RT) ('VNDFAXR');
PARAMETER(PGM.*Return_code);
PARAMETER(DTL.Customer_G_L_Vendor_Num);
PARAMETER(DTL.USR_Description);
PARAMETER(WRK.Address_1);
PARAMETER(WRK.Address_2);
PARAMETER(WRK.Address_3);
PARAMETER(WRK.VND_City);
PARAMETER(WRK.VND_State);
PARAMETER(WRK.VND_Zip);
PARAMETER(WRK.Area_Code);
PARAMETER(WRK.Telephone);
PARAMETER(WRK.Fax_Area_Code_#);
PARAMETER(WRK.Fax_Telephone);
PARAMETER(WRK.Fax_Area_Code_#_2);
PARAMETER(WRK.Fax_Telephone_2);
PARAMETER(WRK.Vendor_1099);
PARAMETER(WRK.Vendor_Tax_Id);
PARAMETER(WRK.VND_Country);
PARAMETER(WRK.Status_Y_or_N);

ENDIF;

//?Dsply A/R credit limit from A/R customer record - ARS032
CASE;

// IF PAR.Ship To Customer NE PAR.A/R Customer Number
IF PAR.Ship_To_Customer <> PAR.AR_Customer_Number;

EXECUTE FUNCTION(RTV Credit Limits      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1280263;
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(WRK.Parent_Customer);
PARAMETER(WRK.Credit_Check_AR_Customer);
PARAMETER(WRK.Credit_Check_Parent_Cust);
PARAMETER(WRK.Parent_Credit_Limit);
PARAMETER(DTL.AR_Credit_Limit);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.USR Flag 1 = CND.No
WRK.USR_Flag_1 = 'N';

ENDIF;

//?Dsply Parent credit limit from Parent customer record - ARS032
CASE;

// IF PAR.Ship To Customer NE PAR.Parent Customer
IF PAR.Ship_To_Customer <> PAR.Parent_Customer;

EXECUTE FUNCTION(RTV Credit Limits      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1280263;
PARAMETER(PAR.Parent_Customer);
PARAMETER(WRK.Parent_Customer);
PARAMETER(WRK.Credit_Check_AR_Customer);
PARAMETER(WRK.Credit_Check_Parent_Cust);
PARAMETER(DTL.Parent_Credit_Limit);
PARAMETER(WRK.AR_Credit_Limit);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.USR Flag 2 = CND.No
WRK.USR_Flag_2 = 'N';

ENDIF;

// DTL.Description 21a 1 Usr = Condition name of DB1.Ship To Customer Flag
DTL.Description_21a_1_Usr = RTVCND(DB1.Ship_To_Customer_Flag);

// DTL.Description 14A      USR = Condition name of DB1.Statement Print Frequency
DTL.Description_14A_USR = RTVCND(DB1.Statement_Print_Frequency);

//?DN R16543 05/13/20-Get Info from Customer EXT2.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv All) TYPE(RTVOBJ) FILE(PUAAREP)                            AC2149720;
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(NLL.Dft_Mode_of_Transportaton);
PARAMETER(2ND.Buying_Group);
PARAMETER(2ND.Buying_Group_Opt_In_Out);
PARAMETER(DTL.Ship_To_Establishment_nbr);
PARAMETER(2ND.PM_Pallet_Type);
PARAMETER(2ND.Cust_Dft_Price_Type);
PARAMETER(2ND.Cust_Dft_Age_Days);
PARAMETER(LCL.Cust_Dft_Delivery_Time);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Get Condition Desc.
CASE;

// IF NOT 2ND.Buying Group Opt In/Out is Not Entered
IF ! 2ND.Buying_Group_Opt_In_Out = *BLANK;

// 2ND.Condition Desc. 2  USR = Condition name of 2ND.Buying Group Opt In/Out
2ND.Condition_Desc_2_USR = RTVCND(2ND.Buying_Group_Opt_In_Out);

ENDIF;

//?WI464 DN 02/07/22-Format Delivery Time.
CASE;

// IF LCL.Cust Dft Delivery Time is Entered
IF LCL.Cust_Dft_Delivery_Time > *ZERO;

//?Only Display Hours & Minutes from Cust Dft Delivery Time.
// LCL.Time Zoned USR = LCL.Cust Dft Delivery Time
LCL.Time_Zoned_USR = LCL.Cust_Dft_Delivery_Time;

// LCL.Time Alpha usr 6 = CVTVAR(LCL.Time Zoned USR)
LCL.Time_Alpha_usr_6 = CVTVAR(LCL.Time_Zoned_USR);

// LCL.Time HHMM Alpha USR = LCL.Time Alpha usr 6
LCL.Time_HHMM_Alpha_USR = LCL.Time_Alpha_usr_6;

// LCL.Requested Delivery Time = CVTVAR(LCL.Time HHMM Alpha USR)
LCL.Requested_Delivery_Time = CVTVAR(LCL.Time_HHMM_Alpha_USR);

// 2ND.Requested Delivery Time U = LCL.Requested Delivery Time
2ND.Requested_Delivery_Time_U = LCL.Requested_Delivery_Time;

ENDIF;

//? 9/17/2021 JBB WI464 - Pallet Management
EXECUTE FUNCTION(Rtv Pallet Master     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2198688;
PARAMETER(2ND.PM_Pallet_Type);
PARAMETER(2ND.PM_Description);
PARAMETER(NLL.Misc_Tare_Weight);
PARAMETER(NLL.Rental_Y_N);
PARAMETER(NLL.Effective_Date);
PARAMETER(NLL.Product_ID_GTIN);
PARAMETER(NLL.Interchange_Code);
PARAMETER(NLL.Class_Code);
PARAMETER(NLL.EDI_Trading_Partner_No);
PARAMETER(NLL.EDI_Whs_Duns_Number);
PARAMETER(NLL.Contact_Name);
PARAMETER(NLL.ASN_Ready_Y_N);
PARAMETER(NLL.Status_1_Unused);
PARAMETER(NLL.Status_2_Unused);
PARAMETER(NLL.Text_75_Unused);
PARAMETER(NLL.Record_Status);
PARAMETER(NLL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


ENDIF;

ENDDO;

//?Get the Company Customer for Company
DO;

EXECUTE FUNCTION(Rtv Company/Cust Data  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1708197;
PARAMETER(PAR.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(2ND.Terms_Code);
PARAMETER(2ND.Sales_Route_Code);
PARAMETER(2ND.Special_Instructions_2);
PARAMETER(2ND.Special_Instructions);
PARAMETER(2ND.Carrier_Code);
PARAMETER(2ND.Broker);
PARAMETER(2ND.P_O_Required_Flag);
PARAMETER(2ND.Deliver_after_time);
PARAMETER(2ND.Deliver_before_time);
PARAMETER(NLL.Alt_Remittance_Flag);
PARAMETER(2ND.Type_Code);
PARAMETER(2ND.Absorbed_Freight_Rate_CWT);
PARAMETER(2ND.Mileage_To_Customer);
PARAMETER(NLL.Co_Cust_Overage_Rate_CWT);
PARAMETER(2ND.Age_Code);
PARAMETER(2ND.Warehouse_Code);
PARAMETER(2ND.Outside_Warehouse_Flag);
PARAMETER(2ND.Customer_Group_Code);
PARAMETER(2ND.Customer_Group_Code_2);
PARAMETER(2ND.G_L_Code);
PARAMETER(2ND.Commodity_Market_Code);
PARAMETER(2ND.Credit_Contact_Name);
PARAMETER(2ND.Credit_Contact_Telephone);
PARAMETER(2ND.Credit_Contact_Bus_Title);
PARAMETER(2ND.Credit_Contact_Fax_Number);
PARAMETER(2ND.Allow_Man_Qt_WO_Approval);
PARAMETER(2ND.Fax_Invoice_Flag);
PARAMETER(2ND.Fax_Invoice_Fax_Number);
PARAMETER(2ND.Fax_Invoice_Contact_Name);
PARAMETER(2ND.Distributor);
PARAMETER(2ND.Default_Shipping_Co_Sts);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(DTL.City);
PARAMETER(LCL.Destination_City);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


EXECUTE FUNCTION(RTV Zone for City-ST   RT) TYPE(RTVOBJ) FILE(PDLUREP)          AC1484676;
PARAMETER(PAR.Company_Number);
PARAMETER(DTL.State_Code);
PARAMETER(LCL.Destination_City);
PARAMETER(2ND.Shipping_Zone_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Account info-Co/ShpRT) TYPE(RTVOBJ) FILE(OMGZCPP)          AC1708801;
PARAMETER(PAR.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(WRK.Extra_Amount_1);
PARAMETER(WRK.Extra_Number_1);
PARAMETER(WRK.Extra_Status_1);
PARAMETER(WRK.@G_L_Acct_Number);
PARAMETER(WRK.@G_L_Acct_Number_Sub);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.G/L Account for Dr = CON.*BLANK
 PAR.SH_Expense_Bucket = *BLANK;

 // PAR.G/L Sub Acount for Dr = CON.*BLANK
 PAR.G_L_Sub_Account = *BLANK;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Terms              RT) TYPE(RTVOBJ) FILE(CAAOREP)          AC1103643;
PARAMETER(PAR.Company_Number);
PARAMETER(2ND.Terms_Code);
PARAMETER(2ND.Terms_Description);
PARAMETER(WRK.Terms_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV SR Desc,person     RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270657;
PARAMETER(2ND.Sales_Route_Code);
PARAMETER(2ND.Sales_Route_Description);
PARAMETER(2ND.Salesperson_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
PARAMETER(2ND.Salesperson_Code);
PARAMETER(2ND.Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(2ND.Carrier_Code);
PARAMETER(2ND.Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Cust Group Descrp. RT) TYPE(RTVOBJ) FILE(PDJXREP)          AC1330037;
PARAMETER(2ND.Customer_Group_Code);
PARAMETER(2ND.Customer_Group_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Cust Group Descrp. RT) TYPE(RTVOBJ) FILE(PDJXREP)          AC1330037;
PARAMETER(2ND.Customer_Group_Code_2);
PARAMETER(2ND.USR_Cust_Term_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 2ND.Status Description = Condition name of 2ND.Record Status
2ND.Status_Description = RTVCND(2ND.Record_Status);

// LCL.Freight Overate Rate = 2ND.Freight Overate Rate
LCL.Co_Cust_Overage_Rate_CWT = 2ND.Co_Cust_Overage_Rate_CWT;

// LCL.Record Status = DB1.Record Status
LCL.Record_Status = DB1.Record_Status;

// LCL.Credit Contact Name = 2ND.Credit Contact Name
LCL.Credit_Contact_Name = 2ND.Credit_Contact_Name;

// LCL.Credit Contact Fax Number = 2ND.Credit Contact Fax Number
LCL.Credit_Contact_Fax_Number = 2ND.Credit_Contact_Fax_Number;

EXECUTE FUNCTION(RTV Type Code Desc.    RT) TYPE(RTVOBJ) FILE(CAAJREP)          AC1249965;
PARAMETER(2ND.Type_Code);
PARAMETER(2ND.Description_21A_Usr);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Commod. Mkts Desc  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1277934;
PARAMETER(2ND.Commodity_Market_Code);
PARAMETER(2ND.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Call program Val G/L Act Cde 2 HPE XF.
CALL PROGRAM(Val G/L Act Cde 2 HPE XF) ('PKVBXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(2ND.G_L_Code);
PARAMETER(2ND.G_L_Code_Desc_USR);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER(WRK.G_L_Account_Type_1_USR);
PARAMETER(WRK.G_L_Account_Type_2_USR);
PARAMETER(WRK.Record_Found_USR);

// 2ND.Name 25A USR = Condition name of 2ND.Age Code
2ND.Name_25A_USR = RTVCND(2ND.Age_Code);

// 2ND.Alt Rem Flag Desc Usr = Condition name of 2ND.Alt Remittance Flag
2ND.Alt_Rem_Flag_Desc_Usr = RTVCND(2ND.Alt_Remittance_Flag);

EXECUTE FUNCTION(Rtv CCE GL Sales Acct RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC2025813;
PARAMETER(PAR.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(2ND.CCE_GL_Sales_Acct_Type);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDDO;

// DTL.Reg Fax/Email Sts DescUsr = Condition name of DTL.Regional Mgr Fax/Email
DTL.Reg_Fax_Email_Sts_DescUsr = RTVCND(DTL.Regional_Mgr_Fax_Email);

// 2ND.TF Exempt Code Desc Usr = Condition name of 2ND.Customer TF Exempt Code
2ND.TF_Exempt_Code_Desc_Usr = RTVCND(2ND.Customer_TF_Exempt_Code);

// 2ND.Condition Desc. 1  USR = Condition name of 2ND.One Invoice Per PO
2ND.Condition_Desc_1_USR = RTVCND(2ND.One_Invoice_Per_PO);

//?Only display Field Managed description if flag is entered   E004044
CASE;

// IF DB1.Field vs. In-House flag is Managed Flag
IF DB1.Field_vs_In_House_flag = 'F'/'I';

// 2ND.Description 21a 4 Usr = Condition name of DB1.Field vs. In-House flag
2ND.Description_21a_4_Usr = RTVCND(DB1.Field_vs_In_House_flag);

ENDIF;

