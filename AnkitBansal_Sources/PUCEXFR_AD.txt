// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUCEXFR
// ?Date: 14.08.2025 Time: 03:49:55
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

// Execute function Cnv Read PCKGITMBOM   US.
EXECUTE FUNCTION(Cnv Read PCKGITMBOM   US) TYPE(EXCUSRSRC) ('PUCFUFR');
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Packaging_Item_Code);
PARAMETER(PAR.Packaging_Item_Quantity);
{
 *
 Fpckgitmbomif   e           k disk                                         Pckg BOM Raw Data
 *
 C                   dow       not %eof(pckgitmbom)
 C                   read      pckgitmbom
 *
 C                   eval      #OHGCD = PITMCD                              Item Code
 C                   eval      #OBRAA = PPITCD                              Packaging Item Code
 C                   eval      #OM1QT = PITMQT                              Packaging Item Qty
 *
}


//?Get Packaging Item Type, Reporting Group & Group Cat from Co 360.
CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

EXECUTE FUNCTION(RTV for All           RT) TYPE(RTVOBJ) FILE(POARREP)           AC2136673;
PARAMETER(360);
PARAMETER(PAR.Packaging_Item_Code);
PARAMETER(NLL.Pckg_Item_Description);
PARAMETER(NLL.Pckg_List_Sequence);
PARAMETER(NLL.Pckg_Type_Class);
PARAMETER(LCL.Pckg_Item_Type);
PARAMETER(NLL.Item_Code);
PARAMETER(NLL.Pckg_Unit_Cost);
PARAMETER(NLL.Pckg_Tare_Weight);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
PARAMETER(NLL.Pckg_Modified_Weight);
PARAMETER(NLL.Pckg_Unused_Status_3);
PARAMETER(NLL.Pckg_Unused_Sts_2);
PARAMETER(NLL.Pre_printed_Bag_Sts);
PARAMETER(NLL.Pckg_Unused_Status_5);
PARAMETER(NLL.Pckg_Unused_Status_6);
PARAMETER(NLL.Pckg_Unused_Status_7);
PARAMETER(NLL.Pckg_Unused_Status_8);
PARAMETER(NLL.Pckg_Unused_Status_9);
PARAMETER(NLL.Pckg_Unused_Status_10);
PARAMETER(NLL.Pckg_Unused_Code);
PARAMETER(NLL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Update Packaging BOM for All Companies Only If Exist in Company Item File.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Company/Item Exist RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2148148;
PARAMETER(360);
PARAMETER(PAR.Item_Code);

//?Record Exist for Co 360.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Update Packaging BOM for Co 360.
EXECUTE FUNCTION(Cnv Update Pckg BOM   RT) TYPE(RTVOBJ) FILE(POAZCPP)           AC2157960;
PARAMETER(360);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Packaging_Item_Code);
PARAMETER(PAR.Packaging_Item_Quantity);
PARAMETER(LCL.Pckg_Item_Type);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Cnv Create Pckg BOM   CR) TYPE(CRTOBJ) FILE(POAZCPP)           AC2136644;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(PAR.Pckg_Item_Type);
 PARAMETER(PAR.Pckg_Reporting_Group);
 PARAMETER(PAR.Pckg_Group_Category);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_1);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_2);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //?USER: Process Data record

 CASE;

 // IF DB1.Packaging Item Quantity NE PAR.Packaging Item Quantity
 IF DB1.Packaging_Item_Quantity <> PAR.Packaging_Item_Quantity;

 EXECUTE FUNCTION(Cnv Update Pckg BOM   CH) TYPE(CHGOBJ) FILE(POAZCPP)           AC2157961;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(DB1.Pckg_Item_Type);
 PARAMETER(DB1.Pckg_Reporting_Group);
 PARAMETER(DB1.Pckg_Group_Category);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


ENDIF;

EXECUTE FUNCTION(Val Company/Item Exist RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2148148;
PARAMETER(440);
PARAMETER(PAR.Item_Code);

//?Record Exist for Co 440.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Update Packaging BOM for Co 440.
EXECUTE FUNCTION(Cnv Update Pckg BOM   RT) TYPE(RTVOBJ) FILE(POAZCPP)           AC2157960;
PARAMETER(440);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Packaging_Item_Code);
PARAMETER(PAR.Packaging_Item_Quantity);
PARAMETER(LCL.Pckg_Item_Type);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Cnv Create Pckg BOM   CR) TYPE(CRTOBJ) FILE(POAZCPP)           AC2136644;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(PAR.Pckg_Item_Type);
 PARAMETER(PAR.Pckg_Reporting_Group);
 PARAMETER(PAR.Pckg_Group_Category);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_1);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_2);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //?USER: Process Data record

 CASE;

 // IF DB1.Packaging Item Quantity NE PAR.Packaging Item Quantity
 IF DB1.Packaging_Item_Quantity <> PAR.Packaging_Item_Quantity;

 EXECUTE FUNCTION(Cnv Update Pckg BOM   CH) TYPE(CHGOBJ) FILE(POAZCPP)           AC2157961;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(DB1.Pckg_Item_Type);
 PARAMETER(DB1.Pckg_Reporting_Group);
 PARAMETER(DB1.Pckg_Group_Category);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


ENDIF;

EXECUTE FUNCTION(Val Company/Item Exist RT) TYPE(RTVOBJ) FILE(CABZREP)          AC2148148;
PARAMETER(960);
PARAMETER(PAR.Item_Code);

//?Record Exist for Co 960.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Update Packaging BOM for Co 960.
EXECUTE FUNCTION(Cnv Update Pckg BOM   RT) TYPE(RTVOBJ) FILE(POAZCPP)           AC2157960;
PARAMETER(960);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Packaging_Item_Code);
PARAMETER(PAR.Packaging_Item_Quantity);
PARAMETER(LCL.Pckg_Item_Type);
PARAMETER(LCL.Pckg_Reporting_Group);
PARAMETER(LCL.Pckg_Group_Category);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Cnv Create Pckg BOM   CR) TYPE(CRTOBJ) FILE(POAZCPP)           AC2136644;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(PAR.Pckg_Item_Type);
 PARAMETER(PAR.Pckg_Reporting_Group);
 PARAMETER(PAR.Pckg_Group_Category);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_1);
 PARAMETER(LCL.Pckg_BOM_Unused_Sts_2);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //?USER: Process Data record

 CASE;

 // IF DB1.Packaging Item Quantity NE PAR.Packaging Item Quantity
 IF DB1.Packaging_Item_Quantity <> PAR.Packaging_Item_Quantity;

 EXECUTE FUNCTION(Cnv Update Pckg BOM   CH) TYPE(CHGOBJ) FILE(POAZCPP)           AC2157961;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Packaging_Item_Code);
 PARAMETER(PAR.Packaging_Item_Quantity);
 PARAMETER(DB1.Pckg_Item_Type);
 PARAMETER(DB1.Pckg_Reporting_Group);
 PARAMETER(DB1.Pckg_Group_Category);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


ENDIF;

ENDIF;

// Execute function Cnv EndDo             US.
EXECUTE FUNCTION(Cnv EndDo             US) TYPE(EXCUSRSRC) ('PUCGUFR');
{
 *
 C                   enddo                                                  dow not %eof
 *
}


