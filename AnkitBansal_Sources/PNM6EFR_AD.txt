// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNM6EFR
// ?Date: 14.08.2025 Time: 03:45:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('I/C');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// Execute function Prc Reset Field CAIN89 US.
EXECUTE FUNCTION(Prc Reset Field CAIN89 US) TYPE(EXCUSRSRC) ('USOSUFR');
{
 *  SETON INDICATOR 89 TO MAKE SURE PUTOVR IS TURNED OFF
 C                     MOVEL'1'       CAIN89  1
}


//?USER: Initialize subfile header

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(CTL.Company_Name_DRV);
PARAMETER(CTL.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(Warehouse Desc DRV) TYPE(DRVFLD)                               AC1532477;
PARAMETER(CTL.Warehouse_Desc_DRV);
PARAMETER(CTL.Warehouse_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Warehouse_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Warehouse Description = DB1.Warehouse Description
  PAR.Warehouse_Description = DB1.Warehouse_Description;

 }

}


EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(CTL.Item_Desc_DRV);
PARAMETER(CTL.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Del Item Loc/Crt Trn  DL) TYPE(DLTOBJ) FILE(PDL5CPP)           AC1505605;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Production_Date);
PARAMETER(RCD.Lot_Number);
PARAMETER(RCD.Location_Code);
PARAMETER(RCD.Location_Level);
{
 //?USER: Processing after Data update

 // PAR.ILL Item Qty On-Hand = DB1.ILL Item Qty On-Hand * CON.-1 *
 PAR.ILL_Item_Qty_On_Hand = DB1.ILL_Item_Qty_On_Hand * -1;

 EXECUTE FUNCTION(Crt Item Lot/Loc Trns IF) TYPE(EXCINTFUN)                      AC1510270;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER('A');
 PARAMETER(JOB.*Job_date);
 PARAMETER(DB1.Production_Date);
 PARAMETER(PAR.ILL_Item_Qty_On_Hand);
 PARAMETER(DB1.ILL_Unit_Weight);
 PARAMETER(DB1.Lot_Number);
 PARAMETER(DB1.Location_Code);
 PARAMETER(DB1.Location_Level);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('P');
 PARAMETER(WRK.LTT_Unused_Sts_1);
 PARAMETER(WRK.LTT_Unused_Sts_2);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Next Seq #        RT) TYPE(RTVOBJ) FILE(PDL7CPP)           AC1510279;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.LLT Sequence # = CON.1
   PAR.LLT_Sequence_Number = 1;

   //?USER: Process Data record

   // PAR.LLT Sequence # = DB1.LLT Sequence # + CON.1
   PAR.LLT_Sequence_Number = DB1.LLT_Sequence_Number + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt Item Lot/Loc Trns CR) TYPE(CRTOBJ) FILE(PDL7CPP)           AC1505285;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  PARAMETER(PAR.LLT_Production_Date);
  PARAMETER(PAR.LLT_Transaction_Qty);
  PARAMETER(PAR.LLT_Transaction_Wgt);
  PARAMETER(PAR.LLT_Lot_Number);
  PARAMETER(PAR.Location_Code);
  PARAMETER(PAR.LLT_Location_Level);
  PARAMETER(PAR.Transfer_Warehouse_Code);
  PARAMETER(PAR.LLT_Transfer_Lot_Number);
  PARAMETER(PAR.Transfer_Location_Code);
  PARAMETER(PAR.LLT_Transfer_Loc_Level);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.LLT_Status);
  PARAMETER(PAR.LTT_Unused_Sts_1);
  PARAMETER(PAR.LTT_Unused_Sts_2);
  PARAMETER(PAR.EDI_Status_1);
  PARAMETER(PAR.EDI_Status_2);
  PARAMETER(PAR.EDI_Status_3);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Job_Time);
  PARAMETER(PAR.User_Id);
  PARAMETER(PAR.Job_Name);
  PARAMETER(PAR.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Item Loc/Crt Trn  CH) TYPE(CHGOBJ) FILE(PDL5CPP)           AC1505604;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Production_Date);
PARAMETER(RCD.Lot_Number);
PARAMETER(RCD.Location_Code);
PARAMETER(RCD.Location_Level);
PARAMETER(RCD.ILL_Item_Qty_On_Hand);
PARAMETER(RCD.ILL_Unit_Weight);
PARAMETER(RCD.ILL_Co_Packer_Lot_Num);
PARAMETER(RCD.ILL_Item_Wgt_On_Hand);
PARAMETER(RCD.ILL_Unused_Qty_3);
PARAMETER(RCD.ILL_Unused_Wgt_3);
PARAMETER(RCD.ILL_Avail_Ship_Date);
PARAMETER(RCD.ILL_Unused_Date_1);
PARAMETER(RCD.ILL_Unused_Date_2);
PARAMETER(RCD.ILL_Unused_Nbr_1);
PARAMETER(RCD.ILL_Customer_Code);
PARAMETER(RCD.ILL_Status);
PARAMETER(RCD.ILL_Unused_Sts_1);
PARAMETER(RCD.ILL_Unused_Sts_2);
PARAMETER(RCD.ILL_Unused_Sts_3);
PARAMETER(RCD.Inv_Hold_Reason_Code);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Job_Time);
PARAMETER(RCD.User_Id);
PARAMETER(RCD.Job_Name);
PARAMETER(RCD.Job_Date);
{
 //?USER: Processing after Data read

 // PAR.Quantity Loc On-Hand USR = PAR.ILL Item Qty On-Hand - DB1.ILL Item Qty On-Ha
 PAR.Quantity_Loc_On_Hand_USR = PAR.ILL_Item_Qty_On_Hand - DB1.ILL_Item_Qty_On_Hand;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 CASE;

 // IF PAR.Quantity Loc On-Hand USR is NE Zero
 IF PAR.Quantity_Loc_On_Hand_USR <> *ZERO;

 EXECUTE FUNCTION(Crt Item Lot/Loc Trns IF) TYPE(EXCINTFUN)                      AC1510270;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER('A');
 PARAMETER(JOB.*Job_date);
 PARAMETER(DB1.Production_Date);
 PARAMETER(PAR.Quantity_Loc_On_Hand_USR);
 PARAMETER(WRK.LLT_Transaction_Wgt);
 PARAMETER(DB1.Lot_Number);
 PARAMETER(DB1.Location_Code);
 PARAMETER(DB1.Location_Level);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('P');
 PARAMETER(WRK.LTT_Unused_Sts_1);
 PARAMETER(WRK.LTT_Unused_Sts_2);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Next Seq #        RT) TYPE(RTVOBJ) FILE(PDL7CPP)           AC1510279;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.LLT Sequence # = CON.1
   PAR.LLT_Sequence_Number = 1;

   //?USER: Process Data record

   // PAR.LLT Sequence # = DB1.LLT Sequence # + CON.1
   PAR.LLT_Sequence_Number = DB1.LLT_Sequence_Number + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt Item Lot/Loc Trns CR) TYPE(CRTOBJ) FILE(PDL7CPP)           AC1505285;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.LLT_Transaction_Type);
  PARAMETER(PAR.LLT_Transaction_Date);
  PARAMETER(PAR.LLT_Sequence_Number);
  PARAMETER(PAR.LLT_Production_Date);
  PARAMETER(PAR.LLT_Transaction_Qty);
  PARAMETER(PAR.LLT_Transaction_Wgt);
  PARAMETER(PAR.LLT_Lot_Number);
  PARAMETER(PAR.Location_Code);
  PARAMETER(PAR.LLT_Location_Level);
  PARAMETER(PAR.Transfer_Warehouse_Code);
  PARAMETER(PAR.LLT_Transfer_Lot_Number);
  PARAMETER(PAR.Transfer_Location_Code);
  PARAMETER(PAR.LLT_Transfer_Loc_Level);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.LLT_Status);
  PARAMETER(PAR.LTT_Unused_Sts_1);
  PARAMETER(PAR.LTT_Unused_Sts_2);
  PARAMETER(PAR.EDI_Status_1);
  PARAMETER(PAR.EDI_Status_2);
  PARAMETER(PAR.EDI_Status_3);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Job_Time);
  PARAMETER(PAR.User_Id);
  PARAMETER(PAR.Job_Name);
  PARAMETER(PAR.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 ENDIF;

}


