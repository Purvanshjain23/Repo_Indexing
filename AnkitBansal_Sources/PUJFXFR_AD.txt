// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUJFXFR
// ?Date: 14.08.2025 Time: 03:50:32
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// Execute function Cnv Read EDI945LOAD   US.
EXECUTE FUNCTION(Cnv Read EDI945LOAD   US) TYPE(EXCUSRSRC) ('PUJGUFR');
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Case_Quantity);
PARAMETER(PAR.Case_Weight);
PARAMETER(PAR.PT_Serial_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Manifest_Pallet_Number);
PARAMETER(LCL.Date_8_0_USR);
{
 *
 Fedi945loadif   e           k disk                                         EDI945 Issue Loads
 *
 C                   read      edi945load
 C                   dow       not %eof(edi945load)
 *
 C                   eval      #OC4NB = EDORNO                              Order Number
 C                   eval      #ODPNB = EDLNNO                              Line Number
 C                   eval      #OHGCD = EDITCD                              Item Code
 C                   eval      #OFOQT = EDCQTY                              Case Quantity
 C                   eval      #OH7NY = EDPLNO                              Pallet Number
 C                   eval      #OPFNX = EDSRNO                              Serial Number
 C                   eval      #OR0NB = EDCWGT                              Case Weight
 C                   eval      #OMLNX = EDPRDT                              Production Date
 *
}


//?Get Company from OH & Warehouse from OD file each time Order # changes.
CASE;

// IF PAR.Order Number NE LCL.Order Number
IF PAR.Order_Number <> LCL.Order_Number;

EXECUTE FUNCTION(RTV Company for Ord   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2074443;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV 1st Warehouse      RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1575817;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.Warehouse_Code);
{
 //?USER: Process Data record

 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 QUIT;

}


ENDIF;

//?Delete & Re-Create the Manifest Detail Records.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Delete Only When Order Number Changes.
CASE;

// IF PAR.Order Number NE LCL.Order Number
IF PAR.Order_Number <> LCL.Order_Number;

// LCL.Order Number = PAR.Order Number
LCL.Order_Number = PAR.Order_Number;

// LCL.Order Sequence Number = PAR.Order Sequence Number
LCL.Order_Sequence_Number = PAR.Order_Sequence_Number;

// LCL.Case Sequence Number = CON.1
LCL.Case_Sequence_Number = 1;

EXECUTE FUNCTION(Cnv Upd fm EDI945LOAD RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC2158412;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT OM Manifest Detail DL) TYPE(DLTOBJ) FILE(OMFNCPP)          AC1183251;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Case_Sequence_Number);
}


//?Delete Only When Order Number Changes.
// IF PAR.Order Sequence Number NE LCL.Order Sequence Number
IF PAR.Order_Sequence_Number <> LCL.Order_Sequence_Number;

//?Reset Case Seq # When Line Seq # Changes.
// LCL.Order Sequence Number = PAR.Order Sequence Number
LCL.Order_Sequence_Number = PAR.Order_Sequence_Number;

// LCL.Case Sequence Number = CON.1
LCL.Case_Sequence_Number = 1;

//?Delete Only When Order Number Changes.
// IF *OTHERWISE
IF *OTHERWISE;

//?Increment Case Sequence Number by 1 for Same Order #/Line Seq #.
// LCL.Case Sequence Number = LCL.Case Sequence Number + CON.1
LCL.Case_Sequence_Number = LCL.Case_Sequence_Number + 1;

ENDIF;

//?Format Production Date.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Production Date USR D8# = LCL.Date 8.0 USR
LCL.Production_Date_USR_D8# = LCL.Date_8_0_USR;

// PAR.Production Date = LCL.Production Date USR D8#
PAR.Production_Date = LCL.Production_Date_USR_D8#;

ENDIF;

EXECUTE FUNCTION(Cnv Upd fm EDI945LOAD2RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC2158413;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(1);
PARAMETER(LCL.Case_Sequence_Number);
PARAMETER(PAR.Case_Quantity);
PARAMETER(PAR.Case_Weight);
PARAMETER(PAR.PT_Serial_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Manifest_Pallet_Number);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(Crt Manifest Detail   CR) TYPE(CRTOBJ) FILE(OMFNCPP)           AC1513165;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Case_Sequence_Number);
 PARAMETER(PAR.Case_Quantity);
 PARAMETER(PAR.Case_Weight);
 PARAMETER(LCL.Inventory_Updated_Flag);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.PT_Serial_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Case_Weight);
 PARAMETER(LCL.Manifest_Lot_ID);
 PARAMETER(LCL.Manifest_Total_Tare);
 PARAMETER(LCL.Manifest_Co_Park_Lot_Nbr);
 PARAMETER(PAR.Manifest_Pallet_Number);
 PARAMETER(LCL.Manifest_Shift);
 PARAMETER(LCL.HPB_Meter_Net_Gallon);
 PARAMETER(LCL.Manifest_Net_Weight_Kg);
 PARAMETER(LCL.Manifest_Unused_Status_1A);
 PARAMETER(LCL.Manifest_Unused_Status_2A);
 PARAMETER(LCL.Manifest_Unused_Date);
 PARAMETER(LCL.HPB_COA_Batch_Number);
 PARAMETER(LCL.HPB_Meter_Start_Gallon);
 PARAMETER(LCL.HPB_Meter_Ending_Gallon);
 PARAMETER(LCL.HPB_Meter_Total_Gallon);
 PARAMETER(LCL.HPB_Meter_Net_Weight);
 PARAMETER(LCL.HPB_Density_Ref_Gravity);
 PARAMETER(LCL.EDI_Status_1);
 PARAMETER(LCL.EDI_Status_2);
 PARAMETER(LCL.EDI_Status_3);
 PARAMETER('A');
 PARAMETER(JOB.*Job_time);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*Job_date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

// Execute function Cnv EndDo EDI945LOAD  US.
EXECUTE FUNCTION(Cnv EndDo EDI945LOAD  US) TYPE(EXCUSRSRC) ('PUJIUFR');
{
 *
 C                   read      edi945load
 C                   enddo                                                  dow not %eof
 *
}


