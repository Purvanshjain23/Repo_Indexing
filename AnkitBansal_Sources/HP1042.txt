      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP1042
      * TITLE:       REVISE SHIP TO SBD CUSTOMER REF
      * PROGRAMMER:  BRAD BADEN
      * CREATED:     10/31/2017
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD OR CHANGE SHIP TO
      *           SBD CUSTOMER REF RECORDS
      *
      *           THIS PROGRAM IS CALLED FROM HP4042 - WORK WITH SHIP
      *           TO SBD CUSTOMER REF
      *
      *           THE FIELD 'MODE' CONTAINS THE VALUE PASSED INTO
      *           THIS PROGRAM FROM THE CALLING PROGRAM.  THE FIELD
      *           'DFMODE' IS THE SCREEN FIELD THAT DISPLAYS THE
      *           VALUE OF 'MODE'.  MODE WILL BE CREATE OR REVISE.
      *           ONCE IN THE PROGRAM, MODE AND DFMODE WILL NEVER
      *           CHANGE.  HOWEVER, THE ACTION BEING PERFORMED CAN
      *           CHANGE DEPENDING ON THE FUNCTION KEYS THE USER TAKES.
      *
      *           IF THE USER INACTIVATES A SHIP TO SBD CUSTOMER REF
      *           RECORD, A CHECK IS MADE TO SEE IF THERE ARE ANY
      *           RECORDS IN THE SHIP TO SBD CUSTOMER FILE HSP1951
      *           THAT ARE ACTIVE.  IF AN ACTIVE RECORD IS FOUND,
      *           DISPLAY AN ERROR MESSAGE AND DO NOT ALLOW THE
      *           INACTIVATION OF THE RECORD.
      *
      *ˆ          IMPORTANT NOTE FOR MODIFYING:
      *ˆ          This program needs to retrieve data from files that
      *ˆ          exist in the Plant Specific libraries for validating
      *ˆ          Producer and Producer Location.  When adding or updating
      *ˆ          Customer Type Number records 02 or 03, the values are
      *ˆ          validated in PRKFSTP for company 440, and PRKFGUP for
      *ˆ          company 360.  The F specs below for file PKACREL2 and
      *ˆ          PKAFREL0 use the EXTFILE keyword to point to the
      *ˆ          correct library.
      *ˆ
      *ˆ          When Testing, the library on the EXTFILE keywords for
      *ˆ          360 will need to be PRKFTSTSTP and PRKFTSTGUP.  For
      *ˆ          production, the keywords need to be PRKFSTP and
      *ˆ          PRKFGUP.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 11/27/17  Brad Baden   E010812
      *           Recompiled for field changes in file HSL1951A
      *
      *  1/04/17  Brad Baden   E010812
      *           Add validation for Producer and Producer Location.
      *           The validation is environment specific based upon
      *           the Company record (Type=1).
      *
      *  3/22/18  Brad Baden   E010812
      *           Fix screen error for Type Numbers 2 and 3 causing a
      *           device or screen error when the data entered on the
      *           screen is in error for those type numbers.  See the
      *           not above for details on testing this screen.
      *
      ****************************************************************
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD1042   CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSL1951A  UF A E           K DISK
      *    SHIP TO SBD CUSTOMER REF
      *
     FHSL195A   IF   E           K DISK
      *    SHIP TO SBD CUSTOMER
      *
     FPDJYREL2  IF   E           K DISK
      *    Company Defaults Internal
      *
     FPKACREL2  IF   E           K DISK    EXTFILE('PRKFSTP/PKACREL2')
      *    Producer - Active for company 440
      *
     FPKACREL1  IF   E           K DISK    EXTFILE('PRKFGUP/PKACREL1')
      *    Producer - Active for company 440
      *
     FPKAFREL0  IF   E           K DISK    EXTFILE('PRKFSTP/PKAFREL0')
      *    Producer - Active for company 440
      *
     FPKAFREL1  IF   E           K DISK    EXTFILE('PRKFGUP/PKAFREL1')
      *    Producer - Active for company 440
      *
     FHSL1952A  IF   E           K DISK
      *    CUSTOMER TYPE MASTER
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D*DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  STAND ALONE FIELDS
      *---------------------------------------------------------------
     D WKAJD           S              8A
     D WKTYPNO         S              2A
     D WKTYPDS         S             30A
     D WKCRST          S              1A
     D wkupdt          s                   like(crupdt)
     D wkuptm          s                   like(cruptm)
     D wkupusr         s                   like(crupusr)
     D wkmaxmsg        s              2p 0
     D addrmv          s              1
     D library         s             10
     D companya        s              3
     D companyn        s              3p 0
     D compval         s             10
     D stringlen       s              1p 0
     D rmvflag         s              1
     D wkkilldt        s              7p 0
     D wkdelvdt        s              7p 0
     D wktypno2        s              2p 0
     D producer        s              6
     D producerloc     s              6
     D dsurecsts       s              1
     D dsuprcsts       s              1  0
     D dsuerrrsn       s              6
     D valproducer     s              1
     D valprdloc       s              1
     D valdelvdt       s              1
     D valkilldt       s              1
     D procinfo        s              1
     D returncd        s              7
     D wkisodate       s               D   datfmt(*iso)
     D XXTYPNO         S              2P 0
     D XXTYPDS         S             30A
     D svtypcd         s              2a
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     UPDATE        $UPD1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   MOVE      *BLANK        CRTYPDS
     C                   MOVE      *BLANK        DFCRST
      *
      * IF INCOMING MODE IS REVISE THEN RETRIEVE DATABASE RECORD
      * USING THE CODE THAT WAS PASSED IN.  DO NOT LOCK THE RECORD.
      *
     C     MODE          IFEQ      REVISE                                       IF REV/DEL
     C     KEY01         CHAIN(N)  CRREC                              90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     CRAJD         DFAJD
     C                   MOVEL     CRTYPNO       DFTYPNO
     C                   MOVEL     CRTYPDS       DFTYPDS
     C                   MOVEL     CRTYPCD       DFTYPCD
     C                   MOVEL     CRCRST        DFCRST
     C                   ELSE
      * NOT FOUND
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09253'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     WKTYPNO       MGW(2)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF REV/DEL
      *
      * IF YOU COULDN'T FIND THE RECORD, SET TO DISPLAY THE SCREEN
      * WITH THE ERROR MESSAGE.
      * IF HE IS CREATING OR REVISING, DISPLAY THE SCREEN.
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  SET DSPF INDICATORS TO CONTROL INPUT/OUT FIELDS AND AVAILABLE
      *  FUNCTION KEYS.
      *
     C                   SELECT
     C     MODE          WHENEQ    REVISE
     C                   SETON                                        60
     C     MODE          WHENEQ    CREATE
     C                   SETON                                        61
     C                   ENDSL
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP1042K1
     C                   WRITE     HP1042EC
     C                   EXFMT     HP1042R1
      *
     C                   EVAL      WKAJD   = %CHAR(DFAJD)
     C                   EVAL      WKTYPNO = %CHAR(DFTYPNO)
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * RESET ACTION TO BE EQUAL TO THE INCOMING MODE.
      *
     C                   MOVEL     MODE          ACTION
      *
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4=PROMPT
     C                   EXSR      $F4S1
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * *IN62 WILL BE ON IF THE RECORD THE USER IS TRYING TO ACCESS
      * HAS BEEN DELETED BY ANOTHER USER.  SO, ONLY PERFORM THE
      * EDITS FOR THE FIELDS ON THE SCREEN IF *IN62 IS OFF
      *
     C     *IN62         IFEQ      *OFF                                         IF HERE
      *
      * IF YOU ARE CREATING A NEW RECORD, VALIDATE THAT:
      *  A CUSTOMER TYPE NUMBER WAS ENTERED & THE CODE
      *  DOES NOT ALREADY EXIST IN THE FILE
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C     DFTYPNO       IFEQ      *ZEROS                                       IF DFTYPNO = 0
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF                                                  FI ERROR
     C                   ELSE
      *
     C     KEY01         CHAIN(N)  CRREC                              91
     C     *IN91         IFEQ      *OFF                                         IF *IN91 = *OFF
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09252'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKTYPNO       MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  FI ERROR
     C                   ENDIF                                                  FI *IN91 = *OFF
     C                   ENDIF                                                  Fi DFTYPNO = 0
      *
      * VALIDATE CUSTOMER TYPE NUMBER
      *
     C                   IF        ERROR = 0 AND                                IF ERROR = 0
     C                             DFTYPNO <> 0
     C     DFTYPNO       CHAIN     HSL1952A
     C                   IF        %FOUND                                       IF %FOUND
     C                   EVAL      DFTYPDS = CTTYPDS
     C                   ELSE
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09043'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  FI ERROR
     C                   ENDIF                                                  FI %FOUND
     C                   ENDIF                                                  FI ERROR = 0
     C                   ENDIF                                                  FI CREATE
      *
      * ALWAYS EDIT FOR BLANKS IN THE CUSTOMER TYPE VALUE
      *
     C     DFTYPCD       IFEQ      *BLANK                                       IF DFTYPCD
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF                                                  FI ERROR
     C                   ELSE
     C                   exsr      $vlcustypv
     C                   ENDIF                                                  FI DFTYPCD
      *
      * STATUS MUST BE ACTIVE OR INACTIVE
      *
     C     DFCRST        IFNE      'A'                                          IF BAD STAT
     C     DFCRST        ANDNE     'I'
     C                   SETON                                        33        IF ERROR
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09105'     MGID(E)
     C                   ENDIF                                                  FI ERROR
     C                   ELSE
      *
      * IF STATUS IS VALID AND IF STATUS IS ACTIVE, VALIDATE THAT
      * THE SHIP TO SBD CUSTOMER RECORD IS ACTIVE
      *
     C                   IF        DFCRST = 'A'                                 IF ACTIVE
     C     DFAJD         CHAIN     HSL195A
     C                   IF        %FOUND                                       IF %FOUND
     C                   IF        CUCUST = 'I'                                 IF CUCRST
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09259'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF ERROR
     C                   ENDIF                                                  IF CRCTST

     C                   ENDIF                                                  IF %FOUND
      *
     C                   ENDIF                                                  IF INACTIVE
     C                   ENDIF                                                  IF BAD STAT
      *
     C                   ENDIF                                                  IF HERE
      *
      * IF THERE ARE NO ERRORS, ATTEMPT THE WRITE/UPDATE; OTHERWISE,
      * REDISPLAY THE SCREEN.  IF A RECORD HAS BEEN DELETED OUT FROM
      * UNDER THE USER (*IN62 IS ON), THEN THE ERROR MESSAGE WILL BE
      * ISSUED IN THE UPDATE SUBROUTINE.  SO, ALWAYS PERFORM THIS CODE.
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $UPD1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $VLCUSTYPV - Validate Customer Type Values based on Cust Type Number
      *---------------------------------------------------------------
      *
     C     $vlcustypv    begsr
      *
     C                   select                                                 select
     C                   when      dftypno = 1                                   when dftypno = 1
      *
      * length of field must be 3
      *
     C                   eval      stringlen = %len(%trim(dftypcd))
     C                   if        stringlen <> 3                                 if stringlen<>3
     C                   eval      *in32 = *on
     C     error         iflt      maxmsg                                          if  error
     C                   add       1             error
     C                   movel     'HS09261'     mgid(e)
     C                   endif                                                     fi  error
     C                   else
      *
      * if value is 3.0 numeric
      *
     C                   eval      companya = dftypcd
      *
      *
     C                   if        %check('0123456789':companya) = 0                 if %check
     C                   eval      companyn = %dec(companya:3:0)
     C     companyn      chain     pdjyrel2
     C                   if        not %found(pdjyrel2)                              if not %found
     C                   eval      *in32 = *on
     C     error         iflt      maxmsg                                             if error
     C                   add       1             error
     C                   movel     'HS09261'     mgid(e)
     C                   endif                                                        fi error
     C                   endif                                                       fi not %found
     C                   else                                                       x %check
      *
      * if not numeric, send error message
     C                   eval      *in32 = *on
     C     error         iflt      maxmsg                                            if error
     C                   add       1             error
     C                   movel     'HS09261'     mgid(e)
     C                   endif                                                       fi error
     C                   endif                                                      fi %check
     C                   endif                                                    fi stringlen<>3
      *
     C                   when      dftypno = 2 or dftypno = 3                    when dftypno = 2
      *
     C                   exsr      $vlprodloc
      *
     C                   endsl                                                  endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $vlprodloc - Validate Producer and Producer Location values
      *---------------------------------------------------------------
      *
     C     $vlprodloc    begsr
      *
      * First check that a Customer Type Number of 1 exists for this Customer
     C                   eval      wktypno2 = 1
     C     key02         chain     hsl1951a
     C                   if        not %found                                   if not %found
     C                   eval      *in32 = *on
     C     error         iflt      maxmsg                                        if error
     C                   add       1             error
     C                   movel     'HS09265'     mgid(e)
     C                   leavesr
     C                   endif                                                   fi error
     C                   else
      *
     C                   eval      companya = crtypcd
     C                   eval      companyn = %dec(companya:3:0)
     C                   endif                                                  fi  not %found
      *
     C                   select                                                 select
     C                   when      dftypno = 2                                   when dftypno = 2
      *
      * Validate Producer in plant specific library
      *
     C                   if        companyn = 440                                  if companyn = 440
     C     dftypcd       chain     pkacrel2
     C                   if        not %found(pkacrel2)                             if not %found
     C                   eval      *in32 = *on
     C                   if        error < maxmsg                                    if errmsg < max
     C                   add       1             error
     C                   move      'HS09267'     mgid(e)
     C                   endif                                                       fi errmsg < max
     C                   endif                                                      fi not %found
     C                   endif                                                     fi companyn = 440
      *
     C                   if        companyn = 360                                  if companyn = 360
     C     dftypcd       chain     pkacrel1
     C                   if        not %found(pkacrel1)
     C                   eval      *in32 = *on
     C                   if        error < maxmsg                                    if errmsg < max
     C                   add       1             error
     C                   move      'HS09267'     mgid(e)
     C                   endif                                                       fi errmsg < max
     C                   endif                                                      fi not %found
     C                   endif                                                     fi companyn = 360
      *
      * Validate Producer Location
     C                   when      dftypno = 3                                   when dftypno = 3
      *
      * Verify there is a Producer code in the Type 2 record for Customer
     C                   eval      wktypno2 = 2
     C     key02         chain     hsl1951a
     C                   if        not %found                                     if not %found
     C                   eval      *in32 = *on
     C     error         iflt      maxmsg                                          if error
     C                   add       1             error
     C                   movel     'HS09266'     mgid(e)
     C                   endif                                                     fi error
     C                   else
      *
      * Validate Producer Location in plant specific library
     C                   if        companyn = 440                                  if companyn = 440
     C     key03         chain     pkafrel0
     C                   if        not %found(pkafrel0)                             if not %found
     C                   eval      *in32 = *on
     C                   if        error < maxmsg                                    if errmsg < max
     C                   add       1             error
     C                   move      'HS09268'     mgid(e)
     C                   endif                                                       fi errmsg < max
     C                   endif                                                      fi not %found
     C                   endif                                                     fi companyn = 440
      *
     C                   if        companyn = 360                                  if companyn = 360
     C     key03         chain     pkafrel1
     C                   if        not %found(pkafrel1)                             if not %found
     C                   eval      *in32 = *on
     C                   if        error < maxmsg                                    if errmsg < max
     C                   add       1             error
     C                   move      'HS09268'     mgid(e)
     C                   endif                                                       fi errmsg < max
     C                   endif                                                      fi not %found
     C                   endif                                                     fi companyn = 360
     C                   endif                                                    fi not %found
      *
     C                   endsl                                                  end select
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Add or Remove a Library from the Library List
      *----------------------------------------------------------------
      *
     C     $addrmvlib    begsr
      *
     C                   select
     C                   when      addrmv = 'A'                                 when addrmv = 'A'
      *
      * Retrieve library for the Producer Location validation
     C                   if        companyn <> 0                                if companyn <> 0
     C                   call      'PDGKXFR'
     C                   parm      *blanks       rtncd
     C                   parm                    companyn
     C                   parm      'HPELIB    '  compval
     C                   parm                    library
      *
     C                   eval      maxmsg = wkmaxmsg
      *
     C                   if        library <> *blanks                           if library
      *
      * Add library list entry
     C                   call      'HP3101CL'
     C                   parm                    library
     C                   parm                    addrmv
     C                   parm      *blanks       rmvflag
     C                   endif                                                  fi library
     C                   endif                                                  fi companyn <> 0
      *
     C                   when      addrmv = 'R' and rmvflag = 'Y'               when action = 'R'
     C                   if        library <> *blanks                           if library
      *
      * Remove library list entry
     C                   call      'HP3101CL'
     C                   parm                    library
     C                   parm                    addrmv
     C                   parm                    rmvflag
     C                   endif                                                  fi library
      *
     C                   endsl                                                  endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $UPD1  - SUBROUTINE TO WRITE/UPDATE/DELETE DATABASE FILE
      *----------------------------------------------------------------
      *
     C     $UPD1         BEGSR
      *
      * IF THE USER IS ACTIVATING,
      *   PERFORM INACTIVATING INTEGRITY CHECKS
      *
     C     DFCRST        IFEQ      'A'                                          IF DELETE
     C                   EXSR      $STSCK
     C                   ENDIF                                                  IF DELETE
      *
      * IF USER ACTION IS REVISING, DETERMINE THAT THE RECORD HE
      * ACCESSING STILL EXISTS PRIOR TO ATTEMPTING TO UPDATE.
      * LOCK THE RECORD FOR UPDATE.
      *
     C     ERROR         IFEQ      0                                            IF GOOD
     C     ACTION        IFEQ      REVISE                                       IF D/R
     C     KEY01         CHAIN     CRREC                              93
     C     *IN93         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09253'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKAJD         MGW(1)
     C                   MOVEA     WKTYPNO       MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF D/R
     C                   ENDIF                                                  IF GOOD
      *
      *  IF THERE ARE NO ERRORS, REVISE OR CREATE THE RECORD
      *
     C     ERROR         IFEQ      0                                            IF NO ERR
      *
      *
      *  MOVE DSPF FIELDS TO DATABASE FILE FIELDS
      *
     C                   Z-ADD     DFAJD         CRAJD
     C                   Z-ADD     DFTYPNO       CRTYPNO
     C                   MOVEL     DFTYPDS       CRTYPDS
     C                   MOVEL     DFTYPCD       CRTYPCD
     C                   MOVEL     DFCRST        CRCRST
      *
      *  MOVE TIMESTAMP VALUES TO DATABASE FIELDS
      *
     C                   Z-ADD     WKUPDT        CRUPDT
     C                   Z-ADD     WKUPTM        CRUPTM
     C                   MOVEL     WKUPUSR       CRUPUSR
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   WRITE     CRREC
     C                   ELSE
     C                   UPDATE    CRREC
     C                   ENDIF                                                  IF CREATE
     C                   ENDIF                                                  IF NO ERR
      *
      *  IF THERE ARE ANY ERRORS, REDISPLAY THE SCREEN; OTHERWISE, EXIT
      *  THE PROGRAM AUTOMATICALLY. (THE USER DOES NOT HAVE TO TAKE
      *  ANY FUNCTION KEY TO EXIT)
      *
     C     ERROR         IFGT      0
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $STSCK - VALIDATE RECORD CAN BE ACTIVATED                        *
      *---------------------------------------------------------------
      *
     C     $STSCK        BEGSR
      *
     C     DFTYPNO       CHAIN     HSL1952A
     C                   IF        %FOUND                                       IF %FOUND
     C                   IF        CTCTST <> 'A'                                IF CTCTST
      *
      * ERROR IF CUSTOMER TYPE STATUS IS NOT 'A'
      *
     C     ERROR         IFLT      MAXMSG                                       IF ERROR
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09257'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     WKTYPNO       MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF ERROR

     C                   ENDIF                                                 IF CTCTST
     C                   ENDIF                                                 IF %FOUND
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF CUSTOMER TYPE NUMBER
      *
     C                   WHEN      MODE = CREATE AND
     C                             FLD =  'DFTYPNO'
     C                   MOVE      *ZEROS        XXTYPNO
     C                   MOVE      *BLANKS       XXTYPDS
     C                   CALL      'HP5064'
     C                   PARM                    XXTYPNO
     C                   PARM                    XXTYPDS
     C                   SETON                                        53
     C     XXTYPNO       IFNE      *ZERO                                        IF SELECTED
     C                   MOVEL     XXTYPNO       DFTYPNO
     C                   MOVEL     XXTYPDS       DFTYPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF STATUS
      *
     C     FLD           WHENEQ    'DFCRST'
     C                   MOVE      *BLANK        WKCRST
     C                   CALL      'HP512'
     C                   PARM                    WKCRST
     C                   SETON                                        53
     C     WKCRST        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     WKCRST        DFCRST
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 CTT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
     C     KEY01         KLIST
     C                   KFLD                    DFAJD
     C                   KFLD                    DFTYPNO
      *
     C     key02         klist
     C                   kfld                    dfajd
     C                   kfld                    wktypno2
      *
     C     key03         klist
     C                   kfld                    crtypcd
     C                   kfld                    dftypcd
      *
      * PARM LISTS
      *     MODE IS THE MODE COMING IN FROM THE WORK WITH.
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFAJD
     C                   PARM                    DFCNM
     C                   PARM                    DFTYPNO
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C     *LIKE         DEFINE    DFMODE        ACTION
     C     *LIKE         DEFINE    DFMODE        MODE
     C                   MOVEL     MODE          ACTION
     C                   MOVEL     MODE          DFMODE
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   eval      wkmaxmsg = maxmsg
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * Set up the date/time/user/program for time-stamping the Movement Event record.
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkupdt
     C                   time                    wkuptm
     C                   move      sdusr         wkupusr
      *
     C                   ENDSR
      /EJECT
