     H/TITLE WW EvalTran UplMovRmvDF   Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Display file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISELOUC
     H* Date          : 06/27/24  Time  : 12:18:43
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPLPEDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW EvalTran UplMovRmvDF   Display file
      *
     FPKCPCPLDIF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Eval Trans UPL            Co/KlDt(d)/Sft(d)/Seq(d)
      *
     FPKA1CPLAIF  E           K        DISK
      * RSQ : Tattoo Header             Co/Kill/Tattoo Active
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * Long constants
     E                    @CN#    1  03  6   @CN    25
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      * Outward parameters
     IPARC        DS                             10
      * KEY : Eval Trans UPL            Retrieval index
      * I : RST EA Company Number
     I                                    P   1   20PAHKST
      * I : RST EA Kill Date
     I                                    P   3   60PAB7DT
      * I : RST EA Scale Sequence Number
     I                                    P   7  100PAKINB
      *
      * Outward parameters
     IPBRC        DS                             10
      * KEY : Eval Trans UPL            Retrieval index
      * I : RST EA Company Number
     I                                    P   1   20PBHKST
      * I : RST EA Kill Date
     I                                    P   3   60PBB7DT
      * I : RST EA Scale Sequence Number
     I                                    P   7  100PBKINB
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N :  Oms Warehouse Code
     I                                        1   3 P1J8NB
      * N :  CC Company Number
     I                                    P   4   50P1HONB
      * N :  Oms Application Code
     I                                        6  11 P1C7CD
      * N :  Oms SalesPerson Code
     I                                       12  14 P1C8CD
      * N :  Oms Allow Multi-Company
     I                                       15  15 P1G8ST
      * N :  Oms Default Printer
     I                                       16  25 P1G9ST
      * N :  Oms Name
     I                                       26  55 P1EUTX
      * N :  Oms System Value Alpha
     I                                       56  95 P1EVTX
      * N :  Oms Access Denied (Y/N)
     I                                       96  96 P1HAST
     IP2PARM      DS                             11
      * KEY: Eval Trans UPL            Co/KlDt(d)/Sft(d)/Seq(d)
      * I : RST EA Company Number
     I                                    P   1   20P2HKST
      * I : RST EA Kill Date
     I                                    P   3   60P2B7DT
     IP3PARM      DS
      * FLD: Payment Processing Parms
      * I :  Pmt Current Payment Date
     I                                    P   1   40P3CKDT
      * I :  Pmt Current Payment Step
     I                                    P   5   70P3M1NB
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P2PARM           KEY: Eval Trans
     C           P3CKDT    PARM           WP0001  70       Pmt Current Pay
     C           P3M1NB    PARM           WP0002  50       Pmt Current Pay
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * CASE: LCL.First Time Flag Usr is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     Z-ADDWUHMNB    #2HKST           EA Company Numb
     C                     MOVEL'N'       YL0001           First Time Flag
     C                     Z-ADDP3CKDT    #CCKDT           Pmt Current Pay
     C                     Z-ADDP3M1NB    #CM1NB           Pmt Current Pay
     C                     MOVEL@CN,001   #CP3TX           Desc 15 USR
     C                     MOVEL'Y'       YL0002           Usr Display 1
     C                     END                             *FI
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           CPHKST           EA Company Numb
     C                     KFLD           CPB7DT           EA Kill Date
     C                     KFLD           CPHLST           EA Shift
     C                     KFLD           CPKINB           EA Scale Sequen
      * Setup key
     C                     Z-ADD#2HKST    CPHKST
     C                     Z-ADD#2B7DT    CPB7DT
     C           #2HLST    IFEQ *BLANK
     C                     MOVEL*HIVAL    CPHLST           EA Shift
     C                     ELSE
     C                     MOVEL#2HLST    CPHLST
     C                     ENDIF
     C           #2KINB    IFEQ *ZERO
     C                     MOVEL*HIVAL    CPKINB           EA Scale Sequen
     C                     ELSE
     C                     Z-ADD#2KINB    CPKINB
     C                     ENDIF
     C           KPOS      SETLL@CPCPES
     C           KRST      KLIST
     C                     KFLD           CPHKST           EA Company Numb
     C                     KFLD           CPB7DT           EA Kill Date
      * Setup key
     C                     Z-ADD#2HKST    CPHKST
     C                     Z-ADD#2B7DT    CPB7DT
     C           KRST      READE@CPCPES                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2LNNB    WZLNNB
     C                     MOVEL#2LNNB    WZLNNB           EA Lot
     C           *LIKE     DEFN #2HKST    WZHKST
     C                     MOVEL#2HKST    WZHKST           EA Company Numb
     C           *LIKE     DEFN #2B8DT    WZB8DT
     C                     MOVEL#2B8DT    WZB8DT           RU Date
     C           *LIKE     DEFN #2AOTM    WZAOTM
     C                     MOVEL#2AOTM    WZAOTM           RU Time
     C           *LIKE     DEFN #2B7DT    WZB7DT
     C                     MOVEL#2B7DT    WZB7DT           EA Kill Date
     C           *LIKE     DEFN #2HLST    WZHLST
     C                     MOVEL#2HLST    WZHLST           EA Shift
     C           *LIKE     DEFN #2KHNB    WZKHNB
     C                     MOVEL#2KHNB    WZKHNB           EA Tattoo Numbe
     C           *LIKE     DEFN #2M7CD    WZM7CD
     C                     MOVEL#2M7CD    WZM7CD           EA Trolley Id
     C           *LIKE     DEFN #2KINB    WZKINB
     C                     MOVEL#2KINB    WZKINB           EA Scale Sequen
     C           *LIKE     DEFN #2HMST    WZHMST
     C                     MOVEL#2HMST    WZHMST           EA Trim Area
     C           *LIKE     DEFN #2KJNB    WZKJNB
     C                     MOVEL#2KJNB    WZKJNB           EA Hot Weight
     C           *LIKE     DEFN #2X6NB    WZX6NB
     C                     MOVEL#2X6NB    WZX6NB           EA Backfat MM
     C           *LIKE     DEFN #2FQPC    WZFQPC
     C                     MOVEL#2FQPC    WZFQPC           EA LoinEye MM
     C           *LIKE     DEFN #2FRPC    WZFRPC
     C                     MOVEL#2FRPC    WZFRPC           EA Light Refl M
     C           *LIKE     DEFN #2X7ST    WZX7ST
     C                     MOVEL#2X7ST    WZX7ST           EA Broken Back
     C           *LIKE     DEFN #2HUST    WZHUST
     C                     MOVEL#2HUST    WZHUST           EA Record Proce
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@CPCPES                  90*
     C  N82                READ @CPCPES                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,38
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2LNNB    IFNE *ZERO                      EA Lot
     C           CPLNNB    CABNE#2LNNB    BB020            EA Lot
     C                     END
     C           #2HMST    IFNE *BLANK                     EA Trim Area
     C           CPHMST    CABNE#2HMST    BB020            EA Trim Area
     C                     END
     C           #2KJNB    IFNE *ZERO                      EA Hot Weight
     C           CPKJNB    CABNE#2KJNB    BB020            EA Hot Weight
     C                     END
     C           #2X6NB    IFNE *ZERO                      EA Backfat MM
     C           CPX6NB    CABNE#2X6NB    BB020            EA Backfat MM
     C                     END
     C           #2FQPC    IFNE *ZERO                      EA LoinEye MM
     C           CPFQPC    CABNE#2FQPC    BB020            EA LoinEye MM
     C                     END
     C           #2FRPC    IFNE *ZERO                      EA Light Refl M
     C           CPFRPC    CABNE#2FRPC    BB020            EA Light Refl M
     C                     END
     C           #2X7ST    IFNE *BLANK                     EA Broken Back
     C           CPX7ST    CABNE#2X7ST    BB020            EA Broken Back
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * RU date selection
      * CASE: CTL.RU Date NE WRK.Zero USR
     C           #2B8DT    IFNE WUE9NB                     *IF
      * CASE: CTL.RU Date EQ DB1.RU Date
     C           #2B8DT    IFEQ CPB8DT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * RU time selection
      * CASE: CTL.RU Time NE WRK.Zero USR
     C           #2AOTM    IFNE WUE9NB                     *IF
      * CASE: CTL.RU Time EQ DB1.RU Time
     C           #2AOTM    IFEQ CPAOTM                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Tattoo number selection
      * CASE: CTL.EA Tattoo Number NE WRK.Zero USR
     C           #2KHNB    IFNE WUE9NB                     *IF
      * CASE: CTL.EA Tattoo Number EQ DB1.EA Tattoo Number
     C           #2KHNB    IFEQ CPKHNB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Trolley selection
      * CASE: CTL.EA Trolley Id NE WRK.Blank USR
     C           #2M7CD    IFNE WUCRTX                     *IF
      * CASE: CTL.EA Trolley Id EQ DB1.EA Trolley Id
     C           #2M7CD    IFEQ CPM7CD                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Process Flag Selection
      * CASE: CTL.EA Record Processed NE WRK.Blank USR
     C           #2HUST    IFNE WUCRTX                     *IF
      * CASE: CTL.EA Record Processed EQ DB1.EA Record Processed
     C           #2HUST    IFEQ CPHUST                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * Val Tattoo&Held Info  RT - Tattoo Header  * 
     C                     EXSR SARVGN
     C                     END                             *FI
      * Selection on Tattoo = All
      * CASE: LCL.Usr Display 1 is Yes
     C           YL0002    IFEQ 'Y'                        *IF
      * CASE: DB1.EA Tattoo Number is Entered
     C           CPKHNB    IFNE *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Selection on Tattoo = 0
      * CASE: LCL.Usr Display 1 is No
     C           YL0002    IFEQ 'N'                        *IF
      * CASE: DB1.EA Tattoo Number is Not found
     C           CPKHNB    IFEQ 0                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@CPCPES                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate RU Date
      * External date
     C                     Z-ADDV2B8DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #2B8DT
      * Validate RU Time
     C                     Z-ADD#2AOTM    XTTIM
      * Check time
     C                     EXSR XTCKTM
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
      * Validate EA Shift
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2HLST    W0NSRQ  1        EA Shift
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2HLST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100059   Y2LSNO  70
     C           #2HLST    PARM #2HLST    W0EXVL 25        EA Shift
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate EA Record Processed
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2HUST    W0NSRQ  1        EA Record Proce
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2HUST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100042   Y2LSNO  70
     C           #2HUST    PARM #2HUST    W0EXVL 25        EA Record Proce
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZB8DT    CASNE#2B8DT    FBRQRL
     C           WZAOTM    CASNE#2AOTM    FBRQRL
     C           WZHLST    CASNE#2HLST    FBRQRL
     C           WZKHNB    CASNE#2KHNB    FBRQRL
     C           WZM7CD    CASNE#2M7CD    FBRQRL
     C           WZKINB    CASNE#2KINB    FBRQRL
     C           WZHUST    CASNE#2HUST    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F10 = Toggle (All or Zero Tattoos)
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * CASE: LCL.Usr Display 1 is Yes
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL@CN,002   #CP3TX           Desc 15 USR
     C                     MOVEL'N'       YL0002           Usr Display 1
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,001   #CP3TX           Desc 15 USR
     C                     MOVEL'Y'       YL0002           Usr Display 1
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,38
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * TF WANT to change the held over records
     C                     MOVEL'N'       YL0006           User Status
      * Rtv User Code Model   XF - STR Order Management Sys  * 
     C                     CALL 'POYBXFR'              90  Rtv User Code M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM ##USR     WQ0001 10        *USER
     C           YL0007    PARM *BLANK    WQ0002 10        User Code Model
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POYBXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * If ISBGUTI = OK
      * CASE: LCL.User Code Model USR is IS
     C           YL0007    IFEQ @CN,003                    *IF
     C                     MOVEL'Y'       YL0006           User Status
     C                     ELSE
      * CASE: *OTHERWISE
      * Check for 'HPE TFR Held Over Auth'
     C                     EXSR UASUBR                     Check for 'HPE
     C                     END                             *FI
      * CASE: LCL.User Status is Yes
     C           YL0006    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.Held Over Records Y/N is Yes
     C           #RNFST    IFEQ 'Y'                        *IF
      * Send message 'Held Overs on Tattoo'
     C                     MOVEL'PRK1242' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * CASE: RCD.*SFLSEL is Select Option 2
     C           #1SEL     IFEQ '2'                        *IF
     C           #1SEL     OREQ ' 2'
      * Edt EvalTran Upl Mov  ER - Eval Trans UPL  * 
     C                     CLEARPARC
     C                     Z-ADD#1HKST    PAHKST           EA Company Numb
     C                     Z-ADD#1B7DT    PAB7DT           EA Kill Date
     C                     Z-ADD#1KINB    PAKINB           EA Scale Sequen
      *
     C                     CALL 'PLODE1R'              90  Edt EvalTran Up
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Eval Trans
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLODE1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: RCD.*SFLSEL is Select Option 4
     C           #1SEL     IFEQ '4'                        *IF
     C           #1SEL     OREQ ' 4'
      * Edt EvalTran Upl Rmv  ER - Eval Trans UPL  * 
     C                     CLEARPBRC
     C                     Z-ADD#1HKST    PBHKST           EA Company Numb
     C                     Z-ADD#1B7DT    PBB7DT           EA Kill Date
     C                     Z-ADD#1KINB    PBKINB           EA Scale Sequen
      *
     C                     CALL 'PLO9E1R'              90  Edt EvalTran Up
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Eval Trans
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PLO9E1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @CPCPES fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDCPLNNB    #1LNNB           EA Lot
     C                     Z-ADDCPKKNB    #1KKNB           EA Backfat Thic
     C                     Z-ADDCPBQPC    #1BQPC           EA Loin Eye Dep
     C                     Z-ADDCPBRPC    #1BRPC           EA Light Reflec
     C                     MOVELCPHNST    #1HNST           EA Carcass Sex
     C                     MOVELCPHTST    #1HTST           EA Record Creat
     C                     MOVELCPX8ST    #1X8ST           EA Unused Sts 1
     C                     MOVELCPX9ST    #1X9ST           EA Unused Sts 2
     C                     MOVELCPYAST    #1YAST           EA Unused Sts 3
     C                     MOVELCPYBST    #1YBST           EA Unused Sts 4
     C                     MOVELCPYCST    #1YCST           EA Unused Sts 5
     C                     MOVELCPZJST    #1ZJST           EA Unused Sts 6
     C                     MOVELCPZKST    #1ZKST           EA Unused Sts 7
     C                     MOVELCPZLST    #1ZLST           EA Unused Sts 8
     C                     Z-ADDCPHKST    #1HKST           EA Company Numb
     C                     Z-ADDCPB8DT    #1B8DT           RU Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1B8DT
     C                     Z-ADDCPAOTM    #1AOTM           RU Time
     C                     Z-ADDCPB7DT    #1B7DT           EA Kill Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1B7DT
     C                     MOVELCPHLST    #1HLST           EA Shift
     C                     Z-ADDCPKHNB    #1KHNB           EA Tattoo Numbe
     C                     MOVELCPM7CD    #1M7CD           EA Trolley Id
     C                     Z-ADDCPKINB    #1KINB           EA Scale Sequen
     C                     MOVELCPHMST    #1HMST           EA Trim Area
     C                     Z-ADDCPKJNB    #1KJNB           EA Hot Weight
     C                     Z-ADDCPX6NB    #1X6NB           EA Backfat MM
     C                     Z-ADDCPFQPC    #1FQPC           EA LoinEye MM
     C                     Z-ADDCPFRPC    #1FRPC           EA Light Refl M
     C                     MOVELCPX7ST    #1X7ST           EA Broken Back
     C                     MOVELCPHUST    #1HUST           EA Record Proce
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RNFST           Held Over Recor
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2LNNB           EA Lot
     C                     Z-ADD*ZERO     #CCKDT           Pmt Current Pay
      * Clear external version also
     C                     Z-ADD*ZERO     VCCKDT
     C                     Z-ADD*ZERO     #CM1NB           Pmt Current Pay
     C                     MOVEL*BLANK    #CP3TX           Desc 15 USR
     C                     Z-ADDP2HKST    #2HKST           EA Company Numb
     C                     Z-ADD*ZERO     #2B8DT           RU Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2B8DT
     C                     Z-ADD*ZERO     #2AOTM           RU Time
     C                     Z-ADDP2B7DT    #2B7DT           EA Kill Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2B7DT
     C                     MOVEL*BLANK    #2HLST           EA Shift
     C                     Z-ADD*ZERO     #2KHNB           EA Tattoo Numbe
     C                     MOVEL*BLANK    #2M7CD           EA Trolley Id
     C                     Z-ADD*ZERO     #2KINB           EA Scale Sequen
     C                     MOVEL*BLANK    #2HMST           EA Trim Area
     C                     Z-ADD*ZERO     #2KJNB           EA Hot Weight
     C                     Z-ADD*ZERO     #2X6NB           EA Backfat MM
     C                     Z-ADD*ZERO     #2FQPC           EA LoinEye MM
     C                     Z-ADD*ZERO     #2FRPC           EA Light Refl M
     C                     MOVEL*BLANK    #2X7ST           EA Broken Back
     C                     MOVEL*BLANK    #2HUST           EA Record Proce
     C                     MOVEL*BLANK    #CNFST           Held Over Recor
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert RU Date to display format
      * Convert date
     C           1000000   ADD  #1B8DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1B8DT
      * Convert EA Kill Date to display format
      * Convert date
     C           1000000   ADD  #1B7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1B7DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Pmt Current Payment Date to display format
      * Convert date
     C           1000000   ADD  #CCKDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCCKDT
      * Convert RU Date to display format
      * Convert date
     C           1000000   ADD  #2B8DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2B8DT
      * Convert EA Kill Date to display format
      * Convert date
     C           1000000   ADD  #2B7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2B7DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Val Tattoo&Held Info  RT - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    #RNFST           Held Over Recor
     C                     MOVEL'N'       YL0005           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQSA01           BOH Company Num
     C           *LIKE     DEFN A1B0DT    WQSA02           TH Kill Date
     C           *LIKE     DEFN A1CVNB    WQSA03           TH Tattoo Numbe
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
     C                     KFLD           WQSA02           TH Kill Date
     C                     KFLD           WQSA03           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD#1HKST    WQSA01           BOH Company Num
     C                     Z-ADD#1B7DT    WQSA02           TH Kill Date
     C                     Z-ADD#1KHNB    WQSA03           TH Tattoo Numbe
      * Establish starting position
     C           KRSSA     SETLL@A1CPL0                    *
     C           KRSSA     READE@A1CPL0                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0005           Record Found US
      * CASE: Test for Held Over
      *  - c1 OR c2 OR c3
      *   |- c1    : DB1.TH Held Over is greater than 0
      *   |- c2    : DB1.TH Held Over Record is Yes
      *   |- c3    : DB1.TH Held/Ovr Completed Dte is Greater than 0
      *   '-
     C           A1H9NB    IFGT 0                          *IF
     C           A1E1ST    OREQ 'Y'                        *OR
     C           A1BSDT    ORGT 0                          *OR
     C                     MOVEL'Y'       #RNFST           Held Over Recor
     C                     END                             *FI
     C                     GOTO SAEXIT                     *QUIT
      * PAR = DB1 By name
     C                     Z-ADDA1BNNB    YL0003           BOH Buy Order N
     C                     Z-ADDA1BONB    YL0004           BOL Load Number
     C           KRSSA     READE@A1CPL0                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Check for 'HPE TFR Held Over Auth'
      *================================================================
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P1J8NB    PARM *BLANK    WQ0003  3        Oms Warehouse C
     C           P1HONB    PARM *ZERO     WQ0004  30       CC Company Numb
     C                     PARM 'HPETHO'  WQ0005  6        Oms Application
     C           P1C8CD    PARM *BLANK    WQ0006  3        Oms SalesPerson
     C           P1G8ST    PARM *BLANK    WQ0007  1        Oms Allow Multi
     C           P1G9ST    PARM *BLANK    WQ0008 10        Oms Default Pri
     C           P1EUTX    PARM *BLANK    WQ0009 30        Oms Name
     C           P1EVTX    PARM *BLANK    WQ0010 40        Oms System Valu
     C           P1HAST    PARM *BLANK    WQ0011  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0006           User Status
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * 3008982 EL 06/20/24 - Adding F10 Toggle to show All/Zero Tattoos
      * E12101 JJH 11/20/17 - Recompile after adding Shawn Smith and
      *   remmoving Joe Hegeman from the Receiving Group TF list for
      *   field *USER.
      * E6784 JBB 07/28/16 - Recompile after adding Joe Hegeman to
      *  the Receiving Group TF list for field *USER.
      * E3625 JJH 12/04/14 - Recompile because PrklISTesting List for
      *  field *USER to add users Julius High (ISJHIGH) and Collin Lynch
      *  ISCLYNC.
      * H16853 ISE 11/02/2020 CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5
      * 103777 E.L.10/25/22 - REPLACE Hard Coded Authority Change
      *                       By calling PDGXXFR (Parm HPETHO)
      *                       Also check IT users (ISBGUTI)
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XTCKTM    BEGSR
      *================================================================
      * Validate time format
      *================================================================
      * If time is zero, do not check
     C           XTTIM     CABEQ*ZERO     XTCKTE
     C                     MOVEL*BLANK    W0RTN   7
     C           YPMTFD    CABNE*BLANK    XTCKTE
      *
      * Check hours in range 0 to 23
      * Check minutes in range 0 to 59
      * Check seconds in range 0 to 59
     C           XTHH      IFLT *ZERO
     C           XTHH      ORGT 23
     C           XTNN      ORLT *ZERO
     C           XTNN      ORGT 59
     C           XTSS      ORLT *ZERO
     C           XTSS      ORGT 59
      * Send error message
      * Send message '*Invalid time'
     C                     MOVEL'Y2U0019' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0019' W0RTN
     C                     END
      *================================================================
     CSR         XTCKTE    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD12        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ036
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2HLST'  YPMTFD           EA Shift
     C                     END
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ095
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2HUST'  YPMTFD           EA Record Proce
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      *
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P1HONB           CC Company Numb
     C                     MOVEL*BLANK    P1C7CD           Oms Application
     C                     MOVEL*BLANK    P1C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P1G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P1G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P1EUTX           Oms Name
     C                     MOVEL*BLANK    P1EVTX           Oms System Valu
     C                     MOVEL*BLANK    P1HAST           Oms Access Deni
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BOH Company Number
     C                     Z-ADD*ZERO     WUHMNB  30
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL@CN,1     @CN,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field First Time Flag Usr
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Usr Display 1
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field BOH Buy Order Number
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field BOL Load Number
     C                     Z-ADD*ZERO     YL0004  50
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field User Status
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field User Code Model USR
     C                     MOVEL*BLANK    YL0007 10
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD12        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UBSUBR                     Modifications a
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P1J8NB    PARM *BLANK    WQ0012  3        Oms Warehouse C
     C           WUHMNB    PARM *ZERO     WQ0013  30       CC Company Numb
     C                     PARM 'UET'     WQ0014  6        Oms Application
     C           P1C8CD    PARM *BLANK    WQ0015  3        Oms SalesPerson
     C           P1G8ST    PARM *BLANK    WQ0016  1        Oms Allow Multi
     C           P1G9ST    PARM *BLANK    WQ0017 10        Oms Default Pri
     C           P1EUTX    PARM *BLANK    WQ0018 30        Oms Name
     C           P1EVTX    PARM *BLANK    WQ0019 40        Oms System Valu
     C           P1HAST    PARM *BLANK    WQ0020  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP1EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL'Y'       YL0001           First Time Flag
     C                     Z-ADD0035000   W0SLM            *Scan limit
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** @CN
00001 All Tattoos
00002 Zero Tattoos
00003 ISBGUTI
