     H/TITLE WW Hog Voucher Detail DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 02/02/21  Time  : 13:06:45
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPWGWDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Hog Voucher Detail DF  Display file
      *
     FPKBLCPL3IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Hog Voucher Detail        Co/Bol/Ttt/KillDt
      *
     FPKA1CPL0IF  E           K        DISK
      * RTV : Tattoo Header             Retrieval index
      *
     FPKBLCPL5IF  E           K        DISK
      * RSQ : Hog Voucher Detail        SrcCode/Co/KillDt/BOL
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * Long constants
     E                    @CN#    1  13  6   @CN    25
     I@BLCPX5
      * Hog Voucher Detail        SrcCode/Co/KillDt/BOL
      * Renamed input format fields
     I              BLHNNB                          WAHNNB
     I              BLLWNB                          WALWNB
     I              BLG9NB                          WAG9NB
     I              BLDLNB                          WADLNB
     I              BLCNPR                          WACNPR
     I              BLCOPR                          WACOPR
     I              BLCPPR                          WACPPR
     I              BLCQPR                          WACQPR
     I              BLCRPR                          WACRPR
     I              BLAKVA                          WAAKVA
     I              BLALVA                          WAALVA
     I              BLCVPR                          WACVPR
     I              BLAMVA                          WAAMVA
     I              BLAEPC                          WAAEPC
     I              BLI6ST                          WAI6ST
     I              BLJIST                          WAJIST
     I              BLJPST                          WAJPST
     I              BLC2SS                          WAC2SS
     I              BLOTCD                          WAOTCD
     I              BLF5TX                          WAF5TX
     I              BLL5A1                          WAL5A1
     I              BLL6A1                          WAL6A1
     I              BLJQST                          WAJQST
     I              BLC4SS                          WAC4SS
     I              BLC5SS                          WAC5SS
     I              BLC3SS                          WAC3SS
     I              BLOKA1                          WAOKA1
     I              BLOLA1                          WAOLA1
     I              BLOMA1                          WAOMA1
     I              BLQ0CD                          WAQ0CD
     I              BLWSA1                          WAWSA1
     I              BLWOA1                          WAWOA1
     I              BLHFDT                          WAHFDT
     I              BLB2TM                          WAB2TM
     I              BLHMNB                          WAHMNB
     I              BLBNNB                          WABNNB
     I              BLBONB                          WABONB
     I              BLCVNB                          WACVNB
     I              BLB0DT                          WAB0DT
     I              BLABCD                          WAABCD
     I              BLAECD                          WAAECD
     I              BLAAVN                          WAAAVN
     I              BLAADT                          WAAADT
     I              BLAMTM                          WAAMTM
     I              BLAJST                          WAAJST
     I              BLAHVN                          WAAHVN
     I              BLAGVN                          WAAGVN
     I              BLABVN                          WAABVN
     I              BLABDT                          WAABDT
     I              BLABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P1J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P1HONB
      * N : MAP Oms Application Code
     I                                        6  11 P1C7CD
      * N : MAP Oms SalesPerson Code
     I                                       12  14 P1C8CD
      * N : MAP Oms Allow Multi-Company
     I                                       15  15 P1G8ST
      * N : MAP Oms Default Printer
     I                                       16  25 P1G9ST
      * N : MAP Oms Name
     I                                       26  55 P1EUTX
      * N : MAP Oms System Value Alpha
     I                                       56  95 P1EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       96  96 P1HAST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Co# Not Set Up for Push'
      * BOH Company Number
     I                                    P   1   20ZA0001
      * Message data for 'Select/Unselect not valid'
      * *SFLSEL
     I                                        1   1 ZA0002
      * Message data for 'Select/Unselect not valid'
      * *SFLSEL
     I                                        1   1 ZA0003
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
     C                     Z-ADDYL0001    #2HMNB           BOH Company Num
     C                     MOVEL'Y'       YL0002           Protect field
      * Set text for current status and set protection value
      * CASE: LCL.Push to Pay Sts      USR is All
     C           YL0003    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    #CDAT1           Desc USR
     C                     MOVEL'All'     #CDAT1           Desc USR
     C                     MOVEL'N'       YL0002           Protect field
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is All Repayments
     C           YL0003    IFEQ 'O'                        *IF
     C                     MOVEL@CN,001   #CDAT1           Desc USR
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Ignored
     C           YL0003    IFEQ 'I'                        *IF
     C                     MOVEL@CN,002   #CDAT1           Desc USR
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Pushed
     C           YL0003    IFEQ 'P'                        *IF
     C                     MOVEL@CN,003   #CDAT1           Desc USR
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Ready to Push
     C           YL0003    IFEQ 'R'                        *IF
     C                     MOVEL@CN,004   #CDAT1           Desc USR
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Push Completed
     C           YL0003    IFEQ 'C'                        *IF
     C                     MOVEL@CN,005   #CDAT1           Desc USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL#CI5SS    #2JQST           VCD Push Paymen
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BLHMNB           BOH Company Num
     C                     KFLD           BLBNNB           BOH Buy Order N
     C                     KFLD           BLBONB           BOL Load Number
     C                     KFLD           BLCVNB           TH Tattoo Numbe
     C                     KFLD           BLB0DT           TH Kill Date
      * Setup key
     C                     Z-ADD#2HMNB    BLHMNB
     C                     Z-ADD#2BNNB    BLBNNB
     C                     Z-ADD#2BONB    BLBONB
     C                     Z-ADD#2CVNB    BLCVNB
     C                     Z-ADD#2B0DT    BLB0DT
     C           KPOS      SETLL@BLCPRB
     C                     READ @BLCPRB                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2HNNB    WZHNNB
     C                     MOVEL#2HNNB    WZHNNB           VCH Company num
     C           *LIKE     DEFN #2JQST    WZJQST
     C                     MOVEL#2JQST    WZJQST           VCD Push Paymen
     C           *LIKE     DEFN #2HFDT    WZHFDT
     C                     MOVEL#2HFDT    WZHFDT           MGL Process to
     C           *LIKE     DEFN #2B2TM    WZB2TM
     C                     MOVEL#2B2TM    WZB2TM           MGL Process to
     C           *LIKE     DEFN #2HMNB    WZHMNB
     C                     MOVEL#2HMNB    WZHMNB           BOH Company Num
     C           *LIKE     DEFN #2BNNB    WZBNNB
     C                     MOVEL#2BNNB    WZBNNB           BOH Buy Order N
     C           *LIKE     DEFN #2BONB    WZBONB
     C                     MOVEL#2BONB    WZBONB           BOL Load Number
     C           *LIKE     DEFN #2CVNB    WZCVNB
     C                     MOVEL#2CVNB    WZCVNB           TH Tattoo Numbe
     C           *LIKE     DEFN #2B0DT    WZB0DT
     C                     MOVEL#2B0DT    WZB0DT           TH Kill Date
     C           *LIKE     DEFN #2C4SS    WZC4SS
     C                     MOVEL#2C4SS    WZC4SS           VCD Repayment F
     C           *LIKE     DEFN #2ABCD    WZABCD
     C                     MOVEL#2ABCD    WZABCD           PD Producer Cod
     C           *LIKE     DEFN #2AECD    WZAECD
     C                     MOVEL#2AECD    WZAECD           PL Location Cod
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BLCPRB                  90*
     C  N82                READ @BLCPRB                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,40
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2HNNB    IFNE *ZERO                      VCH Company num
     C           BLHNNB    CABNE#2HNNB    BB020            VCH Company num
     C                     END
     C           #2JQST    IFNE *BLANK                     VCD Push Paymen
     C           BLJQST    CABNE#2JQST    BB020            VCD Push Paymen
     C                     END
     C           #2HFDT    IFNE *ZERO                      MGL Process to
     C           BLHFDT    CABNE#2HFDT    BB020            MGL Process to
     C                     END
     C           #2B2TM    IFNE *ZERO                      MGL Process to
     C           BLB2TM    CABNE#2B2TM    BB020            MGL Process to
     C                     END
     C           #2HMNB    IFEQ *ZERO                      BOH Company Num
     C           #2BNNB    IFNE *ZERO                      BOH Buy Order N
     C           BLBNNB    CABNE#2BNNB    BB020            BOH Buy Order N
     C                     END
     C                     END
     C           #2HMNB    IFEQ *ZERO                      BOH Company Num
     C           #2BNNB    OREQ *ZERO                      BOH Buy Order N
     C           #2BONB    IFNE *ZERO                      BOL Load Number
     C           BLBONB    CABNE#2BONB    BB020            BOL Load Number
     C                     END
     C                     END
     C           #2HMNB    IFEQ *ZERO                      BOH Company Num
     C           #2BNNB    OREQ *ZERO                      BOH Buy Order N
     C           #2BONB    OREQ *ZERO                      BOL Load Number
     C           #2CVNB    IFNE *ZERO                      TH Tattoo Numbe
     C           BLCVNB    CABNE#2CVNB    BB020            TH Tattoo Numbe
     C                     END
     C                     END
     C           #2HMNB    IFEQ *ZERO                      BOH Company Num
     C           #2BNNB    OREQ *ZERO                      BOH Buy Order N
     C           #2BONB    OREQ *ZERO                      BOL Load Number
     C           #2CVNB    OREQ *ZERO                      TH Tattoo Numbe
     C           #2B0DT    IFNE *ZERO                      TH Kill Date
     C           BLB0DT    CABNE#2B0DT    BB020            TH Kill Date
     C                     END
     C                     END
     C           #2C4SS    IFNE *BLANK                     VCD Repayment F
     C           BLC4SS    CABNE#2C4SS    BB020            VCD Repayment F
     C                     END
     C           #2ABCD    IFNE *BLANK                     PD Producer Cod
     C           BLABCD    CABNE#2ABCD    BB020            PD Producer Cod
     C                     END
     C           #2AECD    IFNE *BLANK                     PL Location Cod
     C           BLAECD    CABNE#2AECD    BB020            PL Location Cod
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * Record Selection
      * CASE: DB1.VCH Company number NE CTL.BOH Company Number
     C           BLHNNB    IFNE #2HMNB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE:
      *  - NOTc1
      *   |- c1    : RCD.VCD Source Code is Triumph Member (Owner)
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1OTCD    IFEQ 'TO'                       *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Tattoo All Fields RT - Tattoo Header  * 
     C                     EXSR SARVGN
      * View Record Selection
      * CASE: LCL.Push to Pay Sts      USR is All
     C           YL0003    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: Push to Pay Sts = R AND Push Pymt Sts = blank or N
      *  - c1 AND c2
      *   |- c1    : LCL.Push to Pay Sts      USR is Ready to Push
      *   |- c2    : RCD.VCD Push Payment Status is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'R'                        *IF
     C           #1JQST    IFEQ *BLANK                     *IF
     C           #1JQST    OREQ 'N'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Push to Pay Sts = O AND Repayment Sts = R
      *  - c1 AND c2
      *   |- c1    : LCL.Push to Pay Sts      USR is All Repayments
      *   |- c2    : RCD.VCD Repayment Flag is Repayment
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'O'                        *IF
     C           #1C4SS    IFEQ 'R'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Push to Pay Sts = P AND Push Payment Status = Y
      *  - c1 AND c2
      *   |- c1    : LCL.Push to Pay Sts      USR is Push Completed
      *   |- c2    : RCD.VCD Push Payment Status is Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'C'                        *IF
     C           #1JQST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR NE RCD.VCD Push Payment Status
     C           YL0003    IFNE #1JQST                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BLCPRB                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate TH Kill Date
      * External date
     C                     Z-ADDV2B0DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     Z-ADDXDINDT    #2B0DT
      * Validate VCD Repayment Flag
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#2C4SS    W0NSRQ  1        VCD Repayment F
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#2C4SS'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1345591   Y2LSNO  70
     C           #2C4SS    PARM #2C4SS    W0EXVL 25        VCD Repayment F
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZHMNB    CASNE#2HMNB    FBRQRL
     C           WZBNNB    CASNE#2BNNB    FBRQRL
     C           WZBONB    CASNE#2BONB    FBRQRL
     C           WZCVNB    CASNE#2CVNB    FBRQRL
     C           WZB0DT    CASNE#2B0DT    FBRQRL
     C           WZC4SS    CASNE#2C4SS    FBRQRL
     C           WZABCD    CASNE#2ABCD    FBRQRL
     C           WZAECD    CASNE#2AECD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F5=Refresh   F10=Toggle   F16=Push
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: CTL.*CMD key is Toggle
     C           *IN10     IFEQ '1'                        *IF
      * Toggle status value
      * CASE: LCL.Push to Pay Sts      USR is All
     C           YL0003    IFEQ *BLANK                     *IF
     C                     MOVEL'R'       YL0003           Push to Pay Sts
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Ready to Push
     C           YL0003    IFEQ 'R'                        *IF
     C                     MOVEL'O'       YL0003           Push to Pay Sts
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is All Repayments
     C           YL0003    IFEQ 'O'                        *IF
     C                     MOVEL'C'       YL0003           Push to Pay Sts
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Push Completed
     C           YL0003    IFEQ 'C'                        *IF
     C                     MOVEL'P'       YL0003           Push to Pay Sts
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Pushed-Report not Printed
     C           YL0003    IFEQ 'P'                        *IF
     C                     MOVEL'I'       YL0003           Push to Pay Sts
     C                     ELSE
      * CASE: LCL.Push to Pay Sts      USR is Ignored
     C           YL0003    IFEQ 'I'                        *IF
     C                     MOVEL*BLANK    YL0003           Push to Pay Sts
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: CTL.*CMD key is CF16
     C           *IN16     IFEQ '1'                        *IF
      * Rtv Count Push records RT - Hog Voucher Detail  * 
     C                     EXSR SBRVGN
      * If no errors, submit push process
      * CASE: LCL.Push To Company is *ZERO
     C           YL0008    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#2HMNB    ZA0001           BOH Company Num
      * Send message 'Co# Not Set Up for Push'
     C                     MOVEL'PRK1505' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: LCL.Nbr of Push Rcds-Repaymnt is Zero
     C           YL0007    IFEQ *ZERO                      *IF
      * Send message 'Push Count Repay = 0'
     C                     MOVEL'PRK1503' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: LCL.Nbr of Push Rcds-Regular is Not Zero
     C           YL0006    IFNE *ZERO                      *IF
      * Send message 'Push Count Regular <> 0'
     C                     MOVEL'PRK1504' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Pmt TF2 Payment Push  PV - Company Control HPE  * 
     C                     CALL 'PWEGPVR'              90  Pmt TF2 Payment
     C                     PARM *BLANK    W0RTN   7
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PWEGPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * If Push Status value changes, move value to DB1 field
      * CASE: CTL.Push Status NE CTL.VCD Push Payment Status
     C           #CI5SS    IFNE #2JQST                     *IF
      * Prompt Push Status USR US - Hog Voucher Detail  * 
      * Validate user field - Push Status
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#CI5SS    W0NSRQ           Push Status
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#CI5SS'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN
     C                     PARM 1337842   Y2LSNO
     C           #CI5SS    PARM #CI5SS    W0EXVL           Push Status
      * Defer confirm
     C                     MOVEL'Y'       W0DCF
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
     C                     MOVEL#CI5SS    #2JQST           VCD Push Paymen
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,40
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 5=Display  8=Select/Unselect for Repayment
      * CASE: RCD.*SFLSEL is *Work With/Display
     C           #1SEL     IFEQ '5'                        *IF
      * Dsp Hog Voucher Detail DR - Hog Voucher Detail  * 
     C                     CALL 'PWGYD1R'              90  Dsp Hog Voucher
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HNNB    WQ0001  30       VCH Company num
     C                     PARM #1LWNB    WQ0002  50       VCH Batch Numbe
     C                     PARM #1G9NB    WQ0003  50       VCH Header Numb
     C                     PARM #1DLNB    WQ0004  30       VCD Line
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PWGYD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     ELSE
      * CASE: RCD.*SFLSEL is *Option 8 request
     C           #1SEL     IFEQ '8'                        *IF
     C           #1SEL     OREQ ' 8'
      * Select/Unselect processing
     C                     EXSR UASUBR                     Select/Unselect
     C                     END                             *FI
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           YL0009    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BLCPRB fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDBLHMNB    #1HMNB           BOH Company Num
     C                     Z-ADDBLHNNB    #1HNNB           VCH Company num
     C                     Z-ADDBLLWNB    #1LWNB           VCH Batch Numbe
     C                     Z-ADDBLG9NB    #1G9NB           VCH Header Numb
     C                     Z-ADDBLDLNB    #1DLNB           VCD Line
     C                     Z-ADDBLCNPR    #1CNPR           VCD Base Mkt Pr
     C                     Z-ADDBLCOPR    #1COPR           VCD Sort Disc A
     C                     Z-ADDBLCPPR    #1CPPR           VCD Yield Gain/
     C                     Z-ADDBLCQPR    #1CQPR           VCD Base Carcas
     C                     Z-ADDBLCRPR    #1CRPR           VCD LN Add on/D
     C                     Z-ADDBLAKVA    #1AKVA           VCD Gross Amt
     C                     Z-ADDBLALVA    #1ALVA           VCD Deduction A
     C                     Z-ADDBLCVPR    #1CVPR           VCD Less Split
     C                     Z-ADDBLAMVA    #1AMVA           VCD Net Amt
     C                     Z-ADDBLAEPC    #1AEPC           VCD Split Perce
     C                     MOVELBLI6ST    #1I6ST           VCD Payment Typ
     C                     MOVELBLJIST    #1JIST           VCD Hog Class T
     C                     MOVELBLJPST    #1JPST           VCD BO Type
     C                     MOVELBLC2SS    #1C2SS           VCD Source Cont
     C                     MOVELBLF5TX    #1F5TX           VCD Check Descr
     C                     Z-ADDBLL6A1    #1L6A1           VCD Head Killed
     C                     MOVELBLC5SS    #1C5SS           VCD Unused Stat
     C                     MOVELBLC3SS    #1C3SS           VCD Unused Stat
     C                     Z-ADDBLOKA1    #1OKA1           VCD Unused Head
     C                     Z-ADDBLOLA1    #1OLA1           VCD UnUsed Head
     C                     Z-ADDBLOMA1    #1OMA1           VCD UnUsed Head
     C                     MOVELBLQ0CD    #1Q0CD           MGL Supplier In
     C                     Z-ADDBLWSA1    #1WSA1           MGL Voucher Num
     C                     Z-ADDBLWOA1    #1WOA1           MGL Invoice Bat
     C                     Z-ADDBLHFDT    #1HFDT           MGL Process to
     C                     Z-ADDBLB2TM    #1B2TM           MGL Process to
     C                     MOVELBLAAVN    #1AAVN           RS User Changed
     C                     Z-ADDBLAADT    #1AADT           RS Date Changed
     C                     Z-ADDBLAMTM    #1AMTM           RS Time Changed
     C                     MOVELBLAJST    #1AJST           RS Record Statu
     C                     MOVELBLAHVN    #1AHVN           RS Job
     C                     MOVELBLAGVN    #1AGVN           RS Program
     C                     MOVELBLABVN    #1ABVN           RS User Added
     C                     Z-ADDBLABDT    #1ABDT           RS Date Added
     C                     Z-ADDBLABTM    #1ABTM           RS Time Added
     C                     Z-ADDBLBNNB    #1BNNB           BOH Buy Order N
     C                     Z-ADDBLBONB    #1BONB           BOL Load Number
     C                     Z-ADDBLCVNB    #1CVNB           TH Tattoo Numbe
     C                     Z-ADDBLB0DT    #1B0DT           TH Kill Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1B0DT
     C                     MOVELBLOTCD    #1OTCD           VCD Source Code
     C                     Z-ADDBLL5A1    #1L5A1           VCD Received He
     C                     MOVELBLJQST    #1JQST           VCD Push Paymen
     C                     MOVELBLC4SS    #1C4SS           VCD Repayment F
     C                     MOVELBLABCD    #1ABCD           PD Producer Cod
     C                     MOVELBLAECD    #1AECD           PL Location Cod
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RLLST           TH Hog Class Ty
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVELP1J8NB    #PJ8NB           Oms Warehouse C
     C                     Z-ADDP1HONB    #PHONB           CC Company Numb
     C                     MOVELP1C7CD    #PC7CD           Oms Application
     C                     MOVELP1C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP1G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP1G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP1EUTX    #PEUTX           Oms Name
     C                     MOVELP1EVTX    #PEVTX           Oms System Valu
     C                     MOVELP1HAST    #PHAST           Oms Access Deni
     C                     Z-ADD*ZERO     #2HNNB           VCH Company num
     C                     MOVEL*BLANK    #2JQST           VCD Push Paymen
     C                     Z-ADD*ZERO     #2HFDT           MGL Process to
     C                     Z-ADD*ZERO     #2B2TM           MGL Process to
     C                     Z-ADD*ZERO     #2HMNB           BOH Company Num
     C                     MOVEL*BLANK    #CDAT1           Desc USR
     C                     Z-ADD*ZERO     #2BNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     #2BONB           BOL Load Number
     C                     Z-ADD*ZERO     #2CVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     #2B0DT           TH Kill Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2B0DT
     C                     MOVEL*BLANK    #CI5SS           Push Status
     C                     MOVEL*BLANK    #2C4SS           VCD Repayment F
     C                     MOVEL*BLANK    #2ABCD           PD Producer Cod
     C                     MOVEL*BLANK    #2AECD           PL Location Cod
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  #1B0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1B0DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  #2B0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2B0DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Tattoo All Fields RT - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQSA01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQSA02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQSA03           BOL Load Number
     C           *LIKE     DEFN A1CVNB    WQSA04           TH Tattoo Numbe
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
     C                     KFLD           WQSA02           BOH Buy Order N
     C                     KFLD           WQSA03           BOL Load Number
     C                     KFLD           WQSA04           TH Tattoo Numbe
     C                     KFLD           A1B0DT           TH Kill Date
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
     C                     KFLD           WQSA02           BOH Buy Order N
     C                     KFLD           WQSA03           BOL Load Number
     C                     KFLD           WQSA04           TH Tattoo Numbe
      * Setup key
     C                     Z-ADD#1HMNB    WQSA01           BOH Company Num
     C                     Z-ADD#1BNNB    WQSA02           BOH Buy Order N
     C                     Z-ADD#1BONB    WQSA03           BOL Load Number
     C                     Z-ADD#1CVNB    WQSA04           TH Tattoo Numbe
     C                     Z-ADD#1B0DT    A1B0DT           TH Kill Date
      * Establish starting position
     C           KPSSA     SETLL@A1CPC4                    *
     C           KRSSA     READE@A1CPC4                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0061' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RLLST           TH Hog Class Ty
     C                     MOVEL*BLANK    #1ABCD           PD Producer Cod
     C                     MOVEL*BLANK    #1AECD           PL Location Cod
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  A1CCPR    YL0004           Net Amount
     C           KRSSA     READE@A1CPC4                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     Z-ADDYL0005    YN0049           Th Payment Net
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Count Push records RT - Hog Voucher Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     YL0006           Nbr of Push Rcd
     C                     Z-ADD*ZERO     YL0007           Nbr of Push Rcd
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAOTCD    WQSB01           VCD Source Code
     C           *LIKE     DEFN WAHMNB    WQSB02           BOH Company Num
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           VCD Source Code
     C                     KFLD           WQSB02           BOH Company Num
      * Setup key
     C                     MOVE *BLANK    WQSB01           VCD Source Code
     C                     MOVEL'TO'      WQSB01           VCD Source Code
     C                     Z-ADD#2HMNB    WQSB02           BOH Company Num
      * Establish starting position
     C           KRSSB     SETLL@BLCPX5                    *
     C           KRSSB     READE@BLCPX5                  90*
      * Data record not found
     C   90                MOVEL'PRK0101' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Count records where the Push Payment Status = N or blank
      * CASE: DB1.VCD Push Payment Status is Not Yes
     C           WAJQST    IFEQ *BLANK                     *IF
     C           WAJQST    OREQ 'N'
      * Increment Regular Push and Repayment Push records
      * CASE: DB1.VCD Repayment Flag is Repayment
     C           WAC4SS    IFEQ 'R'                        *IF
     C                     ADD  1         YL0007           Nbr of Push Rcd
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         YL0006           Nbr of Push Rcd
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@BLCPX5                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Select/Unselect processing
      *================================================================
      * Select/Unselect for Repayment
      * CASE:
      *  - NOTc1
      *   |- c1    : RCD.VCD Hog Class Type is Market
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1JIST    IFEQ 'M'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0002           *SFLSEL
      * Send message 'Select/Unselect not valid'
     C                     MOVEL'PRK1506' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     GOTO UAEXIT                     *QUIT
     C                     ELSE
      * CASE: Push Pymt Sts = Y AND Repayment Flag not entered
      *  - c1 AND c2
      *   |- c1    : RCD.VCD Push Payment Status is Yes
      *   |- c2    : RCD.VCD Repayment Flag is Not entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1JQST    IFEQ 'Y'                        *IF
     C           #1C4SS    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Upd for P2P Repayment XF - Hog Voucher Detail  * Select for Repay
     C                     CALL 'PWGXXFR'              90  Upd for P2P Rep
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HNNB    WQ0005  30       VCH Company num
     C                     PARM #1LWNB    WQ0006  50       VCH Batch Numbe
     C                     PARM #1G9NB    WQ0007  50       VCH Header Numb
     C                     PARM #1DLNB    WQ0008  30       VCD Line
     C                     PARM 'R'       WQ0009  1        VCD Repayment F
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PWGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     ELSE
      * CASE: Push Pymt Sts is No AND Repayment Flag = R
      *  - c1 AND c2
      *   |- c1    : RCD.VCD Push Payment Status is No
      *   |- c2    : RCD.VCD Repayment Flag is Repayment
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #1JQST    IFEQ 'N'                        *IF
     C           #1C4SS    IFEQ 'R'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Upd for P2P Repayment XF - Hog Voucher Detail  * Unselect for Rep
     C                     CALL 'PWGXXFR'              90  Upd for P2P Rep
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HNNB    WQ0010  30       VCH Company num
     C                     PARM #1LWNB    WQ0011  50       VCH Batch Numbe
     C                     PARM #1G9NB    WQ0012  50       VCH Header Numb
     C                     PARM #1DLNB    WQ0013  30       VCD Line
     C                     PARM *BLANK    WQ0014  1        VCD Repayment F
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PWGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0003           *SFLSEL
      * Send message 'Select/Unselect not valid'
     C                     MOVEL'PRK1506' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     GOTO UAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If no errors, reload subfile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  6/06/2018 JBB E13128 - Make report available for Company 440
      *    Modified the program to work for companies 360, 440, 960, and
      *    961.  No longer need to pass in the sequel name to the submitt
      *    job.  The Company Number field on the screnn will be output
      *    only, and the user's company will be populated into the field.
      * 01/23/2021 ISE H16853 - Increased the length from 5 to 7 and
      *                         corrected the alignment of Buy Order Numb
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD12        ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ061
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#2C4SS'  YPMTFD           VCD Repayment F
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P1HONB           CC Company Numb
     C                     MOVEL*BLANK    P1C7CD           Oms Application
     C                     MOVEL*BLANK    P1C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P1G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P1G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P1EUTX           Oms Name
     C                     MOVEL*BLANK    P1EVTX           Oms System Valu
     C                     MOVEL*BLANK    P1HAST           Oms Access Deni
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHNNB           VCH Company num
     C                     Z-ADD*ZERO     WALWNB           VCH Batch Numbe
     C                     Z-ADD*ZERO     WAG9NB           VCH Header Numb
     C                     Z-ADD*ZERO     WADLNB           VCD Line
     C                     Z-ADD*ZERO     WACNPR           VCD Base Mkt Pr
     C                     Z-ADD*ZERO     WACOPR           VCD Sort Disc A
     C                     Z-ADD*ZERO     WACPPR           VCD Yield Gain/
     C                     Z-ADD*ZERO     WACQPR           VCD Base Carcas
     C                     Z-ADD*ZERO     WACRPR           VCD LN Add on/D
     C                     Z-ADD*ZERO     WAAKVA           VCD Gross Amt
     C                     Z-ADD*ZERO     WAALVA           VCD Deduction A
     C                     Z-ADD*ZERO     WACVPR           VCD Less Split
     C                     Z-ADD*ZERO     WAAMVA           VCD Net Amt
     C                     Z-ADD*ZERO     WAAEPC           VCD Split Perce
     C                     Z-ADD*ZERO     WAL5A1           VCD Received He
     C                     Z-ADD*ZERO     WAL6A1           VCD Head Killed
     C                     Z-ADD*ZERO     WAOKA1           VCD Unused Head
     C                     Z-ADD*ZERO     WAOLA1           VCD UnUsed Head
     C                     Z-ADD*ZERO     WAOMA1           VCD UnUsed Head
     C                     Z-ADD*ZERO     WAWSA1           MGL Voucher Num
     C                     Z-ADD*ZERO     WAWOA1           MGL Invoice Bat
     C                     Z-ADD*ZERO     WAHFDT           MGL Process to
     C                     Z-ADD*ZERO     WAB2TM           MGL Process to
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WACVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WAB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field CC Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Protect field
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Push to Pay Sts      USR
     C                     MOVEL*BLANK    YL0003  1
      * Define null work field TH Purchase Date
     C                     Z-ADD*ZERO     YN0001  70
      * Define null work field TH Group Reference
     C                     MOVEL*BLANK    YN0002 10
      * Define null work field TH Live Purchase UOM
     C                     MOVEL*BLANK    YN0003  2
      * Define null work field TH Live Purchase Price
     C                     Z-ADD*ZERO     YN0004  52
      * Define null work field TH Live Gross Amt
     C                     Z-ADD*ZERO     YN0005  72
      * Define null work field TH LIve Net Amt
     C                     Z-ADD*ZERO     YN0006  72
      * Define null work field TH Resale UOM
     C                     MOVEL*BLANK    YN0007  2
      * Define null work field TH Recalc Live Wgt Yld
     C                     Z-ADD*ZERO     YN0008  52
      * Define null work field TH Pricing Date
     C                     Z-ADD*ZERO     YN0009  70
      * Define null work field TH Resale Spread Sts
     C                     MOVEL*BLANK    YN0010  1
      * Define null work field TH Dead On Arrival
     C                     Z-ADD*ZERO     YN0011  50
      * Define null work field TH Head Received
     C                     Z-ADD*ZERO     YN0012  50
      * Define null work field TH Yard Deads
     C                     Z-ADD*ZERO     YN0013  50
      * Define null work field TH Held Over
     C                     Z-ADD*ZERO     YN0014  50
      * Define null work field TH Head Condemned
     C                     Z-ADD*ZERO     YN0015  50
      * Define null work field TH Head Killed
     C                     Z-ADD*ZERO     YN0016  50
      * Define null work field TH Head Adds
     C                     Z-ADD*ZERO     YN0017  50
      * Define null work field TH Head Accepted
     C                     Z-ADD*ZERO     YN0018  50
      * Define null work field TH Live Wgt
     C                     Z-ADD*ZERO     YN0019  71
      * Define null work field TH Adj Live Wgt
     C                     Z-ADD*ZERO     YN0020  71
      * Define null work field TH Hot Wgt
     C                     Z-ADD*ZERO     YN0021  71
      * Define null work field TH Tot Loin Eye Depth
     C                     Z-ADD*ZERO     YN0022  61
      * Define null work field TH Tot Backfat Inches
     C                     Z-ADD*ZERO     YN0023  61
      * Define null work field TH Tot Light Reflectance
     C                     Z-ADD*ZERO     YN0024  61
      * Define null work field TH Avg Live Wgt
     C                     Z-ADD*ZERO     YN0025  51
      * Define null work field TH Avg Hot Wgt
     C                     Z-ADD*ZERO     YN0026  51
      * Define null work field TH Avg Light Reflectance
     C                     Z-ADD*ZERO     YN0027  31
      * Define null work field TH Avg Lean Percent
     C                     Z-ADD*ZERO     YN0028  31
      * Define null work field TH Avg Loin Eye Depth
     C                     Z-ADD*ZERO     YN0029  31
      * Define null work field TH Avg Backfat
     C                     Z-ADD*ZERO     YN0030  31
      * Define null work field TH Std Yield Percent
     C                     Z-ADD*ZERO     YN0031  52
      * Define null work field TH Actual Yield %
     C                     Z-ADD*ZERO     YN0032  52
      * Define null work field TH Adj Actual Yield %
     C                     Z-ADD*ZERO     YN0033  52
      * Define null work field TH Yield Difference
     C                     Z-ADD*ZERO     YN0034  52
      * Define null work field TH Recalc Live Wgt
     C                     Z-ADD*ZERO     YN0035  31
      * Define null work field TH CM Market Price
     C                     Z-ADD*ZERO     YN0036  52
      * Define null work field TH CM Base Mkt Price
     C                     Z-ADD*ZERO     YN0037  52
      * Define null work field TH CM Base Mkt Price Amt
     C                     Z-ADD*ZERO     YN0038  72
      * Define null work field TH CM Sort Discount Amt
     C                     Z-ADD*ZERO     YN0039  72
      * Define null work field TH CM Yield Gain/Loss Amt
     C                     Z-ADD*ZERO     YN0040  72
      * Define null work field TH CM Base Carcass Value
     C                     Z-ADD*ZERO     YN0041  72
      * Define null work field TH CM LN AddOn/Deduct Amt
     C                     Z-ADD*ZERO     YN0042  72
      * Define null work field TH CM Carcass Gross Amt
     C                     Z-ADD*ZERO     YN0043  72
      * Define null work field TH Deduction Amt
     C                     Z-ADD*ZERO     YN0044  72
      * Define null work field TH Total Net WO Adds
     C                     Z-ADD*ZERO     YN0045  72
      * Define null work field TH Carcass Net Amt
     C                     Z-ADD*ZERO     YN0046  72
      * Define null work field TH Additions Amt
     C                     Z-ADD*ZERO     YN0047  72
      * Define null work field TH Payment Gross
     C                     Z-ADD*ZERO     YN0048  72
      * Define null work field Th Payment Net Amt
     C                     Z-ADD*ZERO     YN0049  72
      * Define null work field TH AP Voucher/Document#
     C                     Z-ADD*ZERO     YN0050  80
      * Define null work field TH Freight Amount
     C                     Z-ADD*ZERO     YN0051  72
      * Define null work field TH Accrual Amount
     C                     Z-ADD*ZERO     YN0052  72
      * Define null work field TH Fixed Cost Amount
     C                     Z-ADD*ZERO     YN0053  72
      * Define null work field TH Calc Net Sts
     C                     MOVEL*BLANK    YN0054  1
      * Define null work field TH Payment Sts
     C                     MOVEL*BLANK    YN0055  2
      * Define null work field TH Header Error Sts
     C                     MOVEL*BLANK    YN0056  1
      * Define null work field TH Detail Error Sts
     C                     MOVEL*BLANK    YN0057  1
      * Define null work field TH Kill Balancing Sts
     C                     MOVEL*BLANK    YN0058  1
      * Define null work field TH Bal to Kill Gen
     C                     MOVEL*BLANK    YN0059  1
      * Define null work field TH Commission A/P Voucher
     C                     Z-ADD*ZERO     YN0060  80
      * Define null work field TH Voucher Payment Date
     C                     Z-ADD*ZERO     YN0061  70
      * Define null work field TH User Error Override
     C                     MOVEL*BLANK    YN0062  1
      * Define null work field TH Held Over Record
     C                     MOVEL*BLANK    YN0063  1
      * Define null work field TH Sex
     C                     MOVEL*BLANK    YN0064  1
      * Define null work field TH Held/Ovr Completed Dte
     C                     Z-ADD*ZERO     YN0065  70
      * Define null work field TH Commission Paid Date
     C                     Z-ADD*ZERO     YN0066  70
      * Define null work field TH Actual Check Date
     C                     Z-ADD*ZERO     YN0067  70
      * Define null work field TH Shipped Weight
     C                     Z-ADD*ZERO     YN0068  71
      * Define null work field TH Avg Hot Wgt EXC/ADD
     C                     Z-ADD*ZERO     YN0069  71
      * Define null work field TH FFLI
     C                     Z-ADD*ZERO     YN0070  31
      * Define null work field TH Kill Product Value
     C                     Z-ADD*ZERO     YN0071  72
      * Define null work field TH Cut Product Value
     C                     Z-ADD*ZERO     YN0072  72
      * Define null work field TH Render Product Value
     C                     Z-ADD*ZERO     YN0073  72
      * Define null work field TH Head Excluded
     C                     Z-ADD*ZERO     YN0074  50
      * Define null work field TH CM Bse Mkt Live /CWT
     C                     Z-ADD*ZERO     YN0075  52
      * Define null work field TH CM Bse Mkt Carc /CWT
     C                     Z-ADD*ZERO     YN0076  52
      * Define null work field TH CM Srt Dsc Live /CWT
     C                     Z-ADD*ZERO     YN0077  52
      * Define null work field TH CM Srt Dsc Carc /CWT
     C                     Z-ADD*ZERO     YN0078  52
      * Define null work field TH CM Yld G/L Live /CWT
     C                     Z-ADD*ZERO     YN0079  52
      * Define null work field TH CM Yld G/L Carc /CWT
     C                     Z-ADD*ZERO     YN0080  52
      * Define null work field TH CM Crc Val Live /CWT
     C                     Z-ADD*ZERO     YN0081  52
      * Define null work field TH CM Crc Val Carc /CWT
     C                     Z-ADD*ZERO     YN0082  52
      * Define null work field TH CM Lean Prem Live /CWT
     C                     Z-ADD*ZERO     YN0083  52
      * Define null work field TH CM Lean Prem Carc /CWT
     C                     Z-ADD*ZERO     YN0084  52
      * Define null work field TH CM Gross Live /CWT
     C                     Z-ADD*ZERO     YN0085  52
      * Define null work field TH CM Gross Carc /CWT
     C                     Z-ADD*ZERO     YN0086  52
      * Define null work field TH Source Type
     C                     MOVEL*BLANK    YN0087  1
      * Define null work field TH Scale Ticket Sts
     C                     MOVEL*BLANK    YN0088  1
      * Define null work field TH Payment Type
     C                     MOVEL*BLANK    YN0089  1
      * Define null work field TH HPS Movement Ref #
     C                     Z-ADD*ZERO     YN0090  70
      * Define null work field TH Source Code
     C                     MOVEL*BLANK    YN0091  3
      * Define null work field TH Posted to HPS Flag
     C                     MOVEL*BLANK    YN0092  1
      * Define null work field TH Schedule Kill Shift
     C                     MOVEL*BLANK    YN0093  1
      * Define null work field TH Shift Held Over
     C                     MOVEL*BLANK    YN0094  1
      * Define null work field TH State
     C                     MOVEL*BLANK    YN0095  3
      * Define null work field TH Unused Code
     C                     MOVEL*BLANK    YN0096  3
      * Define null work field TH Unused Sts 2 Pos
     C                     MOVEL*BLANK    YN0097  2
      * Define null work field TH Commission Status
     C                     MOVEL*BLANK    YN0098  1
      * Define null work field TH Paid 2 Week Avg Y/N
     C                     MOVEL*BLANK    YN0099  1
      * Define null work field TH Unused Sts 1 Pos -3
     C                     MOVEL*BLANK    YN0100  1
      * Define null work field TH DOA Weight
     C                     Z-ADD*ZERO     YN0101  71
      * Define null work field TH Avg Lean % EXC/ADD
     C                     Z-ADD*ZERO     YN0102  71
      * Define null work field TH HPS Farm Site
     C                     Z-ADD*ZERO     YN0103  50
      * Define null work field TH Shift Held Over Head
     C                     Z-ADD*ZERO     YN0104  50
      * Define null work field TH Sorting Amount
     C                     Z-ADD*ZERO     YN0105  72
      * Define null work field TH Head Identified
     C                     Z-ADD*ZERO     YN0106  50
      * Define null work field TH Percent Identified
     C                     Z-ADD*ZERO     YN0107  52
      * Define null work field TH Percent Accepted
     C                     Z-ADD*ZERO     YN0108  52
      * Define null work field TH Head Adjusted-LN%
     C                     Z-ADD*ZERO     YN0109  50
      * Define null work field TH PHA Head Adds
     C                     Z-ADD*ZERO     YN0110  50
      * Define null work field TH PHA Add Type
     C                     MOVEL*BLANK    YN0111  1
      * Define null work field TH PHA Average Type
     C                     MOVEL*BLANK    YN0112  3
      * Define null work field TH PHA Add Reason
     C                     MOVEL*BLANK    YN0113  1
      * Define null work field TH PHA Yield Percent
     C                     Z-ADD*ZERO     YN0114  52
      * Define null work field TH PHA Lean Prm /Crc CWT
     C                     Z-ADD*ZERO     YN0115  52
      * Define null work field TH VC Gross Value /HD
     C                     Z-ADD*ZERO     YN0116  52
      * Define null work field TH Excluded Gross Value
     C                     Z-ADD*ZERO     YN0117  72
      * Define null work field TH Avg Lean %
     C                     Z-ADD*ZERO     YN0118  50
      * Define null work field TH Broken Back Hd Count
     C                     Z-ADD*ZERO     YN0119  50
      * Define null work field TH Hot Scl Upload Time
     C                     Z-ADD*ZERO     YN0120  70
      * Define null work field TH Unused Nbr 4
     C                     Z-ADD*ZERO     YN0121  70
      * Define null work field TH Excluded Carc Val
     C                     Z-ADD*ZERO     YN0122  72
      * Define null work field TH Excluded Premium
     C                     Z-ADD*ZERO     YN0123  72
      * Define null work field TH Unused Nbr 7
     C                     Z-ADD*ZERO     YN0124  71
      * Define null work field TH Unused Nbr 8
     C                     Z-ADD*ZERO     YN0125  71
      * Define null work field TH Unused Nbr 9
     C                     Z-ADD*ZERO     YN0126 111
      * Define null work field TH Unused Nbr 10
     C                     Z-ADD*ZERO     YN0127 111
      * Define null work field TH Break Even Price/CWT
     C                     Z-ADD*ZERO     YN0128 112
      * Define null work field TH Meat Value Factor Amt
     C                     Z-ADD*ZERO     YN0129 112
      * Define null work field TH Yld Parm Adj Yield%
     C                     Z-ADD*ZERO     YN0130  52
      * Define null work field TH PHA Sort Disc Fctr %
     C                     Z-ADD*ZERO     YN0131  52
      * Define null work field TH Avg Loin Eye - 2 dec
     C                     Z-ADD*ZERO     YN0132  52
      * Define null work field TH Avg Backfat - 2 Dec
     C                     Z-ADD*ZERO     YN0133  52
      * Define null work field TH HITCH Old Pay Net Amt
     C                     Z-ADD*ZERO     YN0134  92
      * Define null work field TH MPR Sort Loss
     C                     Z-ADD*ZERO     YN0135  92
      * Define null work field TH Unused Nbr 19
     C                     Z-ADD*ZERO     YN0136  90
      * Define null work field TH Unused Nbr 20
     C                     Z-ADD*ZERO     YN0137  90
      * Define null work field TH Cold Scl Upload Date
     C                     Z-ADD*ZERO     YN0138  70
      * Define null work field TH Cold Scl Upload Time
     C                     Z-ADD*ZERO     YN0139  70
      * Define null work field TH Head LFT
     C                     Z-ADD*ZERO     YN0140  70
      * Define null work field TH Head EUT/KOA
     C                     Z-ADD*ZERO     YN0141  70
      * Define null work field TH Unused Date 5
     C                     Z-ADD*ZERO     YN0142  70
      * Define null work field TH Unused Sts 1
     C                     MOVEL*BLANK    YN0143  1
      * Define null work field TH Unused Sts 2
     C                     MOVEL*BLANK    YN0144  1
      * Define null work field TH Unused Sts 3
     C                     MOVEL*BLANK    YN0145  1
      * Define null work field TH Unused Sts 4
     C                     MOVEL*BLANK    YN0146  2
      * Define null work field TH Unused Sts 5
     C                     MOVEL*BLANK    YN0147  2
      * Define null work field TH Unused Sts 6
     C                     MOVEL*BLANK    YN0148  3
      * Define null work field TH Unused Sts 7
     C                     MOVEL*BLANK    YN0149  3
      * Define null work field TH Unused Sts 8
     C                     MOVEL*BLANK    YN0150  1
      * Define null work field DF Defect Code
     C                     MOVEL*BLANK    YN0151  6
      * Define null work field THP Process Code
     C                     MOVEL*BLANK    YN0152  6
      * Define null work field HB Buyer Code
     C                     MOVEL*BLANK    YN0153  3
      * Define null work field GN Genetic Code
     C                     MOVEL*BLANK    YN0154  5
      * Define null work field HC Class Code
     C                     MOVEL*BLANK    YN0155  3
      * Define local work field Net Amount           USR
     C                     Z-ADD*ZERO     YL0004  92
      * Define local work field Th Payment Net Amt
     C                     Z-ADD*ZERO     YL0005  72
      * Define local work field Nbr of Push Rcds-Regular
     C                     Z-ADD*ZERO     YL0006  50
      * Define local work field Nbr of Push Rcds-Repaymnt
     C                     Z-ADD*ZERO     YL0007  50
      * Define local work field Push To Company
     C                     Z-ADD*ZERO     YL0008  30
      * Define local work field Protect Ref fields
     C                     MOVEL*BLANK    YL0009  1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD09        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modification history
     C                     EXSR UBSUBR                     Modification hi
     C                     Z-ADD999999    W0SLM            *Scan limit
      * Default Company field protection flag
     C                     MOVEL'Y'       YL0009           Protect Ref fie
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P1J8NB    PARM *BLANK    WQ0015  3        Oms Warehouse C
     C           YL0001    PARM *ZERO     WQ0016  30       CC Company Numb
     C                     PARM 'HPE'     WQ0017  6        Oms Application
     C           P1C8CD    PARM *BLANK    WQ0018  3        Oms SalesPerson
     C           P1G8ST    PARM *BLANK    WQ0019  1        Oms Allow Multi
     C           P1G9ST    PARM *BLANK    WQ0020 10        Oms Default Pri
     C           P1EUTX    PARM *BLANK    WQ0021 30        Oms Name
     C           P1EVTX    PARM *BLANK    WQ0022 40        Oms System Valu
     C           P1HAST    PARM *BLANK    WQ0023  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP1EVTX    ##CMP
     C                     END                             *FI
      * Determine action from security check
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: JOB.*USER is Pork IS Repayment Users
     C           ##USR     IFEQ @CN,006                    *IF
     C           ##USR     OREQ @CN,007
     C           ##USR     OREQ @CN,008
     C           ##USR     OREQ @CN,009
     C           ##USR     OREQ @CN,010
     C           ##USR     OREQ @CN,011
     C           ##USR     OREQ @CN,012
     C                     MOVEL'N'       YL0009           Protect Ref fie
     C                     ELSE
      * CASE: PAR.Oms Allow Multi-Company is No
     C           P1G8ST    IFEQ 'N'                        *IF
     C                     MOVEL'Y'       YL0009           Protect Ref fie
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Company Value Nbr XF - STR Order Management Sys  * HPEPSHTOCO
     C                     CALL 'PDHGXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM YL0001    WQ0024  30       BOH Company Num
     C                     PARM @CN,013   WQ0025 10        Company Value C
     C           YL0008    PARM *ZERO     WQ0026 155       System Value Nu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL*BLANK    YL0003           Push to Pay Sts
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** @CN
00001 All Repayments Only
00002 Ignored
00003 Pushed-Report not printed
00004 Ready to Push
00005 Push Completed
00006 ISJAMESB
00007 ISDANNYN
00008 ISJULIUSH
00009 ISPURVAP
00010 ISROSEM
00011 ISSUSANM
00012 ISBARBG
00013 HPEPSHTOCO
