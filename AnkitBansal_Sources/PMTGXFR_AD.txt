// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMTGXFR
// ?Date: 14.08.2025 Time: 03:44:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?F1110 - EPA Quarterly Reporting -- Report RFS0400
//?     RFS RIN Generation Report - send quarterly to the EPA
//?Q1 =  Jan - Mar (Due May 31)         Q2 = Apr - Jun (Due Aug 31)
//?Q3 =  Jul - Sep (Due Nov 30)         Q4 = Oct - Dec (Due Feb 28)
//?Per Internal Auditors 5/12/09 : Get Batch volume from the total amount
//?shipped from the batch - instead of from what they enter when they
//?create the batch.
//?C0774 RMC 5/20/10 use ship co when going to OD
//?Set field values that wont change per batch:
// PAR.RFS Report Form ID = CND.RFS0400
PAR.RFS_Report_Form_ID = 'RFS0400';

// PAR.RFS CBI = CND.Non Confidential Business
PAR.RFS_CBI = 'N';

//?Format report date: MM/DD/YYYY
EXECUTE FUNCTION(Clc Fmt Dt MM/DD/YYYY IF) TYPE(EXCINTFUN)                      AC1874414;
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.RFS_Report_Date);
{
 //?Execute internal function

 //?Format input date as : MM/DD/YYYY
 // PAR.Date 7A              USR = CVTVAR(PAR.Date In)
 PAR.Date_7A_USR = CVTVAR(PAR.Date_In);

 // WRK.Month (Char) USR = SUBSTRING(PAR.Date 7A              USR,CON.4,CON.2)
 WRK.Month_Char_USR = SUBSTRING(PAR.Date_7A_USR:4:2);

 // WRK.Day (Alpha) USR = SUBSTRING(PAR.Date 7A              USR,CON.6,CON.2)
 WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_7A_USR:6:2);

 // WRK.Year Code = PAR.Date In *YEAR
 WRK.Year_Code = DATEDTLS(PAR.Date_In 'YR' 1111111 'NONE' 'N' 1);

 // WRK.Year USR = WRK.Year Code
 WRK.Year_USR = WRK.Year_Code;

 // WRK.Month MM/  3A = CONCAT(WRK.Month (Char) USR,CON./,CON.*ZERO)
 WRK.Month_MM_3A = WRK.Month_Char_USR + '/' (*ZERO);

 // WRK.Day DD/  3A = CONCAT(WRK.Day (Alpha) USR,CON./,CON.*ZERO)
 WRK.Day_DD_3A = WRK.Day_Alpha_USR + '/' (*ZERO);

 // WRK.Month/Day MM/DD/ = CONCAT(WRK.Month MM/  3A,WRK.Day DD/  3A,CON.*ZERO)
 WRK.Month_Day_MM_DD = WRK.Month_MM_3A + WRK.Day_DD_3A (*ZERO);

 // PAR.MMDDYYYY Usr = CONCAT(WRK.Month/Day MM/DD/,WRK.Year USR,CON.*ZERO)
 PAR.MMDDYYYY_Usr = WRK.Month_Day_MM_DD + WRK.Year_USR (*ZERO);

}


// WRK.Year Alpha (YY) USR = SUBSTRING(PAR.RFS Report Year,CON.3,CON.2)
WRK.Year_Alpha_YY_USR = SUBSTRING(PAR.RFS_Report_Year:3:2);

// WRK.Text 3 Length USR = CONCAT(CON.1,WRK.Year Alpha (YY) USR,CON.*ZERO)
WRK.Text_3_Length_USR = '1' + WRK.Year_Alpha_YY_USR (*ZERO);

//?Set Compliance From and To Dates
CASE;

// IF PAR.RFS Compliance Period is Quarter 1 (Jan-Mar)
IF PAR.RFS_Compliance_Period = 'Q1';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0101,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0101' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0331,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0331' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 2 (Apr-Jun)
IF PAR.RFS_Compliance_Period = 'Q2';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0401,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0401' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0630,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0630' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 3 (Jly-Sep)
IF PAR.RFS_Compliance_Period = 'Q3';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.0701,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '0701' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.0930,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '0930' (*ZERO);

//?Set Compliance From and To Dates
// IF PAR.RFS Compliance Period is Quarter 4 (Oct-Dec)
IF PAR.RFS_Compliance_Period = 'Q4';

// WRK.Date From Alpha       USR = CONCAT(WRK.Text 3 Length USR,CON.1001,CON.*ZERO)
WRK.Date_From_Alpha_USR = WRK.Text_3_Length_USR + '1001' (*ZERO);

// WRK.Date To Alpha         USR = CONCAT(WRK.Text 3 Length USR,CON.1231,CON.*ZERO)
WRK.Date_To_Alpha_USR = WRK.Text_3_Length_USR + '1231' (*ZERO);

ENDIF;

// PAR.Date From             USR = CVTVAR(WRK.Date From Alpha       USR)
PAR.Date_From_USR = CVTVAR(WRK.Date_From_Alpha_USR);

// PAR.Date To               USR = CVTVAR(WRK.Date To Alpha         USR)
PAR.Date_To_USR = CVTVAR(WRK.Date_To_Alpha_USR);

//?Read COA Batch Header file and create records:
EXECUTE FUNCTION(RTV Crt RFS RIN Gen Fl RT) TYPE(RTVOBJ) FILE(PMCCCPP)          AC1874320;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_To_USR);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.RFS_Report_Form_ID);
PARAMETER(PAR.RFS_Report_Type);
PARAMETER(PAR.RFS_CBI);
PARAMETER(PAR.RFS_Report_Date);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.RFS_Company_ID);
PARAMETER(PAR.RFS_Compliance_Period);
{
 //?USER: Process Data record

 //?Create 1 report for each BATCH of fuel generated.
 CASE;

 // IF DB1.COA Batch Production Date GE PAR.Date From             USR
 IF DB1.COA_Batch_Production_Date >= PAR.Date_From_USR;

 // AND DB1.COA Batch Production Date LE PAR.Date To               USR
 AND DB1.COA_Batch_Production_Date <= PAR.Date_To_USR;

 EXECUTE FUNCTION(RTV for RFS EPA Rpts  RT) TYPE(RTVOBJ) FILE(PMCAREP)           AC1874383;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_Bio_diesel_Fuel_Code);
 PARAMETER(LCL.COA_Bio_dsl_Fuel_Cd_Descr);
 PARAMETER(LCL.COA_Producer_Regist_Nbr);
 PARAMETER(LCL.COA_Employer_ID);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.COA_RIN_Equivalence_Valu);
 PARAMETER(LCL.COA_RIN_Renewable_Enrgy);
 PARAMETER(LCL.COA_RIN_Type_Flag);
 PARAMETER(LCL.COA_Density_Loadout);
 PARAMETER(LCL.COA_BOL_Percent);
 PARAMETER(LCL.COA_RFS_Renew_Fuel_Code);
 PARAMETER(LCL.COA_RFS_Rnwbl_Feedstock);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Equiv value is stored as '15', so cvt to dec, and divide by 10 to get 1.5
 // LCL.USR Number 2.0 = CVTVAR(LCL.COA RIN Equivalence Valu)
 LCL.USR_Number_2_0 = CVTVAR(LCL.COA_RIN_Equivalence_Valu);

 // PAR.RFS Equivalence Value = LCL.USR Number 2.0 / CON.10 *
 PAR.RFS_Equivalence_Value = LCL.USR_Number_2_0 / 10;

 //?Format Prod date as MM/DD/YYYY
 EXECUTE FUNCTION(Clc Fmt Dt MM/DD/YYYY IF) TYPE(EXCINTFUN)                      AC1874414;
 PARAMETER(DB1.COA_Batch_Production_Date);
 PARAMETER(PAR.RFS_Production_Date);
 {
  //?Execute internal function

  //?Format input date as : MM/DD/YYYY
  // PAR.Date 7A              USR = CVTVAR(PAR.Date In)
  PAR.Date_7A_USR = CVTVAR(PAR.Date_In);

  // WRK.Month (Char) USR = SUBSTRING(PAR.Date 7A              USR,CON.4,CON.2)
  WRK.Month_Char_USR = SUBSTRING(PAR.Date_7A_USR:4:2);

  // WRK.Day (Alpha) USR = SUBSTRING(PAR.Date 7A              USR,CON.6,CON.2)
  WRK.Day_Alpha_USR = SUBSTRING(PAR.Date_7A_USR:6:2);

  // WRK.Year Code = PAR.Date In *YEAR
  WRK.Year_Code = DATEDTLS(PAR.Date_In 'YR' 1111111 'NONE' 'N' 1);

  // WRK.Year USR = WRK.Year Code
  WRK.Year_USR = WRK.Year_Code;

  // WRK.Month MM/  3A = CONCAT(WRK.Month (Char) USR,CON./,CON.*ZERO)
  WRK.Month_MM_3A = WRK.Month_Char_USR + '/' (*ZERO);

  // WRK.Day DD/  3A = CONCAT(WRK.Day (Alpha) USR,CON./,CON.*ZERO)
  WRK.Day_DD_3A = WRK.Day_Alpha_USR + '/' (*ZERO);

  // WRK.Month/Day MM/DD/ = CONCAT(WRK.Month MM/  3A,WRK.Day DD/  3A,CON.*ZERO)
  WRK.Month_Day_MM_DD = WRK.Month_MM_3A + WRK.Day_DD_3A (*ZERO);

  // PAR.MMDDYYYY Usr = CONCAT(WRK.Month/Day MM/DD/,WRK.Year USR,CON.*ZERO)
  PAR.MMDDYYYY_Usr = WRK.Month_Day_MM_DD + WRK.Year_USR (*ZERO);

 }

 //?Concat Renewable fuel type and feedstock
 // PAR.RFS Renew Fuel Type = CONCAT(DB1.COA RFS Renew Fuel Code,DB1.COA RFS Rnwbl Feedstock,CON.*ZE
 PAR.RFS_Renew_Fuel_Type = DB1.COA_RFS_Renew_Fuel_Code + DB1.COA_RFS_Rnwbl_Feedstock (*ZERO);

 //?5/13/09 Get Batch Volume from total shipped from the batch per auditors
 EXECUTE FUNCTION(Rtv RFS400-Batch Vol  RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC1936157;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(PAR.Date_To_USR);
 PARAMETER(LCL.Quantity_Shipped_Total);
 {
  //?USER: Initialize routine

  // PAR.Quantity Shipped Total = CON.*ZERO
  PAR.Quantity_Shipped_Total = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.COA Retired RIN Reason Cd is *Blank
  IF DB1.COA_Retired_RIN_Reason_Cd = *BLANK;

  EXECUTE FUNCTION(RTV RFS0400 Btch Volum RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1936161;
  PARAMETER(DB1.COA_Shipping_Company);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Quantity_Shipped_Total);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Detail Line Status is Not cancelled
   IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

   // LCL.Quantity Shipped Total = CON.*ZERO
   LCL.Quantity_Shipped_Total = *ZERO;

   EXECUTE FUNCTION(RTV HPB Gross Gall DtlRT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1906332;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
   PARAMETER(LCL.Quantity_Shipped_Total);
   {
    //?USER: Process Data record

    // PAR.Quantity Shipped Total = PAR.Quantity Shipped Total + DB1.Case Quantity
    PAR.Quantity_Shipped_Total = PAR.Quantity_Shipped_Total + DB1.Case_Quantity;

   }

   // PAR.Quantity Shipped Total = PAR.Quantity Shipped Total + LCL.Quantity Shipped Total
   PAR.Quantity_Shipped_Total = PAR.Quantity_Shipped_Total + LCL.Quantity_Shipped_Total;

   ENDIF;

  }

  ENDIF;

 }

 //?----------- Write 1 rcd per batch header -----------------
 EXECUTE FUNCTION(Crt RFS RIN Gnrtn Rpt CR) TYPE(CRTOBJ) FILE(PMDPCPP)           AC1874237;
 PARAMETER(PAR.RFS_Report_Form_ID);
 PARAMETER(PAR.RFS_Report_Type);
 PARAMETER(PAR.RFS_CBI);
 PARAMETER(PAR.RFS_Report_Date);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(LCL.COA_ULSD_Company_#);
 PARAMETER(LCL.COA_Sold_From_Name);
 PARAMETER(PAR.RFS_Compliance_Period);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(PAR.RFS_Production_Date);
 PARAMETER(PAR.RFS_Equivalence_Value);
 PARAMETER(LCL.Quantity_Shipped_Total);
 PARAMETER(DB1.COA_Batch_Denaturant_Vol);
 PARAMETER(DB1.COA_Batch_RIN);
 PARAMETER(PAR.RFS_Renew_Fuel_Type);
 ENDIF;

 //?USER: Exit processing

 // PAR.RFS Company ID = LCL.COA ULSD Company #
 PAR.RFS_Company_ID = LCL.COA_ULSD_Company_#;

}


