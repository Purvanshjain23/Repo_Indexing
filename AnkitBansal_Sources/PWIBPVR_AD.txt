// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWIBPVR
// ?Date: 14.08.2025 Time: 02:56:33
// ?------------------------------------------------------------------------------------------------

//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

EXECUTE FUNCTION(Rtv Tattoo Header Job RT) TYPE(RTVOBJ) FILE(PKDOREP)           AB1348887;
PARAMETER(PAR.Tattoo_Job_Sel_Name);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(DTL.Tattoo_Job_Sel_Sort_Fld);
PARAMETER(DTL.Repayment_Status);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Load Repayment Status Description
CASE;

// IF DTL.Tattoo Job Sel Perm/Temp is Repaid
IF DTL.Repayment_Status = 'R';

// DTL.Text 10 1 USR = CON.Repaid
DTL.Text_10_1_USR = 'Repaid';

//?Load Repayment Status Description
// IF DTL.Tattoo Job Sel Perm/Temp is Unpaid
IF DTL.Repayment_Status = 'U';

// DTL.Text 10 1 USR = CON.Unpaid
DTL.Text_10_1_USR = 'Unpaid';

//?Load Repayment Status Description
// IF DTL.Tattoo Job Sel Perm/Temp is Paid
IF DTL.Repayment_Status = 'P';

// DTL.Text 10 1 USR = CON.Paid
DTL.Text_10_1_USR = 'Paid';

//?Load Repayment Status Description
// IF DTL.Tattoo Job Sel Perm/Temp is Transferred
IF DTL.Repayment_Status = 'T';

// DTL.Text 10 1 USR = CON.Transfer
DTL.Text_10_1_USR = 'Transfer';

//?Load Repayment Status Description
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Text 10 1 USR = CON.*BLANK
DTL.Text_10_1_USR = *BLANK;

ENDIF;

EXECUTE FUNCTION(RTV Tattoo Hdr into LCL) TYPE(RTVOBJ) FILE(PKA1CPP)            AB1265474;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(NLL.TH_Purchase_Date);
PARAMETER(NLL.TH_Group_Reference);
PARAMETER(NLL.TH_Live_Purchase_UOM);
PARAMETER(NLL.TH_Live_Purchase_Price);
PARAMETER(NLL.TH_Live_Gross_Amt);
PARAMETER(NLL.TH_LIve_Net_Amt);
PARAMETER(NLL.TH_Resale_UOM);
PARAMETER(NLL.TH_Recalc_Live_Wgt_Yld);
PARAMETER(NLL.TH_Pricing_Date);
PARAMETER(NLL.TH_Resale_Spread_Sts);
PARAMETER(NLL.TH_Dead_On_Arrival);
PARAMETER(NLL.TH_Head_Received);
PARAMETER(NLL.TH_Yard_Deads);
PARAMETER(NLL.TH_Held_Over);
PARAMETER(NLL.TH_Head_Condemned);
PARAMETER(NLL.TH_Head_Killed);
PARAMETER(NLL.TH_Head_Adds);
PARAMETER(NLL.TH_Head_Accepted);
PARAMETER(NLL.TH_Live_Wgt);
PARAMETER(NLL.TH_Adj_Live_Wgt);
PARAMETER(NLL.TH_Hot_Wgt);
PARAMETER(NLL.TH_Tot_Loin_Eye_Depth);
PARAMETER(NLL.TH_Tot_Backfat_Inches);
PARAMETER(NLL.TH_Tot_Light_Reflectance);
PARAMETER(NLL.TH_Avg_Live_Wgt);
PARAMETER(NLL.TH_Avg_Hot_Wgt);
PARAMETER(NLL.TH_Avg_Light_Reflectance);
PARAMETER(NLL.TH_Avg_Lean_Percent);
PARAMETER(NLL.TH_Avg_Loin_Eye_Depth);
PARAMETER(NLL.TH_Avg_Backfat);
PARAMETER(NLL.TH_Std_Yield_Percent);
PARAMETER(NLL.TH_Actual_Yield);
PARAMETER(NLL.TH_Adj_Actual_Yield);
PARAMETER(NLL.TH_Yield_Difference);
PARAMETER(NLL.TH_Recalc_Live_Wgt);
PARAMETER(NLL.TH_CM_Market_Price);
PARAMETER(NLL.TH_CM_Base_Mkt_Price);
PARAMETER(NLL.TH_CM_Base_Mkt_Price_Amt);
PARAMETER(NLL.TH_CM_Sort_Discount_Amt);
PARAMETER(NLL.TH_CM_Yield_Gain_Loss_Amt);
PARAMETER(NLL.TH_CM_Base_Carcass_Value);
PARAMETER(NLL.TH_CM_LN_AddOn_Deduct_Amt);
PARAMETER(NLL.TH_CM_Carcass_Gross_Amt);
PARAMETER(NLL.TH_Deduction_Amt);
PARAMETER(NLL.TH_Total_Net_WO_Adds);
PARAMETER(NLL.TH_Carcass_Net_Amt);
PARAMETER(NLL.TH_Additions_Amt);
PARAMETER(NLL.TH_Payment_Gross);
PARAMETER(NLL.Th_Payment_Net_Amt);
PARAMETER(NLL.TH_AP_Voucher_Document#);
PARAMETER(NLL.TH_Freight_Amount);
PARAMETER(NLL.TH_Accrual_Amount);
PARAMETER(NLL.TH_Fixed_Cost_Amount);
PARAMETER(NLL.TH_Calc_Net_Sts);
PARAMETER(DTL.TH_Payment_Sts);
PARAMETER(NLL.TH_Header_Error_Sts);
PARAMETER(NLL.TH_Detail_Error_Sts);
PARAMETER(NLL.TH_Kill_Balancing_Sts);
PARAMETER(NLL.TH_Bal_to_Kill_Gen);
PARAMETER(NLL.TH_Commission_A_P_Voucher);
PARAMETER(NLL.TH_Voucher_Payment_Date);
PARAMETER(NLL.TH_User_Error_Override);
PARAMETER(NLL.TH_Held_Over_Record);
PARAMETER(NLL.TH_Sex);
PARAMETER(NLL.TH_Held_Ovr_Completed_Dte);
PARAMETER(NLL.TH_Commission_Paid_Date);
PARAMETER(NLL.TH_Actual_Check_Date);
PARAMETER(NLL.TH_Shipped_Weight);
PARAMETER(NLL.TH_Avg_Hot_Wgt_EXC_ADD);
PARAMETER(NLL.TH_FFLI);
PARAMETER(NLL.TH_Kill_Product_Value);
PARAMETER(NLL.TH_Cut_Product_Value);
PARAMETER(NLL.TH_Render_Product_Value);
PARAMETER(NLL.TH_Head_Excluded);
PARAMETER(NLL.TH_CM_Bse_Mkt_Live_CWT);
PARAMETER(NLL.TH_CM_Bse_Mkt_Carc_CWT);
PARAMETER(NLL.TH_CM_Srt_Dsc_Live_CWT);
PARAMETER(NLL.TH_CM_Srt_Dsc_Carc_CWT);
PARAMETER(NLL.TH_CM_Yld_G_L_Live_CWT);
PARAMETER(NLL.TH_CM_Yld_G_L_Carc_CWT);
PARAMETER(NLL.TH_CM_Crc_Val_Live_CWT);
PARAMETER(NLL.TH_CM_Crc_Val_Carc_CWT);
PARAMETER(NLL.TH_CM_Lean_Prem_Live_CWT);
PARAMETER(NLL.TH_CM_Lean_Prem_Carc_CWT);
PARAMETER(NLL.TH_CM_Gross_Live_CWT);
PARAMETER(NLL.TH_CM_Gross_Carc_CWT);
PARAMETER(NLL.TH_Source_Type);
PARAMETER(NLL.TH_Scale_Ticket_Sts);
PARAMETER(NLL.TH_Payment_Type);
PARAMETER(DTL.TH_HPS_Movement_Ref_#);
PARAMETER(NLL.TH_Source_Code);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(NLL.TH_Posted_to_HPS_Flag);
PARAMETER(NLL.TH_Schedule_Kill_Shift);
PARAMETER(NLL.TH_Shift_Held_Over);
PARAMETER(NLL.TH_State);
PARAMETER(NLL.TH_Unused_Code);
PARAMETER(NLL.TH_Unused_Sts_2_Pos);
PARAMETER(NLL.TH_Commission_Status);
PARAMETER(NLL.TH_Paid_2_Week_Avg_Y_N);
PARAMETER(NLL.TH_Unused_Sts_1_Pos_3);
PARAMETER(NLL.TH_DOA_Weight);
PARAMETER(NLL.TH_Avg_Lean_EXC_ADD);
PARAMETER(NLL.TH_HPS_Farm_Site);
PARAMETER(NLL.TH_Shift_Held_Over_Head);
PARAMETER(NLL.TH_Sorting_Amount);
PARAMETER(NLL.TH_Head_Identified);
PARAMETER(NLL.TH_Percent_Identified);
PARAMETER(NLL.TH_Percent_Accepted);
PARAMETER(NLL.TH_Head_Adjusted_LN);
PARAMETER(NLL.TH_PHA_Head_Adds);
PARAMETER(NLL.TH_PHA_Add_Type);
PARAMETER(NLL.TH_PHA_Average_Type);
PARAMETER(NLL.TH_PHA_Add_Reason);
PARAMETER(NLL.TH_PHA_Yield_Percent);
PARAMETER(NLL.TH_PHA_Lean_Prm_Crc_CWT);
PARAMETER(NLL.TH_VC_Gross_Value_HD);
PARAMETER(NLL.TH_Excluded_Gross_Value);
PARAMETER(NLL.TH_Avg_Lean);
PARAMETER(NLL.TH_Broken_Back_Hd_Count);
PARAMETER(NLL.TH_Hot_Scl_Upload_Time);
PARAMETER(NLL.TH_Unused_Nbr_4);
PARAMETER(NLL.TH_Excluded_Carc_Val);
PARAMETER(NLL.TH_Excluded_Premium);
PARAMETER(NLL.TH_Unused_Nbr_7);
PARAMETER(NLL.TH_Unused_Nbr_8);
PARAMETER(NLL.TH_Unused_Nbr_9);
PARAMETER(NLL.TH_Unused_Nbr_10);
PARAMETER(NLL.TH_Break_Even_Price_CWT);
PARAMETER(NLL.TH_Meat_Value_Factor_Amt);
PARAMETER(NLL.TH_Yld_Parm_Adj_Yield);
PARAMETER(NLL.TH_PHA_Sort_Disc_Fctr);
PARAMETER(NLL.TH_Avg_Loin_Eye_2_dec);
PARAMETER(NLL.TH_Avg_Backfat_2_Dec);
PARAMETER(NLL.TH_HITCH_Old_Pay_Net_Amt);
PARAMETER(NLL.TH_MPR_Sort_Loss);
PARAMETER(NLL.TH_Unused_Nbr_19);
PARAMETER(NLL.TH_Unused_Nbr_20);
PARAMETER(NLL.TH_Cold_Scl_Upload_Date);
PARAMETER(NLL.TH_Cold_Scl_Upload_Time);
PARAMETER(NLL.DF_Defect_Code);
PARAMETER(DTL.THP_Process_Code);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(NLL.HB_Buyer_Code);
PARAMETER(NLL.GN_Genetic_Code);
PARAMETER(NLL.HC_Class_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?If Payment Status <> blank, load description
CASE;

// IF NOT DTL.TH Payment Sts is Unselected
IF ! DTL.TH_Payment_Sts = *BLANK;

// DTL.@Description 16 Usr = Condition name of DTL.TH Payment Sts
DTL.@Description_16_Usr = RTVCND(DTL.TH_Payment_Sts);

ENDIF;

EXECUTE FUNCTION(Rtv BOH Lock Sts      RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1251842;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOH_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?If Lock Status <> blank, load description
CASE;

// IF DTL.BOH Status NE LCL.BOH Status
IF DTL.BOH_Status <> LCL.BOH_Status;

// DTL.Text 6 USR = Condition name of DTL.BOH Status
DTL.Text_6_USR = RTVCND(DTL.BOH_Status);

ENDIF;

EXECUTE FUNCTION(Rtv Buy Order Load    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1192881;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(NLL.BOL_Kill_Date);
PARAMETER(NLL.BOL_Pln_Delv_Start_Time);
PARAMETER(NLL.BOL_Pln_Delv_End_Time);
PARAMETER(NLL.BOL_Pln_Head_Delv);
PARAMETER(NLL.BOL_Shipped_Wgt);
PARAMETER(NLL.BOL_Pln_Delv_Date);
PARAMETER(NLL.BOL_Freight_UOM);
PARAMETER(NLL.BOL_Freight_Unit_Amt);
PARAMETER(NLL.BOL_Freight_Amt);
PARAMETER(NLL.BOL_Freight_Allocation);
PARAMETER(NLL.BOL_Head_Received);
PARAMETER(NLL.BOL_Live_Wgt_Received);
PARAMETER(DTL.BOL_Trucker_Payment_Sts);
PARAMETER(NLL.BOL_Trucker_Check_Number);
PARAMETER(NLL.BOL_Trucker_Check_Date);
PARAMETER(NLL.BOL_AP_Voucher);
PARAMETER(NLL.BOL_Trailer);
PARAMETER(NLL.BOL_Freight_Exp_Paid_By);
PARAMETER(NLL.BOL_Scheduled_Kill_Shift);
PARAMETER(NLL.BOL_Truck_Scale_Weigh_Sts);
PARAMETER(NLL.Reported_to_USDA);
PARAMETER(NLL.BOL_MPR_Prior_Day_Prch);
PARAMETER(NLL.BOL_Violated_Auth_Tme_Sts);
PARAMETER(NLL.TRK_Trucker_Code);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?If Trucker Payment Status <> blank, load description
CASE;

// IF NOT DTL.BOL Trucker Payment Sts is Blank
IF ! DTL.BOL_Trucker_Payment_Sts = *BLANK;

// DTL.@Desc 15 = Condition name of DTL.BOL Trucker Payment Sts
DTL.@Desc_15 = RTVCND(DTL.BOL_Trucker_Payment_Sts);

ENDIF;

//?Load Hog Class Type description
CASE;

// IF DTL.TH Hog Class Type is Market
IF DTL.TH_Hog_Class_Type = 'M';

// DTL.Text 6 USR 2 = CON.Market
DTL.Text_6_USR_2 = 'Market';

//?Load Hog Class Type description
// IF DTL.TH Hog Class Type is Resale
IF DTL.TH_Hog_Class_Type = 'R';

// DTL.Text 6 USR 2 = CON.Resale
DTL.Text_6_USR_2 = 'Resale';

ENDIF;

