      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * PROGRAM:     TC212 - Sales History
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     08/18/11
      *
      * FUNCTION: This program builds the Sales History file to be sent to 3C.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcaadrel1  if   e           k disk
      *   Warehouse master
      *
      *
     Fcabzrel1  if   e           k disk
      *   Item master
      *
      *
     Fomhstpod  uf   e           k disk
      *  Sales history (LF selects only records not already sent to 3C)
      *
      *
     Fopbfcpl1  if   e           k disk
      *  PD Order header
      *
      *
     Ftcp212    o    e           k disk
      *   3C: Sales history header
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      *  Standalone fields
      *---------------------------------------------------------------
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
     D wkdt            s              7  0
      *
      *
      * Parm fields
      *
     D xxitem          s              7  0
     D xxuom           s              2
     D xxpr            s             11  4
     D xxsynondt       s              7  0
     D xxcocd          s              3  0
     D xxreturn        s              7a
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Process order records from the Synon Sales History File. We will only process
      * records not already sent to 3C. If we need to resend already sent data, Rose/Purva
      * will reset field F4GASX-Process Sts for 3C to No. This logic will select only
      * the records that need to be sent.
      *
     C     wkdt          setll     omhstpod
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      omhstpod                               90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   exsr      $wrt212
      *
      * (Note: We are clearing/rebuilding this file on every run since this
      *        is just a temp solution until the Sequel folks get this in
      *        place on the server side. If it turns out to NOT be temporary,
      *        we may want to turn on the update below...we would need to check
      *        with Purva before doing this.
      *
      * Update the Sales History record so that it doesn't get sent again.
     C*****toohere       move      yes           f4gasx
     C*****************  update    @hstpsb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
     C                   seton                                        lr
      /eject
      *--------------------------------------------------------------------------------
      * Write Sales History record
      *--------------------------------------------------------------------------------
      *
     C     $wrt212       begsr
      *
     C                   clear                   shrec
      * Company data
     C                   z-add     f4r8nb        shscono                        Shipping Company
     C                   z-add     f4aic3        shacono                        Accounting Comp
      *
      * Order data
     C                   move      f4jncd        shtycd                         Order type
     C                   z-add     f4c4nb        shorno                         Order number
     C                   move      f4ajcd        shwhcd                         Warehouse
      *
      * Fresh/Frozen Flag
     C                   exsr      $fresh
      *
      * Customer data
     C                   move      f4bocd        shtypecd                       Type Code
     C                   move      f4kxcd        shcntrycd                      Country Code
     C                   z-add     f4bkc7        shshcuno                       Ship to Cust
     C                   move      f4brtx        shshcunm                       Ship to Cust Name
     C                   move      f4hnna        shshcity                       Ship to City
     C                   move      f4dbcd        shshstate                      Ship to State
     C                   move      f4cktx        shshzipcd                      Ship to Zip
      * Other data
     C                   move      f4r4cd        shsrcd                         Sales route code
     C                   move      f4r5cd        shorspcd                       Original salesperson
     C                   z-add     f4rmnb        shloadno                       Load number
     C                   move      f4bzna        shcrcd                         Carrier code
     C                   move      f4u2st        shexfl                         Export flag
     C                   move      f4umcd        shexcntry                      Export country
      *
     C                   z-add     f4tbnb        shafrt                         Absorbed frt rate
     C                   z-add     f4akpr        shunitpr                       Unit price
     C                   z-add     f4a5pr        shcmpr                         Commodity mkt price
      *
      * Shipping Method
     C                   move      f4q2cd        shsmcd
     C                   select
     C                   when      shsmcd = 'CT'
     C                   eval      shsmcdds = 'Collect Truck'
      *
     C                   when      shsmcd = 'CR'
     C                   eval      shsmcdds = 'Collect Rail'
      *
     C                   when      shsmcd = 'PT'
     C                   eval      shsmcdds = 'PrePaid Truck'
      *
     C                   when      shsmcd = 'PR'
     C                   eval      shsmcdds = 'PrePaid Rail'
     C                   endsl
      *
      * OM Week
     C                   z-add     f4bznb        shomwk                         OM week
      * Order date
      *
     C     *cymd         test(d)                 f4a0dt                 92
     C                   if        *in92 = *off
     C     *cymd         move      f4a0dt        wkisodate
     C                   move      wkisodate     shordt
     C                   endif
      *
      * Actual ship date
      *
     C     *cymd         test(d)                 f4gndt                 92
     C                   if        *in92 = *off                                 If good date
     C     *cymd         move      f4gndt        wkisodate
     C                   move      wkisodate     shacdt
     C                   endif                                                  If good date
      *
      *
      * Order/Item info
     C                   z-add     f4c4nb        shorno
     C                   z-add     f4dpnb        shseqno
     C                   z-add     f4uenb        shsecno
     C                   z-add     f4s5nb        shitcd
      *
      * TF Exempt Code and Description
     C                   move      f4iusx        shtfexcd
      *
     C                   select
     C                   when      shtfexcd = 'EC'
     C                   eval      shtfexds = 'Exempt Customer'
      *
     C                   when      shtfexcd = 'EP'
     C                   eval      shtfexds = 'Exempt Product'
      *
     C                   when      shtfexcd = 'NE'
     C                   eval      shtfexds = 'Not Exempt'
      *
     C                   when      shtfexcd = 'PC'
     C                   eval      shtfexds = 'PreCommencement'
     C                   endsl
      *
      * Affect Sales Dollars Flag
     C                   move      f4anst        shafamfl
      *
      * Billed quantity and weight are populated based on the yes/no value
      * in the OMS field 'affect sales pnds status'.
      *
     C                   move      f4vast        shaflbfl
     C                   select
     C                   when      f4vast = no
     C                   z-add     0             shshqt
     C                   z-add     0             shshwt
     C                   other
     C                   z-add     f4exqt        shshqt
     C                   z-add     f4bywg        shshwt
     C                   endsl
      *
      * Weights (ordered/scheduled)
      *
     C                   z-add     f4d0wg        shorwt
     C                   z-add     f4auwg        shscwt
      *
      * Quantities (ordered/scheduled)
      *
     C                   z-add     f4avqt        shorqt
     C                   z-add     f4ccqt        shscqt
      *
      * Amounts
     C                   z-add     f4ayva        shexam                             extended amount
     C                   z-add     f4uova        shbkam                             broker comm amt
     C                   z-add     f4kdva        shgram                             bill dtl gross
     C                   z-add     f4unva        shlaam                             ledgered accr am
     C                   z-add     f4d9pr        shnlaam                            non ledgered acc
     C                   z-add     f4ulva        shafam                             abs fgt
     C                   z-add     f4utva        shsoam                             std ovg
      *
      * Net FOB Amount = gross - ledgered accrual amt -  absorbed freight amt
      *
     C                   eval      shntam = shgram - shlaam - shafam
      *
      * Calculate Commodity Market Amount as:
      *       Price per CWT * Weight Billed
      *
     C                   call      'POS2XFR'
     C                   parm                    xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      f4agcd        xxuom
     C                   parm      f4s5nb        xxitem
     C                   parm      f4gndt        xxsynondt
     C                   parm      0             xxpr
      *
     C     xxpr          mult      f4bywg        shcmam
      *
      *
      * Prices/lb
     C                   if        shshwt <> 0                                  If weight
     C     shgram        div       shshwt        shgrlbpr                          gross
     C     shnlaam       div       shshwt        shnlalbpr                         nonledgered acc
     C     shlaam        div       shshwt        shlalbpr                          ledgered accrual
     C     shcmam        div       shshwt        shcmlbpr                          commodity mkt
     C     shafam        div       shshwt        shaflbpr                          abs fgt
     C     shntam        div       shshwt        shntlbpr                          net FOB
     C     shbkam        div       shshwt        shbklbpr                          broker comm
     C     shsoam        div       shshwt        shsolbpr                          std ovg
     C                   endif                                                If weight
      *
      *   Commodity Market
     C                   move      f4lqcd        shcmcd
      *
      *
      * Retrieve Billing Activity Type from OPBFCPL1-PD Order Header
      *
     C     key02         chain     opbfcpl1                           92
     C                   if        *in92 = *off
     C                   move      beobst        shbatype
      *
     C                   select
     C                   when      shbatype = '1'
     C                   eval      shbatypeds = 'Invoice'
      *
     C                   when      shbatype = '2'
     C                   eval      shbatypeds = 'Credit Memo'
      *
     C                   when      shbatype = '3'
     C                   eval      shbatypeds = 'Debit Memo'
      *
     C                   when      shbatype = '4'
     C                   eval      shbatypeds = 'Warehouse Transfer'
      *
     C                   when      shbatype = '5'
     C                   eval      shbatypeds = 'Miscellaneous'
      *
     C                   endsl
      *
     C                   endif
      *
      * Write record
     C                   write     shrec
     C                   clear                   shrec
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------
      * Determine whether the item is fresh or frozen
      *--------------------------------------------------------------------------------------
      *
     C     $fresh        begsr
      *
      * Make two attempts to determine fresh/frozen:
      *  1) check the 'sld fzn flag' in the Company/Item file
      *  2) if the item is not a frozen item, then
      *     Use the Warehouse Code from the OMS Sales History record to access
      *     the Warehouse file. Move the  'warehouse type' from the retrieved
      *     warehouse record to the fresh/frozen flag field.
      *
     C     key01         chain     cabzrel1                           92
     C                   if        *in92 = *off and                             If frozen
     C                             bzs4st = 'Y'
     C                   move      'FZ'          shfffl
     C                   else
      *
      * Check the Warehouse file
      *
     C     f4ajcd        chain     caadrel1                           92
     C                   if        *in92 = *off
     C                   move      adwpst        shfffl
     C                   endif
     C                   endif                                                  If frozen
      *
     C                   select
     C                   when      shfffl = *blank
      *
     C                   when      shfffl = 'FR'
     C                   eval      shffflds = 'Fresh'
      *
     C                   when      shfffl = 'FZ'
     C                   eval      shffflds = 'Frozen'
     C                   other
      *
     C                   eval      shffflds = 'Unknown'
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    f4aic3
     C                   kfld                    f4s5nb
      *
     C     key02         klist
     C                   kfld                    f4aic3
     C                   kfld                    f4c4nb
      *
      * We will never send data prior to January 1, 2006.
      *
     C                   z-add     1060101       wkdt
      *
     C                   endsr
      /EJECT
