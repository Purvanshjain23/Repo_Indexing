      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP965
      * TITLE:       Purge Edits for Closed Groups
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     05/21/97
      *
      * FUNCTION:    If a group passes all purge edits, the system-assigned Hog
      *              Group number is written to a workfile. The workfile then becomes
      *              the input for Program HP966 which actually Purges/Deletes the data.
      /EJECT
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 02/15/08  LeAnne Ramsey
      *           In anticipation of purging, reviewed/cleaned up code.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034j   if   e           k disk
      *  Hog Group (LF selects Closed/Voided groups)
      *
      *
     Fhsl034d   if   e           k disk    rename(hgrec:hgrecd)
      *  Hog group
      *
      *
     Fhsl037a   if   e           k disk
      *  Feed ticket header
      *
      *
     Fhsp038    if   e           k disk
      *  Feed ticket detail
      *
      *
     Fhsl038e   if   e           k disk    rename(fdrec:fdrece)
      *  Feed ticket detail
      *
      *
     Fhsp048    if   e           k disk
      *  Expense ticket
      *
      *
     Fhsl048b   if   e           k disk    rename(xtrec:xtrecb)
      *  Expense ticket
      *
      *
     Fhsl058d   if   e           k disk
      *  Movement event
      *
      *
     Fhsp064    if   e           k disk
      *  Check detail
      *
      *
     Fhsl064i   if   e           k disk    rename(cdrec:cdreci)
      *  Check detail
      *
      *
     Fhsl068d   if   e           k disk
      *  Killed/Dead hogs
      *
      *
     Fhsl069a   if   e           k disk
      *  Inventory adjustments
      *
      *
     Fhsp074    if   e           k disk
      *  Transfer header
      *
      *
     Fhsp075    if   e           k disk
      *  Transfer detail
      *
      *
     Fhsp084    if   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    if   e           k disk
      *  Sales movement detail
      *
      *
     Fhsl085b   if   e           k disk    rename(sgrec:sgrecb)
      *  Sales movement detail
      *
      *
     Fhsl118b   if   e           k disk
      *  Cost movements: costed movements
      *
      *
     Fhsl118c   if   e           k disk    rename(cmrec:cmrecc)
      *  Cost movements: costed movements
      *
      *
     Fhsl120b   if   e           k disk
      *  Cost movements: expense codes
      *
      *
     Fhsl120c   if   e           k disk    rename(cxrec:cxrecc)
      *  Cost movements: expense codes
      *
      *
     Fhsp364    uf a e           k disk
      *  Workfile of groups associated with purge groups
      *
      *
     Fhsp365    uf a e           k disk
      *  Workfile of purge groups
      *
      *
     Fhsl365a   if   e           k disk    rename(wgrec:wgreca)
      *  Workfile of purge groups
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Save/Control fields
      *
     d purgfl          s              1    inz('Y')
      *
     d svrtno          s                   like(fdrtno)
     d svfmbo          s                   like(fdfmbo)
     d svtrcd          s                   like(fdtrcd)
     d svtkno          s                   like(fdtkno)
      *
     d svhgsn          s                   like(hghgsn)
     d svhgcd          s                   like(hghgcd)
     d svgscd          s                   like(hggscd)
     d svcldt          s                   like(hgcldt)
      *
     d svxtsn          s                   like(xtxtsn)
      *
     d svchdt          s                   like(cdchdt)
     d svcvno          s                   like(cdcvno)
     d svchno          s                   like(cdchno)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  lddt                   1      8  0
     D  ldyr                   9     12  0
     D  ldpe                  13     14  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************************************
      * Mainline
      ****************************************************************************************
      *
      * Process each Closed/Voided Hog Group
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsl034j                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      yes           purgfl
     C                   z-add     hghgsn        svhgsn
     C                   move      hghgcd        svhgcd
     C                   move      hggscd        svgscd
     C                   z-add     hghgsn        wphgsn
      *
      *
      * For Voided Groups, the Void Date must be on/before the Purge Date
      *
     C                   select
     C                   when      hggscd = 'VD' and hgvddt > lddt
     C                   move      no            purgfl
      *
      * For Closed Groups, the Closed Date must be on/before the Purge Date
      *
     C                   when      hggscd = 'CL' and hgcldt > lddt
     C                   move      no            purgfl
      *
      *
      * For each Closed Group with a Closed Date that is on/before the Purge Date,
      * perform Purge edits for:
      *     Feed tickets
      *     Expense tickets
      *     Movements:
      *         Inventory adjustments
      *         Daily deads
      *         Transfer movements
      *         Sales movements
      *     Checks
      *
     C                   when      hggscd = 'CL'
     C                   exsr      $feed
      *
     C                   if        purgfl = yes
     C                   exsr      $exp
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $adj
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $dead
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $tran
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $sale
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $check
     C                   endif
      *
     C                   if        purgfl = yes
     C                   exsr      $costs
     C                   endif
     C                   endsl
      *
      * If the Group passed all the edits, then write it to the workfile.
      *
     C                   if        purgfl = yes
     C                   z-add     svhgsn        wghgsn
     C                   movel     svhgcd        wghgcd
     C                   movel     svgscd        wggscd
     C                   write     wgrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * Clean up the purge groups
      *
     C                   exsr      $clean
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Feed Tickets
      *--------------------------------------------------------------------------------------
      *
      * To pass the Feed Ticket edits:
      *    1) The Feed Ticket must have a Status of Posted to Period End.
      *    2) All Pickup and Adjustment Tickets referencing a Delivery Ticket must
      *       have a Status of Posted to Period End.
      *    3) All other Hog Groups on a Ticket must be Closed/Voided with Closed/Voided
      *       Dates on/before the Purge Date.
      *
      *
     C     $feed         begsr
      *
     C     svhgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on or purgfl = no                   Do feed
     C     svhgsn        reade     hsl038e                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Check status of all tickets with this Reference Ticket Number
      *
     C                   exsr      $feedref
      *
      * Check status of all Groups on this ticket
      *
     C                   if        purgfl = yes
     C                   movel     fdfmbo        svfmbo
     C                   z-add     fdtkno        svtkno
     C                   movel     fdtrcd        svtrcd
     C                   exsr      $feedgrp
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do feed
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Check Status of all tickets for the Feed Reference Ticket
      *---------------------------------------------------------------------------------------
      *
      * A Delivery Feed Ticket may be referenced by 'PICKUP' or 'ADJUSTMENT' Tickets.
      * All of the tickets must have a status of Posted to Period End.
      *
     C     $feedref      begsr
      *
     C     key01         setll     hsl037a
      *
     C                   dou       *in93 = *on or purgfl = no                   Do references
     C     key01         reade     hsl037a                                93
     C                   if        *in93 = *off and fhtscd <> 'PP'              If not posted
     C                   move      no            purgfl
     C                   endif                                                  If not posted
     C                   enddo                                                  Do references
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------------
      * Check the Status of all Groups on the Feed Ticket
      *------------------------------------------------------------------------------------------
      *
      * All Groups (other than BGF groups) on the Feed Ticket must be:
      *  A) Closed with a Closed Date on/before the Purge Date, or
      *  B) Voided with a Void Date on/before the Purge date
      *
     C     $feedgrp      begsr
      *
     C     key02         setll     hsp038
      *
     C                   dou       *in93 = *on or purgfl = no                   Do feed groups
     C     key02         reade     hsp038                                 93
     C                   if        *in93 = *off and svhgsn <> fdhgsn            If not EOF
      *
     C     fdhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If not BGF
      *
     C                   select
     C                   when      hggscd <> 'CL' and hggscd <> 'VD'
     C                   move      no            purgfl
      *
     C                   when      hggscd = 'CL' and hgcldt > lddt
     C                   move      no            purgfl
      *
     C                   when      hggscd = 'VD' and hgvddt > lddt
     C                   move      no            purgfl
     C                   other
      *
      * Write the record for the associated Hog Group
      *
     C                   z-add     fdhgsn        wpashg
     C                   write     wprec
     C                   endsl
      *
     C                   endif                                                  If not BGF
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do feed groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Process all Expense records for a Group
      *---------------------------------------------------------------------------------------
      *
      * To pass the Expense Ticket edits:
      *    1) The Ticket must have a Status of Posted to Period End.
      *    2) All other Hog Groups on a Ticket must be Closed/Voided with
      *       Closed/Voided Dates on/before the Purge Date.
      *
     C     $exp          begsr
      *
     C     svhgsn        setll     hsl048b
      *
     C                   dou       *in91 = *on                                  Do expenses
     C     svhgsn        reade     hsl048b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      xtxscd <> 'PP'
     C                   move      no            purgfl
     C                   other
      *
     C                   z-add     xtxtsn        svxtsn
     C                   exsr      $expgrp
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do expenses
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Check the Status of all Groups on the Expense Ticket
      *--------------------------------------------------------------------------------------
      *
      * Expense Tickets may be allocated to multiple groups.
      * All Groups on a Ticket must be Closed with a Closed Date on/before the Purge Date.
      * (except BGF groups which are never closed.)
      *
     C     $expgrp       begsr
      *
     C     svxtsn        setll     hsp048
      *
     C                   dou       *in93 = *on or purgfl = no                   Do exp groups
     C     svxtsn        reade     hsp048                                 93
     C                   if        *in93 = *off and svhgsn <> xthgsn            If not EOF
      *
     C     xthgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If group hit
      *
     C                   select
     C                   when      hggscd <> 'CL' and hggscd <> 'VD'
     C                   move      no            purgfl
      *
     C                   when      hggscd = 'CL' and hgcldt > lddt
     C                   move      no            purgfl
      *
     C                   when      hggscd = 'VD' and hgvddt > lddt
     C                   move      no            purgfl
     C                   other
      *
      * Write the record for the associated Hog Group
      *
     C                   z-add     xthgsn        wpashg
     C                   write     wprec
     C                   endsl
     C                   endif                                                  If group hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do exp groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Process all Inventory Adjustments for a Group
      *---------------------------------------------------------------------------------------
      *
      * All Adjustment Movements must have a status of Posted to Period End
      *
     C     $adj          begsr
      *
     C     svhgsn        setll     hsl069a
      *
     C                   dou       *in91 = *on                                  Do adjusts
     C     svhgsn        reade     hsl069a                                91
     C                   if        *in91 = *off and iamscd <> 'PP'              If not EOF
     C                   move      no            purgfl
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do adjusts
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process all Killed/Dead Hogs for a Group
      *--------------------------------------------------------------------------------------
      *
      * All Killed/Dead movements must have a Status of Posted to Period End.
      *
     C     $dead         begsr
      *
     C     svhgsn        setll     hsl068d
      *
     C                   dou       *in91 = *on                                  Do deads
     C     svhgsn        reade     hsl068d                                91
     C                   if        *in91 = *off and kdmscd <> 'PP'              If not posted
     C                   move      no            purgfl
     C                   endif                                                  If not posted
     C                   enddo                                                  Do deads
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Process all Transfer Movements for a Group
      *---------------------------------------------------------------------------------------
      *
      * To pass the Transfer Movement edits:
      *    1) The Movement must have a status of Posted to Period End
      *    2) All other Hog Groups on the Movement (except BGF Groups which are never closed),
      *       must be Closed with a Closed Date on/before the Purge Date.
      *
     C     $tran         begsr
      *
      * Read/process all Transfer Movements for this Group from the Movement
      * Event file.
      *
     C     svhgsn        setll     hsl058d
      *
     C                   dou       *in91 = *on                                  Do events
     C     svhgsn        reade     hsl058d                                91
     C                   if        *in91 = *off and memtcd = 'T'                If transfer
      *
      * Movement Status must be posted
      *
     C     memvsn        chain     hsp074                             92
     C                   select
     C                   when      *in92 = *on
      *
     C                   when      mhmscd <> 'PP'
     C                   move      no            purgfl
     C                   other
      *
     C                   exsr      $trangrp
     C                   endsl
      *
     C                   endif                                                  If transfer
     C                   enddo                                                  Do events
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Check Status of all Groups on the Transfer Movement
      *---------------------------------------------------------------------------------------
      *
      * All other Hog Groups on a Transfer Movement (except BGF Groups which are never
      * Closed) must be Closed with a Closed Date on/before the Purge Date.
      *
     C     $trangrp      begsr
      *
     C     mhmvsn        setll     hsp075
      *
     C                   dou       *in93 = *on or purgfl = no                   Do tran groups
     C     mhmvsn        reade     hsp075                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
      * Origin Group
     C                   if        svhgsn <> mdorsn                             If origin
     C     mdorsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If don't purge
     C                   move      no            purgfl
     C                   else
      *
      *           Write the record for the associated Hog Group
      *
     C                   z-add     mdorsn        wpashg
     C                   write     wprec
     C                   endif                                                  If don't purge
     C                   endif                                                  If hit
     C                   endif                                                  If origin
      *
      * Destination Group
      *
     C                   if        svhgsn <> mddnsn                             If destination
     C     mddnsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If not closed
     C                   move      no            purgfl
     C                   else
      *
      *       Write the record for the associated Hog Group
      *
     C                   z-add     mddnsn        wpashg
     C                   write     wprec
     C                   endif                                                  If not closed
     C                   endif                                                  If hit
     C                   endif                                                  If destination
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do tran groups
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Process all Sales Movements for a Group
      *----------------------------------------------------------------------------------------
      *
      * To pass the Sales Movement edits,
      *    1) The Movement must have a Status of Posted to Period End.
      *    2) All other Hog Groups on the Movemnet must be Closed with a Closed
      *       Date on/before the Purge Date.
      *
     C     $sale         begsr
      *
     C     svhgsn        setll     hsl085b
      *
     C                   dou       *in91 = *on or purgfl = no                   Do sales
     C     svhgsn        reade     hsl085b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Check Status of Sales Movement
      *
     C     sgmvsn        chain     hsp084                             92
     C                   select
     C                   when      *in92 = *on
      *
     C                   when      shmscd <> 'PP'
     C                   move      no            purgfl
     C                   other
      *
     C                   exsr      $salegrp
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Check Status of all Groups on a Sales Movement
      *-------------------------------------------------------------------------------------
      *
      * All Groups on the Sales Movement must be Closed with a Closed Date on/before
      * the Purge Date.
      *
     C     $salegrp      begsr
      *
     C     shmvsn        setll     hsp085
      *
     C                   dou       *in93 = *on or purgfl = no                   Do sales groups
     C     shmvsn        reade     hsp085                                 93
     C                   if        *in93 = *off                                 If not EOF
      *
     C                   if        svhgsn <> sghgsn                             If different
     C     sghgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If group hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If not OK
     C                   movel     no            purgfl
     C                   else
      *
      * Write the reocrd for the associated hog group
      *
     C                   z-add     sghgsn        wpashg
     C                   write     wprec
     C                   endif                                                  If not OK
     C                   endif                                                  If group hit
     C                   endif                                                  If different
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sales groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Process all Check Detail records for a Group
      *---------------------------------------------------------------------------------------
      *
      * To pass the Check edits:
      *    1) All other Hog Groups on a Check (that are not BGF Groups),
      *       must be Closed with a Closed Date on/before the Purge Date.
      *
     C     $check        begsr
      *
     C     svhgsn        setll     hsl064i
      *
     C                   dou       *in91 = *on or purgfl = no                   Do check detail
     C     svhgsn        reade     hsl064i                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   z-add     cdchdt        svchdt
     C                   z-add     cdcvno        svcvno
     C                   z-add     cdchno        svchno
      *
      * Retrieve all Check Detail records for this check
      *
     C                   exsr      $checkgrp
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do check detail
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Check Status of all Groups on the Check
      *----------------------------------------------------------------------------------------
      *
      * All Groups on the chekc (except BGF groups) must be closed with a Closed Date
      * on/before the Purge Date.
      *
     C     $checkgrp     begsr
      *
     C     key03         setll     hsp064
      *
     C                   dou       *in93 = *on or purgfl = no                   Do check groups
     C     key03         reade     hsp064                                 93
      *
     C                   if        *in93 = *off and svhgsn <> cdhgsn            If not EOF
     C     cdhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If not BGF
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If not oK
     C                   move      no            purgfl
     C                   else
      *
      * Write the record for the associated Hog Group
      *
     C                   z-add     cdhgsn        wpashg
     C                   write     wprec
     C                   endif                                                  If not ok
     C                   endif                                                  If not BGF
     C                   endif                                                  If note EOF
      *
     C                   enddo                                                  Do chekc groups
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Costed Movements
      *---------------------------------------------------------------------------------------
      *
     C     $costs        begsr
      *
      * Costed Movements keyed by Origin Group
      *
     C     svhgsn        setll     hsl118b
      *
     C                   dou       *in91 = *on or purgfl = no                   Do origin
     C     svhgsn        reade     hsl118b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     cmdnhgsn      chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If don't purge
     C                   move      no            purgfl
     C                   else
      *
      *           Write the record for the associated Hog Group
      *
     C                   z-add     cmdnhgsn      wpashg
     C                   write     wprec
     C                   endif                                                  If don't purge
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do origin
      *
      *
      * Costed Movements keyed by Destination Group
      *
     C     svhgsn        setll     hsl118c
      *
     C                   dou       *in91 = *on or purgfl = no                   Do destination
     C     svhgsn        reade     hsl118c                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     cmorhgsn      chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If don't purge
     C                   move      no            purgfl
     C                   else
      *
      *           Write the record for the associated Hog Group
      *
     C                   z-add     cmdnhgsn      wpashg
     C                   write     wprec
     C                   endif                                                  If don't purge
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do destination
      *
      *
      * Costed Movements: Expense Code keyed by Origin Group
      *
     C     svhgsn        setll     hsl120b
      *
     C                   dou       *in91 = *on or purgfl = no                   Do origin
     C     svhgsn        reade     hsl120b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     cxdnhgsn      chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If don't purge
     C                   move      no            purgfl
     C                   else
      *
      *           Write the record for the associated Hog Group
      *
     C                   z-add     cxdnhgsn      wpashg
     C                   write     wprec
     C                   endif                                                  If don't purge
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do origin
      *
      *
      * Costed Movements: Expense Codes keyed by Destination Group
      *
     C     svhgsn        setll     hsl120c
      *
     C                   dou       *in91 = *on or purgfl = no                   Do destination
     C     svhgsn        reade     hsl120c                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     cxorhgsn      chain     hsl034d                            92
     C                   if        *in92 = *off and hgppcd <> 'BGF  '           If hit
      *
     C                   if        hggscd <> 'CL' or hgcldt > lddt              If don't purge
     C                   move      no            purgfl
     C                   else
      *
      *           Write the record for the associated Hog Group
      *
     C                   z-add     cxdnhgsn      wpashg
     C                   write     wprec
     C                   endif                                                  If don't purge
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do destination
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Clean up the Purge Groups
      *---------------------------------------------------------------------------------------
      *
      * Read all the Groups that have been OK'd for purging.  For each group,
      * check all of the associated groups for their purge eligibility. If any
      * associated group is not in the purge file, then delete the Purge Group.
      *
     C     $clean        begsr
      *
     C     *loval        setll     hsp365
      *
     C                   dou       *in90 = *on                                  Do clean
     C                   read      hsp365                                 90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      yes           purgfl
     C                   z-add     wghgsn        svhgsn
      *
     C     svhgsn        setll     hsp364
     C                   dou       *in91 = *on or purgfl = no                   Do associated
     C     svhgsn        reade(n)  hsp364                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     wpashg        chain     hsl365a                            92
     C                   if        *in92 = *on
     C                   move      no            purgfl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do Associated
      *
     C                   if        purgfl = no
     C                   delete    wgrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do clean
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   None
      *
      * Key fields
      *
     C     key01         klist
     C                   kfld                    fdfmbo
     C                   kfld                    fdrtno
      *
     C     key02         klist
     C                   kfld                    svfmbo
     C                   kfld                    svtkno
     C                   kfld                    svtrcd
      *
     C     key03         klist
     C                   kfld                    svchdt
     C                   kfld                    svcvno
     C                   kfld                    svchno
      *
     C                   endsr
      /EJECT
