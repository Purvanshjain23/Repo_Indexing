/***************************************************************** */
/*                                                                 */
/*  PROGRAM NUMBER:  PWHOUPC                                       */
/*  PROGRAM NAME:    Backup Data files for a Repayment             */
/*  PROGRAMMER:      Brad Baden                                    */
/*  CREATE DATE:     10/31/2018                                    */
/*                                                                 */
/*  FUNCTION:        This CL program backs up the data files that  */
/*                   are changed during a repayment.  The file     */
/*                   names of the backed up files are in the       */
/*                   format of ffffllmmdd.                         */
/*                   ffff = first 4 characters of the file name    */
/*                   ll   = location initials (GU, ST, or TF)      */
/*                   mm   = month                                  */
/*                   dd   = day                                    */
/*                                                                 */
/*                   This program is called from the Backup Files  */
/*                   for a Repayment screen PWHEPVR.  The From     */
/*                   and To library names, file suffix, and the    */
/*                   current date are passed into this program.    */
/*                                                                 */
/*                   The files backed up are:                      */
/*                   PKAWCPP - Buy Order                           */
/*                   PKAXCPP - Buy Order Load                      */
/*                   PKA1CPP - Tattoo Header                       */
/*                   PKA2CPP - Tattoo Detail                       */
/*                   PKCDCPP - Tattoo Ded/Add                      */
/*                   PKDNCPP - Tattoo Header EXT                   */
/*                   PKB3CPP - Tattoo Scale Ticket                 */
/*                   PKB1CPP - Carcass Detail                      */
/*                                                                 */
/*******************************************************************/
/*  Modification History                                           */
/*                                                                 */
/*  12/10/2018 JBB Fixed $COPY subroutine.  The CPYF statement had */
/*    E14217       file PKAWCPP hardcoded as the &FROMFILE.        */
/*                 Changed PKAWCPP to &PRODFILE.  Also added the   */
/*                 RGZPFM command after the file is copied to      */
/*                 remove any deleted records.                     */
/*                                                                 */
/*  12/20/2018 JBB Add data area DAREPAYBU.  Lock data area at the */
/*    E14234       beginning of this program.  Unlock at the end   */
/*                 of this program.                                */
/*                                                                 */
/*   9/06/2019 JBB Add the Tattoo Scale Ticket file PKB3CPP to the */
/*    E15428       backup process.                                 */
/*                                                                 */
/*******************************************************************/
             PGM        PARM(&COMPANY &LIBFROM &LIBTO &SUFFIX &JOBDATE)

             DCL        VAR(&COMPANY)  TYPE(*DEC)  LEN(3 0)
             DCL        VAR(&LIBFROM)  TYPE(*CHAR) LEN(10)
             DCL        VAR(&LIBTO)    TYPE(*CHAR) LEN(10)
             DCL        VAR(&SUFFIX)   TYPE(*CHAR) LEN(6)
             DCL        VAR(&JOBDATE)  TYPE(*DEC)  LEN(7 0)

             DCL        VAR(&RETURN)   TYPE(*CHAR) LEN(7)
             DCL        VAR(&PRODFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SAVEFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SVFILENM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ERROR)    TYPE(*CHAR) LEN(1)
             DCL        VAR(&DATEA)    TYPE(*CHAR) LEN(7)
             DCL        VAR(&SYSVALA)  TYPE(*CHAR) LEN(40)
             DCL        VAR(&CMPVALCD) TYPE(*CHAR) LEN(10) +
                          VALUE(HPEREPAYBU)

/* Convert current date to alpha value */
             CHGVAR     VAR(&DATEA) VALUE(&JOBDATE)

/* Backup PKAWCPP - Buy Order */
             CHGVAR     VAR(&SVFILENM) VALUE('PKAWCPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKAWCPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKAW' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKAXCPP - Buy Order Load */
             CHGVAR     VAR(&SVFILENM) VALUE('PKAXCPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKAXCPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKAX' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKA1CPP - Tattoo Header */
             CHGVAR     VAR(&SVFILENM) VALUE('PKA1CPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKA1CPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKA1' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKA2CPP - Tattoo Detail */
             CHGVAR     VAR(&SVFILENM) VALUE('PKA2CPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKA2CPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKA2' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKDNCPP - Tattoo Header EXT */
             CHGVAR     VAR(&SVFILENM) VALUE('PKDNCPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKDNCPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKDN' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKCDCPP - Tattoo Ded/Add */
             CHGVAR     VAR(&SVFILENM) VALUE('PKCDCPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKCDCPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKCD' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKB1CPP - Carcass Detail */
             CHGVAR     VAR(&SVFILENM) VALUE('PKB1CPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKB1CPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKB1' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKB3CPP - Tattoo Scale Ticket */
             IF         COND(&COMPANY *EQ 360) THEN(DO)

             CHGVAR     VAR(&SVFILENM) VALUE('PKB3CPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKB3CPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKB3' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

/* Backup PKEJCPP - Buy Order Load Weight */
             CHGVAR     VAR(&SVFILENM) VALUE('PKEJCPP   ')
             CHGVAR     VAR(&SYSVALA) VALUE('P' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             CHGVAR     VAR(&PRODFILE) VALUE('PKEJCPP   ')
             CHGVAR     VAR(&SAVEFILE) VALUE('PKEJ' *CAT +
                          &SUFFIX)
             CALLSUBR   SUBR($COPY)
             IF         COND(&ERROR *EQ 'Y') THEN(GOTO CMDLBL(ENDIT))

             ENDDO

/* Update data area for completion */
             IF         COND(&ERROR *NE 'Y') THEN(DO)
             CHGVAR     VAR(&SYSVALA) VALUE('C' *TCAT &DATEA *TCAT +
                          '          ')
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)
             ENDDO

ENDIT:       IF         COND(&ERROR *EQ 'Y') THEN(DO)
             CHGVAR     VAR(&SYSVALA) VALUE('C' *TCAT &DATEA *TCAT +
                          &SVFILENM)
             CALL       PGM(PUKMXFR) PARM(&RETURN &COMPANY &CMPVALCD +
                          &SYSVALA)

             SNDUSRMSG  MSG('Backup of data files for Repayment +
                          failed.  Check job log for job REPAYBAKUP +
                          for reason.')
             ENDDO

/*********************************************************************/
/*** SUBROUTINE $COPY - Use CRTDUPOBJ or CPYF to Backup Data Files ***/
/*********************************************************************/
             SUBR       SUBR($COPY)

             CHGVAR     VAR(&ERROR) VALUE('N')

/* Check if object already exists.  If it does, delete it.  */
             CHKOBJ     OBJ(&LIBTO/&SAVEFILE) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             GOTO       CMDLBL(CREATE)
             ENDDO
             DLTF       FILE(&LIBTO/&SAVEFILE)

CREATE:      CRTDUPOBJ  OBJ(&PRODFILE) FROMLIB(&LIBFROM) +
                          OBJTYPE(*FILE) TOLIB(&LIBTO) +
                          NEWOBJ(&SAVEFILE) DATA(*YES)

             /* File allocated */
             MONMSG     MSGID(CPF5729 CPF2130) EXEC(DO)
             CPYF       FROMFILE(&LIBFROM/&PRODFILE) +
                          TOFILE(&LIBTO/&SAVEFILE) MBROPT(*ADD) +
                          CRTFILE(*YES)
             ENDDO

             /* Not authorized */
             MONMSG     MSGID(CPF2189)

/* Check if object created */
             CHKOBJ     OBJ(&LIBTO/&SAVEFILE) OBJTYPE(*FILE)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             CHGVAR     VAR(&ERROR) VALUE('Y')
             ENDDO

/* If no errors, reorganize physical file to remove deleted records */
             IF         COND(&ERROR *NE 'Y') THEN(DO)
             RGZPFM     FILE(&LIBTO/&SAVEFILE)
             ENDDO

             ENDSUBR
/*********************************************************************/

             ENDPGM
