      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP449
      * TITLE:       SPECIFY POST OF EXPENSE EDIT FILE TO HPS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     01/05/98
      *
      * FUNCTION:    SUBMITS THE POST OF THE EXPENSE INTERFACE
      *              INTO HPS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/02/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 08/22/01  LeAnne Fedor
      *           Recompile only.
      *
      * 10/05/07  LeAnne Ramsey
      *           We had a new user that kept getting the file-in-use message. The
      *           problem was that he took F8=Submit and then stayed on the submit
      *           screen. Staying on the screen kept file HSP231 open and the CL could
      *           not get an Exclusive lock on the file. Apparently, this has been a
      *           problem since 2001 that the users have worked around by taking F8
      *           followed immediately by F3 to exit the screen. I changed this program
      *           to exit after F8 returning the user to the menu.
      *
      * 03/02/16  Barb Gutierrez
      *           Added HSL009b to retrieve business office based on company being
      *           processed in HSP231 to use to populate lda. (E5290)
      * 04/05/16  Barb Gutierrez
      *           Corrected problem of picking up the wrong business office out of
      *           hsl009b.  Need to pick up the business office where division
      *           is "LIVE".  (E5290)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD449    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
     FHSP061    IF   E           K DISK
      *  CONTROL FILE: EXPENSE INTERFACE FROM G/L TO HPS
      *
     FHSL009B   IF   E           K DISK
      *  Business Office file Keyed by BOBOCD
      *
     FHSP231    IF   E           K DISK
      *    EDIT FILE FOR G/L TO HPS EXPENSE INTERFACE
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER' WHICH HOLDS
      *  THE "CURRENT" ACCOUNTING PERIOD
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      *---------------------------------------------------------------
      *  LDA - REPORT OPTIONS
      *---------------------------------------------------------------
      *
     D LDA            UDS
      *
     D  LDBPDT                 1     08  0
     D  LDEPDT                 9     16  0
     D  LDPER                 17     18  0
     D  LDCCYY                19     22  0
     D  LDCOCD                23     25
     D  LDBOBO                26     30
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP449K1
     C                   WRITE     HP449EC
     C                   EXFMT     HP449R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'UTWRKSPL'
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VALIDATE THAT DATA EXISTS IN THE EDIT FILE
      *
     C     *LOVAL        SETLL     HSP231
     C                   READ      HSP231                                 92
     C     *IN92         IFEQ      *ON                                          IF NO DATA
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00872'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * CHECK INTERFACE STATUS
      *
     C                   EXSR      $ISCD
      *
      * COMPARE YEAR/PERIOD OF EDIT DATA WITH CURRENTLY OPEN YEAR/PERIOD
      *
     C                   EXSR      $PER
     C                   ENDIF                                                  IF NO DATA
      *
      * This function cannot be run in the night job queue. Issue message if
      * user has elected to run this function at night.
      *
     C                   if        xxnite = yes
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09133'     MGID(E)
     C                   ENDIF
     C                   endif
      *
      *
      * IF THERE ARE NO ERRORS AND THE USER HAS TAKEN F8=SUBMIT, SUBMIT AND EXIT.
      *
     C                   if        error = *zero and *in08 = *on
     C                   exsr      $proc1
     C                   movel     exit          routne
     C                   else
     C                   movel     scrn1         routne
     C                   endif
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ISCD - CHECK INTERFACE STATUS CODE
      *---------------------------------------------------------------
      *
     C     $ISCD         BEGSR
      *
     C     KEY01         CHAIN     HSP061                             92
     C                   SELECT
      *
     C     *IN92         WHENEQ    *ON
      *
      * THE INITIAL COPY OF DATA FROM THE G/L SYSTEM TO HPS
      * HAS BEEN SUBMITTED BUT HAS NOT COMPLETED.
      *
     C     EIISCD        WHENEQ    'S'
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00873'     MGID(E)
     C                   ENDIF
      *
      * THE 'POSTING' FUNCTION HAS BEEN SUBMITTED
      *
     C     EIISCD        WHENEQ    'P'
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00874'     MGID(E)
     C                   ENDIF
      *
      * THE INTERFACE FOR THIS YEAR/PERIOD HAS BEEN COMPLETED
      *
     C     EIISCD        WHENEQ    'C'
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00875'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PER - VALIDATE CURRENTLY OPEN PERIOD
      *---------------------------------------------------------------
      *
     C     $PER          BEGSR
      *
      * BRING IN THE DATA AREA THAT HOLDS THE CURRENTLY OPEN
      * ACCOUNTING PERIOD.
      *
     C     *DTAARA       DEFINE                  DAAPER
     C                   IN        DAAPER
      *
      * CHECK THE YEAR/PERIOD IN THE INTERFACE CONTROL FILE
      * WITH THE OPEN YEAR/PERIOD IN THE HPS DATA AREA.
      *
     C     EEACYR        IFNE      DACCYY
     C     EEACPE        ORNE      DAPER
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00878'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     EEACYR        XXYEAR
     C                   MOVEA     XXYEAR        MGW(1)
     C                   MOVEL     EEACPE        XXPER
     C                   MOVEA     XXPER         MGW(5)
     C                   MOVEL     DAPER         XXPER
     C                   MOVEA     XXPER         MGW(7)
     C                   MOVEL     DACCYY        XXYEAR
     C                   MOVEA     XXYEAR        MGW(9)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVE      *BLANK        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      * UPDATE THE INTERFACE CONTROL FILE WITH A
      * STATUS OF POSTING
      *
      *
     C                   CALL      'HP229'
     C                   PARM                    EICOCD
     C                   PARM                    EIACYR
     C                   PARM                    EIACPE
     C                   PARM      'P'           EIISCD
      *
      *
      * PLACE OPTIONS INTO LOCAL DATA AREA AND OUTPUT AREA
      *
     C                   MOVEL     EICOCD        LDCOCD
      *
      *
      * Retrieve 1st business office code based on company being processed and division = LIVE.
      *
     C     eicocd        setll     hsl009b
     C                   dou       *in92 = *on                                  Do loop
     C     eicocd        reade     hsl009b                                92
     C                   if        *in92 = *off and bodvcd = 'LIVE'
     C                   movel     bobobo        LDBOBO
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   Z-ADD     DABPDT        LDBPDT
     C                   Z-ADD     DAEPDT        LDEPDT
     C                   Z-ADD     DAPER         LDPER
     C                   Z-ADD     DACCYY        LDCCYY
      *
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
     C     KEY01         KLIST
     C                   KFLD                    EECOCD
     C                   KFLD                    EEACYR
     C                   KFLD                    EEACPE
      *
      * PARM LISTS
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   in        lda
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXYEAR            4
     C                   MOVE      *BLANK        XXPER             2
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  'HP449'       WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   SETON                                        99
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** QCMD TABLE
SBMJOB CMD(CALL PGM(HP449CL)) JOB(POSTEXHPS) JOBQ(__________)
