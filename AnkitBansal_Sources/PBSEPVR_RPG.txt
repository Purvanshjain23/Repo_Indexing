     H/TITLE Snd PFS Prd Sch Bt Hd PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJHIGH
     H* Date          : 10/01/15  Time  : 11:48:43
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPBSEPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Snd PFS Prd Sch Bt Hd PV  Prompt & validate record
      *
     FPBB2CPL1IF  E           K        DISK
      * RTV : PFS Prod Sched Batch Hdr  Retrieval index
      *
     FPBB2CPL0UF  E           K        DISK
      * UPD : PFS Prod Sched Batch Hdr  Update index
      *
      * Long constants
     E                    @CN#    1  01  6   @CN    25
      * Set wdw location allowed?
     E                    YSL         1  1
     E                    YDOW        7  1               *Days of week
     I@B2CPUP
      * PFS Prod Sched Batch Hdr  Update index
      * Renamed input format fields
     I              B2Y1NX                          WAY1NX
     I              B2ASD8                          WAASD8
     I              B2AOTS                          WAAOTS
     I              B2TVAA                          WATVAA
     I              B2B0SC                          WAB0SC
     I              B2ATD8                          WAATD8
     I              B2APTS                          WAAPTS
     I              B2UWSX                          WAUWSX
     I              B2UXSX                          WAUXSX
     I              B2V3SX                          WAV3SX
     I              B2AHNY                          WAAHNY
     I              B2AINY                          WAAINY
     I              B2AJNY                          WAAJNY
     I              B2AKNY                          WAAKNY
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPBB21    E DSPBB2CPL0
      * UPD : PFS Prod Sched Batch Hdr  Update index
      * Renamed input format fields
     I              B2Y1NX                          WAY1NX
     I              B2ASD8                          WAASD8
     I              B2AOTS                          WAAOTS
     I              B2TVAA                          WATVAA
     I              B2B0SC                          WAB0SC
     I              B2ATD8                          WAATD8
     I              B2APTS                          WAAPTS
     I              B2UWSX                          WAUWSX
     I              B2UXSX                          WAUXSX
     I              B2V3SX                          WAV3SX
     I              B2AHNY                          WAAHNY
     I              B2AINY                          WAAINY
     I              B2AJNY                          WAAJNY
     I              B2AKNY                          WAAKNY
      *
     IYARDCS      DS                             78
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: PFS Prod Sched Batch Hdr
      * I : MAP PFS Company Number
     I                                        1   30P1Y1NX
      * I : MAP PFS Batch Date
     I                                        4  110P1ASD8
      * I : MAP PFS Batch Time
     I                                       12  170P1AOTS
      * I : MAP PFS User ID
     I                                       18  27 P1TVAA
      * I : MAP PFS Baseline Schedule
     I                                       28  28 P1B0SC
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1Y1NX    PARM           WP0001  30       PFS Company Num
     C           P1ASD8    PARM           WP0002  80       PFS Batch Date
     C           P1AOTS    PARM           WP0003  60       PFS Batch Time
     C           P1TVAA    PARM           WP0004 10        PFS User ID
     C           P1B0SC    PARM           WP0005  1        PFS Baseline Sc
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Reposition window
     C   26                CAS            ZRRPWD
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
     C                     Z-ADD1         YWPNNO  10       Panel number
     C                     MOVEL'S'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
     C                     Z-ADD1         W0WASM  10
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
      * Convert PFS Change Date to YYYYMMDD
      * Rtv System Date *CYMD IF
      * LCL.*System timestamp = JOB.*System timestamp
     C                     EXSR XSTMS
     C                     MOVEL##TMS     YL0002           *System timesta
     C                     Z-ADD4         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00026
     C           ZQ        ORGT 00026
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0002:ZQ YL0003    P  90  Year USR
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00026
     C           ZQ        ORGT 00026
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0002:ZQ YL0004    P  90  Month USR
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD9         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00026
     C           ZQ        ORGT 00026
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0002:ZQ YL0005    P  90  Day USR
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           YL0003    CAT  YL0004:ZQ YL0006    P      Date (Char-8) U
     C                     Z-ADD0         ZQ      50
     C           YL0006    CAT  YL0005:ZQ YL0006    P      Date (Char-8) U
     C                     MOVE YL0006    YL0007           DATE
      *
     C                     Z-ADD*ZERO     WN0001  40       Year Code
     C                     Z-ADD*ZERO     WN0002  20       Month
     C                     Z-ADD*ZERO     WN0003  20       Day of Month US
     C                     MOVEL*BLANK    WN0004  4        Year Alpha (YYY
     C                     MOVEL*BLANK    WN0005  2        Month (Char) US
     C                     MOVEL*BLANK    WN0006  2        Day   (Char) US
     C                     Z-ADD*ZERO     WN0007  20       Year  NBR USR
     C                     MOVEL*BLANK    WN0008  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0009  7        Date (Alpha) US
      *
      * CVT *YYMD to *CYMD    IF
      * ** YEAR **
     C           YL0007    DIV  10000     WN0001           Year Code
     C                     Z-ADDWN0001    WN0007           Year  NBR USR
     C                     MOVELWN0007    WN0008           Year  (Char) US
      * ** MONTH **
     C           YL0007    DIV  100       WN0002           Month
     C                     MOVELWN0002    WN0005           Month (Char) US
      * ** DAY **
     C                     Z-ADDYL0007    WN0003           Day of Month US
     C                     MOVELWN0003    WN0006           Day   (Char) US
      * CENTURY+YEAR
      * CASE: PAR.Year Code is Twentieth Century
     C           WN0001    IFLE 1999                       *IF
     C                     Z-ADD0         ZQ      50
     C           '0'       CAT  WN0008:ZQ WN0009    P      Date (Alpha) US
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         ZQ      50
     C           '1'       CAT  WN0008:ZQ WN0009    P      Date (Alpha) US
     C                     END                             *FI
     C                     Z-ADD0         ZQ      50
     C           WN0009    CAT  WN0005:ZQ WN0009    P      Date (Alpha) US
     C                     Z-ADD0         ZQ      50
     C           WN0009    CAT  WN0006:ZQ WN0009    P      Date (Alpha) US
     C                     MOVE WN0009    YL0001           Date
      *
     C                     MOVEL*BLANK    WN0010  8        Date (Char-8) U
     C                     MOVEL*BLANK    WN0011  4        Year Alpha (YYY
     C                     MOVEL*BLANK    WN0012  2        Month (Char) US
     C                     MOVEL*BLANK    WN0013  2        Day   (Char) US
      *
      * CNV cyymmdd to yyyymmdd
      * LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
     C           YL0001    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0009
      * LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
     C           YL0001    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0010
      * LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
     C           YL0001    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0011
     C                     MOVEL*BLANK    WN0011           Year Alpha (YYY
     C                     MOVELYL0009    WN0011           Year Alpha (YYY
     C                     MOVELYL0010    WN0012           Month (Char) US
     C                     MOVELYL0011    WN0013           Day   (Char) US
     C                     Z-ADD0         ZQ      50
     C           WN0011    CAT  WN0012:ZQ WN0010    P      Date (Char-8) U
     C                     Z-ADD0         ZQ      50
     C           WN0010    CAT  WN0013:ZQ WN0010    P      Date (Char-8) U
     C                     MOVE WN0010    YL0008           Date Out (8,0)
      * Initialize PFS Prod Sched Batch Dtl fields
     C                     Z-ADD##JTM     YL0012           PFS Change time
      * Create PFS Prod Sched Batch Dtl records
      * Snd PFS Prd Sch Bt Dt XF - PFS Prod Sched Batch Dtl  * 
     C                     CALL 'PBSGXFR'              90  Snd PFS Prd Sch
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1Y1NX    WQ0001  30       PFS Company Num
     C                     PARM #1ASD8    WQ0002  80       PFS Batch Date
     C                     PARM #1AOTS    WQ0003  60       PFS Batch Time
     C                     PARM #1TVAA    WQ0004 10        PFS User ID
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBSGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Update PFS Prod Sched Batch Hdr is Ready to Send
      * Chg PFS Prd Sch Bt Hd RT - PFS Prod Sched Batch Hdr  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    P0RTN            *Return code
     C                     EXSR ZYEXPG
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     EXSR ZVCFPM
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLWR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVELP1B0SC    #1B0SC           PFS Baseline Sc
     C                     Z-ADD*ZERO     #1ATD8           PFS Batch Sent
     C                     Z-ADD*ZERO     #1APTS           PFS Batch Sent
     C                     MOVEL*BLANK    #1UWSX           PFS Record Stat
     C                     Z-ADD*ZERO     #1UXSX           PFS Process Sta
     C                     MOVEL*BLANK    #1V3SX           PFS Error Reaso
     C                     Z-ADD*ZERO     #1AHNY           PFS Create Date
     C                     Z-ADD*ZERO     #1AINY           PFS Create Time
     C                     Z-ADD*ZERO     #1AJNY           PFS Change Date
     C                     Z-ADD*ZERO     #1AKNY           PFS Change time
     C                     Z-ADDP1Y1NX    #1Y1NX           PFS Company Num
     C                     Z-ADDP1ASD8    #1ASD8           PFS Batch Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1ASD8
     C                     Z-ADDP1AOTS    #1AOTS           PFS Batch Time
     C                     MOVELP1TVAA    #1TVAA           PFS User ID
     C                     MOVEL*BLANK    #DCUSC           PFS Baseline Sc
      * USER: Load screen
      * CASE: PAR.PFS Baseline Schedule is Baseline
     C           P1B0SC    IFEQ 'B'                        *IF
     C                     MOVEL'Y'       #DCUSC           PFS Baseline Sc
     C                     ELSE
      * CASE: PAR.PFS Baseline Schedule is Not Baseline
     C           P1B0SC    IFEQ *BLANK                     *IF
     C                     MOVEL'N'       #DCUSC           PFS Baseline Sc
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert PFS Batch Date to display format
      * Convert date
     C                     Z-ADD#1ASD8    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    V1ASD8
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Chg PFS Prd Sch Bt Hd RT - PFS Prod Sched Batch Hdr  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           B2Y1NX           PFS Company Num
     C                     KFLD           B2ASD8           PFS Batch Date
     C                     KFLD           B2AOTS           PFS Batch Time
     C                     KFLD           B2TVAA           PFS User ID
      * Setup key
     C                     Z-ADD#1Y1NX    B2Y1NX           PFS Company Num
     C                     Z-ADD#1ASD8    B2ASD8           PFS Batch Date
     C                     Z-ADD#1AOTS    B2AOTS           PFS Batch Time
     C                     MOVEL#1TVAA    B2TVAA           PFS User ID
      * Establish starting position
     C           KRSSA     CHAIN@B2CPUQ              90    *
      * Data record not found
     C   90                MOVEL'USR4806' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Chg PFS Prd Sch Bt Hd CH - PFS Prod Sched Batch Hdr  * 
     C                     EXSR SBCHRC
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCHRC    BEGSR
      *================================================================
      * Chg PFS Prd Sch Bt Hd CH - PFS Prod Sched Batch Hdr  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @B2CPUP
     C                     Z-ADDB2Y1NX    WAY1NX           PFS Company Num
     C                     Z-ADDB2ASD8    WAASD8           PFS Batch Date
     C                     Z-ADDB2AOTS    WAAOTS           PFS Batch Time
     C                     MOVELB2TVAA    WATVAA    P      PFS User ID
      *
     C           KLCHSB    KLIST
     C                     KFLD           WAY1NX           PFS Company Num
     C                     KFLD           WAASD8           PFS Batch Date
     C                     KFLD           WAAOTS           PFS Batch Time
     C                     KFLD           WATVAA           PFS User ID
     C           KLCHSB    CHAIN@B2CPUP              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PBB2CPL0'MDACP
     C                     MOVEL'@B2CPUP' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPBB21    YARDCS
      * Move non-key fields to @B2CPUP
     C                     MOVELB2B0SC    WAB0SC    P      PFS Baseline Sc
     C                     Z-ADD*ZERO     WAATD8           PFS Batch Sent
     C                     Z-ADD*ZERO     WAAPTS           PFS Batch Sent
     C                     MOVELB2UWSX    WAUWSX    P      PFS Record Stat
     C                     Z-ADD6         WAUXSX           PFS Process Sta
     C                     MOVELB2V3SX    WAV3SX    P      PFS Error Reaso
     C                     Z-ADDB2AHNY    WAAHNY           PFS Create Date
     C                     Z-ADDB2AINY    WAAINY           PFS Create Time
     C                     Z-ADDYL0008    WAAJNY           PFS Change Date
     C                     Z-ADDYL0012    WAAKNY           PFS Change time
      *
      * Set PGM.*Record Data Changed flag
     C           QPBB21    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@B2CPUP                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPBB2CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * E3787 JJH 08/06/15 - New PFS Product and Production Schedule
      * - This function will create the PFS Prod Schedule Dtl records
      *   as set up in the PFS Prod Sched Batch Hdr Sel file.
      * - The PFS Prod Sched Batch Dtl records are then processed by the
      *   PFSDWNGUY and PFSDWNSTJ (aka 7-Miniute Jobs).
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDV84T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX01           DD
     C                     Z-ADDXDI8MM    XDEX02           MM
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX01           MM
     C                     Z-ADDXDI8DD    XDEX02           DD
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
      * YMD format
     C           1000      MULT XDI8CC    XDEY01           Y
     C                     ADD  XDI8YY    XDEY01            YYY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV84E    ENDSR
      /EJECT
     CSR         XSTMS     BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                     CALL 'Y2RTTSK'
     C                     PARM           ##TMS  26        System timestam
      *================================================================
     CSR         XSTMSE    ENDSR
      /EJECT
     CSR         YKDDW1    BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *================================================================
     CSR         YKEXT1    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ##WSR     MULT 256       ZWORK   50
     C                     ADD  ##WSC     ZWORK
     C                     SUB  ZWORK     ZINPOS
     C                     SUB  1         ZINPOS
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           ZHCSRW    SUB  ##WSR     YWPORW  30
     C           ZHCSCL    SUB  ##WSC     YWPOC1  30
     C                     SUB  1         YWPOC1
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWPORW    YYRW    50       Row
     C                     PARM YWPOC1    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                     MOVEL'Y'       YSL,1            Set wdw locatio
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
      *
      * Redisplay previous panel
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZSSTLC    BEGSR
      *================================================================
      * Set window location
      *================================================================
     C           YSL,1     IFEQ 'Y'                        Set wdw locatio
     C           YWLCTP    IFEQ 'S'                        Locate action t
     C                     Z-ADD008       YWWDRW           Window start ro
     C                     Z-ADD020       YWWDCL           Window start co
     C                     MOVEL'*TL  '   YWWDCR           Window referenc
     C                     ELSE
     C                     MOVEL'S'       YWLCTP           Locate action t
     C                     MOVEL'*CALC'   YWWDCR           Window referenc
     C                     Z-ADD-3        YWWDRW           Window start ro
     C                     Z-ADD-3        YWWDCL           Window start co
     C                     END
     C                     Z-ADD040       YWWDWD           Window width
     C                     Z-ADD013       YWWDDP           Window depth
     C                     MOVEL'N'       YSL,1            Set wdw locatio
      *
     C                     EXSR ZURTLC                     Retrieve window
     C                     EXSR ZTWDFD                     Move window fie
     C                     END
      *================================================================
     CSR         ZSEXIT    ENDSR
      /EJECT
     CSR         ZTWDFD    BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                     Z-ADDYWWDRW    ##WSR            Window start ro
     C                     Z-ADDYWWDCL    ##WSC            Window start co
     C                     EXSR YKDDW1
      *================================================================
     CSR         ZTEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZVCFPM    BEGSR
      *================================================================
      * Set Confirm Prompt window location
      *================================================================
      *
     C           ##WSR     ADD  013       YWWDRW
     C           ##WSC     ADD  040       YWWDCL
      *
     C                     ADD  1         YWWDCL
     C                     SUB  1         YWWDRW           Window start ro
     C                     SUB  21        YWWDCL           Window start co
     C                     Z-ADD18        YWWDWD           Window width
     C                     Z-ADD2         YWWDDP           Window depth
     C                     MOVEL'*TL  '   YWWDCR           Window referenc
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN           Retrieval Funct
     C                     EXSR ZURTLC                     Retrieve window
     C                     Z-ADDYWWDRW    ##WSRC           *Window start r
     C                     Z-ADDYWWDCL    ##WSCC           *Window start c
      *
      *================================================================
     CSR         ZVEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * CASE: DTL.*CMD key is CF03
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U0016' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialise Allow Set Window Location flags
     C                     MOVEA*ALL'Y'   YSL
      * Set display size
     C                     SETOF                         93*
     C           @#SCRW    COMP 27                       93*
      * Initialise window location variables.
     C                     Z-ADD*ZEROS    ##WSR
     C                     Z-ADD*ZEROS    ##WSC
     C                     MOVE '0'       XDTSDL 26 P
     C                     MOVEL@CN,001   XDTSDL
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAY1NX           PFS Company Num
     C                     Z-ADD*ZERO     WAASD8           PFS Batch Date
     C                     Z-ADD*ZERO     WAAOTS           PFS Batch Time
     C                     Z-ADD*ZERO     WAATD8           PFS Batch Sent
     C                     Z-ADD*ZERO     WAAPTS           PFS Batch Sent
     C                     Z-ADD*ZERO     WAUXSX           PFS Process Sta
     C                     Z-ADD*ZERO     WAAHNY           PFS Create Date
     C                     Z-ADD*ZERO     WAAINY           PFS Create Time
     C                     Z-ADD*ZERO     WAAJNY           PFS Change Date
     C                     Z-ADD*ZERO     WAAKNY           PFS Change time
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field System Date USR
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field *System timestamp
     C                     MOVELXDTSDL    YL0002 26
      * Define local work field Year USR
     C                     MOVEL*BLANK    YL0003  4
      * Define local work field Month USR
     C                     MOVEL*BLANK    YL0004  2
      * Define local work field Day USR
     C                     MOVEL*BLANK    YL0005  2
      * Define local work field Date (Char-8) USR
     C                     MOVEL*BLANK    YL0006  8
      * Define local work field DATE
     C                     Z-ADD*ZERO     YL0007  80
      * Define local work field PFS Change Date
     C                     Z-ADD*ZERO     YL0008  80
      * Define local work field Year Code
     C                     Z-ADD*ZERO     YL0009  40
      * Define local work field Month NBR USR
     C                     Z-ADD*ZERO     YL0010  20
      * Define local work field Day of Month USR
     C                     Z-ADD*ZERO     YL0011  20
      * Define local work field PFS Change time
     C                     Z-ADD*ZERO     YL0012  60
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
