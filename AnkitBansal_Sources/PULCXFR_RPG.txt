     H/TITLE Exc TRG POARREP ProcessXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 01/23/19  Time  : 12:38:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPUBACPL0  IF A E           K DISK
      * UPD : Packaging Item TRG        Update index
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUBA1        E DS                  EXTNAME(PUBACPL0)
      * UPD : Packaging Item TRG        Update index
      * Renamed input format fields
     D  WAAIC3       E                     EXTFLD(BAAIC3)
     D  WABRAA       E                     EXTFLD(BABRAA)
     D  WAAXTS       E                     EXTFLD(BAAXTS)
     D  WAI0SC       E                     EXTFLD(BAI0SC)
     D  WAI1SC       E                     EXTFLD(BAI1SC)
     D  WAA4DX       E                     EXTFLD(BAA4DX)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WL0001         S              3  0
     D  WL0002         S             25
     D  WL0003         S             26
     D  WL0004         S              1
     D  WL0005         S              2
     D  WL0006         S              8  0
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS           189
      * RCD: Packaging Item            Retrieval index
      * I :  Company Number
     D  P1AIC3                 1      2P 0
      * I :  Packaging Item Code
     D  P1BRAA                 3     27
      * I :  Pckg Item Description
     D  P1XITX                28     77
      * I :  Pckg List Sequence
     D  P1NONX                78     80P 0
      * I :  Pckg Type Class
     D  P1EAAA                81     83
      * I :  Pckg Item Type
     D  P1I5SX                84     85
      * I :  Item Code
     D  P1HGCD                86     89P 0
      * I :  Pckg Unit Cost
     D  P1BICS                90     95P 4
      * I :  Pckg Tare Weight
     D  P1IIWG                96    100P 2
      * I :  Pckg Reporting Group
     D  P1D8AA               101    105
      * I :  Pckg Group Category
     D  P1M3SX               106    110
      * I :  Pckg Modified Weight
     D  P1M1SX               111    111
      * I :  Pckg Unused Status 3
     D  P1NGSX               112    113
      * I :  Pckg Unused Sts 2
     D  P1M2SX               114    114
      * I :  Pre-printed Bag Sts
     D  P1NHSX               115    115
      * I :  Pckg Unused Status 5
     D  P1NISX               116    116
      * I :  Pckg Unused Status 6
     D  P1NJSX               117    118
      * I :  Pckg Unused Status 7
     D  P1NKSX               119    120
      * I :  Pckg Unused Status 8
     D  P1NLSX               121    122
      * I :  Pckg Unused Status 9
     D  P1NMSX               123    124
      * I :  Pckg Unused Status 10
     D  P1NNSX               125    126
      * I :  Pckg Unused Code
     D  P1EBAA               127    132
      * I :  Record Status
     D  P1VSST               133    133
      * I :  Create Date
     D  P1MJDT               134    137P 0
      * I :  Create Time
     D  P1BETM               138    141P 0
      * I :  Create User
     D  P1CCVN               142    151
      * I :  Create Program
     D  P1CDVN               152    161
      * I :  Change Date
     D  P1MKDT               162    165P 0
      * I :  Change Time
     D  P1BFTM               166    169P 0
      * I :  Change User
     D  P1CEVN               170    179
      * I :  Change Program
     D  P1CFVN               180    189
     D P2PARM          DS           189
      * RCD: Packaging Item            Retrieval index
      * I :  Company Number
     D  P2AIC3                 1      2P 0
      * I :  Packaging Item Code
     D  P2BRAA                 3     27
      * I :  Pckg Item Description
     D  P2XITX                28     77
      * I :  Pckg List Sequence
     D  P2NONX                78     80P 0
      * I :  Pckg Type Class
     D  P2EAAA                81     83
      * I :  Pckg Item Type
     D  P2I5SX                84     85
      * I :  Item Code
     D  P2HGCD                86     89P 0
      * I :  Pckg Unit Cost
     D  P2BICS                90     95P 4
      * I :  Pckg Tare Weight
     D  P2IIWG                96    100P 2
      * I :  Pckg Reporting Group
     D  P2D8AA               101    105
      * I :  Pckg Group Category
     D  P2M3SX               106    110
      * I :  Pckg Modified Weight
     D  P2M1SX               111    111
      * I :  Pckg Unused Status 3
     D  P2NGSX               112    113
      * I :  Pckg Unused Sts 2
     D  P2M2SX               114    114
      * I :  Pre-printed Bag Sts
     D  P2NHSX               115    115
      * I :  Pckg Unused Status 5
     D  P2NISX               116    116
      * I :  Pckg Unused Status 6
     D  P2NJSX               117    118
      * I :  Pckg Unused Status 7
     D  P2NKSX               119    120
      * I :  Pckg Unused Status 8
     D  P2NLSX               121    122
      * I :  Pckg Unused Status 9
     D  P2NMSX               123    124
      * I :  Pckg Unused Status 10
     D  P2NNSX               125    126
      * I :  Pckg Unused Code
     D  P2EBAA               127    132
      * I :  Record Status
     D  P2VSST               133    133
      * I :  Create Date
     D  P2MJDT               134    137P 0
      * I :  Create Time
     D  P2BETM               138    141P 0
      * I :  Create User
     D  P2CCVN               142    151
      * I :  Create Program
     D  P2CDVN               152    161
      * I :  Change Date
     D  P2MKDT               162    165P 0
      * I :  Change Time
     D  P2BFTM               166    169P 0
      * I :  Change User
     D  P2CEVN               170    179
      * I :  Change Program
     D  P2CFVN               180    189
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     I@BACPEG
      * Packaging Item TRG        Update index
      * Renamed input format fields
     I              BAAIC3                      WAAIC3
     I              BABRAA                      WABRAA
     I              BAAXTS                      WAAXTS
     I              BAI0SC                      WAI0SC
     I              BAI1SC                      WAI1SC
     I              BAA4DX                      WAA4DX
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Packaging
     C                   PARM                    P2PARM                         RCD: Packaging
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc TRG POARREP ProcessXF
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Crt Packaging Item TRG CR - Packaging Item TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   MOVEL(P)  P2BRAA        WL0002                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0003                         PIT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0004                         PIT TRG Databas
     C                   MOVEL(P)  '0'           WL0005                         PIT Process Sta
     C                   Z-ADD     0             WL0006                         PIT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
      * Ensure If Something Did Change Then Create Record.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14OR
      *  - c15ORc16ORc17ORc18OR c19ORc20ORc21
      *   |- c1    : PR1.Company Number NE PR2.Company Number
      *   |- c2    : PR1.Packaging Item Code NE PR2.Packaging Item Code
      *   |- c3    : PR1.Pckg Item Description NE PR2.Pckg Item Descripti
      *   |- c4    : PR1.Pckg List Sequence NE PR2.Pckg List Sequence
      *   |- c5    : PR1.Pckg Item Type NE PR2.Pckg Item Type
      *   |- c6    : PR1.Item Code NE PR2.Item Code
      *   |- c7    : PR1.Pckg Tare Weight NE PR2.Pckg Tare Weight
      *   |- c8    : PR1.Pckg Reporting Group NE PR2.Pckg Reporting Group
      *   |- c9    : PR1.Pckg Group Category NE PR2.Pckg Group Category
      *   |- c10   : PR1.Pckg Modified Weight NE PR2.Pckg Modified Weight
      *   |- c11   : PR1.Pckg Unused Status 3 NE PR2.Pckg Unused Status 3
      *   |- c12   : PR1.Pckg Unused Sts 2 NE PR2.Pckg Unused Sts 2
      *   |- c13   : PR1.Pre-printed Bag Sts NE PR2.Pre-printed Bag Sts
      *   |- c14   : PR1.Pckg Unused Status 5 NE PR2.Pckg Unused Status 5
      *   |- c15   : PR1.Pckg Unused Status 6 NE PR2.Pckg Unused Status 6
      *   |- c16   : PR1.Pckg Unused Status 7 NE PR2.Pckg Unused Status 7
      *   |- c17   : PR1.Pckg Unused Status 8 NE PR2.Pckg Unused Status 8
      *   |- c18   : PR1.Pckg Unused Status 9 NE PR2.Pckg Unused Status 9
      *   |- c19   : PR1.Pckg Unused Status 10 NE PR2.Pckg Unused Status
      *   |- c20   : PR1.Pckg Unused Code NE PR2.Pckg Unused Code
      *   |- c21   : PR1.Record Status NE PR2.Record Status
      *   '-
     C                   IF        P3D8SC = '3'
      * Crt Packaging Item TRG CR - Packaging Item TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P1AIC3 <> P2AIC3 OR
     C                             P1BRAA <> P2BRAA OR
     C                             P1XITX <> P2XITX OR
     C                             P1NONX <> P2NONX OR
     C                             P1I5SX <> P2I5SX OR
     C                             P1HGCD <> P2HGCD OR
     C                             P1IIWG <> P2IIWG OR
     C                             P1D8AA <> P2D8AA OR
     C                             P1M3SX <> P2M3SX OR
     C                             P1M1SX <> P2M1SX OR
     C                             P1NGSX <> P2NGSX OR
     C                             P1M2SX <> P2M2SX OR
     C                             P1NHSX <> P2NHSX OR
     C                             P1NISX <> P2NISX OR
     C                             P1NJSX <> P2NJSX OR
     C                             P1NKSX <> P2NKSX OR
     C                             P1NLSX <> P2NLSX OR
     C                             P1NMSX <> P2NMSX OR
     C                             P1NNSX <> P2NNSX OR
     C                             P1EBAA <> P2EBAA OR
     C                             P1VSST <> P2VSST
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   MOVEL(P)  P2BRAA        WL0002                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0003                         PIT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0004                         PIT TRG Databas
     C                   MOVEL(P)  '0'           WL0005                         PIT Process Sta
     C                   Z-ADD     0             WL0006                         PIT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Crt Packaging Item TRG CR - Packaging Item TRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   MOVEL(P)  P1BRAA        WL0002                         Packaging Item
     C                   MOVEL(P)  ##TMS         WL0003                         PIT Timestamp
     C                   MOVEL(P)  P3D8SC        WL0004                         PIT TRG Databas
     C                   MOVEL(P)  '0'           WL0005                         PIT Process Sta
     C                   Z-ADD     0             WL0006                         PIT Process Dat
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Crt Packaging Item TRG CR - Packaging Item TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BACPEG
     C                   Z-ADD     WL0001        WAAIC3                         Company Number
     C                   MOVEL     WL0002        WABRAA                         Packaging Item
     C                   MOVEL     WL0003        WAAXTS                         PIT Timestamp
     C                   MOVEL     WL0004        WAI0SC                         PIT TRG Databas
     C                   MOVEL     WL0005        WAI1SC                         PIT Process Sta
     C                   Z-ADD     WL0006        WAA4DX                         PIT Process Dat
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WAAXTS                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WABRAA                         Packaging Item
     C                   KFLD                    WAAXTS                         PIT Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @BACPEG                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5108'     W0RTN
      * Send message 'Packaging Item TRG     EX'
     C                   MOVEL     'USR5108'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @BACPEG                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WAAXTS                         PIT Timestamp
     C                   Z-ADD     *ZERO         WAA4DX                         PIT Process Dat
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WL0001
     C                   EVAL      WL0002 = ' '
     C                   MOVEL     XDTSDL        WL0003
     C                   EVAL      WL0004 = ' '
     C                   EVAL      WL0005 = ' '
     C                   Z-ADD     *ZERO         WL0006
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
