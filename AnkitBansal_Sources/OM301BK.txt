     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Dailys
      * PROGRAM:     OM301-Workfile: Sales History for Dailys Cost Reports
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     06/27/07
      *
      * FUNCTION: Several Daily's "cost" reports need to run over the SYNON Sales
      *           History file in PRKFLIB while the "cost" files are still in
      *           the Missoula/Salt Lake libraries.
      *
      *           We did not want to mess much with the old RPG report programs. So,
      *           we create this workfile in QTEMP (logic is in several functions)
      *           creating Company data summarized to the "item" level. The old RPG
      *           report programs have been tweaked to use this workfile as the
      *           input primary file---instead of the various Daily sales files that
      *           will no longer exist.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     fomhstpm9  if   e           k disk
      * Sales history (records selected with open query)
      *
      *
     fombyrel1  if   e           k disk
      * Item default
      *
      *
     fpma6cpl1  o    e           k disk
      * Workfile: Item processing sequence
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svitcd          s                   like(f4s5nb)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C     *loval        setll     omhstpm9
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      omhstpm9                               90
     C                   if        *in90 = *off                                 If not eof
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $setup
      *
     C                   when      f4s5nb <> svitcd
     C                   exsr      $wrt301
     C                   exsr      $setup
     C                   endsl
      *
      * Detail processing; accumulate:
      *    1) Extended amount
      *    2) Weight billed
     C                   add       f4ayva        a6ayva
     C                   add       f4bywg        a6bywg
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Main do
      *
      *----------------
      * EOF processing
      *----------------
     C                   if        first = no
     C                   exsr      $wrt301
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Set up the basic fields for the Item record
      *---------------------------------------------------------------
      *
     C     $setup        begsr
      *
      * Item code (in all its various Daily formats!!)
      *
      *           7,0
     C                   z-add     f4s5nb        svitcd
     C                   z-add     f4s5nb        a6s5nb
      *           5,0
     C                   z-add     f4s5nb        a6h4ny
      *           5A
     C                   move      a6h4ny        a6kxt1
      *
      * Item structure type
      * Item structure group
      * Item structure class
      *
     C                   z-add     f4rgnb        a6rgnb
     C                   z-add     f4rhnb        a6rhnb
     C                   z-add     f4rinb        a6rinb
      *
      * Retrieve Description from Item Default file:
      *
     C     f4s5nb        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If item hit
     C                   move      byavna        a6rqna
     C                   endif                                                  If item hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a workfile record for an Item
      *---------------------------------------------------------------
      *
     C     $wrt301       begsr
      *
     C                   write     @a6cpku
     C                   clear                   @a6cpku
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     c                   endsr
      /eject
