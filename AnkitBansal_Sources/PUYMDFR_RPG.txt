     H/TITLE WW Item/Warehouse WIM DF  Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 04/12/23  Time  : 10:02:25
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPUYMDFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: WW Item/Warehouse WIM DF  Display file
      *
     FPUCGCPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : WIM Item Balance          Retrieval index
      *
     FCAABREL3  IF   E           K DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FOMBYREL1  IF   E           K DISK
      * RTV : Item Default              Retrieval index
      *
     FPDIOREL1  IF   E           K DISK
      * RTV : Item Bill Of Material     Retrieval index
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDJYREL2  IF   E           K DISK
      * RTV : Company Defaults Internal Active Records
      *
     FPUCGCPL0  UF   E           K DISK
      * UPD : WIM Item Balance          Update index
      *
      * Long constants
     D @CN#            S              6    DIM(03)CTDATA PERRCD(1)
     D @CN             S             25    DIM(03) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      * Outward parameters
     D PARC            DS            11
      * KEY : WIM Item Balance          Retrieval index
      * B :  Company Number
     D  PAAIC3                 1      2P 0
      * B :  Item Code
     D  PAHGCD                 3      6P 0
      * B :  Warehouse Code
     D  PAAJCD                 7      9
      * B :  Inventory Item Type
     D  PANDSC                10     11
      *
     D QPUCG1        E DS                  EXTNAME(PUCGCPL0)
      * UPD : WIM Item Balance          Update index
      * Renamed input format fields
     D  WAAIC3       E                     EXTFLD(CGAIC3)
     D  WAHGCD       E                     EXTFLD(CGHGCD)
     D  WAAJCD       E                     EXTFLD(CGAJCD)
     D  WANDSC       E                     EXTFLD(CGNDSC)
     D  WABOWG       E                     EXTFLD(CGBOWG)
     D  WADDQT       E                     EXTFLD(CGDDQT)
     D  WAQVWG       E                     EXTFLD(CGQVWG)
     D  WAS9QT       E                     EXTFLD(CGS9QT)
     D  WATAQT       E                     EXTFLD(CGTAQT)
     D  WAQYWG       E                     EXTFLD(CGQYWG)
     D  WATDQT       E                     EXTFLD(CGTDQT)
     D  WAQZWG       E                     EXTFLD(CGQZWG)
     D  WATEQT       E                     EXTFLD(CGTEQT)
     D  WARINB       E                     EXTFLD(CGRINB)
     D  WARHNB       E                     EXTFLD(CGRHNB)
     D  WARGNB       E                     EXTFLD(CGRGNB)
     D  WAVSST       E                     EXTFLD(CGVSST)
     D  WABGTS       E                     EXTFLD(CGBGTS)
     D  WARUU1       E                     EXTFLD(CGRUU1)
     D  WARVU1       E                     EXTFLD(CGRVU1)
     D  WABHTS       E                     EXTFLD(CGBHTS)
     D  WARWU1       E                     EXTFLD(CGRWU1)
     D  WARXU1       E                     EXTFLD(CGRXU1)
      *
     D YARDCS          DS           254
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  YN0001         S             30
     D  YN0002         S              2
     D  YN0003         S              2
     D  YN0004         S              2
     D  YL0001         S              1
     D  YL0002         S            256
     D  WZDDQT         S                   LIKE(#2DDQT)
     D  WZS9QT         S                   LIKE(#2S9QT)
     D  WZTDQT         S                   LIKE(#2TDQT)
     D  WZAIC3         S                   LIKE(#2AIC3)
     D  WZHGCD         S                   LIKE(#2HGCD)
     D  WZAJCD         S                   LIKE(#2AJCD)
     D  WZNDSC         S                   LIKE(#2NDSC)
     D  WZVSST         S                   LIKE(#2VSST)
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  W0INVL         S             25
     D  Y0CX01         S              1
     D  YL0003         S              3  0
     D  YL0004         S              1
     D  YL0005         S             80
     D  ZQ             S              5  0
     D  ZADFMF         S             10
     D  WQ0001         S             30
     D  WQ0002         S             30
     D  WQ0003         S             30
     D  WQ0004         S             25
     D  W0CLPG         S             10
     D  WQ0005         S             30
     D  WQ0006         S             30
     D  WQ0007         S             30
     D  WQ0008         S             25
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  XDTSDL         S             26
     D  WN0001         S             11  2
     D  WN0002         S             11  2
     D  WN0003         S             11  2
     D  WN0004         S             11  2
     D  WN0005         S             11  2
     D  WN0006         S             11  2
     D  WN0007         S             11  2
     D  WN0008         S             11  2
     D  WN0009         S             11  2
     D  WN0010         S              3  0
     D  WN0011         S              3  0
     D  WN0012         S              3  0
     D  WN0013         S             26
     D  WN0014         S             50
     D  WN0015         S             15
     D  WN0016         S             26
     D  WN0017         S             50
     D  WN0018         S             15
     D  YARDC          S              1
     D  ##TMS          S             26
     D  WK1X01         S              1
     D  WK1X02         S              1
     D  WQ0009         S              3  0
     D  WQ0010         S              7  0
     D  WUDMCD         S              3
     D  WUEOCD         S              7
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  WUAUNA         S             30
     D  WQSG01         S                   LIKE(DNDNCD)
     D  WQSH01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YL0006         S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D #L3             S              1    DIM(3)
     D #L7             S              1    DIM(7)
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS            11
      * KEY: WIM Item Balance          Retrieval index
      * I : RST Company Number
     D  P1AIC3                 1      2P 0
      * I : RST Item Code
     D  P1HGCD                 3      6P 0
     D P2PARM          DS
      * N :  User Profile Name
     D  P2AJVN                 1     10
     D P3PARM          DS
      * FLD: Warehouse Codes
      * N :  Warehouse Code
     D  P3AJCD                 1      3
     D P4PARM          DS
      * I :  Display View Only Usr
     D  P4TQSX                 1      1
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Generic Message 80 ERR'
      * Generic Message 80 USR
     D  ZA0001                 1     80
     I@CGCPJ7
      * WIM Item Balance          Update index
      * Renamed input format fields
     I              CGAIC3                      WAAIC3
     I              CGHGCD                      WAHGCD
     I              CGAJCD                      WAAJCD
     I              CGNDSC                      WANDSC
     I              CGBOWG                      WABOWG
     I              CGDDQT                      WADDQT
     I              CGQVWG                      WAQVWG
     I              CGS9QT                      WAS9QT
     I              CGTAQT                      WATAQT
     I              CGQYWG                      WAQYWG
     I              CGTDQT                      WATDQT
     I              CGQZWG                      WAQZWG
     I              CGTEQT                      WATEQT
     I              CGRINB                      WARINB
     I              CGRHNB                      WARHNB
     I              CGRGNB                      WARGNB
     I              CGVSST                      WAVSST
     I              CGBGTS                      WABGTS
     I              CGRUU1                      WARUU1
     I              CGRVU1                      WARVU1
     I              CGBHTS                      WABHTS
     I              CGRWU1                      WARWU1
     I              CGRXU1                      WARXU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: WIM Item B
     C     P4TQSX        PARM                    WP0001                         Display View On
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * USER: Initialize subfile control
      * RTV Company Name       RT - Company Name and Address  * 
     C                   EXSR      SARVGN
      * Rtv Descriptions      RT - Company Item  * 
     C                   EXSR      SBRVGN
      * CASE: LCL.First Time Flag EQ LCL.BLANK
     C                   IF        YL0001 = YL0002
     C                   MOVEL     'A'           #2VSST                         Record Status
     C                   MOVEL     'N'           YL0001                         First Time Flag
     C                   END                                                    *FI
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    CGAIC3                         Company Number
     C                   KFLD                    CGHGCD                         Item Code
     C                   KFLD                    CGAJCD                         Warehouse Code
     C                   KFLD                    CGNDSC                         Inventory Item
      * Setup key
     C                   Z-ADD     #2AIC3        CGAIC3
     C                   Z-ADD     #2HGCD        CGHGCD
     C                   MOVEL     #2AJCD        CGAJCD
     C                   MOVEL     #2NDSC        CGNDSC
     C     KPOS          SETLL     @CGCPJ8
     C     KRST          KLIST
     C                   KFLD                    CGAIC3                         Company Number
     C                   KFLD                    CGHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #2AIC3        CGAIC3
     C                   Z-ADD     #2HGCD        CGHGCD
     C     KRST          READE     @CGCPJ8                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2DDQT        WZDDQT                         On Hand UOM1 Su
     C                   MOVEL     #2S9QT        WZS9QT                         In Transit UOM1
     C                   MOVEL     #2TDQT        WZTDQT                         On Hold UOM1 Su
     C                   MOVEL     #2AIC3        WZAIC3                         Company Number
     C                   MOVEL     #2HGCD        WZHGCD                         Item Code
     C                   MOVEL     #2AJCD        WZAJCD                         Warehouse Code
     C                   MOVEL     #2NDSC        WZNDSC                         Inventory Item
     C                   MOVEL     #2VSST        WZVSST                         Record Status
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @CGCPJ8                                90    *
     C  N82              READ      @CGCPJ8                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(33)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2DDQT <> *ZERO
     C     CGDDQT        CABNE     #2DDQT        BB020                          On Hand UOM1 Su
     C                   END
     C                   IF        #2S9QT <> *ZERO
     C     CGS9QT        CABNE     #2S9QT        BB020                          In Transit UOM1
     C                   END
     C                   IF        #2TDQT <> *ZERO
     C     CGTDQT        CABNE     #2TDQT        BB020                          On Hold UOM1 Su
     C                   END
     C                   IF        #2AJCD = ' '
     C                   IF        #2NDSC <> ' '
     C     CGNDSC        CABNE     #2NDSC        BB020                          Inventory Item
     C                   END
     C                   END
     C                   IF        #2VSST <> ' '
     C     CGVSST        CABNE     #2VSST        BB020                          Record Status
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
     C                   MOVEL     'Y'           W0RSL
      * Allow for possible *Set Cursor processing
     C                   ADD       1             ##RR
      * USER: Initialize subfile record from DBF record
      * RTV Warehouse          RT - Warehouse Codes  * 
     C                   EXSR      SCRVGN
     C                   Z-ADD     #1DDQT        #RTLQT                         On Hand UOM1 Su
     C                   Z-ADD     #1S9QT        #RTMQT                         In Transit UOM1
     C                   Z-ADD     #1TDQT        #RTNQT                         On Hold UOM1 Su
     C                   SUB       1             ##RR
      * DBF record not selected
     C     W0RSL         CABNE     'Y'           BB020
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C     KRST          READE     @CGCPJ8                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30
     CANN27              EXSR      MOCV#2
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate Record Status
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Record Status
     C                   IF        '#2VSST' = YPMTFD
     C                   MOVEL     #2VSST        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZFVSST
     C                   SELECT
     C                   WHEN      W0INVL = 'A'                                 A
     C                   Z-ADD     1             ZFVSST
     C                   WHEN      W0INVL = 'D'                                 D
     C                   Z-ADD     2             ZFVSST
     C                   WHEN      W0INVL = 'I'                                 I
     C                   Z-ADD     3             ZFVSST
     C                   ENDSL
     C                   EXFMT     ZEVSST
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZFVSST = 1
     C                   MOVEL     'A'           W0INVL                         A
     C                   WHEN      ZFVSST = 2
     C                   MOVEL     'D'           W0INVL                         D
     C                   WHEN      ZFVSST = 3
     C                   MOVEL     'I'           W0INVL                         I
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #2VSST
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      *................................................................
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZAJCD        CASNE     #2AJCD        FBRQRL
     C     WZVSST        CASNE     #2VSST        FBRQRL
     C                   END
     C     DATAG1        TAG
      * USER: Process subfile control (Pre-confirm)
     C                   IF        YPMTFD = ' '
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
      * Process create request
      * CASE: creation only allowed on maintenance view
      *  - c1ANDc2
      *   |- c1    : CTL.*CMD key is *Create
      *   |- c2    : PAR.Display View Only Usr is MaintenanceView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        *IN06
     C                   IF        P4TQSX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * RTV Item Str Type     RT - Item Default  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SDRVGN
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : LCL.Item Structure Type Code is NE 900
      *   |- c2    : LCL.Item Structure Type Code is ne 740
      *   |- c3    : LCL.Company Organization is Seaboard
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0003 <> 900
     C                   IF        YL0003 <> 740
     C                   IF        YL0004 = 'S'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * if not a Kill or CoPack item
      * R9547 DN 03/15/17-Item BOM Must Exist Before Allowed To Create.
      * CASE: *OTHERWISE
      * Rtv for Existence     RT - Item Bill Of Material  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SERVGN
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(001)      CAT(P)    @CN(002):ZQ   YL0005                         Generic Message
      * Setup message data for message
     C                   MOVEL     YL0005        ZA0001                         Generic Message
      * Send message 'Generic Message 80 ERR'
     C                   MOVEL     'USR4977'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   GOTO      DAEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   EVAL      #2AJCD = ' '                                 Warehouse Code
      * Edt Item/Warehouse WIM ER - WIM Item Balance  * 
     C                   CLEAR                   PARC
     C                   Z-ADD     #2AIC3        PAAIC3                         Company Number
     C                   Z-ADD     #2HGCD        PAHGCD                         Item Code
     C                   MOVEL(P)  #2AJCD        PAAJCD                         Warehouse Code
     C                   MOVEL(P)  #2NDSC        PANDSC                         Inventory Item
      *
     C                   CALL      'PUYNE1R'                            90      Edt Item/Wareho
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: WIM Item B
     C                   PARM      #CAPTX        WQ0001                         Company Name
     C                   PARM      #CGENA        WQ0002                         Item Descriptio
     C                   PARM      #CCCNA        WQ0003                         USR Warehouse d
     C                   PARM      *BLANK        WQ0004                         Inventory Item
      *
     C                   Z-ADD     PAAIC3        #2AIC3                         Company Number
     C                   Z-ADD     PAHGCD        #2HGCD                         Item Code
     C                   MOVEL     PAAJCD        #2AJCD                         Warehouse Code
     C                   MOVEL     PANDSC        #2NDSC                         Inventory Item
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUYNE1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9931      *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: snd message F6 not allowed in displayed view
      *  - c1ANDc2
      *   |- c1    : CTL.*CMD key is *Create
      *   |- c2    : PAR.Display View Only Usr is DispView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        *IN06
     C                   IF        P4TQSX = 'D'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Send message 'Function key not allowed'
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
      * Process subfile records
     C                   IF        *IN81
     C                   EXSR      DBPRSF
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * Prompt for confirmation
     C                   EXSR      DHPRCF
      * Exit if not confirmed
     C                   IF        *IN99
     C                   SETOFF                                       99
     C                   GOTO      DAEXIT
     C                   END
      * Process subfile (pass 2)
     C                   EXSR      EAPRSF
      * If error during 2nd pass exit:
     C     *IN99         CABEQ     '1'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   IF        YAFSCH <> *ZERO
     C     YAFSCH        CHAIN     #SFLRCD                            92        *
     C                   ELSE
     C                   READC     #SFLRCD                                92    *
     C                   END
      * Process subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      DCPRSR
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(33)
     C                   SETOFF                                       98        *
     C     YPMTFD        CABNE     *BLANKS       DCEXIT
      * SFLNXTCHG
     C                   SETON                                        84
      * USER: Process subfile record (Pre-confirm)
      * Process change request
      * CASE: changed allowed maintenance view
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Change
      *   |- c2    : PAR.Display View Only Usr is MaintenanceView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '2'
     C                   IF        P4TQSX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Edt Item/Warehouse WIM ER - WIM Item Balance  * 
     C                   IF        Y0CX01 = '1'
     C                   CLEAR                   PARC
     C                   Z-ADD     #1AIC3        PAAIC3                         Company Number
     C                   Z-ADD     #1HGCD        PAHGCD                         Item Code
     C                   MOVEL(P)  #1AJCD        PAAJCD                         Warehouse Code
     C                   MOVEL(P)  #1NDSC        PANDSC                         Inventory Item
      *
     C                   CALL      'PUYNE1R'                            90      Edt Item/Wareho
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: WIM Item B
     C                   PARM      #CAPTX        WQ0005                         Company Name
     C                   PARM      #CGENA        WQ0006                         Item Descriptio
     C                   PARM      #RCCNA        WQ0007                         USR Warehouse d
     C                   PARM      *BLANK        WQ0008                         Inventory Item
      *
     C                   Z-ADD     PAAIC3        #1AIC3                         Company Number
     C                   Z-ADD     PAHGCD        #1HGCD                         Item Code
     C                   MOVEL     PAAJCD        #1AJCD                         Warehouse Code
     C                   MOVEL     PANDSC        #1NDSC                         Inventory Item
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUYNE1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: chg not allowed in displed view
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Change
      *   |- c2    : PAR.Display View Only Usr is DispView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '2'
     C                   IF        P4TQSX = 'D'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Send message 'Function key not allowed'
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate delete request
      * CASE:
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Delete
      *   |- c2    : PAR.Display View Only Usr is MaintenanceView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '4'
     C                   IF        P4TQSX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Send message 'Delete pending'
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'USR0597'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'N'           W0DCF                          *Defer confirm
     C                   ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Delete
      *   |- c2    : PAR.Display View Only Usr is DispView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '4'
     C                   IF        P4TQSX = 'D'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Send message 'Function key not allowed'
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SFLRCD invalid
     C                   IF        *IN98
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
     C                   END                                                    FI *IN98
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   DHPRCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                   EXSR      MOCV#2
      * Update screen time
     C                   TIME                    ##TME
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   WRITE     #SFLCTL
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      DHEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   DHEXIT        ENDSR
      /EJECT
     CSR   EAPRSF        BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * Process all modified subfile records
     C                   IF        *IN81
     C                   READC     #SFLRCD                                92    *
      * Process modified subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      EBPRSR
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END                                                    WOD *92
     C                   END                                                    FI *81
      * If any errors, cancel reload
     C                   IF        *IN99
     C                   MOVEL     'N'           W0RSF
     C                   END
      *================================================================
     CSR   EAEXIT        ENDSR
      /EJECT
     CSR   EBPRSR        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                   MOVEA     WKIND0        *IN(33)
     C                   SETOFF                                       98
      * USER: Process subfile record (Post-confirm)
      * Process delete request
      * CASE: Delete routine allowed on maintenance view
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Delete
      *   |- c2    : PAR.Display View Only Usr is MaintenanceView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '4'
     C                   IF        P4TQSX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Chg Rcd Sts to Purge  CH - WIM Item Balance  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SFCHRC
      * Clr Program Message QRP4U - /UT User Source  * 
      * CLEAR MESSAGES FROM PROGRAM MESSAGE QUEUE.
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ                         ALREADY DEFINED
     C                   PARM      '*SAME'       ZAPGRL                         ALREADY DEFINED
      * RESET FIRST MESSAGE ONLY FLAG.
     C                   MOVEL     'Y'           ZAFSMS            1            ALREADY DEFINED
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   ELSE
      * CASE: Snd message if displayed view and 4=purge selected
      *  - c1ANDc2
      *   |- c1    : RCD.*SFLSEL is *Delete
      *   |- c2    : PAR.Display View Only Usr is DispView
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1SEL = '4'
     C                   IF        P4TQSX = 'D'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Send message 'Function key not allowed'
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'USR1833'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        98        *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SFLRCD invalid
     C                   IF        *IN98
     C                   SETON                                        84        SFLNXTCHG
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
     C                   GOTO      EBEXIT
     C                   ELSE
      * SFLRCD valid
     C                   SETOFF                                       84        SFLNXTCHG
     C                   EVAL      #1SEL = ' '
     C                   END                                                    FI *IN98
      *================================================================
     CSR   EBEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @CGCPJ8 fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   Z-ADD     CGAIC3        #1AIC3                         Company Number
     C                   Z-ADD     CGHGCD        #1HGCD                         Item Code
     C                   Z-ADD     CGBOWG        #1BOWG                         On Hand Weight
     C                   Z-ADD     CGDDQT        #1DDQT                         On Hand UOM1 Su
     C                   Z-ADD     CGQVWG        #1QVWG                         In Transit Weig
     C                   Z-ADD     CGS9QT        #1S9QT                         In Transit UOM1
     C                   Z-ADD     CGTAQT        #1TAQT                         Qty Available t
     C                   Z-ADD     CGQYWG        #1QYWG                         On Hold Weight
     C                   Z-ADD     CGTDQT        #1TDQT                         On Hold UOM1 Su
     C                   Z-ADD     CGQZWG        #1QZWG                         Available Weigh
     C                   Z-ADD     CGTEQT        #1TEQT                         Available UOM1
     C                   Z-ADD     CGRINB        #1RINB                         Item Structure
     C                   Z-ADD     CGRHNB        #1RHNB                         Item Structure
     C                   Z-ADD     CGRGNB        #1RGNB                         Item Structure
     C                   MOVEL     CGBGTS        #1BGTS                         Create Date Tim
     C                   MOVEL     CGRUU1        #1RUU1                         Create User ID
     C                   MOVEL     CGRVU1        #1RVU1                         Create Program
     C                   MOVEL     CGBHTS        #1BHTS                         Update Date Tim
     C                   MOVEL     CGRWU1        #1RWU1                         Update User Id
     C                   MOVEL     CGRXU1        #1RXU1                         Update Program
     C                   MOVEL     CGAJCD        #1AJCD                         Warehouse Code
     C                   MOVEL     CGNDSC        #1NDSC                         Inventory Item
     C                   MOVEL     CGVSST        #1VSST                         Record Status
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
     C                   EVAL      #RCCNA = ' '                                 USR Warehouse d
     C                   Z-ADD     *ZERO         #RTLQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         #RTMQT                         In Transit UOM1
     C                   Z-ADD     *ZERO         #RTNQT                         On Hold UOM1 Su
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   EVAL      #CAPTX = ' '                                 Company Name
     C                   Z-ADD     *ZERO         #2DDQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         #2S9QT                         In Transit UOM1
     C                   Z-ADD     *ZERO         #2TDQT                         On Hold UOM1 Su
     C                   Z-ADD     P1AIC3        #2AIC3                         Company Number
      * Clear external version also
     C                   EVAL      V2AIC3 = ' '
     C                   Z-ADD     P1HGCD        #2HGCD                         Item Code
      * Clear external version also
     C                   EVAL      V2HGCD = ' '
     C                   EVAL      #CGENA = ' '                                 Item Descriptio
     C                   EVAL      #2AJCD = ' '                                 Warehouse Code
     C                   EVAL      #CCCNA = ' '                                 USR Warehouse d
     C                   EVAL      #2NDSC = ' '                                 Inventory Item
     C                   Z-ADD     *ZERO         #CTLQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         #CTMQT                         In Transit UOM1
     C                   Z-ADD     *ZERO         #CTNQT                         On Hold UOM1 Su
     C                   EVAL      #2VSST = ' '                                 Record Status
      * Check restriction within
     C                   EXSR      VACKRL
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   MOCV#2        BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #2AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #2AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V2AIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2AIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #2HGCD <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #2HGCD        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V2HGCD                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2HGCD = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    ABAIC3                         Company Number
      * Setup key
     C                   Z-ADD     #2AIC3        ABAIC3                         Company Number
      * Establish starting position
     C     KRSSA         CHAIN     @ABREG3                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0003'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      #CAPTX = ' '                                 Name
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     ABADTX        #CAPTX                         Name
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Rtv Descriptions      RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    BZAIC3                         Company Number
     C                   KFLD                    BZHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #2AIC3        BZAIC3                         Company Number
     C                   Z-ADD     #2HGCD        BZHGCD                         Item Code
      * Establish starting position
     C     KRSSB         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     BZAVNA        #CGENA                         Description Lin
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Warehouse          RT - Warehouse Codes  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    ADAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     #1AJCD        ADAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSC         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
      * PAR = CON By name
     C                   EVAL      #RCCNA = ' '                                 Warehouse Descr
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   MOVEL     ADF8NA        #RCCNA                         Warehouse Descr
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * RTV Item Str Type     RT - Item Default  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    BYHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #2HGCD        BYHGCD                         Item Code
      * Establish starting position
     C     KRSSD         CHAIN     @BYREA1                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1160'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0003                         Item Structure
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     BYRGNB        YL0003                         Item Structure
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv for Existence     RT - Item Bill Of Material  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    IOAIC3                         Company Number
     C                   KFLD                    IOHGCD                         Item Code
     C                   KFLD                    IOC9NB                         Component Item
      * Setup key
     C                   Z-ADD     #2AIC3        IOAIC3                         Company Number
     C                   Z-ADD     #2HGCD        IOHGCD                         Item Code
     C                   Z-ADD     #2HGCD        IOC9NB                         Component Item
      * Establish starting position
     C     KRSSE         CHAIN     @IORETI                            90        *
      * Data record not found
     C   90              MOVEL     'USR1679'     W0RTN
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFCHRC        BEGSR
      *================================================================
      * Chg Rcd Sts to Purge  CH - WIM Item Balance  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0001                         On Hand Weight
     C                   Z-ADD     *ZERO         WN0002                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         WN0003                         In Transit Weig
     C                   Z-ADD     *ZERO         WN0004                         In Transit UOM1
     C                   Z-ADD     *ZERO         WN0005                         Qty Available t
     C                   Z-ADD     *ZERO         WN0006                         On Hold Weight
     C                   Z-ADD     *ZERO         WN0007                         On Hold UOM1 Su
     C                   Z-ADD     *ZERO         WN0008                         Available Weigh
     C                   Z-ADD     *ZERO         WN0009                         Available UOM1
     C                   Z-ADD     *ZERO         WN0010                         Item Structure
     C                   Z-ADD     *ZERO         WN0011                         Item Structure
     C                   Z-ADD     *ZERO         WN0012                         Item Structure
     C                   MOVEL     XDTSDL        WN0013                         Create Date Tim
     C                   EVAL      WN0014 = ' '                                 Create User ID
     C                   EVAL      WN0015 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0016                         Update Date Tim
     C                   EVAL      WN0017 = ' '                                 Update User Id
     C                   EVAL      WN0018 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @CGCPJ7
     C                   Z-ADD     #1AIC3        WAAIC3                         Company Number
     C                   Z-ADD     #1HGCD        WAHGCD                         Item Code
     C                   MOVEL(P)  #1AJCD        WAAJCD                         Warehouse Code
     C                   MOVEL(P)  #1NDSC        WANDSC                         Inventory Item
      *
     C     KLCHSF        KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WAHGCD                         Item Code
     C                   KFLD                    WAAJCD                         Warehouse Code
     C                   KFLD                    WANDSC                         Inventory Item
     C     KLCHSF        CHAIN     @CGCPJ7                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PUCGCPL0'    MDACP
     C                   MOVEL     '@CGCPJ7'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPUCG1        YARDCS
      * Move non-key fields to @CGCPJ7
     C                   MOVEL(P)  'D'           WAVSST                         Record Status
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPUCG1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WABHTS                         Update Date Tim
     C                   EVAL      WARWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         WARWU1                         Update User Id
     C                   EVAL      WARXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         WARXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPUCG1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @CGCPJ7                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PUCGCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         Application Cod
      * Setup key
     C                   EVALR     WQSG01 = ' '                                 Application Cod
     C                   MOVEL     'C/S'         WQSG01                         Application Cod
      * Establish starting position
     C     KRSSG         SETLL     @DNRESF                                      *
     C     KRSSG         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SHRVGN
     C                   END                                                    *FI
     C     KRSSG         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WQSH01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSH01                         Application Cod
      * Establish starting position
     C     KRSSH         SETLL     @DNRESF                                      *
     C     KRSSH         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SHEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSH         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * Rtv Plant Co/Org      RT - Company Defaults Internal  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    JYAIC3                         Company Number
      * Setup key
     C                   Z-ADD     #2AIC3        JYAIC3                         Company Number
      * Establish starting position
     C     KRSSI         CHAIN     @JYRECE                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2025'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0006 = ' '                                 Plant Company S
     C                   EVAL      YL0004 = ' '                                 Company Organiz
     C                   GOTO      SIEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     JYYISX        YL0006                         Plant Company S
     C                   MOVEL     JYYJSX        YL0004                         Company Organiz
     C                   ENDIF
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C                   MOVEL     V2AIC3        WK1X01
     C                   MOVEL     V2HGCD        WK1X02
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
      * Field '(CTL) #2HGCD' defaulted for 'Item Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#2AIC3' OR
     C                             WK1X02 = '?' OR
     C                             YPMTFD = '#2HGCD'
     C                   CALL      'PDJISRR'                            90      SEL Company/Ite
     C                   PARM      *BLANK        W0RTN
     C     #2AIC3        PARM      #2AIC3        WQ0009                         Company Number
     C     #2HGCD        PARM      #2HGCD        WQ0010                         Item Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDJISRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #2AIC3 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #2HGCD <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X02 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VA999
     C                   END
     C                   END
      *................................................................
      *
     C     KLVABZ        KLIST
     C                   KFLD                    BZAIC3                         Company Number
     C                   KFLD                    BZHGCD                         Item Code
      * Setup key
     C                   Z-ADD     #2AIC3        BZAIC3
     C                   Z-ADD     #2HGCD        BZHGCD
     C     KLVABZ        CHAIN     @BZREJU                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
     C     VA999         TAG
      * Restrictor relation not satisfied
      * Send message 'Company Item           NF'
     C                   MOVEL     'USR0326'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR0326'     P0RTN
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     11            ZHSTRW
     C                   Z-ADD     21            ZHNDRW
     C                   Z-ADD     1             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
     C                   IF        ZHCSRW = 010 AND
     C                             ZHCSCL = 075 AND
     C                             @#DFMT = '#SFLCTL'
     C                   MOVEL     '#2VSST'      YPMTFD                         Record Status
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   EVAL      P2AJVN = ' '                                 User Profile Na
     C                   EVAL      P3AJCD = ' '                                 Warehouse Code
      *
      * Initialise indicators for re-entry
     C                   MOVE      '0'           *IN
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WABOWG                         On Hand Weight
     C                   Z-ADD     *ZERO         WADDQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         WAQVWG                         In Transit Weig
     C                   Z-ADD     *ZERO         WAS9QT                         In Transit UOM1
     C                   Z-ADD     *ZERO         WATAQT                         Qty Available t
     C                   Z-ADD     *ZERO         WAQYWG                         On Hold Weight
     C                   Z-ADD     *ZERO         WATDQT                         On Hold UOM1 Su
     C                   Z-ADD     *ZERO         WAQZWG                         Available Weigh
     C                   Z-ADD     *ZERO         WATEQT                         Available UOM1
     C                   Z-ADD     *ZERO         WARINB                         Item Structure
     C                   Z-ADD     *ZERO         WARHNB                         Item Structure
     C                   Z-ADD     *ZERO         WARGNB                         Item Structure
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(003)      XDTSDL
     C                   MOVEL     XDTSDL        WABGTS                         Create Date Tim
     C                   MOVEL     XDTSDL        WABHTS                         Update Date Tim
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define null work field Description Line Two
     C                   EVAL      YN0001 = ' '
      * Define null work field UOM Primary
     C                   EVAL      YN0002 = ' '
      * Define null work field UOM Second
     C                   EVAL      YN0003 = ' '
      * Define null work field UOM Third
     C                   EVAL      YN0004 = ' '
      * Define local work field First Time Flag
     C                   EVAL      YL0001 = ' '
      * Define local work field BLANK
     C                   EVAL      YL0002 = ' '
      * Define local work field Item Structure Type Code
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field Company Organization
     C                   EVAL      YL0004 = ' '
      * Define local work field Generic Message 80 USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Plant Company Sts
     C                   EVAL      YL0006 = ' '
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     11            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * VAL Rtv & Center HdgRP4IF
      * SET Screen HeadingsRP4 IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SGRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40RP4U - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co HeadRP4U - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
      * Rtv Plant Co/Org      RT - Company Defaults Internal  * 
     C                   EXSR      SIRVGN
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 Must create Item BOM befo
00002 re F6=Create can be done.
00003 0001-01-01-00.00.00.00000
