     H/TITLE UPD ATS Order AllocSav XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/05/11  Time  : 11:46:48
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAAFREL7IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Yr/Period/Week/Da
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FPOCWCPL1IF  E           K        DISK
      * RTV : PS Prod Item Inventory    Retrieval index
      *
     FPOB5CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Itm/Whs/PDte/Ord
      *
     FPOB5CPL1IF  E           K        DISK
      * RTV : Order Detail Sched-Inv    Retrieval index
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FPMFDREL2IF  E           K        DISK
      * RSQ : Company Item Ext          RTV, select Active
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar                  Co/Date               NV
      *
     FPDJCCPL1IF  E           K        DISK
      * RTV : PS Prod Schedule          Retrieval index
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPOB6CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      *
     FPOB6CPL1IF  E           K        DISK
      * RTV : Order Detail Sched-Consmd Retrieval index
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FPOB5CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched-Inv    Update index
      *
     FPDKNCPL0UF  E           K        DISK                      A
      * UPD : Order Detail Schedule     Update index
      *
     FPDI8CPL0UF  E           K        DISK                      A
      * UPD : PS Prod Item Schedule     Update index
      *
     FPOB6CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched-Consmd Update index
      *
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WAAIC3
     I              AFBCDT                          WABCDT
     I              AFCQNB                          WACQNB
     I              AFESNB                          WAESNB
     I              AFETNB                          WAETNB
     I              AFBZNB                          WABZNB
     I              AFA9ST                          WAA9ST
     I              AFEINB                          WAEINB
     I              AFC5ST                          WAC5ST
     I              AFAQNB                          WAAQNB
     I              AFCMST                          WACMST
     I              AFV9ST                          WAV9ST
     I              AFWAST                          WAWAST
     I              AFX2ST                          WAX2ST
     I              AFOJDT                          WAOJDT
     I              AFNQNX                          WANQNX
     I              AFNRNX                          WANRNX
     I              AFI9SX                          WAI9SX
     I              AFJASX                          WAJASX
     I              AFOKDT                          WAOKDT
     I              AFOLDT                          WAOLDT
     I              AFUVST                          WAUVST
     I              AFUWST                          WAUWST
     I              AFUXST                          WAUXST
     I              AFAATM                          WAAATM
     I              AFAYNA                          WAAYNA
     I              AFA0NA                          WAA0NA
     I              AFAXDT                          WAAXDT
      *
     I@AFREQ0
      * Calendar                  RSQ Co/Yr/Period/Week/Da
      * Renamed input format fields
     I              AFAIC3                          WBAIC3
     I              AFBCDT                          WBBCDT
     I              AFCQNB                          WBCQNB
     I              AFESNB                          WBESNB
     I              AFETNB                          WBETNB
     I              AFBZNB                          WBBZNB
     I              AFA9ST                          WBA9ST
     I              AFEINB                          WBEINB
     I              AFC5ST                          WBC5ST
     I              AFAQNB                          WBAQNB
     I              AFCMST                          WBCMST
     I              AFV9ST                          WBV9ST
     I              AFWAST                          WBWAST
     I              AFX2ST                          WBX2ST
     I              AFOJDT                          WBOJDT
     I              AFNQNX                          WBNQNX
     I              AFNRNX                          WBNRNX
     I              AFI9SX                          WBI9SX
     I              AFJASX                          WBJASX
     I              AFOKDT                          WBOKDT
     I              AFOLDT                          WBOLDT
     I              AFUVST                          WBUVST
     I              AFUWST                          WBUWST
     I              AFUXST                          WBUXST
     I              AFAATM                          WBAATM
     I              AFAYNA                          WBAYNA
     I              AFA0NA                          WBA0NA
     I              AFAXDT                          WBAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@CWCPQW
      * PS Prod Item Inventory    Retrieval index
      * Renamed input format fields
     I              CWAIC3                          WDAIC3
     I              CWHGCD                          WDHGCD
     I              CWAJCD                          WDAJCD
     I              CWELDT                          WDELDT
     I              CWACWG                          WDACWG
     I              CWARQT                          WDARQT
     I              CWK7DT                          WDK7DT
     I              CWUVST                          WDUVST
     I              CWUWST                          WDUWST
     I              CWUXST                          WDUXST
     I              CWVSST                          WDVSST
     I              CWAATM                          WDAATM
     I              CWAYNA                          WDAYNA
     I              CWA0NA                          WDA0NA
     I              CWAXDT                          WDAXDT
      *
     I@B5CPM4
      * Order Detail Sched-Inv    Co/Itm/Whs/PDte/Ord
      * Renamed input format fields
     I              B5AIC3                          WEAIC3
     I              B5C4NB                          WEC4NB
     I              B5DPNB                          WEDPNB
     I              B5UENB                          WEUENB
     I              B5JGDT                          WEJGDT
     I              B5AODT                          WEAODT
     I              B5AJCD                          WEAJCD
     I              B5HGCD                          WEHGCD
     I              B5IUQT                          WEIUQT
     I              B5F3WG                          WEF3WG
     I              B5UVST                          WEUVST
     I              B5UWST                          WEUWST
     I              B5UXST                          WEUXST
     I              B5VSST                          WEVSST
     I              B5AATM                          WEAATM
     I              B5AYNA                          WEAYNA
     I              B5A0NA                          WEA0NA
     I              B5AXDT                          WEAXDT
      *
     I@B5CPM2
      * Order Detail Sched-Inv    Retrieval index
      * Renamed input format fields
     I              B5AIC3                          WFAIC3
     I              B5C4NB                          WFC4NB
     I              B5DPNB                          WFDPNB
     I              B5UENB                          WFUENB
     I              B5JGDT                          WFJGDT
     I              B5AODT                          WFAODT
     I              B5AJCD                          WFAJCD
     I              B5HGCD                          WFHGCD
     I              B5IUQT                          WFIUQT
     I              B5F3WG                          WFF3WG
     I              B5UVST                          WFUVST
     I              B5UWST                          WFUWST
     I              B5UXST                          WFUXST
     I              B5VSST                          WFVSST
     I              B5AATM                          WFAATM
     I              B5AYNA                          WFAYNA
     I              B5A0NA                          WFA0NA
     I              B5AXDT                          WFAXDT
      *
     I@B5CPM1
      * Order Detail Sched-Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WGAIC3
     I              B5C4NB                          WGC4NB
     I              B5DPNB                          WGDPNB
     I              B5UENB                          WGUENB
     I              B5JGDT                          WGJGDT
     I              B5AODT                          WGAODT
     I              B5AJCD                          WGAJCD
     I              B5HGCD                          WGHGCD
     I              B5IUQT                          WGIUQT
     I              B5F3WG                          WGF3WG
     I              B5UVST                          WGUVST
     I              B5UWST                          WGUWST
     I              B5UXST                          WGUXST
     I              B5VSST                          WGVSST
     I              B5AATM                          WGAATM
     I              B5AYNA                          WGAYNA
     I              B5A0NA                          WGA0NA
     I              B5AXDT                          WGAXDT
      *
     I@KNCPHO
      * Order Detail Schedule     Retrieval index
      * Renamed input format fields
     I              KNAIC3                          WHAIC3
     I              KNC4NB                          WHC4NB
     I              KNDPNB                          WHDPNB
     I              KNUENB                          WHUENB
     I              KNJGDT                          WHJGDT
     I              KNAODT                          WHAODT
     I              KNAJCD                          WHAJCD
     I              KNAYAA                          WHAYAA
     I              KNHGCD                          WHHGCD
     I              KNIGQT                          WHIGQT
     I              KNFLWG                          WHFLWG
     I              KNIUQT                          WHIUQT
     I              KNF3WG                          WHF3WG
     I              KNIVQT                          WHIVQT
     I              KNF4WG                          WHF4WG
     I              KNP7ST                          WHP7ST
     I              KNP8ST                          WHP8ST
     I              KNQAST                          WHQAST
     I              KNUVST                          WHUVST
     I              KNUWST                          WHUWST
     I              KNUXST                          WHUXST
     I              KNVSST                          WHVSST
     I              KNAATM                          WHAATM
     I              KNAYNA                          WHAYNA
     I              KNA0NA                          WHA0NA
     I              KNAXDT                          WHAXDT
      *
     I@KNCPHN
      * Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WIAIC3
     I              KNC4NB                          WIC4NB
     I              KNDPNB                          WIDPNB
     I              KNUENB                          WIUENB
     I              KNJGDT                          WIJGDT
     I              KNAODT                          WIAODT
     I              KNAJCD                          WIAJCD
     I              KNAYAA                          WIAYAA
     I              KNHGCD                          WIHGCD
     I              KNIGQT                          WIIGQT
     I              KNFLWG                          WIFLWG
     I              KNIUQT                          WIIUQT
     I              KNF3WG                          WIF3WG
     I              KNIVQT                          WIIVQT
     I              KNF4WG                          WIF4WG
     I              KNP7ST                          WIP7ST
     I              KNP8ST                          WIP8ST
     I              KNQAST                          WIQAST
     I              KNUVST                          WIUVST
     I              KNUWST                          WIUWST
     I              KNUXST                          WIUXST
     I              KNVSST                          WIVSST
     I              KNAATM                          WIAATM
     I              KNAYNA                          WIAYNA
     I              KNA0NA                          WIA0NA
     I              KNAXDT                          WIAXDT
      *
     I@I8CPUS
      * PS Prod Item Schedule     Retrieval index
      * Renamed input format fields
     I              I8AIC3                          WJAIC3
     I              I8V5ST                          WJV5ST
     I              I8ELDT                          WJELDT
     I              I8HGCD                          WJHGCD
     I              I8AJCD                          WJAJCD
     I              I8GPDT                          WJGPDT
     I              I8WTSP                          WJWTSP
     I              I8QTSP                          WJQTSP
     I              I8DJPC                          WJDJPC
     I              I8F8WG                          WJF8WG
     I              I8WTIN                          WJWTIN
     I              I8D5NB                          WJD5NB
     I              I8DXWG                          WJDXWG
     I              I8B2NB                          WJB2NB
     I              I8WTCN                          WJWTCN
     I              I8PSCV                          WJPSCV
     I              I8SAWT                          WJSAWT
     I              I8B9NB                          WJB9NB
     I              I8D1WG                          WJD1WG
     I              I8CBNB                          WJCBNB
     I              I8EZWG                          WJEZWG
     I              I8CCNB                          WJCCNB
     I              I8E0WG                          WJE0WG
     I              I8D6NB                          WJD6NB
     I              I8OAWT                          WJOAWT
     I              I8CDNB                          WJCDNB
     I              I8UNW2                          WJUNW2
     I              I8CENB                          WJCENB
     I              I8F9WG                          WJF9WG
     I              I8BPNB                          WJBPNB
     I              I8GAWG                          WJGAWG
     I              I8BQNB                          WJBQNB
     I              I8GBWG                          WJGBWG
     I              I8BRNB                          WJBRNB
     I              I8GCWG                          WJGCWG
     I              I8BSNB                          WJBSNB
     I              I8GDWG                          WJGDWG
     I              I8BWNB                          WJBWNB
     I              I8GEWG                          WJGEWG
     I              I8PS6U                          WJPS6U
     I              I8WCST                          WJWCST
     I              I8WPST                          WJWPST
     I              I8B5ST                          WJB5ST
     I              I8TFST                          WJTFST
     I              I8TEST                          WJTEST
     I              I8THST                          WJTHST
     I              I8UDST                          WJUDST
     I              I8UFST                          WJUFST
     I              I8UGST                          WJUGST
     I              I8UHST                          WJUHST
     I              I8B6ST                          WJB6ST
     I              I8B7ST                          WJB7ST
     I              I8DVWG                          WJDVWG
     I              I8D7NB                          WJD7NB
     I              I8FCAD                          WJFCAD
     I              I8D9NB                          WJD9NB
     I              I8DWWG                          WJDWWG
     I              I8EANB                          WJEANB
     I              I8SHWT                          WJSHWT
     I              I8EBNB                          WJEBNB
     I              I8AVWT                          WJAVWT
     I              I8ECNB                          WJECNB
     I              I8WTON                          WJWTON
     I              I8EDNB                          WJEDNB
     I              I8FNWT                          WJFNWT
     I              I8EENB                          WJEENB
     I              I8QTAS                          WJQTAS
     I              I8EFNB                          WJEFNB
     I              I8WAIO                          WJWAIO
     I              I8EGNB                          WJEGNB
     I              I8R3CD                          WJR3CD
     I              I8RGNB                          WJRGNB
     I              I8RHNB                          WJRHNB
     I              I8RINB                          WJRINB
     I              I8XRCD                          WJXRCD
     I              I8UVST                          WJUVST
     I              I8UWST                          WJUWST
     I              I8UXST                          WJUXST
     I              I8VSST                          WJVSST
     I              I8AATM                          WJAATM
     I              I8AYNA                          WJAYNA
     I              I8A0NA                          WJA0NA
     I              I8AXDT                          WJAXDT
      *
     I@I8CPUR
      * PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WKAIC3
     I              I8V5ST                          WKV5ST
     I              I8ELDT                          WKELDT
     I              I8HGCD                          WKHGCD
     I              I8AJCD                          WKAJCD
     I              I8GPDT                          WKGPDT
     I              I8WTSP                          WKWTSP
     I              I8QTSP                          WKQTSP
     I              I8DJPC                          WKDJPC
     I              I8F8WG                          WKF8WG
     I              I8WTIN                          WKWTIN
     I              I8D5NB                          WKD5NB
     I              I8DXWG                          WKDXWG
     I              I8B2NB                          WKB2NB
     I              I8WTCN                          WKWTCN
     I              I8PSCV                          WKPSCV
     I              I8SAWT                          WKSAWT
     I              I8B9NB                          WKB9NB
     I              I8D1WG                          WKD1WG
     I              I8CBNB                          WKCBNB
     I              I8EZWG                          WKEZWG
     I              I8CCNB                          WKCCNB
     I              I8E0WG                          WKE0WG
     I              I8D6NB                          WKD6NB
     I              I8OAWT                          WKOAWT
     I              I8CDNB                          WKCDNB
     I              I8UNW2                          WKUNW2
     I              I8CENB                          WKCENB
     I              I8F9WG                          WKF9WG
     I              I8BPNB                          WKBPNB
     I              I8GAWG                          WKGAWG
     I              I8BQNB                          WKBQNB
     I              I8GBWG                          WKGBWG
     I              I8BRNB                          WKBRNB
     I              I8GCWG                          WKGCWG
     I              I8BSNB                          WKBSNB
     I              I8GDWG                          WKGDWG
     I              I8BWNB                          WKBWNB
     I              I8GEWG                          WKGEWG
     I              I8PS6U                          WKPS6U
     I              I8WCST                          WKWCST
     I              I8WPST                          WKWPST
     I              I8B5ST                          WKB5ST
     I              I8TFST                          WKTFST
     I              I8TEST                          WKTEST
     I              I8THST                          WKTHST
     I              I8UDST                          WKUDST
     I              I8UFST                          WKUFST
     I              I8UGST                          WKUGST
     I              I8UHST                          WKUHST
     I              I8B6ST                          WKB6ST
     I              I8B7ST                          WKB7ST
     I              I8DVWG                          WKDVWG
     I              I8D7NB                          WKD7NB
     I              I8FCAD                          WKFCAD
     I              I8D9NB                          WKD9NB
     I              I8DWWG                          WKDWWG
     I              I8EANB                          WKEANB
     I              I8SHWT                          WKSHWT
     I              I8EBNB                          WKEBNB
     I              I8AVWT                          WKAVWT
     I              I8ECNB                          WKECNB
     I              I8WTON                          WKWTON
     I              I8EDNB                          WKEDNB
     I              I8FNWT                          WKFNWT
     I              I8EENB                          WKEENB
     I              I8QTAS                          WKQTAS
     I              I8EFNB                          WKEFNB
     I              I8WAIO                          WKWAIO
     I              I8EGNB                          WKEGNB
     I              I8R3CD                          WKR3CD
     I              I8RGNB                          WKRGNB
     I              I8RHNB                          WKRHNB
     I              I8RINB                          WKRINB
     I              I8XRCD                          WKXRCD
     I              I8UVST                          WKUVST
     I              I8UWST                          WKUWST
     I              I8UXST                          WKUXST
     I              I8VSST                          WKVSST
     I              I8AATM                          WKAATM
     I              I8AYNA                          WKAYNA
     I              I8A0NA                          WKA0NA
     I              I8AXDT                          WKAXDT
      *
     I@FDREAW
      * Company Item Ext          RTV, select Active
      * Renamed input format fields
     I              FDAIC3                          WLAIC3
     I              FDHGCD                          WLHGCD
     I              FDD0ST                          WLD0ST
     I              FDD2ST                          WLD2ST
     I              FDD6ST                          WLD6ST
     I              FDWESP                          WLWESP
     I              FDEDST                          WLEDST
     I              FDEFST                          WLEFST
     I              FDEHST                          WLEHST
     I              FDEMST                          WLEMST
     I              FDENST                          WLENST
     I              FDEOST                          WLEOST
     I              FDEPST                          WLEPST
     I              FDEQST                          WLEQST
     I              FDOQNY                          WLOQNY
     I              FDORNY                          WLORNY
     I              FDS2DT                          WLS2DT
     I              FDUFT1                          WLUFT1
     I              FDKUAA                          WLKUAA
     I              FDVSST                          WLVSST
     I              FDMJDT                          WLMJDT
     I              FDBETM                          WLBETM
     I              FDCCVN                          WLCCVN
     I              FDCDVN                          WLCDVN
     I              FDMKDT                          WLMKDT
     I              FDBFTM                          WLBFTM
     I              FDCEVN                          WLCEVN
     I              FDCFVN                          WLCFVN
      *
     I@AFREYY
      * Calendar                  Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          WMAIC3
     I              AFBCDT                          WMBCDT
     I              AFCQNB                          WMCQNB
     I              AFESNB                          WMESNB
     I              AFETNB                          WMETNB
     I              AFBZNB                          WMBZNB
     I              AFA9ST                          WMA9ST
     I              AFEINB                          WMEINB
     I              AFC5ST                          WMC5ST
     I              AFAQNB                          WMAQNB
     I              AFCMST                          WMCMST
     I              AFV9ST                          WMV9ST
     I              AFWAST                          WMWAST
     I              AFX2ST                          WMX2ST
     I              AFOJDT                          WMOJDT
     I              AFNQNX                          WMNQNX
     I              AFNRNX                          WMNRNX
     I              AFI9SX                          WMI9SX
     I              AFJASX                          WMJASX
     I              AFOKDT                          WMOKDT
     I              AFOLDT                          WMOLDT
     I              AFUVST                          WMUVST
     I              AFUWST                          WMUWST
     I              AFUXST                          WMUXST
     I              AFAATM                          WMAATM
     I              AFAYNA                          WMAYNA
     I              AFA0NA                          WMA0NA
     I              AFAXDT                          WMAXDT
      *
     I@JCCPVC
      * PS Prod Schedule          Retrieval index
      * Renamed input format fields
     I              JCAIC3                          WOAIC3
     I              JCV5ST                          WOV5ST
     I              JCELDT                          WOELDT
     I              JCHVHD                          WOHVHD
     I              JCZ6NB                          WOZ6NB
     I              JCZ7NB                          WOZ7NB
     I              JCDGPC                          WODGPC
     I              JCAVCW                          WOAVCW
     I              JCDIPC                          WODIPC
     I              JCZ0NB                          WOZ0NB
     I              JCAVLE                          WOAVLE
     I              JCECWG                          WOECWG
     I              JCUVST                          WOUVST
     I              JCUWST                          WOUWST
     I              JCUXST                          WOUXST
     I              JCVSST                          WOVSST
     I              JCAATM                          WOAATM
     I              JCAYNA                          WOAYNA
     I              JCA0NA                          WOA0NA
     I              JCAXDT                          WOAXDT
      *
     I@I8CPXP
      * PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WRAIC3
     I              I8V5ST                          WRV5ST
     I              I8ELDT                          WRELDT
     I              I8HGCD                          WRHGCD
     I              I8AJCD                          WRAJCD
     I              I8GPDT                          WRGPDT
     I              I8WTSP                          WRWTSP
     I              I8QTSP                          WRQTSP
     I              I8DJPC                          WRDJPC
     I              I8F8WG                          WRF8WG
     I              I8WTIN                          WRWTIN
     I              I8D5NB                          WRD5NB
     I              I8DXWG                          WRDXWG
     I              I8B2NB                          WRB2NB
     I              I8WTCN                          WRWTCN
     I              I8PSCV                          WRPSCV
     I              I8SAWT                          WRSAWT
     I              I8B9NB                          WRB9NB
     I              I8D1WG                          WRD1WG
     I              I8CBNB                          WRCBNB
     I              I8EZWG                          WREZWG
     I              I8CCNB                          WRCCNB
     I              I8E0WG                          WRE0WG
     I              I8D6NB                          WRD6NB
     I              I8OAWT                          WROAWT
     I              I8CDNB                          WRCDNB
     I              I8UNW2                          WRUNW2
     I              I8CENB                          WRCENB
     I              I8F9WG                          WRF9WG
     I              I8BPNB                          WRBPNB
     I              I8GAWG                          WRGAWG
     I              I8BQNB                          WRBQNB
     I              I8GBWG                          WRGBWG
     I              I8BRNB                          WRBRNB
     I              I8GCWG                          WRGCWG
     I              I8BSNB                          WRBSNB
     I              I8GDWG                          WRGDWG
     I              I8BWNB                          WRBWNB
     I              I8GEWG                          WRGEWG
     I              I8PS6U                          WRPS6U
     I              I8WCST                          WRWCST
     I              I8WPST                          WRWPST
     I              I8B5ST                          WRB5ST
     I              I8TFST                          WRTFST
     I              I8TEST                          WRTEST
     I              I8THST                          WRTHST
     I              I8UDST                          WRUDST
     I              I8UFST                          WRUFST
     I              I8UGST                          WRUGST
     I              I8UHST                          WRUHST
     I              I8B6ST                          WRB6ST
     I              I8B7ST                          WRB7ST
     I              I8DVWG                          WRDVWG
     I              I8D7NB                          WRD7NB
     I              I8FCAD                          WRFCAD
     I              I8D9NB                          WRD9NB
     I              I8DWWG                          WRDWWG
     I              I8EANB                          WREANB
     I              I8SHWT                          WRSHWT
     I              I8EBNB                          WREBNB
     I              I8AVWT                          WRAVWT
     I              I8ECNB                          WRECNB
     I              I8WTON                          WRWTON
     I              I8EDNB                          WREDNB
     I              I8FNWT                          WRFNWT
     I              I8EENB                          WREENB
     I              I8QTAS                          WRQTAS
     I              I8EFNB                          WREFNB
     I              I8WAIO                          WRWAIO
     I              I8EGNB                          WREGNB
     I              I8R3CD                          WRR3CD
     I              I8RGNB                          WRRGNB
     I              I8RHNB                          WRRHNB
     I              I8RINB                          WRRINB
     I              I8XRCD                          WRXRCD
     I              I8UVST                          WRUVST
     I              I8UWST                          WRUWST
     I              I8UXST                          WRUXST
     I              I8VSST                          WRVSST
     I              I8AATM                          WRAATM
     I              I8AYNA                          WRAYNA
     I              I8A0NA                          WRA0NA
     I              I8AXDT                          WRAXDT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WSAIC3
     I              BZHGCD                          WSHGCD
     I              BZAVNA                          WSAVNA
     I              BZAWNA                          WSAWNA
     I              BZL7NA                          WSL7NA
     I              BZL8NA                          WSL8NA
     I              BZL6NA                          WSL6NA
     I              BZMFNA                          WSMFNA
     I              BZADCD                          WSADCD
     I              BZAWPC                          WSAWPC
     I              BZLXST                          WSLXST
     I              BZAECD                          WSAECD
     I              BZAXPC                          WSAXPC
     I              BZLYST                          WSLYST
     I              BZAFCD                          WSAFCD
     I              BZAICD                          WSAICD
     I              BZAIWG                          WSAIWG
     I              BZHICD                          WSHICD
     I              BZRBCD                          WSRBCD
     I              BZFZST                          WSFZST
     I              BZAVST                          WSAVST
     I              BZCZWG                          WSCZWG
     I              BZC0WG                          WSC0WG
     I              BZURTN                          WSURTN
     I              BZAJC8                          WSAJC8
     I              BZRINB                          WSRINB
     I              BZRHNB                          WSRHNB
     I              BZRGNB                          WSRGNB
     I              BZLNCD                          WSLNCD
     I              BZTFNB                          WSTFNB
     I              BZN0CD                          WSN0CD
     I              BZX4ST                          WSX4ST
     I              BZTMVA                          WSTMVA
     I              BZTNVA                          WSTNVA
     I              BZBLPR                          WSBLPR
     I              BZBMPR                          WSBMPR
     I              BZLRCD                          WSLRCD
     I              BZU9ST                          WSU9ST
     I              BZCMCO                          WSCMCO
     I              BZQ1CD                          WSQ1CD
     I              BZQ8CD                          WSQ8CD
     I              BZCHTM                          WSCHTM
     I              BZQZCD                          WSQZCD
     I              BZXWST                          WSXWST
     I              BZXXST                          WSXXST
     I              BZVMST                          WSVMST
     I              BZSWGH                          WSSWGH
     I              BZPPHE                          WSPPHE
     I              BZR3CD                          WSR3CD
     I              BZSDCD                          WSSDCD
     I              BZICN1                          WSICN1
     I              BZSVCD                          WSSVCD
     I              BZICN2                          WSICN2
     I              BZSWCD                          WSSWCD
     I              BZV2NB                          WSV2NB
     I              BZSXCD                          WSSXCD
     I              BZITCN                          WSITCN
     I              BZSYCD                          WSSYCD
     I              BZITC5                          WSITC5
     I              BZSZCD                          WSSZCD
     I              BZICN6                          WSICN6
     I              BZS0CD                          WSS0CD
     I              BZICN7                          WSICN7
     I              BZS1CD                          WSS1CD
     I              BZICN8                          WSICN8
     I              BZS2CD                          WSS2CD
     I              BZICN9                          WSICN9
     I              BZS3CD                          WSS3CD
     I              BZICN0                          WSICN0
     I              BZS4CD                          WSS4CD
     I              BZSFNB                          WSSFNB
     I              BZA3WG                          WSA3WG
     I              BZSJNB                          WSSJNB
     I              BZLLCD                          WSLLCD
     I              BZLMCD                          WSLMCD
     I              BZP3ST                          WSP3ST
     I              BZSKNB                          WSSKNB
     I              BZSLNB                          WSSLNB
     I              BZSMNB                          WSSMNB
     I              BZP4ST                          WSP4ST
     I              BZCFNB                          WSCFNB
     I              BZCGNB                          WSCGNB
     I              BZILNB                          WSILNB
     I              BZCHNB                          WSCHNB
     I              BZCINB                          WSCINB
     I              BZCJNB                          WSCJNB
     I              BZCMNB                          WSCMNB
     I              BZCNNB                          WSCNNB
     I              BZCRNB                          WSCRNB
     I              BZCSNB                          WSCSNB
     I              BZCVNB                          WSCVNB
     I              BZCWNB                          WSCWNB
     I              BZCXNB                          WSCXNB
     I              BZCZNB                          WSCZNB
     I              BZC0NB                          WSC0NB
     I              BZN1CD                          WSN1CD
     I              BZB4NB                          WSB4NB
     I              BZB5NB                          WSB5NB
     I              BZX5ST                          WSX5ST
     I              BZX6ST                          WSX6ST
     I              BZX7ST                          WSX7ST
     I              BZPCCT                          WSPCCT
     I              BZBDNB                          WSBDNB
     I              BZBJNB                          WSBJNB
     I              BZSUST                          WSSUST
     I              BZSVST                          WSSVST
     I              BZSYST                          WSSYST
     I              BZSZST                          WSSZST
     I              BZS1ST                          WSS1ST
     I              BZXRCD                          WSXRCD
     I              BZXTCD                          WSXTCD
     I              BZXUCD                          WSXUCD
     I              BZF5WG                          WSF5WG
     I              BZF6WG                          WSF6WG
     I              BZF7WG                          WSF7WG
     I              BZBLNB                          WSBLNB
     I              BZBNNB                          WSBNNB
     I              BZS2ST                          WSS2ST
     I              BZS4ST                          WSS4ST
     I              BZS5ST                          WSS5ST
     I              BZS6ST                          WSS6ST
     I              BZS8ST                          WSS8ST
     I              BZS9ST                          WSS9ST
     I              BZTCST                          WSTCST
     I              BZTDST                          WSTDST
     I              BZUVST                          WSUVST
     I              BZUWST                          WSUWST
     I              BZUXST                          WSUXST
     I              BZVSST                          WSVSST
     I              BZAATM                          WSAATM
     I              BZAYNA                          WSAYNA
     I              BZA0NA                          WSA0NA
     I              BZAXDT                          WSAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WTAJCD
     I              ADF8NA                          WTF8NA
     I              ADACNA                          WTACNA
     I              ADADNA                          WTADNA
     I              ADAENA                          WTAENA
     I              ADAJNA                          WTAJNA
     I              ADBTTX                          WTBTTX
     I              ADAOCD                          WTAOCD
     I              ADBGCD                          WTBGCD
     I              ADVHST                          WTVHST
     I              ADMPNA                          WTMPNA
     I              ADWPST                          WTWPST
     I              ADXUST                          WTXUST
     I              ADT0ST                          WTT0ST
     I              ADT1ST                          WTT1ST
     I              ADDBNB                          WTDBNB
     I              ADT2ST                          WTT2ST
     I              ADT3ST                          WTT3ST
     I              ADT4ST                          WTT4ST
     I              ADT6ST                          WTT6ST
     I              ADBWC3                          WTBWC3
     I              ADBTC3                          WTBTC3
     I              ADBUC3                          WTBUC3
     I              ADBVC3                          WTBVC3
     I              ADFCAA                          WTFCAA
     I              ADRQSX                          WTRQSX
     I              ADRRSX                          WTRRSX
     I              ADRSSX                          WTRSSX
     I              ADRTSX                          WTRTSX
     I              ADT7ST                          WTT7ST
     I              ADT8ST                          WTT8ST
     I              ADRNSX                          WTRNSX
     I              ADROSX                          WTROSX
     I              ADRPSX                          WTRPSX
     I              ADUVST                          WTUVST
     I              ADUWST                          WTUWST
     I              ADUXST                          WTUXST
     I              ADVSST                          WTVSST
     I              ADAATM                          WTAATM
     I              ADAYNA                          WTAYNA
     I              ADA0NA                          WTA0NA
     I              ADAXDT                          WTAXDT
      *
     I@B6CPAG
      * Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      * Renamed input format fields
     I              B6AIC3                          WVAIC3
     I              B6C4NB                          WVC4NB
     I              B6DPNB                          WVDPNB
     I              B6UENB                          WVUENB
     I              B6JGDT                          WVJGDT
     I              B6OONY                          WVOONY
     I              B6AODT                          WVAODT
     I              B6AJCD                          WVAJCD
     I              B6NUDT                          WVNUDT
     I              B6HGCD                          WVHGCD
     I              B6IGQT                          WVIGQT
     I              B6FLWG                          WVFLWG
     I              B6NSQT                          WVNSQT
     I              B6JQWG                          WVJQWG
     I              B6NVDT                          WVNVDT
     I              B6BUTM                          WVBUTM
     I              B6UVST                          WVUVST
     I              B6UWST                          WVUWST
     I              B6UXST                          WVUXST
     I              B6VSST                          WVVSST
     I              B6AATM                          WVAATM
     I              B6AYNA                          WVAYNA
     I              B6A0NA                          WVA0NA
     I              B6AXDT                          WVAXDT
      *
     I@B6CPNB
      * Order Detail Sched-Consmd Retrieval index
      * Renamed input format fields
     I              B6AIC3                          WWAIC3
     I              B6C4NB                          WWC4NB
     I              B6DPNB                          WWDPNB
     I              B6UENB                          WWUENB
     I              B6JGDT                          WWJGDT
     I              B6OONY                          WWOONY
     I              B6AODT                          WWAODT
     I              B6AJCD                          WWAJCD
     I              B6NUDT                          WWNUDT
     I              B6HGCD                          WWHGCD
     I              B6IGQT                          WWIGQT
     I              B6FLWG                          WWFLWG
     I              B6NSQT                          WWNSQT
     I              B6JQWG                          WWJQWG
     I              B6NVDT                          WWNVDT
     I              B6BUTM                          WWBUTM
     I              B6UVST                          WWUVST
     I              B6UWST                          WWUWST
     I              B6UXST                          WWUXST
     I              B6VSST                          WWVSST
     I              B6AATM                          WWAATM
     I              B6AYNA                          WWAYNA
     I              B6A0NA                          WWA0NA
     I              B6AXDT                          WWAXDT
      *
     I@B6CPNA
      * Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          WXAIC3
     I              B6C4NB                          WXC4NB
     I              B6DPNB                          WXDPNB
     I              B6UENB                          WXUENB
     I              B6JGDT                          WXJGDT
     I              B6OONY                          WXOONY
     I              B6AODT                          WXAODT
     I              B6AJCD                          WXAJCD
     I              B6NUDT                          WXNUDT
     I              B6HGCD                          WXHGCD
     I              B6IGQT                          WXIGQT
     I              B6FLWG                          WXFLWG
     I              B6NSQT                          WXNSQT
     I              B6JQWG                          WXJQWG
     I              B6NVDT                          WXNVDT
     I              B6BUTM                          WXBUTM
     I              B6UVST                          WXUVST
     I              B6UWST                          WXUWST
     I              B6UXST                          WXUXST
     I              B6VSST                          WXVSST
     I              B6AATM                          WXAATM
     I              B6AYNA                          WXAYNA
     I              B6A0NA                          WXA0NA
     I              B6AXDT                          WXAXDT
      *
     I@AFREPU
      * Calendar                  RSQ Co/Date Descending
      * Renamed input format fields
     I              AFAIC3                          WYAIC3
     I              AFBCDT                          WYBCDT
     I              AFCQNB                          WYCQNB
     I              AFESNB                          WYESNB
     I              AFETNB                          WYETNB
     I              AFBZNB                          WYBZNB
     I              AFA9ST                          WYA9ST
     I              AFEINB                          WYEINB
     I              AFC5ST                          WYC5ST
     I              AFAQNB                          WYAQNB
     I              AFCMST                          WYCMST
     I              AFV9ST                          WYV9ST
     I              AFWAST                          WYWAST
     I              AFX2ST                          WYX2ST
     I              AFOJDT                          WYOJDT
     I              AFNQNX                          WYNQNX
     I              AFNRNX                          WYNRNX
     I              AFI9SX                          WYI9SX
     I              AFJASX                          WYJASX
     I              AFOKDT                          WYOKDT
     I              AFOLDT                          WYOLDT
     I              AFUVST                          WYUVST
     I              AFUWST                          WYUWST
     I              AFUXST                          WYUXST
     I              AFAATM                          WYAATM
     I              AFAYNA                          WYAYNA
     I              AFA0NA                          WYA0NA
     I              AFAXDT                          WYAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPOB51    E DSPOB5CPL0
      * UPD : Order Detail Sched-Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WGAIC3
     I              B5C4NB                          WGC4NB
     I              B5DPNB                          WGDPNB
     I              B5UENB                          WGUENB
     I              B5JGDT                          WGJGDT
     I              B5AODT                          WGAODT
     I              B5AJCD                          WGAJCD
     I              B5HGCD                          WGHGCD
     I              B5IUQT                          WGIUQT
     I              B5F3WG                          WGF3WG
     I              B5UVST                          WGUVST
     I              B5UWST                          WGUWST
     I              B5UXST                          WGUXST
     I              B5VSST                          WGVSST
     I              B5AATM                          WGAATM
     I              B5AYNA                          WGAYNA
     I              B5A0NA                          WGA0NA
     I              B5AXDT                          WGAXDT
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IYARDCS      DS                             69
     IQPDKN1    E DSPDKNCPL0
      * UPD : Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WIAIC3
     I              KNC4NB                          WIC4NB
     I              KNDPNB                          WIDPNB
     I              KNUENB                          WIUENB
     I              KNJGDT                          WIJGDT
     I              KNAODT                          WIAODT
     I              KNAJCD                          WIAJCD
     I              KNAYAA                          WIAYAA
     I              KNHGCD                          WIHGCD
     I              KNIGQT                          WIIGQT
     I              KNFLWG                          WIFLWG
     I              KNIUQT                          WIIUQT
     I              KNF3WG                          WIF3WG
     I              KNIVQT                          WIIVQT
     I              KNF4WG                          WIF4WG
     I              KNP7ST                          WIP7ST
     I              KNP8ST                          WIP8ST
     I              KNQAST                          WIQAST
     I              KNUVST                          WIUVST
     I              KNUWST                          WIUWST
     I              KNUXST                          WIUXST
     I              KNVSST                          WIVSST
     I              KNAATM                          WIAATM
     I              KNAYNA                          WIAYNA
     I              KNA0NA                          WIA0NA
     I              KNAXDT                          WIAXDT
      *
     IYBRDCS      DS                            100
     IQPDI81    E DSPDI8CPL0
      * UPD : PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WKAIC3
     I              I8V5ST                          WKV5ST
     I              I8ELDT                          WKELDT
     I              I8HGCD                          WKHGCD
     I              I8AJCD                          WKAJCD
     I              I8GPDT                          WKGPDT
     I              I8WTSP                          WKWTSP
     I              I8QTSP                          WKQTSP
     I              I8DJPC                          WKDJPC
     I              I8F8WG                          WKF8WG
     I              I8WTIN                          WKWTIN
     I              I8D5NB                          WKD5NB
     I              I8DXWG                          WKDXWG
     I              I8B2NB                          WKB2NB
     I              I8WTCN                          WKWTCN
     I              I8PSCV                          WKPSCV
     I              I8SAWT                          WKSAWT
     I              I8B9NB                          WKB9NB
     I              I8D1WG                          WKD1WG
     I              I8CBNB                          WKCBNB
     I              I8EZWG                          WKEZWG
     I              I8CCNB                          WKCCNB
     I              I8E0WG                          WKE0WG
     I              I8D6NB                          WKD6NB
     I              I8OAWT                          WKOAWT
     I              I8CDNB                          WKCDNB
     I              I8UNW2                          WKUNW2
     I              I8CENB                          WKCENB
     I              I8F9WG                          WKF9WG
     I              I8BPNB                          WKBPNB
     I              I8GAWG                          WKGAWG
     I              I8BQNB                          WKBQNB
     I              I8GBWG                          WKGBWG
     I              I8BRNB                          WKBRNB
     I              I8GCWG                          WKGCWG
     I              I8BSNB                          WKBSNB
     I              I8GDWG                          WKGDWG
     I              I8BWNB                          WKBWNB
     I              I8GEWG                          WKGEWG
     I              I8PS6U                          WKPS6U
     I              I8WCST                          WKWCST
     I              I8WPST                          WKWPST
     I              I8B5ST                          WKB5ST
     I              I8TFST                          WKTFST
     I              I8TEST                          WKTEST
     I              I8THST                          WKTHST
     I              I8UDST                          WKUDST
     I              I8UFST                          WKUFST
     I              I8UGST                          WKUGST
     I              I8UHST                          WKUHST
     I              I8B6ST                          WKB6ST
     I              I8B7ST                          WKB7ST
     I              I8DVWG                          WKDVWG
     I              I8D7NB                          WKD7NB
     I              I8FCAD                          WKFCAD
     I              I8D9NB                          WKD9NB
     I              I8DWWG                          WKDWWG
     I              I8EANB                          WKEANB
     I              I8SHWT                          WKSHWT
     I              I8EBNB                          WKEBNB
     I              I8AVWT                          WKAVWT
     I              I8ECNB                          WKECNB
     I              I8WTON                          WKWTON
     I              I8EDNB                          WKEDNB
     I              I8FNWT                          WKFNWT
     I              I8EENB                          WKEENB
     I              I8QTAS                          WKQTAS
     I              I8EFNB                          WKEFNB
     I              I8WAIO                          WKWAIO
     I              I8EGNB                          WKEGNB
     I              I8R3CD                          WKR3CD
     I              I8RGNB                          WKRGNB
     I              I8RHNB                          WKRHNB
     I              I8RINB                          WKRINB
     I              I8XRCD                          WKXRCD
     I              I8UVST                          WKUVST
     I              I8UWST                          WKUWST
     I              I8UXST                          WKUXST
     I              I8VSST                          WKVSST
     I              I8AATM                          WKAATM
     I              I8AYNA                          WKAYNA
     I              I8A0NA                          WKA0NA
     I              I8AXDT                          WKAXDT
      *
     IYCRDCS      DS                            326
     IYDRDCS      DS                            100
     IYERDCS      DS                            326
     IYFRDCS      DS                            326
     IQPOB61    E DSPOB6CPL0
      * UPD : Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          WXAIC3
     I              B6C4NB                          WXC4NB
     I              B6DPNB                          WXDPNB
     I              B6UENB                          WXUENB
     I              B6JGDT                          WXJGDT
     I              B6OONY                          WXOONY
     I              B6AODT                          WXAODT
     I              B6AJCD                          WXAJCD
     I              B6NUDT                          WXNUDT
     I              B6HGCD                          WXHGCD
     I              B6IGQT                          WXIGQT
     I              B6FLWG                          WXFLWG
     I              B6NSQT                          WXNSQT
     I              B6JQWG                          WXJQWG
     I              B6NVDT                          WXNVDT
     I              B6BUTM                          WXBUTM
     I              B6UVST                          WXUVST
     I              B6UWST                          WXUWST
     I              B6UXST                          WXUXST
     I              B6VSST                          WXVSST
     I              B6AATM                          WXAATM
     I              B6AYNA                          WXAYNA
     I              B6A0NA                          WXA0NA
     I              B6AXDT                          WXAXDT
      *
     IYGRDCS      DS                             91
     IYHRDCS      DS                            326
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Order Number
     I                                    P   3   60P1C4NB
      * I :  Order Sequence Number
     I                                    P   7   80P1DPNB
      * I :  Order Secondary Line Seq
     I                                    P   9  100P1UENB
      * I :  Item Code
     I                                    P  11  140P1HGCD
      * I :  Warehouse Code
     I                                       15  17 P1AJCD
      * I :  Age Code
     I                                       18  18 P1RPCD
      * I :  Ship Date USR
     I                                    P  19  220P1HLDT
      * I :  Quantity Ordered
     I                                    P  23  282P1AVQT
      * I :  Weight Ordered
     I                                    P  29  342P1D0WG
      * B :  Quantity Scheduled
     I                                    P  35  402P1CCQT
      * B :  Weight Scheduled
     I                                    P  41  462P1AUWG
      * I :  ATS Adj Type USR
     I                                       47  48 P1ZLST
      * I :  PSAA Program Name
     I                                       49  58 P1BXVN
      * B :  ATS Quantity Need USR
     I                                    P  59  642P1HWQT
      * B :  ATS Weight Need USR
     I                                    P  65  702P1ENWG
      * I :  Unit Weight
     I                                    P  71  762P1AIWG
      * N :  Production Date
     I                                    P  77  800P1ELDT
      * N :  Production Date RGF
     I                                    P  81  840P1GVDT
      * N :  Production Date RGT
     I                                    P  85  880P1GWDT
      * I :  ATS Adj Type USR 2
     I                                       89  90 P1QJST
      * N :  Week Number
     I                                    P  91  920P1EINB
      * N :  Accounting Year Code
     I                                    P  93  950P1ESNB
      * N :  Accounting Period Code
     I                                    P  96  970P1ETNB
      * N :  OM Week
     I                                    P  98  990P1BZNB
      * N :  Week Begin Date      USR
     I                                    P 100 1030P1LHDT
      * N :  Week End Date        USR
     I                                    P 104 1070P1LIDT
      * I :  Production Date USR
     I                                    P 108 1110P1GXDT
      * I :  Order Date
     I                                    P 112 1150P1A0DT
     IP2PARM      DS
      * FLD: Company Item
      * I :  U/M - Primary
     I                                        1   2 P2ADCD
      * I :  Fresh Chilling Time
     I                                    P   3   52P2CHTM
      * I :  Base/Conv/Loss Item
     I                                        6   7 P2QZCD
      * I :  Department Code
     I                                        8  13 P2R3CD
      * I :  Piece Count Item
     I                                       14  14 P2PCCT
      * I :  Pieces Per Bag
     I                                    P  15  180P2BDNB
      * I :  Bags Per Unit
     I                                    P  19  220P2BJNB
      * I :  Export/Domestic
     I                                       23  23 P2SUST
      * I :  Print On Schedule
     I                                       24  24 P2SVST
      * I :  Fresh Inv Allocation Seq
     I                                       25  25 P2SYST
      * I :  Fresh Sched As Ordered
     I                                       26  26 P2SZST
      * I :  Frozen Inv Allocation Seq
     I                                       27  27 P2S1ST
      * I :  Primal Group Code
     I                                       28  33 P2XRCD
     IP3PARM      DS
      * FLD: Warehouse
      * N :  Production Warehouse Code
     I                                        1   3 P3AOCD
      * I :  Warehouse Type
     I                                        4   5 P3WPST
      * I :  Warehouse Std Chill Time
     I                                        6   6 P3T1ST
      * I :  Warehouse Chill Time
     I                                    P   7   92P3DBNB
     IP4PARM      DS
      * FLD: Order Detail Schedule
      * N :  Scheduled Ship Date
     I                                    P   1   40P4AODT
      * N :  Order From Warehouse
     I                                        5   7 P4AYAA
     IP5PARM      DS
      * N :  Chill Time USR
     I                                    P   1   20P5CSHD
     IP6PARM      DS
      * I :  USR Age Code
     I                                        1   1 P6FWST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1C4NB    PARM           WP0002  70       Order Number
     C           P1DPNB    PARM           WP0003  30       Order Sequence
     C           P1UENB    PARM           WP0004  30       Order Secondary
     C           P1HGCD    PARM           WP0005  70       Item Code
     C           P1AJCD    PARM           WP0006  3        Warehouse Code
     C           P1RPCD    PARM           WP0007  1        Age Code
     C           P1HLDT    PARM           WP0008  70       Ship Date USR
     C           P1AVQT    PARM           WP0009 112       Quantity Ordere
     C           P1D0WG    PARM           WP0010 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WP0011 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WP0012 112       Weight Schedule
     C           P1ZLST    PARM           WP0013  2        ATS Adj Type US
     C           P1BXVN    PARM           WP0014 10        PSAA Program Na
     C           P1HWQT    PARM P1HWQT    WP0015 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WP0016 112       ATS Weight Need
     C           P1AIWG    PARM           WP0017 112       Unit Weight
     C           P1QJST    PARM           WP0018  2        ATS Adj Type US
     C           P1GXDT    PARM           WP0019  70       Production Date
     C           P1A0DT    PARM           WP0020  70       Order Date
     C           P2ADCD    PARM           WP0021  2        U/M - Primary
     C           P2CHTM    PARM           WP0022  52       Fresh Chilling
     C           P2QZCD    PARM           WP0023  2        Base/Conv/Loss
     C           P2R3CD    PARM           WP0024  6        Department Code
     C           P2PCCT    PARM           WP0025  1        Piece Count Ite
     C           P2BDNB    PARM           WP0026  70       Pieces Per Bag
     C           P2BJNB    PARM           WP0027  70       Bags Per Unit
     C           P2SUST    PARM           WP0028  1        Export/Domestic
     C           P2SVST    PARM           WP0029  1        Print On Schedu
     C           P2SYST    PARM           WP0030  1        Fresh Inv Alloc
     C           P2SZST    PARM           WP0031  1        Fresh Sched As
     C           P2S1ST    PARM           WP0032  1        Frozen Inv Allo
     C           P2XRCD    PARM           WP0033  6        Primal Group Co
     C           P3WPST    PARM           WP0034  2        Warehouse Type
     C           P3T1ST    PARM           WP0035  1        Warehouse Std C
     C           P3DBNB    PARM           WP0036  52       Warehouse Chill
     C           P6FWST    PARM           WP0037  1        USR Age Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * UPD ATS Order AllocSav XF
      * FP1309 Age routines with From and To Date and number of Days
     C                     EXSR UASUBR                     FP1309 Age rout
      * parms on the new fields were also changed
      * Get the Order Header and the Order Detail
      * Age Limit - Production (PAR Context) (Age Code)
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
      * par.age code=adjusted age code
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P3DBNB    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    P1GWDT           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P1RPCD    IFEQ 'A'                        *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P1RPCD    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P1RPCD    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P1RPCD    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P1RPCD    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P1RPCD    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P1RPCD    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P1RPCD    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P1RPCD    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P3DBNB    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GWDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GWDT
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P1RPCD    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P1RPCD    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P1RPCD    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P1RPCD    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P1RPCD    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P1RPCD    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P1RPCD    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P1RPCD    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P1RPCD    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P2CHTM    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    P1GWDT           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P1RPCD    IFEQ 'A'                        *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P1RPCD    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P1RPCD    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P1RPCD    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P1RPCD    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P1RPCD    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P1RPCD    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P1RPCD    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P1RPCD    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P2CHTM    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GWDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GWDT
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P1RPCD    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P1RPCD    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P1RPCD    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P1RPCD    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P1RPCD    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P1RPCD    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P1RPCD    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P1RPCD    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P1RPCD    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1GVDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1GVDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    P1ELDT           Production Date
     C                     Z-ADDP1GXDT    P1GVDT           Production Date
     C                     Z-ADDP1GXDT    P1GWDT           Production Date
     C                     END                             *FI
      * Retrieve Week End date for *JOB DATE
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
     C                     EXSR SARVGN
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
     C                     EXSR SBRVGN
      * FP1054 - new
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0001    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    P3AOCD    P      Production Ware
     C                     Z-ADDWL0003    YL0002           Accounting Comp
      * Ship Off Cut Orders -- adjust TO date to job date FP1054 04/02/09
      * CASE:
      *  - c2ANDc1
      *   |- c2    : PAR.ATS Adj Type USR is Ship Off Cut
      *   |- c1    : PAR.Production Date RGT LT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1ZLST    IFEQ 'SC'                       *IF
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD##JDT     P1GWDT           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     END                             *FI
      * Allocate Inventory, Production, and/or Standard Mix
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
      * par.usr age code is the order's age code
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P3DBNB    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    YL0004           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
     C                     Z-ADDYL0004    YL0003           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P3DBNB    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 added for ww order sched when selecting the prod dates.  5
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    YL0003           Production Date
     C                     Z-ADDP1GXDT    YL0004           Production Date
     C                     END                             *FI
      * FP1054 - FREEZER - Allow production JIT going backwards, then inv
      *  as long as the RGT is GE curr date-- changed to GE on 2/12/09.
      *  We want to allocate std or prd for current date
      * Freezer -- Alloc inventory First       5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 4/14/09 pass in lcl.prod date rgt+1 day for TO date OR job
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FZ
     C           P1ZLST    IFEQ 'OF'                       *IF
     C                     Z-ADD##JDT     YL0005           To Date
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FO
     C           P1ZLST    IFEQ 'FO'                       *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.-730 *DAY
     C           YL0003    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C           P3DBNB    MULT -1        YL0006           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0006    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
      * LCL.To Date               USR = LCL.To Date               USR + C
     C           YL0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C           P3DBNB    MULT -1        YL0006           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0006    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
      * LCL.To Date               USR = LCL.To Date               USR + C
     C           YL0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0002 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0003 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0004  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     MOVELP1AJCD    WL0006    P      Warehouse Code
     C                     Z-ADDYL0003    WL0007           Production Date
     C                     Z-ADDP1AIWG    WL0008           Unit Weight
     C                     MOVELP2PCCT    WL0009    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0010           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0011           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0012           Order Number
     C                     Z-ADDP1DPNB    WL0013           Order Sequence
     C                     Z-ADDP1UENB    WL0014           Order Secondary
     C                     Z-ADDP1AVQT    WL0015           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0016           Weight Ordered
     C                     Z-ADDP1CCQT    WL0017           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0018           Weight Schedule
     C                     Z-ADDP1HWQT    WL0019           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0020           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0021           Ship Date USR
     C                     Z-ADDYL0005    WL0022           To Date
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0018    P1AUWG           Weight Schedule
     C                     Z-ADDWL0019    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0020    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Production Date RGT GE JOB.*Job date
     C           YL0004    IFGE ##JDT                      *IF
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0011           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0012           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0013           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0014           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0140  1        Production Type
     C                     Z-ADD*ZERO     WN0141 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0142 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0143  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0144 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0145  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0146  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0147  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0148  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0149  52       Production Yiel
     C                     Z-ADD*ZERO     WN0150  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0151 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0147           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0147           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UBSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0140    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0142    WL0074           ATS Weight Avai
     C                     Z-ADDWN0143    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0142           ATS Weight Avai
     C                     Z-ADDWL0075    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0145    WL0086           Weight Allocate
     C                     Z-ADDWN0144    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0140    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0145    WL0094           Weight Allocate
     C                     Z-ADDWN0146    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0140    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0146    WL0192           Pieces Schedule
     C                     Z-ADDWN0145    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0140    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0145    WL0199           Weight Allocate
     C                     Z-ADDWN0146    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0140    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0142    WL0074           ATS Weight Avai
     C                     Z-ADDWN0143    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0142           ATS Weight Avai
     C                     Z-ADDWL0075    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0145    WL0086           Weight Allocate
     C                     Z-ADDWN0144    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0140    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0145    WL0094           Weight Allocate
     C                     Z-ADDWN0146    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0140    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0146    WL0192           Pieces Schedule
     C                     Z-ADDWN0145    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0140    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0145    WL0199           Weight Allocate
     C                     Z-ADDWN0146    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0147           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0147           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UCSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0140    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0142    WL0074           ATS Weight Avai
     C                     Z-ADDWN0143    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0142           ATS Weight Avai
     C                     Z-ADDWL0075    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0145    WL0086           Weight Allocate
     C                     Z-ADDWN0144    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0140    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0145    WL0094           Weight Allocate
     C                     Z-ADDWN0146    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0140    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0146    WL0192           Pieces Schedule
     C                     Z-ADDWN0145    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0140    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0145    WL0199           Weight Allocate
     C                     Z-ADDWN0146    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0011    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0012    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0013    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0014    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0671  1        Production Type
     C                     Z-ADD*ZERO     WN0672 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0673 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0674  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0675 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0676  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0677  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0678  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0679  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0680  52       Production Yiel
     C                     Z-ADD*ZERO     WN0681  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0682 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0678           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0678           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UDSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0671    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0673    WL0074           ATS Weight Avai
     C                     Z-ADDWN0674    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0673           ATS Weight Avai
     C                     Z-ADDWL0075    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0676    WL0086           Weight Allocate
     C                     Z-ADDWN0675    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0671    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0676    WL0094           Weight Allocate
     C                     Z-ADDWN0677    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0671    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0677    WL0192           Pieces Schedule
     C                     Z-ADDWN0676    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0671    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0676    WL0199           Weight Allocate
     C                     Z-ADDWN0677    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0671    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0673    WL0074           ATS Weight Avai
     C                     Z-ADDWN0674    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0673           ATS Weight Avai
     C                     Z-ADDWL0075    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0676    WL0086           Weight Allocate
     C                     Z-ADDWN0675    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0671    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0676    WL0094           Weight Allocate
     C                     Z-ADDWN0677    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0671    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0677    WL0192           Pieces Schedule
     C                     Z-ADDWN0676    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0671    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0676    WL0199           Weight Allocate
     C                     Z-ADDWN0677    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0678           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0678           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UESUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0671    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0673    WL0074           ATS Weight Avai
     C                     Z-ADDWN0674    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0673           ATS Weight Avai
     C                     Z-ADDWL0075    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0676    WL0086           Weight Allocate
     C                     Z-ADDWN0675    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0671    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0676    WL0094           Weight Allocate
     C                     Z-ADDWN0677    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0671    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0677    WL0192           Pieces Schedule
     C                     Z-ADDWN0676    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0671    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0676    WL0199           Weight Allocate
     C                     Z-ADDWN0677    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * 7/14/09 added whse comp
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0011           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0012           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0013           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0014           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0683  1        Production Type
     C                     Z-ADD*ZERO     WN0684 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0685 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0686  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0687 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0688  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0689  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0690  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0691  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0692  52       Production Yiel
     C                     Z-ADD*ZERO     WN0693  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0694 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0690           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0690           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UFSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0683    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0685    WL0074           ATS Weight Avai
     C                     Z-ADDWN0686    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0685           ATS Weight Avai
     C                     Z-ADDWL0075    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0688    WL0086           Weight Allocate
     C                     Z-ADDWN0687    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0683    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0688    WL0094           Weight Allocate
     C                     Z-ADDWN0689    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0683    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0689    WL0192           Pieces Schedule
     C                     Z-ADDWN0688    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0683    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0688    WL0199           Weight Allocate
     C                     Z-ADDWN0689    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0683    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0685    WL0074           ATS Weight Avai
     C                     Z-ADDWN0686    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0685           ATS Weight Avai
     C                     Z-ADDWL0075    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0688    WL0086           Weight Allocate
     C                     Z-ADDWN0687    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0683    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0688    WL0094           Weight Allocate
     C                     Z-ADDWN0689    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0683    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0689    WL0192           Pieces Schedule
     C                     Z-ADDWN0688    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0683    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0688    WL0199           Weight Allocate
     C                     Z-ADDWN0689    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0690           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0690           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UGSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0683    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0685    WL0074           ATS Weight Avai
     C                     Z-ADDWN0686    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0685           ATS Weight Avai
     C                     Z-ADDWL0075    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0688    WL0086           Weight Allocate
     C                     Z-ADDWN0687    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0683    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0688    WL0094           Weight Allocate
     C                     Z-ADDWN0689    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0683    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0689    WL0192           Pieces Schedule
     C                     Z-ADDWN0688    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0683    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0688    WL0199           Weight Allocate
     C                     Z-ADDWN0689    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0011    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0012    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0013    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0014    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Alloc prod or std
      * CASE: LCL.Production Date RGT GT JOB.*Job date
     C           YL0004    IFGT ##JDT                      *IF
      * 4/10/09  Call UPD Allocate Prd      IF
      *
     C                     MOVEL*BLANK    WN0695  1        Production Type
     C                     Z-ADD*ZERO     WN0696 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0697 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0698  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0699 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0700  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0701  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0702  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0703  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0704  52       Production Yiel
     C                     Z-ADD*ZERO     WN0705  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0706 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0702           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0702           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UHSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0695    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0697    WL0074           ATS Weight Avai
     C                     Z-ADDWN0698    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0697           ATS Weight Avai
     C                     Z-ADDWL0075    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0700    WL0086           Weight Allocate
     C                     Z-ADDWN0699    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0695    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0700    WL0094           Weight Allocate
     C                     Z-ADDWN0701    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0695    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0701    WL0192           Pieces Schedule
     C                     Z-ADDWN0700    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0695    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0700    WL0199           Weight Allocate
     C                     Z-ADDWN0701    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0695    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0697    WL0074           ATS Weight Avai
     C                     Z-ADDWN0698    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0697           ATS Weight Avai
     C                     Z-ADDWL0075    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0700    WL0086           Weight Allocate
     C                     Z-ADDWN0699    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0695    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0700    WL0094           Weight Allocate
     C                     Z-ADDWN0701    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0695    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0701    WL0192           Pieces Schedule
     C                     Z-ADDWN0700    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0695    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0700    WL0199           Weight Allocate
     C                     Z-ADDWN0701    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0702           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0702           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UISUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0695    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0697    WL0074           ATS Weight Avai
     C                     Z-ADDWN0698    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0697           ATS Weight Avai
     C                     Z-ADDWL0075    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0700    WL0086           Weight Allocate
     C                     Z-ADDWN0699    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0695    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0700    WL0094           Weight Allocate
     C                     Z-ADDWN0701    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0695    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0701    WL0192           Pieces Schedule
     C                     Z-ADDWN0700    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0695    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0700    WL0199           Weight Allocate
     C                     Z-ADDWN0701    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0001  3        Warehouse Code
     C                     PARM P1AIC3    WQ0002  30       Company Number
     C                     PARM P1HGCD    WQ0003  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0004  70       Production Date
     C                     PARM P2ADCD    WQ0005  2        U/M - Primary
     C                     PARM P1AIWG    WQ0006 112       Unit Weight
     C                     PARM P2CHTM    WQ0007  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0008  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0009  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0010  70       Bags Per Unit
     C                     PARM P3WPST    WQ0011  2        Warehouse Type
     C                     PARM P3T1ST    WQ0012  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0013  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0014  70       Order Number
     C                     PARM P1DPNB    WQ0015  30       Order Sequence
     C                     PARM P1UENB    WQ0016  30       Order Secondary
     C                     PARM YL0003    WQ0017  70       Production Date
     C                     PARM YL0004    WQ0018  70       Production Date
     C                     PARM P1AVQT    WQ0019 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0020 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0021 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0022 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0023 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0024 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0025  70       Ship Date USR
     C                     PARM P1QJST    WQ0026  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0027 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0028  3        Order From Ware
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Alloc Inv --- if not Allocating Inv first      5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
      * CASE: PAR.Weight Ordered NE PAR.Weight Scheduled
     C           P1D0WG    IFNE P1AUWG                     *IF
      * FP1054 4/14/09 pass in lcl.prod date rgt+1 day for TO date OR job
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FZ
     C           P1ZLST    IFEQ 'OF'                       *IF
     C                     Z-ADD##JDT     YL0005           To Date
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FO
     C           P1ZLST    IFEQ 'FO'                       *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.-730 *DAY
     C           YL0003    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C           P3DBNB    MULT -1        YL0006           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0006    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
      * LCL.To Date               USR = LCL.To Date               USR + C
     C           YL0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C           P3DBNB    MULT -1        YL0006           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0006    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
      * LCL.To Date               USR = LCL.To Date               USR + C
     C           YL0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0707 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0708 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0709 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0710  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     MOVELP1AJCD    WL0006    P      Warehouse Code
     C                     Z-ADDYL0003    WL0007           Production Date
     C                     Z-ADDP1AIWG    WL0008           Unit Weight
     C                     MOVELP2PCCT    WL0009    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0010           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0011           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0012           Order Number
     C                     Z-ADDP1DPNB    WL0013           Order Sequence
     C                     Z-ADDP1UENB    WL0014           Order Secondary
     C                     Z-ADDP1AVQT    WL0015           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0016           Weight Ordered
     C                     Z-ADDP1CCQT    WL0017           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0018           Weight Schedule
     C                     Z-ADDP1HWQT    WL0019           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0020           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0021           Ship Date USR
     C                     Z-ADDYL0005    WL0022           To Date
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0018    P1AUWG           Weight Schedule
     C                     Z-ADDWL0019    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0020    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Schedule As Order or Order Allocate
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * SCHEDULE AS ORDERED - WHICH SHOULDNT / CANNOT HAPPEN
     C                     EXSR UJSUBR                     SCHEDULE AS ORD
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Alloc INV for any order, not just those in the curr week.
      * FP1054 added for ww order sched when selecting the prod dates.  8
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    YL0003           Production Date
     C                     Z-ADDP1GXDT    YL0004           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    YL0003           Production Date
     C                     Z-ADDP1GWDT    YL0004           Production Date
     C                     END                             *FI
      * Alloc inventory if not allocating Inventory LAST     5/26/09
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.ATS Adj Type USR is Order Allocate-Inv Last
      *   |- c2    : PAR.Production Date USR is Entered
      *   '-
     C           P1ZLST    IFEQ 'OL'                       *IF
     C           P1GXDT    ORNE *ZERO                      *OR
     C                     ELSE
      * CASE: *OTHERWISE
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P2CHTM    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    YL0004           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
     C                     Z-ADDYL0004    YL0003           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P2CHTM    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *  FP1054 4/14/09 pass in job.*job date for TO date
      *
     C                     Z-ADD*ZERO     WN0763 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0764 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0765 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0766  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     MOVELP1AJCD    WL0006    P      Warehouse Code
     C                     Z-ADDYL0003    WL0007           Production Date
     C                     Z-ADDP1AIWG    WL0008           Unit Weight
     C                     MOVELP2PCCT    WL0009    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0010           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0011           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0012           Order Number
     C                     Z-ADDP1DPNB    WL0013           Order Sequence
     C                     Z-ADDP1UENB    WL0014           Order Secondary
     C                     Z-ADDP1AVQT    WL0015           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0016           Weight Ordered
     C                     Z-ADDP1CCQT    WL0017           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0018           Weight Schedule
     C                     Z-ADDP1HWQT    WL0019           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0020           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0021           Ship Date USR
     C                     Z-ADD##JDT     WL0022           To Date
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0018    P1AUWG           Weight Schedule
     C                     Z-ADDWL0019    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0020    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * 7/14 dont need whse comp because fresh base items are made at
      * both plants
      *
     C                     MOVEL*BLANK    WN0767  1        Production Type
     C                     Z-ADD*ZERO     WN0768 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0769 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0770  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0771 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0772  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0773  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0774  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0775  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0776  52       Production Yiel
     C                     Z-ADD*ZERO     WN0777  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0778 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0774           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0774           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR USSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0767    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0769    WL0074           ATS Weight Avai
     C                     Z-ADDWN0770    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0769           ATS Weight Avai
     C                     Z-ADDWL0075    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0772    WL0086           Weight Allocate
     C                     Z-ADDWN0771    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0767    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0772    WL0094           Weight Allocate
     C                     Z-ADDWN0773    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0767    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0773    WL0192           Pieces Schedule
     C                     Z-ADDWN0772    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0767    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0772    WL0199           Weight Allocate
     C                     Z-ADDWN0773    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0767    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0769    WL0074           ATS Weight Avai
     C                     Z-ADDWN0770    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0769           ATS Weight Avai
     C                     Z-ADDWL0075    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0772    WL0086           Weight Allocate
     C                     Z-ADDWN0771    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0767    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0772    WL0094           Weight Allocate
     C                     Z-ADDWN0773    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0767    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0773    WL0192           Pieces Schedule
     C                     Z-ADDWN0772    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0767    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0772    WL0199           Weight Allocate
     C                     Z-ADDWN0773    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0774           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0774           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UTSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0767    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0769    WL0074           ATS Weight Avai
     C                     Z-ADDWN0770    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0769           ATS Weight Avai
     C                     Z-ADDWL0075    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0772    WL0086           Weight Allocate
     C                     Z-ADDWN0771    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0767    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0772    WL0094           Weight Allocate
     C                     Z-ADDWN0773    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0767    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0773    WL0192           Pieces Schedule
     C                     Z-ADDWN0772    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0767    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0772    WL0199           Weight Allocate
     C                     Z-ADDWN0773    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * 7/14 dont need whse comp because fresh converted will already hav
      *   weight std from the std mix
      *
     C                     MOVEL*BLANK    WN0779  1        Production Type
     C                     Z-ADD*ZERO     WN0780 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0781 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0782  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0783 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0784  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0785  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0786  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0787  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0788  52       Production Yiel
     C                     Z-ADD*ZERO     WN0789  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0790 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0786           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0786           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UUSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0003    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0779    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0781    WL0074           ATS Weight Avai
     C                     Z-ADDWN0782    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0781           ATS Weight Avai
     C                     Z-ADDWL0075    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0784    WL0086           Weight Allocate
     C                     Z-ADDWN0783    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0779    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0784    WL0094           Weight Allocate
     C                     Z-ADDWN0785    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0779    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0785    WL0192           Pieces Schedule
     C                     Z-ADDWN0784    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0779    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0784    WL0199           Weight Allocate
     C                     Z-ADDWN0785    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0779    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0781    WL0074           ATS Weight Avai
     C                     Z-ADDWN0782    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0781           ATS Weight Avai
     C                     Z-ADDWL0075    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0784    WL0086           Weight Allocate
     C                     Z-ADDWN0783    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0779    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0784    WL0094           Weight Allocate
     C                     Z-ADDWN0785    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0779    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0785    WL0192           Pieces Schedule
     C                     Z-ADDWN0784    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0779    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0784    WL0199           Weight Allocate
     C                     Z-ADDWN0785    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0786           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0786           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0004    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UVSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0003    YL0025           Production Date
     C                     Z-ADDYL0004    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0003    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0004    IFLT ##JDT                      *IF
     C                     Z-ADDYL0004    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0004    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0779    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0781    WL0074           ATS Weight Avai
     C                     Z-ADDWN0782    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0781           ATS Weight Avai
     C                     Z-ADDWL0075    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0784    WL0086           Weight Allocate
     C                     Z-ADDWN0783    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0779    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0784    WL0094           Weight Allocate
     C                     Z-ADDWN0785    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0779    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0785    WL0192           Pieces Schedule
     C                     Z-ADDWN0784    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0779    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0784    WL0199           Weight Allocate
     C                     Z-ADDWN0785    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0085  3        Warehouse Code
     C                     PARM P1AIC3    WQ0086  30       Company Number
     C                     PARM P1HGCD    WQ0087  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0088  70       Production Date
     C                     PARM P2ADCD    WQ0089  2        U/M - Primary
     C                     PARM P1AIWG    WQ0090 112       Unit Weight
     C                     PARM P2CHTM    WQ0091  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0092  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0093  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0094  70       Bags Per Unit
     C                     PARM P3WPST    WQ0095  2        Warehouse Type
     C                     PARM P3T1ST    WQ0096  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0097  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0098  70       Order Number
     C                     PARM P1DPNB    WQ0099  30       Order Sequence
     C                     PARM P1UENB    WQ0100  30       Order Secondary
     C                     PARM YL0003    WQ0101  70       Production Date
     C                     PARM YL0004    WQ0102  70       Production Date
     C                     PARM P1AVQT    WQ0103 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0104 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0105 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0106 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0107 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0108 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0109  70       Ship Date USR
     C                     PARM P1QJST    WQ0110  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0111 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0112  3        Order From Ware
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * Alloc inventory now if allocating Inventory LAST     5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P2CHTM    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    YL0004           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
     C                     Z-ADDYL0004    YL0003           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P2CHTM    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *  FP1054 4/14/09 pass in job.*job date for TO date
      *
     C                     Z-ADD*ZERO     WN0791 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0792 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0793 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0794  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     MOVELP1AJCD    WL0006    P      Warehouse Code
     C                     Z-ADDYL0003    WL0007           Production Date
     C                     Z-ADDP1AIWG    WL0008           Unit Weight
     C                     MOVELP2PCCT    WL0009    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0010           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0011           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0012           Order Number
     C                     Z-ADDP1DPNB    WL0013           Order Sequence
     C                     Z-ADDP1UENB    WL0014           Order Secondary
     C                     Z-ADDP1AVQT    WL0015           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0016           Weight Ordered
     C                     Z-ADDP1CCQT    WL0017           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0018           Weight Schedule
     C                     Z-ADDP1HWQT    WL0019           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0020           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0021           Ship Date USR
     C                     Z-ADD##JDT     WL0022           To Date
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0018    P1AUWG           Weight Schedule
     C                     Z-ADDWL0019    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0020    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WABCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDP1AIC3    WAAIC3           Company Number
     C                     Z-ADD##JDT     WABCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSA     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUCQNB           Julian Date
     C                     Z-ADD*ZERO     P1ESNB           Accounting Year
     C                     Z-ADD*ZERO     P1ETNB           Accounting Peri
     C                     Z-ADD*ZERO     P1BZNB           OM Week
     C                     MOVEL*BLANK    WUA9ST           Day of Week
     C                     Z-ADD*ZERO     P1EINB           Week Number
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWACQNB    WUCQNB           Julian Date
     C                     Z-ADDWAESNB    P1ESNB           Accounting Year
     C                     Z-ADDWAETNB    P1ETNB           Accounting Peri
     C                     Z-ADDWABZNB    P1BZNB           OM Week
     C                     MOVELWAA9ST    WUA9ST           Day of Week
     C                     Z-ADDWAEINB    P1EINB           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSB01           Company Number
     C           *LIKE     DEFN WBESNB    WQSB02           Accounting Year
     C           *LIKE     DEFN WBETNB    WQSB03           Accounting Peri
     C           *LIKE     DEFN WBEINB    WQSB04           Week Number
     C           *LIKE     DEFN WBA9ST    WQSB05           Day of Week
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           WQSB02           Accounting Year
     C                     KFLD           WQSB03           Accounting Peri
     C                     KFLD           WQSB04           Week Number
     C                     KFLD           WQSB05           Day of Week
      * Setup key
     C                     Z-ADDP1AIC3    WQSB01           Company Number
     C                     Z-ADDP1ESNB    WQSB02           Accounting Year
     C                     Z-ADDP1ETNB    WQSB03           Accounting Peri
     C                     Z-ADDP1EINB    WQSB04           Week Number
     C                     MOVEL'7'       WQSB05           Day of Week
      * Establish starting position
     C           KRSSB     SETLL@AFREQ0                    *
     C           KRSSB     READE@AFREQ0                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBBCDT    P1LIDT           Post to G/L Dat
     C           KRSSB     READE@AFREQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Productin Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0001    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Production Ware
     C                     Z-ADD*ZERO     WL0003           Accounting Comp
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCAOCD    WL0002           Production Ware
     C                     Z-ADDWCBTC3    WL0003           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0005 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0006 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0007  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0008 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0009  92       Weight Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0008           Quantity Alloca
     C                     Z-ADD*ZERO     WN0009           Weight Allocate
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSD02           Item Code
     C           *LIKE     DEFN WDAJCD    WQSD03           Warehouse Code
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
     C                     KFLD           WDELDT           Production Date
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0004    WQSD01           Company Number
     C                     Z-ADDWL0005    WQSD02           Item Code
     C                     MOVELWL0006    WQSD03           Warehouse Code
     C                     Z-ADDWL0007    WDELDT           Production Date
      * Establish starting position
     C           KPSSD     SETLL@CWCPQW                    *
     C           KRSSD     READE@CWCPQW                  90*
      * Data record not found
     C   90                MOVEL'USR3238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * FP1054 this used to quit when the job date was reached.
      *   now it quits when par.to date is reached. for the freezer it wi
      *   be the freeze time number of days before the sched ship.
      *   For Fresh, it will be the job date
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Production Date GE PAR.To Date               USR
      *   |- c2    : PAR.ATS Quantity Need USR is Less than or equal zero
      *   '-
     C           WDELDT    IFGE WL0022                     *IF
     C           WL0019    ORLE *ZERO                      *OR
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SERVGN
     C           WDARQT    SUB  YL0007    WN0005           ATS Quantity Av
     C           WDACWG    SUB  YL0008    WN0006           ATS Weight Avai
      * Allocate Available Inventory
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0005    IFGT *ZERO                      *IF
      * Allocate
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WL0019    IFGT WN0005                     *IF
     C                     ADD  WN0005    WL0017           Quantity Schedu
     C           WN0005    MULT WL0008    WN0006           ATS Weight Avai
     C                     ADD  WN0006    WL0018           Weight Schedule
     C                     Z-ADDWN0005    WN0008           Quantity Alloca
     C                     Z-ADDWN0006    WN0009           Weight Allocate
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WL0019    IFLE WN0005                     *IF
     C                     ADD  WL0019    WL0017           Quantity Schedu
     C                     ADD  WL0020    WL0018           Weight Schedule
     C                     Z-ADDWL0019    WN0008           Quantity Alloca
     C           WN0008    MULT WL0008    WN0009           Weight Allocate
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     WL0017           Quantity Schedu
     C                     ADD  *ZERO     WL0018           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SFRVGN
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
     C                     EXSR SJRVGN
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
     C                     EXSR SNRVGN
     C                     END                             *FI
     C           WL0015    SUB  WL0017    WL0019           ATS Quantity Ne
     C           WL0016    SUB  WL0018    WL0020           ATS Weight Need
     C           KRSSD     READE@CWCPQW                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0007           OD Quantity Inv
     C                     Z-ADD*ZERO     YL0008           OD Weight Inv S
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEAIC3    WQSE01           Company Number
     C           *LIKE     DEFN WEHGCD    WQSE02           Item Code
     C           *LIKE     DEFN WEAJCD    WQSE03           Warehouse Code
     C           *LIKE     DEFN WEJGDT    WQSE04           OD Production D
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Item Code
     C                     KFLD           WQSE03           Warehouse Code
     C                     KFLD           WQSE04           OD Production D
      * Setup key
     C                     Z-ADDWDAIC3    WQSE01           Company Number
     C                     Z-ADDWDHGCD    WQSE02           Item Code
     C                     MOVELWDAJCD    WQSE03           Warehouse Code
     C                     Z-ADDWDELDT    WQSE04           OD Production D
      * Establish starting position
     C           KRSSE     SETLL@B5CPM4                    *
     C           KRSSE     READE@B5CPM4                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WEIUQT    YL0007           OD Quantity Inv
     C                     ADD  WEF3WG    YL0008           OD Weight Inv S
     C           KRSSE     READE@B5CPM4                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0010  1        EDI Status 1
     C                     MOVEL*BLANK    WN0011  1        EDI Status 2
     C                     MOVEL*BLANK    WN0012  1        EDI Status 3
     C                     MOVEL*BLANK    WN0013  1        Record Status
     C                     Z-ADD*ZERO     WN0014  60       Job Time
     C                     MOVEL*BLANK    WN0015 10        User Id
     C                     MOVEL*BLANK    WN0016 10        Job Name
     C                     Z-ADD*ZERO     WN0017  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFC4NB           Order Number
     C                     KFLD           WFDPNB           Order Sequence
     C                     KFLD           WFUENB           Order Secondary
     C                     KFLD           WFJGDT           OD Production D
      * Setup key
     C                     Z-ADDWDAIC3    WFAIC3           Company Number
     C                     Z-ADDWL0012    WFC4NB           Order Number
     C                     Z-ADDWL0013    WFDPNB           Order Sequence
     C                     Z-ADDWL0014    WFUENB           Order Secondary
     C                     Z-ADDWDELDT    WFJGDT           OD Production D
      * Establish starting position
     C           KRSSF     CHAIN@B5CPM2              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3150' W0RTN   7
      * USER: Processing if Data record not found
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
     C                     EXSR SGCRRC
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WFIUQT    ADD  WN0008    YL0009           OD Quantity Inv
     C           WFF3WG    ADD  WN0009    YL0010           OD Weight Inv S
      * CASE: LCL.OD Quantity Inv Sched is LE Zero
     C           YL0009    IFLE *ZERO                      *IF
      * Delete Order Detail Sched - Order Detail Sched-Inv  * 
     C                     EXSR SHDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
     C                     EXSR SICHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCRRC    BEGSR
      *================================================================
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B5CPM1
     C                     Z-ADDWDAIC3    WGAIC3           Company Number
     C                     Z-ADDWL0012    WGC4NB           Order Number
     C                     Z-ADDWL0013    WGDPNB           Order Sequence
     C                     Z-ADDWL0014    WGUENB           Order Secondary
     C                     Z-ADDWDELDT    WGJGDT           OD Production D
     C                     Z-ADDWL0021    WGAODT           Scheduled Ship
     C                     MOVELWDAJCD    WGAJCD           Warehouse Code
     C                     Z-ADDWDHGCD    WGHGCD           Item Code
     C                     Z-ADDWN0008    WGIUQT           OD Quantity Inv
     C                     Z-ADDWN0009    WGF3WG           OD Weight Inv S
     C                     MOVELWN0010    WGUVST           EDI Status 1
     C                     MOVELWN0011    WGUWST           EDI Status 2
     C                     MOVELWN0012    WGUXST           EDI Status 3
     C                     MOVELWN0013    WGVSST           Record Status
     C                     Z-ADDWN0014    WGAATM           Job Time
     C                     MOVELWN0015    WGAYNA           User Id
     C                     MOVELWN0016    WGA0NA           Job Name
     C                     Z-ADDWN0017    WGAXDT           Job Date
      *
      * USER: Processing before Data update
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WGVSST           Record Status
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
     C           KLCRSG    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSG    SETLL@B5CPM1                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3151' W0RTN   7
      * Send message 'Order Detail Sched-Inv EX'
     C                     MOVEL'USR3151' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C                     WRITE@B5CPM1                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHDLRC    BEGSR
      *================================================================
      * Delete Order Detail Sched - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B5CPM1
     C                     Z-ADDWFAIC3    WGAIC3           Company Number
     C                     Z-ADDWFC4NB    WGC4NB           Order Number
     C                     Z-ADDWFDPNB    WGDPNB           Order Sequence
     C                     Z-ADDWFUENB    WGUENB           Order Secondary
     C                     Z-ADDWFJGDT    WGJGDT           OD Production D
      *
     C           KLDLSH    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLDLSH    CHAIN@B5CPM1              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B5CPM1                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0018  1        EDI Status 1
     C                     MOVEL*BLANK    WN0019  1        EDI Status 2
     C                     MOVEL*BLANK    WN0020  1        EDI Status 3
     C                     MOVEL*BLANK    WN0021  1        Record Status
     C                     Z-ADD*ZERO     WN0022  60       Job Time
     C                     MOVEL*BLANK    WN0023 10        User Id
     C                     MOVEL*BLANK    WN0024 10        Job Name
     C                     Z-ADD*ZERO     WN0025  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @B5CPM1
     C                     Z-ADDWFAIC3    WGAIC3           Company Number
     C                     Z-ADDWFC4NB    WGC4NB           Order Number
     C                     Z-ADDWFDPNB    WGDPNB           Order Sequence
     C                     Z-ADDWFUENB    WGUENB           Order Secondary
     C                     Z-ADDWFJGDT    WGJGDT           OD Production D
      *
     C           KLCHSI    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLCHSI    CHAIN@B5CPM1              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB51    YARDCS
      * Move non-key fields to @B5CPM1
     C                     Z-ADDWFAODT    WGAODT           Scheduled Ship
     C                     MOVELWDAJCD    WGAJCD    P      Warehouse Code
     C                     Z-ADDWDHGCD    WGHGCD           Item Code
     C                     Z-ADDYL0009    WGIUQT           OD Quantity Inv
     C                     Z-ADDYL0010    WGF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##JOB     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@B5CPM1                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB5CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0026 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0027 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0028 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0029 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0030 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0031 112       OD Avg Piece Wg
     C                     MOVEL*BLANK    WN0032  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0033  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0034  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0035  1        EDI Status 1
     C                     MOVEL*BLANK    WN0036  1        EDI Status 2
     C                     MOVEL*BLANK    WN0037  1        EDI Status 3
     C                     MOVEL*BLANK    WN0038  1        Record Status
     C                     Z-ADD*ZERO     WN0039  60       Job Time
     C                     MOVEL*BLANK    WN0040 10        User Id
     C                     MOVEL*BLANK    WN0041 10        Job Name
     C                     Z-ADD*ZERO     WN0042  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WHAIC3           Company Number
     C                     KFLD           WHC4NB           Order Number
     C                     KFLD           WHDPNB           Order Sequence
     C                     KFLD           WHUENB           Order Secondary
     C                     KFLD           WHJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0004    WHAIC3           Company Number
     C                     Z-ADDWL0012    WHC4NB           Order Number
     C                     Z-ADDWL0013    WHDPNB           Order Sequence
     C                     Z-ADDWL0014    WHUENB           Order Secondary
     C                     Z-ADD##JDT     WHJGDT           OD Production D
      * Establish starting position
     C           KRSSJ     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0004    WL0023           Company Number
     C                     Z-ADDWL0012    WL0024           Order Number
     C                     Z-ADDWL0013    WL0025           Order Sequence
     C                     Z-ADDWL0014    WL0026           Order Secondary
     C                     Z-ADD##JDT     WL0027           OD Production D
     C                     Z-ADDWL0021    WL0028           Scheduled Ship
     C                     MOVELWL0006    WL0029    P      Warehouse Code
     C                     MOVELWL0006    WL0030    P      Order From Ware
     C                     Z-ADDWL0005    WL0031           Item Code
     C                     Z-ADDWN0026    WL0032           OD Qty/Cnsmd Pi
     C                     Z-ADDWN0027    WL0033           OD Weight Sched
     C                     Z-ADDWN0008    WL0034           OD Quantity Inv
     C                     Z-ADDWN0009    WL0035           OD Weight Inv S
     C                     Z-ADDWN0030    WL0036           OD Quantity Unu
     C                     Z-ADDWN0031    WL0037           OD Avg Piece Wg
     C                     MOVELWN0032    WL0038    P      OD Added to Sch
     C                     MOVELWN0033    WL0039    P      OD Reallocate S
     C                     MOVELWN0034    WL0040    P      OD Status Unuse
     C                     MOVELWN0035    WL0041    P      EDI Status 1
     C                     MOVELWN0036    WL0042    P      EDI Status 2
     C                     MOVELWN0037    WL0043    P      EDI Status 3
     C                     MOVELWN0038    WL0044    P      Record Status
     C                     Z-ADDWN0039    WL0045           Job Time
     C                     MOVELWN0040    WL0046    P      User Id
     C                     MOVELWN0041    WL0047    P      Job Name
     C                     Z-ADDWN0042    WL0048           Job Date
     C                     EXSR SKCRRC
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WHIUQT    ADD  WN0008    WN0028           OD Quantity Inv
     C           WHF3WG    ADD  WN0009    WN0029           OD Weight Inv S
      * CASE: PAR.OD Quantity Inv Sched is LE Zero
     C           WN0028    IFLE *ZERO                      *IF
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0049           Company Number
     C                     Z-ADDWHC4NB    WL0050           Order Number
     C                     Z-ADDWHDPNB    WL0051           Order Sequence
     C                     Z-ADDWHUENB    WL0052           Order Secondary
     C                     Z-ADDWHJGDT    WL0053           OD Production D
     C                     EXSR SLDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
     C                     EXSR SMCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKCRRC    BEGSR
      *================================================================
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @KNCPHN
     C                     Z-ADDWL0023    WIAIC3           Company Number
     C                     Z-ADDWL0024    WIC4NB           Order Number
     C                     Z-ADDWL0025    WIDPNB           Order Sequence
     C                     Z-ADDWL0026    WIUENB           Order Secondary
     C                     Z-ADDWL0027    WIJGDT           OD Production D
     C                     Z-ADDWL0028    WIAODT           Scheduled Ship
     C                     MOVELWL0029    WIAJCD           Warehouse Code
     C                     MOVELWL0030    WIAYAA           Order From Ware
     C                     Z-ADDWL0031    WIHGCD           Item Code
     C                     Z-ADDWL0032    WIIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0033    WIFLWG           OD Weight Sched
     C                     Z-ADDWL0034    WIIUQT           OD Quantity Inv
     C                     Z-ADDWL0035    WIF3WG           OD Weight Inv S
     C                     Z-ADDWL0036    WIIVQT           OD Quantity Unu
     C                     Z-ADDWL0037    WIF4WG           OD Avg Piece Wg
     C                     MOVELWL0038    WIP7ST           OD Added to Sch
     C                     MOVELWL0039    WIP8ST           OD Reallocate S
     C                     MOVELWL0040    WIQAST           OD Status Unuse
     C                     MOVELWL0041    WIUVST           EDI Status 1
     C                     MOVELWL0042    WIUWST           EDI Status 2
     C                     MOVELWL0043    WIUXST           EDI Status 3
     C                     MOVELWL0044    WIVSST           Record Status
     C                     Z-ADDWL0045    WIAATM           Job Time
     C                     MOVELWL0046    WIAYNA           User Id
     C                     MOVELWL0047    WIA0NA           Job Name
     C                     Z-ADDWL0048    WIAXDT           Job Date
      *
      * USER: Processing before Data update
      * C01643 8/05/11 calc to use later when alloc/dealloc for this orde
      * CASE: DB1.OD Qty/Cnsmd Pieces Sched is Greater than zero
     C           WIIGQT    IFGT *ZERO                      *IF
     C           WIFLWG    DIV  WIIGQT    WIF4WG    H      OD Avg Piece Wg
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WIF4WG           OD Avg Piece Wg
     C                     END                             *FI
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WIVSST           Record Status
     C                     Z-ADD##JTM     WIAATM           Job Time
     C                     MOVEL##USR     WIAYNA           User Id
     C                     MOVEL##JOB     WIA0NA           Job Name
     C                     Z-ADD##JDT     WIAXDT           Job Date
     C           KLCRSK    KLIST
     C                     KFLD           WIAIC3           Company Number
     C                     KFLD           WIC4NB           Order Number
     C                     KFLD           WIDPNB           Order Sequence
     C                     KFLD           WIUENB           Order Secondary
     C                     KFLD           WIJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSK    SETLL@KNCPHN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2239' W0RTN   7
      * Send message 'Order Detail Schedule  EX'
     C                     MOVEL'USR2239' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C                     WRITE@KNCPHN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLDLRC    BEGSR
      *================================================================
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0049    WIAIC3           Company Number
     C                     Z-ADDWL0050    WIC4NB           Order Number
     C                     Z-ADDWL0051    WIDPNB           Order Sequence
     C                     Z-ADDWL0052    WIUENB           Order Secondary
     C                     Z-ADDWL0053    WIJGDT           OD Production D
      *
     C           KLDLSL    KLIST
     C                     KFLD           WIAIC3           Company Number
     C                     KFLD           WIC4NB           Order Number
     C                     KFLD           WIDPNB           Order Sequence
     C                     KFLD           WIUENB           Order Secondary
     C                     KFLD           WIJGDT           OD Production D
     C           KLDLSL    CHAIN@KNCPHN              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SLEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@KNCPHN                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMCHRC    BEGSR
      *================================================================
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0043  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0044  3        Warehouse Code
     C                     MOVEL*BLANK    WN0045  3        Order From Ware
     C                     Z-ADD*ZERO     WN0046  70       Item Code
     C                     Z-ADD*ZERO     WN0047 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0048 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0049 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0050 112       OD Avg Piece Wg
     C                     MOVEL*BLANK    WN0051  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0052  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0053  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0054  1        EDI Status 1
     C                     MOVEL*BLANK    WN0055  1        EDI Status 2
     C                     MOVEL*BLANK    WN0056  1        EDI Status 3
     C                     MOVEL*BLANK    WN0057  1        Record Status
     C                     Z-ADD*ZERO     WN0058  60       Job Time
     C                     MOVEL*BLANK    WN0059 10        User Id
     C                     MOVEL*BLANK    WN0060 10        Job Name
     C                     Z-ADD*ZERO     WN0061  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0004    WIAIC3           Company Number
     C                     Z-ADDWL0012    WIC4NB           Order Number
     C                     Z-ADDWL0013    WIDPNB           Order Sequence
     C                     Z-ADDWL0014    WIUENB           Order Secondary
     C                     Z-ADD##JDT     WIJGDT           OD Production D
      *
     C           KLCHSM    KLIST
     C                     KFLD           WIAIC3           Company Number
     C                     KFLD           WIC4NB           Order Number
     C                     KFLD           WIDPNB           Order Sequence
     C                     KFLD           WIUENB           Order Secondary
     C                     KFLD           WIJGDT           OD Production D
     C           KLCHSM    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SMEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YBRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0028    WIIUQT           OD Quantity Inv
     C                     Z-ADDWN0029    WIF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WIAATM           Job Time
     C                     MOVEL##USR     WIAYNA           User Id
     C                     MOVEL##PGM     WIA0NA           Job Name
     C                     Z-ADD##JDT     WIAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0062  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0063  70       PS Pieces Inv A
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJV5ST           Production Type
     C                     KFLD           WJELDT           Production Date
     C                     KFLD           WJHGCD           Item Code
     C                     KFLD           WJAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0004    WJAIC3           Company Number
     C                     MOVEL'S'       WJV5ST           Production Type
     C                     Z-ADD##JDT     WJELDT           Production Date
     C                     Z-ADDWL0005    WJHGCD           Item Code
     C                     MOVELWL0006    WJAJCD           Warehouse Code
      * Establish starting position
     C           KRSSN     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WJUNW2    ADD  WN0009    WN0062           PS Weight Inv A
      * PS Pieces Inv Allocated
      * CASE: PAR.Piece Count Item is yes
     C           WL0009    IFEQ 'Y'                        *IF
      * Pieces Inv Allocated
      * PAR.PS Pieces Inv Allocated =
      *    *COMPUTE (x1 + (x2 * (x3 * x4)))
      * x1    : DB1.PS Pieces Inv Allocated
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Bags Per Unit
     C           WL0010    MULT WL0011    W0WJ02           *Synon (15,0) w
     C           WN0008    MULT W0WJ02    W0WJ01    H      *Synon (15,0) w
     C           WJCENB    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0063           PS Pieces Inv A
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0063           PS Pieces Inv A
     C                     END                             *FI
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
     C                     EXSR SOCHRC
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SOCHRC    BEGSR
      *================================================================
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0064  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0065  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0066  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0067  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0068  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0069  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0070  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0071  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0072  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0073  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0074  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0075  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0076  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0077  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0078  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0079  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0080  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0081  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0082  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0083  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0084  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0085 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0086  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0087 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0088  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0089 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0090  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0091 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0092  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0093 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0094  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0095 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0096  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0097  3        PS Item Id
     C                     MOVEL*BLANK    WN0098  2        Warehouse Type
     C                     MOVEL*BLANK    WN0099  1        PS Lock Status
     C                     MOVEL*BLANK    WN0100  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0101  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0102  1        PS Piece Count
     C                     MOVEL*BLANK    WN0103  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0104  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0105  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0106  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0107  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0108  3        PS Production W
     C                     Z-ADD*ZERO     WN0109  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0110  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0111  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0112  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0113  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0114  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0115  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0116  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0117  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0118  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0119  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0120  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0121  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0122  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0123  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0124  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0125  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0126  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0127  6        Department Code
     C                     Z-ADD*ZERO     WN0128  30       Item Structure
     C                     Z-ADD*ZERO     WN0129  30       Item Structure
     C                     Z-ADD*ZERO     WN0130  30       Item Structure
     C                     MOVEL*BLANK    WN0131  6        Primal Group Co
     C                     MOVEL*BLANK    WN0132  1        EDI Status 1
     C                     MOVEL*BLANK    WN0133  1        EDI Status 2
     C                     MOVEL*BLANK    WN0134  1        EDI Status 3
     C                     MOVEL*BLANK    WN0135  1        Record Status
     C                     Z-ADD*ZERO     WN0136  60       Job Time
     C                     MOVEL*BLANK    WN0137 10        User Id
     C                     MOVEL*BLANK    WN0138 10        Job Name
     C                     Z-ADD*ZERO     WN0139  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWJAIC3    WKAIC3           Company Number
     C                     MOVELWJV5ST    WKV5ST    P      Production Type
     C                     Z-ADDWJELDT    WKELDT           Production Date
     C                     Z-ADDWJHGCD    WKHGCD           Item Code
     C                     MOVELWJAJCD    WKAJCD    P      Warehouse Code
      *
     C           KLCHSO    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKHGCD           Item Code
     C                     KFLD           WKAJCD           Warehouse Code
     C           KLCHSO    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL005.
     C                     MOVEL'LBL005'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SOEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YCRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0062    WKUNW2           PS Weight Inv A
     C                     Z-ADDWN0063    WKCENB           PS Pieces Inv A
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##PGM     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WLAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WLHGCD    WQSP02           Item Code
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
      * Setup key
     C                     Z-ADDWL0054    WQSP01           Company Number
     C                     Z-ADDWL0055    WQSP02           Item Code
      * Establish starting position
     C           KRSSP     SETLL@FDREAW                    *
     C           KRSSP     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0056           Allocation Meth
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWLENST    WL0056           Allocation Meth
     C           KRSSP     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WABCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0057    WAAIC3           Company Number
     C                     Z-ADDWL0058    WABCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSQ     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0059           Production Day
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAWAST    WL0059           Production Day
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WLAIC3    WQSR01           Company Number
     C           *LIKE     DEFN WLHGCD    WQSR02           Item Code
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Company Number
     C                     KFLD           WQSR02           Item Code
      * Setup key
     C                     Z-ADDWL0060    WQSR01           Company Number
     C                     Z-ADDWL0061    WQSR02           Item Code
      * Establish starting position
     C           KRSSR     SETLL@FDREAW                    *
     C           KRSSR     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * default to "Y"es if rcd not found. user isnt overriding it to No
     C                     MOVEL*BLANK    WL0063           Production Day
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Day and Week No.   RT - Calendar  * 
     C                     EXSR SSRVGN
      * CASE: LCL.Day of Week is Sunday
     C           YL0019    IFEQ '1'                        *IF
     C                     MOVELWLD0ST    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Monday
     C           YL0019    IFEQ '2'                        *IF
     C                     MOVELWLD2ST    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Tuesday
     C           YL0019    IFEQ '3'                        *IF
     C                     MOVELWLD6ST    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Wednesday
     C           YL0019    IFEQ '4'                        *IF
     C                     MOVELWLWESP    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Thursday
     C           YL0019    IFEQ '5'                        *IF
     C                     MOVELWLEDST    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Friday
     C           YL0019    IFEQ '6'                        *IF
     C                     MOVELWLEFST    WL0063           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Saturday
     C           YL0019    IFEQ '7'                        *IF
     C                     MOVELWLEHST    WL0063           Production Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSR     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * RTV Day and Week No.   RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMAIC3    WQSS01           Company Number
     C           *LIKE     DEFN WMBCDT    WQSS02           Post to G/L Dat
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0060    WQSS01           Company Number
     C                     Z-ADDWL0062    WQSS02           Post to G/L Dat
      * Establish starting position
     C           KRSSS     SETLL@AFREYY                    *
     C           KRSSS     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELWMA9ST    YL0019           Day of Week
     C           KRSSS     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Val Sched Existance   RT - PS Prod Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WOAIC3           Company Number
     C                     KFLD           WOV5ST           Production Type
     C                     KFLD           WOELDT           Production Date
      * Setup key
     C                     Z-ADDWL0064    WOAIC3           Company Number
     C                     MOVELWL0065    WOV5ST           Production Type
     C                     Z-ADDWL0066    WOELDT           Production Date
      * Establish starting position
     C           KRSST     CHAIN@JCCPVC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1795' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0067           Record Found US
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0067           Record Found US
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0152  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0153  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0154  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0155  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0156  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0157  92       Weight Producti
     C                     Z-ADD*ZERO     WN0158  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0159 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0160 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0161  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0073           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0152           PS Weight Ship
     C                     Z-ADD*ZERO     WN0153           PS Pieces Ship
     C                     Z-ADD*ZERO     WL0074           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0075           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0154           Piece Count Ite
     C                     Z-ADD*ZERO     WN0155           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0156           Bags Per Unit
     C                     Z-ADD*ZERO     WN0157           Weight Producti
     C                     Z-ADD*ZERO     WN0158           Pieces Producti
     C                     Z-ADD*ZERO     WN0159           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0160           OD Weight Sched
     C                     Z-ADD*ZERO     WN0161           Pieces Allocate
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJV5ST           Production Type
     C                     KFLD           WJELDT           Production Date
     C                     KFLD           WJHGCD           Item Code
     C                     KFLD           WJAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0068    WJAIC3           Company Number
     C                     MOVELWL0069    WJV5ST           Production Type
     C                     Z-ADDWL0070    WJELDT           Production Date
     C                     Z-ADDWL0071    WJHGCD           Item Code
     C                     MOVELWL0072    WJAJCD           Warehouse Code
      * Establish starting position
     C           KRSSU     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * so calc is: Production = Planned Prod + Standard + Prod Adj - Con
      *  instead of:
      * Production = Standard + Prod Adj - Converted
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WJB5ST    IFEQ 'N'                        *IF
      * Ship Cut Adjust
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Chilling Time USR is GT Zero
      *   |- c2    : DB1.Production Date EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0076    IFGT *ZERO                      *IF
     C           WJELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
     C                     EXSR SVRVGN
     C                     END                             *FI
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Weight Planned Prod
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           WJWTSP    ADD  WJDXWG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WJD1WG    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WJWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WJGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0157           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Pieces Planned Prod
      * +     : PGM.*Synon (15,0) work field
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           WJQTSP    ADD  WJB2NB    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  WJCBNB    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WJPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WJBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0158           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WN0157    ADD  WN0152    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WJSAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WJOAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0074           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WN0158    ADD  WN0153    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WJB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WJCDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0075           ATS Pieces Avai
      * Weight Avail
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WL0074    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0074           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0075           ATS Pieces Avai
     C                     END                             *FI
     C                     Z-ADDWJF8WG    WL0073           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WRAIC3    WQSV01           Company Number
     C           *LIKE     DEFN WRHGCD    WQSV02           Item Code
     C           *LIKE     DEFN WRAJCD    WQSV03           Warehouse Code
     C           *LIKE     DEFN WRELDT    WQSV04           Production Date
     C           *LIKE     DEFN WRV5ST    WQSV05           Production Type
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WQSV01           Company Number
     C                     KFLD           WQSV02           Item Code
     C                     KFLD           WQSV03           Warehouse Code
     C                     KFLD           WQSV04           Production Date
     C                     KFLD           WQSV05           Production Type
      * Setup key
     C                     Z-ADDWJAIC3    WQSV01           Company Number
     C                     Z-ADDWJHGCD    WQSV02           Item Code
     C                     MOVELWJAJCD    WQSV03           Warehouse Code
     C                     Z-ADDWJGPDT    WQSV04           Production Date
     C                     MOVEL'P'       WQSV05           Production Type
      * Establish starting position
     C           KRSSV     SETLL@I8CPXP                    *
     C           KRSSV     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0152           PS Weight Ship
     C                     Z-ADD*ZERO     WN0153           PS Pieces Ship
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWRE0WG    WN0152           PS Weight Ship
     C                     Z-ADDWRD6NB    WN0153           PS Pieces Ship
     C           KRSSV     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0162 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0163 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0164 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0165 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0166 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0167 112       OD Avg Piece Wg
     C                     MOVEL*BLANK    WN0168  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0169  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0170  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0171  1        EDI Status 1
     C                     MOVEL*BLANK    WN0172  1        EDI Status 2
     C                     MOVEL*BLANK    WN0173  1        EDI Status 3
     C                     MOVEL*BLANK    WN0174  1        Record Status
     C                     Z-ADD*ZERO     WN0175  60       Job Time
     C                     MOVEL*BLANK    WN0176 10        User Id
     C                     MOVEL*BLANK    WN0177 10        Job Name
     C                     Z-ADD*ZERO     WN0178  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           WHAIC3           Company Number
     C                     KFLD           WHC4NB           Order Number
     C                     KFLD           WHDPNB           Order Sequence
     C                     KFLD           WHUENB           Order Secondary
     C                     KFLD           WHJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0077    WHAIC3           Company Number
     C                     Z-ADDWL0078    WHC4NB           Order Number
     C                     Z-ADDWL0079    WHDPNB           Order Sequence
     C                     Z-ADDWL0080    WHUENB           Order Secondary
     C                     Z-ADDWL0081    WHJGDT           OD Production D
      * Establish starting position
     C           KRSSW     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0077    WL0023           Company Number
     C                     Z-ADDWL0078    WL0024           Order Number
     C                     Z-ADDWL0079    WL0025           Order Sequence
     C                     Z-ADDWL0080    WL0026           Order Secondary
     C                     Z-ADDWL0081    WL0027           OD Production D
     C                     Z-ADDWL0082    WL0028           Scheduled Ship
     C                     MOVELWL0083    WL0029    P      Warehouse Code
     C                     MOVELWL0084    WL0030    P      Order From Ware
     C                     Z-ADDWL0085    WL0031           Item Code
     C                     Z-ADDWL0087    WL0032           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0086    WL0033           OD Weight Sched
     C                     Z-ADDWN0164    WL0034           OD Quantity Inv
     C                     Z-ADDWN0165    WL0035           OD Weight Inv S
     C                     Z-ADDWN0166    WL0036           OD Quantity Unu
     C                     Z-ADDWN0167    WL0037           OD Avg Piece Wg
     C                     MOVELWN0168    WL0038    P      OD Added to Sch
     C                     MOVELWN0169    WL0039    P      OD Reallocate S
     C                     MOVELWN0170    WL0040    P      OD Status Unuse
     C                     MOVELWN0171    WL0041    P      EDI Status 1
     C                     MOVELWN0172    WL0042    P      EDI Status 2
     C                     MOVELWN0173    WL0043    P      EDI Status 3
     C                     MOVELWN0174    WL0044    P      Record Status
     C                     Z-ADDWN0175    WL0045           Job Time
     C                     MOVELWN0176    WL0046    P      User Id
     C                     MOVELWN0177    WL0047    P      Job Name
     C                     Z-ADDWN0178    WL0048           Job Date
     C                     EXSR SKCRRC
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WHIGQT    ADD  WL0087    WN0162           OD Qty/Cnsmd Pi
     C           WHFLWG    ADD  WL0086    WN0163           OD Weight Sched
     C                     MOVELWHP7ST    YL0020           OD Added to Sch
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           WL0088    IFEQ 'C'                        *IF
     C           WL0088    OREQ 'F'
      * CASE: PAR.OD Production Date EQ JOB.*Job date
     C           WL0081    IFEQ ##JDT                      *IF
     C                     MOVEL'Y'       YL0020           OD Added to Sch
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.OD Quantity Scheduled is Greater than zero
     C           WN0162    IFGT *ZERO                      *IF
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
     C                     EXSR SXCHRC
     C                     ELSE
      * CASE: *OTHERWISE
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0049           Company Number
     C                     Z-ADDWHC4NB    WL0050           Order Number
     C                     Z-ADDWHDPNB    WL0051           Order Sequence
     C                     Z-ADDWHUENB    WL0052           Order Secondary
     C                     Z-ADDWHJGDT    WL0053           OD Production D
     C                     EXSR SLDLRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXCHRC    BEGSR
      *================================================================
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0179  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0180  3        Warehouse Code
     C                     MOVEL*BLANK    WN0181  3        Order From Ware
     C                     Z-ADD*ZERO     WN0182  70       Item Code
     C                     Z-ADD*ZERO     WN0183 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0184 112       OD Avg Piece Wg
     C                     MOVEL*BLANK    WN0185  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0186  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0187  1        EDI Status 1
     C                     MOVEL*BLANK    WN0188  1        EDI Status 2
     C                     MOVEL*BLANK    WN0189  1        EDI Status 3
     C                     MOVEL*BLANK    WN0190  1        Record Status
     C                     Z-ADD*ZERO     WN0191  60       Job Time
     C                     MOVEL*BLANK    WN0192 10        User Id
     C                     MOVEL*BLANK    WN0193 10        Job Name
     C                     Z-ADD*ZERO     WN0194  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWHAIC3    WIAIC3           Company Number
     C                     Z-ADDWHC4NB    WIC4NB           Order Number
     C                     Z-ADDWHDPNB    WIDPNB           Order Sequence
     C                     Z-ADDWHUENB    WIUENB           Order Secondary
     C                     Z-ADDWHJGDT    WIJGDT           OD Production D
      *
     C           KLCHSX    KLIST
     C                     KFLD           WIAIC3           Company Number
     C                     KFLD           WIC4NB           Order Number
     C                     KFLD           WIDPNB           Order Sequence
     C                     KFLD           WIUENB           Order Secondary
     C                     KFLD           WIJGDT           OD Production D
     C           KLCHSX    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL006.
     C                     MOVEL'LBL006'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SXEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SXEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YDRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0162    WIIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWN0163    WIFLWG           OD Weight Sched
     C                     Z-ADDWHIUQT    WIIUQT           OD Quantity Inv
     C                     Z-ADDWHF3WG    WIF3WG           OD Weight Inv S
     C                     MOVELYL0020    WIP7ST    P      OD Added to Sch
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WIAATM           Job Time
     C                     MOVEL##USR     WIAYNA           User Id
     C                     MOVEL##JOB     WIA0NA           Job Name
     C                     Z-ADD##JDT     WIAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0195  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0196  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0197  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0198  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0199  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0200  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0201  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0202  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0203  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0204  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0205  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0206  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0207  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0208  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0209  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0210  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0211  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0212  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0213  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0214  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0215  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0216  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0217  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0218 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0219  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0220 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0221  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0222 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0223  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0224 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0225  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0226 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0227  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0228 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0229  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0230  3        PS Item Id
     C                     MOVEL*BLANK    WN0231  2        Warehouse Type
     C                     MOVEL*BLANK    WN0232  1        PS Lock Status
     C                     MOVEL*BLANK    WN0233  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0234  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0235  1        PS Piece Count
     C                     MOVEL*BLANK    WN0236  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0237  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0238  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0239  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0240  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0241  3        PS Production W
     C                     Z-ADD*ZERO     WN0242  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0243  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0244  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0245  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0246  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0247  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0248  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0249  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0250  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0251  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0252  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0253  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0254  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0255  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0256  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0257  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0258  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0259  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0260  6        Department Code
     C                     Z-ADD*ZERO     WN0261  30       Item Structure
     C                     Z-ADD*ZERO     WN0262  30       Item Structure
     C                     Z-ADD*ZERO     WN0263  30       Item Structure
     C                     MOVEL*BLANK    WN0264  6        Primal Group Co
     C                     MOVEL*BLANK    WN0265  1        EDI Status 1
     C                     MOVEL*BLANK    WN0266  1        EDI Status 2
     C                     MOVEL*BLANK    WN0267  1        EDI Status 3
     C                     MOVEL*BLANK    WN0268  1        Record Status
     C                     Z-ADD*ZERO     WN0269  60       Job Time
     C                     MOVEL*BLANK    WN0270 10        User Id
     C                     MOVEL*BLANK    WN0271 10        Job Name
     C                     Z-ADD*ZERO     WN0272  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJV5ST           Production Type
     C                     KFLD           WJELDT           Production Date
     C                     KFLD           WJHGCD           Item Code
     C                     KFLD           WJAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0089    WJAIC3           Company Number
     C                     MOVELWL0090    WJV5ST           Production Type
     C                     Z-ADDWL0091    WJELDT           Production Date
     C                     Z-ADDWL0092    WJHGCD           Item Code
     C                     MOVELWL0093    WJAJCD           Warehouse Code
      * Establish starting position
     C           KRSSY     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0094    WN0220           PS Weight Whse
     C                     Z-ADDWL0095    WN0219           PS Pieces Whse
      * CASE: PAR.PS Pieces Whse Tfr Adj is GT Zero
     C           WN0219    IFGT *ZERO                      *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Whse Tfr Adj
     C           WN0220    DIV  WN0219    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0199           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0089    WL0100           Company Number
     C                     MOVELWL0090    WL0101    P      Production Type
     C                     Z-ADDWL0091    WL0102           Production Date
     C                     Z-ADDWL0092    WL0103           Item Code
     C                     MOVELWL0093    WL0104    P      Warehouse Code
     C                     Z-ADDWN0195    WL0105           PS Available Sh
     C                     Z-ADDWN0196    WL0106           PS Weight Plann
     C                     Z-ADDWN0197    WL0107           PS Pieces Plann
     C                     Z-ADDWN0198    WL0108           PS % of Carcass
     C                     Z-ADDWN0199    WL0109           PS Avg Piece Wg
     C                     Z-ADDWN0200    WL0110           PS Weight Inv O
     C                     Z-ADDWN0201    WL0111           PS Pieces Inv O
     C                     Z-ADDWN0202    WL0112           PS Weight Stand
     C                     Z-ADDWN0203    WL0113           PS Pieces Stand
     C                     Z-ADDWN0204    WL0114           PS Weight Conve
     C                     Z-ADDWN0205    WL0115           PS Pieces Conve
     C                     Z-ADDWN0206    WL0116           PS Weight Shipp
     C                     Z-ADDWN0207    WL0117           PS Pieces Shipp
     C                     Z-ADDWN0208    WL0118           PS Weight Prod
     C                     Z-ADDWN0209    WL0119           PS Pieces Prod
     C                     Z-ADDWN0210    WL0120           PS Weight Inv A
     C                     Z-ADDWN0211    WL0121           PS Pieces Inv A
     C                     Z-ADDWN0212    WL0122           PS Weight Ship
     C                     Z-ADDWN0213    WL0123           PS Pieces Ship
     C                     Z-ADDWN0214    WL0124           PS Weight Prod
     C                     Z-ADDWN0215    WL0125           PS Pieces Prod
     C                     Z-ADDWN0216    WL0126           PS Weight Inv A
     C                     Z-ADDWN0217    WL0127           PS Pieces Inv A
     C                     Z-ADDWN0218    WL0128           PS Unit Weight
     C                     Z-ADDWN0219    WL0129           PS Pieces Whse
     C                     Z-ADDWN0220    WL0130           PS Weight Whse
     C                     Z-ADDWN0221    WL0131           PS Pieces Unuse
     C                     Z-ADDWN0222    WL0132           PS Weight Unuse
     C                     Z-ADDWN0223    WL0133           PS Pieces Unuse
     C                     Z-ADDWN0224    WL0134           PS Weight Unuse
     C                     Z-ADDWN0225    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0226    WL0136           PS Weight Unuse
     C                     Z-ADDWN0227    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0228    WL0138           PS Weight Unuse
     C                     Z-ADDWN0229    WL0139           PS Pieces Unuse
     C                     MOVELWN0230    WL0140    P      PS Item Id
     C                     MOVELWN0231    WL0141    P      Warehouse Type
     C                     MOVELWN0232    WL0142    P      PS Lock Status
     C                     MOVELWN0233    WL0143    P      PS Export/Domes
     C                     MOVELWN0234    WL0144    P      PS Print On Sch
     C                     MOVELWN0235    WL0145    P      PS Piece Count
     C                     MOVELWN0236    WL0146    P      PS Unused Sts 1
     C                     MOVELWN0237    WL0147    P      PS Unused Sts 2
     C                     MOVELWN0238    WL0148    P      PS Unused Sts 3
     C                     MOVELWN0239    WL0149    P      PS Unused Sts 4
     C                     MOVELWN0240    WL0150    P      PS Item Sched N
     C                     MOVELWN0241    WL0151    P      PS Production W
     C                     Z-ADDWN0242    WL0152           PS Weight Order
     C                     Z-ADDWN0243    WL0153           PS Pieces Order
     C                     Z-ADDWN0244    WL0154           PS Weight FC Ad
     C                     Z-ADDWN0245    WL0155           PS Pieces FC Ad
     C                     Z-ADDWN0246    WL0156           PS Weight FX Ad
     C                     Z-ADDWN0247    WL0157           PS Pieces FX Ad
     C                     Z-ADDWN0248    WL0158           PS Weight Sched
     C                     Z-ADDWN0249    WL0159           PS Pieces Sched
     C                     Z-ADDWN0250    WL0160           PS Weight Avail
     C                     Z-ADDWN0251    WL0161           PS Pieces Avail
     C                     Z-ADDWN0252    WL0162           PS Weight Produ
     C                     Z-ADDWN0253    WL0163           PS Pieces Produ
     C                     Z-ADDWN0254    WL0164           PS Weight Fab N
     C                     Z-ADDWN0255    WL0165           PS Pieces Fab N
     C                     Z-ADDWN0256    WL0166           PS Weight Sched
     C                     Z-ADDWN0257    WL0167           PS Pieces Sched
     C                     Z-ADDWN0258    WL0168           PS Weight Sched
     C                     Z-ADDWN0259    WL0169           PS Pieces Sched
     C                     MOVELWN0260    WL0170    P      Department Code
     C                     Z-ADDWN0261    WL0171           Item Structure
     C                     Z-ADDWN0262    WL0172           Item Structure
     C                     Z-ADDWN0263    WL0173           Item Structure
     C                     MOVELWN0264    WL0174    P      Primal Group Co
     C                     MOVELWN0265    WL0175    P      EDI Status 1
     C                     MOVELWN0266    WL0176    P      EDI Status 2
     C                     MOVELWN0267    WL0177    P      EDI Status 3
     C                     MOVELWN0268    WL0178    P      Record Status
     C                     Z-ADDWN0269    WL0179           Job Time
     C                     MOVELWN0270    WL0180    P      User Id
     C                     MOVELWN0271    WL0181    P      Job Name
     C                     Z-ADDWN0272    WL0182           Job Date
     C                     EXSR SZCRRC
      *  not necessary here ...
     C                     GOTO SYEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WJGAWG    ADD  WL0094    WN0220           PS Weight Whse
     C           WJBPNB    ADD  WL0095    WN0219           PS Pieces Whse
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
     C                     EXSR TDCHRC
      *  not necessary here ...
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
     C                     ENDIF
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZCRRC    BEGSR
      *================================================================
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @I8CPUR
     C                     Z-ADDWL0100    WKAIC3           Company Number
     C                     MOVELWL0101    WKV5ST           Production Type
     C                     Z-ADDWL0102    WKELDT           Production Date
     C                     Z-ADDWL0103    WKHGCD           Item Code
     C                     MOVELWL0104    WKAJCD           Warehouse Code
     C                     Z-ADDWL0105    WKGPDT           PS Available Sh
     C                     Z-ADDWL0106    WKWTSP           PS Weight Plann
     C                     Z-ADDWL0107    WKQTSP           PS Pieces Plann
     C                     Z-ADDWL0108    WKDJPC           PS % of Carcass
     C                     Z-ADDWL0109    WKF8WG           PS Avg Piece Wg
     C                     Z-ADDWL0110    WKWTIN           PS Weight Inv O
     C                     Z-ADDWL0111    WKD5NB           PS Pieces Inv O
     C                     Z-ADDWL0112    WKDXWG           PS Weight Stand
     C                     Z-ADDWL0113    WKB2NB           PS Pieces Stand
     C                     Z-ADDWL0114    WKWTCN           PS Weight Conve
     C                     Z-ADDWL0115    WKPSCV           PS Pieces Conve
     C                     Z-ADDWL0116    WKSAWT           PS Weight Shipp
     C                     Z-ADDWL0117    WKB9NB           PS Pieces Shipp
     C                     Z-ADDWL0118    WKD1WG           PS Weight Prod
     C                     Z-ADDWL0119    WKCBNB           PS Pieces Prod
     C                     Z-ADDWL0120    WKEZWG           PS Weight Inv A
     C                     Z-ADDWL0121    WKCCNB           PS Pieces Inv A
     C                     Z-ADDWL0122    WKE0WG           PS Weight Ship
     C                     Z-ADDWL0123    WKD6NB           PS Pieces Ship
     C                     Z-ADDWL0124    WKOAWT           PS Weight Prod
     C                     Z-ADDWL0125    WKCDNB           PS Pieces Prod
     C                     Z-ADDWL0126    WKUNW2           PS Weight Inv A
     C                     Z-ADDWL0127    WKCENB           PS Pieces Inv A
     C                     Z-ADDWL0128    WKF9WG           PS Unit Weight
     C                     Z-ADDWL0129    WKBPNB           PS Pieces Whse
     C                     Z-ADDWL0130    WKGAWG           PS Weight Whse
     C                     Z-ADDWL0131    WKBQNB           PS Pieces Unuse
     C                     Z-ADDWL0132    WKGBWG           PS Weight Unuse
     C                     Z-ADDWL0133    WKBRNB           PS Pieces Unuse
     C                     Z-ADDWL0134    WKGCWG           PS Weight Unuse
     C                     Z-ADDWL0135    WKBSNB           PS Pieces Unuse
     C                     Z-ADDWL0136    WKGDWG           PS Weight Unuse
     C                     Z-ADDWL0137    WKBWNB           PS Pieces Unuse
     C                     Z-ADDWL0138    WKGEWG           PS Weight Unuse
     C                     Z-ADDWL0139    WKPS6U           PS Pieces Unuse
     C                     MOVELWL0140    WKWCST           PS Item Id
     C                     MOVELWL0141    WKWPST           Warehouse Type
     C                     MOVELWL0142    WKB5ST           PS Lock Status
     C                     MOVELWL0143    WKTFST           PS Export/Domes
     C                     MOVELWL0144    WKTEST           PS Print On Sch
     C                     MOVELWL0145    WKTHST           PS Piece Count
     C                     MOVELWL0146    WKUDST           PS Unused Sts 1
     C                     MOVELWL0147    WKUFST           PS Unused Sts 2
     C                     MOVELWL0148    WKUGST           PS Unused Sts 3
     C                     MOVELWL0149    WKUHST           PS Unused Sts 4
     C                     MOVELWL0150    WKB6ST           PS Item Sched N
     C                     MOVELWL0151    WKB7ST           PS Production W
     C                     Z-ADDWL0152    WKDVWG           PS Weight Order
     C                     Z-ADDWL0153    WKD7NB           PS Pieces Order
     C                     Z-ADDWL0154    WKFCAD           PS Weight FC Ad
     C                     Z-ADDWL0155    WKD9NB           PS Pieces FC Ad
     C                     Z-ADDWL0156    WKDWWG           PS Weight FX Ad
     C                     Z-ADDWL0157    WKEANB           PS Pieces FX Ad
     C                     Z-ADDWL0158    WKSHWT           PS Weight Sched
     C                     Z-ADDWL0159    WKEBNB           PS Pieces Sched
     C                     Z-ADDWL0160    WKAVWT           PS Weight Avail
     C                     Z-ADDWL0161    WKECNB           PS Pieces Avail
     C                     Z-ADDWL0162    WKWTON           PS Weight Produ
     C                     Z-ADDWL0163    WKEDNB           PS Pieces Produ
     C                     Z-ADDWL0164    WKFNWT           PS Weight Fab N
     C                     Z-ADDWL0165    WKEENB           PS Pieces Fab N
     C                     Z-ADDWL0166    WKQTAS           PS Weight Sched
     C                     Z-ADDWL0167    WKEFNB           PS Pieces Sched
     C                     Z-ADDWL0168    WKWAIO           PS Weight Sched
     C                     Z-ADDWL0169    WKEGNB           PS Pieces Sched
     C                     MOVELWL0170    WKR3CD           Department Code
     C                     Z-ADDWL0171    WKRGNB           Item Structure
     C                     Z-ADDWL0172    WKRHNB           Item Structure
     C                     Z-ADDWL0173    WKRINB           Item Structure
     C                     MOVELWL0174    WKXRCD           Primal Group Co
     C                     MOVELWL0175    WKUVST           EDI Status 1
     C                     MOVELWL0176    WKUWST           EDI Status 2
     C                     MOVELWL0177    WKUXST           EDI Status 3
     C                     MOVELWL0178    WKVSST           Record Status
     C                     Z-ADDWL0179    WKAATM           Job Time
     C                     MOVELWL0180    WKAYNA           User Id
     C                     MOVELWL0181    WKA0NA           Job Name
     C                     Z-ADDWL0182    WKAXDT           Job Date
      *
      * USER: Processing before Data update
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0273 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
     C                     EXSR TARVGN
      * BPS Rtv Whs Info      RT - Warehouse  * 
     C                     EXSR TBRVGN
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WKWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WKWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WKWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Output PS Prod Warehouse
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWKAJCD    WL0001    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WKB7ST    P      Production Ware
     C                     Z-ADDWL0003    YL0021           Accounting Comp
      * Available Ship Date
      * CASE: WRK.Warehouse Std Chill Time is yes
     C           WUT1ST    IFEQ 'Y'                        *IF
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWKAIC3    WL0183           Company Number
     C                     Z-ADDWL0102    WL0184           Post to G/L Dat
     C                     Z-ADDWUDBNB    WL0185           Fresh Chilling
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0186    WKGPDT           PS Available Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWKAIC3    WL0183           Company Number
     C                     Z-ADDWL0102    WL0184           Post to G/L Dat
     C                     Z-ADDWUCHTM    WL0185           Fresh Chilling
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0186    WKGPDT           PS Available Sh
     C                     END                             *FI
      * Average Piece Weight
      * CASE: PAR.PS Pieces Planned Prod is GT Zero
     C           WL0107    IFGT *ZERO                      *IF
     C           WL0106    DIV  WL0107    WKF8WG           PS Avg Piece Wg
     C                     END                             *FI
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WKVSST           Record Status
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##PGM     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
     C                     MOVEL'N'       WKB5ST           PS Lock Status
     C           KLCRSZ    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKHGCD           Item Code
     C                     KFLD           WKAJCD           Warehouse Code
      * Check for duplicate primary key
     C           KLCRSZ    SETLL@I8CPUR                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR1764' W0RTN   7
      * Send message 'PS Prod Item Schedule  EX'
     C                     MOVEL'USR1764' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SZEXIT
     C                     ENDIF
      *
     C                     WRITE@I8CPUR                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TARVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTA     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSHGCD           Item Code
      * Setup key
     C                     Z-ADDWKAIC3    WSAIC3           Company Number
     C                     Z-ADDWKHGCD    WSHGCD           Item Code
      * Establish starting position
     C           KRSTA     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAVNA           Description Lin
     C                     MOVEL*BLANK    WUADCD           U/M - Primary
     C                     Z-ADD*ZERO     WUAIWG           Unit Weight
     C                     Z-ADD*ZERO     WKRINB           Item Structure
     C                     Z-ADD*ZERO     WKRHNB           Item Structure
     C                     Z-ADD*ZERO     WKRGNB           Item Structure
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     MOVEL*BLANK    WUQ1CD           Default Warehou
     C                     Z-ADD*ZERO     WUCHTM           Fresh Chilling
     C                     MOVEL*BLANK    WUQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    WUXWST           Variety/Rendere
     C                     MOVEL*BLANK    WUVMST           Credit Item Sta
     C                     Z-ADD*ZERO     WUSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WUPPHE           Pieces Per Head
     C                     MOVEL*BLANK    WKR3CD           Department Code
     C                     MOVEL*BLANK    WUSDCD           Group for Packa
     C                     MOVEL*BLANK    WUX5ST           Seconds Item
     C                     MOVEL*BLANK    WKTHST           Piece Count Ite
     C                     Z-ADD*ZERO     WUBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WUBJNB           Bags Per Unit
     C                     MOVEL*BLANK    WKTFST           Export/Domestic
     C                     MOVEL*BLANK    WKTEST           Print On Schedu
     C                     MOVEL*BLANK    WUSYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    WUSZST           Fresh Sched As
     C                     MOVEL*BLANK    WUS1ST           Frozen Inv Allo
     C                     MOVEL*BLANK    WKXRCD           Primal Group Co
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWSAVNA    WUAVNA           Description Lin
     C                     MOVELWSADCD    WUADCD           U/M - Primary
     C                     Z-ADDWSAIWG    WUAIWG           Unit Weight
     C                     Z-ADDWSRINB    WKRINB           Item Structure
     C                     Z-ADDWSRHNB    WKRHNB           Item Structure
     C                     Z-ADDWSRGNB    WKRGNB           Item Structure
     C                     MOVELWSN0CD    WUN0CD           Item Type Code
     C                     MOVELWSQ1CD    WUQ1CD           Default Warehou
     C                     Z-ADDWSCHTM    WUCHTM           Fresh Chilling
     C                     MOVELWSQZCD    WUQZCD           Base/Conv/Loss
     C                     MOVELWSXWST    WUXWST           Variety/Rendere
     C                     MOVELWSVMST    WUVMST           Credit Item Sta
     C                     Z-ADDWSSWGH    WUSWGH           Std Weight/Head
     C                     Z-ADDWSPPHE    WUPPHE           Pieces Per Head
     C                     MOVELWSR3CD    WKR3CD           Department Code
     C                     MOVELWSSDCD    WUSDCD           Group for Packa
     C                     MOVELWSX5ST    WUX5ST           Seconds Item
     C                     MOVELWSPCCT    WKTHST           Piece Count Ite
     C                     Z-ADDWSBDNB    WUBDNB           Pieces Per Bag
     C                     Z-ADDWSBJNB    WUBJNB           Bags Per Unit
     C                     MOVELWSSUST    WKTFST           Export/Domestic
     C                     MOVELWSSVST    WKTEST           Print On Schedu
     C                     MOVELWSSYST    WUSYST           Fresh Inv Alloc
     C                     MOVELWSSZST    WUSZST           Fresh Sched As
     C                     MOVELWSS1ST    WUS1ST           Frozen Inv Allo
     C                     MOVELWSXRCD    WKXRCD           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBRVGN    BEGSR
      *================================================================
      * BPS Rtv Whs Info      RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTB     KLIST
     C                     KFLD           WTAJCD           Warehouse Code
      * Setup key
     C                     MOVELWKAJCD    WTAJCD           Warehouse Code
      * Establish starting position
     C           KRSTB     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WKWPST           Warehouse Type
     C                     MOVEL*BLANK    WUXUST           Trans Contol AS
     C                     MOVEL*BLANK    WUT0ST           Warehouse Locat
     C                     MOVEL*BLANK    WUT1ST           Warehouse Std C
     C                     Z-ADD*ZERO     WUDBNB           Warehouse Chill
     C                     GOTO TBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWTWPST    WKWPST           Warehouse Type
     C                     MOVELWTXUST    WUXUST           Trans Contol AS
     C                     MOVELWTT0ST    WUT0ST           Warehouse Locat
     C                     MOVELWTT1ST    WUT1ST           Warehouse Std C
     C                     Z-ADDWTDBNB    WUDBNB           Warehouse Chill
     C                     ENDIF
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQTC01           Company Number
      * Define keylist
     C           KPSTC     KLIST
     C                     KFLD           WQTC01           Company Number
     C                     KFLD           WABCDT           Post to G/L Dat
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           WQTC01           Company Number
      * Setup key
     C                     Z-ADDWL0183    WQTC01           Company Number
     C                     Z-ADDWL0184    WABCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTC     SETLL@AFREBE                    *
     C           KRSTC     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.Chilling Time
     C           WUCNTU    IFEQ WL0185                     *IF
     C                     Z-ADDWABCDT    WL0186           PS Available Sh
     C                     GOTO TCEXIT                     *QUIT
     C                     END                             *FI
      * Skip Saturday
      * CASE: DB1.Day of Week is Saturday
     C           WAA9ST    IFEQ '7'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSTC     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDCHRC    BEGSR
      *================================================================
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0274  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0275  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0276  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0277  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0278  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0279  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0280  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0281  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0282  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0283  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0284  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0285  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0286  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0287  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0288  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0289  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0290  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0291  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0292  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0293  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0294  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0295  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0296 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0297  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0298 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0299  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0300 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0301  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0302 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0303  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0304 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0305  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0306  3        PS Item Id
     C                     MOVEL*BLANK    WN0307  2        Warehouse Type
     C                     MOVEL*BLANK    WN0308  1        PS Lock Status
     C                     MOVEL*BLANK    WN0309  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0310  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0311  1        PS Piece Count
     C                     MOVEL*BLANK    WN0312  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0313  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0314  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0315  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0316  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0317  3        PS Production W
     C                     Z-ADD*ZERO     WN0318  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0319  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0320  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0321  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0322  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0323  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0324  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0325  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0326  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0327  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0328  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0329  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0330  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0331  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0332  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0333  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0334  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0335  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0336  6        Department Code
     C                     Z-ADD*ZERO     WN0337  30       Item Structure
     C                     Z-ADD*ZERO     WN0338  30       Item Structure
     C                     Z-ADD*ZERO     WN0339  30       Item Structure
     C                     MOVEL*BLANK    WN0340  6        Primal Group Co
     C                     MOVEL*BLANK    WN0341  1        EDI Status 1
     C                     MOVEL*BLANK    WN0342  1        EDI Status 2
     C                     MOVEL*BLANK    WN0343  1        EDI Status 3
     C                     MOVEL*BLANK    WN0344  1        Record Status
     C                     Z-ADD*ZERO     WN0345  60       Job Time
     C                     MOVEL*BLANK    WN0346 10        User Id
     C                     MOVEL*BLANK    WN0347 10        Job Name
     C                     Z-ADD*ZERO     WN0348  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YERDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWJAIC3    WKAIC3           Company Number
     C                     MOVELWJV5ST    WKV5ST    P      Production Type
     C                     Z-ADDWJELDT    WKELDT           Production Date
     C                     Z-ADDWJHGCD    WKHGCD           Item Code
     C                     MOVELWJAJCD    WKAJCD    P      Warehouse Code
      *
     C           KLCHTD    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKHGCD           Item Code
     C                     KFLD           WKAJCD           Warehouse Code
     C           KLCHTD    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL007.
     C                     MOVEL'LBL007'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TDEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TDEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YERDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWJF8WG    WKF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0219    WKBPNB           PS Pieces Whse
     C                     Z-ADDWN0220    WKGAWG           PS Weight Whse
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##PGM     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YERDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0349  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0350  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0351  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0352  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0353  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0354  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0355  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0356  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0357  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0358  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0359  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0360  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0361  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0362  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0363  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0364  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0365  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0366  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0367  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0368  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0369  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0370  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0371  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0372 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0373  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0374 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0375  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0376 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0377  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0378 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0379  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0380 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0381  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0382 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0383  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0384  3        PS Item Id
     C                     MOVEL*BLANK    WN0385  2        Warehouse Type
     C                     MOVEL*BLANK    WN0386  1        PS Lock Status
     C                     MOVEL*BLANK    WN0387  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0388  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0389  1        PS Piece Count
     C                     MOVEL*BLANK    WN0390  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0391  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0392  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0393  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0394  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0395  3        PS Production W
     C                     Z-ADD*ZERO     WN0396  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0397  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0398  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0399  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0400  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0401  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0402  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0403  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0404  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0405  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0406  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0407  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0408  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0409  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0410  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0411  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0412  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0413  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0414  6        Department Code
     C                     Z-ADD*ZERO     WN0415  30       Item Structure
     C                     Z-ADD*ZERO     WN0416  30       Item Structure
     C                     Z-ADD*ZERO     WN0417  30       Item Structure
     C                     MOVEL*BLANK    WN0418  6        Primal Group Co
     C                     MOVEL*BLANK    WN0419  1        EDI Status 1
     C                     MOVEL*BLANK    WN0420  1        EDI Status 2
     C                     MOVEL*BLANK    WN0421  1        EDI Status 3
     C                     MOVEL*BLANK    WN0422  1        Record Status
     C                     Z-ADD*ZERO     WN0423  60       Job Time
     C                     MOVEL*BLANK    WN0424 10        User Id
     C                     MOVEL*BLANK    WN0425 10        Job Name
     C                     Z-ADD*ZERO     WN0426  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTE     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJV5ST           Production Type
     C                     KFLD           WJELDT           Production Date
     C                     KFLD           WJHGCD           Item Code
     C                     KFLD           WJAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0187    WJAIC3           Company Number
     C                     MOVELWL0188    WJV5ST           Production Type
     C                     Z-ADDWL0189    WJELDT           Production Date
     C                     Z-ADDWL0190    WJHGCD           Item Code
     C                     MOVELWL0191    WJAJCD           Warehouse Code
      * Establish starting position
     C           KRSTE     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0193    WN0356           PS Weight Stand
     C                     Z-ADDWL0192    WN0357           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0357    IFNE *ZERO                      *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0356    DIV  WN0357    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0353           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0353    IFLT *ZERO                      *IF
     C                     MULT -1        WN0353           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.PS Weight Standard is NE Zero
      *   |- c2    : PAR.PS Pieces Standard is NE Zeros
      *   '-
     C           WN0356    IFNE *ZERO                      *IF
     C           WN0357    ORNE *ZERO                      *OR
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0187    WL0100           Company Number
     C                     MOVELWL0188    WL0101    P      Production Type
     C                     Z-ADDWL0189    WL0102           Production Date
     C                     Z-ADDWL0190    WL0103           Item Code
     C                     MOVELWL0191    WL0104    P      Warehouse Code
     C                     Z-ADDWN0349    WL0105           PS Available Sh
     C                     Z-ADDWN0350    WL0106           PS Weight Plann
     C                     Z-ADDWN0351    WL0107           PS Pieces Plann
     C                     Z-ADDWN0352    WL0108           PS % of Carcass
     C                     Z-ADDWN0353    WL0109           PS Avg Piece Wg
     C                     Z-ADDWN0354    WL0110           PS Weight Inv O
     C                     Z-ADDWN0355    WL0111           PS Pieces Inv O
     C                     Z-ADDWN0356    WL0112           PS Weight Stand
     C                     Z-ADDWN0357    WL0113           PS Pieces Stand
     C                     Z-ADDWN0358    WL0114           PS Weight Conve
     C                     Z-ADDWN0359    WL0115           PS Pieces Conve
     C                     Z-ADDWN0360    WL0116           PS Weight Shipp
     C                     Z-ADDWN0361    WL0117           PS Pieces Shipp
     C                     Z-ADDWN0362    WL0118           PS Weight Prod
     C                     Z-ADDWN0363    WL0119           PS Pieces Prod
     C                     Z-ADDWN0364    WL0120           PS Weight Inv A
     C                     Z-ADDWN0365    WL0121           PS Pieces Inv A
     C                     Z-ADDWN0366    WL0122           PS Weight Ship
     C                     Z-ADDWN0367    WL0123           PS Pieces Ship
     C                     Z-ADDWN0368    WL0124           PS Weight Prod
     C                     Z-ADDWN0369    WL0125           PS Pieces Prod
     C                     Z-ADDWN0370    WL0126           PS Weight Inv A
     C                     Z-ADDWN0371    WL0127           PS Pieces Inv A
     C                     Z-ADDWN0372    WL0128           PS Unit Weight
     C                     Z-ADDWN0373    WL0129           PS Pieces Whse
     C                     Z-ADDWN0374    WL0130           PS Weight Whse
     C                     Z-ADDWN0375    WL0131           PS Pieces Unuse
     C                     Z-ADDWN0376    WL0132           PS Weight Unuse
     C                     Z-ADDWN0377    WL0133           PS Pieces Unuse
     C                     Z-ADDWN0378    WL0134           PS Weight Unuse
     C                     Z-ADDWN0379    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0380    WL0136           PS Weight Unuse
     C                     Z-ADDWN0381    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0382    WL0138           PS Weight Unuse
     C                     Z-ADDWN0383    WL0139           PS Pieces Unuse
     C                     MOVELWN0384    WL0140    P      PS Item Id
     C                     MOVELWN0385    WL0141    P      Warehouse Type
     C                     MOVELWN0386    WL0142    P      PS Lock Status
     C                     MOVELWN0387    WL0143    P      PS Export/Domes
     C                     MOVELWN0388    WL0144    P      PS Print On Sch
     C                     MOVELWN0389    WL0145    P      PS Piece Count
     C                     MOVELWN0390    WL0146    P      PS Unused Sts 1
     C                     MOVELWN0391    WL0147    P      PS Unused Sts 2
     C                     MOVELWN0392    WL0148    P      PS Unused Sts 3
     C                     MOVELWN0393    WL0149    P      PS Unused Sts 4
     C                     MOVELWN0394    WL0150    P      PS Item Sched N
     C                     MOVELWN0395    WL0151    P      PS Production W
     C                     Z-ADDWN0396    WL0152           PS Weight Order
     C                     Z-ADDWN0397    WL0153           PS Pieces Order
     C                     Z-ADDWN0398    WL0154           PS Weight FC Ad
     C                     Z-ADDWN0399    WL0155           PS Pieces FC Ad
     C                     Z-ADDWN0400    WL0156           PS Weight FX Ad
     C                     Z-ADDWN0401    WL0157           PS Pieces FX Ad
     C                     Z-ADDWN0402    WL0158           PS Weight Sched
     C                     Z-ADDWN0403    WL0159           PS Pieces Sched
     C                     Z-ADDWN0404    WL0160           PS Weight Avail
     C                     Z-ADDWN0405    WL0161           PS Pieces Avail
     C                     Z-ADDWN0406    WL0162           PS Weight Produ
     C                     Z-ADDWN0407    WL0163           PS Pieces Produ
     C                     Z-ADDWN0408    WL0164           PS Weight Fab N
     C                     Z-ADDWN0409    WL0165           PS Pieces Fab N
     C                     Z-ADDWN0410    WL0166           PS Weight Sched
     C                     Z-ADDWN0411    WL0167           PS Pieces Sched
     C                     Z-ADDWN0412    WL0168           PS Weight Sched
     C                     Z-ADDWN0413    WL0169           PS Pieces Sched
     C                     MOVELWN0414    WL0170    P      Department Code
     C                     Z-ADDWN0415    WL0171           Item Structure
     C                     Z-ADDWN0416    WL0172           Item Structure
     C                     Z-ADDWN0417    WL0173           Item Structure
     C                     MOVELWN0418    WL0174    P      Primal Group Co
     C                     MOVELWN0419    WL0175    P      EDI Status 1
     C                     MOVELWN0420    WL0176    P      EDI Status 2
     C                     MOVELWN0421    WL0177    P      EDI Status 3
     C                     MOVELWN0422    WL0178    P      Record Status
     C                     Z-ADDWN0423    WL0179           Job Time
     C                     MOVELWN0424    WL0180    P      User Id
     C                     MOVELWN0425    WL0181    P      Job Name
     C                     Z-ADDWN0426    WL0182           Job Date
     C                     EXSR SZCRRC
     C                     END                             *FI
     C                     GOTO TEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WJDXWG    ADD  WL0193    WN0356           PS Weight Stand
     C           WJB2NB    ADD  WL0192    WN0357           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0357    IFNE *ZERO                      *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0356    DIV  WN0357    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0353           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0353    IFLT *ZERO                      *IF
     C                     MULT -1        WN0353           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 RMC 5/14/09 dont do below case - they may be negative now
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
     C                     EXSR TFCHRC
     C                     ENDIF
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFCHRC    BEGSR
      *================================================================
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0427  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0428  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0429  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0430  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0431  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0432  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0433  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0434  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0435  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0436  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0437  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0438  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0439  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0440  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0441  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0442  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0443  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0444  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0445  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0446  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0447 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0448  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0449 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0450  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0451 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0452  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0453 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0454  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0455 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0456  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0457 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0458  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0459  3        PS Item Id
     C                     MOVEL*BLANK    WN0460  2        Warehouse Type
     C                     MOVEL*BLANK    WN0461  1        PS Lock Status
     C                     MOVEL*BLANK    WN0462  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0463  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0464  1        PS Piece Count
     C                     MOVEL*BLANK    WN0465  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0466  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0467  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0468  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0469  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0470  3        PS Production W
     C                     Z-ADD*ZERO     WN0471  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0472  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0473  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0474  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0475  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0476  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0477  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0478  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0479  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0480  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0481  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0482  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0483  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0484  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0485  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0486  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0487  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0488  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0489  6        Department Code
     C                     Z-ADD*ZERO     WN0490  30       Item Structure
     C                     Z-ADD*ZERO     WN0491  30       Item Structure
     C                     Z-ADD*ZERO     WN0492  30       Item Structure
     C                     MOVEL*BLANK    WN0493  6        Primal Group Co
     C                     MOVEL*BLANK    WN0494  1        EDI Status 1
     C                     MOVEL*BLANK    WN0495  1        EDI Status 2
     C                     MOVEL*BLANK    WN0496  1        EDI Status 3
     C                     MOVEL*BLANK    WN0497  1        Record Status
     C                     Z-ADD*ZERO     WN0498  60       Job Time
     C                     MOVEL*BLANK    WN0499 10        User Id
     C                     MOVEL*BLANK    WN0500 10        Job Name
     C                     Z-ADD*ZERO     WN0501  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YFRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWJAIC3    WKAIC3           Company Number
     C                     MOVELWJV5ST    WKV5ST    P      Production Type
     C                     Z-ADDWJELDT    WKELDT           Production Date
     C                     Z-ADDWJHGCD    WKHGCD           Item Code
     C                     MOVELWJAJCD    WKAJCD    P      Warehouse Code
      *
     C           KLCHTF    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKHGCD           Item Code
     C                     KFLD           WKAJCD           Warehouse Code
     C           KLCHTF    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL008.
     C                     MOVEL'LBL008'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YFRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0353    WKF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0356    WKDXWG           PS Weight Stand
     C                     Z-ADDWN0357    WKB2NB           PS Pieces Stand
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YFRDCS
     C           YFRDC     ANDNE'N'
     C                     MOVE 'Y'       YFRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YFRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0502  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0503  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0504  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0505  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0506  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0507  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0508  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0509  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0510  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0511  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0512  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0513  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0514  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0515  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0516  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0517  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0518  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0519  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0520  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0521  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0522  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0523  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0524  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0525 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0526  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0527 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0528  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0529 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0530  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0531 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0532  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0533 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0534  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0535 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0536  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0537  3        PS Item Id
     C                     MOVEL*BLANK    WN0538  2        Warehouse Type
     C                     MOVEL*BLANK    WN0539  1        PS Lock Status
     C                     MOVEL*BLANK    WN0540  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0541  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0542  1        PS Piece Count
     C                     MOVEL*BLANK    WN0543  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0544  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0545  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0546  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0547  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0548  3        PS Production W
     C                     Z-ADD*ZERO     WN0549  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0550  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0551  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0552  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0553  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0554  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0555  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0556  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0557  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0558  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0559  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0560  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0561  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0562  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0563  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0564  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0565  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0566  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0567  6        Department Code
     C                     Z-ADD*ZERO     WN0568  30       Item Structure
     C                     Z-ADD*ZERO     WN0569  30       Item Structure
     C                     Z-ADD*ZERO     WN0570  30       Item Structure
     C                     MOVEL*BLANK    WN0571  6        Primal Group Co
     C                     MOVEL*BLANK    WN0572  1        EDI Status 1
     C                     MOVEL*BLANK    WN0573  1        EDI Status 2
     C                     MOVEL*BLANK    WN0574  1        EDI Status 3
     C                     MOVEL*BLANK    WN0575  1        Record Status
     C                     Z-ADD*ZERO     WN0576  60       Job Time
     C                     MOVEL*BLANK    WN0577 10        User Id
     C                     MOVEL*BLANK    WN0578 10        Job Name
     C                     Z-ADD*ZERO     WN0579  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTG     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJV5ST           Production Type
     C                     KFLD           WJELDT           Production Date
     C                     KFLD           WJHGCD           Item Code
     C                     KFLD           WJAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0194    WJAIC3           Company Number
     C                     MOVELWL0195    WJV5ST           Production Type
     C                     Z-ADDWL0196    WJELDT           Production Date
     C                     Z-ADDWL0197    WJHGCD           Item Code
     C                     MOVELWL0198    WJAJCD           Warehouse Code
      * Establish starting position
     C           KRSTG     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0199    WN0521           PS Weight Prod
     C                     Z-ADDWL0200    WN0522           PS Pieces Prod
      * CASE: PAR.PS Pieces Prod Allocated is GT Zero
     C           WN0522    IFGT *ZERO                      *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Prod Allocated
     C           WN0521    DIV  WN0522    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0506           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0100           Company Number
     C                     MOVELWL0195    WL0101    P      Production Type
     C                     Z-ADDWL0196    WL0102           Production Date
     C                     Z-ADDWL0197    WL0103           Item Code
     C                     MOVELWL0198    WL0104    P      Warehouse Code
     C                     Z-ADDWN0502    WL0105           PS Available Sh
     C                     Z-ADDWN0503    WL0106           PS Weight Plann
     C                     Z-ADDWN0504    WL0107           PS Pieces Plann
     C                     Z-ADDWN0505    WL0108           PS % of Carcass
     C                     Z-ADDWN0506    WL0109           PS Avg Piece Wg
     C                     Z-ADDWN0507    WL0110           PS Weight Inv O
     C                     Z-ADDWN0508    WL0111           PS Pieces Inv O
     C                     Z-ADDWN0509    WL0112           PS Weight Stand
     C                     Z-ADDWN0510    WL0113           PS Pieces Stand
     C                     Z-ADDWN0511    WL0114           PS Weight Conve
     C                     Z-ADDWN0512    WL0115           PS Pieces Conve
     C                     Z-ADDWN0513    WL0116           PS Weight Shipp
     C                     Z-ADDWN0514    WL0117           PS Pieces Shipp
     C                     Z-ADDWN0515    WL0118           PS Weight Prod
     C                     Z-ADDWN0516    WL0119           PS Pieces Prod
     C                     Z-ADDWN0517    WL0120           PS Weight Inv A
     C                     Z-ADDWN0518    WL0121           PS Pieces Inv A
     C                     Z-ADDWN0519    WL0122           PS Weight Ship
     C                     Z-ADDWN0520    WL0123           PS Pieces Ship
     C                     Z-ADDWN0521    WL0124           PS Weight Prod
     C                     Z-ADDWN0522    WL0125           PS Pieces Prod
     C                     Z-ADDWN0523    WL0126           PS Weight Inv A
     C                     Z-ADDWN0524    WL0127           PS Pieces Inv A
     C                     Z-ADDWN0525    WL0128           PS Unit Weight
     C                     Z-ADDWN0526    WL0129           PS Pieces Whse
     C                     Z-ADDWN0527    WL0130           PS Weight Whse
     C                     Z-ADDWN0528    WL0131           PS Pieces Unuse
     C                     Z-ADDWN0529    WL0132           PS Weight Unuse
     C                     Z-ADDWN0530    WL0133           PS Pieces Unuse
     C                     Z-ADDWN0531    WL0134           PS Weight Unuse
     C                     Z-ADDWN0532    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0533    WL0136           PS Weight Unuse
     C                     Z-ADDWN0534    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0535    WL0138           PS Weight Unuse
     C                     Z-ADDWN0536    WL0139           PS Pieces Unuse
     C                     MOVELWN0537    WL0140    P      PS Item Id
     C                     MOVELWN0538    WL0141    P      Warehouse Type
     C                     MOVELWN0539    WL0142    P      PS Lock Status
     C                     MOVELWN0540    WL0143    P      PS Export/Domes
     C                     MOVELWN0541    WL0144    P      PS Print On Sch
     C                     MOVELWN0542    WL0145    P      PS Piece Count
     C                     MOVELWN0543    WL0146    P      PS Unused Sts 1
     C                     MOVELWN0544    WL0147    P      PS Unused Sts 2
     C                     MOVELWN0545    WL0148    P      PS Unused Sts 3
     C                     MOVELWN0546    WL0149    P      PS Unused Sts 4
     C                     MOVELWN0547    WL0150    P      PS Item Sched N
     C                     MOVELWN0548    WL0151    P      PS Production W
     C                     Z-ADDWN0549    WL0152           PS Weight Order
     C                     Z-ADDWN0550    WL0153           PS Pieces Order
     C                     Z-ADDWN0551    WL0154           PS Weight FC Ad
     C                     Z-ADDWN0552    WL0155           PS Pieces FC Ad
     C                     Z-ADDWN0553    WL0156           PS Weight FX Ad
     C                     Z-ADDWN0554    WL0157           PS Pieces FX Ad
     C                     Z-ADDWN0555    WL0158           PS Weight Sched
     C                     Z-ADDWN0556    WL0159           PS Pieces Sched
     C                     Z-ADDWN0557    WL0160           PS Weight Avail
     C                     Z-ADDWN0558    WL0161           PS Pieces Avail
     C                     Z-ADDWN0559    WL0162           PS Weight Produ
     C                     Z-ADDWN0560    WL0163           PS Pieces Produ
     C                     Z-ADDWN0561    WL0164           PS Weight Fab N
     C                     Z-ADDWN0562    WL0165           PS Pieces Fab N
     C                     Z-ADDWN0563    WL0166           PS Weight Sched
     C                     Z-ADDWN0564    WL0167           PS Pieces Sched
     C                     Z-ADDWN0565    WL0168           PS Weight Sched
     C                     Z-ADDWN0566    WL0169           PS Pieces Sched
     C                     MOVELWN0567    WL0170    P      Department Code
     C                     Z-ADDWN0568    WL0171           Item Structure
     C                     Z-ADDWN0569    WL0172           Item Structure
     C                     Z-ADDWN0570    WL0173           Item Structure
     C                     MOVELWN0571    WL0174    P      Primal Group Co
     C                     MOVELWN0572    WL0175    P      EDI Status 1
     C                     MOVELWN0573    WL0176    P      EDI Status 2
     C                     MOVELWN0574    WL0177    P      EDI Status 3
     C                     MOVELWN0575    WL0178    P      Record Status
     C                     Z-ADDWN0576    WL0179           Job Time
     C                     MOVELWN0577    WL0180    P      User Id
     C                     MOVELWN0578    WL0181    P      Job Name
     C                     Z-ADDWN0579    WL0182           Job Date
     C                     EXSR SZCRRC
      * FP1054 create consumed records
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0201    IFGT *ZERO                      *IF
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0205           Company Number
     C                     Z-ADDWL0201    WL0206           Order Number
     C                     Z-ADDWL0202    WL0207           Order Sequence
     C                     Z-ADDWL0203    WL0208           Order Secondary
     C                     Z-ADDWL0196    WL0209           OD Production D
     C                     Z-ADDYL0022    WL0210           ODS Sequence Nu
     C                     Z-ADDWL0197    WL0211           Consumed Item C
     C                     Z-ADDWL0197    WL0212           Item Code
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0210    YL0022           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0022    IFEQ *ZERO                      *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0213           Company Number
     C                     Z-ADDWL0201    WL0214           Order Number
     C                     Z-ADDWL0202    WL0215           Order Sequence
     C                     Z-ADDWL0203    WL0216           Order Secondary
     C                     Z-ADDWL0196    WL0217           OD Production D
     C                     Z-ADDYL0022    WL0218           ODS Sequence Nu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0218    YL0022           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0219           Company Number
     C                     Z-ADDWL0201    WL0220           Order Number
     C                     Z-ADDWL0202    WL0221           Order Sequence
     C                     Z-ADDWL0203    WL0222           Order Secondary
     C                     Z-ADDWL0196    WL0223           OD Production D
     C                     Z-ADDYL0022    WL0224           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0225           Scheduled Ship
     C                     MOVELWL0198    WL0226    P      Warehouse Code
     C                     Z-ADDWL0197    WL0227           Consumed Item C
     C                     Z-ADDWL0197    WL0228           Item Code
     C                     Z-ADDWL0200    WL0229           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0199    WL0230           OD Weight Sched
     C                     Z-ADD*ZERO     WL0231           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0232           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0233           Deadline Depart
     C                     Z-ADD*ZERO     WL0234           Deadline Depart
     C                     EXSR TJRVGN
     C                     END                             *FI
     C                     GOTO TGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WJOAWT    ADD  WL0199    WN0521           PS Weight Prod
     C           WJCDNB    ADD  WL0200    WN0522           PS Pieces Prod
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
     C                     EXSR TNCHRC
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
      * CASE: PAR.Status Flag 19 Y/N is Yes
     C           WL0204    IFEQ 'Y'                        *IF
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0201    IFGT *ZERO                      *IF
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0205           Company Number
     C                     Z-ADDWL0201    WL0206           Order Number
     C                     Z-ADDWL0202    WL0207           Order Sequence
     C                     Z-ADDWL0203    WL0208           Order Secondary
     C                     Z-ADDWL0196    WL0209           OD Production D
     C                     Z-ADDYL0022    WL0210           ODS Sequence Nu
     C                     Z-ADDWL0197    WL0211           Consumed Item C
     C                     Z-ADDWL0197    WL0212           Item Code
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0210    YL0022           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0022    IFEQ *ZERO                      *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0213           Company Number
     C                     Z-ADDWL0201    WL0214           Order Number
     C                     Z-ADDWL0202    WL0215           Order Sequence
     C                     Z-ADDWL0203    WL0216           Order Secondary
     C                     Z-ADDWL0196    WL0217           OD Production D
     C                     Z-ADDYL0022    WL0218           ODS Sequence Nu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0218    YL0022           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0194    WL0219           Company Number
     C                     Z-ADDWL0201    WL0220           Order Number
     C                     Z-ADDWL0202    WL0221           Order Sequence
     C                     Z-ADDWL0203    WL0222           Order Secondary
     C                     Z-ADDWL0196    WL0223           OD Production D
     C                     Z-ADDYL0022    WL0224           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0225           Scheduled Ship
     C                     MOVELWL0198    WL0226    P      Warehouse Code
     C                     Z-ADDWL0197    WL0227           Consumed Item C
     C                     Z-ADDWL0197    WL0228           Item Code
     C                     Z-ADDWL0200    WL0229           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0199    WL0230           OD Weight Sched
     C                     Z-ADD*ZERO     WL0231           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0232           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0233           Deadline Depart
     C                     Z-ADD*ZERO     WL0234           Deadline Depart
     C                     EXSR TJRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0210           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WVAIC3    WQTH01           Company Number
     C           *LIKE     DEFN WVC4NB    WQTH02           Order Number
     C           *LIKE     DEFN WVDPNB    WQTH03           Order Sequence
     C           *LIKE     DEFN WVUENB    WQTH04           Order Secondary
     C           *LIKE     DEFN WVJGDT    WQTH05           OD Production D
     C           *LIKE     DEFN WVNUDT    WQTH06           Consumed Item C
     C           *LIKE     DEFN WVHGCD    WQTH07           Item Code
      * Define keylist
     C           KRSTH     KLIST
     C                     KFLD           WQTH01           Company Number
     C                     KFLD           WQTH02           Order Number
     C                     KFLD           WQTH03           Order Sequence
     C                     KFLD           WQTH04           Order Secondary
     C                     KFLD           WQTH05           OD Production D
     C                     KFLD           WQTH06           Consumed Item C
     C                     KFLD           WQTH07           Item Code
      * Setup key
     C                     Z-ADDWL0205    WQTH01           Company Number
     C                     Z-ADDWL0206    WQTH02           Order Number
     C                     Z-ADDWL0207    WQTH03           Order Sequence
     C                     Z-ADDWL0208    WQTH04           Order Secondary
     C                     Z-ADDWL0209    WQTH05           OD Production D
     C                     Z-ADDWL0211    WQTH06           Consumed Item C
     C                     Z-ADDWL0212    WQTH07           Item Code
      * Establish starting position
     C           KRSTH     SETLL@B6CPAG                    *
     C           KRSTH     READE@B6CPAG                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDWVOONY    WL0210           ODS Sequence Nu
     C           KRSTH     READE@B6CPAG                  90*
     C                     ENDDO
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TIRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0218           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWAIC3    WQTI01           Company Number
     C           *LIKE     DEFN WWC4NB    WQTI02           Order Number
     C           *LIKE     DEFN WWDPNB    WQTI03           Order Sequence
     C           *LIKE     DEFN WWUENB    WQTI04           Order Secondary
     C           *LIKE     DEFN WWJGDT    WQTI05           OD Production D
      * Define keylist
     C           KRSTI     KLIST
     C                     KFLD           WQTI01           Company Number
     C                     KFLD           WQTI02           Order Number
     C                     KFLD           WQTI03           Order Sequence
     C                     KFLD           WQTI04           Order Secondary
     C                     KFLD           WQTI05           OD Production D
      * Setup key
     C                     Z-ADDWL0213    WQTI01           Company Number
     C                     Z-ADDWL0214    WQTI02           Order Number
     C                     Z-ADDWL0215    WQTI03           Order Sequence
     C                     Z-ADDWL0216    WQTI04           Order Secondary
     C                     Z-ADDWL0217    WQTI05           OD Production D
      * Establish starting position
     C           KRSTI     SETLL@B6CPNB                    *
     C           KRSTI     READE@B6CPNB                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDWWOONY    WL0218           ODS Sequence Nu
     C           KRSTI     READE@B6CPNB                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     ADD  1         WL0218           ODS Sequence Nu
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJRVGN    BEGSR
      *================================================================
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0580  1        EDI Status 1
     C                     MOVEL*BLANK    WN0581  1        EDI Status 2
     C                     MOVEL*BLANK    WN0582  1        EDI Status 3
     C                     MOVEL*BLANK    WN0583  1        Record Status
     C                     Z-ADD*ZERO     WN0584  60       Job Time
     C                     MOVEL*BLANK    WN0585 10        User Id
     C                     MOVEL*BLANK    WN0586 10        Job Name
     C                     Z-ADD*ZERO     WN0587  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTJ     KLIST
     C                     KFLD           WWAIC3           Company Number
     C                     KFLD           WWC4NB           Order Number
     C                     KFLD           WWDPNB           Order Sequence
     C                     KFLD           WWUENB           Order Secondary
     C                     KFLD           WWJGDT           OD Production D
     C                     KFLD           WWOONY           ODS Sequence Nu
      * Setup key
     C                     Z-ADDWL0219    WWAIC3           Company Number
     C                     Z-ADDWL0220    WWC4NB           Order Number
     C                     Z-ADDWL0221    WWDPNB           Order Sequence
     C                     Z-ADDWL0222    WWUENB           Order Secondary
     C                     Z-ADDWL0223    WWJGDT           OD Production D
     C                     Z-ADDWL0224    WWOONY           ODS Sequence Nu
      * Establish starting position
     C           KRSTJ     CHAIN@B6CPNB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3152' W0RTN   7
      * USER: Processing if Data record not found
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.OD Pieces Scheduled is Greater than zero
      *   |- c2    : PAR.OD Weight Scheduled is Greater than zero
      *   '-
     C           WL0229    IFGT *ZERO                      *IF
     C           WL0230    ORGT *ZERO                      *OR
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
     C                     EXSR TKCRRC
     C                     END                             *FI
     C                     GOTO TJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WWFLWG    ADD  WL0230    YL0023           OD Weight Sched
     C           WWIGQT    ADD  WL0229    YL0024           OD Qty/Cnsmd Pi
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.OD Pieces Scheduled is Less than or equal zero
      *   |- c2    : LCL.OD Weight Scheduled is Less than or equal zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFLE *ZERO                      *IF
     C           YL0023    IFLE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
     C                     EXSR TLDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
     C                     EXSR TMCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKCRRC    BEGSR
      *================================================================
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B6CPNA
     C                     Z-ADDWL0219    WXAIC3           Company Number
     C                     Z-ADDWL0220    WXC4NB           Order Number
     C                     Z-ADDWL0221    WXDPNB           Order Sequence
     C                     Z-ADDWL0222    WXUENB           Order Secondary
     C                     Z-ADDWL0223    WXJGDT           OD Production D
     C                     Z-ADDWL0224    WXOONY           ODS Sequence Nu
     C                     Z-ADDWL0225    WXAODT           Scheduled Ship
     C                     MOVELWL0226    WXAJCD           Warehouse Code
     C                     Z-ADDWL0227    WXNUDT           Consumed Item C
     C                     Z-ADDWL0228    WXHGCD           Item Code
     C                     Z-ADDWL0229    WXIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0230    WXFLWG           OD Weight Sched
     C                     Z-ADDWL0231    WXNSQT           ODS Quantity Sh
     C                     Z-ADDWL0232    WXJQWG           ODS Weight Shor
     C                     Z-ADDWL0233    WXNVDT           Deadline Depart
     C                     Z-ADDWL0234    WXBUTM           Deadline Depart
     C                     MOVELWN0580    WXUVST           EDI Status 1
     C                     MOVELWN0581    WXUWST           EDI Status 2
     C                     MOVELWN0582    WXUXST           EDI Status 3
     C                     MOVELWN0583    WXVSST           Record Status
     C                     Z-ADDWN0584    WXAATM           Job Time
     C                     MOVELWN0585    WXAYNA           User Id
     C                     MOVELWN0586    WXA0NA           Job Name
     C                     Z-ADDWN0587    WXAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WXVSST           Record Status
     C                     Z-ADD##JTM     WXAATM           Job Time
     C                     MOVEL##USR     WXAYNA           User Id
     C                     MOVEL##JOB     WXA0NA           Job Name
     C                     Z-ADD##JDT     WXAXDT           Job Date
     C           KLCRTK    KLIST
     C                     KFLD           WXAIC3           Company Number
     C                     KFLD           WXC4NB           Order Number
     C                     KFLD           WXDPNB           Order Sequence
     C                     KFLD           WXUENB           Order Secondary
     C                     KFLD           WXJGDT           OD Production D
     C                     KFLD           WXOONY           ODS Sequence Nu
      * Check for duplicate primary key
     C           KLCRTK    SETLL@B6CPNA                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3153' W0RTN   7
      * Send message 'Order Detail Sched-Con EX'
     C                     MOVEL'USR3153' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TKEXIT
     C                     ENDIF
      *
     C                     WRITE@B6CPNA                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLDLRC    BEGSR
      *================================================================
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B6CPNA
     C                     Z-ADDWWAIC3    WXAIC3           Company Number
     C                     Z-ADDWWC4NB    WXC4NB           Order Number
     C                     Z-ADDWWDPNB    WXDPNB           Order Sequence
     C                     Z-ADDWWUENB    WXUENB           Order Secondary
     C                     Z-ADDWWJGDT    WXJGDT           OD Production D
     C                     Z-ADDWWOONY    WXOONY           ODS Sequence Nu
      *
     C           KLDLTL    KLIST
     C                     KFLD           WXAIC3           Company Number
     C                     KFLD           WXC4NB           Order Number
     C                     KFLD           WXDPNB           Order Sequence
     C                     KFLD           WXUENB           Order Secondary
     C                     KFLD           WXJGDT           OD Production D
     C                     KFLD           WXOONY           ODS Sequence Nu
     C           KLDLTL    CHAIN@B6CPNA              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL009.
     C                     MOVEL'LBL009'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TLEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B6CPNA                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMCHRC    BEGSR
      *================================================================
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0588  1        EDI Status 1
     C                     MOVEL*BLANK    WN0589  1        EDI Status 2
     C                     MOVEL*BLANK    WN0590  1        EDI Status 3
     C                     MOVEL*BLANK    WN0591  1        Record Status
     C                     Z-ADD*ZERO     WN0592  60       Job Time
     C                     MOVEL*BLANK    WN0593 10        User Id
     C                     MOVEL*BLANK    WN0594 10        Job Name
     C                     Z-ADD*ZERO     WN0595  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YGRDC   1
      *
      * Move key fields to @B6CPNA
     C                     Z-ADDWWAIC3    WXAIC3           Company Number
     C                     Z-ADDWWC4NB    WXC4NB           Order Number
     C                     Z-ADDWWDPNB    WXDPNB           Order Sequence
     C                     Z-ADDWWUENB    WXUENB           Order Secondary
     C                     Z-ADDWWJGDT    WXJGDT           OD Production D
     C                     Z-ADDWWOONY    WXOONY           ODS Sequence Nu
      *
     C           KLCHTM    KLIST
     C                     KFLD           WXAIC3           Company Number
     C                     KFLD           WXC4NB           Order Number
     C                     KFLD           WXDPNB           Order Sequence
     C                     KFLD           WXUENB           Order Secondary
     C                     KFLD           WXJGDT           OD Production D
     C                     KFLD           WXOONY           ODS Sequence Nu
     C           KLCHTM    CHAIN@B6CPNA              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL010.
     C                     MOVEL'LBL010'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TMEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TMEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB61    YGRDCS
      * Move non-key fields to @B6CPNA
     C                     Z-ADDWL0225    WXAODT           Scheduled Ship
     C                     MOVELWL0226    WXAJCD    P      Warehouse Code
     C                     Z-ADDWL0227    WXNUDT           Consumed Item C
     C                     Z-ADDWL0228    WXHGCD           Item Code
     C                     Z-ADDYL0024    WXIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDYL0023    WXFLWG           OD Weight Sched
     C                     Z-ADDWWNSQT    WXNSQT           ODS Quantity Sh
     C                     Z-ADDWWJQWG    WXJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     WXNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WXBUTM           Deadline Depart
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WXAATM           Job Time
     C                     MOVEL##USR     WXAYNA           User Id
     C                     MOVEL##JOB     WXA0NA           Job Name
     C                     Z-ADD##JDT     WXAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YGRDC     IFEQ 'Y'
     C                     UPDAT@B6CPNA                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB6CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNCHRC    BEGSR
      *================================================================
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0596  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0597  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0598  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0599  72       PS % of Carcass
     C                     Z-ADD*ZERO     WN0600  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0601  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0602  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0603  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0604  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0605  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0606  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0607  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0608  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0609  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0610  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0611  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0612  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0613  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0614  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0615  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0616 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0617  70       PS Pieces Whse
     C                     Z-ADD*ZERO     WN0618 112       PS Weight Whse
     C                     Z-ADD*ZERO     WN0619  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0620 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0621  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0622 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0623  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0624 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0625  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0626 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0627  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0628  3        PS Item Id
     C                     MOVEL*BLANK    WN0629  2        Warehouse Type
     C                     MOVEL*BLANK    WN0630  1        PS Lock Status
     C                     MOVEL*BLANK    WN0631  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0632  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0633  1        PS Piece Count
     C                     MOVEL*BLANK    WN0634  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0635  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0636  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0637  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0638  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0639  3        PS Production W
     C                     Z-ADD*ZERO     WN0640  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0641  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0642  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0643  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0644  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0645  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0646  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0647  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0648  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0649  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0650  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0651  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0652  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0653  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0654  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0655  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0656  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0657  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0658  6        Department Code
     C                     Z-ADD*ZERO     WN0659  30       Item Structure
     C                     Z-ADD*ZERO     WN0660  30       Item Structure
     C                     Z-ADD*ZERO     WN0661  30       Item Structure
     C                     MOVEL*BLANK    WN0662  6        Primal Group Co
     C                     MOVEL*BLANK    WN0663  1        EDI Status 1
     C                     MOVEL*BLANK    WN0664  1        EDI Status 2
     C                     MOVEL*BLANK    WN0665  1        EDI Status 3
     C                     MOVEL*BLANK    WN0666  1        Record Status
     C                     Z-ADD*ZERO     WN0667  60       Job Time
     C                     MOVEL*BLANK    WN0668 10        User Id
     C                     MOVEL*BLANK    WN0669 10        Job Name
     C                     Z-ADD*ZERO     WN0670  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YHRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWJAIC3    WKAIC3           Company Number
     C                     MOVELWJV5ST    WKV5ST    P      Production Type
     C                     Z-ADDWJELDT    WKELDT           Production Date
     C                     Z-ADDWJHGCD    WKHGCD           Item Code
     C                     MOVELWJAJCD    WKAJCD    P      Warehouse Code
      *
     C           KLCHTN    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKV5ST           Production Type
     C                     KFLD           WKELDT           Production Date
     C                     KFLD           WKHGCD           Item Code
     C                     KFLD           WKAJCD           Warehouse Code
     C           KLCHTN    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL011.
     C                     MOVEL'LBL011'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TNEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TNEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YHRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWJF8WG    WKF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0521    WKOAWT           PS Weight Prod
     C                     Z-ADDWN0522    WKCDNB           PS Pieces Prod
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YHRDCS
     C           YHRDC     ANDNE'N'
     C                     MOVE 'Y'       YHRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##PGM     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YHRDCS
     C           YHRDC     ANDNE'N'
     C                     MOVE 'Y'       YHRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YHRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * Clc Date (descending) RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WYAIC3    WQTO01           Company Number
      * Define keylist
     C           KPSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WYBCDT           Post to G/L Dat
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           WQTO01           Company Number
      * Setup key
     C                     Z-ADDWL0235    WQTO01           Company Number
     C                     Z-ADDWL0236    WYBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTO     SETLL@AFREPU                    *
     C           KRSTO     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0236    IFEQ WYBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0239                     *IF
     C                     Z-ADDWYBCDT    WL0237           *Date1 (ending)
     C                     GOTO TOEXIT                     *QUIT
     C                     END                             *FI
     C           KRSTO     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPRVGN    BEGSR
      *================================================================
      * Clc Date (ascending)  RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMAIC3    WQTP01           Company Number
      * Define keylist
     C           KPSTP     KLIST
     C                     KFLD           WQTP01           Company Number
     C                     KFLD           WMBCDT           Post to G/L Dat
      * Define keylist
     C           KRSTP     KLIST
     C                     KFLD           WQTP01           Company Number
      * Setup key
     C                     Z-ADDWL0240    WQTP01           Company Number
     C                     Z-ADDWL0241    WMBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTP     SETLL@AFREYY                    *
     C           KRSTP     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0241    IFEQ WMBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0244                     *IF
     C                     Z-ADDWMBCDT    WL0242           *Date1 (ending)
     C                     GOTO TPEXIT                     *QUIT
     C                     END                             *FI
     C           KRSTP     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQRVGN    BEGSR
      *================================================================
      * RTV Next Prod Date     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQTQ01           Company Number
      * Define keylist
     C           KPSTQ     KLIST
     C                     KFLD           WQTQ01           Company Number
     C                     KFLD           WABCDT           Post to G/L Dat
      * Define keylist
     C           KRSTQ     KLIST
     C                     KFLD           WQTQ01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQTQ01           Company Number
     C                     Z-ADDP1GVDT    WABCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTQ     SETLL@AFREBE                    *
     C           KRSTQ     READE@AFREBE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P1GVDT           Production Date
     C                     GOTO TQEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Plant Date of Last Order EQ PAR.Plant Date of Last Orde
     C           WABCDT    IFEQ P1GVDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Production Day Status is yes
     C           WAWAST    IFEQ 'Y'                        *IF
     C                     Z-ADDWABCDT    P1GVDT           Production Date
     C                     GOTO TQEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTQ     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * FP1309 Age routines with From and To Date and number of Days
      *================================================================
      * Add new program ...find new fields
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * SCHEDULE AS ORDERED - WHICH SHOULDNT / CANNOT HAPPEN
      *================================================================
      * FP1054 remove above rule -- alloc inv for any order, not just cur
      * ZZCLC PA Age Limits    IF
     C                     Z-ADD*ZERO     WUDNBU           Day NBR USR
      * 04/27/09 FP1054 include sundays when calc RGT
      * 04/15/09 FP1054 split up H and I codes and make I = 2 yrs
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * Production Date RGT and Production Date RGF
      * CASE: PAR.Chilling Time is Not Entered
     C           P2CHTM    IFEQ *ZERO                      *IF
     C                     Z-ADDP1HLDT    YL0004           Production Date
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
     C                     Z-ADDYL0004    YL0003           Production Date
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C           P2CHTM    MULT -1        YL0001           Fresh Chilling
      * PAR.Production Date RGT = PAR.Ship Date USR + LCL.Fresh Chilling
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0001    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0004
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0004
     C                     END
      * Production Date RGF
      * CASE: PAR.Age Code is A: 0 Day
     C           P6FWST    IFEQ 'A'                        *IF
      * 04/10/07 PKD We should not have chilled orders with A Age Code.
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           P6FWST    IFEQ 'B'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-1 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           P6FWST    IFEQ 'C'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-2 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-2        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           P6FWST    IFEQ 'D'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-3 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-3        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           P6FWST    IFEQ 'E'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-4 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-4        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           P6FWST    IFEQ 'F'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-5 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-5        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           P6FWST    IFEQ 'G'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-6 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-6        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is H: 7 Days to 119 Days
     C           P6FWST    IFEQ 'H'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-119 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-119      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     ELSE
      * CASE: PAR.Age Code is I: 120 Days +
     C           P6FWST    IFEQ 'I'                        *IF
      * PAR.Production Date RGF = PAR.Ship Date USR + CON.-730 *DAYS
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0003
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0711 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0712 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0713 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0714  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     MOVELP1AJCD    WL0006    P      Warehouse Code
     C                     Z-ADDYL0003    WL0007           Production Date
     C                     Z-ADDP1AIWG    WL0008           Unit Weight
     C                     MOVELP2PCCT    WL0009    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0010           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0011           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0012           Order Number
     C                     Z-ADDP1DPNB    WL0013           Order Sequence
     C                     Z-ADDP1UENB    WL0014           Order Secondary
     C                     Z-ADDP1AVQT    WL0015           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0016           Weight Ordered
     C                     Z-ADDP1CCQT    WL0017           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0018           Weight Schedule
     C                     Z-ADDP1HWQT    WL0019           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0020           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0021           Ship Date USR
     C                     Z-ADD##JDT     WL0022           To Date
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0018    P1AUWG           Weight Schedule
     C                     Z-ADDWL0019    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0020    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0027    P      Allocation Meth
      * 07/13/09 RMC allow backwards-JIT and forward-ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0027    IFEQ 'F'                        *IF
      * Early as Possible: Schedule as Ordered Adjust From & To Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1GVDT           Production Date
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     Z-ADDP1GVDT    P1GWDT           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1GVDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0028    P      Production Day
      * Retrieve Next Production Date
      * CASE: LCL.Production Day Status is no
     C           YL0028    IFEQ 'N'                        *IF
      * RTV Next Prod Date     RT - Calendar  * 
     C                     EXSR TQRVGN
     C                     END                             *FI
      * CASE: PAR.Production Date RGF GT PAR.Production Date RGT
     C           P1GVDT    IFGT P1GWDT                     *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1GWDT           Production Date
     C                     END                             *FI
     C                     END                             *FI
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0011           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0012           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0013           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0014           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0715  1        Production Type
     C                     Z-ADD*ZERO     WN0716 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0717 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0718  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0719 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0720  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0721  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0722  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0723  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0724  52       Production Yiel
     C                     Z-ADD*ZERO     WN0725  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0726 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0722           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0722           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UKSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0715    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0717    WL0074           ATS Weight Avai
     C                     Z-ADDWN0718    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0717           ATS Weight Avai
     C                     Z-ADDWL0075    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0720    WL0086           Weight Allocate
     C                     Z-ADDWN0719    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0715    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0720    WL0094           Weight Allocate
     C                     Z-ADDWN0721    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0715    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0721    WL0192           Pieces Schedule
     C                     Z-ADDWN0720    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0715    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0720    WL0199           Weight Allocate
     C                     Z-ADDWN0721    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0715    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0717    WL0074           ATS Weight Avai
     C                     Z-ADDWN0718    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0717           ATS Weight Avai
     C                     Z-ADDWL0075    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0720    WL0086           Weight Allocate
     C                     Z-ADDWN0719    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0715    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0720    WL0094           Weight Allocate
     C                     Z-ADDWN0721    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0715    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0721    WL0192           Pieces Schedule
     C                     Z-ADDWN0720    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0715    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0720    WL0199           Weight Allocate
     C                     Z-ADDWN0721    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0722           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0722           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR ULSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0715    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0717    WL0074           ATS Weight Avai
     C                     Z-ADDWN0718    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0717           ATS Weight Avai
     C                     Z-ADDWL0075    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0720    WL0086           Weight Allocate
     C                     Z-ADDWN0719    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0715    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0720    WL0094           Weight Allocate
     C                     Z-ADDWN0721    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0715    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0721    WL0192           Pieces Schedule
     C                     Z-ADDWN0720    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0715    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0720    WL0199           Weight Allocate
     C                     Z-ADDWN0721    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0011    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0012    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0013    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0014    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0727  1        Production Type
     C                     Z-ADD*ZERO     WN0728 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0729 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0730  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0731 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0732  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0733  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0734  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0735  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0736  52       Production Yiel
     C                     Z-ADD*ZERO     WN0737  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0738 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0734           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0734           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UMSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0727    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0729    WL0074           ATS Weight Avai
     C                     Z-ADDWN0730    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0729           ATS Weight Avai
     C                     Z-ADDWL0075    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0732    WL0086           Weight Allocate
     C                     Z-ADDWN0731    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0727    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0732    WL0094           Weight Allocate
     C                     Z-ADDWN0733    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0727    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0733    WL0192           Pieces Schedule
     C                     Z-ADDWN0732    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0727    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0732    WL0199           Weight Allocate
     C                     Z-ADDWN0733    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0727    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0729    WL0074           ATS Weight Avai
     C                     Z-ADDWN0730    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0729           ATS Weight Avai
     C                     Z-ADDWL0075    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0732    WL0086           Weight Allocate
     C                     Z-ADDWN0731    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0727    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0732    WL0094           Weight Allocate
     C                     Z-ADDWN0733    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0727    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0733    WL0192           Pieces Schedule
     C                     Z-ADDWN0732    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0727    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0732    WL0199           Weight Allocate
     C                     Z-ADDWN0733    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0734           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0734           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UNSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0727    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0729    WL0074           ATS Weight Avai
     C                     Z-ADDWN0730    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0729           ATS Weight Avai
     C                     Z-ADDWL0075    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0732    WL0086           Weight Allocate
     C                     Z-ADDWN0731    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0727    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0732    WL0094           Weight Allocate
     C                     Z-ADDWN0733    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0727    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0733    WL0192           Pieces Schedule
     C                     Z-ADDWN0732    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0727    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0732    WL0199           Weight Allocate
     C                     Z-ADDWN0733    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0029  3        Warehouse Code
     C                     PARM P1AIC3    WQ0030  30       Company Number
     C                     PARM P1HGCD    WQ0031  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0032  70       Production Date
     C                     PARM P2ADCD    WQ0033  2        U/M - Primary
     C                     PARM P1AIWG    WQ0034 112       Unit Weight
     C                     PARM P2CHTM    WQ0035  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0036  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0037  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0038  70       Bags Per Unit
     C                     PARM P3WPST    WQ0039  2        Warehouse Type
     C                     PARM P3T1ST    WQ0040  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0041  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0042  70       Order Number
     C                     PARM P1DPNB    WQ0043  30       Order Sequence
     C                     PARM P1UENB    WQ0044  30       Order Secondary
     C                     PARM P1GVDT    WQ0045  70       Production Date
     C                     PARM P1GWDT    WQ0046  70       Production Date
     C                     PARM P1AVQT    WQ0047 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0048 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0049 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0050 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0051 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0052 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0053  70       Ship Date USR
     C                     PARM P1QJST    WQ0054  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0055 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0056  3        Order From Ware
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      *  7/13/09   Default is Backward-JIT
      * Just In Time: Schedule as Ordered
      * CASE: PAR.Production Date RGT GE PAR.Production Date RGF
     C           P1GWDT    IFGE P1GVDT                     *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0011           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0012           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0013           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0014           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0739  1        Production Type
     C                     Z-ADD*ZERO     WN0740 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0741 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0742  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0743 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0744  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0745  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0746  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0747  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0748  52       Production Yiel
     C                     Z-ADD*ZERO     WN0749  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0750 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0746           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0746           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UOSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0739    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0741    WL0074           ATS Weight Avai
     C                     Z-ADDWN0742    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0741           ATS Weight Avai
     C                     Z-ADDWL0075    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0744    WL0086           Weight Allocate
     C                     Z-ADDWN0743    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0739    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0744    WL0094           Weight Allocate
     C                     Z-ADDWN0745    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0739    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0745    WL0192           Pieces Schedule
     C                     Z-ADDWN0744    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0739    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0744    WL0199           Weight Allocate
     C                     Z-ADDWN0745    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0739    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0741    WL0074           ATS Weight Avai
     C                     Z-ADDWN0742    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0741           ATS Weight Avai
     C                     Z-ADDWL0075    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0744    WL0086           Weight Allocate
     C                     Z-ADDWN0743    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0739    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0744    WL0094           Weight Allocate
     C                     Z-ADDWN0745    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0739    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0745    WL0192           Pieces Schedule
     C                     Z-ADDWN0744    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0739    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0744    WL0199           Weight Allocate
     C                     Z-ADDWN0745    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0746           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0746           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UPSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     MOVELWN0739    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP3AOCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0741    WL0074           ATS Weight Avai
     C                     Z-ADDWN0742    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0741           ATS Weight Avai
     C                     Z-ADDWL0075    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP3AOCD    WL0083    P      Warehouse Code
     C                     MOVELP3AOCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0744    WL0086           Weight Allocate
     C                     Z-ADDWN0743    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0089           Company Number
     C                     MOVELWN0739    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP3AOCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0744    WL0094           Weight Allocate
     C                     Z-ADDWN0745    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'N'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0739    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0745    WL0192           Pieces Schedule
     C                     Z-ADDWN0744    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0194           Company Number
     C                     MOVELWN0739    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP3AOCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0744    WL0199           Weight Allocate
     C                     Z-ADDWN0745    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'N'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0011    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0012    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0013    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0014    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0751  1        Production Type
     C                     Z-ADD*ZERO     WN0752 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0753 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0754  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0755 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0756  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0757  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0758  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0759  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0760  52       Production Yiel
     C                     Z-ADD*ZERO     WN0761  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0762 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0054           Company Number
     C                     Z-ADDP1HGCD    WL0055           Item Code
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0056    YL0015    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0758           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0758           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR UQSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0015    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0016                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0751    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0753    WL0074           ATS Weight Avai
     C                     Z-ADDWN0754    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0753           ATS Weight Avai
     C                     Z-ADDWL0075    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0756    WL0086           Weight Allocate
     C                     Z-ADDWN0755    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0751    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0756    WL0094           Weight Allocate
     C                     Z-ADDWN0757    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0751    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0757    WL0192           Pieces Schedule
     C                     Z-ADDWN0756    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0751    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0756    WL0199           Weight Allocate
     C                     Z-ADDWN0757    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT *ZERO                      *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD1         WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0015    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0751    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0753    WL0074           ATS Weight Avai
     C                     Z-ADDWN0754    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0753           ATS Weight Avai
     C                     Z-ADDWL0075    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT *ZERO                      *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0756    WL0086           Weight Allocate
     C                     Z-ADDWN0755    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0751    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0756    WL0094           Weight Allocate
     C                     Z-ADDWN0757    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0751    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0757    WL0192           Pieces Schedule
     C                     Z-ADDWN0756    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0751    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0756    WL0199           Weight Allocate
     C                     Z-ADDWN0757    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0026           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0758           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0758           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0016           Production Date
      * DOC:  Allocation
     C                     EXSR URSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0026    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0025           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0025           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0016           Production Date
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0025                     *IF
     C           P1HWQT    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0057           Company Number
     C                     Z-ADDP1ELDT    WL0058           Post to G/L Dat
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    YL0017    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0060           Company Number
     C                     Z-ADDP1HGCD    WL0061           Item Code
     C                     Z-ADDP1ELDT    WL0062           Production Date
     C                     MOVELYL0018    WL0063    P      Production Day
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0018    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFEQ 'Y'                        *IF
     C           YL0018    IFEQ *BLANK                     *IF
     C           YL0018    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     MOVELWN0751    WL0065    P      Production Type
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     Z-ADDP1HGCD    WL0071           Item Code
     C                     MOVELP1AJCD    WL0072    P      Warehouse Code
     C                     Z-ADDWN0753    WL0074           ATS Weight Avai
     C                     Z-ADDWN0754    WL0075           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0076           Chilling Time U
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0073    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0074    WN0753           ATS Weight Avai
     C                     Z-ADDWL0075    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT *ZERO                      *IF
     C           P2BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT *ZERO                      *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT *ZERO                      *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0077           Company Number
     C                     Z-ADDP1C4NB    WL0078           Order Number
     C                     Z-ADDP1DPNB    WL0079           Order Sequence
     C                     Z-ADDP1UENB    WL0080           Order Secondary
     C                     Z-ADDP1ELDT    WL0081           OD Production D
     C                     Z-ADDP1HLDT    WL0082           Scheduled Ship
     C                     MOVELP1AJCD    WL0083    P      Warehouse Code
     C                     MOVELP1AJCD    WL0084    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0085           Item Code
     C                     Z-ADDWN0756    WL0086           Weight Allocate
     C                     Z-ADDWN0755    WL0087           Quantity Alloca
     C                     MOVELP2QZCD    WL0088    P      Base/Conv/Loss
     C                     EXSR SWRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0089           Company Number
     C                     MOVELWN0751    WL0090    P      Production Type
     C                     Z-ADDP1ELDT    WL0091           Production Date
     C                     Z-ADDP1HGCD    WL0092           Item Code
     C                     MOVELP1AJCD    WL0093    P      Warehouse Code
     C                     Z-ADDWN0756    WL0094           Weight Allocate
     C                     Z-ADDWN0757    WL0095           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0096           Order Number
     C                     Z-ADDP1DPNB    WL0097           Order Sequence
     C                     Z-ADDP1UENB    WL0098           Order Secondary
     C                     MOVEL'Y'       WL0099    P      Status Flag 19
     C                     EXSR SYRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0187           Company Number
     C                     MOVELWN0751    WL0188    P      Production Type
     C                     Z-ADDP1ELDT    WL0189           Production Date
     C                     Z-ADDP1HGCD    WL0190           Item Code
     C                     MOVELP1AJCD    WL0191    P      Warehouse Code
     C                     Z-ADDWN0757    WL0192           Pieces Schedule
     C                     Z-ADDWN0756    WL0193           Weight Schedule
     C                     EXSR TERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0194           Company Number
     C                     MOVELWN0751    WL0195    P      Production Type
     C                     Z-ADDP1ELDT    WL0196           Production Date
     C                     Z-ADDP1HGCD    WL0197           Item Code
     C                     MOVELP1AJCD    WL0198    P      Warehouse Code
     C                     Z-ADDWN0756    WL0199           Weight Allocate
     C                     Z-ADDWN0757    WL0200           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0201           Order Number
     C                     Z-ADDP1DPNB    WL0202           Order Sequence
     C                     Z-ADDP1UENB    WL0203           Order Secondary
     C                     MOVEL'Y'       WL0204    P      Status Flag 19
     C                     EXSR TGRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT *ZERO                      *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0235           Company Number
     C                     Z-ADDP1ELDT    WL0236           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0238           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0239           *Duration (fact
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0237    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT *ZERO                      *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0240           Company Number
     C                     Z-ADDP1ELDT    WL0241           Post to G/L Dat
     C                     Z-ADDP1ELDT    WL0243           *Date2 (beginni
     C                     Z-ADD-1        WL0244           *Duration (fact
     C                     EXSR TPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0242    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ *ZERO                      *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0057  3        Warehouse Code
     C                     PARM P1AIC3    WQ0058  30       Company Number
     C                     PARM P1HGCD    WQ0059  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0060  70       Production Date
     C                     PARM P2ADCD    WQ0061  2        U/M - Primary
     C                     PARM P1AIWG    WQ0062 112       Unit Weight
     C                     PARM P2CHTM    WQ0063  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0064  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0065  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0066  70       Bags Per Unit
     C                     PARM P3WPST    WQ0067  2        Warehouse Type
     C                     PARM P3T1ST    WQ0068  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0069  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0070  70       Order Number
     C                     PARM P1DPNB    WQ0071  30       Order Sequence
     C                     PARM P1UENB    WQ0072  30       Order Secondary
     C                     PARM P1GVDT    WQ0073  70       Production Date
     C                     PARM P1GWDT    WQ0074  70       Production Date
     C                     PARM P1AVQT    WQ0075 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0076 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0077 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0078 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0079 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0080 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0081  70       Ship Date USR
     C                     PARM P1QJST    WQ0082  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0083 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0084  3        Order From Ware
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         UPSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UPEXIT    ENDSR
      /EJECT
     CSR         UQSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UQEXIT    ENDSR
      /EJECT
     CSR         URSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UREXIT    ENDSR
      /EJECT
     CSR         USSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         USEXIT    ENDSR
      /EJECT
     CSR         UTSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UTEXIT    ENDSR
      /EJECT
     CSR         UUSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UUEXIT    ENDSR
      /EJECT
     CSR         UVSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UVEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1ELDT           Production Date
     C                     Z-ADD*ZERO     P1GVDT           Production Date
     C                     Z-ADD*ZERO     P1GWDT           Production Date
     C                     Z-ADD*ZERO     P1EINB           Week Number
     C                     Z-ADD*ZERO     P1ESNB           Accounting Year
     C                     Z-ADD*ZERO     P1ETNB           Accounting Peri
     C                     Z-ADD*ZERO     P1BZNB           OM Week
     C                     Z-ADD*ZERO     P1LHDT           Week Begin Date
     C                     Z-ADD*ZERO     P1LIDT           Week End Date
     C                     MOVEL*BLANK    P3AOCD           Production Ware
     C                     Z-ADD*ZERO     P4AODT           Scheduled Ship
     C                     MOVEL*BLANK    P4AYAA           Order From Ware
     C                     Z-ADD*ZERO     P5CSHD           Chill Time USR
      *
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Day NBR USR
     C                     Z-ADD*ZERO     WUDNBU  20
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WABCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WACQNB           Julian Date
     C                     Z-ADD*ZERO     WAESNB           Accounting Year
     C                     Z-ADD*ZERO     WAETNB           Accounting Peri
     C                     Z-ADD*ZERO     WABZNB           OM Week
     C                     Z-ADD*ZERO     WAEINB           Week Number
     C                     Z-ADD*ZERO     WAAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WAOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WANQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WANRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WAOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WAOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WCBVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDELDT           Production Date
     C                     Z-ADD*ZERO     WDACWG           Quantity on Han
     C                     Z-ADD*ZERO     WDARQT           Quantity on Han
     C                     Z-ADD*ZERO     WDK7DT           Label Date
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAIC3           Company Number
     C                     Z-ADD*ZERO     WEC4NB           Order Number
     C                     Z-ADD*ZERO     WEDPNB           Order Sequence
     C                     Z-ADD*ZERO     WEUENB           Order Secondary
     C                     Z-ADD*ZERO     WEJGDT           OD Production D
     C                     Z-ADD*ZERO     WEAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WEHGCD           Item Code
     C                     Z-ADD*ZERO     WEIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WEF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHAIC3           Company Number
     C                     Z-ADD*ZERO     WHC4NB           Order Number
     C                     Z-ADD*ZERO     WHDPNB           Order Sequence
     C                     Z-ADD*ZERO     WHUENB           Order Secondary
     C                     Z-ADD*ZERO     WHJGDT           OD Production D
     C                     Z-ADD*ZERO     WHAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WHHGCD           Item Code
     C                     Z-ADD*ZERO     WHIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WHFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WHIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WHF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WHIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WHF4WG           OD Avg Piece Wg
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WJAIC3           Company Number
     C                     Z-ADD*ZERO     WJELDT           Production Date
     C                     Z-ADD*ZERO     WJHGCD           Item Code
     C                     Z-ADD*ZERO     WJGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WJWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WJQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WJDJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WJF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WJWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WJD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WJDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WJB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WJWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WJPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WJSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WJB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WJD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WJCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WJEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WJCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WJE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WJD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WJOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WJCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WJUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WJCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WJF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WJBPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WJGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WJBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WJGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WJBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WJGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WJBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WJGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WJBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WJGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WJPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WJDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WJD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WJFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WJD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WJDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WJEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WJSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WJEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WJAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WJECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WJWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WJEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WJFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WJEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WJQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WJEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WJWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WJEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WJRGNB           Item Structure
     C                     Z-ADD*ZERO     WJRHNB           Item Structure
     C                     Z-ADD*ZERO     WJRINB           Item Structure
     C                     Z-ADD*ZERO     WJAATM           Job Time
     C                     Z-ADD*ZERO     WJAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WLAIC3           Company Number
     C                     Z-ADD*ZERO     WLHGCD           Item Code
     C                     Z-ADD*ZERO     WLOQNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WLORNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WLS2DT           CIE Unused Date
     C                     Z-ADD*ZERO     WLMJDT           Create Date
     C                     Z-ADD*ZERO     WLBETM           Create Time
     C                     Z-ADD*ZERO     WLMKDT           Change Date
     C                     Z-ADD*ZERO     WLBFTM           Change Time
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WOAIC3           Company Number
     C                     Z-ADD*ZERO     WOELDT           Production Date
     C                     Z-ADD*ZERO     WOHVHD           Hog Volume
     C                     Z-ADD*ZERO     WOZ6NB           Average Live We
     C                     Z-ADD*ZERO     WOZ7NB           Average Hot Wei
     C                     Z-ADD*ZERO     WODGPC           Cooler Shrink P
     C                     Z-ADD*ZERO     WOAVCW           Average Cold We
     C                     Z-ADD*ZERO     WODIPC           Average Lean Pe
     C                     Z-ADD*ZERO     WOZ0NB           Average Backfat
     C                     Z-ADD*ZERO     WOAVLE           Average Loin-Ey
     C                     Z-ADD*ZERO     WOECWG           Hot Weight Tota
     C                     Z-ADD*ZERO     WOAATM           Job Time
     C                     Z-ADD*ZERO     WOAXDT           Job Date
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field Unit Weight
     C                     Z-ADD*ZERO     WUAIWG 112
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Pieces Per Bag
     C                     Z-ADD*ZERO     WUBDNB  70
      * Define work field Bags Per Unit
     C                     Z-ADD*ZERO     WUBJNB  70
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Trans Contol AS400/Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Define work field Warehouse Location
     C                     MOVEL*BLANK    WUT0ST  1
      * Define work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    WUT1ST  1
      * Define work field Warehouse Chill Time
     C                     Z-ADD*ZERO     WUDBNB  52
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WSAIC3           Company Number
     C                     Z-ADD*ZERO     WSHGCD           Item Code
     C                     Z-ADD*ZERO     WSAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WSAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WSAIWG           Unit Weight
     C                     Z-ADD*ZERO     WSCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WSC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WSURTN           Number Cases On
     C                     Z-ADD*ZERO     WSAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WSRINB           Item Structure
     C                     Z-ADD*ZERO     WSRHNB           Item Structure
     C                     Z-ADD*ZERO     WSRGNB           Item Structure
     C                     Z-ADD*ZERO     WSTFNB           Transportation
     C                     Z-ADD*ZERO     WSTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WSTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WSBLPR           Market Overage
     C                     Z-ADD*ZERO     WSBMPR           Standard Overag
     C                     Z-ADD*ZERO     WSCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WSCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WSSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WSPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WSICN1           Item Category N
     C                     Z-ADD*ZERO     WSICN2           Item Category N
     C                     Z-ADD*ZERO     WSV2NB           Item Category N
     C                     Z-ADD*ZERO     WSITCN           Item Category N
     C                     Z-ADD*ZERO     WSITC5           Item Category N
     C                     Z-ADD*ZERO     WSICN6           Item Category N
     C                     Z-ADD*ZERO     WSICN7           Item Category N
     C                     Z-ADD*ZERO     WSICN8           Item Category N
     C                     Z-ADD*ZERO     WSICN9           Item Category N
     C                     Z-ADD*ZERO     WSICN0           Item Category N
     C                     Z-ADD*ZERO     WSSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WSA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WSSJNB           Production Lead
     C                     Z-ADD*ZERO     WSSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WSSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WSSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WSCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WSCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WSILNB           Packages per ca
     C                     Z-ADD*ZERO     WSCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WSCINB           PM Batch Size
     C                     Z-ADD*ZERO     WSCJNB           Package Level s
     C                     Z-ADD*ZERO     WSCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WSCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WSCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WSCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WSCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WSCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WSCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WSCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WSC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WSB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WSB5NB           PM Line Number
     C                     Z-ADD*ZERO     WSBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WSBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WSF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WSF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WSF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WSBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WSBNNB           Production Qty
     C                     Z-ADD*ZERO     WSAATM           Job Time
     C                     Z-ADD*ZERO     WSAXDT           Job Date
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WVAIC3           Company Number
     C                     Z-ADD*ZERO     WVC4NB           Order Number
     C                     Z-ADD*ZERO     WVDPNB           Order Sequence
     C                     Z-ADD*ZERO     WVUENB           Order Secondary
     C                     Z-ADD*ZERO     WVJGDT           OD Production D
     C                     Z-ADD*ZERO     WVOONY           ODS Sequence Nu
     C                     Z-ADD*ZERO     WVAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WVNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WVHGCD           Item Code
     C                     Z-ADD*ZERO     WVIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WVFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WVNSQT           ODS Quantity Sh
     C                     Z-ADD*ZERO     WVJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     WVNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WVBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WVAATM           Job Time
     C                     Z-ADD*ZERO     WVAXDT           Job Date
      * Define work field *Duration (factor)
     C                     Z-ADD*ZERO     WUDUF   80
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002  3
     C                     Z-ADD*ZERO     WL0003  30
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  70
     C                     MOVEL*BLANK    WL0006  3
     C                     Z-ADD*ZERO     WL0007  70
     C                     Z-ADD*ZERO     WL0008 112
     C                     MOVEL*BLANK    WL0009  1
     C                     Z-ADD*ZERO     WL0010  70
     C                     Z-ADD*ZERO     WL0011  70
     C                     Z-ADD*ZERO     WL0012  70
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  30
     C                     Z-ADD*ZERO     WL0015 112
     C                     Z-ADD*ZERO     WL0016 112
     C                     Z-ADD*ZERO     WL0017 112
     C                     Z-ADD*ZERO     WL0018 112
     C                     Z-ADD*ZERO     WL0019 112
     C                     Z-ADD*ZERO     WL0020 112
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
      * Define local variables for subroutine SKCRRC.
     C                     Z-ADD*ZERO     WL0023  30
     C                     Z-ADD*ZERO     WL0024  70
     C                     Z-ADD*ZERO     WL0025  30
     C                     Z-ADD*ZERO     WL0026  30
     C                     Z-ADD*ZERO     WL0027  70
     C                     Z-ADD*ZERO     WL0028  70
     C                     MOVEL*BLANK    WL0029  3
     C                     MOVEL*BLANK    WL0030  3
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032 112
     C                     Z-ADD*ZERO     WL0033 112
     C                     Z-ADD*ZERO     WL0034 112
     C                     Z-ADD*ZERO     WL0035 112
     C                     Z-ADD*ZERO     WL0036 112
     C                     Z-ADD*ZERO     WL0037 112
     C                     MOVEL*BLANK    WL0038  1
     C                     MOVEL*BLANK    WL0039  1
     C                     MOVEL*BLANK    WL0040  2
     C                     MOVEL*BLANK    WL0041  1
     C                     MOVEL*BLANK    WL0042  1
     C                     MOVEL*BLANK    WL0043  1
     C                     MOVEL*BLANK    WL0044  1
     C                     Z-ADD*ZERO     WL0045  60
     C                     MOVEL*BLANK    WL0046 10
     C                     MOVEL*BLANK    WL0047 10
     C                     Z-ADD*ZERO     WL0048  70
      * Define local variables for subroutine SLDLRC.
     C                     Z-ADD*ZERO     WL0049  30
     C                     Z-ADD*ZERO     WL0050  70
     C                     Z-ADD*ZERO     WL0051  30
     C                     Z-ADD*ZERO     WL0052  30
     C                     Z-ADD*ZERO     WL0053  70
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0054  30
     C                     Z-ADD*ZERO     WL0055  70
     C                     MOVEL*BLANK    WL0056  1
      * Define local variables for subroutine SQRVGN.
     C                     Z-ADD*ZERO     WL0057  30
     C                     Z-ADD*ZERO     WL0058  70
     C                     MOVEL*BLANK    WL0059  1
      * Define local variables for subroutine SRRVGN.
     C                     Z-ADD*ZERO     WL0060  30
     C                     Z-ADD*ZERO     WL0061  70
     C                     Z-ADD*ZERO     WL0062  70
     C                     MOVEL*BLANK    WL0063  1
      * Define local variables for subroutine STRVGN.
     C                     Z-ADD*ZERO     WL0064  30
     C                     MOVEL*BLANK    WL0065  1
     C                     Z-ADD*ZERO     WL0066  70
     C                     MOVEL*BLANK    WL0067  1
      * Define local variables for subroutine SURVGN.
     C                     Z-ADD*ZERO     WL0068  30
     C                     MOVEL*BLANK    WL0069  1
     C                     Z-ADD*ZERO     WL0070  70
     C                     Z-ADD*ZERO     WL0071  70
     C                     MOVEL*BLANK    WL0072  3
     C                     Z-ADD*ZERO     WL0073  92
     C                     Z-ADD*ZERO     WL0074 112
     C                     Z-ADD*ZERO     WL0075  70
     C                     Z-ADD*ZERO     WL0076  52
      * Define local variables for subroutine SWRVGN.
     C                     Z-ADD*ZERO     WL0077  30
     C                     Z-ADD*ZERO     WL0078  70
     C                     Z-ADD*ZERO     WL0079  30
     C                     Z-ADD*ZERO     WL0080  30
     C                     Z-ADD*ZERO     WL0081  70
     C                     Z-ADD*ZERO     WL0082  70
     C                     MOVEL*BLANK    WL0083  3
     C                     MOVEL*BLANK    WL0084  3
     C                     Z-ADD*ZERO     WL0085  70
     C                     Z-ADD*ZERO     WL0086  92
     C                     Z-ADD*ZERO     WL0087 112
     C                     MOVEL*BLANK    WL0088  2
      * Define local variables for subroutine SYRVGN.
     C                     Z-ADD*ZERO     WL0089  30
     C                     MOVEL*BLANK    WL0090  1
     C                     Z-ADD*ZERO     WL0091  70
     C                     Z-ADD*ZERO     WL0092  70
     C                     MOVEL*BLANK    WL0093  3
     C                     Z-ADD*ZERO     WL0094  92
     C                     Z-ADD*ZERO     WL0095  70
     C                     Z-ADD*ZERO     WL0096  70
     C                     Z-ADD*ZERO     WL0097  30
     C                     Z-ADD*ZERO     WL0098  30
     C                     MOVEL*BLANK    WL0099  1
      * Define local variables for subroutine SZCRRC.
     C                     Z-ADD*ZERO     WL0100  30
     C                     MOVEL*BLANK    WL0101  1
     C                     Z-ADD*ZERO     WL0102  70
     C                     Z-ADD*ZERO     WL0103  70
     C                     MOVEL*BLANK    WL0104  3
     C                     Z-ADD*ZERO     WL0105  70
     C                     Z-ADD*ZERO     WL0106  92
     C                     Z-ADD*ZERO     WL0107  70
     C                     Z-ADD*ZERO     WL0108  72
     C                     Z-ADD*ZERO     WL0109  92
     C                     Z-ADD*ZERO     WL0110  92
     C                     Z-ADD*ZERO     WL0111  70
     C                     Z-ADD*ZERO     WL0112  92
     C                     Z-ADD*ZERO     WL0113  70
     C                     Z-ADD*ZERO     WL0114  92
     C                     Z-ADD*ZERO     WL0115  70
     C                     Z-ADD*ZERO     WL0116  92
     C                     Z-ADD*ZERO     WL0117  70
     C                     Z-ADD*ZERO     WL0118  92
     C                     Z-ADD*ZERO     WL0119  70
     C                     Z-ADD*ZERO     WL0120  92
     C                     Z-ADD*ZERO     WL0121  70
     C                     Z-ADD*ZERO     WL0122  92
     C                     Z-ADD*ZERO     WL0123  70
     C                     Z-ADD*ZERO     WL0124  92
     C                     Z-ADD*ZERO     WL0125  70
     C                     Z-ADD*ZERO     WL0126  92
     C                     Z-ADD*ZERO     WL0127  70
     C                     Z-ADD*ZERO     WL0128 112
     C                     Z-ADD*ZERO     WL0129  70
     C                     Z-ADD*ZERO     WL0130 112
     C                     Z-ADD*ZERO     WL0131  70
     C                     Z-ADD*ZERO     WL0132 112
     C                     Z-ADD*ZERO     WL0133  70
     C                     Z-ADD*ZERO     WL0134 112
     C                     Z-ADD*ZERO     WL0135  70
     C                     Z-ADD*ZERO     WL0136 112
     C                     Z-ADD*ZERO     WL0137  70
     C                     Z-ADD*ZERO     WL0138 112
     C                     Z-ADD*ZERO     WL0139  70
     C                     MOVEL*BLANK    WL0140  3
     C                     MOVEL*BLANK    WL0141  2
     C                     MOVEL*BLANK    WL0142  1
     C                     MOVEL*BLANK    WL0143  1
     C                     MOVEL*BLANK    WL0144  1
     C                     MOVEL*BLANK    WL0145  1
     C                     MOVEL*BLANK    WL0146  1
     C                     MOVEL*BLANK    WL0147  1
     C                     MOVEL*BLANK    WL0148  1
     C                     MOVEL*BLANK    WL0149  1
     C                     MOVEL*BLANK    WL0150  2
     C                     MOVEL*BLANK    WL0151  3
     C                     Z-ADD*ZERO     WL0152  92
     C                     Z-ADD*ZERO     WL0153  70
     C                     Z-ADD*ZERO     WL0154  92
     C                     Z-ADD*ZERO     WL0155  70
     C                     Z-ADD*ZERO     WL0156  92
     C                     Z-ADD*ZERO     WL0157  70
     C                     Z-ADD*ZERO     WL0158  92
     C                     Z-ADD*ZERO     WL0159  70
     C                     Z-ADD*ZERO     WL0160  92
     C                     Z-ADD*ZERO     WL0161  70
     C                     Z-ADD*ZERO     WL0162  92
     C                     Z-ADD*ZERO     WL0163  70
     C                     Z-ADD*ZERO     WL0164  92
     C                     Z-ADD*ZERO     WL0165  70
     C                     Z-ADD*ZERO     WL0166  92
     C                     Z-ADD*ZERO     WL0167  70
     C                     Z-ADD*ZERO     WL0168  92
     C                     Z-ADD*ZERO     WL0169  70
     C                     MOVEL*BLANK    WL0170  6
     C                     Z-ADD*ZERO     WL0171  30
     C                     Z-ADD*ZERO     WL0172  30
     C                     Z-ADD*ZERO     WL0173  30
     C                     MOVEL*BLANK    WL0174  6
     C                     MOVEL*BLANK    WL0175  1
     C                     MOVEL*BLANK    WL0176  1
     C                     MOVEL*BLANK    WL0177  1
     C                     MOVEL*BLANK    WL0178  1
     C                     Z-ADD*ZERO     WL0179  60
     C                     MOVEL*BLANK    WL0180 10
     C                     MOVEL*BLANK    WL0181 10
     C                     Z-ADD*ZERO     WL0182  70
      * Define local variables for subroutine TCRVGN.
     C                     Z-ADD*ZERO     WL0183  30
     C                     Z-ADD*ZERO     WL0184  70
     C                     Z-ADD*ZERO     WL0185  52
     C                     Z-ADD*ZERO     WL0186  70
      * Define local variables for subroutine TERVGN.
     C                     Z-ADD*ZERO     WL0187  30
     C                     MOVEL*BLANK    WL0188  1
     C                     Z-ADD*ZERO     WL0189  70
     C                     Z-ADD*ZERO     WL0190  70
     C                     MOVEL*BLANK    WL0191  3
     C                     Z-ADD*ZERO     WL0192  70
     C                     Z-ADD*ZERO     WL0193 112
      * Define local variables for subroutine TGRVGN.
     C                     Z-ADD*ZERO     WL0194  30
     C                     MOVEL*BLANK    WL0195  1
     C                     Z-ADD*ZERO     WL0196  70
     C                     Z-ADD*ZERO     WL0197  70
     C                     MOVEL*BLANK    WL0198  3
     C                     Z-ADD*ZERO     WL0199  92
     C                     Z-ADD*ZERO     WL0200  70
     C                     Z-ADD*ZERO     WL0201  70
     C                     Z-ADD*ZERO     WL0202  30
     C                     Z-ADD*ZERO     WL0203  30
     C                     MOVEL*BLANK    WL0204  1
      * Define local variables for subroutine THRVGN.
     C                     Z-ADD*ZERO     WL0205  30
     C                     Z-ADD*ZERO     WL0206  70
     C                     Z-ADD*ZERO     WL0207  30
     C                     Z-ADD*ZERO     WL0208  30
     C                     Z-ADD*ZERO     WL0209  70
     C                     Z-ADD*ZERO     WL0210  30
     C                     Z-ADD*ZERO     WL0211  70
     C                     Z-ADD*ZERO     WL0212  70
      * Define local variables for subroutine TIRVGN.
     C                     Z-ADD*ZERO     WL0213  30
     C                     Z-ADD*ZERO     WL0214  70
     C                     Z-ADD*ZERO     WL0215  30
     C                     Z-ADD*ZERO     WL0216  30
     C                     Z-ADD*ZERO     WL0217  70
     C                     Z-ADD*ZERO     WL0218  30
      * Define local variables for subroutine TJRVGN.
     C                     Z-ADD*ZERO     WL0219  30
     C                     Z-ADD*ZERO     WL0220  70
     C                     Z-ADD*ZERO     WL0221  30
     C                     Z-ADD*ZERO     WL0222  30
     C                     Z-ADD*ZERO     WL0223  70
     C                     Z-ADD*ZERO     WL0224  30
     C                     Z-ADD*ZERO     WL0225  70
     C                     MOVEL*BLANK    WL0226  3
     C                     Z-ADD*ZERO     WL0227  70
     C                     Z-ADD*ZERO     WL0228  70
     C                     Z-ADD*ZERO     WL0229 112
     C                     Z-ADD*ZERO     WL0230 112
     C                     Z-ADD*ZERO     WL0231  50
     C                     Z-ADD*ZERO     WL0232  92
     C                     Z-ADD*ZERO     WL0233  70
     C                     Z-ADD*ZERO     WL0234  60
      * Define local variables for subroutine TORVGN.
     C                     Z-ADD*ZERO     WL0235  30
     C                     Z-ADD*ZERO     WL0236  70
     C                     Z-ADD*ZERO     WL0237  70
     C                     Z-ADD*ZERO     WL0238  70
     C                     Z-ADD*ZERO     WL0239  80
      * Define local variables for subroutine TPRVGN.
     C                     Z-ADD*ZERO     WL0240  30
     C                     Z-ADD*ZERO     WL0241  70
     C                     Z-ADD*ZERO     WL0242  70
     C                     Z-ADD*ZERO     WL0243  70
     C                     Z-ADD*ZERO     WL0244  80
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0001  52
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Production Date RGT
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field To Date               USR
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Days in Freezer       USR
     C                     Z-ADD*ZERO     YL0006  50
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0007 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0008 112
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0009 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0010 112
      * Define local work field ATS Quantity Need USR
     C                     Z-ADD*ZERO     YL0011 112
      * Define local work field ATS Weight Need USR
     C                     Z-ADD*ZERO     YL0012 112
      * Define local work field Quantity Scheduled
     C                     Z-ADD*ZERO     YL0013 112
      * Define local work field Weight Scheduled
     C                     Z-ADD*ZERO     YL0014 112
      * Define local work field Allocation Method
     C                     MOVEL*BLANK    YL0015  1
      * Define local work field Production Date To
     C                     Z-ADD*ZERO     YL0016  70
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0017  1
      * Define local work field Production Day Status USR
     C                     MOVEL*BLANK    YL0018  1
      * Define null work field Accounting Period Code
     C                     Z-ADD*ZERO     YN0001  20
      * Define local work field Day of Week
     C                     MOVEL*BLANK    YL0019  1
      * Define null work field Week Number
     C                     Z-ADD*ZERO     YN0002  20
      * Define local work field OD Added to Sched Today
     C                     MOVEL*BLANK    YL0020  1
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0021  30
      * Define local work field ODS Sequence Number
     C                     Z-ADD*ZERO     YL0022  30
      * Define local work field OD Weight Scheduled
     C                     Z-ADD*ZERO     YL0023 112
      * Define local work field OD Qty/Cnsmd Pieces Sched
     C                     Z-ADD*ZERO     YL0024 112
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0025  70
      * Define local work field Allocation Method USR
     C                     MOVEL*BLANK    YL0026  1
      * Define local work field Allocation Method
     C                     MOVEL*BLANK    YL0027  1
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0028  1
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 1111111
00002 Y2U0005
