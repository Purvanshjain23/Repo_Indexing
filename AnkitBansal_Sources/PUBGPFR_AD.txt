// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUBGPFR
// ?Date: 14.08.2025 Time: 12:06:49
// ?------------------------------------------------------------------------------------------------

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number header format

ENDIF;

CASE;

IF NEW Order_Number;
// SUPPRESSED PRINT Order Number header format

ENDIF;

CASE;

IF NEW ED_Export_Document_Type;
// SUPPRESSED PRINT ED Export Document Type header format

ENDIF;

//?USER: Process before print of detail format

CASE;

// IF DB1.ED Document Date is Not entered
IF DB1.ED_Document_Date = *ZERO;

// CUR.Date                  USR = JOB.*Job date
CUR.Date_USR = JOB.*Job_date;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Date                  USR = DB1.ED Document Date
CUR.Date_USR = DB1.ED_Document_Date;

ENDIF;

// LCL.Date                  USR = CUR.Date                  USR
LCL.Date_USR = CUR.Date_USR;

// CUR.USR Uom = CON.Lbs
CUR.USR_Uom = 'Lbs';

// LCL.ED Plant Number = CUR.ED Plant Number
LCL.ED_Plant_Number = CUR.ED_Plant_Number;

// WRK.ED Export Certificate Nbr = CUR.ED Export Certificate Nbr
WRK.ED_Export_Certificate_Nbr = CUR.ED_Export_Certificate_Nbr;

// WRK.ED Shipping Marks Txt = CUR.ED Shipping Marks Txt
WRK.ED_Shipping_Marks_Txt = CUR.ED_Shipping_Marks_Txt;

CASE;

// IF DB1.ED Total Package UOM EQ WRK.Blank for 4           USR
IF DB1.ED_Total_Package_UOM = WRK.Blank_for_4_USR;

EXECUTE FUNCTION(RTV UM/Whs Code        RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1429488;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(1);
PARAMETER(1);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(WRK.ED_Total_Package_UOM);
{
 //?USER: Initialize routine

 // WRK.First Time Flag = CND.Yes
 WRK.First_Time_Flag = 'Y';

 // LCL.Boxes Total Quantity = CON.*ZERO
 LCL.Boxes_Total_Quantity = *ZERO;

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 //?PF3280 -- add "Cases" to the case-stmt
 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 CASE;

 // IF DB1.U/M - Ordered is Combos
 IF DB1.U_M_Ordered = 'CB';

 // OR DB1.U/M - Ordered is EQ Boxes
 OR DB1.U_M_Ordered = 'BX';

 // OR DB1.U/M - Ordered is Mixed
 OR DB1.U_M_Ordered = 'MX';

 // OR DB1.U/M - Ordered is Cases
 OR DB1.U_M_Ordered = 'CS';

 CASE;

 // IF DB1.Detail Line Status is Cancelled
 IF DB1.Detail_Line_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Sum for later check
 CASE;

 // IF DB1.U/M - Ordered is EQ Boxes
 IF DB1.U_M_Ordered = 'BX';

 // LCL.Boxes Total Quantity = LCL.Boxes Total Quantity + DB1.Quantity Ordered
 LCL.Boxes_Total_Quantity = LCL.Boxes_Total_Quantity + DB1.Quantity_Ordered;

 ENDIF;

 CASE;

 // IF PAR.USR Unit of Measure is *Blank
 IF PAR.USR_Unit_of_Measure = *BLANK;

 // PAR.USR Unit of Measure = DB1.U/M - Ordered
 PAR.USR_Unit_of_Measure = DB1.U_M_Ordered;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.U/M - Ordered EQ PAR.USR Unit of Measure
 IF DB1.U_M_Ordered = PAR.USR_Unit_of_Measure;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.U/M - Ordered = CND.Mixed
 WRK.U_M_Ordered = 'MX';

 // PAR.USR Unit of Measure = WRK.U/M - Ordered
 PAR.USR_Unit_of_Measure = WRK.U_M_Ordered;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?E2709 RMC 9/12/13  Classify as BX/CB - never MX
 CASE;

 // IF PAR.USR Unit of Measure is Mixed
 IF PAR.USR_Unit_of_Measure = 'MX';

 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('BOXLOAD');
 PARAMETER(LCL.Box_Load_Min_Box_Qty_USR);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Boxes Total Quantity LT LCL.Box Load Min Box Qty USR
 IF LCL.Boxes_Total_Quantity < LCL.Box_Load_Min_Box_Qty_USR;

 // PAR.USR Unit of Measure = CND.Combos
 PAR.USR_Unit_of_Measure = 'CB';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.USR Unit of Measure = CND.Boxed
 PAR.USR_Unit_of_Measure = 'BX';

 ENDIF;

 ENDIF;

}


// CUR.UOM Description 10  USR = Condition name of WRK.ED Total Package UOM
CUR.UOM_Description_10_USR = RTVCND(WRK.ED_Total_Package_UOM);

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.UOM Description 10  USR = Condition name of DB1.ED Total Package UOM
CUR.UOM_Description_10_USR = RTVCND(DB1.ED_Total_Package_UOM);

ENDIF;

CASE;

// IF CUR.ED Slaughter Plant Sts is Selected
IF CUR.ED_Attachment_Subtype = 'X';

// CUR.Toggle Text 1         USR = CON.*BLANK
CUR.Toggle_Text_1_USR = *BLANK;

ENDIF;

CASE;

// IF CUR.ED Processing Plant Sts is Selected
IF CUR.ED_Processing_Plant_Sts = 'X';

// CUR.Toggle Text 2         USR = CON.*BLANK
CUR.Toggle_Text_2_USR = *BLANK;

ENDIF;

CASE;

// IF CUR.ED Warehouse Sts is Selected
IF CUR.ED_Attachment_Type_Sts = 'X';

// CUR.Toggle Text 3         USR = CON.*BLANK
CUR.Toggle_Text_3_USR = *BLANK;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt MPD Dtl w/o MT Cmb PO
EXECUTE FUNCTION(Prt MPD Dtl w/o MT Cmb PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Shipping_Marks_Txt);
PARAMETER(CUR.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(PAR.USR_Overflow);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT ED Export Document Type totals format

CASE;

IF NEW Order_Number;
// CUR.Text USR 7 = CON.Lot No.
CUR.Text_USR_7 = 'Lot No.';

//?Print EST # and address if company value sent to "Y"
EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGMEXEST');
PARAMETER(LCL.Status_Flag_1_Y_N);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Print if Status is set to Y  (will be as of 10/01/2011)
CASE;

// IF LCL.Status Flag 1  Y/N is Yes
IF LCL.Status_Flag_1_Y_N = 'Y';

// CUR.Text USR 4 = CON.Est:
CUR.Text_USR_4 = 'Est:';

CASE;

// IF CUR.Company Number is Guymon
IF CUR.Company_Number = 360;

// CUR.Text 1 USR 30 = LCL.ED Plant Number
CUR.Text_1_USR_30 = LCL.ED_Plant_Number;

CASE;

// IF LCL.ED Plant Number is Guymon 13597
IF LCL.ED_Plant_Number = '13597';

// CUR.Text 2 USR 30 = CON.Seaboard Foods
CUR.Text_2_USR_30 = 'Seaboard Foods';

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Text 2 USR 30 = CON.Guymon Cold Storage
CUR.Text_2_USR_30 = 'Guymon Cold Storage';

ENDIF;

// CUR.Text 3 USR 30 = CON.2700 NE 28th St
CUR.Text_3_USR_30 = '2700 NE 28th St';

// CUR.Text 4 USR 30 = CON.Guymon Oklahoma 73942
CUR.Text_4_USR_30 = 'Guymon Oklahoma 73942';

// IF CUR.Company Number is St. Joseph
IF CUR.Company_Number = 960;

// CUR.Text 1 USR 30 = LCL.ED Plant Number
CUR.Text_1_USR_30 = LCL.ED_Plant_Number;

// CUR.Text 2 USR 30 = CON.Triumph Foods LLC
CUR.Text_2_USR_30 = 'Triumph Foods LLC';

// CUR.Text 3 USR 30 = CON.5302 Stockyards Expy
CUR.Text_3_USR_30 = '5302 Stockyards Expy';

// CUR.Text 4 USR 30 = CON.St. Joseph Missouri 64504
CUR.Text_4_USR_30 = 'St. Joseph Missouri 64504';

// IF CUR.Company Number is Sioux City
IF CUR.Company_Number = 440;

// CUR.Text 1 USR 30 = LCL.ED Plant Number
CUR.Text_1_USR_30 = LCL.ED_Plant_Number;

// CUR.Text 2 USR 30 = CON.Seaboard Triumph Foods
CUR.Text_2_USR_30 = 'Seaboard Triumph Foods';

// LCL.Text 1 USR = CON.5555 Seaboard Triumph Par
LCL.Text_1_USR = '5555 Seaboard Triumph Par';

// LCL.Text USR 5 = CON.kway
LCL.Text_USR_5 = 'kway';

// CUR.Text 3 USR 30 = CONCAT(LCL.Text 1 USR,LCL.Text USR 5,CND.*None)
CUR.Text_3_USR_30 = LCL.Text_1_USR + LCL.Text_USR_5 (*ZERO);

// CUR.Text 4 USR 30 = CON.Sioux City, Iowa 51111
CUR.Text_4_USR_30 = 'Sioux City, Iowa 51111';

ENDIF;

ENDIF;

// Print Order Number totals format
PRINT Order Number totals format;

ENDIF;

CASE;

IF NEW Company_Number;
CASE;

// IF CUR.ED Certify that the meat is Selected
IF CUR.ED_Certify_that_the_meat = 'X';

ENDIF;

// WRK.Date (Alpha) USR = CVTVAR(LCL.Date                  USR)
WRK.Date_Alpha_USR = CVTVAR(LCL.Date_USR);

// WRK.Month/Day Alpha MMDD = SUBSTRING(WRK.Date (Alpha) USR,CON.4,CON.4)
WRK.Month_Day_Alpha_MMDD = SUBSTRING(WRK.Date_Alpha_USR:4:4);

// WRK.Year  (Char) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.2)
WRK.Year_Char_USR = SUBSTRING(WRK.Date_Alpha_USR:2:2);

// WRK.Year Alpha (YYYY) USR = CONCAT(CON.20,WRK.Year  (Char) USR,CON.*ZERO)
WRK.Year_Alpha_YYYY_USR = '20' + WRK.Year_Char_USR (*ZERO);

// WRK.Date (Char-8) USR = CONCAT(WRK.Month/Day Alpha MMDD,WRK.Year Alpha (YYYY) USR,CON.*ZERO)
WRK.Date_Char_8_USR = WRK.Month_Day_Alpha_MMDD + WRK.Year_Alpha_YYYY_USR (*ZERO);

// Print Company Number totals format
PRINT Company Number totals format;

//?Embedded PRTOBJ : Prt MPD Dtl Overfl Cmb PO
CASE;

// IF PAR.USR Overflow is No
IF PAR.USR_Overflow = 'N';

QUIT;

ENDIF;

EXECUTE FUNCTION(Prt MPD Dtl Overfl Cmb PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(WRK.ED_Shipping_Marks_Txt);
PARAMETER(CUR.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(WRK.ED_Export_Certificate_Nbr);
PARAMETER(LCL.Date_USR);
PARAMETER(CUR.ED_Inspector_Name);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

