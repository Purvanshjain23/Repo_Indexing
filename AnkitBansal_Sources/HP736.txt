      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP736
      * TITLE:       VIEW CHECK DETAIL
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     06/21/95
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO VIEW RECORDS
      *           IN THE CHECK DETAIL FILES FOR SALES MOVEMENTS
      *
      *           THIS PROGRAM IS CALLED FROM HP435-WORK WITH CHECKS.
      *
      *           POSITIONERS:  NONE
      *           SELECTORS:    NONE
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/27/95  LEANNE FEDOR
      *           AS REQUESTED BY ALICE, CHANGED THE LOGIC FOR 'BASE
      *           AMOUNT' IN THE CONTROL RECORD TO INCLUDE ONLY THE
      *           RECORDS THAT ARE A PAYMENT TYPE OF 'CARCASS'. AND,
      *           CHANGED THE CORRESPONDING 'PER CWT' CALCULATION TO
      *           USE CARCASS POUNDS.
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 03/08/96  LEANNE FEDOR
      *           THE CHECK AMOUNTS ON CHECKS FOR THE SEABOARD PIGS
      *           SLAUGHTERED AT GUYMON WERE BEING TRUNCATED. WE
      *           INCREASED THE 'CHECK AMOUNT' FIELD IN THE CHECK
      *           HEADER FROM 7,2 TO 9,2. I ALSO CHANGED THE AMOUNT
      *           FIELDS DISPLAYED IN THE CONTROL RECORD TO 9,2.
      *
      * 05/13/96  LEANNE FEDOR
      *           MADE CHANGES TO FACILITATE NEW JDE RELEASE CONVERSION
      *           CHANGED SEARCH TYPE TO 3A; CALL NEW GENERIC
      *           PROGRAM HPJDEV TO VALIDATE INSTEAD OF HPJDEA SINCE
      *           NO VENDOR ADDRESS IS REQUIRED.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 03/02/98  LeAnne Fedor
      *           Added the following fields to the screen. Fields are
      *           viewed with new fold/drop function key.
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *           Also added a new function key to take user back to
      *           the top of the subfile.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD736    CF   E             WORKSTN SFILE(HP736S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSL034D   IF   E           K DISK
      *  HOG GROUPS
      *
      *
     FHSP063    IF   E           K DISK
      *    CHECK HEADER
      *
      *
     FHSP064    IF   E           K DISK
      *    CHECK DETAIL
      *
      *
     FHSP065    IF   E           K DISK
      *    CHECK ADJUSTMENTS
      *
      *
     FHSP066    IF   E           K DISK
      *    SALE TYPE CODES
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * RETRIEVE CHECK HEADER INFO
      *
     C     K1P065        CHAIN     HSP063                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00352'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     C1CHNO        XXCHNO
     C                   MOVEA     XXCHNO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     NO            NOTFLG
      *
      * RETRIEVE SALE TYPE DESCRIPTION
      *
     C     C1STCD        CHAIN     HSP066                             92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     STSTDS        C1STDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     C1STDS
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * SET THE INDICATORS TO CONTROL SCREEN FIELDS
      *
     C     NOTFLG        IFEQ      YES
     C                   SETON                                        90
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP736K1
     C                   WRITE     HP736EC
     C                   EXFMT     HP736C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * INITIALIZE THE RETURN CODE
      *
     C                   MOVEL     '00'          RTNCD
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     NOTFLG        WHENEQ    YES                                          GONE
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN13         WHENEQ    *ON                                          F13-DED/ADD
     C                   CALL      'HP735'
     C                   PARM                    C1CVNO
     C                   PARM                    C1CHNO
     C                   PARM                    WKCHDT
     C                   PARM                    RTNCD
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
     C     *in18         wheneq    *on                                          F18=Top
     C                   eval      reset = no
     C                   eval      routne = set1
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * INITIALIZE CALLED PROGRAM FLAG
      *
     C                   MOVEL     NO            CALFLG
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD, TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN READ THE SELECTED SUBFILE RECORDS AND PROCESS
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
     C                   ENDIF                                                  IF NO ERROR
      *
      * IF THERE ARE NO ERRORS,
      *
     C     ERROR         IFEQ      0                                            IF STILL OK
      *
     C                   SELECT
     C     RTNCD         WHENEQ    '03'
     C                   MOVEL     EXIT          ROUTNE
      *
     C     CALFLG        WHENEQ    YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSL
     C                   ELSE
      *
      * IF THERE ARE SUBFILE ERRORS, SET THE SCREEN TO REDISPLAY
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF STILL OK
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      *          EDIT FOR VALID SUBFILE OPTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
      * SET ON MDT
     C                   SETON                                        85
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * SELECTOR OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READ C
     C                   READC     HP736S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE OPTION
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZERO                                        IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY
      *
     C     DFOPT         IFNE      *BLANK
     C     DFOPT         ANDNE     ' 5'
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
     C                   EXSR      $IND
      *
     C                   UPDATE    HP736S1
     C                   SETOFF                                       30
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READ C
      * RESET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ AND EDIT CHANGED SUBFILE RECORDS
      *          FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS PROCESSING THE SUBFILE
      * SELECTION
      *
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP736S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * NOW, IF THE USER HAS ENTERED A SUBFILE OPTION, GO PERFORM
      * THAT PROCESSING IF THERE ARE NO ERRORS.
      *
     C                   MOVEL     NO            CALFLG
      *
      * VIEW PREMIUMS/DISCOUNTS
      *
     C     DFOPT         IFEQ      ' 5'
     C                   MOVEL     YES           CALFLG
     C                   MOVEL     YES           RESET
     C                   CALL      'HP737'
     C                   PARM                    C1CVNO
     C                   PARM                    C1CNAM
     C                   PARM                    C1CHNO
      *
     C                   PARM                    HDLNNO
     C                   PARM                    DFMVSN
     C                   PARM                    DFHGCD
     C                   PARM                    DFTANO
     C                   PARM                    DFLVHD
     C                   PARM                    DFLVLB
     C                   parm                    dfcdhd
     C                   parm                    dfcdlb
     C                   parm                    dfydhd
     C                   parm                    dfydlb
     C                   PARM                    DFGRAM
     C                   PARM                    WKCHDT
     C                   PARM                    RTNCD
     C                   MOVE      *BLANK        DFOPT
     C                   ENDIF
      *
      * CLEAR THE SUBFILE OPTION ENTERED BY THE USER
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   EXSR      $IND
      *
     C                   UPDATE    HP736S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      * SET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1 - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
      * CLEAR CONTROL RECORD TOTAL FIELDS
      *
     C                   Z-ADD     0             C1GRAM
     C                   Z-ADD     0             C1PDAM
     C                   Z-ADD     0             C1BAAM
     C                   Z-ADD     0             C1NTAM
     C                   Z-ADD     0             WKLVLB
     C                   Z-ADD     0             WKCRLB
     C                   Z-ADD     0             WKCRAM
      *
     C                   Z-ADD     0             HDRRN1
     C                   Z-ADD     0             COUNT
      *
     C                   CLEAR                   HP736S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP736C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET INDICATORS TO CONTROL/PROTECT SCREEN FIELDS
      *
     C                   EXSR      $IND
      *
     C     K1P065        SETLL     HSP064
     C                   EXSR      $LOAD1
      *
     C                   EXSR      $TOTAJ
     C                   EXSR      $CALC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      *  RETRIEVE CHECK DETAIL RECORDS FOR THIS CHECK
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     K1P065        READE     HSP064                                 82
     C     *IN82         IFEQ      *OFF                                         IF NOT EOF
     C                   SETON                                        85
      *
      * FLIP KILL DATE TO MDY FORMAT
      *
     C                   Z-ADD     CDKLDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFKMDY
      *
      * MOVE CHECK DETAIL FIELDS TO SCREEN FIELDS
      *
     C                   MOVEL     CDTPCD        DFTPCD
     C                   Z-ADD     CDMVSN        DFMVSN
      *
     C                   Z-ADD     CDGRAM        DFGRAM
     C                   Z-ADD     CDLVHD        DFLVHD
     C                   Z-ADD     CDLVLB        DFLVLB
     C                   z-add     cdcdhd        dfcdhd
     C                   z-add     cdcdlb        dfcdlb
     C                   z-add     cdydhd        dfydhd
     C                   z-add     cdydlb        dfydlb
     C                   Z-ADD     CDDOHD        DFDOHD
     C                   Z-ADD     CDDOLB        DFDOLB
     C                   Z-ADD     CDTANO        DFTANO
     C                   Z-ADD     CDLNNO        HDLNNO
      *
      * Set condemned/yard dead flag
      *
     C                   if        dfcdhd <> 0 or
     C                             dfcdlb <> 0 or
     C                             dfydhd <> 0 or
     C                             dfydlb <> 0
     C                   eval      dfcyfl = yes
     C                   else
     C                   eval      dfcyfl = no
     C                   endif
      *
      *
      * RETRIEVE ALPHA HOG GROUP CODE
      *
     C                   EXSR      $GRPCD
      *
      * ACCUMULATE A GROSS AMOUNT FOR CARCASS PAYMENTS ONLY
      * THAT WILL BE USED TO CALCULATE THE 'BASE AMOUNT' FOR THE
      * CONTROL RECORD TOTAL.
      *
     C     CDTPCD        IFEQ      'C'
     C                   ADD       CDGRAM        WKCRAM
     C                   ENDIF
      *
      * ACCUMULATE GROSS AMOUNT FOR CONTROL RECORD TOTAL
      *
     C                   ADD       CDGRAM        C1GRAM
      *
      * ACCUMULATE LIVE AND CARCASS POUNDS FOR CALCULATING
      * DOLLARS PER CWT.
      *
     C                   ADD       CDLVLB        WKLVLB
     C                   ADD       CDCRLB        WKCRLB
      *
      * RESET INDICATORS
     C                   EXSR      $IND
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
      *
     C                   WRITE     HP736S1
     C                   SETON                                        81
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * SET THE PAGE OF THE SUBFILE TO DISPLAY TO THE USER
      *
     C     RESET         IFEQ      YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   ELSE
     C                   Z-ADD     1             HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $IND - RESET INDICATORS
      *----------------------------------------------------------------
      *
     C     $IND          BEGSR
      *
      * THE DSPATR LOGIC USED IN THE DSPF REQUIRES AT LEAST ONE
      * INDICATOR TO BE ON.
      *
     C                   SETON                                        42
      *
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $TOTAJ -  ACCUMULATE AJUSTMENT DOLLARS  FOR CONTROL RECORD
      *----------------------------------------------------------------
      *
     C     $TOTAJ        BEGSR
      *
     C                   Z-ADD     0             C1PDAM
     C                   Z-ADD     0             C1DAAM
     C                   SETOFF                                       92
     C     K1P065        SETLL     HSP065
      *
     C     *IN92         DOWEQ     *OFF
     C     K1P065        READE     HSP065                                 92
     C     *IN92         IFEQ      *OFF
      *
     C                   SELECT
     C     CJCJFL        WHENEQ    'P'
     C                   ADD       CJCJAM        C1PDAM
     C     CJCJFL        WHENEQ    'D'
     C     CJLNNO        ANDEQ     0
     C                   ADD       CJCJAM        C1DAAM
     C                   ENDSL
      *
     C                   ENDIF
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CALC - CALCULATE DOLLARS VALUES AND CWT VALUES FOR CONTROL
      *----------------------------------------------------------------
      *
     C     $CALC         BEGSR
      *
      * CALCULATE BASE AMOUNT AND NET AMOUNT FOR CONTROL RECORD
      *
     C     WKCRAM        SUB       C1PDAM        C1BAAM
     C     C1GRAM        ADD       C1DAAM        C1NTAM
      *
      *  CALCULATE DOLLARS PER CWT BASED ON LIVE POUNDS
      *
     C     WKLVLB        IFNE      0                                            IF LIVE LBS
     C     WKLVLB        DIV       100           WKCWT
     C     WKCWT         IFNE      0
     C     C1GRAM        DIV(H)    WKCWT         C1GCWT
     C     C1NTAM        DIV(H)    WKCWT         C1NCWT
     C     C1DAAM        DIV(H)    WKCWT         C1DCWT
     C                   ELSE
     C                   Z-ADD     0             C1GCWT
     C                   Z-ADD     0             C1NCWT
     C                   Z-ADD     0             C1DCWT
     C                   ENDIF
     C                   ENDIF                                                  IF LIVE LBS
      *
      *  CALCULATE DOLLARS PER CWT BASED ON CARCASS POUNDS
      *
     C     WKCRLB        IFNE      0                                            IF CARC LBS
     C     WKCRLB        DIV       100           WKCWT
     C     WKCWT         IFNE      0
     C     C1BAAM        DIV(H)    WKCWT         C1BCWT
     C     C1PDAM        DIV(H)    WKCWT         C1PCWT
     C                   ELSE
     C                   Z-ADD     0             C1BCWT
     C                   Z-ADD     0             C1PCWT
     C                   ENDIF
     C                   ENDIF                                                  IF CARC LBS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT
      *          THE FIRST SCREEN THAT HAS ERRORS
      *---------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
      *
     C                   SETON                                        LR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $TOMDY - FLIP DATE FROM CCYYMMDD TO MMDDYY
      *---------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *---------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $GRPCD - RETRIEVE THE USER-ASSIGNED ALPHA HOG GROUP CODE
      *----------------------------------------------------------------
      *
     C     $GRPCD        BEGSR
      *
      * HOG GROUP
      *
     C     CDHGSN        CHAIN     HSL034D                            92
     C     *IN92         IFEQ      *ON
     C                   MOVEL     'UNKNOWN'     DFHGCD
     C                   ELSE
     C                   MOVEL     HGHGCD        DFHGCD
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $JDEV - SUBROUTINE TO CALL THE EXTERNAL PROGRAM TO VALIDATE JDE
      *         ADDRESS NUMBERS.
      *----------------------------------------------------------------
      *
     C     $JDEV         BEGSR
      *
     C                   MOVEL     NO            JDEFL                          JDE ERRORS
      *
     C                   CALL      'HPJDEV'
     C                   PARM                    MGI                            MSG ID'S
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    INAJD                          JDE ADDR #
     C                   PARM                    INAT1                          JDE ADDR TYP
     C                   PARM                    JDEFL                          ERROR FLAG
     C                   PARM      *BLANK        OUALPH                         JDE NAME
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    WKCHDT
     C                   PARM                    C1CHNO
     C                   PARM                    C1CVNO
     C                   PARM                    C1CMDY
     C                   PARM                    C1CHAM
     C                   PARM                    C1STCD
     C                   PARM                    RTNCD
      *
      * KEY LISTS
      *
     C     K1P065        KLIST
     C                   KFLD                    WKCHDT
     C                   KFLD                    C1CVNO
     C                   KFLD                    C1CHNO
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     NO            CALFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
      *
      * ALPHA AND NUMERIC FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXCHNO            7
      *
      * CONTROL FIELDS, FLAGS, COUNTERS, WORK FIELDS
      *
     C     *LIKE         DEFINE    CHCHAM        WKCRAM
     C     *LIKE         DEFINE    CDLVLB        WKLVLB
     C     *LIKE         DEFINE    CDCRLB        WKCRLB
     C                   Z-ADD     0             WKCWT            15 4
     C     *LIKE         DEFINE    CHCHDT        WKCHDT
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     04            WKPLIN            2 0          SFLPAG(0004)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
     C                   Z-ADD     0             COUNT             2 0
     C     *LIKE         DEFINE    COUNT         WKDIFF
     C     *LIKE         DEFINE    COUNT         WKRMDR
     C     *LIKE         DEFINE    COUNT         WKFLD
      *
      *
      * J.D. EDWARDS PARM FIELDS
      *
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
     C                   MOVE      *BLANK        INAT1             3            JDE ADDR TYP
     C                   MOVE      *BLANK        OUALPH           40            JDE NAME
     C     *LIKE         DEFINE    CHCVNO        INAJD                          JDE ADDR IN
      *
      * RETRIEVE CUSTOMER NAME FROM J.D. EDWARDS SYSTEM
      *
     C                   Z-ADD     C1CVNO        INAJD
     C                   MOVEL(P)  'C'           INAT1
     C                   EXSR      $JDEV
     C     JDEFL         IFEQ      YES
     C                   MOVEL     'UNKNOWN'     C1CNAM
     C                   ELSE
     C                   MOVEL     OUALPH        C1CNAM
     C                   ENDIF
      *
      * THIS PROGRAM DIFFERS FROM THE SHELL PROGRAMS IN THAT F5=REFRESH
      * ALWAYS PLACES THE USER AT THE FIRST PAGE OF THE SUBFILE
      *
     C                   Z-ADD     WKPLIN        MAXRRN
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
