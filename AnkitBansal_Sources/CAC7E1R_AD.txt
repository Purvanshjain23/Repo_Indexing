// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAC7E1R
// ?Date: 14.08.2025 Time: 03:26:23
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize detail screen (new record)

// DTL.USR Company Name = PAR.USR Company Name
DTL.USR_Company_Name = PAR.USR_Company_Name;

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?USER: Initialize detail screen (existing record)

// DTL.USR Company Name = PAR.USR Company Name
DTL.USR_Company_Name = PAR.USR_Company_Name;

//?USER: Process key screen request

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

//?USER: Validate detail screen fields

CASE;

// IF DTL.Terms Discount Percent is Greater than 100 Pct
IF DTL.Terms_Discount_Percent > 100;

// Send error message - 'A discount percentage of greater than 100 is not allowed'
ERROR(USR0079);
MSGPARM(DTL.Terms_Discount_Percent);

ENDIF;

CASE;

// IF DTL.Disc. Due Day before Cuto GT DTL.Net Due Day before Cutoff
IF DTL.Disc_Due_Day_before_Cuto > DTL.Net_Due_Day_before_Cutoff;

// Send error message - 'Discount Day must be less than or equal to Net Day'
ERROR(USR0080);
MSGPARM(DTL.Disc_Due_Day_before_Cuto);

ENDIF;

CASE;

// IF DTL.Disc. Due Day after Cutof GT DTL.Net Due Day after Cutoff
IF DTL.Disc_Due_Day_after_Cutof > DTL.Net_Due_Day_after_Cutoff;

// Send error message - 'Discount day must be less than or equal to Net Day'
ERROR(USR0081);
MSGPARM(DTL.Disc_Due_Day_after_Cutof);

ENDIF;

CASE;

// IF DTL.Months to add before Cuto GT DTL.Months to add after Cutof
IF DTL.Months_to_add_before_Cuto > DTL.Months_to_add_after_Cutof;

// Send error message - 'Before months to Add must be less than or equal to After months to Add'
ERROR(USR0082);
MSGPARM(DTL.Months_to_add_before_Cuto);

ENDIF;

//?USER: Validate detail screen relations

CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

// DTL.Record Status = CND.Deleted
DTL.Record_Status = 'D';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT Create Terms       CR) TYPE(CRTOBJ) FILE(CAAOREP)          AC1102725;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Terms_Code);
PARAMETER(DTL.Description);
PARAMETER(2);
PARAMETER(DTL.Net_Due_Days);
PARAMETER(DTL.Discount_Due_Days);
PARAMETER(DTL.Terms_Discount_Percent);
PARAMETER(DTL.Cutoff_Day);
PARAMETER(DTL.Months_to_add_before_Cuto);
PARAMETER(DTL.Disc_Due_Day_before_Cuto);
PARAMETER(DTL.Net_Due_Day_before_Cutoff);
PARAMETER(DTL.Months_to_add_after_Cutof);
PARAMETER(DTL.Disc_Due_Day_after_Cutof);
PARAMETER(DTL.Net_Due_Day_after_Cutoff);
PARAMETER(DTL.Discount_Due_Date);
PARAMETER(DTL.Due_Date);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG Change Terms       CH) TYPE(CHGOBJ) FILE(CAAOREP)          AC1102726;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Terms_Code);
PARAMETER(DTL.Description);
PARAMETER(2);
PARAMETER(DTL.Net_Due_Days);
PARAMETER(DTL.Discount_Due_Days);
PARAMETER(DTL.Terms_Discount_Percent);
PARAMETER(DTL.Cutoff_Day);
PARAMETER(DTL.Months_to_add_before_Cuto);
PARAMETER(DTL.Disc_Due_Day_before_Cuto);
PARAMETER(DTL.Net_Due_Day_before_Cutoff);
PARAMETER(DTL.Months_to_add_after_Cutof);
PARAMETER(DTL.Disc_Due_Day_after_Cutof);
PARAMETER(DTL.Net_Due_Day_after_Cutoff);
PARAMETER(DTL.Discount_Due_Date);
PARAMETER(DTL.Due_Date);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 //?Return to previously called program
 RETURN;

}


//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

