     H/TITLE PRT Credit Line Exp Dt PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 06/21/04  Time  : 09:00:19
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPDL3PVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PRT Credit Line Exp Dt PV Prompt & validate record
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : Application Profile       Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1   2  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@DRRETH
      * User Profile Control      Retrieval index       NV
      * Renamed input format fields
     I              DRAJVN                          WAAJVN
     I              DRAUNA                          WAAUNA
     I              DRB8NA                          WAB8NA
     I              DRAHVN                          WAAHVN
     I              DRI6ST                          WAI6ST
     I              DRI7ST                          WAI7ST
     I              DRXMST                          WAXMST
     I              DRXNST                          WAXNST
     I              DRI8ST                          WAI8ST
     I              DRNLNB                          WANLNB
     I              DRMPNA                          WAMPNA
     I              DRBCCD                          WABCCD
     I              DRAIC3                          WAAIC3
     I              DRDQCD                          WADQCD
     I              DRDRCD                          WADRCD
     I              DRAJCD                          WAAJCD
     I              DRBUVN                          WABUVN
     I              DRUVST                          WAUVST
     I              DRUWST                          WAUWST
     I              DRUXST                          WAUXST
     I              DRAATM                          WAAATM
     I              DRAYNA                          WAAYNA
     I              DRA0NA                          WAA0NA
     I              DRAXDT                          WAAXDT
      *
     I@DTRETE
      * Application Profile       Retrieval index       NV
      * Renamed input format fields
     I              DTAJVN                          WBAJVN
     I              DTDNCD                          WBDNCD
     I              DTAIC3                          WBAIC3
     I              DTDQCD                          WBDQCD
     I              DTDRCD                          WBDRCD
     I              DTAJCD                          WBAJCD
     I              DTJFST                          WBJFST
     I              DTUVST                          WBUVST
     I              DTUWST                          WBUWST
     I              DTUXST                          WBUXST
     I              DTAATM                          WBAATM
     I              DTAYNA                          WBAYNA
     I              DTA0NA                          WBA0NA
     I              DTAXDT                          WBAXDT
      *
     I@DNRESF
      * Application               RSQ Application Code
      * Renamed input format fields
     I              DNDNCD                          WCDNCD
     I              DNAUNA                          WCAUNA
     I              DNVKST                          WCVKST
     I              DNRSCD                          WCRSCD
     I              DNUVST                          WCUVST
     I              DNUWST                          WCUWST
     I              DNUXST                          WCUXST
     I              DNAATM                          WCAATM
     I              DNAYNA                          WCAYNA
     I              DNA0NA                          WCA0NA
     I              DNAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD1T        DS
      * Internal date
     I                                        1   70XDINT1
     I                                        1   30XDINY1
     I                                        4   50XDINM1
     I                                        6   70XDIND1
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDMT        DS
      * Duration mask
     I                                        1   70XDIMDT
     I                                        1   30XDIMYY
     I                                        4   50XDIMMM
     I                                        6   70XDIMDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P1AJCD
      * N :  Company Number
     I                                    P   4   50P1AIC3
      * N :  Application Code
     I                                        6  11 P1DNCD
      * N :  Salesperson Code
     I                                       12  14 P1BCCD
      * N :  Allow Multi-Company
     I                                       15  15 P1I6ST
      * N :  Default Printer
     I                                       16  25 P1MPNA
     IP2PARM      DS
      * FLD: *Arrays
      * N :  PRT Printer Device
     I                                        1  10 P2WRST
      * N :  PRT Hold Output Sts
     I                                       11  14 P2WSST
      * N :  PRT Save Output Sts
     I                                       15  18 P2WTST
      * N :  PRT Number of Copies
     I                                       19  200P2DYNB
      * N :  PRT Night Queue
     I                                       21  30 P2BVVN
     IP3PARM      DS
      * FLD: *Arrays
      * N :  Nbr of Copies-Alpha   USR
     I                                        1   2 P3YZCD
      * N :  From Date (alpha)     USR
     I                                        3   9 P3ZDCD
      * N :  To Date (alpha)       USR
     I                                       10  16 P3ZCCD
      * N :  Error Flag            USR
     I                                       17  17 P3B8SX
      * N :  Display Flag
     I                                       18  18 P3QKST
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB              '    1 256 #S0001
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0001
      * Application Code
     I                                       11  16 ZA0002
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0003
      * Application Code
     I                                       11  16 ZA0004
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
     C                     MOVEL'N'       WUWUST           PRT Night Queue
      * PMT Print Option  SHR  PV - Print Options  * 
     C                     CALL 'PDG0PVR'              90  PMT Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,01    WQ0001 25        PRT Description
     C           P2WRST    PARM P2WRST    WQ0002 10        PRT Printer Dev
     C           P2WSST    PARM P2WSST    WQ0003  4        PRT Hold Output
     C           P2WTST    PARM P2WTST    WQ0004  4        PRT Save Output
     C           P2DYNB    PARM P2DYNB    WQ0005  20       PRT Number of C
     C           WUWUST    PARM WUWUST    WQ0006  1        PRT Night Queue
     C           P2BVVN    PARM P2BVVN    WQ0007 10        PRT Night Queue
     C                     PARM P1DNCD    WQ0008  6        Application Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG0PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Submit the Report.
     C                     EXSR UASUBR                     Submit the Repo
     C                     END                             *FI
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
     C                     MOVEL'N'       P3B8SX           Error Flag
      * Must enter Month or Date Range.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.From Month 2          USR is Zero
      *   |- c2    : DTL.From Month            USR is Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DL1X1    IFEQ *ZERO                      *IF
     C           #DL1XX    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Send message 'Month or Date Range must'
     C                     MOVEL'USR2721' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       P3B8SX           Error Flag
     C                     END                             *FI
      * Can't enter both a Month and Date Range.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.From Month 2          USR is Not Zero
      *   |- c2    : DTL.From Month            USR is Not Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DL1X1    IFNE *ZERO                      *IF
     C           #DL1XX    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Send message 'Month and Date Range cant'
     C                     MOVEL'USR2722' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       P3B8SX           Error Flag
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * CASE: PAR.Error Flag            USR is No
     C           P3B8SX    IFEQ 'N'                        *IF
      * Load Month Description
     C                     MOVEL*BLANK    #DPITX           Month Descripti
      * CASE: PAR.Month                 USR is January
     C           #DL1X1    IFEQ 01                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'January' #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is February
     C           #DL1X1    IFEQ 02                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'FEBRUARY'#DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is March
     C           #DL1X1    IFEQ 03                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'March'   #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is April
     C           #DL1X1    IFEQ 04                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'April'   #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is May
     C           #DL1X1    IFEQ 05                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'May'     #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is June
     C           #DL1X1    IFEQ 06                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'June'    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is July
     C           #DL1X1    IFEQ 07                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'JULY'    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is August
     C           #DL1X1    IFEQ 08                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'AUGUST'  #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is September
     C           #DL1X1    IFEQ 09                         *IF
     C                     MOVEL@CN,02    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is October
     C           #DL1X1    IFEQ 10                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'October' #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is November
     C           #DL1X1    IFEQ 11                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'November'#DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is December
     C           #DL1X1    IFEQ 12                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'December'#DPITX           Month Descripti
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Initialize date description fields.
     C                     EXSR UBSUBR                     Initialize date
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
     C                     MOVEL'N'       P3QKST           Display Flag
      * CASE: PAR.Error Flag            USR is No
     C           P3B8SX    IFEQ 'N'                        *IF
      * CASE: DTL.From Month 2          USR is Not Zero
     C           #DL1X1    IFNE *ZERO                      *IF
      * Prepare "From" & "To" dates from Month selection.
     C                     EXSR UCSUBR                     Prepare "From"
     C                     ELSE
      * CASE: DTL.From Month            USR is Not Zero
     C           #DL1XX    IFNE *ZERO                      *IF
      * Prepare "From" & "To" dates from Date Range selectiion.
     C                     EXSR UESUBR                     Prepare "From"
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for screen
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P3QKST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #DL1X1           From Month 2
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     Z-ADD*ZERO     #DL1XX           From Month
     C                     Z-ADD*ZERO     #DL2XX           From Year
     C                     Z-ADD*ZERO     #DL3XX           To Month
     C                     Z-ADD*ZERO     #DL4XX           To Year
     C                     Z-ADD*ZERO     #DL9DT           From Date
      * Clear external version also
     C                     Z-ADD*ZERO     VDL9DT
     C                     Z-ADD*ZERO     #DMADT           To Date
      * Clear external version also
     C                     Z-ADD*ZERO     VDMADT
      * CALC: Screen function fields
      * CASE: PAR.Error Flag            USR is No
     C           P3B8SX    IFEQ 'N'                        *IF
      * Load Month Description
     C                     MOVEL*BLANK    #DPITX           Month Descripti
      * CASE: PAR.Month                 USR is January
     C           #DL1X1    IFEQ 01                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'January' #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is February
     C           #DL1X1    IFEQ 02                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'FEBRUARY'#DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is March
     C           #DL1X1    IFEQ 03                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'March'   #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is April
     C           #DL1X1    IFEQ 04                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'April'   #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is May
     C           #DL1X1    IFEQ 05                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'May'     #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is June
     C           #DL1X1    IFEQ 06                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'June'    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is July
     C           #DL1X1    IFEQ 07                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'JULY'    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is August
     C           #DL1X1    IFEQ 08                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'AUGUST'  #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is September
     C           #DL1X1    IFEQ 09                         *IF
     C                     MOVEL@CN,02    #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is October
     C           #DL1X1    IFEQ 10                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'October' #DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is November
     C           #DL1X1    IFEQ 11                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'November'#DPITX           Month Descripti
     C                     ELSE
      * CASE: PAR.Month                 USR is December
     C           #DL1X1    IFEQ 12                         *IF
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     MOVEL'December'#DPITX           Month Descripti
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Initialize date description fields.
     C                     EXSR UJSUBR                     Initialize date
     C                     END                             *FI
      * USER: Load screen
     C                     Z-ADD##JMM     #DL1X1           From Month 2
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC4T
     C                     Z-ADDXDEXDT    VDL9DT
      * Convert To Date               USR to display format
      * Convert date
     C           1000000   ADD  #DMADT    XDINDT
     C                     EXSR XDVC4T
     C                     Z-ADDXDEXDT    VDMADT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Program Setup      RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    WAAJVN           User Profile Na
      * Establish starting position
     C           KRSSA     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAI6ST    P1I6ST           Allow Multi-Com
     C                     MOVELWAMPNA    P1MPNA           Default Printer
     C                     MOVELWABCCD    P1BCCD           Salesperson Cod
     C                     MOVELWABUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAJVN           User Profile Na
     C                     KFLD           WBDNCD           Application Cod
      * Setup key
     C                     MOVELWL0001    WBAJVN           User Profile Na
     C                     MOVELWL0002    WBDNCD           Application Cod
      * Establish starting position
     C           KRSSB     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBAIC3    WL0003           Company Number
     C                     MOVELWBAJCD    WL0004           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCDNCD    WQSC01           Application Cod
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Application Cod
      * Setup key
     C                     MOVELP1DNCD    WQSC01           Application Cod
      * Establish starting position
     C           KRSSC     SETLL@DNRESF                    *
     C           KRSSC     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           WCRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELWCAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
     C           KRSSC     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCDNCD    WQSD01           Application Cod
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Application Cod
      * Setup key
     C                     MOVELWCRSCD    WQSD01           Application Cod
      * Establish starting position
     C           KRSSD     SETLL@DNRESF                    *
     C           KRSSD     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCAUNA    WUAUNA           Description
     C           KRSSD     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Submit the Report.
      *================================================================
      * Dynamically override the SBMJOB command
      * with the job queue from the Print Options screen.
     C                     Z-ADD*ZEROS    ZQ      50
     C           'JOBQ('   CAT  P2BVVN:ZQ W0SJO     P      *Sbmjob overrid
     C                     Z-ADD*ZEROS    ZQ      50
     C           W0SJO     CAT  ')':ZQ    W0SJO     P      *Sbmjob overrid
      * Submit the Report.
     C                     MOVELP2DYNB    P3YZCD           Nbr of Copies-A
     C                     MOVEL*BLANK    P3ZDCD           From Date (alph
     C                     MOVEL#DL9DT    P3ZDCD           From Date (alph
     C                     MOVEL*BLANK    P3ZCCD           To Date (alpha)
     C                     MOVEL#DMADT    P3ZCCD           To Date (alpha)
      * SBMJOB: PRT Credit Line Exp Dt UP - Customer  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PDL4UPR '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELP3ZDCD    #SSTR     P      From Date (alph
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3ZCCD    #SSTR     P      To Date (alpha)
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP2WRST    #SSTR     P      PRT Printer Dev
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 10        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP2WSST    #SSTR     P      PRT Hold Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP2WTST    #SSTR     P      PRT Save Output
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 4         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELP3YZCD    #SSTR     P      Nbr of Copies-A
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 2         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PDL4UPR 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDL4UPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * Send submit message to user.
      * Send message 'Report has been submitted'
     C                     MOVEL'USR2720' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Initialize date description fields.
      *================================================================
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     Z-ADD*ZERO     #DL9DT           From Date
     C                     Z-ADD*ZERO     #DMADT           To Date
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Prepare "From" & "To" dates from Month selection.
      *================================================================
     C                     Z-ADD*ZERO     #DMADT           To Date
      * DTL.From Date             USR =
      *    *COMPUTE ((x1 * x2) + (x3 * x4) + x5)
      * x1    : JOB.*Job year
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.10000
      * +     : PGM.*Synon (17,7) work field
      * x3    : DTL.From Month 2          USR
      * *     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x5    : CON.1
     C           ##JYY     MULT 10000     W0WD02           *Synon (17,7) w
     C           #DL1X1    MULT 100       W0WD03           *Synon (17,7) w
     C           W0WD02    ADD  W0WD03    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  1         W0WD00           *Synon (17,7) w
      * DTL.From Date             USR =       * 
     C                     Z-ADDW0WD00    #DL9DT           From Date
      * Determine Century.
      * CASE: JOB.*Job year is LT 40
     C           ##JYY     IFLT 40                         *IF
     C                     ADD  1000000   #DL9DT           From Date
     C                     END                             *FI
      * Make sure date range fields are blank.
     C                     EXSR UDSUBR                     Make sure date
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Make sure date range fields are blank.
      *================================================================
     C                     Z-ADD*ZERO     #DL1XX           From Month
     C                     Z-ADD*ZERO     #DL2XX           From Year
     C                     Z-ADD*ZERO     #DL3XX           To Month
     C                     Z-ADD*ZERO     #DL4XX           To Year
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Prepare "From" & "To" dates from Date Range selectiion.
      *================================================================
      * Construct "From Date"
     C                     EXSR UFSUBR                     Construct "From
      * CASE: DTL.To Month              USR is Zero
     C           #DL3XX    IFEQ *ZERO                      *IF
      * Determine "To Date" from "From Date"
     C                     EXSR UGSUBR                     Determine "To D
     C                     ELSE
      * CASE: *OTHERWISE
      * Construct "To Date"
     C                     EXSR UHSUBR                     Construct "To D
     C                     END                             *FI
      * Change "To Date" to the last day of the month
     C                     EXSR UISUBR                     Change "To Date
      * CASE: DTL.To Date               USR LT DTL.From Date
     C           #DMADT    IFLT #DL9DT                     *IF
      * Send message 'To Date < From Date'
     C                     MOVEL'USR2719' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL'Y'       P3QKST           Display Flag
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Construct "From Date"
      *================================================================
      * DTL.From Date             USR =
      *    *COMPUTE ((x1 * x2) + (x3 * x4) + x5)
      * x1    : DTL.From Year             USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.10000
      * +     : PGM.*Synon (17,7) work field
      * x3    : DTL.From Month            USR
      * *     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x5    : CON.1
     C           #DL2XX    MULT 10000     W0WD02           *Synon (17,7) w
     C           #DL1XX    MULT 100       W0WD03           *Synon (17,7) w
     C           W0WD02    ADD  W0WD03    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  1         W0WD00           *Synon (17,7) w
      * DTL.From Date             USR =       * 
     C                     Z-ADDW0WD00    #DL9DT           From Date
      * Determine Century.
      * CASE: DTL.From Year             USR is Less Than 40
     C           #DL2XX    IFLT 40                         *IF
     C                     ADD  1000000   #DL9DT           From Date
     C                     END                             *FI
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Determine "To Date" from "From Date"
      *================================================================
     C                     Z-ADD#DL9DT    #DMADT           To Date
     C                     Z-ADD#DL1XX    #DL3XX           To Month
     C                     Z-ADD#DL2XX    #DL4XX           To Year
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * Construct "To Date"
      *================================================================
      * DTL.To Date               USR =
      *    *COMPUTE ((x1 * x2) + (x3 * x4) + x5)
      * x1    : DTL.To Year               USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.10000
      * +     : PGM.*Synon (17,7) work field
      * x3    : DTL.To Month              USR
      * *     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x5    : CON.1
     C           #DL4XX    MULT 10000     W0WD02           *Synon (17,7) w
     C           #DL3XX    MULT 100       W0WD03           *Synon (17,7) w
     C           W0WD02    ADD  W0WD03    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  1         W0WD00           *Synon (17,7) w
      * DTL.To Date               USR =       * 
     C                     Z-ADDW0WD00    #DMADT           To Date
      * Determine Century.
      * CASE: DTL.To Year               USR is Less Than 40
     C           #DL4XX    IFLT 40                         *IF
     C                     ADD  1000000   #DMADT           To Date
     C                     END                             *FI
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * Change "To Date" to the last day of the month
      *================================================================
      * Add one month, then subtract one day.
      * DTL.To Date               USR = DTL.To Date               USR + C
     C           #DMADT    ADD  1000000   XDINDT
     C                     Z-ADD1         XDURR   80
     C                     EXSR XDAMO
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #DMADT
     C                     ELSE
     C           XDINDT    SUB  1000000   #DMADT
     C                     END
      * DTL.To Date               USR = DTL.To Date               USR + C
     C           #DMADT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #DMADT
     C                     ELSE
     C           XDINDT    SUB  1000000   #DMADT
     C                     END
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * Initialize date description fields.
      *================================================================
     C                     MOVEL*BLANK    #DPITX           Month Descripti
     C                     Z-ADD*ZERO     #DL9DT           From Date
     C                     Z-ADD*ZERO     #DMADT           To Date
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDAG1     BEGSR
      *================================================================
      * Prepare parameters to calculate Date Increment
      *================================================================
     C           XDURR     IFLT 0
      * Negative date increment
     C                     Z-ADD-1        XDWK2   60
     C                     ELSE
      * Positive date increment
     C                     Z-ADD1         XDWK2
     C                     ENDIF
     C                     MULT XDWK2     XDURR
      * Refresh the length of updated month (returned in XDWK1).
     C                     Z-ADDXDINDT    XDINT2
     C                     EXSR XDMNH
     C           XDINDD    IFEQ XDWK1
      * Save the start day
     C                     Z-ADD0         XDINDD
     C                     ENDIF
     C                     Z-ADD0         XDINT2
     C                     Z-ADD0         XDIMDT
     C                     MOVEL*BLANK    W0RTN   7
      *================================================================
     CSR         XDAG1E    ENDSR
      /EJECT
     CSR         XDAG2     BEGSR
      *================================================================
      * General calculations driven by Increment Mask
      *================================================================
      * Extract days
     C           XDIMDD    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDIND2
     C                     ENDIF
      * Extract months
     C           XDIMMM    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDINM2
     C                     ENDIF
      * Extract years
     C           XDIMYY    IFEQ 1
     C                     DIV  1000      XDURR   80
     C                     MVR            XDINY2
     C                     ENDIF
     C           XDURR     IFNE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      * Normalize month increment
     C           XDINM2    DIV  12        XDURR   80
     C                     MVR            XDINM2
     C                     ADD  XDURR     XDINY2
      * Apply year increment
     C                     MULT XDWK2     XDINY2
     C                     ADD  XDINYY    XDINY2
      * Apply month increment
     C                     MULT XDWK2     XDINM2
     C                     ADD  XDINMM    XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C           XDINDD    IFGT XDWK1
     C           XDINDD    OREQ 0
      * Restore the start day
     C                     Z-ADDXDWK1     XDINDD
     C                     ENDIF
      * Apply day increment
     C                     MULT XDWK2     XDIND2
     C           XDINDD    ADD  XDIND2    XDURR
     C                     Z-ADD0         XDIND2
      * Normalize day increment
     C           XDIND2    DOWLE0
     C           XDURR     IFEQ 0
     C                     ADD  XDWK2     XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     Z-ADDXDWK1     XDURR
     C                     ENDIF
     C           XDURR     IFLT 0
     C                     SUB  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ADD  XDWK1     XDURR
     C                     ELSE
     C           XDURR     IFGT XDWK1
     C                     SUB  XDWK1     XDURR
     C                     ADD  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ELSE
     C                     Z-ADDXDURR     XDIND2
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
      * Check updated year
     C           XDINY2    IFGE 400
     C           XDINY2    ORLE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
     C           W0RTN     IFEQ 'Y2U0006'
     C                     Z-ADD0         XDINDT
     C                     ELSE
     C                     Z-ADDXDINT2    XDINDT
     C                     ENDIF
      *================================================================
     CSR         XDAG2E    ENDSR
      /EJECT
     CSR         XDAMO     BEGSR
      *================================================================
      * Calculate duration, *MONTHS
      *================================================================
      * Transform the *MONTHS format to the *YYMM format.
     C                     DIV  12        XDURR
     C                     MVR            XDWK1
     C                     MULT 100       XDURR
     C                     ADD  XDWK1     XDURR
      * Check and adjust End Of Month dates, if any.
     C                     EXSR XDAG1
      * Define increment Mask.
     C                     Z-ADD1         XDIMYY
     C                     Z-ADD1         XDIMMM
      * Initiate general DATE INCREMENT calculations.
     C                     EXSR XDAG2
      *================================================================
     CSR         XDAMOE    ENDSR
      /EJECT
     CSR         XDMNH     BEGSR
      *================================================================
      * Find length(XDWK1) in days for the month passed in XDIN2TS
      *================================================================
     C           XDINM2    IFEQ 4
     C           XDINM2    OREQ 6
     C           XDINM2    OREQ 9
     C           XDINM2    OREQ 11
     C                     Z-ADD30        XDWK1   80
     C                     ELSE
     C                     Z-ADD31        XDWK1
     C                     END
     C           XDINM2    IFEQ 2
      * Determine February length
     C           XDINY2    IFEQ 300
     C           XDINY2    OREQ 100
     C                     Z-ADD28        XDWK1
     C                     ELSE
     C           XDINY2    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD29        XDWK1
     C                     ELSE
     C                     Z-ADD28        XDWK1
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XDMNHE    ENDSR
      /EJECT
     CSR         XDNZM     BEGSR
      *================================================================
      * Normalize days
      *================================================================
     C           XDINM2    IFLT 1
     C                     ADD  12        XDINM2
     C                     SUB  1         XDINY2
     C                     ENDIF
     C           XDINM2    IFGT 12
     C                     SUB  12        XDINM2
     C                     ADD  1         XDINY2
     C                     ENDIF
      * Refresh the length of updated month (returned in XDWK1).
     C                     EXSR XDMNH
      *================================================================
     CSR         XDNZME    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC4T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX01           DD
     C                     Z-ADDXDINMM    XDEX02           MM
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY02
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY02
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY02           YYYY
     C                     END
     C                     END
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX01           MM
     C                     Z-ADDXDINDD    XDEX02           DD
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY02
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY02
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY02           YYYY
     C                     END
     C                     END
     C                     ELSE
      * YMD format
     C           XDINDT    IFEQ 1000000
     C                     Z-ADD*ZERO     XDEY01
     C                     ELSE
     C           XDINYY    IFEQ 900
     C                     Z-ADD9999      XDEY01
     C                     ELSE
     C           1800      ADD  XDINYY    XDEY01           YYYY
     C                     END
     C                     END
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC4E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P1DNCD           Application Cod
     C                     MOVEL*BLANK    P1BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P1I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P1MPNA           Default Printer
     C                     MOVEL*BLANK    P2WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P2WSST           PRT Hold Output
     C                     MOVEL*BLANK    P2WTST           PRT Save Output
     C                     Z-ADD*ZERO     P2DYNB           PRT Number of C
     C                     MOVEL*BLANK    P2BVVN           PRT Night Queue
     C                     MOVEL*BLANK    P3YZCD           Nbr of Copies-A
     C                     MOVEL*BLANK    P3ZDCD           From Date (alph
     C                     MOVEL*BLANK    P3ZCCD           To Date (alpha)
     C                     MOVEL*BLANK    P3B8SX           Error Flag
     C                     MOVEL*BLANK    P3QKST           Display Flag
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field PRT Night Queue Run Sts
     C                     MOVEL*BLANK    WUWUST  1
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WANLNB           Entity Number
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SBRVGN.
     C                     MOVEL*BLANK    WL0001 10
     C                     MOVEL*BLANK    WL0002  6
     C                     Z-ADD*ZERO     WL0003  30
     C                     MOVEL*BLANK    WL0004  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * *** Setup Security & Company Title ***
     C                     MOVEL*BLANK    P1DNCD           Application Cod
     C                     MOVEL'A/R'     P1DNCD           Application Cod
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Application   IF
      * RTV Program Setup      RT - User Profile Control  * 
     C                     EXSR SARVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Set Message Queue Dest. - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0001           User Profile Na
     C                     MOVELP1DNCD    ZA0002           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0001    P      User Profile Na
     C                     MOVELP1DNCD    WL0002    P      Application Cod
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    P1AIC3           Company Number
     C                     MOVELWL0004    P1AJCD    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0001    P      User Profile Na
     C                     MOVELP1DNCD    WL0002    P      Application Cod
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    P1AIC3           Company Number
     C                     MOVELWL0004    P1AJCD    P      Warehouse Code
     C                     END                             *FI
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Set Message Queue Dest. - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0001    ZA0003           User Profile Na
     C                     MOVELP1DNCD    ZA0004           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SCRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP
      * *** Initialize Error Flag & Display Flag ***
     C                     MOVEL'N'       P3B8SX           Error Flag
     C                     MOVEL'N'       P3QKST           Display Flag
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Credit Line Exp. Date Rpt
00002 September
