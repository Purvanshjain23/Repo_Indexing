// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLQDDFR
// ?Date: 14.08.2025 Time: 02:55:08
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//?09/20/2016 JBB  E7214 - Check Floor/Ceiling Price for MMP
//?The parameter list was changed on the Clc Base SC MultiPrc  XF
//?- Producer SC Multi Price function to return a flag to signify
//?whether or not the accumulated price is a Floor or Ceiling price.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Initialize subfile control

EXECUTE FUNCTION(Rtv Sub-Contract Info RT) TYPE(RTVOBJ) FILE(PKAQCPP)           AB1110451;
PARAMETER(PAR.PC_Contract_Code);
PARAMETER(PAR.PSC_Sub_Contract_Code);
PARAMETER(WRK.PSC_Sub_Contract_Type);
PARAMETER(WRK.PSC_Commodity_Market_Code);
PARAMETER(WRK.PSC_Commodity_Price_Group);
PARAMETER(NLL.PSC_Mkt_+_or);
PARAMETER(WRK.PSC_Market_Date_Method);
PARAMETER(WRK.GN_Genetic_Code);
PARAMETER(CTL.PO_Option_Code);
PARAMETER(WRK.CMP_Program_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Output Ceiling or Floor Text is flag is populated
CASE;

// IF LCL.Floor/Ceiling Price Type is Ceiling
IF LCL.Floor_Ceiling_Price_Type = 'C';

// CTL.Text 7 USR = CON.Ceiling
CTL.Text_7_USR = 'Ceiling';

//?Output Ceiling or Floor Text is flag is populated
// IF LCL.Floor/Ceiling Price Type is Floor
IF LCL.Floor_Ceiling_Price_Type = 'F';

// CTL.Text 7 USR = CON.Floor
CTL.Text_7_USR = 'Floor';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// Call program Edt Producer SC MltPrcER.
CALL PROGRAM(Edt Producer SC MltPrcER) ('PLQAE1R');
PARAMETER(CTL.PC_Contract_Code);
PARAMETER(CTL.PSC_Sub_Contract_Code);
PARAMETER(CTL.PSCM_Commodity_Market);
PARAMETER(CTL.PSCM_Commodity_Price_Grp);

// CTL.Multi Prices Accum Usr = CON.*ZERO
CTL.Multi_Prices_Accum_Usr = *ZERO;

// WRK.Number 1 USR = CON.*ZERO
WRK.Number_1_USR = *ZERO;

// WRK.Number 2 USR = CON.*ZERO
WRK.Number_2_USR = *ZERO;

// WRK.Number 3 USR = CON.*ZERO
WRK.Number_3_USR = *ZERO;

// WRK.Number 4 USR = CON.*ZERO
WRK.Number_4_USR = *ZERO;

// WRK.Number 5 Usr = CON.*ZERO
WRK.Number_5_Usr = *ZERO;

// WRK.Base Mkt Price 1 Usr = CON.*ZERO
WRK.Base_Mkt_Price_1_Usr = *ZERO;

// WRK.Base Mkt Price 2 Usr = CON.*ZERO
WRK.Base_Mkt_Price_2_Usr = *ZERO;

// WRK.Base Mkt Price 3 Usr = CON.*ZERO
WRK.Base_Mkt_Price_3_Usr = *ZERO;

// WRK.Base Mkt Price 4 Usr = CON.*ZERO
WRK.Base_Mkt_Price_4_Usr = *ZERO;

// WRK.Base Mkt Price 5 Usr = CON.*ZERO
WRK.Base_Mkt_Price_5_Usr = *ZERO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// IF CTL.*CMD key is CF08
IF CTL.*CMD_key = '08';

// WRK.Number 1 USR = CON.*ZERO
WRK.Number_1_USR = *ZERO;

// WRK.Number 2 USR = CON.*ZERO
WRK.Number_2_USR = *ZERO;

// WRK.Number 3 USR = CON.*ZERO
WRK.Number_3_USR = *ZERO;

// WRK.Number 4 USR = CON.*ZERO
WRK.Number_4_USR = *ZERO;

// WRK.Number 5 Usr = CON.*ZERO
WRK.Number_5_Usr = *ZERO;

// WRK.Number 5 Usr = CON.*ZERO
WRK.Number_5_Usr = *ZERO;

// WRK.Base Mkt Price 1 Usr = CON.*ZERO
WRK.Base_Mkt_Price_1_Usr = *ZERO;

// WRK.Base Mkt Price 2 Usr = CON.*ZERO
WRK.Base_Mkt_Price_2_Usr = *ZERO;

// WRK.Base Mkt Price 3 Usr = CON.*ZERO
WRK.Base_Mkt_Price_3_Usr = *ZERO;

// WRK.Base Mkt Price 4 Usr = CON.*ZERO
WRK.Base_Mkt_Price_4_Usr = *ZERO;

// WRK.Base Mkt Price 5 Usr = CON.*ZERO
WRK.Base_Mkt_Price_5_Usr = *ZERO;

// Call program Rtv Kill Date         PV.
CALL PROGRAM(Rtv Kill Date         PV) ('PLQEPVR');
PARAMETER(CTL.TH_Kill_Date);

// Call program Clc Base SC MultiPrc  XF.
CALL PROGRAM(Clc Base SC MultiPrc  XF) ('PLQBXFR');
PARAMETER(CTL.PC_Contract_Code);
PARAMETER(CTL.PSC_Sub_Contract_Code);
PARAMETER('CUR');
PARAMETER(WRK.CMP_Program_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER(CTL.Multi_Prices_Accum_Usr);
PARAMETER(CTL.Market_Price_USR);
PARAMETER(WRK.Pricing_UOM_USR);
PARAMETER(WRK.Pricing_Date_USR);
PARAMETER(WRK.Multi_Mkt_Prc_1_usr);
PARAMETER(WRK.Base_Mkt_Price_1_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_2_Usr);
PARAMETER(WRK.Base_Mkt_Price_2_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_3_Usr);
PARAMETER(WRK.Base_Mkt_Price_3_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_4_Usr);
PARAMETER(WRK.Base_Mkt_Price_4_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_5_Usr);
PARAMETER(WRK.Base_Mkt_Price_5_Usr);
PARAMETER(LCL.Floor_Ceiling_Price_Type);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?CALC: Subfile record function fields

CASE;

// IF WRK.Number 1 USR is Eq Zero
IF WRK.Number_1_USR = *ZERO;

// RCD.Multi Prices Accum Usr = WRK.Multi Mkt Prc 1 usr
RCD.Multi_Prices_Accum_Usr = WRK.Multi_Mkt_Prc_1_usr;

// RCD.Base Mkt Price   /Hd Usr = WRK.Base Mkt Price 1 Usr
RCD.Base_Mkt_Price_Hd_Usr = WRK.Base_Mkt_Price_1_Usr;

// WRK.Number 1 USR = CON.01
WRK.Number_1_USR = 01;

// IF WRK.Number 2 USR is EQ Zero
IF WRK.Number_2_USR = *ZERO;

// RCD.Multi Prices Accum Usr = WRK.Multi Mkt Prc 2 Usr
RCD.Multi_Prices_Accum_Usr = WRK.Multi_Mkt_Prc_2_Usr;

// RCD.Base Mkt Price   /Hd Usr = WRK.Base Mkt Price 2 Usr
RCD.Base_Mkt_Price_Hd_Usr = WRK.Base_Mkt_Price_2_Usr;

// WRK.Number 2 USR = CON.02
WRK.Number_2_USR = 02;

// IF WRK.Number 3 USR is EQ ZERO
IF WRK.Number_3_USR = *ZERO;

// RCD.Multi Prices Accum Usr = WRK.Multi Mkt Prc 3 Usr
RCD.Multi_Prices_Accum_Usr = WRK.Multi_Mkt_Prc_3_Usr;

// RCD.Base Mkt Price   /Hd Usr = WRK.Base Mkt Price 3 Usr
RCD.Base_Mkt_Price_Hd_Usr = WRK.Base_Mkt_Price_3_Usr;

// WRK.Number 3 USR = CON.03
WRK.Number_3_USR = 03;

// IF WRK.Number 4 USR is EQ ZERO
IF WRK.Number_4_USR = *ZERO;

// RCD.Multi Prices Accum Usr = WRK.Multi Mkt Prc 4 Usr
RCD.Multi_Prices_Accum_Usr = WRK.Multi_Mkt_Prc_4_Usr;

// RCD.Base Mkt Price   /Hd Usr = WRK.Base Mkt Price 4 Usr
RCD.Base_Mkt_Price_Hd_Usr = WRK.Base_Mkt_Price_4_Usr;

// WRK.Number 4 USR = CON.04
WRK.Number_4_USR = 04;

// IF WRK.Number 5 Usr is EQ ZERO
IF WRK.Number_5_Usr = *ZERO;

// RCD.Multi Prices Accum Usr = WRK.Multi Mkt Prc 5 Usr
RCD.Multi_Prices_Accum_Usr = WRK.Multi_Mkt_Prc_5_Usr;

// RCD.Base Mkt Price   /Hd Usr = WRK.Base Mkt Price 5 Usr
RCD.Base_Mkt_Price_Hd_Usr = WRK.Base_Mkt_Price_5_Usr;

// WRK.Number 5 Usr = CON.05
WRK.Number_5_Usr = 05;

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Multi Prices Accum Usr = CON.*ZERO
RCD.Multi_Prices_Accum_Usr = *ZERO;

// RCD.Base Mkt Price   /Hd Usr = CON.*ZERO
RCD.Base_Mkt_Price_Hd_Usr = *ZERO;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is Edit
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt Producer SC MltPrcER.
CALL PROGRAM(Edt Producer SC MltPrcER) ('PLQAE1R');
PARAMETER(RCD.PC_Contract_Code);
PARAMETER(RCD.PSC_Sub_Contract_Code);
PARAMETER(RCD.PSCM_Commodity_Market);
PARAMETER(RCD.PSCM_Commodity_Price_Grp);
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PO_Option_Code);

// CTL.Multi Prices Accum Usr = CON.*ZERO
CTL.Multi_Prices_Accum_Usr = *ZERO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

