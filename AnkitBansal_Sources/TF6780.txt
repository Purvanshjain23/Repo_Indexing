     h option(*SRCSTMT:*NODEBUGIO)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF678
      * TITLE:       Yields: Primal Weekly Yield Report (Summary) - STF
      * PROGRAMMER:  Danny Nguyen
      * CREATED:     08/01/23
      *
      * FUNCTION:  Batch program to print the report at the summarized level.
      *            We exclude all BP Items except Picnic Cushions and Kill Offal.
      *
      *             ***This program was clone from TF678 and will print for STF 440 data only***
      *                It will be called in TF477CL right after call of TF678.
      *                Deleted all codes that pertain to Guymon & Triumph Foods.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/29/09  LeAnne Ramsey
      *           Recompile only. Fields were added to Weekly Yield file.
      *
      * 02/02/09  LeAnne Ramsey
      *           Exclude all BP Items except Picnic Cushions.
      *
      * 02/23/09  LeAnne Ramsey
      *           We have removed from the Weekly Yield file the values calculated
      *           using Killed/Cut data. So, we will now calc these values in this
      *           print program.
      *
      * 03/31/09  LeAnne Ramsey
      *           Marty H. and Brad Hamilton wanted to add 4 columns (the SBF/TF Per Head
      *           columns for the 740-Kill Offal lines to the ByProduct Reports. We did not
      *           have room. So, Damon Ginther approved moving Kill Offal to the PRIMAL reports.
      *
      * 04/06/09  LeAnne Ramsey
      *           We will now move all the 750-Render BPs to the PRIMAL reports.
      *
      * 11/09/17  Danny Nguyen    - R12011-Kill Cut Data for STF
      *           File TFP050 was changed. Recompile only. No logic change.
      *
      * 02/08/22  Danny Nguyen   - DO2484 - WI479 STF Variance Reporting
      *           Recompile only due to TFP076 DBF change.
      *           No changes to report.
      *
      * 08/01/23  Danny Nguyen   - WI593   - Clone from TF678. Deleted SBF & TF
      *           data/value processing & replaced it with Co 440 STF data only.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fome8rel0  if   e           k disk
      *    OM Product type
      *
      *
     Fomfarel1  if   e           k disk
      *    OM Product class
      *
      *
     Fpmaprel1  if   e           k disk
      *    TF Meat cost group
      *
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     Ftfp050    if   e           k disk
      *    Kill/Cut data
      *
      *
     Ftfl076a   if   e           k disk
      *  Weekly yields  (records selected with open query)
      *
      *
     Fprint198  o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s            198    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D newisty         s              1    inz('Y')
     D newtfcg         s              1    inz('Y')
     d svtfclcd        s                   like(ywtfclcd)
     d svtfcgcd        s                   like(ywtfcgcd)
     d svsumlev        s                   like(ywsumlev)
     d svcoownfl       s                   like(ywcoownfl)
     d cnt             s              7  0
     d cntbp           s              7  0
     d cntprimal       s              7  0
      *
      *
      * Workfields
      *
     D wkalph          s              3
     D wktfcgcd        s                   like(ywtfcgcd)
     D wkcoownfl       s                   like(ywcoownfl)
      *
      *
      * Parms
      *
     D xxorigin        s              1
     D xxwedt          s              8  0
     D xxistycd        s                   like(ywistycd)
     D xxisgrcd        s                   like(ywisgrcd)
     D xxtfclcd        s                   like(ywtfclcd)
     D xxtfcgcd        s                   like(ywtfcgcd)
      * WI593 - Added STF Parms.
     D xxxpulb         s                   like(ywxpulb)
     D xxxpuslb        s                   like(ywxpuslb)
     D xxxpc           s              7  4
     D xxxkllb         s              7  4
     D xxxctlb         s              7  4
      *
      *
      * Print fields
      *
     d h1demand        s             35
     d h2desc          s             34
     d h3desc          s             40
      *
     d l1desc          s             54
      *
     d t1desc          s             74
      *
      *
      * Array index
      *
     d x               s              1  0
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      * WI593 - Added STF Arrays.
     D arxpulb         s             11  2 dim(4)
     D arxpuslb        s             11  2 dim(4)
     D arxpc           s              7  4 dim(4)
     D arxkllb         s              7  4 dim(4)
     D arxctlb         s              7  4 dim(4)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
     D  ldwemdy               44     49  0
      *
     D  ldtfcgcd             139    140
     D  ldtfcgds             141    155
      *
     D  ldtfclcd             156    158
     D  ldtfclds             159    188
      *
     D  ldistycd             189    191  0
     D  ldistyds             192    221
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Retrieve Kill/Cut Data
      * Print headings
      *
     C     ldwedt        chain     tfp050
     C                   exsr      $h1hdr
      *
      * The breaks were so difficult that we will drive this by reading the
      * master file of Item Structure Types.
      *
     C     *loval        setll     ome8rel0
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      ome8rel0                               90
     C                   if        *in90 = *off and                             If not eof
     C                             (ldistycd = 0 or ldistycd = e8rgnb)
      *
     C                   z-add     0             cnt
     C                   z-add     0             cntbp
     C                   z-add     0             cntprimal
      *
     C                   move      yes           newisty
      *
     C                   move      e8rgnb        wkalph
     C                   eval      h2desc = %trim(wkalph) + '-'
     C                                      + %trim(e8dctx)
      *
      * Print CVs (Not CoOwned)
      *
     C                   eval      wktfcgcd = 'CV'
     C                   move      no            wkcoownfl
     C                   exsr      $rtv076
      *
      * Print NVs (Not CoOwned)
      *
     C                   eval      wktfcgcd = 'NV'
     C                   move      no            wkcoownfl
     C                   exsr      $rtv076
      *
      * Print VAs (not CoOwned)
     C                   eval      wktfcgcd = 'VA'
     C                   move      no            wkcoownfl
     C                   exsr      $rtv076
      *
      * All CoOwned Except BP/OT
      *
     C                   eval      wktfcgcd = *blank
     C                   move      yes           wkcoownfl
     C                   exsr      $rtv076co
      *
      * Print "Primal" subtotal
      * Note: We are only printing a "Primal Total" for Picnics (Item structure = 600),
      *
     C                   evalr     t1desc = 'Primal Total:'
     C                   z-add     2             x
     C                   if        cntprimal > 1 and e8rgnb = 600
     C                   exsr      $t1tot
     C                   else
     C                   exsr      $clear
     C                   endif
      *
      * Print BPs (not coowned)
      * Note: The only BPs we are processing are Picnic Cushions and Kill Offal.
      *
     C                   eval      wktfcgcd = 'BP'
     C                   move      no            wkcoownfl
     C                   exsr      $rtv076
      *
      * Print BPs (coowned)
      * Note: The only BPs we are processing are Picnic Cushions and Kill Offal
      *
     C                   eval      wktfcgcd = 'BP'
     C                   move      yes           wkcoownfl
     C                   exsr      $rtv076
      *
      * Print "BP" subtotal
      * Note: The only BPs we are processing are Picnic Cushions, Kill Offal, Render
      *
     C                   evalr     t1desc = 'ByProduct Total:'
     C                   z-add     2             x
     C                   if        cntbp > 1 and
     C                             (e8rgnb=600 or e8rgnb=740 or e8rgnb=750)
     C                   exsr      $t1tot
     C                   else
     C                   exsr      $clear
     C                   endif
      *
      * Print Item Structure Type total
      *
     C                   if        cnt > 1
     C                   exsr      $t2tot
     C                   else
      * Primal/ByProduct
     C                   z-add     2             x
     C                   exsr      $clear
      * Item Struct Type
     C                   z-add     3             x
     C                   exsr      $clear
     C                   endif
      *
      * Print OTs (both CoOwned and Not CoOwned)
      *
     C                   eval      wktfcgcd = 'OT'
     C                   move      *blank        wkcoownfl
     C                   exsr      $rtv076
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   if        first = yes
     C                   except    nodata
     C                   else
     C                   exsr      $t3tot
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Weekly Yield Records
      *---------------------------------------------------------------
      *
     C     $rtv076       begsr
      *
     C                   move      *blank        svtfclcd
     C                   move      *blank        svtfcgcd
     C                   move      *blank        svcoownfl
     C                   move      yes           newtfcg
      *
      * Retrieve all Weekly Yield records for this:
      *  1) Item Structure Type
      *  2) TF Class Group
      *  Exclude ByProducts...except Picnic Cushions, Kill Offal, Render
      *
     C     key01         setll     tfl076a
      *
     C                   dou       *in91 = *on                                  Do loop
     C     key01         reade     tfl076a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             (wkcoownfl = *blank or wkcoownfl = ywcoownfl)
     C                             and (ywtfcgcd <> 'BP' or
     C                                 (ywistycd = 600 and ywisgrcd = 630 and
     C                                  ywtfcgcd = 'BP' and ywtfclcd = 'BP5') or
     C                                 (ywistycd = 740 and ywtfclcd = 'OFF' and
     C                                  ywtfcgcd = 'BP') or
     C                                 (ywistycd = 750 and ywtfcgcd = 'BP'))
      *
      * Break logic
     C                   select
     C                   when      newisty = yes
     C                   exsr      $h2hdr
     C                   move      no            newisty
     C                   move      no            newtfcg
     C                   exsr      $save
      *
     C                   when      newtfcg = yes
     C                   move      no            newtfcg
     C                   exsr      $save
      *
     C                   when      wktfcgcd <> 'BP' and
     C                             ywtfclcd <> svtfclcd
     C                   exsr      $l1dtl
     C                   exsr      $save
      *
     C                   when      wktfcgcd = 'BP' and
     C                             ywsumlev <> svsumlev
     C                   exsr      $l1dtl
     C                   exsr      $save
     C                   endsl
      *
      * Make Calculations
     C                   exsr      $calc
      *
      * Detail processing
      * (We do not include OTs in any subtotals. But, to be able to print our
      * detail line using our arrays, we need it in first level of the arrays.
      *
     C                   select
     C                   when      wktfcgcd = 'OT'
      * WI593 - Added STF Values.
     C                   add       ywxpulb       arxpulb (1)
     C                   add       ywxpuslb      arxpuslb(1)
     C                   add       xxxpc         arxpc(1)
     C                   add       xxxkllb       arxkllb(1)
     C                   add       xxxctlb       arxctlb(1)
      *
     C                   other
      *
      * WI593 - Added STF Values.
     C                   add       ywxpulb       arxpulb
     C                   add       ywxpuslb      arxpuslb
     C                   add       xxxpc         arxpc
     C                   add       xxxkllb       arxkllb
     C                   add       xxxctlb       arxctlb
      *
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * Print last summarized record
      *
     C                   if        newtfcg = no
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------------
      * Retrieve Weekly Yield Records (CoOwned Only--Exclude OT and BP)
      *----------------------------------------------------------------------------------------
      *
     C     $rtv076co     begsr
      *
     C                   move      *blank        svtfclcd
     C                   move      *blank        svtfcgcd
     C                   move      *blank        svcoownfl
     C                   move      yes           newtfcg
      *
     C     e8rgnb        setll     tfl076a
      *
     C                   dou       *in91 = *on                                  Do CoOwned
     C     e8rgnb        reade     tfl076a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             ywtfcgcd <> 'BP' and
     C                             ywtfcgcd <> 'OT' and
     C                             ywcoownfl = yes
      *
      * Break logic
     C                   select
     C                   when      newisty = yes
     C                   exsr      $h2hdr
     C                   move      no            newisty
     C                   move      no            newtfcg
     C                   exsr      $save
      *
     C                   when      newtfcg = yes
     C                   move      no            newtfcg
     C                   exsr      $save
      *
     C                   when      ywtfcgcd <> svtfcgcd or
     C                             ywtfclcd <> svtfclcd
     C                   exsr      $l1dtl
     C                   exsr      $save
     C                   endsl
      *
      * Make Calculations
     C                   exsr      $calc
      *
      * Detail processing
      *
      * WI593 - Added STF Values.
     C                   add       ywxpulb       arxpulb
     C                   add       ywxpuslb      arxpuslb
     C                   add       xxxpc         arxpc
     C                   add       xxxkllb       arxkllb
     C                   add       xxxctlb       arxctlb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do CoOwned
      *
      * Print last summarized record
      *
     C                   if        newtfcg = no
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Calc Percent and Pounds per Head Killed and Cut
      *---------------------------------------------------------------
      *
     C     $calc         begsr
      *
      * WI593 - Replaced TF814 with TF8140 call.
     C***                call      'TF814'
     C                   call      'TF8140'
     C                   parm      ywwedt        xxwedt
     C                   parm      ywistycd      xxistycd
     C                   parm      ywisgrcd      xxisgrcd
     C                   parm      ywtfclcd      xxtfclcd
     C                   parm      ywtfcgcd      xxtfcgcd
      * WI593 - Added STF Values.
     C                   parm      ywxpulb       xxxpulb
     C                   parm      ywxpuslb      xxxpuslb
     C                   parm      0             xxxpc
     C                   parm      0             xxxctlb
     C                   parm      0             xxxkllb
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Save control fields and setup new "description"
      *---------------------------------------------------------------
      *
     C     $save         begsr
      *
      * Save control fields
     C                   move      ywtfcgcd      svtfcgcd
     C                   move      ywtfclcd      svtfclcd
     C                   move      ywcoownfl     svcoownfl
     C                   move      ywsumlev      svsumlev
      *
      * Set up a description. It will be either:
      *  1) Meat Cost Group + Summary Level
      *  2) TF Classification description
      *
     C                   select
     C                   when      wktfcgcd = 'BP'
     C                   exsr      $bpdesc
     C                   other
      *
     C     svtfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off
     C                   eval      l1desc = amq0na
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------------
      * Concatenate together a description for the ByProduct Lines
      *------------------------------------------------------------------------------------------
      *
     C     $bpdesc       begsr
      *
      * The 'descriptions' on the BP lines aren't really making much sense. So, we keep
      * trying to come up with some combination of fields that are "descriptive".
      *
      * Currently, the "description" will be one of these:
      *  1) Summary Level
      *  2) Meat Cost Group Description + Summary Level
      *  3) Item Structure Class Description + Summary Level
      *
      * Default to Summary Level
      *
     C                   eval      l1desc = %trim(ywsumlev)
      *
      * Then, override to the Meat Cost Group Code Description
      *
     C     ywcgcd        chain     pmaprel1                           92
     C                   if        *in92 = *off                                 If hit
      *
     C                   eval      l1desc = %trim(aprnna) + ' ' +
     C                                      %trim(ywsumlev)
      *
      * Then, override again to the Item Structure Class Description when the
      * Meat Cost Group Summary Level is 'CL'
      *
     C                   if        apeetx = 'CL'                                If cl
     C     ywisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
      *
     C                   eval      l1desc = %trim(fadetx) + ' ' +
     C                                      %trim(ywsumlev)
     C                   endif
     C                   endif                                                  If cl
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print detail line
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
      * Have you hit overflow?
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   exsr      $h2hdr
     C                   endif
      *
     C                   z-add     1             x
     C                   except    l1dtl
     C                   move      no            first
     C                   exsr      $clear
      *
      *
      * To control printing of subtotals, count:
      *
     C                   select
     C                   when      wktfcgcd = 'OT'
      *
     C                   when      wktfcgcd = 'BP'
     C                   add       1             cnt
     C                   add       1             cntbp
     C                   other
      *
     C                   add       1             cnt
     C                   add       1             cntprimal
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print Primal/ByProduct Subtotal line
      *---------------------------------------------------------------
      * This subroutine is ONLY executed for Item Structure Type of
      *     600-Picnics, 740-Kill, 750-Render
      * For Picnics, we print both Primal and ByProduct Subtotals.
      * For Kill and Render, we do not print a Primal Subtotal....just a ByProduct Subtotal.
      *
     C     $t1tot        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   endif
     C                   except    t1tot
      *
      * Clear/initialize
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print total line for Item Structure Type
      *---------------------------------------------------------------
      *
     C     $t2tot        begsr
      *
     C                   z-add     3             x
     C                   seton                                        88
      *
     C                   if        cnt > 0
     C                   evalr     t1desc = 'Total for ' + %trim(h2desc) + ':'
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   endif
     C                   except    t1tot
     C                   endif
      *
     C                   setoff                                       88
      * Clear/initialize
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print Report Total
      *---------------------------------------------------------------
      *
     C     $t3tot        begsr
      *
     C                   seton                                        8889
     C                   z-add     4             x
      *
     C                   evalr     t1desc = 'Report Total:'
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   else
     C                   except    blank
     C                   endif
      *
     C                   except    t1tot
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear arrays
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * WI593 - Added STF Arrays.
     C                   z-add     0             arxpuslb (x)
     C                   z-add     0             arxpulb  (x)
     C                   z-add     0             arxpc    (x)
     C                   z-add     0             arxkllb  (x)
     C                   z-add     0             arxctlb  (x)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print report heading
      *---------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   except    h1hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Item Structure Header
      *---------------------------------------------------------------
      *
     C     $h2hdr        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   endif
      *
     C                   except    h2hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxorigin
      *
      * Key Lists
      *
     C     key01         klist
     C                   kfld                    e8rgnb
     C                   kfld                    wktfcgcd
      *
      * Retrieve time for report heading.
      *
     C                   time                    rtime
      *
      * This report is generated:
      *  1) From Inventory Stock Closing
      *  2) As a Preliminary/Final from Margin Adjustment Close
      *  3) On-demand
      *
     C                   select
     C                   when      xxorigin = 'N'
     C                   eval      %subst(h1demand:4:28) =
     C                             'From Inventory Stock Closing'
      *
     C                   when      ldpfcd = 'D'
     C                   eval      %subst(h1demand:13:9) = 'On-Demand'
      *
     C                   when      ldpfcd = 'F'
     C                   eval      %subst(h1demand:4:29) =
     C                             'Final Margin Adjustment Close'
      *
     C                   when      ldpfcd = 'P'
     C                   eval      %subst(h1demand:1:35) =
     C                             'Preliminary Margin Adjustment Close'
     C                   endsl
      *
      *
      * Set up Report Headings
      *
     C                   if        ldistycd = 0
     C                   seton                                        95
     C                   endif
      *
     C                   if        ldtfcgcd = *blank
     C                   seton                                        94
     C                   endif
      *
     C                   if        ldtfclcd = *blank
     C                   seton                                        93
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------------------------------
      *
     Oprint198  e            h1hdr          1 01
     O                       sdpgm               10
     O                                          102 'PRIMAL WEEKLY YIELD REPORT'
     O                                          110 '-SUMMARY'
     O                                          126 'FOR COMPANY STF'
     O                                          188 'DATE'
     O                       udate         y    198
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                       h1demand           111
     O                                          188 'TIME'
     O                       rtime              198 '  :  :  '
      *
     O          e            h1hdr          1
     O                                          188 'PAGE'
     O                       page          z    198
      *
     O          e            h1hdr          1
     O                                           17 'Week-ending date:'
     O                       ldwemdy             26 '  /  /  '
      *
     O                                           60 'TF Class group code:'
     O               94                          65 'All'
     O              n94      ldtfcgcd            64
     O              n94      ldtfcgds            82
      *
     O                                          130 'Head'
     O                                          147 'Hot Carcass'
     O                                          159 'Head'
     O                                          176 'Cold Carcass'
      *
     O          e            h1hdr          1
     O                                           17 'Year/Week:'
     O                       ldyr          m     23
     O                       ldwk          m     27
      *
     O                                           60 'TF Classification code:'
     O               93                          65 'All'
     O              n93      ldtfclcd            65
     O              n93      ldtfclds            97
      *
      *
     O                                          130 'Killed'
     O                                          147 'Pounds'
     O                                          159 'Cut'
     O                                          176 'Pounds'
      *
      *
     O          e            h1hdr          1
     O                                           60 'Item structure type code:'
     O               95                          65 'All'
     O              n95      ldistycd            65
     O              n95      ldistyds            97
      *
     O                                          130 '--------'
     O                                          147 '--------------'
     O                                          159 '--------'
     O                                          176 '--------------'
      *
     O***       e            h1hdr          1
     O          e            h1hdr          2
     O                                          120 'Seaboard Triumph Foods:'
      * WI593 - Added STF Values.
     O                       kcxklhd       k    131
     O                       kcxhclb       k    148
     O                       kcxcthd       k    160
     O                       kcxcclb       k    177
      *
      *
      *-------------------------------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------------------------------
      *
     O          e            h1hdr       1  1
     O                                            9 'TF '
     O                                           19 'Co-'
      *
      * WI593 - Changed to STF.
     O                                           89 'STF'
     O                                          105 'STF'
     O                                          115 'STF'
     O                                          125 'STF Prod'
     O                                          135 'STF Prod'
      *
      *
     O          e            h1hdr       0  1
     O                                            2 'IS'
     O                                            9 'Cls'
     O                                           13 'TF'
     O                                           19 'Own'
      *
     O                                           89 'Produced'
     O                                          105 'Produced'
     O                                          115 'Yield'
     O                                          125 'Lbs Per'
     O                                          135 'Lbs Per'
      *
      *
     O          e            h1hdr       0  1
     O                                            4 'Type'
     O                                            9 'Grp'
     O                                           14 'Cls'
     O                                           19 'Flg'
     O                                           31 'Description'
      *
     O                                           89 'Start Pounds'
     O                                          105 'Pounds'
     O                                          115 'Percent'
     O                                          125 'Hd Cut'
     O                                          135 'Hd Kill'
      *
      *
     O          e            h1hdr          0
     O                       dash               198
      *
      *-------------------------------------------------------------------------------------
      * Heading line for Item Structure type
      *-------------------------------------------------------------------------------------
      *
     O          e            h2hdr       2  0
     O                       h2desc              34
      *
     O          e            h2hdr       0  0
     O                       h2desc              34
      *
      *
      *-------------------------------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------------------------------
      *
     O          e            l1dtl       1
     O                       svtfcgcd             9
     O                       svtfclcd            14
     O                       svcoownfl           18
     O                       l1desc              74
      *
      * WI593 - Added STF Values.
     O                       arxpuslb (x)  k     90
     O                       arxpulb  (x)  k    106
     O                       arxpc    (x)  k    116
     O                       arxctlb  (x)  k    126
     O                       arxkllb  (x)  k    136
      *
      *-------------------------------------------------------------------------------------
      * Total Line for all Levels
      *-------------------------------------------------------------------------------------
      *
     O          e    89      t1tot          1
      *
     O          e   n89      t1tot       1  1
     O                                           89 '--------------'
     O                                          105 '--------------'
     O                                          115 '--------'
     O                                          125 '--------'
     O                                          136 '--------'
      *
     O          e    88      t1tot       0  0
     O                       t1desc              74
      * WI593 - Added STF Values.
     O                       arxpuslb (x)  k     90
     O                       arxpulb  (x)  k    106
     O                       arxpc    (x)  k    116
     O                       arxctlb  (x)  k    126
     O                       arxkllb  (x)  k    136
      *
      *
     O          e            t1tot          1
     O                       t1desc              74
      * WI593 - Added STF Values.
     O                       arxpuslb (x)  k     90
     O                       arxpulb  (x)  k    106
     O                       arxpc    (x)  k    116
     O                       arxctlb  (x)  k    126
     O                       arxkllb  (x)  k    136
      *
      *
      *-------------------------------------------------------------
      * Blank
      *-------------------------------------------------------------
      *
     O          e            blank       1
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           19 'No data meets your'
     O                                           39 'selection criteria.'
