// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMQ5PFR
// ?Date: 14.08.2025 Time: 12:05:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?SAZ 10/06/09 added parms Market Code and Salesperson
// LCL.CUSTOMER NUMBER = CVTVAR(PAR.Customer G/L Vendor Num)
LCL.CUSTOMER_NUMBER = CVTVAR(PAR.Customer_G_L_Vendor_Num);

// LCL.DATE = CVTVAR(PAR.Date 8.0 USR)
LCL.DATE = CVTVAR(PAR.Date_8_0_USR);

// LCL.PRODUCT CODE      0049572 = CVTVAR(PAR.Item Code 5.0)
LCL.PRODUCT_CODE_0049572 = CVTVAR(PAR.Item_Code_5_0);

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?SEL: Customer number
CASE;

// IF PAR.Customer G/L Vendor Num is Entered
IF PAR.Customer_G_L_Vendor_Num <> *ZERO;

CASE;

// IF DB1.CUSTOMER NUMBER NE LCL.CUSTOMER NUMBER
IF DB1.CUSTOMER_NUMBER <> LCL.CUSTOMER_NUMBER;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL: If Date entered, select greater than or equal to
CASE;

// IF DB1.DATE              0049766 is Entered
IF DB1.DATE_0049766 <> *ZERO;

CASE;

// IF DB1.DATE              0049766 LT LCL.DATE
IF DB1.DATE_0049766 < LCL.DATE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PAR.Market Code is Entered
IF PAR.Market_Code <> *BLANK;

EXECUTE FUNCTION(Rtv Customer Market   RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1859495;
PARAMETER(PAR.Customer_G_L_Vendor_Num);
PARAMETER(LCL.Market_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.Market Code NE LCL.Market Code
IF PAR.Market_Code <> LCL.Market_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PAR.Salesperson Code is entered
IF PAR.Salesperson_Code <> *BLANK;

EXECUTE FUNCTION(Rtv All values        RT) TYPE(RTVOBJ) FILE(PMDDREP)           AC1927464;
PARAMETER(PAR.Market_Code);
PARAMETER(NLL.Market_Desc);
PARAMETER(NLL.Market_Type);
PARAMETER(NLL.Broker_Code);
PARAMETER(LCL.Salesperson_Code);
PARAMETER(NLL.Regional_Salesperson);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.Salesperson Code NE LCL.Salesperson Code
IF PAR.Salesperson_Code <> LCL.Salesperson_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?USER: Process before print of first page format

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(LCL.Customer_Name_DRV);
PARAMETER(LCL.CUSTOMER_NUMBER);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


MOVE *ALL (To: 1PG From: LCL);

//?USER: On print of first page format

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(X1PG_Customer_Name_DRV);
PARAMETER(LCL.CUSTOMER_NUMBER);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

CASE;

IF NEW CUSTOMER_NUMBER;
EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.CUSTOMER_NUMBER);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print CUSTOMER NUMBER header format
PRINT CUSTOMER NUMBER header format;

ENDIF;

// SUPPRESSED PRINT DATE              0049766 header format

// SUPPRESSED PRINT PRODUCT CODE      0049572 header format

//?USER: Process before print of detail format

EXECUTE FUNCTION(Rtv Customer Market   RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1859495;
PARAMETER(PAR.Customer_G_L_Vendor_Num);
PARAMETER(LCL.Market_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Customer Market Code = LCL.Market Code
CUR.Customer_Market_Code = LCL.Market_Code;

EXECUTE FUNCTION(Rtv All values        RT) TYPE(RTVOBJ) FILE(PMDDREP)           AC1927464;
PARAMETER(LCL.Market_Code);
PARAMETER(NLL.Market_Desc);
PARAMETER(NLL.Market_Type);
PARAMETER(NLL.Broker_Code);
PARAMETER(LCL.Salesperson_Code);
PARAMETER(NLL.Regional_Salesperson);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Salesperson Code = LCL.Salesperson Code
CUR.Salesperson_Code = LCL.Salesperson_Code;

//?USER: On print of detail format

//?Reset accumulator with the Balance Forward record.
CASE;

// IF DB1.DESCRIPTION       0049574 is BALANCE FORWARD
IF DB1.DESCRIPTION_0049574 = 'BALANCE FORWARD';

// NXT.USR Accrual Total = CUR.ACCRUAL AMOUNT
NXT.USR_Accrual_Total = CUR.ACCRUAL_AMOUNT;

//?Reset accumulator with the Balance Forward record.
// IF *OTHERWISE
IF *OTHERWISE;

// NXT.USR Accrual Total = NXT.USR Accrual Total + CUR.ACCRUAL AMOUNT
NXT.USR_Accrual_Total = NXT.USR_Accrual_Total + CUR.ACCRUAL_AMOUNT;

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT PRODUCT CODE      0049572 totals format

// SUPPRESSED PRINT DATE              0049766 totals format

CASE;

IF NEW CUSTOMER_NUMBER;
EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.CUSTOMER_NUMBER);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print CUSTOMER NUMBER totals format
PRINT CUSTOMER NUMBER totals format;

ENDIF;

