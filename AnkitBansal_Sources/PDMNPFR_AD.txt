// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDMNPFR
// ?Date: 14.08.2025 Time: 12:04:06
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?***** Change Log and Comments
//?Modification History
//?*****
//?** 11/21/2006 LJB L61116A
//?** Include NOR (carrier) when processing STI
//?*****
//?E00371 slm Modification
//?04/23/2009 Add new parms of Actual Ship date, Warehouse. Include N
//?  shag and N wash on Y. Do not include the N's at all-- Current
//?  or a selection of the N's. Remove the shag value usr and the wash
//?  value usr as parm due to new parms. Get the Shag & wash at the
//?  beginning and use through out.
//?*****
//?** 11/21/2006 LJB L61116A
//?** Added 2 input parms: Include Collect Y/N and Include STI
//?** New sum fields added due to missing edtcde that caused internal
//?** issues and made the original sum fields unusable
//?*****
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print Yes/No          USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

//?Shag Value
EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1510877;
PARAMETER('SHAG');
PARAMETER(WRK.Shag_Value_USR);
{
 //?USER: Process Data record

 // PAR.System Value Numeric = DB1.System Value Numeric
 PAR.System_Value_Numeric = DB1.System_Value_Numeric;

 QUIT;

}


//?Wash Value
EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1510877;
PARAMETER('WASH');
PARAMETER(WRK.Wash_Value_USR);
{
 //?USER: Process Data record

 // PAR.System Value Numeric = DB1.System Value Numeric
 PAR.System_Value_Numeric = DB1.System_Value_Numeric;

 QUIT;

}


// WRK.Summarize or Detail = CND.Detail
WRK.Summarize_or_Detail = 'D';

//?Summary
CASE;

// IF PAR.Summary Selected Usr is yes
IF PAR.Summary_Selected_Usr = 'Y';

// WRK.Summarize or Detail = CND.Summarize
WRK.Summarize_or_Detail = 'S';

ENDIF;

// LCL.Carrier Code Usr = CON.NOR
LCL.Carrier_Code_Usr = 'NOR';

// LCL.Carrier Code = CON.STI
LCL.Carrier_Code = 'STI';

//?USER: Record selection processing

//?** Select Shipped only
CASE;

// IF DB1.Ship Status is Shipped
IF DB1.Ship_Status = 'S';

//?** Select Shipped only
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select by company if selected on the screen
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// AND PAR.Company Number NE DB1.Company Number
AND PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Skip if Include Collect Shipment = No & shipment is Collect
CASE;

// IF PAR.Status - Y or N is yes
IF PAR.Status_Y_or_N = 'Y';

//?** Skip if Include Collect Shipment = No & shipment is Collect
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.Status - Y or N is no
IF PAR.Status_Y_or_N = 'N';

CASE;

// IF DB1.Shipping Method is Collect
IF DB1.Shipping_Method = 'CR'/'CT';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?** Skip if Include STI = No and Carrier is STI or NOR   E000499
CASE;

// IF PAR.Status Flag 1  Y/N is No
IF PAR.Status_Flag_1_Y_N = 'N';

CASE;

// IF DB1.Carrier Code EQ LCL.Carrier Code
IF DB1.Carrier_Code = LCL.Carrier_Code;

// OR DB1.Carrier Code EQ LCL.Carrier Code Usr
OR DB1.Carrier_Code = LCL.Carrier_Code_Usr;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Include No Shag & Wash Blank = All Y - either Shag or Wash
CASE;

// IF PAR.Include NoShg & NoWashUsr is blank
IF PAR.Include_NoShg_NoWashUsr = *BLANK;

//?all
//?** Include No Shag & Wash Blank = All Y - either Shag or Wash
// IF PAR.Include NoShg & NoWashUsr is yes
IF PAR.Include_NoShg_NoWashUsr = 'Y';

CASE;

// IF DB1.Load Shag Flag is yes
IF DB1.Load_Shag_Flag = 'Y';

// OR DB1.Load Wash Flag is yes
OR DB1.Load_Wash_Flag = 'Y';

//?Must either be Shag or Wash
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Include No Shag & Wash Blank = All Y - either Shag or Wash
// IF PAR.Include NoShg & NoWashUsr is no
IF PAR.Include_NoShg_NoWashUsr = 'N';

CASE;

// IF DB1.Load Shag Flag is no
IF DB1.Load_Shag_Flag = 'N';

// AND DB1.Load Wash Flag is no
AND DB1.Load_Wash_Flag = 'N';

//?Must both be shag and wash
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select by Warehouse selected on Shipping Warehouse
CASE;

// IF PAR.Warehouse Code is Not Blanks
IF PAR.Warehouse_Code <> *BLANK;

// AND PAR.Warehouse Code NE DB1.Ship From Warehouse
AND PAR.Warehouse_Code <> DB1.Ship_From_Warehouse;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

//?** Company Name
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Company Name
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Company Name = CON.*ALL
TOP_Company_Name = *ALL;

ENDIF;

//?** Carrier
CASE;

// IF PAR.Carrier Code is not entered
IF PAR.Carrier_Code = *BLANK;

// TOP.Carrier Name 50A = CON.*ALL
TOP_Carrier_Name_50A = *ALL;

//?** Carrier
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(PAR.Carrier_Code);
PARAMETER(TOP_Carrier_Name_50A);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


ENDIF;

//?** Include Collect Shipments Y/N
CASE;

// IF PAR.Status - Y or N is Y/N Values
IF PAR.Status_Y_or_N = 'N'/'Y';

// TOP.Status - Y or N = PAR.Status - Y or N
TOP_Status_Y_or_N = PAR.Status_Y_or_N;

ENDIF;

//?** Incluce STI Y/N
CASE;

// IF PAR.Status Flag 1  Y/N is Not Blank
IF PAR.Status_Flag_1_Y_N = 'N'/'Y';

// TOP.Status Flag 1  Y/N = PAR.Status Flag 1  Y/N
TOP_Status_Flag_1_Y_N = PAR.Status_Flag_1_Y_N;

ENDIF;

//?Shag & wash
CASE;

// IF PAR.Include NoShg & NoWashUsr is blank
IF PAR.Include_NoShg_NoWashUsr = *BLANK;

// TOP.Shag & Wash Sel Text = CON.*ALL
TOP_Shag_Wash_Sel_Text = *ALL;

//?Shag & wash
// IF PAR.Include NoShg & NoWashUsr is yes
IF PAR.Include_NoShg_NoWashUsr = 'Y';

// TOP.Shag & Wash Sel Text = CON.Shag or Wash
TOP_Shag_Wash_Sel_Text = 'Shag or Wash';

//?Shag & wash
// IF PAR.Include NoShg & NoWashUsr is no
IF PAR.Include_NoShg_NoWashUsr = 'N';

// TOP.Shag & Wash Sel Text = CON.No Shag and No Wash
TOP_Shag_Wash_Sel_Text = 'No Shag and No Wash';

ENDIF;

//?Warehouse description
CASE;

// IF PAR.Warehouse Code is Blanks
IF PAR.Warehouse_Code = *BLANK;

// TOP.Warehouse Description = CON.*ALL
TOP_Warehouse_Description = *ALL;

//?Warehouse description
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Warehouse          RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1100960;
PARAMETER(TOP_Warehouse_Code);
PARAMETER(TOP_Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

// WRK.Summarize or Detail = CND.Summarize
WRK.Summarize_or_Detail = 'S';

//?USER: Print required level headings

CASE;

IF NEW Carrier_Code;
// SUPPRESSED PRINT Carrier Code header format

ENDIF;

CASE;

IF NEW Actual_Ship_Date;
// SUPPRESSED PRINT Actual Ship Date header format

ENDIF;

//?USER: On print of detail format

// CUR.Load Shag Flag = DB1.Load Shag Flag
CUR.Load_Shag_Flag = DB1.Load_Shag_Flag;

// CUR.Load Wash Flag = DB1.Load Wash Flag
CUR.Load_Wash_Flag = DB1.Load_Wash_Flag;

// CUR.Number Pallets Loaded = DB1.Number Pallets Loaded
CUR.Number_Pallets_Loaded = DB1.Number_Pallets_Loaded;

// CUR.Blank for 4           USR = CON.*BLANK
CUR.Blank_for_4_USR = *BLANK;

// CUR.Blank for 4.2         USR = CON.*BLANK
CUR.Blank_for_4_2_USR = *BLANK;

// WRK.Print Yes/No          USR = CND.No
WRK.Print_Yes_No_USR = 'N';

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Carrier_Name_50A);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// CUR.USR Work Field 7A = Condition name of CUR.Load Type
CUR.USR_Work_Field_7A = RTVCND(CUR.Load_Type);

// CUR.Departure Time = CUR.Departure Time / CON.100 *
CUR.Departure_Time = CUR.Departure_Time / 100;

//?** Shag , Shag & wash
CASE;

// IF CUR.Load Shag Flag is yes
IF CUR.Load_Shag_Flag = 'Y';

// CUR.Shag Count Usr = CON.1
CUR.Shag_Count_Usr = 1;

// WRK.Shag Count Usr = WRK.Shag Count Usr + CON.1
WRK.Shag_Count_Usr = WRK.Shag_Count_Usr + 1;

// CUR.Blank for 4           USR = CON.SHAG
CUR.Blank_for_4_USR = 'SHAG';

ENDIF;

//?** Wash, shag & wash
CASE;

// IF CUR.Load Wash Flag is yes
IF CUR.Load_Wash_Flag = 'Y';

// CUR.Wash Count usr = CON.1
CUR.Wash_Count_usr = 1;

// WRK.Wash Count usr = WRK.Wash Count usr + CON.1
WRK.Wash_Count_usr = WRK.Wash_Count_usr + 1;

// CUR.Blank for 4.2         USR = CON.WASH
CUR.Blank_for_4_2_USR = 'WASH';

ENDIF;

//?** Not Shag & Not wash
CASE;

// IF CUR.Load Shag Flag is Not Yes
IF CUR.Load_Shag_Flag = *BLANK/'N';

// AND CUR.Load Wash Flag is Not Yes
AND CUR.Load_Wash_Flag = *BLANK/'N';

// CUR.Not Shag & Wash Cnt Usr = CON.1
CUR.Not_Shag_Wash_Cnt_Usr = 1;

// WRK.Not Shag & Wash Cnt Usr = WRK.Not Shag & Wash Cnt Usr + CON.1
WRK.Not_Shag_Wash_Cnt_Usr = WRK.Not_Shag_Wash_Cnt_Usr + 1;

// CUR.Blank for 4           USR = CON.*BLANK
CUR.Blank_for_4_USR = *BLANK;

// CUR.Blank for 4.2         USR = CON.*BLANK
CUR.Blank_for_4_2_USR = *BLANK;

ENDIF;

// CUR.Trailer ID USR = CUR.Trailer Id
CUR.Trailer_ID_USR = CUR.Trailer_Id;

CASE;

// IF PAR.Summary Selected Usr is yes
IF PAR.Summary_Selected_Usr = 'Y';

//?Yes represents to only print the summary.
// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Print format
PGM.*Print_format = 'Y';

ENDIF;

// WRK.Total Loads = WRK.Total Loads + CON.1
WRK.Total_Loads = WRK.Total_Loads + 1;

// WRK.Total Load Usr 2 = WRK.Total Load Usr 2 + CON.1
WRK.Total_Load_Usr_2 = WRK.Total_Load_Usr_2 + 1;

//?USER: Process after print of detail format

// PAR.Count USR = PAR.Count USR + CUR.Number Pallets Loaded
PAR.Count_USR = PAR.Count_USR + CUR.Number_Pallets_Loaded;

//?USER: Print required level totals

CASE;

IF NEW Actual_Ship_Date;
// SUPPRESSED PRINT Actual Ship Date totals format

ENDIF;

CASE;

IF NEW Carrier_Code;
EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Carrier_Name_50A);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// CUR.Shag Count 1          Sum = WRK.Shag Count Usr
CUR.Shag_Count_1_Sum = WRK.Shag_Count_Usr;

// CUR.Wash Count 1          SUM = WRK.Wash Count usr
CUR.Wash_Count_1_SUM = WRK.Wash_Count_usr;

// CUR.Not Shag/Wash Count 1 Sum = WRK.Not Shag & Wash Cnt Usr
CUR.Not_Shag_Wash_Count_1_Sum = WRK.Not_Shag_Wash_Cnt_Usr;

//?dollars
// CUR.Shag Total 1          SUM = CUR.Shag Count 1          Sum * WRK.Shag Value            USR *
CUR.Shag_Total_1_SUM = CUR.Shag_Count_1_Sum * WRK.Shag_Value_USR;

// CUR.Wash Total 1          SUM = CUR.Wash Count 1          SUM * WRK.Wash Value            USR *
CUR.Wash_Total_1_SUM = CUR.Wash_Count_1_SUM * WRK.Wash_Value_USR;

// CUR.Shag & Wash Total 1   Sum = CUR.Shag Total 1          SUM + CUR.Wash Total 1          SUM
CUR.Shag_Wash_Total_1_Sum = CUR.Shag_Total_1_SUM + CUR.Wash_Total_1_SUM;

// CUR.Total Loads = WRK.Total Loads
CUR.Total_Loads = WRK.Total_Loads;

// WRK.Shag Count Usr = CON.*ZERO
WRK.Shag_Count_Usr = *ZERO;

// WRK.Wash Count usr = CON.*ZERO
WRK.Wash_Count_usr = *ZERO;

// WRK.Not Shag & Wash Cnt Usr = CON.*ZERO
WRK.Not_Shag_Wash_Cnt_Usr = *ZERO;

// WRK.Total Loads = CON.*ZERO
WRK.Total_Loads = *ZERO;

// NXT.Shag Count 1          Sum = NXT.Shag Count 1          Sum + CUR.Shag Count 1          Sum
NXT.Shag_Count_1_Sum = NXT.Shag_Count_1_Sum + CUR.Shag_Count_1_Sum;

// NXT.Wash Count 1          SUM = NXT.Wash Count 1          SUM + CUR.Wash Count 1          SUM
NXT.Wash_Count_1_SUM = NXT.Wash_Count_1_SUM + CUR.Wash_Count_1_SUM;

// NXT.Not Shag/Wash Count 1 Sum = NXT.Not Shag/Wash Count 1 Sum + CUR.Not Shag/Wash Count 1 Sum
NXT.Not_Shag_Wash_Count_1_Sum = NXT.Not_Shag_Wash_Count_1_Sum                                      +
+ CUR.Not_Shag_Wash_Count_1_Sum;

// CUR.Count USR = PAR.Count USR
CUR.Count_USR = PAR.Count_USR;

// PAR.Count USR = CON.*ZERO
PAR.Count_USR = *ZERO;

// NXT.Count USR = NXT.Count USR + CUR.Count USR
NXT.Count_USR = NXT.Count_USR + CUR.Count_USR;

// Print Carrier Code totals format
PRINT Carrier Code totals format;

ENDIF;

//?USER: On print of final totals format

// CUR.Shag Total 1          SUM = CUR.Shag Count 1          Sum * WRK.Shag Value            USR *
CUR.Shag_Total_1_SUM = CUR.Shag_Count_1_Sum * WRK.Shag_Value_USR;

// CUR.Wash Total 1          SUM = CUR.Wash Count 1          SUM * WRK.Wash Value            USR *
CUR.Wash_Total_1_SUM = CUR.Wash_Count_1_SUM * WRK.Wash_Value_USR;

// CUR.Shag & Wash Total 1   Sum = CUR.Shag Total 1          SUM + CUR.Wash Total 1          SUM
CUR.Shag_Wash_Total_1_Sum = CUR.Shag_Total_1_SUM + CUR.Wash_Total_1_SUM;

// CUR.Total Load Usr 2 = WRK.Total Load Usr 2
CUR.Total_Load_Usr_2 = WRK.Total_Load_Usr_2;

