// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMVNPVR
// ?Date: 14.08.2025 Time: 03:44:13
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E01104 RMC 11/30/2010  added user entered selection
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('A/R');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Process command keys

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// PAR.Return Code Usr = CND.Submit Cancelled
PAR.Return_Code_Usr = 'USR3649';

// PGM.*Return code = CND.*User QUIT requested
PGM.*Return_code = 'Y2U9999';

ENDIF;

//?USER: Validate fields

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?** Prompt for Price Code Customer Number
CASE;

// IF PGM.*Cursor field <IS> DTL.Ship to Customer      USR
IF PGM.*Cursor_field = DTL.Ship_to_Customer_USR;

// Call program SEL CPH Customer      SL.
CALL PROGRAM(SEL CPH Customer      SL) ('PMVVSRR');
PARAMETER(DTL.Ship_to_Customer_USR);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?** Prompt for Price Code
CASE;

// IF PGM.*Cursor field <IS> DTL.Price Code USR
IF PGM.*Cursor_field = DTL.Price_Code_USR;

// Call program Zzz CPH Price Code    SL.
CALL PROGRAM(Zzz CPH Price Code    SL) ('PMVWSRR');
PARAMETER(DTL.Ship_to_Customer_USR);
PARAMETER(DTL.Price_Code_USR);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?** Prompt for Start Date
CASE;

// IF PGM.*Cursor field <IS> DTL.From Date             USR
IF PGM.*Cursor_field = DTL.From_Date_USR;

// Call program Zzz CPH Start Date    SL.
CALL PROGRAM(Zzz CPH Start Date    SL) ('PMVUSRR');
PARAMETER(DTL.From_Date_USR);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?CALC: Screen function fields

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(DTL.Ship_To_Name_DRV);
PARAMETER(DTL.Ship_to_Customer_USR);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Validate relations

//?** Verify date range is in correct order
CASE;

// IF DTL.From Date             USR GT DTL.To Date               USR
IF DTL.From_Date_USR > DTL.To_Date_USR;

// Send error message - 'From date exceeds to date.  Please re-enter.'
ERROR(USR0319);
MSGPARM(DTL.From_Date_USR);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?** If begin price code is entered and end is blanks, deflt end to match
CASE;

// IF DTL.Price Code USR is Entered
IF DTL.Price_Code_USR > *ZERO;

// AND DTL.USR number is Equal to zero
AND DTL.USR_number = *ZERO;

// DTL.USR number = DTL.Price Code USR
DTL.USR_number = DTL.Price_Code_USR;

//?** If begin price code is entered and end is blanks, deflt end to match
// IF DTL.USR number is Not equal to zero
IF DTL.USR_number <> *ZERO;

// AND DTL.Price Code USR is Not Entered
AND DTL.Price_Code_USR = *ZERO;

// Send error message - 'First Price code cannot be zero'
ERROR(USR3970);
MSGPARM(DTL.Price_Code_USR);

ENDIF;

//?** If entered, verify price codes are in correct order
CASE;

// IF DTL.Price Code USR GT DTL.USR number
IF DTL.Price_Code_USR > DTL.USR_number;

// AND DTL.Price Code USR is Entered
AND DTL.Price_Code_USR > *ZERO;

// Send error message - 'From Price Code &1 cannot be after Thru Price Code &2'
ERROR(USR3978);
MSGPARM(DTL.Price_Code_USR);
MSGPARM(DTL.USR_number);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: User defined action

//?** Populate the parms passed to the submitted CL
// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Night Queue = CND.Not entered
PAR.PRT_Night_Queue = *BLANK;

// PAR.System Value Numeric = CON.1
PAR.System_Value_Numeric = 1;

// PAR.PRT Description = CON.Customer Price Code List
PAR.PRT_Description = 'Customer Price Code List';

// PAR.PRT Hold Output Sts = CND.*NO
PAR.PRT_Hold_Output_Sts = *NO;

// PAR.PRT Save Output Sts = CND.*NO
PAR.PRT_Save_Output_Sts = *NO;

// PAR.Customer Number Pass  USR = DTL.Ship to Customer      USR
PAR.Customer_Number_Pass_USR = DTL.Ship_to_Customer_USR;

// PAR.Item Code PASS        USR = DTL.Price Code USR
PAR.Item_Code_PASS_USR = DTL.Price_Code_USR;

// PAR.Order Company Pass Usr = DTL.USR number
PAR.Order_Company_Pass_Usr = DTL.USR_number;

// PAR.From Date Pass        USR = DTL.From Date             USR
PAR.From_Date_Pass_USR = DTL.From_Date_USR;

// PAR.Thru Date Pass        USR = DTL.To Date               USR
PAR.Thru_Date_Pass_USR = DTL.To_Date_USR;

// PAR.Entered by User = CON.*BLANK
PAR.Entered_by_User = *BLANK;

//?** Populate select parm based on the 1st screen record
//?** that contains a value. If additional fields are filled in,
//?** pass them as well and the print program will select as needed.
CASE;

// IF DTL.Ship to Customer      USR is Entered
IF DTL.Ship_to_Customer_USR <> 0;

// LCL.Select Option = CND.Option 2
LCL.Select_Option = 2;

// IF DTL.From Date             USR is Entered
IF DTL.From_Date_USR <> *ZERO;

// LCL.Select Option = CND.Option 2
LCL.Select_Option = 2;

// IF DTL.Price Code USR is Entered
IF DTL.Price_Code_USR > *ZERO;

// LCL.Select Option = CND.Option 3
LCL.Select_Option = 3;

// IF *OTHERWISE
IF *OTHERWISE;

//?** Pass select 5 if all fields are left blanks
// LCL.Select Option = CND.Option 5
LCL.Select_Option = 5;

ENDIF;

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// PAR.Return Code Usr = CND.Submit Cancelled
PAR.Return_Code_Usr = 'USR3649';

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Zzz Cust Price Codes   CL.
CALL PROGRAM(Zzz Cust Price Codes   CL) ('PMVSUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('OMS');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(PAR.From_Date_Pass_USR);
PARAMETER(PAR.Thru_Date_Pass_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Item_Code_PASS_USR);
PARAMETER(DTL.Entered_by_User);
PARAMETER(LCL.Select_Option);
PARAMETER(PAR.Order_Company_Pass_Usr);

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

// PAR.Return Code Usr = CND.*Blank
PAR.Return_Code_Usr = *BLANK;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// PAR.Return Code Usr = CND.Submit Cancelled
PAR.Return_Code_Usr = 'USR3649';

ENDIF;

