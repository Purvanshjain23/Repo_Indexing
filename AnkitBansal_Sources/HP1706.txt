      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1706
      * TITLE:       Select Options for Maintaining Farm Links
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/05/04
      *
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for maintaining farm links to a budget template.
      *
      **************************************************************************************
      * MODIFICATIONS:
      **************************************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      **************************************************************************************
      * FILE SPECIFICATIONS
      **************************************************************************************
      *
     Fhpd1706   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp101    if   e           k disk
      *    Type of farm
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
     D rtncd           s              2
      *
      *
      *
      * Parm fields
      *
     D xxcscd          s              1
      *
     D xxppcd          s                   like(d1ppcd)
     D xxppds          s                   like(d1ppds)
      *
     D xxptcd          s                   like(d1ptcd)
     D xxptds          s                   like(d1ptds)
      *
     D xxtfcd          s                   like(d1tfcd)
     D xxtfds          s                   like(d1tfds)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************************************
      * MAINLINE
      ****************************************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp1706k1
     C                   write     hp1706ec
     C                   exfmt     hp1706r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in08 = *on                                  F8-auto
     C                   exsr      $auto
      *
     C                   when      *in10 = *on                                  F10-manual
     C                   call      'HP1707'
     C                   parm                    d1btcd
     C                   parm                    d1btds
     C                   parm                    xxcscd
     C                   parm      *blank        rtncd
      *
     C                   when      *in15 = *on                                  F15-view
     C                   call      'HP7703'
     C                   parm                    d1btcd
     C                   parm                    d1btds
     C                   parm                    rtncd
     C                   other
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) production type
      *   2) production phase
      *   3) type of farm
      *   4) cell
      *
     C                   exsr      $ptcd
     C                   exsr      $ppcd
     C                   exsr      $tfcd
     C                   exsr      $cell
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate add/remove flag
      *----------------------------------------------------------------
      *
     C     $arfl         begsr
      *
     C                   select
     C                   when      d1arfl = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C
     C                   when      d1arfl <> 'A' and d1arfl <> 'R'
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04721'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate production type
      *----------------------------------------------------------------
      *
     C     $ptcd         begsr
      *
     C                   move      *blank        d1ptds
      *
     C                   select
     C                   when      d1ptcd <> *blank
     C     d1ptcd        chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1ptds
     C                   else
     C                   seton                                        32
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ptcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate production phase
      *----------------------------------------------------------------
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        d1ppds
      *
     C                   select
     C                   when      d1ppcd <> *blank
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1ppds
      *
     C                   if        xxcscd = 'R' and d1ppcd = 'BGF  '
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04737'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
     C                   else
      *
     C                   seton                                        33
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Type of Farm
      *----------------------------------------------------------------
      *
     C     $tfcd         begsr
      *
     C                   move      *blank        d1tfds
      *
     C                   if        d1tfcd <> *blank                             If type of farm
     C     d1tfcd        chain     hsp101                             92
     C                   if        *in92 = *off                                 If hit
     C                   movel     tftfds        d1tfds
     C                   else
      *
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01167'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1tfcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endif                                                  If type of farm
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * User took automatic option
      *----------------------------------------------------------------
      *
     C     $auto         begsr
      *
     C                   exsr      $arfl
     C                   exsr      $edit1
      *
     C                   select
     C                   when      error <> 0
      * Automatic
     C                   when      d1arfl = 'A' or d1arfl = 'R'
     C                   call      'HP3704'
     C                   parm                    d1btcd
     C                   parm                    xxcscd
     C                   parm                    d1arfl
     C                   parm                    d1ppcd
     C                   parm                    d1ptcd
     C                   parm                    d1tfcd
     C                   parm                    d1cell
     C                   parm      *blank        rtncd
      *
      * Issue completion message
      *
     C                   select
     C                   when      d1arfl = 'A'
     C                   add       1             error
     C                   movel     'HS04722'     mgid(e)
      *
     C                   when      d1arfl = 'R'
     C                   add       1             error
     C                   movel     'HS04723'     mgid(e)
     C                   endsl
      *
     C                   move      *blank        d1arfl
     C                   move      *blank        d1ppcd
     C                   move      *blank        d1ppds
     C                   move      *blank        d1ptcd
     C                   move      *blank        d1ptds
     C                   move      *blank        d1tfcd
     C                   move      *blank        d1tfds
     C                   z-add     0             d1cell
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Production type
     C                   select
     C                   when      fld = 'D1PTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        52
     C                   if        xxptcd <> *blank
     C                   movel     xxptcd        d1ptcd
     C                   movel     xxptds        d1ptds
     C                   endif
      *
      * Production phase
      *
     C                   when      fld = 'D1PPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        53
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1ppcd
     C                   movel     xxppds        d1ppds
     C                   endif
      *
      * Type of farm
     C                   when      fld = 'D1TFCD'
     C                   call      'HP5018'
     C                   parm      *blank        xxtfcd
     C                   parm      *blank        xxtfds
     C                   seton                                        59
     C                   if        xxtfcd <> *blank
     C                   movel     xxtfcd        d1tfcd
     C                   movel     xxtfds        d1tfds
     C                   endif
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
     C     *entry        plist
     C                   parm                    d1btcd
     C                   parm                    d1btds
     C                   parm                    xxcscd
     C                   parm                    rtncd
      *
      * Key lists
      *    None
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
