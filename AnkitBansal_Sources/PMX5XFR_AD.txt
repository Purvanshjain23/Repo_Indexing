// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMX5XFR
// ?Date: 14.08.2025 Time: 03:44:29
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Cvt A/R Hdr Nt to Dtl RT) TYPE(RTVOBJ) FILE(POBUREP)           AC1899002;
{
 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(CVT AR Notes          RT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC1899163;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(LCL.Remaining_Balance_Due);
 PARAMETER(LCL.Purge_Status);
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.AR_Customer_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Rtv Next Sequence     RT) TYPE(RTVOBJ) FILE(PMEDCPP)           AC1898717;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.ARHN Note Number = CON.1
  PAR.ARHN_Note_Number = 1;

  //?USER: Process Data record

  // PAR.ARHN Note Number = DB1.ARHN Note Number + CON.1
  PAR.ARHN_Note_Number = DB1.ARHN_Note_Number + 1;

  QUIT;

 }

 // PAR.ARHN Note Date = DB1.Note Date
 PAR.ARHN_Note_Date = DB1.Note_Date;

 //?Note Time
 CASE;

 // IF DB1.Sequence Number is 460 - 499
 IF DB1.Sequence_Number >= 460;
 AND DB1.Sequence_Number <= 499;

 // PAR.ARHN Note Time = DB1.Sequence Number - CON.60
 PAR.ARHN_Note_Time = DB1.Sequence_Number - 60;

 //?Note Time
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ARHN Note Time = DB1.Sequence Number
 PAR.ARHN_Note_Time = DB1.Sequence_Number;

 ENDIF;

 // LCL.First Letter 1 USR = SUBSTRING(DB1.Initials,CON.1,CON.1)
 LCL.First_Letter_1_USR = SUBSTRING(DB1.Initials:1:1);

 //?Note Created By
 CASE;

 // IF LCL.First Letter 1 USR is eq S
 IF LCL.First_Letter_1_USR = 'S';

 // PAR.ARHN Note Created By = CON.PDCVERR
 PAR.ARHN_Note_Created_By = 'PDCVERR';

 //?Note Created By
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ARHN Note Created By = CON.PDTWOOD
 PAR.ARHN_Note_Created_By = 'PDTWOOD';

 ENDIF;

 //?Follow Up Date
 CASE;

 // IF DB1.Follow-up Date is Eq Zero
 IF DB1.Follow_up_Date = 0;

 // PAR.ARHN Follow Up Date = CON.*ZERO
 PAR.ARHN_Follow_Up_Date = *ZERO;

 //?Follow Up Date
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ARHN Follow Up Date = DB1.Follow-up Date
 PAR.ARHN_Follow_Up_Date = DB1.Follow_up_Date;

 ENDIF;

 //?Follow Up Status
 CASE;

 // IF LCL.Purge Status is History
 IF LCL.Purge_Status = 'H';

 // OR LCL.Remaining Balance Due is equal to zero
 OR LCL.Remaining_Balance_Due = *ZERO;

 // PAR.ARHN Follow Up Status = CND.Completed
 PAR.ARHN_Follow_Up_Status = 'C';

 //?Follow Up Status
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ARHN Follow Up Status = CND.Open
 PAR.ARHN_Follow_Up_Status = 'O';

 ENDIF;

 // PAR.ARHN Follow Up Cmplt Date = CON.*ZERO
 PAR.ARHN_Follow_Up_Cmplt_Date = *ZERO;

 // PAR.ARHN Follow Up Cmplt Time = CON.*ZERO
 PAR.ARHN_Follow_Up_Cmplt_Time = *ZERO;

 // PAR.ARHN Follow Up Cmplt User = CON.*BLANK
 PAR.ARHN_Follow_Up_Cmplt_By = *BLANK;

 //?Sales Route Code
 CASE;

 // IF PAR.Sales Route Code is not entered
 IF PAR.Sales_Route_Code = *BLANK;

 EXECUTE FUNCTION(RTV Sales Route        RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1371227;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(PAR.Sales_Route_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 // PAR.Record Status = CND.Active
 PAR.Record_Status = 'A';

 CASE;

 // IF DB1.Note Line 1 is Entered
 IF DB1.Note_Line_1 <> *BLANK;

 EXECUTE FUNCTION(Crt Note Header       CR) TYPE(CRTOBJ) FILE(PMEDCPP)           AC1898526;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 PARAMETER(PAR.ARHN_Note_Date);
 PARAMETER(PAR.ARHN_Note_Time);
 PARAMETER(PAR.ARHN_Note_Created_By);
 PARAMETER(PAR.ARHN_Follow_Up_Date);
 PARAMETER(PAR.ARHN_Follow_Up_Status);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Date);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Time);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_By);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Create_Date);
 PARAMETER(PAR.Create_Time);
 PARAMETER(PAR.Create_User);
 PARAMETER(PAR.Create_Program);
 PARAMETER(PAR.Change_Date);
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 // PAR.ARHN Note Line Number = CON.1
 PAR.ARHN_Note_Line_Number = 1;

 // PAR.ARHN Detail Note Line = DB1.Note Line 1
 PAR.ARHN_Detail_Note_Line = DB1.Note_Line_1;

 EXECUTE FUNCTION(Crt Note Detail       CR) TYPE(CRTOBJ) FILE(PMEFCPP)           AC1899450;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 PARAMETER(PAR.ARHN_Note_Line_Number);
 PARAMETER(PAR.ARHN_Detail_Note_Line);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Create_Date);
 PARAMETER(PAR.Create_Time);
 PARAMETER(PAR.Create_User);
 PARAMETER(PAR.Create_Program);
 PARAMETER(PAR.Change_Date);
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 CASE;

 // IF DB1.Note Line 2 is Entered
 IF DB1.Note_Line_2 <> *BLANK;

 // PAR.ARHN Note Line Number = CON.2
 PAR.ARHN_Note_Line_Number = 2;

 // PAR.ARHN Detail Note Line = DB1.Note Line 2
 PAR.ARHN_Detail_Note_Line = DB1.Note_Line_2;

 EXECUTE FUNCTION(Crt Note Detail       CR) TYPE(CRTOBJ) FILE(PMEFCPP)           AC1899450;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 PARAMETER(PAR.ARHN_Note_Line_Number);
 PARAMETER(PAR.ARHN_Detail_Note_Line);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Create_Date);
 PARAMETER(PAR.Create_Time);
 PARAMETER(PAR.Create_User);
 PARAMETER(PAR.Create_Program);
 PARAMETER(PAR.Change_Date);
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Note Line 2 is Entered
 IF DB1.Note_Line_2 <> *BLANK;

 // PAR.ARHN Note Line Number = CON.1
 PAR.ARHN_Note_Line_Number = 1;

 // PAR.ARHN Detail Note Line = DB1.Note Line 2
 PAR.ARHN_Detail_Note_Line = DB1.Note_Line_2;

 EXECUTE FUNCTION(Crt Note Header       CR) TYPE(CRTOBJ) FILE(PMEDCPP)           AC1898526;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 PARAMETER(PAR.ARHN_Note_Date);
 PARAMETER(PAR.ARHN_Note_Time);
 PARAMETER(PAR.ARHN_Note_Created_By);
 PARAMETER(PAR.ARHN_Follow_Up_Date);
 PARAMETER(PAR.ARHN_Follow_Up_Status);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Date);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_Time);
 PARAMETER(PAR.ARHN_Follow_Up_Cmplt_By);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Create_Date);
 PARAMETER(PAR.Create_Time);
 PARAMETER(PAR.Create_User);
 PARAMETER(PAR.Create_Program);
 PARAMETER(PAR.Change_Date);
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 EXECUTE FUNCTION(Crt Note Detail       CR) TYPE(CRTOBJ) FILE(PMEFCPP)           AC1899450;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.ARHN_Note_Number);
 PARAMETER(PAR.ARHN_Note_Line_Number);
 PARAMETER(PAR.ARHN_Detail_Note_Line);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Create_Date);
 PARAMETER(PAR.Create_Time);
 PARAMETER(PAR.Create_User);
 PARAMETER(PAR.Create_Program);
 PARAMETER(PAR.Change_Date);
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


