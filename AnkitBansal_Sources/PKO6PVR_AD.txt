// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKO6PVR
// ?Date: 14.08.2025 Time: 02:50:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?82278 Eric L: 06/21/22 Execute command YSCNRPLSRC in CL PWOPUPR
//?                       Scan and Replace source to change YPMTFD
//?                       when F4 is pressed for Market
//?Modifications and Comments
DO;

//?H16853 ISE 01/23/21 - Increased the length from 5 to 7 and corrected the
//?                      alignment of Buy Order Number field.
ENDDO;

EXECUTE FUNCTION(HPE076) TYPE(EXCINTFUN)                                        AB1188851;
{
 //?Execute internal function

 //?C1108 -- Duplicate Tattoo Problem
 //?  PKLYDTR -- WW Tattoo
 //?  PKL0E1R -- Edt TTt Hdr
 //?  PKO6PVR-- Edt Ttt Hdr (PV)
}


// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?Tattoo Off Truck Company Value
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER('TTOOFFTRK');
PARAMETER(LCL.Tattoo_Off_Truck_USR);

//?USER: Load screen

//?Y* CALL PWOPUPR
EXECUTE FUNCTION(Rtv Producer Nm, Srce RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1162488;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PD_Name);
PARAMETER(WRK.SR_Source_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Source Type       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1141829;
PARAMETER(WRK.SR_Source_Code);
PARAMETER(WRK.SR_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.TH Purchase Date = DTL.TH Kill Date
DTL.TH_Purchase_Date = DTL.TH_Kill_Date;

// DTL.HC Class Type Desc Usr = Condition name of PAR.TH Hog Class Type
DTL.HC_Class_Type_Desc_Usr = RTVCND(PAR.TH_Hog_Class_Type);

//?10/09/02  PKD  PK0419:  Changed to only get the Next Tattoo
//?               if not Market and Not Tattooing off of the Truck.
//?Next Tattoo Number
CASE;

// IF LCL.Tattoo Off Truck USR is Yes
IF LCL.Tattoo_Off_Truck_USR = 'Y';

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER('TATTASSGN');
PARAMETER(LCL.System_Value_Alpha_USR);

CASE;

// IF LCL.System Value Alpha    USR is Yes
IF LCL.System_Value_Alpha_USR = 'Y';

// IF LCL.System Value Alpha    USR is No
IF LCL.System_Value_Alpha_USR = 'N';

CASE;

// IF PAR.TH Hog Class Type is Not Market
IF PAR.TH_Hog_Class_Type = 'R'/'S';

//?Get Next Tattoo Number into key screen field.
// Call program RTV Next Tattoo Nbrs  XF.
CALL PROGRAM(RTV Next Tattoo Nbrs  XF) ('PKY4XFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER('R');
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(WRK.Return_Code_USR);
PARAMETER(WRK.SR_Type);
PARAMETER(PAR.SBD_Top_Load_Sts);
PARAMETER(*BLANK);

ENDIF;

ENDIF;

//?Next Tattoo Number
// IF *OTHERWISE
IF *OTHERWISE;

// Call program RTV Next Tattoo Nbrs  XF.
CALL PROGRAM(RTV Next Tattoo Nbrs  XF) ('PKY4XFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER('R');
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(WRK.Return_Code_USR);
PARAMETER(WRK.SR_Type);
PARAMETER(PAR.SBD_Top_Load_Sts);
PARAMETER(*BLANK);

ENDIF;

//?Get Next Tattoo Number into work field for later comparison.
// WRK.TH Tattoo Number = DTL.TH Tattoo Number
WRK.TH_Tattoo_Number = DTL.TH_Tattoo_Number;

//?USER: Process command keys

CASE;

// IF DTL.*CMD key is CF19
IF DTL.*CMD_key = '19';

// Call program Display Internal Deliv DF.
CALL PROGRAM(Display Internal Deliv DF) ('PKSVDFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);

QUIT;

ENDIF;

//?USER: Validate fields

//?10/09/02  PKD  PK0419:  Added new validation for Tattooing off of
//?               the Truck.
CASE;

// IF LCL.Tattoo Off Truck USR is Yes
IF LCL.Tattoo_Off_Truck_USR = 'Y';

// LCL.TP Tattoo Date = CON.*ZERO
LCL.TP_Tattoo_Date = *ZERO;

//?F4=Prompt Tattoo Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.TH Tattoo Number
IF PGM.*Cursor_field = DTL.TH_Tattoo_Number;

// Call program Sel Pending Tattoo    SR.
CALL PROGRAM(Sel Pending Tattoo    SR) ('PLAGSRR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);

ENDIF;

ENDIF;

//?F6=Next Tattoo
CASE;

// IF DTL.*CMD key is CF06
IF DTL.*CMD_key = '06';

CASE;

// IF LCL.Tattoo Off Truck USR is Yes
IF LCL.Tattoo_Off_Truck_USR = 'Y';

CASE;

// IF DTL.TH Hog Class Type is Resale
IF DTL.TH_Hog_Class_Type = 'R';

// AND PAR.BOH Company Number is Triumph Foods Market
AND PAR.BOH_Company_Number = 960;

// WRK.Tattoo Number USR = CON.*ZERO
WRK.Tattoo_Number_USR = *ZERO;

// WRK.Company Value Code    USR = CON.*ZERO
WRK.Company_Value_Code_USR = *ZERO;

// WRK.Return Code USR = CND.*Normal
WRK.Return_Code_USR = *BLANK;

// WRK.Tattoo Nbr Group = CON.*ZERO
WRK.Tattoo_Nbr_Group = *ZERO;

// WRK.Tattoo Nbr Group Seq = CON.*ZERO
WRK.Tattoo_Nbr_Group_Seq = *ZERO;

// Call program RTV Next Tattoo Nbrs RFXF.
CALL PROGRAM(RTV Next Tattoo Nbrs RFXF) ('PWKWXFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER('R');
PARAMETER(WRK.Tattoo_Number_USR);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER('R');
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(WRK.Return_Code_USR);
PARAMETER('E');
PARAMETER(PAR.SBD_Top_Load_Sts);
PARAMETER(*BLANK);
PARAMETER(WRK.Tattoo_Nbr_Group);
PARAMETER(WRK.Tattoo_Nbr_Group_Seq);

// DTL.TH Tattoo Number = WRK.Tattoo Number USR
DTL.TH_Tattoo_Number = WRK.Tattoo_Number_USR;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Zzz Next Tattoo       PV.
CALL PROGRAM(Zzz Next Tattoo       PV) ('PKPKPVR');
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(5);
PARAMETER(DTL.TH_Hog_Class_Type);

ENDIF;

ENDIF;

ENDIF;

CASE;

// IF PAR.BOH Company Number is Triumph Foods Market
IF PAR.BOH_Company_Number = 960;

// AND PAR.TH Hog Class Type is Resale
AND PAR.TH_Hog_Class_Type = 'R';

// AND WRK.Tattoo Number USR is NE Zero
AND WRK.Tattoo_Number_USR <> *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

//?VAL:  Seaboard Top Load Range
CASE;

// IF PAR.SBD Top Load Sts is Yes
IF PAR.SBD_Top_Load_Sts = 'Y';

CASE;

// IF DTL.TH Tattoo Number is Seaboard Top Loads
IF DTL.TH_Tattoo_Number >= 8000;
AND DTL.TH_Tattoo_Number <= 8999;

EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Tattoo must be in the reserved number range of 8000 to 8999.'
ERROR(PRK0992);

QUIT;

ENDIF;

ENDIF;

//?VAL:  Not Market (Random Range)
CASE;

// IF DTL.TH Hog Class Type is Not Market
IF DTL.TH_Hog_Class_Type = 'R'/'S';

CASE;

// IF DTL.TH Tattoo Number is Random Range
IF DTL.TH_Tattoo_Number >= 1111;
AND DTL.TH_Tattoo_Number <= 8999;

EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Tattoo must be in the range of 1111 to 8999.'
ERROR(PRK1016);
MSGPARM(DTL.TH_Tattoo_Number);

QUIT;

ENDIF;

ENDIF;

//?VAL:  Market (Randon Range or Internal Pre-Tattooed)
CASE;

// IF DTL.TH Hog Class Type is Market
IF DTL.TH_Hog_Class_Type = 'M';

// AND PAR.SBD Top Load Sts is No
AND PAR.SBD_Top_Load_Sts = 'N';

CASE;

// IF WRK.SR Type is Internal
IF WRK.SR_Type = 'I';

CASE;

// IF DTL.TH Tattoo Number is Random Range
IF DTL.TH_Tattoo_Number >= 1111;
AND DTL.TH_Tattoo_Number <= 8999;

// OR DTL.TH Tattoo Number is Internal Research
OR DTL.TH_Tattoo_Number >= 9500;
AND DTL.TH_Tattoo_Number <= 9850;

EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


// IF DTL.TH Tattoo Number is Internal Pre-tattooed
IF DTL.TH_Tattoo_Number >= 9100;
AND DTL.TH_Tattoo_Number <= 9499;

EXECUTE FUNCTION(Rtv Val Ttt,Kll/bohld RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1196250;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Tattoo must be in the range of 1111 to 7999 or 9100 to 9850.'
ERROR(PRK1017);
MSGPARM(DTL.TH_Tattoo_Number);

QUIT;

ENDIF;

// IF WRK.SR Type is External
IF WRK.SR_Type = 'E';

//?10/07/04 PKD Per Jancie, we want to allow External's in the
//?             Random Range.
EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


ENDIF;

ENDIF;

//?VAL:  Tattoo Header Existance
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Tattoo Header already exists.'
ERROR(PRK0062);

QUIT;

//?VAL:  Tattoo Header Existance
// IF *OTHERWISE
IF *OTHERWISE;

//?VAL:  Tattoo Pending Existance
CASE;

// IF DTL.TH Hog Class Type is Market
IF DTL.TH_Hog_Class_Type = 'M';

// AND DTL.TH Tattoo Number is Random Range
AND ( DTL.TH_Tattoo_Number >= 1111;
AND DTL.TH_Tattoo_Number <= 8999;

// OR DTL.TH Tattoo Number is Internal Research
OR DTL.TH_Tattoo_Number >= 9500;
AND DTL.TH_Tattoo_Number <= 9850 );

EXECUTE FUNCTION(Val Tattoo Existance  RT) TYPE(RTVOBJ) FILE(PKFJCPP)           AB1243996;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// DTL.TH Tattoo Number = CON.*ZERO
DTL.TH_Tattoo_Number = *ZERO;

// LCL.TP Tattoo Date = CON.*ZERO
LCL.TP_Tattoo_Date = *ZERO;

// Call program Sel Pending Tattoo    SR.
CALL PROGRAM(Sel Pending Tattoo    SR) ('PLAGSRR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);

CASE;

// IF LCL.TP Tattoo Date is Entered
IF LCL.TP_Tattoo_Date > *ZERO;

// AND DTL.TH Tattoo Number is NE Zero
AND DTL.TH_Tattoo_Number <> *ZERO;

EXECUTE FUNCTION(Upd Tattoo Pending    RT) TYPE(RTVOBJ) FILE(PKFJCPP)           AB1244104;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER('A');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Tattoo Assigned   CH) TYPE(CHGOBJ) FILE(PKFJCPP)           AB1244105;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TP_Tattoo_Date);
 PARAMETER(DB1.TP_Tattoo_Number);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TP_Tattoo_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Tattoo not found in the "Pending" file.'
ERROR(PRK1012);
MSGPARM(DTL.TH_Tattoo_Number);

QUIT;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Upd Tattoo Pending    RT) TYPE(RTVOBJ) FILE(PKFJCPP)           AB1244104;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.TP_Tattoo_Date);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER('A');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Tattoo Assigned   CH) TYPE(CHGOBJ) FILE(PKFJCPP)           AB1244105;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TP_Tattoo_Date);
 PARAMETER(DB1.TP_Tattoo_Number);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TP_Tattoo_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


ENDIF;

ENDIF;

ENDIF;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?Special check for internals and tattoo numbers
CASE;

// IF PAR.TH Hog Class Type is Market
IF PAR.TH_Hog_Class_Type = 'M';

CASE;

// IF PAR.SBD Top Load Sts is No
IF PAR.SBD_Top_Load_Sts = 'N';

CASE;

// IF WRK.SR Type is Internal
IF WRK.SR_Type = 'I';

// WRK.Tto Nbr Chk Int/Other Usr = CND.Internal Check
WRK.Tto_Nbr_Chk_Int_Other_Usr = 'I';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Tto Nbr Chk Int/Other Usr = CND.Other Check
WRK.Tto_Nbr_Chk_Int_Other_Usr = 'O';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Tto Nbr Chk Int/Other Usr = CND.Other Check
WRK.Tto_Nbr_Chk_Int_Other_Usr = 'O';

ENDIF;

//?Special check for internals and tattoo numbers
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Tto Nbr Chk Int/Other Usr = CND.Other Check
WRK.Tto_Nbr_Chk_Int_Other_Usr = 'O';

ENDIF;

//?Tattoo number change
CASE;

// IF DTL.TH Tattoo Number NE WRK.TH Tattoo Number
IF DTL.TH_Tattoo_Number <> WRK.TH_Tattoo_Number;

CASE;

// IF WRK.Tto Nbr Chk Int/Other Usr is Internal Check
IF WRK.Tto_Nbr_Chk_Int_Other_Usr = 'I';

//?NEW: 10/07/98  internal pretattoos 9100-9850 check for bol and kill dt
//?NEW: 07/19/04  internal pretattoos 9100-9499 check for bol and kill dt
CASE;

// IF DTL.TH Tattoo Number is Internal Pre-tattooed
IF DTL.TH_Tattoo_Number >= 9100;
AND DTL.TH_Tattoo_Number <= 9499;

EXECUTE FUNCTION(Rtv Val Ttt,Kll/bohld RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1196250;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


// IF *OTHERWISE
IF *OTHERWISE;

//?NEW: 10/07/98  else just check for kill dt
EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


ENDIF;

//?Validation
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Tattoo Header already exists.'
ERROR(PRK0062);

//?Validation
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.User modified: 0-not modi = CND.Modified
WRK.User_modified_0_not_modi = 1;

ENDIF;

// IF WRK.Tto Nbr Chk Int/Other Usr is Other Check
IF WRK.Tto_Nbr_Chk_Int_Other_Usr = 'O';

CASE;

// IF PAR.SBD Top Load Sts is No
IF PAR.SBD_Top_Load_Sts = 'N';

CASE;

// IF DTL.TH Tattoo Number is Less than 9000
IF DTL.TH_Tattoo_Number < 9000;

// OR DTL.TH Tattoo Number is Greater than 9999
OR DTL.TH_Tattoo_Number > 9999;

// Send error message - 'Tattoo must be in the reserved number range of 9000 to 9999.'
ERROR(PRK0358);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Tattoo Header already exists.'
ERROR(PRK0062);

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.User modified: 0-not modi = CND.Modified
WRK.User_modified_0_not_modi = 1;

ENDIF;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?PK0313 10/16/01  SBD Top Tattoos
CASE;

// IF DTL.TH Tattoo Number is Less than 8000
IF DTL.TH_Tattoo_Number < 8000;

// OR DTL.TH Tattoo Number is Greater than 8999
OR DTL.TH_Tattoo_Number > 8999;

// Send error message - 'Tattoo must be in the reserved number range of 8000 to 8999.'
ERROR(PRK0992);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Val Ttt,Kll Dt    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1154371;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(DTL.TH_Tattoo_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Tattoo Header already exists.'
ERROR(PRK0062);

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.User modified: 0-not modi = CND.Modified
WRK.User_modified_0_not_modi = 1;

ENDIF;

ENDIF;

ENDIF;

ENDIF;

//?Tattoo number change
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.User modified: 0-not modi = CND.Not modified
WRK.User_modified_0_not_modi = 0;

ENDIF;

ENDIF;

//?USER: User defined action

// WRK.Record Added Usr = CND.No
WRK.Record_Added_Usr = 'N';

// Call program Edt Tattoo Hdr/Defect  ER.
CALL PROGRAM(Edt Tattoo Hdr/Defect  ER) ('PKKIE1R');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOL_Load_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(PAR.TH_Group_Reference);
PARAMETER(PAR.TH_Sex);
PARAMETER(PAR.TH_HPS_Movement_Ref_#);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(PAR.GN_Genetic_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(DTL.Name_USR);
PARAMETER(PAR.BOL_Pln_Delv_Date);
PARAMETER(WRK.Record_Added_Usr);
PARAMETER(DTL.PD_Name);
PARAMETER(DTL.PL_Name);
PARAMETER(WRK.User_modified_0_not_modi);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER(PAR.SBD_Top_Load_Sts);

CASE;

// IF PAR.BOH Company Number is Triumph Foods Market
IF PAR.BOH_Company_Number = 960;

// AND PAR.TH Hog Class Type is Resale
AND PAR.TH_Hog_Class_Type = 'R';

// AND DTL.TH Tattoo Number is NE Zero
AND DTL.TH_Tattoo_Number <> *ZERO;

// Call program Upd Tattoo Nbr Usage  XF.
CALL PROGRAM(Upd Tattoo Nbr Usage  XF) ('PWK0XFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(WRK.Tattoo_Nbr_Group);
PARAMETER(WRK.Tattoo_Nbr_Group_Seq);

// Send information message - 'Tattoo &1 has been added.'
MESSAGE(PRK0359 *INFO);
MSGPARM(DTL.TH_Tattoo_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

//?10/09/02  PKD  PK0419: Commented out
//?10/09/02  PKD  PK0419:  Changed to only get the Next Tattoo
//?               if not Market and Not Tattooing off of the Truck.
//?Next Tattoo Number
CASE;

// IF LCL.Tattoo Off Truck USR is Yes
IF LCL.Tattoo_Off_Truck_USR = 'Y';

CASE;

// IF DTL.TH Hog Class Type is Not Market
IF DTL.TH_Hog_Class_Type = 'R'/'S';

//?Get Next Tattoo Number into key screen field.
// Call program RTV Next Tattoo Nbrs  XF.
CALL PROGRAM(RTV Next Tattoo Nbrs  XF) ('PKY4XFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER('R');
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(WRK.Return_Code_USR);
PARAMETER(WRK.SR_Type);
PARAMETER(PAR.SBD_Top_Load_Sts);
PARAMETER(*BLANK);

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.TH Tattoo Number = CON.*ZERO
DTL.TH_Tattoo_Number = *ZERO;

ENDIF;

//?Next Tattoo Number
// IF *OTHERWISE
IF *OTHERWISE;

// Call program RTV Next Tattoo Nbrs  XF.
CALL PROGRAM(RTV Next Tattoo Nbrs  XF) ('PKY4XFR');
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Hog_Class_Type);
PARAMETER(DTL.TH_Tattoo_Number);
PARAMETER(WRK.Company_Value_Code_USR);
PARAMETER('R');
PARAMETER(DTL.TH_Kill_Date);
PARAMETER(WRK.Return_Code_USR);
PARAMETER(WRK.SR_Type);
PARAMETER(PAR.SBD_Top_Load_Sts);
PARAMETER(*BLANK);

ENDIF;

//?Get Next Tattoo Number into work field for later comparison.
// WRK.TH Tattoo Number = DTL.TH Tattoo Number
WRK.TH_Tattoo_Number = DTL.TH_Tattoo_Number;

