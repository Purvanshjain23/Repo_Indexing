     H/TITLE Prt Verif Live Price  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 01/24/21  Time  : 13:23:16
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKC4REL1IF  E           K        DISK
      * RTV : Payment Processing Parms  Retrieval index
      *
     FPKA1CPLQIF  E           K        DISK
      * RSQ : Tattoo Header             Co/kD/SRT/Pt/Tto *all*
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKJZPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Verif Live Price  PF  Print file
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             11
      * KEY: Tattoo Header             Co/kD/SRT/Pt/Tto *all*
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
     IP2PARM      DS
      * N : MAP Oms System Value Alpha
     I                                        1  40 P2EVTX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Tattoo Hea
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Verif Live Price  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Verif Live Price  PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
      * Establish starting position
     C           KRSA      SETLL@A1CPQC                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        TH Source Type
     C                     MOVEL'Y'       W0AL03  1        TH Payment Type
     C                     MOVEL'Y'       W0AL04  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $GD2PC           Act Dress Yield
     C                     Z-ADD*ZERO     $GO1NB           TOT Live Wgt Bk
     C                     Z-ADD*ZERO     $GKEST           TOT Hot Wgt Bk
     C                     Z-ADD*ZERO     $GDMNB           Tot DOA 2 SUM
     C                     Z-ADD*ZERO     $GV3NB           Tot Adj Live Wg
     C                     Z-ADD*ZERO     $GBJVA           Bse Mrkt Prc Am
     C                     Z-ADD*ZERO     $GBLVA           Yield Gain/Loss
     C                     Z-ADD*ZERO     $GBBVA           Gross Total SUM
     C                     Z-ADD*ZERO     $GBOVA           Ded 2 Rep Sum
     C                     Z-ADD*ZERO     $GDYVA           Ded Amount 4 2
     C                     Z-ADD*ZERO     $GBCVA           Ded Total SUM
     C                     Z-ADD*ZERO     $GWANB           Tot Condemds 3
     C                     Z-ADD*ZERO     $GOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $GB4NB           Head Total SUM
     C                     Z-ADD*ZERO     $GXNNB           Weight 8.1  5 U
     C                     Z-ADD*ZERO     $GV8NB           Tot Yard Deads
     C                     Z-ADD*ZERO     $GOUNB           Lean % Usr REp
     C                     Z-ADD*ZERO     $GBKVA           Lean Prm Ded Re
     C                     Z-ADD*ZERO     $GBMVA           Var From Top Wg
     C                     Z-ADD*ZERO     $GBNVA           Ded 1 Rep Sum
     C                     Z-ADD*ZERO     $GBPVA           Ded 3 Rep Sum
     C                     Z-ADD*ZERO     $GBRVA           Ded All other R
     C                     Z-ADD*ZERO     $GBDVA           Net Total SUM
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     MOVELA1KAST    $DKAST           TH Source Type
     C                     MOVEL*BLANK    $DISTX           SR Type Desc
      * Load related totals format
     C                     Z-ADDA1HMNB    $FHMNB           BOH Company Num
     C                     Z-ADDA1EHPR    $FEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $FKAST           TH Source Type
     C                     MOVEL*BLANK    $FISTX           SR Type Desc
     C                     Z-ADD*ZERO     $FO0NB           TOT Live Wgt Bk
     C                     Z-ADD*ZERO     $FKDST           TOT Hot Wgt Bk
     C                     Z-ADD*ZERO     $FDO1S           Tot DOA 1 SUM
     C                     Z-ADD*ZERO     $FV2NB           Tot Adj Live Wg
     C                     Z-ADD*ZERO     $FWBNB           Tot Adj Live Wg
     C                     Z-ADD*ZERO     $FD2PC           Act Dress Yield
     C                     Z-ADD*ZERO     $FBJVA           Bse Mrkt Prc Am
     C                     Z-ADD*ZERO     $FBLVA           Yield Gain/Loss
     C                     Z-ADD*ZERO     $FBBVA           Gross Total SUM
     C                     Z-ADD*ZERO     $FBOVA           Ded 2 Rep Sum
     C                     Z-ADD*ZERO     $FDXVA           Ded Amount 4 1
     C                     Z-ADD*ZERO     $FBCVA           Ded Total SUM
     C                     Z-ADD*ZERO     $FWDNB           Tot Condemds 2
     C                     Z-ADD*ZERO     $FOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $FB4NB           Head Total SUM
     C                     Z-ADD*ZERO     $FXLNB           Weight 8.1  4 U
     C                     Z-ADD*ZERO     $FWCNB           Tot Yard Deads
     C                     Z-ADD*ZERO     $FOUNB           Lean % Usr REp
     C                     Z-ADD*ZERO     $FBKVA           Lean Prm Ded Re
     C                     Z-ADD*ZERO     $FBMVA           Var From Top Wg
     C                     Z-ADD*ZERO     $FBNVA           Ded 1 Rep Sum
     C                     Z-ADD*ZERO     $FBPVA           Ded 3 Rep Sum
     C                     Z-ADD*ZERO     $FBRVA           Ded All other R
     C                     Z-ADD*ZERO     $FBDVA           Net Total SUM
     C                     Z-ADD*ZERO     $FEZPR           Total Per CWT 1
     C                     Z-ADD*ZERO     $FE0PR           Total Per CWT 2
     C                     Z-ADD*ZERO     $FE1PR           Total Per CWT 3
     C                     Z-ADD*ZERO     $FE2PR           Total Per CWT 4
     C                     Z-ADD*ZERO     $FE3PR           Total Per CWT 5
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     MOVELA1ABCD    $EABCD           PD Producer Cod
     C                     Z-ADDA1BNNB    $EBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $EBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $ECVNB           TH Tattoo Numbe
     C                     Z-ADDA1B0DT    $EB0DT           TH Kill Date
     C                     Z-ADD*ZERO     $EB5NB           Head Total USR
     C                     Z-ADDA1CYNB    $ECYNB           TH Live Wgt
     C                     Z-ADD*ZERO     $EV6NB           Avg Adj Live We
     C                     Z-ADDA1HGNB    $EHGNB           TH Shipped Weig
     C                     Z-ADDA1F7NB    $EF7NB           TH Avg Live Wgt
     C                     Z-ADDA1FENB    $EFENB           TH Head Killed
     C                     Z-ADDA1AWPC    $EAWPC           TH Actual Yield
     C                     Z-ADDA1E0NB    $EE0NB           TH Hot Wgt
     C                     Z-ADDA1F4NB    $EF4NB           TH Avg Lean Per
     C                     Z-ADDA1ANPR    $EANPR           TH CM Base Mkt
     C                     Z-ADDA1AXVA    $EAXVA           TH CM LN AddOn/
     C                     Z-ADDA1AWVA    $EAWVA           TH CM Yield Gai
     C                     Z-ADDA1AYVA    $EAYVA           TH CM Sort Disc
     C                     Z-ADDA1AOPR    $EAOPR           TH CM Base Carc
     C                     Z-ADDA1CBPR    $ECBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $EETPR           Ded Amount 1 Us
     C                     Z-ADD*ZERO     $EEUPR           Ded Amount 2 Us
     C                     Z-ADD*ZERO     $EEVPR           Ded Amount 3 Us
     C                     Z-ADD*ZERO     $ELGPR           Ded Amount 4 US
     C                     Z-ADD*ZERO     $EEWPR           Ded Amount All
     C                     Z-ADD*ZERO     $EEXPR           DED/ADD TOTAL U
     C                     Z-ADDA1A5VA    $EA5VA           TH Additions Am
     C                     Z-ADDA1ASPR    $EASPR           TH Deduction Am
     C                     Z-ADDA1CCPR    $ECCPR           Th Payment Net
     C                     Z-ADDA1FCNB    $EFCNB           TH Yard Deads
     C                     Z-ADDA1CXNB    $ECXNB           TH Dead On Arri
     C                     Z-ADDA1FDNB    $EFDNB           TH Head Condemn
     C                     MOVEL*BLANK    $EGYST           Error Type Foun
     C                     Z-ADDA1LPNB    $ELPNB           TH AP Voucher/D
     C                     MOVELA1BICD    $EBICD           TH Group Refere
     C                     MOVELA1CPST    $ECPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $EACPR           TH Live Purchas
     C                     MOVEL*BLANK    $EE6TX           HC Class Type D
     C                     Z-ADDA1HENB    $EHENB           TH Head Adds
     C                     Z-ADDA1HFNB    $EHFNB           TH Head Accepte
     C                     Z-ADDA1LRNB    $ELRNB           TH Adj Live Wgt
     C                     Z-ADDA1A5PC    $EA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $EFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $EA4PC           TH Tot Light Re
     C                     Z-ADDA1HDNB    $EHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1F5NB    $EF5NB           TH Avg Light Re
     C                     Z-ADDA1F3NB    $EF3NB           TH Avg Loin Eye
     C                     Z-ADDA1F2NB    $EF2NB           TH Avg Backfat
     C                     Z-ADDA1AVPC    $EAVPC           TH Std Yield Pe
     C                     Z-ADDA1CWPC    $ECWPC           TH Adj Actual Y
     C                     Z-ADDA1A8PC    $EA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $EA7PC           TH Recalc Live
     C                     Z-ADDA1AMPR    $EAMPR           TH CM Base Mkt
     C                     MOVELA1CWST    $ECWST           TH Payment Sts
     C                     Z-ADDA1B9PR    $EB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $ECAPR           TH LIve Net Amt
     C                     Z-ADDA1CWNB    $ECWNB           TH Head Receive
     C                     Z-ADDA1B8PR    $EB8PR           TH CM Market Pr
     C                     MOVELA1CSCD    $ECSCD           THP Process Cod
     C                     Z-ADDA1APPR    $EAPPR           TH CM Carcass G
     C                     Z-ADDA1ATPR    $EATPR           TH Carcass Net
     C                     Z-ADDA1H9NB    $EH9NB           TH Held Over
     C                     Z-ADDA1AWDT    $EAWDT           TH Purchase Dat
     C                     MOVELA1BECD    $EBECD           HC Class Code
     C                     Z-ADDA1A4VA    $EA4VA           TH Total Net WO
     C                     Z-ADDA1CDPR    $ECDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $EA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $EA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $EJWST           TH Calc Net Sts
     C                     MOVELA1D7ST    $ED7ST           TH Header Error
     C                     MOVELA1D8ST    $ED8ST           TH Detail Error
     C                     MOVELA1DWST    $EDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $ED6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $EGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $EBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $EE0ST           TH User Error O
     C                     MOVELA1E1ST    $EE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $EE2ST           TH Sex
     C                     Z-ADDA1BSDT    $EBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $EBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $EBUDT           TH Actual Check
     C                     Z-ADDA1HHNB    $EHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $EHINB           TH FFLI
     C                     Z-ADDA1A3PR    $EA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $EA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $EA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $EJ9NB           TH Head Exclude
     C                     Z-ADDA1D6PR    $ED6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $ED7PR           TH CM Bse Mkt C
     C                     Z-ADDA1EFPR    $EEFPR           TH CM Lean Prem
     C                     Z-ADDA1D8PR    $ED8PR           TH CM Srt Dsc L
     C                     Z-ADDA1EAPR    $EEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $EEBPR           TH CM Yld G/L C
     C                     Z-ADDA1ECPR    $EECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $EEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $EEEPR           TH CM Lean Prem
     C                     Z-ADDA1D9PR    $ED9PR           TH CM Srt Dsc C
     C                     Z-ADDA1EGPR    $EEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $EEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     $ECUPR           Gross Pay Amt T
     C                     MOVEL*BLANK    $EEKTX           Producer Name 1
     C                     MOVELA1KAST    $EKAST           TH Source Type
     C                     MOVELA1J7ST    $EJ7ST           TH Scale Ticket
     C                     MOVELA1J8ST    $EJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $ELIST           TH Schedule Kil
     C                     MOVELA1LJST    $ELJST           TH Shift Held O
     C                     MOVELA1NZTX    $ENZTX           TH State
     C                     MOVELA1HJCD    $EHJCD           TH Unused Code
     C                     MOVELA1R4ST    $ER4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $ER5ST           TH Commission S
     C                     MOVELA1R6ST    $ER6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $ER7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $ETHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $ET2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $ETHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $ET2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $EOBPR           TH Sorting Amou
     C                     Z-ADDA1KOER    $EKOER           TH Head Identif
     C                     Z-ADDA1OPIR    $EOPIR           TH Percent Iden
     C                     Z-ADDA1OPEM    $EOPEM           TH Percent Acce
     C                     Z-ADDA1IORP    $EIORP           TH Head Adjuste
     C                     Z-ADDA1OWEO    $EOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $EOQET           TH PHA Add Type
     C                     MOVELA1URST    $EURST           TH PHA Average
     C                     MOVELA1USST    $EUSST           TH PHA Add Reas
     C                     Z-ADDA1HHPC    $EHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $ES9PR           TH PHA Lean Prm
     C                     Z-ADDA1TAPR    $ETAPR           TH VC Gross Val
     C                     Z-ADDA1TBPR    $ETBPR           TH Excluded Gro
     C                     Z-ADDA1JFUR    $EJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $EKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $EKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $EKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $EKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $EOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $EIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $EIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $EIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $EKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $EOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $EKFOR           TH Meat Value F
     C                     Z-ADDA1ORJK    $EORJK           TH Yld Parm Adj
     C                     Z-ADDA1OMVJ    $EOMVJ           TH PHA Sort Dis
     C                     Z-ADDA1MVNF    $EMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $EMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $ENCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $ENCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $EIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $EKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $EEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $EEBDT           TH Cold Scl Upl
     C                     Z-ADDA1ECDT    $EECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $EEDDT           TH Head EUT/KOA
     C                     Z-ADDA1EEDT    $EEEDT           TH Unused Date
     C                     MOVELA1U4ST    $EU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $EU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $EU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $EU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $EU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $EU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $EVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $EVBST           TH Unused Sts 8
     C                     MOVELA1J9ST    $EJ9ST           TH Payment Type
     C                     Z-ADDA1OXNB    $EOXNB           TH HPS Movement
     C                     MOVELA1LKST    $ELKST           TH Source Code
     C                     MOVELA1LLST    $ELLST           TH Hog Class Ty
     C                     MOVELA1AGCD    $EAGCD           GN Genetic Code
     C                     MOVELA1C4ST    $EC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $EAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $EA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $EC2ST           TH Resale Sprea
     C                     MOVELA1BDCD    $EBDCD           DF Defect Code
     C                     MOVELA1AECD    $EAECD           PL Location Cod
     C                     MOVELA1ACCD    $EACCD           HB Buyer Code
     C                     MOVELA1AAVN    $EAAVN           RS User Changed
     C                     Z-ADDA1AADT    $EAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $EAMTM           RS Time Changed
     C                     MOVELA1AJST    $EAJST           RS Record Statu
     C                     MOVELA1AHVN    $EAHVN           RS Job
     C                     MOVELA1AGVN    $EAGVN           RS Program
     C                     MOVELA1ABVN    $EABVN           RS User Added
     C                     Z-ADDA1ABDT    $EABDT           RS Date Added
     C                     Z-ADDA1ABTM    $EABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $EB5NB    $FB4NB           Head Total SUM
     C                     ADD  $EHGNB    $FXLNB           Weight 8.1  4 U
     C                     ADD  $ECXNB    $FDO1S           Tot DOA 1 SUM
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1B0DT    WZA002           TH Kill Date
     C                     Z-ADDA1B0DT    WZA002
     C           *LIKE     DEFN A1KAST    WZA003           TH Source Type
     C                     MOVELA1KAST    WZA003
     C           *LIKE     DEFN A1J9ST    WZA004           TH Payment Type
     C                     MOVELA1J9ST    WZA004
     C           *LIKE     DEFN A1CVNB    WZA005           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPQC                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'Y'       W0RSL            *Record selecte
      * CASE: DB1.TH Payment Sts is Unpaid Live
     C           A1CWST    IFEQ 'ML'                       *IF
     C           A1CWST    OREQ 'SL'
     C           A1CWST    OREQ 'IL'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * CASE: DB1.TH Purchase Date LE WRK.TH Kill Date
     C           A1AWDT    IFLE WUB0DT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        TH Kill Date
     C                     MOVEL*BLANK    W0AL02  1        TH Source Type
     C                     MOVEL*BLANK    W0AL03  1        TH Payment Type
     C                     MOVEL*BLANK    W0AL04  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        TH Source Type
     C                     MOVEL'Y'       W0AL03  1        TH Payment Type
     C                     MOVEL'Y'       W0AL04  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1B0DT    IFNE WZA002                     TH Kill Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1KAST    IFNE WZA003                     TH Source Type
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1J9ST    IFNE WZA004                     TH Payment Type
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           A1CVNB    IFNE WZA005                     TH Tattoo Numbe
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Source Type format
     C                     Z-ADDWUWCNB    $FWCNB           Tot Yard Deads
     C                     Z-ADDWUWDNB    $FWDNB           Tot Condemds 2
      * CUR.SR Type Desc = Condition name of CUR.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM $FKAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FISTX    PARM           W0CNNM 25        SR Type Desc
      *
     C                     Z-ADDWUO0NB    $FO0NB           TOT Live Wgt Bk
     C                     Z-ADDWUKDST    $FKDST           TOT Hot Wgt Bk
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of TH Source Type format
     C                     ADD  $FB4NB    $GB4NB           Head Total SUM
     C                     ADD  $FXLNB    $GXNNB           Weight 8.1  5 U
     C                     Z-ADD*ZERO     WUDO1S           Tot DOA 1 SUM
     C                     Z-ADD*ZERO     WUO0NB           TOT Live Wgt Bk
     C                     Z-ADD*ZERO     WUXLNB           Weight 8.1  4 U
     C                     Z-ADD*ZERO     WUWCNB           Tot Yard Deads
     C                     Z-ADD*ZERO     WUKDST           TOT Hot Wgt Bk
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
     C                     Z-ADDWUV8NB    $GV8NB           Tot Yard Deads
     C                     Z-ADDWUWANB    $GWANB           Tot Condemds 3
      * Calc adj avg LIVE WEIGHT
      * CASE: WRK.Tot Adj Live Wgt 3 usr NE WRK.Zero USR
     C           WUV3NB    IFNE WUE9NB                     *IF
      * adj LIVE WEIGHT BK 3
      * CUR.Tot Adj Live Wgt 3 usr =
      *    *COMPUTE ((x1 / x2))
      * x1    : WRK.Tot Adj Live Wgt 3 usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : WRK.Tot Net Head 3 Usr
     C           WUV3NB    DIV  WUV5NB    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $GV3NB           Tot Adj Live Wg
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $GV3NB           Tot Adj Live Wg
     C                     END                             *FI
     C                     Z-ADDWUO1NB    $GO1NB           TOT Live Wgt Bk
     C                     Z-ADDWUKEST    $GKEST           TOT Hot Wgt Bk
     C           W0PFM     IFEQ 'Y'
      * This format always starts a new page
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
      * Print format
     C                     WRITE$GFINTTL
     C                     END
      * USER: Process after print of final totals format
     C                     Z-ADDWUE9NB    WUKEST           TOT Hot Wgt Bk
     C                     Z-ADDWUE9NB    WUPGNB           Tot Hot Wgt Car
     C                     Z-ADDWUE9NB    WUPANB           TOT Head Rec Bk
     C                     Z-ADDWUE9NB    WUO2NB           TOT Head Kill B
     C                     Z-ADDWUE9NB    WUO1NB           TOT Live Wgt Bk
     C                     Z-ADDWUE9NB    WUPDNB           Tot Lean % Wgt
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print TH Kill Date of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print TH Source Type of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Source Type format
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM A1KAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DISTX    PARM           W0CNNM 25        SR Type Desc
      *
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP02
     C                     END                             FI
      * Print TH Payment Type of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE 'P'       W0AP03
     C                     END                             FI
      * Print TH Tattoo Number of Prt Verif Live Price  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Verif Live Price  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SBRVGN
     C                     MOVELWUAGTX    $EEKTX           Producer Name 1
      * CUR.HC Class Type Desc Usr = Condition name of DB1.TH Hog Class T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1110255   Y2LSNO  70       List number
     C                     PARM A1LLST    W0INVL 25        TH Hog Class Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $EE6TX    PARM           W0CNNM 25        HC Class Type D
      *
      * Head live uses head received, carcass uses head killed
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C           A1CWNB    SUB  A1FCNB    WUF6NB           Net Head Usr
     C                     SUB  A1FDNB    WUF6NB           Net Head Usr
     C                     Z-ADDWUF6NB    $EB5NB           Head Total USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           A1CWNB    SUB  A1FCNB    WUF6NB           Net Head Usr
     C                     SUB  A1FDNB    WUF6NB           Net Head Usr
     C                     Z-ADDWUF6NB    $EB5NB           Head Total USR
     C                     END                             *FI
      * CASE: CUR.TH Payment Type is Live
     C           $EJ9ST    IFEQ 'L'                        *IF
      * CASE: DB1.TH Payment Sts is Paid External
     C           A1CWST    IFEQ 'PL'                       *IF
     C           A1CWST    OREQ 'PC'
     C                     ELSE
      * CASE: DB1.TH Payment Sts is Paid Internal
     C           A1CWST    IFEQ 'NC'                       *IF
     C           A1CWST    OREQ 'NL'
     C                     ELSE
      * CASE: DB1.TH Payment Sts is Paid Producer
     C           A1CWST    IFEQ 'PL'                       *IF
     C           A1CWST    OREQ 'PC'
     C           A1CWST    OREQ 'NC'
     C           A1CWST    OREQ 'NL'
     C                     ELSE
      * CASE: *OTHERWISE
      * Test special Live payment fields
      * CASE: CUR.TH Live Wgt is Zeros
     C           $ECYNB    IFEQ *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.TH Live Purchase UOM EQ WRK.Blank Usr 1 fld Usr
     C           $ECPST    IFEQ WUIXTX                     *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     ELSE
      * CASE: CUR.TH Live Purchase Price is Zeros
     C           $EACPR    IFEQ *ZERO                      *IF
     C                     MOVEL'W'       $EGYST           Error Type Foun
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Accumulate totals
     C                     EXSR UBSUBR                     Accumulate tota
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $EB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEB0DT
     C                     MOVEL'0'       *IN79
     C           WUKGST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           $EGYST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           $EGYST    IFEQ 'W'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP02    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Verif Live Price  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Verif Live Price  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Prt Verif Live Price  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Source Type of Prt Verif Live Price  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * TH Payment Type of Prt Verif Live Price  PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Verif Live Price  PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Verif Live Price  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD3         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * TOP = PAR By name
     C                     Z-ADDP1HMNB    $BHONB           CC Company Numb
     C                     Z-ADDWUB0DT    $BB0DT           TH Kill Date
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $BHONB    WQ0001  30       CC Company Numb
     C           $BEUTX    PARM *BLANK    WQ0002 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0003  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $BB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBB0DT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Payment Processing RT - Payment Processing Parms  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           C4HONB           CC Company Numb
      * Setup key
     C                     Z-ADDP1HMNB    C4HONB           CC Company Numb
      * Establish starting position
     C           KRSSA     CHAIN@C4REO7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0434' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUB0DT           Pmt Current Pay
     C                     Z-ADD*ZERO     WUM1NB           Pmt Current Pay
     C                     MOVEL*BLANK    WUKHST           PP Commission P
     C                     MOVEL*BLANK    WUKJST           PP Payment Erro
     C                     Z-ADD*ZERO     WUPINB           PP Unused Nbr 1
     C                     MOVEL*BLANK    WUKKST           PP Repayment St
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDC4CKDT    WUB0DT           Pmt Current Pay
     C                     Z-ADDC4M1NB    WUM1NB           Pmt Current Pay
     C                     MOVELC4KHST    WUKHST           PP Commission P
     C                     MOVELC4KJST    WUKJST           PP Payment Erro
     C                     Z-ADDC4PINB    WUPINB           PP Unused Nbr 1
     C                     MOVELC4KKST    WUKKST           PP Repayment St
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$EABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSB     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    WUAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * H16853 ISE 01/24/21 - Increased the length from 5 to 7 and correc
      *                       alignment for Buy Order Number field.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Accumulate totals
      *================================================================
     C                     ADD  A1E0NB    WUOYNB           TOT Hot Wgt Bk
     C                     ADD  A1E0NB    WUKDST           TOT Hot Wgt Bk
     C                     ADD  A1E0NB    WUKEST           TOT Hot Wgt Bk
     C                     ADD  A1CWNB    WUO8NB           TOT Head Rec Bk
     C                     ADD  A1CWNB    WUO9NB           TOT Head Rec Bk
     C                     ADD  A1CWNB    WUPANB           TOT Head Rec Bk
     C                     ADD  A1FENB    WUO6NB           TOT Head Kill B
     C                     ADD  A1FENB    WUO7NB           TOT Head Kill B
     C                     ADD  A1FENB    WUO2NB           TOT Head Kill B
     C                     ADD  A1CYNB    WUOZNB           TOT Live Wgt Bk
     C                     ADD  A1CYNB    WUO0NB           TOT Live Wgt Bk
     C                     ADD  A1CYNB    WUO1NB           TOT Live Wgt Bk
     C                     ADD  WUF6NB    WUV4NB           Tot Net Head 1
     C                     ADD  WUF6NB    WUWENB           Tot Net Head 2
     C                     ADD  WUF6NB    WUV5NB           Tot Net Head 3
     C                     ADD  A1FCNB    WUV7NB           Tot Yard Deads
     C                     ADD  A1FCNB    WUWCNB           Tot Yard Deads
     C                     ADD  A1FCNB    WUV8NB           Tot Yard Deads
     C                     ADD  A1FDNB    WUV9NB           Tot Condemds 1
     C                     ADD  A1FDNB    WUWDNB           Tot Condemds 2
     C                     ADD  A1FDNB    WUWANB           Tot Condemds 3
     C                     ADD  A1LRNB    WUV2NB           Tot Adj Live Wg
     C                     ADD  A1LRNB    WUWBNB           Tot Adj Live Wg
     C                     ADD  A1LRNB    WUV3NB           Tot Adj Live Wg
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2EVTX           Oms System Valu
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field TH Kill Date
     C                     Z-ADD*ZERO     WUB0DT  70
      * Define work field Pmt Current Payment Step
     C                     Z-ADD*ZERO     WUM1NB  50
      * Define work field PP Commission Paym Error
     C                     MOVEL*BLANK    WUKHST  1
      * Define work field PP Payment Error
     C                     MOVEL*BLANK    WUKJST  1
      * Define work field PP Unused Nbr 1
     C                     Z-ADD*ZERO     WUPINB  50
      * Define work field PP Repayment Status
     C                     MOVEL*BLANK    WUKKST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
     C                     MOVEL*LOVAL    A1KAST           TH Source Type
     C                     MOVEL*LOVAL    A1J9ST           TH Payment Type
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Define work field PD Name
     C                     MOVEL*BLANK    WUAGTX 40
      * Define work field Net Head Usr
     C                     Z-ADD*ZERO     WUF6NB  50
      * Define work field Blank Usr 1 fld Usr
     C                     MOVEL*BLANK    WUIXTX  1
      * Define work field TOT Hot Wgt Bk 1 Usr
     C                     Z-ADD*ZERO     WUOYNB  81
      * Define work field TOT Hot Wgt Bk 2 Usr
     C                     Z-ADD*ZERO     WUKDST  81
      * Define work field TOT Hot Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUKEST  81
      * Define work field TOT Head Rec Bk 1 Usr
     C                     Z-ADD*ZERO     WUO8NB  70
      * Define work field TOT Head Rec Bk 2 Usr
     C                     Z-ADD*ZERO     WUO9NB  70
      * Define work field TOT Head Rec Bk 3 Usr
     C                     Z-ADD*ZERO     WUPANB  70
      * Define work field TOT Head Kill Bk 1 Usr
     C                     Z-ADD*ZERO     WUO6NB  70
      * Define work field TOT Head Kill Bk 2 Usr
     C                     Z-ADD*ZERO     WUO7NB  70
      * Define work field TOT Head Kill Bk 3 Usr
     C                     Z-ADD*ZERO     WUO2NB  70
      * Define work field TOT Live Wgt Bk 1 Usr
     C                     Z-ADD*ZERO     WUOZNB  81
      * Define work field TOT Live Wgt Bk 2 Usr
     C                     Z-ADD*ZERO     WUO0NB  81
      * Define work field TOT Live Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUO1NB  81
      * Define work field Tot Net Head 1 Usr
     C                     Z-ADD*ZERO     WUV4NB  70
      * Define work field Tot Net Head 2 Usr
     C                     Z-ADD*ZERO     WUWENB  70
      * Define work field Tot Net Head 3 Usr
     C                     Z-ADD*ZERO     WUV5NB  70
      * Define work field Tot Yard Deads 1 Usr
     C                     Z-ADD*ZERO     WUV7NB  70
      * Define work field Tot Yard Deads 2 Usr
     C                     Z-ADD*ZERO     WUWCNB  70
      * Define work field Tot Yard Deads 3 Usr
     C                     Z-ADD*ZERO     WUV8NB  70
      * Define work field Tot Condemds 1 Usr
     C                     Z-ADD*ZERO     WUV9NB  70
      * Define work field Tot Condemds 2 Usr
     C                     Z-ADD*ZERO     WUWDNB  70
      * Define work field Tot Condemds 3 Usr
     C                     Z-ADD*ZERO     WUWANB  70
      * Define work field Tot Adj Live Wgt 1 usr
     C                     Z-ADD*ZERO     WUV2NB  81
      * Define work field Tot Adj Live Wgt 2 Usr
     C                     Z-ADD*ZERO     WUWBNB  81
      * Define work field Tot Adj Live Wgt 3 usr
     C                     Z-ADD*ZERO     WUV3NB  81
      * Define work field Print Held Over Flag Usr
     C                     MOVEL*BLANK    WUKGST  1
      * Define work field Tot DOA 1 SUM
     C                     Z-ADD*ZERO     WUDO1S  70
      * Define work field Weight 8.1  4 Usr     SUM
     C                     Z-ADD*ZERO     WUXLNB  81
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Tot Hot Wgt Car Bk3 Usr
     C                     Z-ADD*ZERO     WUPGNB  81
      * Define work field Tot Lean % Wgt BK 3 Usr
     C                     Z-ADD*ZERO     WUPDNB 152
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    $ACMP
      * Rtv Payment Processing RT - Payment Processing Parms  * 
     C                     EXSR SARVGN
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
