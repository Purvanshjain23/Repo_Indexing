      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF2214 -Datamart MARGIN: Build Volume Summary--Weekly
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     05/30/13
      *
      * Function:    This program is a one-to-one write from TFP018-Volume Summary--Weekly.
      *
      *              We created this file at the request of Adam Gross (E2610) so that
      *              Duke Sand could get the Weekly Converting %s on his Cognos Dashboard.
      *              So, we are starting with a very abbreviated set of data elements.
      *              I will calc the Converting %s and put them in this weekly Datamart record.
      *              But, just in case the users want multiple weeks, I will also put the
      *              elements used in the calc in this record. That way, if Doug E. needs
      *              to, he will have the data to make the calc for rollups in Cognos.
      *
      *******************************************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/11/13  LeAnne Ramsey
      *           Added a new field to new Datamart file TFP8018-Volume Summary Weekly.
      *               VWSTTYDS-Structure Type Description
      *           Note: This field is a concatenation of Code + Description
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fome8rel1  if   e           k disk
      *  Item structure type
      *
      *
     Ftfl018b   if   e           k disk    rename(vwrec:vwrecb) prefix(p1)
      *  Volume summary--weekly
      *
      *
     Ftfp8018   o    e           k disk
      *  Datamart TFS: Volume summary--weekly
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Workfields
      *
     D wkcono          s                   like(vwcono)
     D wkcode          s              3a
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Definition for external data area DATFMARG
      *---------------------------------------------------------------
     D
     Ddatfmarg        uds
     D  da099dt               30     37  0
     D  dadmdt                80     87  0
     D  dasbmfl              100    100
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************************************
      * Mainline
      ****************************************************************************************
      *
      * The TFS Volume Summary records have both Seaboard and Triumph data in a single
      * record. For the Datamart file, we must write separate records for the 2 companies.
      * Since we will be processing few records for each run, we will make 2 passes
      * thru the file (instead of defining/using workfields for accumulating).
      *
     C                   z-add     360           wkcono
     C                   exsr      $process
      *
     C                   z-add     960           wkcono
     C                   exsr      $process
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------------
      * Process the TF Volume Summary-Weekly records
      *-----------------------------------------------------------------------------------------
      *
     C     $process      begsr
      *
     C     dadmdt        setgt     tfl018b
      *
     C                   dou       *in90 = *on or p1vwwedt > da099dt            Do process
     C                   read      tfl018b                                90
     C                   if        *in90 = *off and p1vwwedt <= da099dt         If not EOF
     C                   exsr      $wrt8018
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do process
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Datamart record
      *---------------------------------------------------------------
      *
     C     $wrt8018      begsr
      *
     C                   z-add     wkcono        vwcono
     C                   move      p1vwtfclcd    vwtfclcd
     C                   move      p1vwistycd    vwistycd
      * Dates
     C                   z-add     p1vwyr        vwyr
     C                   z-add     p1vwwk        vwwk
     C                   z-add     p1vwwedt      vw80wedt
      *
     C     *iso          move      vw80wedt      wkisodate
     C                   move      wkisodate     vwwedt
     C                   move      vwwedt        vwwedtmdcy
      *
     C                   select
     C                   when      wkcono = 360
     C                   z-add     p1vwspuslb    vwpuslb
     C                   z-add     p1vwsvpuslb   vwvpuslb
     C                   z-add     p1vwsputslb   vwputslb
      *
     C                   when      wkcono = 960
     C                   z-add     p1vwtpuslb    vwpuslb
     C                   z-add     p1vwtvpuslb   vwvpuslb
     C                   z-add     p1vwtputslb   vwputslb
     C                   endsl
      *
      *
      * Retrieve type description from OMS Product Type file and
      * concatenate it with tupe code into a single description field.
      *
     C     vwistycd      chain     ome8rel1                           92
     C                   if        *in92 = *off
     C                   move(p)   vwistycd      wkcode
     C                   eval      vwistycdds = %trim(wkcode) + '-' +
     C                                          %trim(e8dctx)
     C                   endif
      *
      * Calc Converting %
      * ((produced start weight + VA produced start weight) / produced total start weight) * 100
      *
     C                   if        vwputslb <> 0
     C                   eval(h)   vwconvpc = ((vwpuslb + vwvpuslb) / vwputslb)
     C                                        * 100
     C                   endif
      *
     C                   write     vwrec
     C                   clear                   vwrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /eject
