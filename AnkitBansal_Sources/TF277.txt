      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foolds
      * PROGRAM:     TF277 - Yields: Weekly Yields--ByProduct Backup
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     02/09/09
      *
      * Function:    Build the ByProduct Backup file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 12/14/09  LeAnne Ramsey
      *           When Triumph started selling Item 96109-Choice White Grease, the
      *           Yield Reports screwed up because Item 96109 is now Exempt. So, being
      *           Exempt, it no longer gets processed into TFP014-Margin Detail. And,
      *           TFP014 was where we were getting some of our data for the Yield Reports.
      *           So, I have changed the logic in STEP3 to conditionally populate Produced
      *           Pounds.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 02/04/22  Danny Nguyen  (DO2484-WI479 STF Variance Reporting)
      *           DBFC on TFP076 file. Added the following fields:
      *             YWXPULB   - STF PRODUCED LBS
      *             YWXPUSLB  - STF PRODUCED START WEIGHT
      *             YWXSTDPLB - STF STANDARD PRODUCTION LBS
      *           DBFC on TFP077 file. Added the following field:
      *             YBXPUSLB   - STF PRODUCED START WEIGHT
      *             YBXSTDPLB6 - STF STD PROD LBS-6 DECIMALS
      *             YBXBPPCD   - STF SALES YIELD %
      *             YBXSYPC    - STF BYPRODUCT PRODUCT CODE
      *           Populated the new STF added fields where applicable. STF has their own
      *           Bill of Material.
      *           Added subroutine $STF077 to update STF data in TFP077 file.
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel1  if   e           k disk
      *    Item default
      *
      *
     Fpdiorel4  if   e           k disk
      *    Item bill of material  (LF selects Active/Produced records)
      *
      *
     Fppaorel1  if   e           k disk
      *    TF Margin adjustment group detail
      *
      *
     Ftfl010i   if   e           k disk    rename(prrec:prreci) prefix(p2)
      *    Weekly product revenue detail
      *
      *
     Ftfp076    uf a e           k disk
      *  Weekly yields
      *
      *
     Ftfl076b   if   e           k disk    rename(ywrec:ywrecb) prefix(p1)
      *  Weekly yields
      *
      *
     Ftfp077    uf a e           k disk
      *  Weekly yields--byproduct backup
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svbpprcd        s                   like(ybbpprcd)
     D wkprexfl        s                   like(p2prprexfl) inz('Y')
      *
      *
      * Workfields
      *
2484 D** wkcono          s              3  0 inz(360)
2484 D wkcono          s              3  0
     D wkslb           s                   like(ybsstdplb6)
     D wktlb           s                   like(ybsstdplb6)
2484 D wkxlb           s                   like(ybxstdplb6)
      *
      *
      * Parms
      *
     D xxprcd          s                   like(ywprcd)
     D xxprdcmp        s              3
     D xxcgcd          s                   like(ywcgcd)
     D xxmixgrp        s                   like(ywmixgrp)
     D xxsumlev        s                   like(ywsumlev)
     D xxistycd        s                   like(ywistycd)
     D xxisgrcd        s                   like(ywisgrcd)
     D xxisclcd        s                   like(ywisclcd)
     D xxtfclcd        s                   like(ywtfclcd)
     D xxtfcgcd        s                   like(ywtfcgcd)
     D xxitycd         s                   like(ywitycd)
     D xxcoownfl       s                   like(ywcoownfl)
     D xxglsub         s              3
     D xxedfl          s              1
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      *  Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
     D  ldwesyn               37     43  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * STEP 1: Process all CV/VA/NV Items for the Week in the Weekly Yield file.
      * STEP 2: Update all BP Items for the Week in the Weekly Yield file.
      * STEP 3: Write missing BP Items to the Weekly Yield file.
      *
     C                   exsr      $step1
     C                   exsr      $step2
     C                   exsr      $step3
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Step 1 - Process All CV/VA/NV Items
      *---------------------------------------------------------------
      *
      * Process all CV/VA/NV Items for the Week in the Weekly Yield file.
      * For each CV/VA/NV Item, retrieve all of its Component BP Items from
      * the BOM file and write records to the ByProduct Backup file.
      *
     C     $step1        begsr
      *
     C     ldwedt        setll     tfp076
     C                   dou       *in90 = *on                                  Do loop
     C     ldwedt        reade     tfp076                                 90
     C                   if        *in90 = *off and                             If not EOF
     C                             (ywtfcgcd = 'CV' or ywtfcgcd = 'VA'
     C                              or ywtfcgcd = 'NV')
     C                   exsr      $bom
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Bill of Materials logic
      *---------------------------------------------------------------
      *
     C     $bom          begsr
      *
      * Read each Active/Produced BOM record for this Item (Company = 360).
      * Process each record where Item/Component Item are not equal.
      *
2484 C                   eval      wkcono = 360
      *
     C     key01         setll     pdiorel4
      *
     C                   dou       *in91 = *on                                  Do produced
     C     key01         reade     pdiorel4                               91
     C                   if        *in91 = *off and ioc9nb <> iohgcd            If not itself
      *
      * We only want to coninue if this Component Item is a ByProduct Item.
      * So, retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      ioc9nb        xxprcd
     C                   parm      0             xxistycd
     C                   parm      0             xxisgrcd
     C                   parm      0             xxisclcd
     C                   parm      *blank        xxtfclcd
     C                   parm      *blank        xxtfcgcd
     C                   parm      *blank        xxglsub
     C                   parm      *blank        xxitycd
     C                   parm      *blank        xxcoownfl
     C                   parm      *blank        xxprdcmp
     C                   parm      *blank        xxedfl
      *
      * If the Item is a ByProduct, check to see if the Item is in our
      * Weekly Yield file for this Week...set a flag in the ByProduct Backup file.
      * We are doing this so we can find/process (in Step 3) ByProduct Items that
      * are not yet in our Weekly Yield file.
      *
     C                   if        xxtfcgcd = 'BP'                              If BP
     C     key02         chain     tfl076b                            92
     C                   if        *in92 = *off                                 If hit
     C                   move      yes           ybbpyldfl
     C                   else
     C                   move      no            ybbpyldfl
     C                   endif                                                  If hit
     C                   exsr      $wrt077
     C                   endif                                                  If BP
      *
     C                   endif                                                  If not itself
     C                   enddo                                                  Do produced
      *
2484 C                   exsr      $stf077
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Weekly Yield--ByProduct Backup record
      *---------------------------------------------------------------
      *
     C     $wrt077       begsr
      *
     C                   z-add     ywyr          ybyr
     C                   z-add     ywwk          ybwk
     C                   z-add     ywwedt        ybwedt
     C                   z-add     ywprcd        ybprcd
     C                   z-add     ywspuslb      ybspuslb
     C                   z-add     ywtpuslb      ybtpuslb
     C                   z-add     iobopr        ybsypc
     C                   z-add     ioc9nb        ybbpprcd
      *
      * Calc Standard Production Pounds into fields that are 6 decimal.
      *
     C                   eval      ybsstdplb6 = ybspuslb * (ybsypc / 100)
     C                   eval      ybtstdplb6 = ybtpuslb * (ybsypc / 100)
      *
      * Write a ByProduct Backup record for this Item/Component Item
      *
     C                   write     ybrec
     C                   clear                   ybrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
2484  * STF Bill of Materials logic - $STF077
  |   *---------------------------------------------------------------
  |   *
  |  C     $STF077       begsr
  |   *
  |   * Read each Active/Produced BOM record for this Item (Company = 440).
  |   * Process each record where Item/Component Item are not equal.
  |   *
  |  C                   eval      wkcono = 440
  |   *
  |  C     key01         setll     pdiorel4
  |   *
  |  C                   dou       *in91 = *on                                  Do produced
  |  C     key01         reade     pdiorel4                               91
  |  C                   if        *in91 = *off and ioc9nb <> iohgcd            If not itself
  |   *
  |   * We only want to coninue if this Component Item is a ByProduct Item.
  |   * So, retrieve TF Classification and Item Structure stuff
  |   *
  |  C                   call      'TF813'
  |  C                   parm      ioc9nb        xxprcd
  |  C                   parm      0             xxistycd
  |  C                   parm      0             xxisgrcd
  |  C                   parm      0             xxisclcd
  |  C                   parm      *blank        xxtfclcd
  |  C                   parm      *blank        xxtfcgcd
  |  C                   parm      *blank        xxglsub
  |  C                   parm      *blank        xxitycd
  |  C                   parm      *blank        xxcoownfl
  |  C                   parm      *blank        xxprdcmp
  |  C                   parm      *blank        xxedfl
  |   *
  |   * If the Item is a ByProduct, check to see if the Item is in our
  |   * Weekly Yield file for this Week...set a flag in the ByProduct Backup file.
  |   * We are doing this so we can find/process (in Step 3) ByProduct Items that
  |   * are not yet in our Weekly Yield file.
  |   *
  |  C                   if        xxtfcgcd = 'BP'                              If BP
  |  C     key02         chain     tfl076b                            92
  |  C                   if        *in92 = *off                                 If hit
  |  C                   move      yes           ybbpyldfl
  |  C                   else
  |  C                   move      no            ybbpyldfl
  |  C                   endif                                                  If hit
  |   *
  |  C***                exsr      $wrt077
  |  C     key06         chain     tfp077
  |  C                   if        %found(tfp077)
  |  C                   z-add     iobopr        ybxsypc                        STF Sls Yield %
  |  C                   z-add     ioc9nb        ybxbppcd                       STF Byproduct
  |  C                   z-add     ywxpuslb      ybxpuslb                       STF Prod Start Wgt
  |  C                   eval      ybxstdplb6 = ybxpuslb * (ybxsypc / 100)      STF STD Prod Lbs
  |   *
  |  C                   update    ybrec
  |   *
  |  C                   else
  |   *
  |   ** Per Barb G., we should not ever fall through here but still create TFP077 here.
  |  C                   z-add     ywyr          ybyr
  |  C                   z-add     ywwk          ybwk
  |  C                   z-add     ywwedt        ybwedt
  |  C                   z-add     ywprcd        ybprcd
  |  C                   z-add     ioc9nb        ybbpprcd
  |  C                   z-add     *zero         ybsypc
  |  C                   z-add     iobopr        ybxsypc
  |  C                   z-add     *zero         ybspuslb
  |  C                   z-add     *zero         ybsstdplb6
  |  C                   z-add     *zero         ybtpuslb
  |  C                   z-add     *zero         ybtstdplb6
  |  C                   z-add     ywxpuslb      ybxpuslb
  |   *
  |   * Calc STF Standard Production Pounds into fields that are 6 decimal.
  |   *
  |  C                   eval      ybxstdplb6 = ybxpuslb * (ybxsypc / 100)
  |   *
  |   * Write a ByProduct Backup record for this Item/Component Item
  |   *
  |  C                   write     ybrec
  |   *
  |  C                   endif                                                  Found in tfp077
  |   *
  |  C                   endif                                                  If BP
  |   *
  |  C                   endif                                                  If not itself
  |  C                   enddo                                                  Do produced
  |   *
2484 C                   endsr
      /eject
      *------------------------------------------------------------------------------------------
      * Step 2 - Update all existing BP Items in the Weekly file with Standard Production Pounds
      *------------------------------------------------------------------------------------------
      *
      * Process all BP Items for the Week in the Weekly Yield file.
      * For each BP Item:
      *   1) read all ByProduct Backup records created in Step 1 accumulating
      *      the Standard Production Pounds for this ByProduct Item
      *   2) calc/populate the Standard Production Pounds in the Weekly Yield record
      *      for this ByProduct Item
      *   3) update the Weekly Yield record for this ByProduct Item
      *
     C     $step2        begsr
      *
     C     ldwedt        setll     tfp076
     C                   dou       *in90 = *on                                  Do BP
     C     ldwedt        reade     tfp076                                 90
     C                   if        *in90 = *off and ywtfcgcd = 'BP'             If not EOF
      *
     C                   exsr      $backup
     C                   exsr      $calc
     C                   update    ywrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do BP
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process the ByProduct Backup file written in Step 1
      *---------------------------------------------------------------
      *
     C     $backup       begsr
      *
     C                   z-add     0             wkslb
     C                   z-add     0             wktlb
2484 C                   z-add     0             wkxlb
      *
      * Accumulate Standard Production Pounds for this Week/ByProduct Item
      * from the ByProduct Backup file.
      *
     C     key03         setll     tfp077
      *
     C                   dou       *in91 = *on                                  Do backup
     C     key03         reade     tfp077                                 91
     C                   if        *in91 = *off                                 If not eof
     C                   add       ybsstdplb6    wkslb
     C                   add       ybtstdplb6    wktlb
2484 C                   add       ybxstdplb6    wkxlb
     C                   endif                                                  If not itself
     C                   enddo                                                  Do backup
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------------
      * Step 3 - Write any missing BP Items to the Weekly Yield file
      *-------------------------------------------------------------------------------------------
      *
      * Process all records in the BackUp file (written in Step 1) that
      * do not have a Weekly Yield record for the ByProduct Item.
      * Accumulate values from the BackUp file at the ByProduct Item level and
      * write a Weekly Yield record for th ByProduct Item.
      *
     C     $step3        begsr
      *
     C                   z-add     0             wkslb
     C                   z-add     0             wktlb
2484 C                   z-add     0             wkxlb
     C                   clear                   ywrec
      *
     C     ldwedt        setll     tfp077
      *
     C                   dou       *in91 = *on                                  Do missing
     C     ldwedt        reade     tfp077                                 91
     C                   if        *in91 = *off and ybbpyldfl = no and          If not eof
2484  * DO2484-Included YBXSTDPLB6 - STF STD PROD LBS-6 DECIMALS.
2484 C**                           (ybsstdplb6 <> 0 or ybtstdplb6 <> 0)
2484 C                             (ybsstdplb6 <> 0 or ybtstdplb6 <> 0 or
2484 C                             ybxstdplb6 <> 0)
      *
      * Break logic
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     ybbpprcd      svbpprcd
      *
     C                   when      ybbpprcd <> svbpprcd
     C                   exsr      $wrt076
     C                   z-add     ybbpprcd      svbpprcd
     C                   endsl
      *
      * Detail processing
     C                   add       ybsstdplb6    wkslb
     C                   add       ybtstdplb6    wktlb
2484 C                   add       ybxstdplb6    wkxlb
     C                   endif                                                  If not eof
     C                   enddo                                                  Do missing
      *
      * Last record
     C                   if        first = no
     C                   exsr      $wrt076
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Weekly Yield record for missing ByProduct Items
      *---------------------------------------------------------------
      *
     C     $wrt076       begsr
      *
     C                   z-add     ldyr          ywyr
     C                   z-add     ldwk          ywwk
     C                   z-add     ldwedt        ywwedt
      *
     C                   z-add     svbpprcd      ywprcd
      *
      * Retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      ywprcd        xxprcd
     C     ywistycd      parm      0             xxistycd
     C     ywisgrcd      parm      0             xxisgrcd
     C     ywisclcd      parm      0             xxisclcd
     C     ywtfclcd      parm      *blank        xxtfclcd
     C     ywtfcgcd      parm      *blank        xxtfcgcd
     C                   parm      *blank        xxglsub
     C     ywitycd       parm      *blank        xxitycd
     C     ywcoownfl     parm      *blank        xxcoownfl
     C                   parm      *blank        xxprdcmp
     C                   parm      *blank        xxedfl
      *
      * Retrieve a Meat Cost Group Code
      *
     C     key04         chain     ppaorel1                           92
     C                   if        *in92 = *off
     C                   move      aohfaa        ywcgcd
     C                   move      aoi1t1        ywmixgrp
     C                   endif
      *
      * Retrieve the Summary level
      *
     C                   call      'RO801'
     C                   parm      ywcgcd        xxcgcd
     C                   parm      ywtfclcd      xxtfclcd
     C                   parm      ywistycd      xxistycd
     C                   parm      ywisgrcd      xxisgrcd
     C                   parm      ywisclcd      xxisclcd
     C                   parm      ywmixgrp      xxmixgrp
     C     ywsumlev      parm      *blank        xxsumlev
      *
      *
      * Retrieve Product Description.
      *
     C     ywprcd        chain     ombyrel1                           92
     C                   if        *in92 = *off
     C                   eval      ywprds = byavna
     C                   endif
      *
      * When Choice White Grease (Item 96109) went Exempt, our ByProduct logic
      * went amiss because Exempt Items don't get into the TFP014-Margin Detail
      * file...where we go to pull Production Pounds for our Finished Goods.
      * So, if this is a Finished Good Item, check the Weekly Revenue Detail
      * file to see if the Item is 'Exempt' for the Week being processed.
      * If Exempt, plop the Produced Pounds from TFP010 into this record.
      *
     C                   if        ywitycd = 'FG '
     C     key05         chain     tfl010i                            92
     C                   if        *in92 = *off
     C                   z-add     p2prspulb     ywspulb
     C                   z-add     p2prtpulb     ywtpulb
2484 C                   z-add     p2prxpulb     ywxpulb                        STF Produced Lbs
     C                   endif
     C                   endif
      *
      * Populate Standard Production Pounds fields
      *
     C                   exsr      $calc
      *
      * Write a record
     C                   write     ywrec
     C                   clear                   ywrec
      *
     C                   z-add     0             wkslb
     C                   z-add     0             wktlb
2484 C                   z-add     0             wkxlb
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------
      * Calc/Populate the Standard Production Pounds fields in the Weekly Yield record
      *---------------------------------------------------------------------------------
      *
     C     $calc         begsr
      *
      * For BP/BP1/200/850/853 items only we multiply by 2 to get these "boneless"
      *     pounds back to a "bone-in" weight
      * for all other Items
      *     just use the accumulated pounds and move into the 2-decimal fields
      *
     C                   if        ywtfcgcd = 'BP' and ywtfclcd = 'BP1'
     C                             and ywistycd = 200 and ywisgrcd = 850
     C                             and ywisclcd = 853
     C                   eval(h)   ywsstdplb = wkslb * 2
     C                   eval(h)   ywtstdplb = wktlb * 2
2484 C                   eval(h)   ywxstdplb = wkxlb * 2                        STF Std Productn Lbs
     C                   else
     C                   z-add(h)  wkslb         ywsstdplb
     C                   z-add(h)  wktlb         ywtstdplb
2484 C                   z-add(h)  wkxlb         ywxstdplb                      STF Std Productn Lbs
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkcono
     C                   kfld                    ywprcd
      *
     C     key02         klist
     C                   kfld                    ldwedt
     C                   kfld                    ioc9nb
      *
     C     key03         klist
     C                   kfld                    ldwedt
     C                   kfld                    ywprcd
      *
     C     key04         klist
     C                   kfld                    ywtfclcd
     C                   kfld                    ywistycd
     C                   kfld                    ywisgrcd
     C                   kfld                    ywisclcd
      *
     C     key05         klist
     C                   kfld                    ldwedt
     C                   kfld                    wkprexfl
     C                   kfld                    ywprcd
      *
2484 C     key06         klist
  |  C                   kfld                    ldwedt
  |  C                   kfld                    ioc9nb                         Byproduct Code
2484 C                   kfld                    ywprcd                         Product Code
      *
     C                   endsr
      /eject
