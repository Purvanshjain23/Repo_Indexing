// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWFEE1R
// ?Date: 14.08.2025 Time: 02:56:18
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Initialize detail screen (existing record)

// DTL.HPS Automation (Y/N) = DB1.HPS Automation (Y/N)
DTL.HPS_Automation_Y_N = DB1.HPS_Automation_Y_N;

CASE;

// IF DB1.HPS Automation (Y/N) is Not Found
IF DB1.HPS_Automation_Y_N = *BLANK;

// DTL.HPS Automation Y/N Usr = CND.BLANK
DTL.HPS_Automation_Y_N_Usr = *BLANK;

// IF DB1.HPS Automation (Y/N) is No
IF DB1.HPS_Automation_Y_N = 'N';

// DTL.HPS Automation Y/N Usr = CND.N
DTL.HPS_Automation_Y_N_Usr = 'N';

// IF DB1.HPS Automation (Y/N) is Yes
IF DB1.HPS_Automation_Y_N = 'Y';

// DTL.HPS Automation Y/N Usr = CND.Y
DTL.HPS_Automation_Y_N_Usr = 'Y';

ENDIF;

//?S16226 DN 03/02/20-Set Live Repayment.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Live Repayment = DB1.Live Repayment
DTL.Live_Repayment = DB1.Live_Repayment;

CASE;

// IF DB1.Live Repayment is Not Found
IF DB1.Live_Repayment = *BLANK;

// DTL.Live Repayment USR = CND.Blank
DTL.Live_Repayment_USR = *BLANK;

// IF DB1.Live Repayment is No
IF DB1.Live_Repayment = 'N';

// DTL.Live Repayment USR = CND.No
DTL.Live_Repayment_USR = 'N';

// IF DB1.Live Repayment is Yes
IF DB1.Live_Repayment = 'Y';

// DTL.Live Repayment USR = CND.Yes
DTL.Live_Repayment_USR = 'Y';

ENDIF;

ENDIF;

//?USER: Validate detail screen relations

CASE;

// IF DTL.HPS Automation Y/N Usr is BLANK
IF DTL.HPS_Automation_Y_N_Usr = *BLANK;

// DTL.HPS Automation (Y/N) = CND.Not Found
DTL.HPS_Automation_Y_N = *BLANK;

// IF DTL.HPS Automation Y/N Usr is N
IF DTL.HPS_Automation_Y_N_Usr = 'N';

// DTL.HPS Automation (Y/N) = CND.No
DTL.HPS_Automation_Y_N = 'N';

// IF DTL.HPS Automation Y/N Usr is Y
IF DTL.HPS_Automation_Y_N_Usr = 'Y';

// DTL.HPS Automation (Y/N) = CND.Yes
DTL.HPS_Automation_Y_N = 'Y';

ENDIF;

//?S16226 DN 03/02/20-Set Live Repayment.
CASE;

// IF DTL.Live Repayment USR is Blank
IF DTL.Live_Repayment_USR = *BLANK;

// DTL.Live Repayment = CND.Not Found
DTL.Live_Repayment = *BLANK;

//?S16226 DN 03/02/20-Set Live Repayment.
// IF DTL.Live Repayment USR is No
IF DTL.Live_Repayment_USR = 'N';

// DTL.Live Repayment = CND.No
DTL.Live_Repayment = 'N';

//?S16226 DN 03/02/20-Set Live Repayment.
// IF DTL.Live Repayment USR is Yes
IF DTL.Live_Repayment_USR = 'Y';

// DTL.Live Repayment = CND.Yes
DTL.Live_Repayment = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Producer EXT      CR) TYPE(CRTOBJ) FILE(PLAOREP)           AB1256357;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.Web_User_ID);
PARAMETER(DTL.Web_Payment_Pswd);
PARAMETER(DTL.Web_Delivery_Eval_Pswd);
PARAMETER(DTL.HPS_Automation_Y_N);
PARAMETER(DTL.Live_Repayment);
PARAMETER(DTL.Web_Unused_Pswd_3);
PARAMETER(DTL.Web_Unused_Pswd_4);
PARAMETER(DTL.Web_Unused_Pswd_5);
PARAMETER(DTL.Email_Address_1);
PARAMETER(DTL.Email_Address_2);
PARAMETER(DTL.Email_Address_3);
PARAMETER(DTL.Email_Address_4);
PARAMETER(DTL.Email_Address_5);
PARAMETER(DTL.Alt_Producer_Payee);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Producer EXT      CH) TYPE(CHGOBJ) FILE(PLAOREP)           AB1256358;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.Web_User_ID);
PARAMETER(DTL.Web_Payment_Pswd);
PARAMETER(DTL.Web_Delivery_Eval_Pswd);
PARAMETER(DTL.HPS_Automation_Y_N);
PARAMETER(DTL.Live_Repayment);
PARAMETER(DTL.Web_Unused_Pswd_3);
PARAMETER(DTL.Web_Unused_Pswd_4);
PARAMETER(DTL.Web_Unused_Pswd_5);
PARAMETER(DTL.Email_Address_1);
PARAMETER(DTL.Email_Address_2);
PARAMETER(DTL.Email_Address_3);
PARAMETER(DTL.Email_Address_4);
PARAMETER(DTL.Email_Address_5);
PARAMETER(DTL.Alt_Producer_Payee);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


