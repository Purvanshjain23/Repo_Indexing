     H/TITLE WW PFS Balance Fallout DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 04/02/19  Time  : 10:46:36
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPULJDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW PFS Balance Fallout DF Display file
      *
     FPUBBCPL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : PFS Balance Fallout Code  Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDJYREL2IF  E           K        DISK
      * RTV : Company Defaults Internal Active Records
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUBBCPL0UF  E           K        DISK
      * UPD : PFS Balance Fallout Code  Update index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    #L3         3  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 014  5 0A
     E                    W0END   7 014  5 0A
     E                    W0NAM   7 014 10
      * Long constants
     E                    @CN#    1  12  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@BBCPEJ
      * PFS Balance Fallout Code  Update index
      * Renamed input format fields
     I              BBY1NX                          WAY1NX
     I              BBP7DT                          WAP7DT
     I              BBY2NX                          WAY2NX
     I              BBI2SC                          WAI2SC
     I              BBI3SC                          WAI3SC
     I              BBVJNA                          WAVJNA
     I              BBUWSX                          WAUWSX
     I              BBUXSX                          WAUXSX
     I              BBV3SX                          WAV3SX
     I              BBAHNY                          WAAHNY
     I              BBAINY                          WAAINY
     I              BBAJNY                          WAAJNY
     I              BBAKNY                          WAAKNY
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      * Outward parameters
     IPARC        DS                             18
      * KEY : PFS Balance Fallout Code  Retrieval index
      * I : MAP PFS Company Number
     I                                        1   30PAY1NX
      * I : MAP PFS Production Date
     I                                        4  110PAP7DT
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPUBB1    E DSPUBBCPL0
      * UPD : PFS Balance Fallout Code  Update index
      * Renamed input format fields
     I              BBY1NX                          WAY1NX
     I              BBP7DT                          WAP7DT
     I              BBY2NX                          WAY2NX
     I              BBI2SC                          WAI2SC
     I              BBI3SC                          WAI3SC
     I              BBVJNA                          WAVJNA
     I              BBUWSX                          WAUWSX
     I              BBUXSX                          WAUXSX
     I              BBV3SX                          WAV3SX
     I              BBAHNY                          WAAHNY
     I              BBAINY                          WAAINY
     I              BBAJNY                          WAAJNY
     I              BBAKNY                          WAAKNY
      *
     IYARDCS      DS                            106
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(PRBAL-    1 256 #S0001
     I              'FALLO) JOBD(*USRPRF)'
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Company must be a Plant'
      * @Numeric 3,0
     I                                    P   1   20ZA0001
      * Message data for 'Company must be entered'
      * USR Company Number
     I                                        1   3 ZA0002
      * Message data for 'Value Required (numeric)'
      * @Numeric 15.2
     I                                    P   1   82ZA0003
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0004
      * @Numeric 15.2
     I                                    P  81  882ZA0005
      * Message data for 'PFS Bal Fallout NF f/Opt'
      * Function Key Pressed USR
     I                                        1   3 ZA0006
      * PFS Company Number
     I                                    P   4   50ZA0007
      * PFS Production Date
     I                                    P   6  100ZA0008
      * Message data for 'Company must be entered'
      * USR Company Number
     I                                        1   3 ZA0009
      * Message data for 'Value Required (numeric)'
      * @Numeric 15.2
     I                                    P   1   82ZA0010
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0011
      * @Numeric 15.2
     I                                    P  81  882ZA0012
      * Message data for 'Company must be entered'
      * USR Company Number
     I                                        1   3 ZA0013
      * Message data for 'Value Required (numeric)'
      * @Numeric 15.2
     I                                    P   1   82ZA0014
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0015
      * @Numeric 15.2
     I                                    P  81  882ZA0016
      * Message data for 'PFS Bal Fallout NF f/Opt'
      * Function Key Pressed USR
     I                                        1   3 ZA0017
      * PFS Company Number
     I                                    P   4   50ZA0018
      * PFS Production Date
     I                                    P   6  100ZA0019
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0020
      * @Numeric 15.2
     I                                    P  81  882ZA0021
      * Message data for 'Generic Message 80'
      * Generic Message 80 USR
     I                                        1  80 ZA0022
      * Message data for 'Company must be entered'
      * USR Company Number
     I                                        1   3 ZA0023
      * Message data for 'Company must be entered'
      * USR Company Number
     I                                        1   3 ZA0024
      * Message data for 'Value Required (numeric)'
      * @Numeric 15.2
     I                                    P   1   82ZA0025
      * Message data for 'Generic Message 80'
      * Generic Message 80 USR
     I                                        1  80 ZA0026
      * Message data for 'Value Required (alpha)'
      * Text 1 USR
     I                                        1  25 ZA0027
      * Message data for 'Value Required (alpha)'
      * Text 1 USR
     I                                        1  25 ZA0028
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0029
      * Application Code
     I                                       11  16 ZA0030
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0031
      * Application Code
     I                                       11  16 ZA0032
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * Populate Company Number & Prod Date.
      * CASE: LCL.First Time Flag is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       YL0001           First Time Flag
     C                     Z-ADDYL0002    #2Y1NX           PFS Company Num
      * LCL.Production Date USR D8# = JOB.*Job date
     C           ##JDT     IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           ##JDT     ADD  19000000  YL0003           Production Date
     C                     END
     C                     Z-ADDYL0003    #2P7DT           PFS Production
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADDYL0002    #2Y1NX           PFS Company Num
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL#CI4SC    YL0004           PFS Balance Fla
     C                     MOVEL#CI5SC    YL0005           PFS Fallout Fla
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BBY1NX           PFS Company Num
     C                     KFLD           BBP7DT           PFS Production
     C                     KFLD           BBY2NX           PFS Item Code
      * Setup key
     C                     Z-ADD#2Y1NX    BBY1NX
     C                     Z-ADD#2P7DT    BBP7DT
     C                     Z-ADD#2Y2NX    BBY2NX
     C           KPOS      SETLL@BBCPEK
     C                     READ @BBCPEK                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2VJNA    WZVJNA
     C                     MOVEL#2VJNA    WZVJNA           PFS Notes
     C           *LIKE     DEFN #2Y1NX    WZY1NX
     C                     MOVEL#2Y1NX    WZY1NX           PFS Company Num
     C           *LIKE     DEFN #2P7DT    WZP7DT
     C                     MOVEL#2P7DT    WZP7DT           PFS Production
     C           *LIKE     DEFN #2Y2NX    WZY2NX
     C                     MOVEL#2Y2NX    WZY2NX           PFS Item Code
      * Translate search mask for text field
     C                     MOVEL'QSYST'   WQB10X 10
     C                     MOVE 'RNTBL'   WQB10X
     C           *LIKE     DEFN #2VJNA    WQVJNA           PFS Notes
     C                     CALL 'QDCXLATE'
      * Length
     C                     PARM 50        WQA5N   50
     C                     PARM #2VJNA    WQVJNA           PFS Notes
     C                     PARM           WQB10X           QSYSTRNTBL
     C                     PARM 'QSYS'    WQC10X 10
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BBCPEK                  90*
     C  N82                READ @BBCPEK                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  3
     C                     MOVEAWKIND0    *IN,36
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2VJNA    IFNE *BLANK                     PFS Notes
      * Scan for search string
     C                     CALL 'QCLSCAN'
     C                     PARM           BBVJNA           PFS Notes
      * Length
     C                     PARM 50        WQA3N   30
      * Start
     C                     PARM 1         WQB3N   30
      * Mask
     C                     PARM           WQVJNA
      * Length
     C                     PARM 50        WQC3N   30
      * Translate
     C                     PARM '1'       WQD1    1
      * Trim
     C                     PARM '1'       WQE1    1
      * Wild
     C                     PARM '?'       WQF1    1
      * Result
     C                     PARM           WQG3N   30
     C           WQG3N     CABLT1         BB020
     C                     END
     C           #2Y1NX    IFEQ *ZERO                      PFS Company Num
     C           #2P7DT    IFNE *ZERO                      PFS Production
     C           BBP7DT    CABGT#2P7DT    BB020            PFS Production
     C                     END
     C                     END
     C           #2Y1NX    IFEQ *ZERO                      PFS Company Num
     C           #2P7DT    OREQ *ZERO                      PFS Production
     C           #2Y2NX    IFNE *ZERO                      PFS Item Code
     C           BBY2NX    CABNE#2Y2NX    BB020            PFS Item Code
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
     C                     MOVELBBI2SC    #RI4SC           PFS Balance Fla
     C                     MOVELBBI3SC    #RI5SC           PFS Fallout Fla
     C                     MOVELBBVJNA    #RVKNA           PFS Notes USR
      * Rtv Desc Line 1&2      RT - Company Item  * 
     C                     EXSR SARVGN
      * Restrict by Company if User Not Allow for Multi Company.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.Allow Multi-Company is Not Yes
      *   |- c2    : CTL.PFS Company Number NE RCD.PFS Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0006    IFEQ *BLANK                     *IF
     C           YL0006    OREQ 'N'
     C           #2Y1NX    IFNE #1Y1NX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Select By Balance Flag.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CTL.PFS Balance Flag USR is Not Entered
      *   |- c2    : CTL.PFS Balance Flag USR EQ RCD.PFS Balance Flag USR
      *   '-
     C           #CI4SC    IFEQ *BLANK                     *IF
     C           #CI4SC    OREQ #RI4SC                     *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Select By Fallout Flag.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CTL.PFS Fallout Flag USR is Not Entered
      *   |- c2    : CTL.PFS Fallout Flag USR EQ RCD.PFS Fallout Flag USR
      *   '-
     C           #CI5SC    IFEQ *BLANK                     *IF
     C           #CI5SC    OREQ #RI5SC                     *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BBCPEK                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate PFS Production Date
      * External date
     C                     Z-ADDV2P7DT    XDEXDT
      * Check date
     C                     EXSR XDC84
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDI8DT    #2P7DT
      * Validate PFS Balance Flag USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CI4SC'  IFEQ YPMTFD
      * PFS Balance Flag USR
     C                     MOVEL#CI4SC    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFI4SC
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZFI4SC
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZFI4SC
     C                     ENDSL
     C                     EXFMTZEI4SC
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFI4SC    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZFI4SC    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CI4SC
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate PFS Fallout Flag USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CI5SC'  IFEQ YPMTFD
      * PFS Fallout Flag USR
     C                     MOVEL#CI5SC    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFI5SC
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZFI5SC
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZFI5SC
     C                     ENDSL
     C                     EXFMTZEI5SC
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFI5SC    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZFI5SC    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CI5SC
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZY1NX    CASNE#2Y1NX    FBRQRL
     C           WZP7DT    CASNE#2P7DT    FBRQRL
     C           WZY2NX    CASNE#2Y2NX    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * Reload Subfile When User Control Positioners Changes.
      * CASE: CTL.PFS Balance Flag USR NE LCL.PFS Balance Flag USR
     C           #CI4SC    IFNE YL0004                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: CTL.PFS Fallout Flag USR NE LCL.PFS Fallout Flag USR
     C           #CI5SC    IFNE YL0005                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
      * Validate Company.
      * CASE: CTL.PFS Company Number is Entered
     C           #2Y1NX    IFNE *ZERO                      *IF
      * Rtv Plant Co/Org      RT - Company Defaults Internal  * 
     C                     EXSR SBRVGN
      * CASE: LCL.Plant Company Sts is Plant Company
     C           YL0007    IFEQ 'P'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#2Y1NX    ZA0001           PFS Company Num
      * Send message 'Company must be a Plant'
     C                     MOVEL'USR3706' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * F4=Prompt.
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
      * Select by Company Item.
      * CASE: PGM.*Cursor field <IS> CTL.PFS Item Code
     C           W0CFL     IFEQ '#2Y2NX'                   *IF
      * SEL Actv Finished Good SR - Company Item  * 
     C                     CALL 'PDNHSRR'              90  SEL Actv Finish
     C                     PARM *BLANK    W0RTN   7
     C           #2Y1NX    PARM #2Y1NX    WQ0001  30       Company Number
     C           #2Y2NX    PARM #2Y2NX    WQ0002  70       Item Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDNHSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993133*
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * F5=Refresh.
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F7=Copy From/To Date.
      * CASE: CTL.*CMD key is CF07
     C           *IN07     IFEQ '1'                        *IF
      * Validations.
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#2Y1NX    YL0008           USR Company Num
      * Setup message data for message
      * Convert USR Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           YL0008    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVELYL0008    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0002           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0002           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company must be entered'
     C                     MOVEL'USR2384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Not Entered
     C           #2P7DT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0003
      * Send message 'Value Required (numeric)'
     C                     MOVEL'USR1962' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Entered
     C           #2P7DT    IFNE *ZERO                      *IF
      * Format Date.
      * CASE: *OTHERWISE
     C                     Z-ADD#2P7DT    YL0003           Production Date
      * LCL.Post to G/L Date = LCL.Production Date USR D8#
     C           YL0003    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0009
     C                     ELSE
     C           YL0003    SUB  19000000  YL0009           Post to G/L Dat
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2Y1NX    WL0001           Company Number
     C                     Z-ADDYL0009    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0010    P      Production Day
      * Don't Allow Add if Production Day Sts Not Yes.
      * CASE: LCL.Production Day Status is yes
     C           YL0010    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD1         ZQ      50
     C           @CN,001   CAT  @CN,002:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  @CN,003:ZQYL0011    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0011    ZA0004           Generic Message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0005
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Ensure Copy From Co/Date Already Exist.
      * CASE: *OTHERWISE
      * Val Co/ProdDte Exist   RT - PFS Balance Fallout Code  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2Y1NX    WL0004           PFS Company Num
     C                     Z-ADD#2P7DT    WL0005           PFS Production
     C                     EXSR SDRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL'F7'      ZA0006           Function Key Pr
     C                     Z-ADD#2Y1NX    ZA0007           PFS Company Num
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0008
      * Send message 'PFS Bal Fallout NF f/Opt'
     C                     MOVEL'USR5116' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993132*
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Pmt Copy From/To Date  PV - PFS Balance Fallout Code  * 
     C                     CALL 'PULLPVR'              90  Pmt Copy Fr/To
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2Y1NX    WQ0003  30       PFS Company Num
     C                     PARM #2P7DT    WQ0004  80       PFS Production
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PULLPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F9=Add.
      * CASE: CTL.*CMD key is *Add
     C           *IN09     IFEQ '1'                        *IF
      * Validations.
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#2Y1NX    YL0008           USR Company Num
      * Setup message data for message
      * Convert USR Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           YL0008    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVELYL0008    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0009           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0009           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company must be entered'
     C                     MOVEL'USR2384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Not Entered
     C           #2P7DT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0010
      * Send message 'Value Required (numeric)'
     C                     MOVEL'USR1962' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Entered
     C           #2P7DT    IFNE *ZERO                      *IF
      * Format Date.
      * CASE: *OTHERWISE
     C                     Z-ADD#2P7DT    YL0003           Production Date
      * LCL.Post to G/L Date = LCL.Production Date USR D8#
     C           YL0003    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0009
     C                     ELSE
     C           YL0003    SUB  19000000  YL0009           Post to G/L Dat
     C                     END
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2Y1NX    WL0001           Company Number
     C                     Z-ADDYL0009    WL0002           Post to G/L Dat
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0010    P      Production Day
      * Don't Allow Add if Production Day Sts Not Yes.
      * CASE: LCL.Production Day Status is yes
     C           YL0010    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD1         ZQ      50
     C           @CN,001   CAT  @CN,002:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  @CN,003:ZQYL0011    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0011    ZA0011           Generic Message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0012
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Edt PFS Balance FalloutET - PFS Balance Fallout Code  * 
     C                     CLEARPARC
     C                     Z-ADD#2Y1NX    PAY1NX           PFS Company Num
     C                     Z-ADD#2P7DT    PAP7DT           PFS Production
      *
     C                     CALL 'PULKEFR'              90  Edt PFS Balance
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: PFS Balanc
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PULKEFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F10=Send to Carlisle.
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * Get System Date 2     US - /UT User Source  * 
      * Get System Date - CCYYMMDD
     C                     MOVE *DATE     YL0012
      * Validations.
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#2Y1NX    YL0008           USR Company Num
      * Setup message data for message
      * Convert USR Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           YL0008    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVELYL0008    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0013           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0013           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company must be entered'
     C                     MOVEL'USR2384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Not Entered
     C           #2P7DT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0014
      * Send message 'Value Required (numeric)'
     C                     MOVEL'USR1962' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: F10 Only Allow for Current Production Date
      *  - c1 AND c2
      *   |- c1    : CTL.PFS Production Date is Entered
      *   |- c2    : CTL.PFS Production Date NE LCL.System Date Nbr USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2P7DT    IFNE *ZERO                      *IF
     C           #2P7DT    IFNE YL0012                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * LCL.Production Date USR D8# = LCL.System Date Nbr USR
     C                     Z-ADDYL0012    YL0003           Production Date
      * LCL.@Date - ATR = LCL.Production Date USR D8#
     C           YL0003    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0013
     C                     ELSE
     C           YL0003    SUB  19000000  YL0013           @Date - ATR
     C                     END
      *
     C                     Z-ADD*ZERO     WN0001  40       YYYY numeric US
     C                     Z-ADD*ZERO     WN0002  20       MM   numeric US
     C                     Z-ADD*ZERO     WN0003  20       DD   numeric US
     C                     MOVEL*BLANK    WN0004  4        YYYY alpha   US
     C                     MOVEL*BLANK    WN0005  2        MM   alpha   US
     C                     MOVEL*BLANK    WN0006  2        DD   alpha   US
      *
      * Convert DTE to mm/dd/yyyy
      * Break apart date.
      * PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
     C           YL0013    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    WN0001
      * PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
     C           YL0013    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    WN0002
      * PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
     C           YL0013    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     WN0003
      * Convert to alpha.
     C                     MOVEL*BLANK    WN0004           YYYY alpha   US
     C                     MOVELWN0001    WN0004           YYYY alpha   US
     C                     MOVELWN0002    WN0005           MM   alpha   US
     C                     MOVELWN0003    WN0006           DD   alpha   US
      * Put back together.
     C                     Z-ADD0         ZQ      50
     C           WN0005    CAT  '/':ZQ    YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  WN0006:ZQ YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  '/':ZQ    YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  WN0004:ZQ YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD*ZERO     ZQ      50
     C           @CN,004   CAT  @CN,005:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  YL0014:ZQ YL0011    P      Generic Message
     C                     Z-ADD*ZERO     ZQ      50
     C           YL0011    CAT  '.':ZQ    YL0011    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0011    ZA0015           Generic Message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0016
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Ensure Co/Date Already Exist.
      * CASE: *OTHERWISE
      * Val Co/ProdDte Exist   RT - PFS Balance Fallout Code  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2Y1NX    WL0004           PFS Company Num
     C                     Z-ADD#2P7DT    WL0005           PFS Production
     C                     EXSR SDRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL'F10'     ZA0017           Function Key Pr
     C                     Z-ADD#2Y1NX    ZA0018           PFS Company Num
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0019
      * Send message 'PFS Bal Fallout NF f/Opt'
     C                     MOVEL'USR5116' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993132*
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Are There Any Records with Fallout Flag=Y? If Not, Send Error Msg
      * CASE: *OTHERWISE
      * Rtv Any Balance Flag=Y RT - PFS Balance Fallout Code  * 
     C                     EXSR SERVGN
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0015    IFEQ 'N'                        *IF
     C                     MOVEL#2Y1NX    YL0016           Company Number
     C                     Z-ADD#2P7DT    YL0003           Production Date
      * LCL.@Date - ATR = LCL.Production Date USR D8#
     C           YL0003    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0013
     C                     ELSE
     C           YL0003    SUB  19000000  YL0013           @Date - ATR
     C                     END
      *
     C                     Z-ADD*ZERO     WN0007  40       YYYY numeric US
     C                     Z-ADD*ZERO     WN0008  20       MM   numeric US
     C                     Z-ADD*ZERO     WN0009  20       DD   numeric US
     C                     MOVEL*BLANK    WN0010  4        YYYY alpha   US
     C                     MOVEL*BLANK    WN0011  2        MM   alpha   US
     C                     MOVEL*BLANK    WN0012  2        DD   alpha   US
      *
      * Convert DTE to mm/dd/yyyy
      * Break apart date.
      * PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
     C           YL0013    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    WN0007
      * PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
     C           YL0013    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    WN0008
      * PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
     C           YL0013    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     WN0009
      * Convert to alpha.
     C                     MOVEL*BLANK    WN0010           YYYY alpha   US
     C                     MOVELWN0007    WN0010           YYYY alpha   US
     C                     MOVELWN0008    WN0011           MM   alpha   US
     C                     MOVELWN0009    WN0012           DD   alpha   US
      * Put back together.
     C                     Z-ADD0         ZQ      50
     C           WN0011    CAT  '/':ZQ    YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  WN0012:ZQ YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  '/':ZQ    YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD0         ZQ      50
     C           YL0014    CAT  WN0010:ZQ YL0014    P      Date mm/dd/yyyy
     C                     Z-ADD1         ZQ      50
     C           @CN,006   CAT  @CN,007:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  YL0016:ZQ YL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  @CN,008:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  YL0014:ZQ YL0011    P      Generic Message
     C                     Z-ADD*ZERO     ZQ      50
     C           YL0011    CAT  '.':ZQ    YL0011    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0011    ZA0020           Generic Message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0021
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Build PFS Balance Fallout Hdr/Dtl File & Send to Carlisle.
      * Crt Bal Fallout Hdr/DtlXF - PFS Balance Fallout Dtl  * 
     C                     CALL 'PULRXFR'              90  Crt Bal Fallout
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2Y1NX    WQ0005  30       PFS Company Num
     C                     PARM 'N'       WQ0006  1        Called from Job
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PULRXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * Send Info Msg.
      * CASE: *OTHERWISE
     C                     MOVEL#2Y1NX    YL0016           Company Number
     C                     Z-ADD0         ZQ      50
     C           @CN,009   CAT  @CN,010:ZQYL0011    P      Generic Message
     C                     Z-ADD1         ZQ      50
     C           YL0011    CAT  YL0016:ZQ YL0011    P      Generic Message
     C                     Z-ADD*ZERO     ZQ      50
     C           YL0011    CAT  '.':ZQ    YL0011    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0011    ZA0022           Generic Message
      * Send message 'Generic Message 80'
     C                     MOVEL'USR4976' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * F11=Send to Data Whse.
      * CASE: CTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * Exc QSH & Send to DW   CL - PFS Balance Fallout Code  * 
     C                     CALL 'PUL8UPC'              90  Exc QSH & Send
     C                     PARM 'N'       WQ0007  1        Called from Job
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUL8UPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F14=Dsp Bal/Fallout Batches.
      * CASE: CTL.*CMD key is CF14
     C           *IN14     IFEQ '1'                        *IF
      * Validations.
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#2Y1NX    YL0008           USR Company Num
      * Setup message data for message
      * Convert USR Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           YL0008    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVELYL0008    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0023           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0023           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company must be entered'
     C                     MOVEL'USR2384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Dsp Bal Fall Batch Hdr DF - PFS Balance Fallout Hdr  * 
     C                     CALL 'PULODFR'              90  Dsp Bal Fall Ba
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2Y1NX    WQ0008  30       PFS Company Num
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PULODFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F21=Email List.
      * CASE: CTL.*CMD key is CF21
     C           *IN21     IFEQ '1'                        *IF
      * Validations.
      * CASE: CTL.PFS Company Number is Not Entered
     C           #2Y1NX    IFEQ *ZERO                      *IF
     C                     Z-ADD#2Y1NX    YL0008           USR Company Num
      * Setup message data for message
      * Convert USR Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           YL0008    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVELYL0008    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0024           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0024           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company must be entered'
     C                     MOVEL'USR2384' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: CTL.PFS Production Date is Not Entered
     C           #2P7DT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV82T
     C                     Z-ADDXDEXDT    ZA0025
      * Send message 'Value Required (numeric)'
     C                     MOVEL'USR1962' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Export Data to Excel via SEQUEL 'PRBALFALLO'.
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     MOVEL*BLANK    YL0017           Email Address
      * Pmt Enter Email Addr  PV - /UT Report Prompts  * 
     C                     CALL 'POWGPVR'              90  Pmt Enter Email
     C                     PARM *BLANK    W0RTN   7
     C           YL0017    PARM YL0017    WQ0009 50        Email Address
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POWGPVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: LCL.Email Address is Entered
     C           YL0017    IFNE *BLANK                     *IF
     C                     MOVEL#2Y1NX    YL0016           Company Number
     C                     MOVEL#2P7DT    YL0018           Date (Char-8) U
      * SBMJOB: Prt PFS Balance FalloutCL - PFS Balance Fallout Code  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PULNUPC '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELYL0016    #SSTR     P      Company Number
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 3         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELYL0018    #SSTR     P      Date (Char-8) U
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 8         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELYL0017    #SSTR     P      Email Address
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 50        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PULNUPC 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PULNUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * Setup message data for message
     C                     MOVEL@CN,011   ZA0026           Generic Message
      * Send message 'Generic Message 80'
     C                     MOVEL'USR4976' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Process subfile (pass 2)
     C                     EXSR EAPRSF
      * If error during 2nd pass exit:
     C           *IN99     CABEQ'1'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,36
     C                     SETOF                     98    *
      * Validate PFS Balance Flag USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#RI4SC'  IFEQ YPMTFD
     C           ##RR      ANDEQYPMRRN
      * PFS Balance Flag USR
     C                     MOVEL#RI4SC    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHI4SC
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZHI4SC
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZHI4SC
     C                     ENDSL
      * Window width
     C                     Z-ADD8         YWWDWD
      * Window depth
     C                     Z-ADD2         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD7         YWWDRW
     C                     ADD  YZSFDL    YWWDRW
      * Window start column
     C                     Z-ADD58        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG01RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG01CL
     C                     EXFMTZGI4SC
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHI4SC    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZHI4SC    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #RI4SC
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate PFS Fallout Flag USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#RI5SC'  IFEQ YPMTFD
     C           ##RR      ANDEQYPMRRN
      * PFS Fallout Flag USR
     C                     MOVEL#RI5SC    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHI5SC
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZHI5SC
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZHI5SC
     C                     ENDSL
      * Window width
     C                     Z-ADD8         YWWDWD
      * Window depth
     C                     Z-ADD2         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD7         YWWDRW
     C                     ADD  YZSFDL    YWWDRW
      * Window start column
     C                     Z-ADD67        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG02RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG02CL
     C                     EXFMTZGI5SC
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHI5SC    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZHI5SC    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #RI5SC
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * PFS Balance Flag USR required
     C           #RI4SC    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9836  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * PFS Fallout Flag USR required
     C           #RI5SC    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9837  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * SFLNXTCHG
     C                     SETON                     84
      * USER: Process subfile record (Pre-confirm)
      * Balance Status Must Be Entered.
      * CASE: RCD.PFS Balance Flag USR is Not Entered
     C           #RI4SC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RI4SC    ZA0027           PFS Balance Fla
      * Send message 'Value Required (alpha)'
     C                     MOVEL'USR2808' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
      * Fallout Status Must Be Entered.
      * CASE: RCD.PFS Fallout Flag USR is Not Entered
     C           #RI5SC    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#RI5SC    ZA0028           PFS Fallout Fla
      * Send message 'Value Required (alpha)'
     C                     MOVEL'USR2808' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
     C           *IN81     IFEQ '1'
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END                             WOD *92
     C                     END                             FI *81
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,36
     C                     SETOF                     98
      * USER: Process subfile record (Post-confirm)
      * Update Only When Balance Sts, Fallout Sts & Notes Changes.
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : RCD.PFS Balance Flag USR NE RCD.PFS Balance Flag
      *   |- c2    : RCD.PFS Fallout Flag USR NE RCD.PFS Fallout Flag
      *   |- c3    : RCD.PFS Notes USR NE RCD.PFS Notes
      *   '-
     C           #RI4SC    IFNE #1I2SC                     *IF
     C           #RI5SC    ORNE #1I3SC                     *OR
     C           #RVKNA    ORNE #1VJNA                     *OR
      * Chg PFS Bal Fallout CdeCH - PFS Balance Fallout Code  * 
     C                     EXSR SFCHRC
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C                     SETON                     84    SFLNXTCHG
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     GOTO EBEXIT
     C                     ELSE
      * SFLRCD valid
     C                     SETOF                     84    SFLNXTCHG
     C                     END                             FI *IN98
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           YL0006    IFEQ *BLANK                     *IF
     C           YL0006    OREQ 'N'
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BBCPEK fields to subfile
      *================================================================
     C                     MOVELBBI2SC    #1I2SC           PFS Balance Fla
     C                     MOVELBBI3SC    #1I3SC           PFS Fallout Fla
     C                     MOVELBBVJNA    #1VJNA           PFS Notes
     C                     MOVELBBUWSX    #1UWSX           PFS Record Stat
     C                     Z-ADDBBUXSX    #1UXSX           PFS Process Sta
     C                     MOVELBBV3SX    #1V3SX           PFS Error Reaso
     C                     Z-ADDBBAHNY    #1AHNY           PFS Create Date
     C                     Z-ADDBBAINY    #1AINY           PFS Create Time
     C                     Z-ADDBBAJNY    #1AJNY           PFS Change Date
     C                     Z-ADDBBAKNY    #1AKNY           PFS Change time
     C                     Z-ADDBBY1NX    #1Y1NX           PFS Company Num
     C                     Z-ADDBBP7DT    #1P7DT           PFS Production
      * Clear external version also
     C                     Z-ADD*ZERO     V1P7DT
     C                     Z-ADDBBY2NX    #1Y2NX           PFS Item Code
     C                     MOVEL*BLANK    #RAVNA           Description Lin
     C                     MOVEL*BLANK    #RI4SC           PFS Balance Fla
     C                     MOVEL*BLANK    #RI5SC           PFS Fallout Fla
     C                     MOVEL*BLANK    #RVKNA           PFS Notes USR
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #2VJNA           PFS Notes
     C                     Z-ADD*ZERO     #2Y1NX           PFS Company Num
     C                     Z-ADD*ZERO     #2P7DT           PFS Production
      * Clear external version also
     C                     Z-ADD*ZERO     V2P7DT
     C                     Z-ADD*ZERO     #2Y2NX           PFS Item Code
     C                     MOVEL*BLANK    #CAVNA           Description Lin
     C                     MOVEL*BLANK    #CI4SC           PFS Balance Fla
     C                     MOVEL*BLANK    #CI5SC           PFS Fallout Fla
     C                     MOVEL*BLANK    #CVKNA           PFS Notes USR
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#1P7DT    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    V1P7DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert PFS Production Date to display format
      * Convert date
     C                     Z-ADD#2P7DT    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    V2P7DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Desc Line 1&2      RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    #RAVNA           Description Lin
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1Y1NX    BZAIC3           Company Number
     C                     Z-ADD#1Y2NX    BZHGCD           Item Code
      * Establish starting position
     C           KRSSA     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    #RAVNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Plant Co/Org      RT - Company Defaults Internal  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           JYAIC3           Company Number
      * Setup key
     C                     Z-ADD#2Y1NX    JYAIC3           Company Number
      * Establish starting position
     C           KRSSB     CHAIN@JYRECE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2025' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0007           Plant Company S
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJYYISX    YL0007           Plant Company S
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0001    AFAIC3           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSC     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Production Day
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAFWAST    WL0003           Production Day
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Val Co/ProdDte Exist   RT - PFS Balance Fallout Code  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BBY1NX    WQSD01           PFS Company Num
     C           *LIKE     DEFN BBP7DT    WQSD02           PFS Production
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           PFS Company Num
     C                     KFLD           WQSD02           PFS Production
      * Setup key
     C                     Z-ADDWL0004    WQSD01           PFS Company Num
     C                     Z-ADDWL0005    WQSD02           PFS Production
      * Establish starting position
     C           KRSSD     SETLL@BBCPEK                    *
     C           KRSSD     READE@BBCPEK                  90*
      * Data record not found
     C   90                MOVEL'USR5110' W0RTN   7
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Any Balance Flag=Y RT - PFS Balance Fallout Code  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       YL0015           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN BBY1NX    WQSE01           PFS Company Num
     C           *LIKE     DEFN BBP7DT    WQSE02           PFS Production
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           PFS Company Num
     C                     KFLD           WQSE02           PFS Production
      * Setup key
     C                     Z-ADD#2Y1NX    WQSE01           PFS Company Num
     C                     Z-ADD#2P7DT    WQSE02           PFS Production
      * Establish starting position
     C           KRSSE     SETLL@BBCPEK                    *
     C           KRSSE     READE@BBCPEK                  90*
      * Data record not found
     C   90                MOVEL'USR5110' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.PFS Balance Flag is Yes
     C           BBI2SC    IFEQ 'Y'                        *IF
     C                     MOVEL'Y'       YL0015           Record Found US
     C                     GOTO SEEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSE     READE@BBCPEK                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Chg PFS Bal Fallout CdeCH - PFS Balance Fallout Code  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0013  80       PFS Create Date
     C                     Z-ADD*ZERO     WN0014  60       PFS Create Time
     C                     Z-ADD*ZERO     WN0015  80       PFS Change Date
     C                     Z-ADD*ZERO     WN0016  60       PFS Change time
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @BBCPEJ
     C                     Z-ADD#1Y1NX    WAY1NX           PFS Company Num
     C                     Z-ADD#1P7DT    WAP7DT           PFS Production
     C                     Z-ADD#1Y2NX    WAY2NX           PFS Item Code
      *
     C           KLCHSF    KLIST
     C                     KFLD           WAY1NX           PFS Company Num
     C                     KFLD           WAP7DT           PFS Production
     C                     KFLD           WAY2NX           PFS Item Code
     C           KLCHSF    CHAIN@BBCPEJ              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PUBBCPL0'MDACP
     C                     MOVEL'@BBCPEJ' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPUBB1    YARDCS
      * Move non-key fields to @BBCPEJ
     C                     MOVEL#RI4SC    WAI2SC    P      PFS Balance Fla
     C                     MOVEL#RI5SC    WAI3SC    P      PFS Fallout Fla
     C                     MOVEL#RVKNA    WAVJNA    P      PFS Notes
     C                     MOVEL'C'       WAUWSX    P      PFS Record Stat
     C                     Z-ADD#1UXSX    WAUXSX           PFS Process Sta
     C                     MOVEL#1V3SX    WAV3SX    P      PFS Error Reaso
      *
      * Set PGM.*Record Data Changed flag
     C           QPUBB1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Change Stamp 2    IF
      * LCL.USR Internal D8# YYYYMMDD = JOB.*Job date
     C           ##JDT     IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0019
     C                     ELSE
     C           ##JDT     ADD  19000000  YL0019           USR Internal D8
     C                     END
     C                     Z-ADDYL0019    WAAJNY           PFS Change Date
     C                     Z-ADD##JTM     WAAKNY           PFS Change time
      * Set PGM.*Record Data Changed flag
     C           QPUBB1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BBCPEJ                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPUBBCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0017    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSG     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    YL0006           Allow Multi-Com
     C                     Z-ADDDRAIC3    YL0020           Company Number
     C                     MOVELDRBUVN    WN0018           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0006    DTAJVN           User Profile Na
     C                     MOVELWL0007    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSH     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0008           Company Number
     C                     MOVELDTAJCD    WL0009           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSI01           Application Cod
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSI01           Application Cod
     C                     MOVEL'P/S'     WQSI01           Application Cod
      * Establish starting position
     C           KRSSI     SETLL@DNRESF                    *
     C           KRSSI     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SJRVGN
     C                     END                             *FI
     C           KRSSI     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSJ01           Application Cod
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSJ01           Application Cod
      * Establish starting position
     C           KRSSJ     SETLL@DNRESF                    *
     C           KRSSJ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSJ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDC84     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDI8DT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDC84E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX01    XDI8DD           DD
     C                     Z-ADDXDEX02    XDI8MM           MM
     C           XDEY02    DIV  1000      XDI8CC           Y
     C                     Z-ADDXDEY02    XDI8YY            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX01    XDI8MM           MM
     C                     Z-ADDXDEX02    XDI8DD           DD
     C           XDEY02    DIV  1000      XDI8CC           Y
     C                     Z-ADDXDEY02    XDI8YY            YYY
     C                     ELSE
     C           XDEY01    DIV  1000      XDI8CC           Y
     C                     Z-ADDXDEY01    XDI8YY            YYY
     C                     Z-ADDXDEX03    XDI8MM           MM
     C                     Z-ADDXDEX04    XDI8DD           DD
     C                     END
     C                     END
     C           YPMTFD    CABNE*BLANK    XDC84E
     C           XDDTFM    IFEQ 'YMD'
      *................................................................
     C           XDEY01    IFGE 2200
     C           XDI8DT    ORNE *ZERO
     C           XDEY01    ANDLT1801
     C                     GOTO XDC84M
     C                     END
     C                     ELSE
      *................................................................
     C           XDEY02    IFGE 2200
     C           XDI8DT    ORNE *ZERO
     C           XDEY02    ANDLT1801
     C                     GOTO XDC84M
     C                     END
     C                     END
      *................................................................
      * Check months in range 1 to 12
     C           XDI8MM    CABLT1         XDC84M
     C           XDI8MM    CABGT12        XDC84M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDI8DD    CABLT1         XDC84M
     C           XDI8DD    CABGT@XD,XDI8MMXDC84M
      *................................................................
      * Special case: leap year
     C           XDI8MM    IFEQ 2
     C           XDI8YY    IFNE 900
     C           XDI8YY    ANDNE100
     C           XDI8YY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDI8DD    CABGT28        XDC84M
     C                     END
     C                     END
     C                     GOTO XDC84E
      *................................................................
      * Send error message
     C           XDC84M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDC84E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDV82T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX02           DD
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8YY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX02           MM
     C                     Z-ADDXDI8DD    XDEX03           DD
     C                     Z-ADDXDI8YY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDI8YY    XDEX02           YY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV82E    ENDSR
      /EJECT
     CSR         XDV84T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX01           DD
     C                     Z-ADDXDI8MM    XDEX02           MM
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX01           MM
     C                     Z-ADDXDI8DD    XDEX02           DD
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
      * YMD format
     C           1000      MULT XDI8CC    XDEY01           Y
     C                     ADD  XDI8YY    XDEY01            YYY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV84E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 01792
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  07        W0CSRR  50
     C           01792     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD7         ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDEQ058
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CI4SC'  YPMTFD           PFS Balance Fla
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDEQ067
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CI5SC'  YPMTFD           PFS Fallout Fla
     C                     END
      *
     C           ZHF4RW    IFEQ 007
     C           ZHCSCL    ANDEQ058
     C                     MOVEL'#RI4SC'  YPMTFD           PFS Balance Fla
     C                     END
      *
     C           ZHF4RW    IFEQ 007
     C           ZHCSCL    ANDEQ067
     C                     MOVEL'#RI5SC'  YPMTFD           PFS Fallout Fla
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAY1NX           PFS Company Num
     C                     Z-ADD*ZERO     WAP7DT           PFS Production
     C                     Z-ADD*ZERO     WAY2NX           PFS Item Code
     C                     Z-ADD*ZERO     WAUXSX           PFS Process Sta
     C                     Z-ADD*ZERO     WAAHNY           PFS Create Date
     C                     Z-ADD*ZERO     WAAINY           PFS Create Time
     C                     Z-ADD*ZERO     WAAJNY           PFS Change Date
     C                     Z-ADD*ZERO     WAAKNY           PFS Change time
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  80
      * Define local variables for subroutine SHRVGN.
     C                     MOVEL*BLANK    WL0006 10
     C                     MOVEL*BLANK    WL0007  6
     C                     Z-ADD*ZERO     WL0008  30
     C                     MOVEL*BLANK    WL0009  3
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field Production Date USR D8#
     C                     Z-ADD*ZERO     YL0003  80
      * Define local work field PFS Balance Flag USR
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field PFS Fallout Flag USR
     C                     MOVEL*BLANK    YL0005  1
      * Define null work field Description Line Two
     C                     MOVEL*BLANK    YN0001 30
      * Define local work field Allow Multi-Company
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Plant Company Sts
     C                     MOVEL*BLANK    YL0007  1
      * Define null work field Company Organization
     C                     MOVEL*BLANK    YN0002  1
      * Define local work field USR Company Number
     C                     Z-ADD*ZERO     YL0008  30
      * Define local work field Post to G/L Date
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0010  1
      * Define local work field Generic Message 80 USR
     C                     MOVEL*BLANK    YL0011 80
      * Define local work field System Date Nbr USR
     C                     Z-ADD*ZERO     YL0012  80
      * Define local work field @Date - ATR
     C                     Z-ADD*ZERO     YL0013  70
      * Define local work field Date mm/dd/yyyy USR
     C                     MOVEL*BLANK    YL0014 10
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0015  1
      * Define local work field Company Number Alpha
     C                     MOVEL*BLANK    YL0016  3
      * Define local work field Email Address
     C                     MOVEL*BLANK    YL0017 50
      * Define local work field Date (Char-8) USR
     C                     MOVEL*BLANK    YL0018  8
      * Define local work field USR Internal D8# YYYYMMDD
     C                     Z-ADD*ZERO     YL0019  80
      * Define null work field Warehouse Code
     C                     MOVEL*BLANK    YN0003  3
      * Define null work field Salesperson Code
     C                     MOVEL*BLANK    YN0004  3
      * Define null work field Default Printer
     C                     MOVEL*BLANK    YN0005 10
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0020  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0021  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD17        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0017 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0017           User Profile Na
      *
     C                     MOVEL*BLANK    WN0018 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SGRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,012                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0017    ZA0029           User Profile Na
     C                     MOVEL'P/S'     ZA0030           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0018    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0017    WL0006    P      User Profile Na
     C                     MOVEL'P/S'     WL0007    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0008    YL0002           Company Number
     C                     MOVELWL0009    YL0021    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0018    WL0006    P      User Profile Na
     C                     MOVEL'P/S'     WL0007    P      Application Cod
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0008    YL0002           Company Number
     C                     MOVELWL0009    YL0021    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0021    YN0003           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0017    ZA0031           User Profile Na
     C                     MOVEL'P/S'     ZA0032           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0020    IFNE 0                          *IF
     C                     Z-ADDYL0020    YL0002           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0021    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C                     PARM *BLANK    WQ0010  3        Warehouse Code
     C                     PARM YL0020    WQ0011  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SIRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       YL0001           First Time Flag
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01538015420155301561015940160301608
01794017980180901817018500185901864
** W0END
01540015510155901590015940160301657
01796018070181501846018500185901913
** W0NAM
#2Y1NX    V2P7DT    #2Y2NX    #CAVNA    #CI4SC    #CI5SC    #CVKNA
#1Y1NX    V1P7DT    #1Y2NX    #RAVNA    #RI4SC    #RI5SC    #RVKNA
** @CN
00001 Date not allowed. Not a
00002 production day in the
00003 Calendar file.
00004 F10 only allowed for curr
00005 ent Production date
00006 PFS Balance Codes missing
00007 for Plant
00008 for Production Date
00009 Balance Fallout codes sen
00010 t to Carlisle - Co
00011 Job submitted.
00012 Y2U0005
