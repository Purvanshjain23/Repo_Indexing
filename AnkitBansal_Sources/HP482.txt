      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP482
      * TITLE:       SPECIFY CLOSED HOG GROUP PERFORMANCE SELECTION
      * PROGRAMMER:  SHARON ZURN
      * CREATED:     07/29/94
      *
      * FUNCTION: USES A SPECIFY RECORD FORMAT TO ALLOW USER TO
      *           ENTER A BUSINESS OFFICE, FROM AND TO DATE,
      *           PRODUCTION PHASE, PRODUCTION TYPE, AND FARM SITE.
      *           SUBMITS HP482CL AND CARRIES OPTIONS
      *           SELECTED IN LDA.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU.
      *
      *           REQUIRED SELECTIONS:
      *                 BUSINESS OFFICE
      *                 FROM DATE
      *                 TO DATE
      *
      *           OPTIONAL SELECTIONS:
      *                 PRODUCTION PHASE
      *                 PRODUCTION TYPE
      *                 FARM SITE
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/07/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 02/14/01  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production types, we changed the edit for a farm.  The production type
      *           of a selected farm no longer has to "match" the production type that
      *           the user may have keyed on the screen.
      *
      * 07/22/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 03/31/04  LeAnne Fedor
      *           Changed logic to default dates from Last Accounting Period data area
      *           instead of Current Accounting Period data area.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD482    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
     FHSP002    IF   E           K DISK
      *    FUNCTION FILE             (KEY: FNFNCD)
      *
     FHSP010    IF   E           K DISK
      *    PRODUCTION TYPE           (KEY: PTPTCD)
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE      R   (KEY: PPPPCD)
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE                 (KEY: FSFSCD)
      *
     FHSP025    IF   E           K DISK
      *    GROUP TYPE                (KEY: GTGTCD)
      *
     FHSP031    IF   E           K DISK
      *    BREED STOCK               (KEY: BSBSCD)
      *
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *  CMD SUBMITS HP482CL CLOSED HOG GROUP SUMMARY
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *---------------------------------------------------------------
      *  PERFORMANCE RANKING OPTIONS RELATED TABLE OF CODES AND
      *  DESCRIPTIONS
      *---------------------------------------------------------------
      *
     D TABA            S              1    DIM(8) CTDATA PERRCD(1)
     D TABB            S             20    DIM(8) ALT(TABA) ASCEND
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     D LDA             DS
     D  LDFSBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDPTCD                22     26
     D  LDPPCD                27     31
     D  LDFSCD                32     36  0
     D  LDOPTN                37     37
      *
     D  LDFMDY                38     43  0
     D  LDTMDY                44     49  0
     D  LDCELL                50     51  0
     D  LDGTCD                52     52
     D  LDBSCD                53     57
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DALPER' which holds the last
      *  period that was closed in HPS.
      *---------------------------------------------------------------
     D                 DS
     D  DALPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D ALL             C                   CONST('A')
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP482K1
     C                   WRITE     HP482EC
     C                   EXFMT     HP482R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'
     C                   MOVEL     SCRN1         ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP482'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT THE INPUT ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VERIFY THAT A VALID FROM DATE IS ENTERED
      *
     C     DFFMDY        IFEQ      0                                            IF NO FROM
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFFMDY        PFRM8
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDFYMD
     C                   Z-ADD     DFFMDY        LDFMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO FROM
      *
      * VERIFY THAT A VALID TO DATE IS ENTERED
      *
     C     DFTMDY        IFEQ      0                                            IF NO TO
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFTMDY        PFRM8
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDTYMD
     C                   Z-ADD     DFTMDY        LDTMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO TO
      *
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN THE "FROM" DATE
      *IF DATES HAVE BEEN ENTERED
      *
     C     *IN32         IFEQ      *OFF                                         IF EARLIER
     C     *IN33         ANDEQ     *OFF
     C     LDTYMD        ANDLT     LDFYMD
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
      * IF PRODUCTION TYPE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C                   MOVE      *BLANK        DFPTDS
     C     DFPTCD        IFNE      *BLANK                                       IF TYPE
     C     DFPTCD        CHAIN     HSP010                             90
     C     *IN90         IFEQ      *OFF                                         IF GOOD TYPE
     C                   MOVEL     PTPTDS        DFPTDS
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TYPE
     C                   ENDIF                                                  IF TYPE
      *
      * ERROR IF "BGF" WAS SELECTED AS PRODUCTION PHASE
      *
     C     DFPPCD        IFEQ      'BGF  '                                      IF BGF
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00392'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BGF
      *
      * IF PRODUCTION PHASE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C                   MOVE      *BLANK        DFPPDS
     C     DFPPCD        IFNE      *BLANK                                       IF PHASE
     C     DFPPCD        CHAIN     HSP011                             91
     C     *IN91         IFEQ      *OFF                                         IF PHASE OK
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF PHASE OK
     C                   ENDIF                                                  IF PHASE
      *
      * CELL CANNOT BE NEGATIVE
      *
     C     DFCELL        IFLT      0
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *
      * IF FARM SITE KEYED, VALIDATE AND GET FARM SITE NAME
      *    CHECK FOR MATCHES BETWEEN:
      *          FARM B.O. AND SCREEN B.O.
      *
     C                   MOVE      *BLANK        DFFSNM
     C     DFFSCD        IFNE      0                                            IF FARM
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * CHECK FOR BUSINESS OFFICE MATCH
      *
     C     DFFSBO        IFNE      *BLANK                                       IF BUS OFF
     C     FSFSBO        ANDNE     DFFSBO
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFFSBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BUS OFF
      *
      *
      * CHECK FOR CELL MATCH
      *
     C     DFCELL        IFGT      0                                            IF CELL
     C     FSCELL        ANDNE     DFCELL
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00705'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
      * CHECK FOR FARM PRODUCTION PHASE OF "BGF"
      *
     C     FSPPCD        IFEQ      'BGF  '                                      IF BGF FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00393'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSPPCD        MGW(6)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BGF FARM
      *
     C                   ENDIF                                                  IF BAD FARM
     C                   ENDIF                                                  IF FARM
      *
      *
      * IF GROUP TYPE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C                   MOVE      *BLANK        DFGTDS
     C     DFGTCD        IFNE      *BLANK                                       IF TYPE
     C     DFGTCD        CHAIN     HSP025                             90
     C     *IN90         IFEQ      *OFF                                         IF GOOD TYPE
     C                   MOVEL     GTGTDS        DFGTDS
     C                   ELSE
     C                   SETON                                        49
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00137'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFGTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TYPE
     C                   ENDIF                                                  IF TYPE
      *
      *
      * IF BREED STOCK KEYED, CHECK TO SEE IF IT IS VALID
      *
     C                   MOVE      *BLANK        DFBSDS
     C     DFBSCD        IFNE      *BLANK                                       IF BREED
     C     DFBSCD        CHAIN     HSP031                             90
     C     *IN90         IFEQ      *OFF                                         IF OK BREED
     C                   MOVEL     BSBSDS        DFBSDS
     C                   ELSE
     C                   SETON                                        70
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00251'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFBSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OK BREED
     C                   ENDIF                                                  IF BREED
      *
      *
      * VALIDATE THAT A RANKING OPTION IS KEYED AND IS VALID
      *
     C                   MOVE      *BLANK        DFOPDS
     C     DFOPTN        IFEQ      *BLANK                                       IF NO OPT
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * VALIDATE PERFORMANCE REPORT RANKING OPTION SELECTED
      *
     C     DFOPTN        IFNE      'A'                                           IF BAD OPT
     C     DFOPTN        ANDNE     'B'
     C     DFOPTN        ANDNE     'C'
     C     DFOPTN        ANDNE     'D'
     C     DFOPTN        ANDNE     'F'
     C     DFOPTN        ANDNE     'L'
     C     DFOPTN        ANDNE     'M'
     C     DFOPTN        ANDNE     'N'
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00171'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOPTN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
     C     DFOPTN        LOOKUP    TABA          TABB                     42
     C     *IN42         IFEQ      *ON
     C                   MOVEL     TABB          DFOPDS
     C                   ENDIF
     C                   ENDIF                                                  IF BAD OPT
     C                   ENDIF                                                  IF NO OPT
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *    IS NOT REQUIRED
      *
     C     $CHKBO        BEGSR
      *
      * SET THE 'VALIDATE B.O.' FLAG DEPENDING ON WHETHER THE
      * USER LEFT B.O. BLANK TO GET ALL BUSINESS OFFICES OR ENTERED
      * A SPECIFIC OFFICE.
      *
     C     DFFSBO        IFEQ      *BLANK
     C                   MOVEL     ALL           INBOFL
     C                   ELSE
     C                   MOVEL     YES           INBOFL
     C                   ENDIF
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     DFFSBO        LDFSBO
     C                   MOVEL     DFPPCD        LDPPCD
     C                   MOVEL     DFPTCD        LDPTCD
     C                   Z-ADD     DFCELL        LDCELL
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   MOVEL     DFGTCD        LDGTCD
     C                   MOVEL     DFBSCD        LDBSCD
     C                   MOVEL     DFOPTN        LDOPTN
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(48)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
      * BUSINESS OFFICE
      *
     C                   SELECT
     C     FLD           WHENEQ    'DFFSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFFSBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'DFPTCD'
     C                   MOVE      *BLANK        XXPTCD
     C                   MOVE      *BLANK        XXPTDS
     C                   CALL      'HP504'
     C                   PARM                    XXPTCD
     C                   PARM                    XXPTDS
     C                   SETON                                        52
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFPTCD
     C                   MOVEL     XXPTDS        DFPTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        53
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * FARM SITE
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   MOVEL     DFFSBO        XXFSBO
     C                   MOVE      *BLANK        WKFSCD
     C                   MOVE      *BLANK        XXFSNM
     C                   MOVEL     DFPPCD        XXPPCD
     C                   MOVEL     DFPTCD        XXPTCD
     C                   CALL      'HP551'
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXFSNM
     C                   PARM                    XXPPCD
     C                   PARM                    XXPTCD
     C                   SETON                                        54
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF                                                  IF SELECTED
      *
      * GROUP TYPE
      *
     C     FLD           WHENEQ    'DFGTCD'
     C                   MOVE      *BLANK        XXGTCD
     C                   MOVE      *BLANK        XXGTDS
     C                   CALL      'HP531'
     C                   PARM                    XXGTCD
     C                   PARM                    XXGTDS
     C                   SETON                                        59
     C     XXGTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXGTCD        DFGTCD
     C                   MOVEL     XXGTDS        DFGTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * BREED STOCK
      *
     C     FLD           WHENEQ    'DFBSCD'
     C                   MOVE      *BLANK        XXBSCD
     C                   MOVE      *BLANK        XXBSDS
     C                   CALL      'HP516'
     C                   PARM                    XXBSCD
     C                   PARM                    XXBSDS
     C                   SETON                                        50
     C     XXBSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBSCD        DFBSCD
     C                   MOVEL     XXBSDS        DFBSDS
     C                   ENDIF                                                  IF SELECTED
      *
      * PERFORMANCE REPORT RANKING OPTION
      *
     C     FLD           WHENEQ    'DFOPTN'
     C                   MOVE      *BLANK        XXOPTN
     C                   MOVE      *BLANK        XXOPDS
     C                   CALL      'HP577'
     C                   PARM                    XXOPTN
     C                   PARM                    XXOPDS
     C                   SETON                                        58
     C     XXOPTN        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXOPTN        DFOPTN
     C                   MOVEL     XXOPDS        DFOPDS
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *----------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * $TOMDY   FLIP DATE FROM YYMMDD TO MMDDYY
      *---------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *     NONE
      *
      * PARM LISTS
      *     NONE
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDFSBO
     C                   Z-ADD     0             LDFYMD
     C                   Z-ADD     0             LDTYMD
     C                   MOVE      *BLANK        LDPPCD
     C                   MOVE      *BLANK        LDPTCD
     C                   Z-ADD     0             LDCELL
     C                   Z-ADD     0             LDFSCD
     C                   MOVE      *BLANK        LDGTCD
     C                   MOVE      *BLANK        LDBSCD
     C                   MOVE      *BLANK        LDOPTN
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    DFFSCD        WKFSCD
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXCELL            2
     C                   MOVE      *BLANK        XXFSCD            5
     C     *LIKE         DEFINE    DFFSNM        XXFSNM
     C     *LIKE         DEFINE    DFFSBO        XXFSBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    DFPPCD        XXPPCD
     C     *LIKE         DEFINE    DFPPDS        XXPPDS
     C     *LIKE         DEFINE    DFPTCD        XXPTCD
     C     *LIKE         DEFINE    DFPTDS        XXPTDS
     C     *LIKE         DEFINE    DFBSCD        XXBSCD
     C     *LIKE         DEFINE    DFBSDS        XXBSDS
     C     *LIKE         DEFINE    DFOPTN        XXOPTN
     C     *LIKE         DEFINE    DFOPDS        XXOPDS
     C     *LIKE         DEFINE    DFGTCD        XXGTCD
     C     *LIKE         DEFINE    DFGTDS        XXGTDS
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO CONTROL RCD FMT FIELDS
      *
     C                   MOVEL     OUBOBO        DFFSBO
     C                   MOVEL     OUBODS        DFBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * DEFAULT DATES ONTO SCREEN FROM LAST CLOSED ACCOUNTING PERIOD.
      *
     C     *DTAARA       DEFINE                  DALPER
     C                   IN        dalper
      *
      *
     C     *iso          test(d)                 dabpdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      dabpdt        wkcymdiso
     C     *mdy          move      wkcymdiso     dffmdy
     C                   endif                                                  If OK date
      *
     C     *iso          test(d)                 daepdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      daepdt        wkcymdiso
     C     *mdy          move      wkcymdiso     dftmdy
     C                   endif                                                  If OK date
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP482CL)) JOB(CLSGRP) JOBQ(__________)
**  PERFORMANCE RANKING OPTIONS TABLE
AAVERAGE DAILY GAIN
BBACKFAT INCHES
CCARCASS YIELD
DDEATH LOSS PERCENT
FFEED CONVERSION
LLEAN PERCENT
MMARGIN PER CWT
NNO RANKING
