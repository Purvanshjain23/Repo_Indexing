      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP696 - Period Change in Inventory Report
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/28/03
      *
      *
      * DO NOT TRY to total down/across with an adding machine on this report. YOU WILL NOT
      * match the numbers because:
      *    1) we accumulate values with decimals and print with no decimals
      *    2) we only print 5 of the 9 columns for BGF groups
      *
      *
      * FUNCTION: This program prints a line for each group showing the beginning/ending
      *           inventory dollars and the change in inventory.
      *
      *           This report is:
      *            1) generated twice during the EOP function
      *                  a) all groups
      *                  b) groups whose production phase <> the farm's phase
      *            2) available on-demand from the menu
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/08/01  LeAnne Fedor
      *           Added totals for each level break--including report totals.
      *           Changed logic to print dollar values as whole numbers without
      *           cents.
      *
      * 08/02/01  LeAnne Fedor
      *           1) Change the sort sequence to be by farm site instead of cost center.
      *           2) Skip to a new page on Phase break.
      *           3) For BGF farms, only print 5 of the columns---the 4 'transfer'
      *              columns and the 'calculated cost of sale columns'.
      *
      * 09/19/01  LeAnne Fedor
      *           We now accumulate all dollar amounts for all columns with their decimals--
      *           although we print them as half-adjusted whole numbers. SO, if the user
      *           takes an adding machine and adds the columns down, the result WILL NOT
      *           match the totals on the report.
      *
      * 01/29/03  LeAnne Fedor
      *           Removed all hardcoded special logic for SHAUL.
      *
      * 07/08/03  LeAnne Fedor
      *           Rewrote program. It is now a 'group' report using the new
      *           Costed Movement file instead of the old farm workfiles.
      *
      *           It can now also be generated on-demand as well as during EOP processing.
      *
      *           We also renamed it from 'Closing Period Farm Summary Report' to
      *           'Period Change in Inventory Report.
      *
      *           We also removed business office and report totals because we only print
      *           SOME columns for BGF. Only printing some columns for BGF makes it
      *           impossible to use an adding machine and get to the same totals you
      *           see on the report.
      *
      *           We still only print the following columns for BGF:
      *                transfer in same phase
      *                transfer in diff phase
      *                transfer out same phase
      *                transfer out diff phase
      *                cost of sales (used to be called calculated cost of sales)
      *
      *           But, now we only print the farm total line in the BGF section...no
      *           BGF groups are printed.
      *
      * 08/12/03  LeAnne Fedor
      *           Users want the 'report total' back...we removed it last month. So, it's back.
      *
      *           Also, the user's wanted to be able to see ONLY groups whose Production Phase
      *           is not the same as the Production Phase of the farm the group is on.
      *           So, this report will not print twice in the EOP function...once with all the
      *           groups and a second time with the mismatched phase groups only.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 05/20/11  LeAnne Ramsey (E1557)
      *           Recompile only. Added Yard Dead to HSJ085E.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      *****************************************************************************************
      * FILE SPECIFICATIONS
      *****************************************************************************************
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group (records selected/keyed in open query)
      *
      *
     Fhsl038e   if   e           k disk
      *    Feed ticket detail
      *
      *
     Fhsl048b   if   e           k disk
      *    Expense ticket
      *
      *
     Fhsp055    if   e           k disk
      *    Period costs
      *
      *
     Fhsl064b   if   e           k disk
      *    Check detail
      *
      *
     Fhsl065c   if   e           k disk
      *    Check adjustments
      *
      *
     Fhsj085e   if   e           k disk
      *    Sales detail + sales header
      *
      *
     Fhsl118b   if   e           k disk
      *    Costed movements
      *
      *
     Fhsl118c   if   e           k disk    rename(cmrec:cmrecc)
      *    Costed movements
      *
      *
     Fqprint    o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *  Print arrays for totals
      *
     D arbin           s             13  2 dim(3)
     D arein           s             13  2 dim(3)
     D arcin           s             13  2 dim(3)
      *
     D arisp           s             13  2 dim(3)
     D aridp           s             13  2 dim(3)
     D arosp           s             13  2 dim(3)
     D arodp           s             13  2 dim(3)
      *
     D arcoc           s             13  2 dim(3)
     D arcos           s             13  2 dim(3)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s            198    inz(*all'-')
     D first           s              1    inz('Y')
     D rtime           s              6  0
      *
      *
      * Control fields
      *
     D xxincd          s              1
     D procfl          s              1    inz('Y')
     d svppcd          s                   like(hgppcd)
     d svppds          s                   like(ppppds)
     d svfscd          s                   like(fsfscd)
      *
      *
      * Work fields
      *
     d wkalphfscd      s              5
     D wkam            s             13  2
     D length          s              2  0
     D start           s              2  0
      *
      *
     d wkdesc          s             35
     D wkbin           s             13  2
     d wkein           s                   like(wkbin)
     d wkcin           s                   like(wkbin)
      *
     d wkisp           s                   like(wkbin)
     d wkidp           s                   like(wkbin)
     d wkosp           s                   like(wkbin)
     d wkodp           s                   like(wkbin)
      *
     d wkcoc           s                   like(wkbin)
     d wkcos           s                   like(wkbin)
      *
      *
      *
      * Define print fields for the detail line
      *
     d d1fsnm          s             12
     d d1cjd           s                   like(fscjd)
     D d1bin           s             11  0
     d d1ein           s                   like(d1bin)
     d d1cin           s                   like(d1bin)
      *
     d d1isp           s                   like(d1bin)
     d d1idp           s                   like(d1bin)
     d d1osp           s                   like(d1bin)
     d d1odp           s                   like(d1bin)
      *
     d d1coc           s                   like(d1bin)
     d d1cos           s                   like(d1bin)
      *
      *
      * Define print fields for the total line
      *
     d t1fsnm          s             12
     d t1cjd           s                   like(fscjd)
     d t1desc          s             35
     D t1bin           s             11  0
     d t1ein           s                   like(t1bin)
     d t1cin           s                   like(t1bin)
      *
     d t1isp           s                   like(t1bin)
     d t1idp           s                   like(t1bin)
     d t1osp           s                   like(t1bin)
     d t1odp           s                   like(t1bin)
      *
     d t1coc           s                   like(t1bin)
     d t1cos           s                   like(t1bin)
      *
      *
      * Define print fields for the heading lines
      *
     d href            s              9
     d hrinds          s             50
     d hrfsbo          s                   like(ldfsbo)
     d hrptcd          s                   like(ldptcd)
     d hrppcd          s                   like(ldppcd)
     d hrgtcd          s              3
     d hrcrcd          s                   like(ldcrcd)
      *
      *
      * Array index
      *
     D x               s              1  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *----------------------------------------------------------------
      * LDA
      *----------------------------------------------------------------
     D                uds
     D  ldbpdt                 1     08  0
     D  ldepdt                 9     16  0
     D  ldacpe                17     18  0
     D  ldeffl                19     19
     D  ldacyr                20     23  0
     D  ldblank1              24     59
     D  ldbmdy                60     66  0
     D  ldemdy                70     76  0
      *
     D  ldblank2              80     80
     D  ldblank3              81     84  0
     D  ldblank4              85     86  0
      *
     D  ldfsbo                87     91
     D  ldptcd                92     96
     D  ldppcd                97    101
     D  ldcell               102    103  0
     D  ldcrcd               104    108
     D  ldfscd               109    113  0
     D  ldgtcd               114    114
      *
     D  ldbods               115    144
     D  ldptds               145    154
     D  ldppds               155    184
     D  ldfsnm               185    209
     D  ldgtds               210    224
     D  ldcrds               225    234
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read each group selected by the open query. If you are generating the
      * report from the menu option (ie: on-demand) instead of from the EOP
      * function, you will need to make additional checks for some of the user's
      * selections.
      *
593  C*    *loval        setll     hsp034
593  C     *start        setll     hsp034
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp034                                 90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      yes           procfl
      *
      * Make additional selections.
      *
     C                   exsr      $select
      *
      * If the group will be included on the report, continue processing:
      *
     C                   if        procfl = yes                                 If process
      *
      * Clear the workfields
      *
     C                   exsr      $clear
      *
      * Retreive the transfer dollars for the group/period
      *  1) Transfer In
      *  2) Transfer Out
      *
     C                   exsr      $trani
     C                   exsr      $trano
      *
      *
      * Retrieve 'Cost of Sales' and 'Adjusted Amount'. Add them together into
      * the column that will print as 'Cost of Sales'
      *
     C     key03         chain     hsp055                             92
     C                   if        *in92 = *off
     C     pcajam        add       pcsam         wkcos
     C                   endif
      *
      *
      * If this IS NOT a BGF group, retrieve/calculate:
      *  1) Beginning Inventory
      *  2) Calculated Operating Costs
      *  3) Ending Inventory
      *  4) Inventory
      *
     C                   if        hgppcd <> 'BGF  '                            If not BGF
     C                   exsr      $begin
     C                   exsr      $opcost
      *
     C                   eval      wkein = wkbin + wkisp + wkidp + wkcoc
     C                                   - wkosp - wkodp - wkcos
      *
     C     wkein         sub       wkbin         wkcin
     C                   endif                                                  If not BGF
      *
      *
      * If you have zero in all columns for this group,
      *     do not process the group
      * othwise
      *     continue
     C
     C                   if        (wkbin <> 0 or                               If something
     C                              wkein <> 0 or
     C                              wkcin <> 0 or
     C                              wkisp <> 0 or
     C                              wkidp <> 0 or
     C                              wkosp <> 0 or
     C                              wkodp <> 0 or
     C                              wkcoc <> 0 or
     C                              wkcos <> 0)
      *
      * Break logic
     C                   exsr      $break
      *
      * Accumulate the values into the total arrays.
      *
     C                   add       wkbin         arbin
     C                   add       wkein         arein
     C                   add       wkcin         arcin
      *
     C                   add       wkisp         arisp
     C                   add       wkidp         aridp
     C                   add       wkosp         arosp
     C                   add       wkodp         arodp
      *
     C                   add       wkcoc         arcoc
     C                   add       wkcos         arcos
      *
      * Print group line
     C                   if        svppcd = 'NUR  ' or svppcd = 'GF   '
     C                   exsr      $d1dtl
     C                   endif
      *
     C                   endif                                                  If something
      *
     C                   endif                                                  If process
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *----------------------------------------------------------------
      * EOF processing
      *----------------------------------------------------------------
      *
      *  Print the standard 'no data' message or the totals
      *
     C                   if        first = yes                                  IF NOTHING
     C                   except    hrhdr
     C                   except    nodata
     C                   else
     C                   exsr      $totfscd
     C                   exsr      $totppcd
     C                   exsr      $totreport
     C                   endif                                                  IF NOTHING
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Check for control breaks
      *--------------------------------------------------------------------------------------
      *
     C     $break        begsr
      *
      * Level breaks:
      *    Production phase
      *    Farm
     C                   select
     C                   when      first = yes
     C                   exsr      $ppds
     C                   exsr      $fsnm
     C                   move      no            first
      *
     C                   when      hgppcd <> svppcd
     C                   exsr      $totfscd
     C                   exsr      $totppcd
     C                   exsr      $ppds
     C                   exsr      $fsnm
      *
     C                   when      hgfscd <> svfscd
     C                   exsr      $totfscd
     C                   exsr      $fsnm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Print report headings
      *--------------------------------------------------------------------------------------
      *
     C     $hrhdr        begsr
      *
     C                   except    hrhdr
      *
      * Set off indicator that controls printing of underscores for columns..if
      * you've just hit a page reak, you won't need underscores.
      *
     C                   setoff                                       96
      *
      * Set indicator to cause farm info to print on the next detail line.
      *
     C                   seton                                        97
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Beginning inventory
      *--------------------------------------------------------------------------------------
      *
     C     $begin        begsr
      *
      * ADD to inventory:
      *     Retrieve all dollars transferred into this group prior to the period you
      *     are reporting.
      *
      *
     C     hghgsn        setll     hsl118c
     C                   dou       *in91 = *on or
     C                             cmacyr > ldacyr or
     C                             (cmacyr = ldacyr and cmacpe >= ldacpe)
     C     hghgsn        reade     hsl118c                                91
     C                   if        *in91 = *off and
     C                             (cmacyr < ldacyr or
     C                             (cmacyr = ldacyr and cmacpe < ldacpe))
     C                   add       cmam          wkbin
     C                   endif
     C                   enddo
      *
      * ADD to inventory:
      *     Retrieve all feed tickets for this group prior to the beginning period date.
      *     Accumulate the dollars of: ingredient, manufacturing, delivery, medication
      *
     C     hghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on                                  Do feed loop
     C     hghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off and fdtkdt < ldbpdt             If more feed
     C                   add       fdinam        wkbin
     C                   add       fdmfam        wkbin
     C                   add       fddlam        wkbin
     C                   add       fdmdam        wkbin
     C                   endif                                                  If more feed
     C                   enddo                                                  Do feed loop
      *
      * ADD to inventory:
      *     Retrieve all expense tickets for this group prior to the beginning
      *     period date.
      *
     C     hghgsn        setll     hsl048b
      *
     C                   dou       *in91 = *on                                  Do expenses
     C     hghgsn        reade     hsl048b                                91
     C                   if        *in91 = *off and xtxedt < ldbpdt             If more exp
     C                   add       xtxtam        wkbin
     C                   endif                                                  If more exp
     C                   enddo                                                  Do expenses
      *
      *
      * SUBTRACT from inventory:
      *          Retrieve all dollars transferred/sold out of this group prior
      *          to the period you are reporting.
      *          (Here, "Sold" includes market and feeder pig sales only)
      *
     C     hghgsn        setll     hsl118b
     C                   dou       *in91 = *on or
     C                             cmacyr > ldacyr or
     C                             (cmacyr = ldacyr and cmacpe >= ldacpe)
     C     hghgsn        reade     hsl118b                                91
     C                   if        *in91 = *off and
     C                             (cmacyr < ldacyr or
     C                             (cmacyr = ldacyr and cmacpe < ldacpe))
     C                   sub       cmam          wkbin
     C                   endif
     C                   enddo
      *
      *
      * SUBTRACT from inventory:
      *     Retrieve all Cull Sales for this group prior to the beginning
      *     period date.
      *
     C     hghgsn        setll     hsj085e
      *
     C                   dou       *in91 = *on                                  Do cull sales
     C     hghgsn        reade     hsj085e                                91
     C                   if        *in91 = *off and                             If more sales
     C                             shstcd = 'CULLS' and
     C                             (shmscd = 'FP' or shmscd = 'PP') and
     C                             shrcdt < ldbpdt
      *
     C                   exsr      $check
     C                   sub       wkam          wkbin
      *
     C                   endif                                                  If more sales
     C                   enddo                                                  Do cull sales
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve Cull Sale Net Amount
      *--------------------------------------------------------------------------------------
      *
     C     $check        begsr
      *
     C                   z-add     0             wkam
      *
      * Process all check detail records for this movement/group.
      *
     C     key01         setll     hsl064b
      *
     C                   dou       *in93 = *on                                  Do check detail
     C     key01         reade     hsl064b                                93
     C                   if        *in93 = *off                                 If not eof
      *
      * Accumulate 'gross amount' from check detail record.
      *
     C                   add       cdgram        wkam
      *
      * For each Check Detail record, retrieve all the
      * deductions/additions and reduce the 'gross' amount to 'net'.
      * (NOTE: Deductions/additions are carried in the Adjustment file
      * with the appropriate +/- sign. So, just 'add' them to the 'gross'.)
      *
     C     key02         setll     hsl065c
     C                   dou       *in94 = *on                                  Do ded/add
     C     key02         reade     hsl065c                                94
     C                   if        *in94 = *off and cjcjfl = 'D'
     C                   add       cjcjam        wkam
     C                   endif
     C                   enddo                                                  Do ded/add
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do check detail
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve the Transfer In Same/Different Phase dollars for the group/period
      *--------------------------------------------------------------------------------------
      *
     C     $trani        begsr
      *
     C                   z-add     0             wkisp
     C                   z-add     0             wkidp
      *
     C     key03         setll     hsl118c
     C                   dou       *in91 = *on
     C     key03         reade     hsl118c                                91
     C                   if        *in91 = *off
      *
     C                   select
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmam          wkisp
      *
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmam          wkidp
     C                   endsl
      *
     C                   endif
     C                   enddo
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve the Transfer Out Same/Different Phase dollars for the group/period
      *--------------------------------------------------------------------------------------
      *
     C     $trano        begsr
      *
     C                   z-add     0             wkosp
     C                   z-add     0             wkodp
      *
     C     key03         setll     hsl118b
     C                   dou       *in91 = *on
     C     key03         reade     hsl118b                                91
     C                   if        *in91 = *off and cmmtcd = 'T'
      *
     C                   select
     C                   when      cmorppcd = cmdnppcd
     C                   add       cmam          wkosp
      *
     C                   when      cmorppcd <> cmdnppcd
     C                   add       cmam          wkodp
     C                   endsl
      *
     C                   endif
     C                   enddo
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve/calculate the Calculated Operating Costs
      *--------------------------------------------------------------------------------------
      *
     C     $opcost       begsr
      *
      * ADD: Feed Tickets for the Period to Operating Costs
      *
     C     hghgsn        setll     hsl038e
      *
     C                   dou       *in91 = *on                                  Do feed loop
     C     hghgsn        reade     hsl038e                                91
     C                   if        *in91 = *off and                             If more feed
     C                             fdtkdt >= ldbpdt and fdtkdt <= ldepdt
     C                   add       fdinam        wkcoc
     C                   add       fdmfam        wkcoc
     C                   add       fddlam        wkcoc
     C                   add       fdmdam        wkcoc
     C                   endif                                                  If more feed
     C                   enddo                                                  Do feed loop
      *
      * ADD: Expense tickets for the Period to Operating Costs
      *
     C     hghgsn        setll     hsl048b
      *
     C                   dou       *in91 = *on                                  Do expenses
     C     hghgsn        reade     hsl048b                                91
     C                   if        *in91 = *off and                             If more exp
     C                             xtxedt >= ldbpdt and xtxedt <= ldepdt
     C                   add       xtxtam        wkcoc
     C                   endif                                                  If more exp
     C                   enddo                                                  Do expenses
      *
      *
      * SUBTRACT: Cull sales for the Period from the Operating Costs
      *           (use 'net' amount.....not 'gross')
      *
     C     hghgsn        setll     hsj085e
      *
     C                   dou       *in91 = *on                                  Do cull sales
     C     hghgsn        reade     hsj085e                                91
     C                   if        *in91 = *off and                             If more sales
     C                             shstcd = 'CULLS' and
     C                             (shmscd = 'FP' or shmscd = 'PP') and
     C                             (shrcdt >= ldbpdt and shrcdt <= ldepdt)
     C                   exsr      $check
     C                   sub       wkam          wkcoc
      *
     C                   endif                                                  If more sales
     C                   enddo                                                  Do cull sales
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Make addtional checks
      *--------------------------------------------------------------------------------------
      *
     C     $select       begsr
      *
      * Retrieve farm info for the group.
      *
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If no hit
     C                   move      no            procfl
     C                   else
      *
      * If this is the on-demand version and the user selected a specific cell
      * and the group's farm is not in that cell, don't process.
      *
     C                   if        ldeffl = 'D' and ldcell <> 0
     C                             and fscell <> ldcell
     C                   move      no            procfl
     C                   endif
      *
      * If the incoming parm is Matched
      *
     C                   if        xxincd = 'M' and
     C                             hgppcd <> fsppcd
     C                   move      no            procfl
     C                   endif
      *
      * If the incoming parm is Unmatched
      *
     C                   if        xxincd = 'U' and
     C                             hgppcd = fsppcd
     C                   move      no            procfl
     C                   endif
      *
     C                   endif                                                  If no hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Retrieve Production Phase description
      *---------------------------------------------------------------------------------------
      *
     C     $ppds         begsr
      *
     C                   movel     hgppcd        svppcd
      *
      * Printing for the BGF section is different than for the NUR/GF sections.
      * Set an indicator to control the printing.
      *
     C                   if        svppcd = 'BGF  '
     C                   seton                                        95
     C                   else
     C                   setoff                                       95
     C                   endif
      *
      * Retrieve the Production Phase description
      *
     C     hgppcd        chain     hsp011                             92
     C                   if        *in92 = *off
     C                   movel(p)  ppppds        svppds
     C                   else
     C                   movel(p)  'Unknown'     svppds
     C                   endif
      *
      * Print report headings
      *
     C                   exsr      $hrhdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Retrieve Farm info
      *---------------------------------------------------------------------------------------
      *
     C     $fsnm         begsr
      *
     C                   z-add     hgfscd        svfscd
      *
     C     hgfscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel(p)  fsfsnm        d1fsnm
     C                   movel     fscjd         d1cjd
     C                   else
     C                   movel(p)  'Unknown'     d1fsnm
     C                   move      *blank        d1cjd
     C                   endif
      *
      * Set indicator to keep farm site code/cost center/name from printing on
      * each detail line. We don't want to keep printing farm info on each line...
      * just when the farm changes or we go to a new page.
      *
     C                   seton                                        97
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print detail line
      *---------------------------------------------------------------
      *
     C     $d1dtl        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $hrhdr
     C                   endif
      *
      * Move accumulator workfields of 13,2 to 11,0 print fields.
      *
     C                   z-add(h)  wkbin         d1bin
     C                   z-add(h)  wkisp         d1isp
     C                   z-add(h)  wkidp         d1idp
     C                   z-add(h)  wkcoc         d1coc
     C                   z-add(h)  wkosp         d1osp
     C                   z-add(h)  wkodp         d1odp
     C                   z-add(h)  wkcos         d1cos
     C                   z-add(h)  wkein         d1ein
     C                   z-add(h)  wkcin         d1cin
      *
      * Calculate the change in inventory using the 'print' fields.
      * (You have calculated it previously using the workfields and stored
      * it in the total arrays.)
      *
     C     d1ein         sub       d1bin         d1cin
      *
     C                   except    d1dtl
      *
     C                   setoff                                       97
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear the workfields
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wkbin
     C                   z-add     0             wkisp
     C                   z-add     0             wkidp
     C                   z-add     0             wkcoc
     C                   z-add     0             wkosp
     C                   z-add     0             wkodp
     C                   z-add     0             wkcos
     C                   z-add     0             wkein
     C                   z-add     0             wkcin
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Total for production phase
      *---------------------------------------------------------------
      *
     C     $totppcd      begsr
      *
     C                   z-add     2             x
      *
      * Print a blank line
      *
     C                   except    blank
      *
      * Set off the indicator that was controlling BGF printing on the
      * Farm Total line.
     C                   setoff                                       95
      *
      * Set up description to print on total line
      *
     C                   eval      wkdesc = 'Total for Phase: ' + %trimr(svppcd) + ':'
      *
     C                   exsr      $printtot
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Total for farm site
      *---------------------------------------------------------------
      *
     C     $totfscd      begsr
      *
     C                   z-add     1             x
      *
      * The 'total' line for BGF is a little different than for NUR/GF. But,
      * to keep things simple (and keep the logic in the Print Total subroutine
      * from blowing up), we will populate all the fields and then control what
      * prints with indicators.
      *
      * Set up Farm info (this will only print for BGF farms).
      *
     C                   movel     d1fsnm        t1fsnm
     C                   movel     d1cjd         t1cjd
      *
      * Move farm site number to an alpha field and strip the leading zeros.
      * Then concatenate it with text for the total line description field.
      * (This will ultimately only print for NUR/GF farms.)
      *
      *
     C                   move      svfscd        wkalphfscd
     C                   if        %subst(wkalphfscd:1:1) = '0'                 If position 1
     C                   eval      %subst(wkalphfscd:1:1) = *blank
     C                   if        %subst(wkalphfscd:2:1) = '0'                 If position 2
     C                   eval      %subst(wkalphfscd:2:1) = *blank
     C                   if        %subst(wkalphfscd:3:1) = '0'                 If position 3
     C                   eval      %subst(wkalphfscd:3:1) = *blank
     C                   if        %subst(wkalphfscd:4:1) = '0'                 If position 4
     C                   eval      %subst(wkalphfscd:4:1) = *blank
     C                   endif                                                  If position 4
     C                   endif                                                  If position 3
     C                   endif                                                  If position 2
     C                   endif                                                  If position 1
      *
      * Concatenate
     C                   eval      wkdesc = ' Total for Farm: ' +
     C                                      %trim(wkalphfscd)
      *
      * Set indicator to print underscores for columns (Note: We don't
      * print underscores for the 'phase' totals...just the 'farm' totals...
      * and, then, not in the BGF section.)
      *
     C                   seton                                        96
      *
     C                   exsr      $printtot
     C                   setoff                                       96
      *
     C                   z-add     0             svfscd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Total for report
      *---------------------------------------------------------------
      *
     C     $totreport    begsr
      *
     C                   z-add     3             x
      *
      * Print a blank line
      *
     C                   except    blank
      *
      * Set off the indicator that was controlling BGF printing on the
      * Farm Total line.
     C                   setoff                                       95
      *
      * Set up description to print on total line
      *
     C                   eval      wkdesc = 'Total for Report:'
      *
     C                   exsr      $printtot
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print total line
      *---------------------------------------------------------------
      *
     C     $printtot     begsr
      *
      *
      * If ALL the columns have totals of zero, don't print the total line.
      *
     C                   if        arbin(x) = 0 and                             If nothing
     C                             arisp(x) = 0 and
     C                             aridp(x) = 0 and
     C                             arcoc(x) = 0 and
     C                             arosp(x) = 0 and
     C                             arodp(x) = 0 and
     C                             arcos(x) = 0 and
     C                             arein(x) = 0 and
     C                             arcin(x) = 0
     C                   else
      *
      * You have some total values
      *
     C                   if        *inof = *on
     C                   exsr      $hrhdr
     C                   endif
      *
      * Right-justify the text you previously concatenated.
      *
     C     ' '           checkr    wkdesc        length
     C                   eval      start = 35 - length + 1
      *
     C                   eval      %subst(t1desc:start) =
     C                             %subst(wkdesc:1:length)
      *
     C                   z-add(h)  arbin(x)      t1bin
     C                   z-add(h)  arisp(x)      t1isp
     C                   z-add(h)  aridp(x)      t1idp
     C                   z-add(h)  arcoc(x)      t1coc
     C                   z-add(h)  arosp(x)      t1osp
     C                   z-add(h)  arodp(x)      t1odp
     C                   z-add(h)  arcos(x)      t1cos
     C                   z-add(h)  arein(x)      t1ein
     C                   z-add(h)  arcin(x)      t1cin
      *
     C                   except    t1tot
      *
      * Clear array entries for this index
      *
     C                   z-add     0             arbin(x)
     C                   z-add     0             arisp(x)
     C                   z-add     0             aridp(x)
     C                   z-add     0             arcoc(x)
     C                   z-add     0             arosp(x)
     C                   z-add     0             arodp(x)
     C                   z-add     0             arcos(x)
     C                   z-add     0             arein(x)
     C                   z-add     0             arcin(x)
     C                   endif                                                  If nothing
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm incoming
      *
     C     *entry        plist
     C                   parm                    xxincd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    sgmvsn
     C                   kfld                    hghgsn
      *
      *
     C     key02         klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
     C                   kfld                    cdlnno
      *
      *
     C     key03         klist
     C                   kfld                    hghgsn
     C                   kfld                    ldacyr
     C                   kfld                    ldacpe
      *
      *
      * Retrieve time for heading
      *
     C                   time                    rtime
      *
      * Setup Headings for User's report selection
      *
      * Edit/Final/On-demand
      *
     C                   select
     C                   when      ldeffl = 'D'
     C                   movel(p)  'On-Demand'   href
     C                   seton                                        98
      *
     C                   when      ldeffl = 'E'
     C                   movel(p)  '  Edit   '   href
      *
     C                   when      ldeffl = 'F'
     C                   movel(p)  '  Final  '   href
     C                   endsl
      *
      * Text for the All groups/Matched groups/Unmatched groups
      *
     C                   select
     C                   when      xxincd = 'A'
     C                   eval      hrinds = '                   Al+
     C                                      l Groups                  '
      *
     C                   when      xxincd = 'M'
     C                   eval      hrinds = 'Matched phase groups +
     C                                      (group phase = farm phase)'
      *
     C                   when      xxincd = 'U'
     C                   eval      hrinds = 'Unmatched Phase Groups +
     C                                      (Group Phase <> Farm Phase)'
     C                   endsl
      *
      * User selections for on-demand version
      *
     C                   if        ldfsbo = *blank
     C                   movel     'All'         hrfsbo
     C                   else
     C                   movel     ldfsbo        hrfsbo
     C                   endif
      *
     C                   if        ldptcd = *blank
     C                   movel     'All'         hrptcd
     C                   else
     C                   movel     ldptcd        hrptcd
     C                   endif
      *
     C                   if        ldppcd = *blank
     C                   movel     'All'         hrppcd
     C                   else
     C                   movel     ldppcd        hrppcd
     C                   endif
      *
     C                   if        ldfscd = 0
     C                   seton                                        87
     C                   endif
      *
     C                   if        ldcell = 0
     C                   seton                                        88
     C                   endif
      *
     C                   if        ldgtcd = *blank
     C                   movel     'All'         hrgtcd
     C                   else
     C                   movel     ldgtcd        hrgtcd
     C                   endif
      *
     C                   if        ldcrcd = *blank
     C                   movel     'All'         hrcrcd
     C                   else
     C                   movel     ldcrcd        hrcrcd
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * REPORT HEADING LINES
      *-------------------------------------------------------------
      *
     Oqprint    e            hrhdr          1 01
     O                       sdpgm               10
     O                                          111 'HOG PRODUCTION SYSTEM'
     O                                          189 'DATE'
     O                       udate         y    198
      *
     O          e            hrhdr          1
     O                       sdusr               10
     O                                          110 'PERIOD CHANGE-IN-INVENTORY'
     O                                          117 'REPORT'
     O                                          189 'TIME'
     O                       rtime              198 '  :  :  '
      *
     O          e            hrhdr          1
     O                       hrinds             127
     O                                          189 'PAGE'
     O                       page          z    198
      *
      *
     O          e            hrhdr          1
     O                       href               105
      *
     O          e            hrhdr       1  1
     O                                           17 'PERIOD:'
     O                       ldacpe        m     25
     O                       ldbmdy        y     35
     O                                           38 'to'
     O                       ldemdy        y     47
      *
     O               98                          84 'COMPANY RELATIONSHIP:'
     O               98      hrcrcd              91
     O               98      ldcrds             103
      *
      *
     O          e    98      hrhdr          1
     O                                           17 'BUSINESS OFFICE:'
     O                       hrfsbo              24
     O                       ldbods              57
      *
     O                                           84 'CELL:'
     O              n88      ldcell        z     91
     O               88                          89 'All'
      *
      *
     O          e    98      hrhdr          1
     O                                           17 'PRODUCTION TYPE:'
     O                       hrptcd              24
     O                       ldptds              37
      *
     O                                           84 'FARM SITE:'
     O              n87      ldfscd        z     91
     O               87                          89 'All'
     O                       ldfsnm             118
      *
      *
     O          e    98      hrhdr          1
     O                                           17 'PRODUCTION PHASE:'
     O                       hrppcd              24
     O                       ldppds              57
      *
     O                                           84 'GROUP TYPE:'
     O                       hrgtcd              89
     O                       ldgtds             108
      *
      *
     O          e            hrhdr       1  1
     O                                            5 'FARM'
     O                                           19 'COST'
     O                                           38 'HOG'
     O                                           49 'GROUP'
     O                                           57 'GROUP'
     O                                           72 'BEGINNING'
     O                                           89 'TRANSFER IN'
     O                                          104 'TRANSFER IN'
     O                                          134 'TRANSFER OUT'
     O                                          149 'TRANSFER OUT'
     O                                          182 'ENDING'
     O                                          197 'CHANGE IN'
      *
     O          e            hrhdr          1
     O                                            5 'SITE'
     O                                           19 'CENTER'
     O                                           30 'FARM NAME'
     O                                           40 'GROUP'
     O                                           50 'STATUS'
     O                                           56 'TYPE'
     O                                           72 'INVENTORY'
     O                                           89 'SAME PHASE'
     O                                          104 'DIFF PHASE'
     O                                          119 'OPERATING'
     O                                          134 'SAME PHASE'
     O                                          149 'DIFF PHASE'
     O                                          182 'INVENTORY'
     O                                          197 'INVENTORY'
      *
     O          e            hrhdr          1
     O                                           72 'AMOUNT'
     O                                           89 'AMOUNT'
     O                                          104 'AMOUNT'
     O                                          119 'COSTS'
     O                                          134 'AMOUNT'
     O                                          149 'AMOUNT'
     O                                          182 'AMOUNT'
     O                                          165 'COST OF SALES'
     O                                          197 'AMOUNT'
      *
     O          e            hrhdr          1
     O                       dash               198
      *
      *
     O          e            hrhdr          1
     O                       svppds              30
      *
      *
      *-------------------------------------------------------------------------
      * DETAIL LINE
      *-------------------------------------------------------------------------
      *
     O          e            d1dtl       1
     O               97      svfscd        z      5
     O               97      d1cjd               19
     O               97      d1fsnm              33
     O                       hghgcd              42
     O                       hggscd              48
     O                       hggtcd              54
     O                       d1bin         kb    73
     O                       d1isp         kb    90
     O                       d1idp         kb   105
     O                       d1coc         kb   120
     O                       d1osp         kb   135
     O                       d1odp         kb   150
     O                       d1cos         kb   166
     O                       d1ein         kb   182
     O                       d1cin         kb   198
      *
      *-------------------------------------------------------------
      * Total line
      *-------------------------------------------------------------
      *
     O          e    96n95   t1tot       1
     O                                           73 '------------'
     O                                           90 '------------'
     O                                          105 '------------'
     O                                          120 '------------'
     O                                          135 '------------'
     O                                          150 '------------'
     O                                          166 '------------'
     O                                          182 '------------'
     O                                          198 '------------'
      *
     O          e            t1tot       1  1
     O               95      svfscd        z      5
     O               95      d1cjd               19
     O               95      t1fsnm              33
     O              n95      t1desc         b    47
     O                       t1bin         kb    73
     O                       t1isp         kb    90
     O                       t1idp         kb   105
     O                       t1coc         kb   120
     O                       t1osp         kb   135
     O                       t1odp         kb   150
     O                       t1cos         kb   166
     O                       t1ein         kb   182
     O                       t1cin         kb   198
      *
      *----------------------------------------------------------------
      * Print a blank line
      *----------------------------------------------------------------
     O          e            blank
      *
      *----------------------------------------------------------------
      * No Data message line
      *----------------------------------------------------------------
     O          e            nodata      1
     O                                           19 'NO DATA MEETS YOUR'
     O                                           38 'SELECTION CRITERIA'
      /EJECT
