// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDR9XFR
// ?Date: 14.08.2025 Time: 03:35:58
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?012606 LJB Added Select by Company Number to create work file function
//?051705 slm Allow department instead of responsibility department
//?051705 slm Memo Posting Selection of from and to dates.
EXECUTE FUNCTION(CRT WRKF Claims by Cst RT) TYPE(RTVOBJ) FILE(PDMKCPP)          AC1540438;
PARAMETER(PAR.Claim_Item_Company_Number);
PARAMETER(PAR.Claim_Item_Code);
PARAMETER(PAR.Reason_Code);
PARAMETER(PAR.Salesperson_to_Rvw_Claim);
PARAMETER(PAR.Claim_Ship_to_Customer);
PARAMETER(PAR.Claim_Status);
PARAMETER(PAR.Claim_Start_Number);
PARAMETER(PAR.Claim_End_Number);
PARAMETER(PAR.Claim_Start_Entry_Date);
PARAMETER(PAR.Claim_End_Entry_Date);
PARAMETER(PAR.Memo_Posting_Str_Date_Usr);
PARAMETER(PAR.Memo_Posting_End_Date_Usr);
{
 //?USER: Initialize routine

 //?***** Change Log
 //?** 01/26/2006 LJB
 //?** Added Select by Company Number per request by Alice
 //?*****
 //?USER: Process Data record

 // PAR.*Record selected = CND.*YES
 PAR.*Record_selected = 'Y';

 //?Perform Selections.
 DO;

 //?Select by Company Number.          01/26/2006 LJB
 DO;

 CASE;

 // IF PAR.Claim Item Company Number is not equal to zero
 IF PAR.Claim_Item_Company_Number <> *ZERO;

 CASE;

 // IF DB1.Claim Company Number NE PAR.Claim Item Company Number
 IF DB1.Claim_Company_Number <> PAR.Claim_Item_Company_Number;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Claim Number.
 DO;

 CASE;

 // IF PAR.Claim Start Number is Not Zero
 IF PAR.Claim_Start_Number <> *ZERO;

 CASE;

 // IF DB1.Claim Number LT PAR.Claim Start Number
 IF DB1.Claim_Number < PAR.Claim_Start_Number;

 // OR DB1.Claim Number GT PAR.Claim End Number
 OR DB1.Claim_Number > PAR.Claim_End_Number;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Entry Date.
 DO;

 CASE;

 // IF PAR.Claim Start Entry Date is Entered
 IF PAR.Claim_Start_Entry_Date <> *ZERO;

 CASE;

 // IF DB1.Claim Entry Date LT PAR.Claim Start Entry Date
 IF DB1.Claim_Entry_Date < PAR.Claim_Start_Entry_Date;

 // OR DB1.Claim Entry Date GT PAR.Claim End Entry Date
 OR DB1.Claim_Entry_Date > PAR.Claim_End_Entry_Date;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Memo Posting date        051705 slm
 DO;

 CASE;

 // IF PAR.Memo Posting Str Date Usr is Entered
 IF PAR.Memo_Posting_Str_Date_Usr <> *ZERO;

 CASE;

 // IF DB1.Memo Post Date LT PAR.Memo Posting Str Date Usr
 IF DB1.Memo_Post_Date < PAR.Memo_Posting_Str_Date_Usr;

 // OR DB1.Memo Post Date GT PAR.Memo Posting End Date Usr
 OR DB1.Memo_Post_Date > PAR.Memo_Posting_End_Date_Usr;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Customer.
 DO;

 CASE;

 // IF PAR.Claim Ship to Customer is not equal to zero
 IF PAR.Claim_Ship_to_Customer <> *ZERO;

 CASE;

 // IF DB1.Claim Ship to Customer NE PAR.Claim Ship to Customer
 IF DB1.Claim_Ship_to_Customer <> PAR.Claim_Ship_to_Customer;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Claim Status.
 DO;

 CASE;

 // IF PAR.Claim Status is Blank
 IF PAR.Claim_Status = *BLANK;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Claim Status NE PAR.Claim Status
 IF DB1.Claim_Status <> PAR.Claim_Status;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 //?Select by Salesperson.
 DO;

 CASE;

 // IF PAR.Salesperson to Rvw Claim is entered
 IF PAR.Salesperson_to_Rvw_Claim <> *BLANK;

 CASE;

 // IF DB1.Salesperson to Rvw Claim NE PAR.Salesperson to Rvw Claim
 IF DB1.Salesperson_to_Rvw_Claim <> PAR.Salesperson_to_Rvw_Claim;

 // PAR.*Record selected = CND.*NO
 PAR.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDDO;

 ENDDO;

 CASE;

 // IF PAR.*Record selected is *YES
 IF PAR.*Record_selected = 'Y';

 EXECUTE FUNCTION(CRT WRKF Claims by Cst RT) TYPE(RTVOBJ) FILE(PDMOCPP)          AC1540440;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(PAR.Claim_Item_Company_Number);
 PARAMETER(PAR.Claim_Item_Code);
 PARAMETER(PAR.Reason_Code);
 PARAMETER(DB1.Salesperson_to_Rvw_Claim);
 PARAMETER(DB1.Claim_Company_Number);
 PARAMETER(DB1.Claim_Order_Number);
 PARAMETER(DB1.Claim_Ship_to_Customer);
 PARAMETER(DB1.Claim_Customer_Name);
 PARAMETER(DB1.Claim_Type);
 PARAMETER(DB1.Claim_Status);
 PARAMETER(DB1.Claim_Amount);
 PARAMETER(DB1.Claim_Net_Loss);
 PARAMETER(DB1.Claim_Approved_Amount);
 PARAMETER(DB1.Claim_Contact_Name);
 PARAMETER(DB1.Product_Inspection_Avail);
 PARAMETER(DB1.Product_Inspection_Desc);
 PARAMETER(DB1.Rep_Inspection_Required);
 PARAMETER(DB1.Rep_Inspection_Req_Desc);
 PARAMETER(DB1.Lab_Fee_Involved);
 PARAMETER(DB1.Lab_Fee);
 PARAMETER(DB1.Driver_Name);
 PARAMETER(DB1.Lab_Name);
 PARAMETER(DB1.Resolve_Claim_by_Date);
 PARAMETER(DB1.Actual_Delivery_Date);
 PARAMETER(DB1.Claim_Called_in_by);
 PARAMETER(DB1.Claim_Called_in_by_Desc);
 PARAMETER(DB1.Claim_Called_in_by_Date);
 PARAMETER(DB1.Claim_Entry_Date);
 PARAMETER(DB1.Claim_Entry_Time);
 PARAMETER(DB1.Claim_Entry_User);
 PARAMETER(DB1.Resale_Ship_to_Customer);
 PARAMETER(DB1.Resale_Purchase_Order_Nbr);
 PARAMETER(DB1.Sales_Approved_Date);
 PARAMETER(DB1.Sales_Approved_Time);
 PARAMETER(DB1.Sales_Approved_User);
 PARAMETER(DB1.Approved_Denied_Date);
 PARAMETER(DB1.Approved_Denied_Time);
 PARAMETER(DB1.Approved_Denied_User);
 PARAMETER(DB1.Memo_Created);
 PARAMETER(DB1.Memo_Created_Date);
 PARAMETER(DB1.Memo_Created_Time);
 PARAMETER(DB1.Memo_Created_User);
 PARAMETER(DB1.Memo_Post_Date);
 PARAMETER(DB1.Memo_Post_Time);
 {
  //?USER: Process Data record

  // PAR.*Record selected = CND.*YES
  PAR.*Record_selected = 'Y';

  //?Perform Selections.
  DO;

  //?Select by Item Code.
  DO;

  CASE;

  // IF PAR.Claim Item Code is Entered
  IF PAR.Claim_Item_Code <> *ZERO;

  CASE;

  // IF DB1.Claim Item Code NE PAR.Claim Item Code
  IF DB1.Claim_Item_Code <> PAR.Claim_Item_Code;

  // PAR.*Record selected = CND.*NO
  PAR.*Record_selected = 'N';

  ENDIF;

  ENDIF;

  ENDDO;

  //?Select by Reason Code.
  DO;

  CASE;

  // IF PAR.Reason Code is Entered
  IF PAR.Reason_Code <> *BLANK;

  CASE;

  // IF DB1.Reason Code NE PAR.Reason Code
  IF DB1.Reason_Code <> PAR.Reason_Code;

  // PAR.*Record selected = CND.*NO
  PAR.*Record_selected = 'N';

  ENDIF;

  ENDIF;

  ENDDO;

  ENDDO;

  CASE;

  // IF PAR.*Record selected is *YES
  IF PAR.*Record_selected = 'Y';

  EXECUTE FUNCTION(CRT A/R Claim/Item Rpt CR) TYPE(CRTOBJ) FILE(PDMVCPP)          AC1530463;
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.Claim_Item_Line_Number);
  PARAMETER(DB1.Claim_Company_Number);
  PARAMETER(DB1.Claim_Item_Code);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.UOM_Primary_Dft);
  PARAMETER(DB1.Responsible_Department);
  PARAMETER(DB1.Claim_Department_Code);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Claim_Item_Quantity);
  PARAMETER(DB1.Claim_Item_Weight);
  PARAMETER(DB1.Claim_Item_Unit_Price);
  PARAMETER(DB1.Claim_Item_Amount);
  PARAMETER(PAR.Salesperson_to_Rvw_Claim);
  PARAMETER(PAR.Claim_Company_Number);
  PARAMETER(PAR.Claim_Order_Number);
  PARAMETER(PAR.Claim_Ship_to_Customer);
  PARAMETER(PAR.Claim_Customer_Name);
  PARAMETER(PAR.Claim_Type);
  PARAMETER(PAR.Claim_Status);
  PARAMETER(PAR.Claim_Amount);
  PARAMETER(PAR.Claim_Net_Loss);
  PARAMETER(PAR.Claim_Approved_Amount);
  PARAMETER(PAR.Claim_Contact_Name);
  PARAMETER(PAR.Product_Inspection_Avail);
  PARAMETER(PAR.Product_Inspection_Desc);
  PARAMETER(PAR.Rep_Inspection_Required);
  PARAMETER(PAR.Rep_Inspection_Req_Desc);
  PARAMETER(PAR.Lab_Fee_Involved);
  PARAMETER(PAR.Lab_Fee);
  PARAMETER(PAR.Driver_Name);
  PARAMETER(PAR.Lab_Name);
  PARAMETER(PAR.Resolve_Claim_by_Date);
  PARAMETER(PAR.Actual_Delivery_Date);
  PARAMETER(PAR.Claim_Called_in_by);
  PARAMETER(PAR.Claim_Called_in_by_Desc);
  PARAMETER(PAR.Claim_Called_in_by_Date);
  PARAMETER(PAR.Claim_Entry_Date);
  PARAMETER(PAR.Claim_Entry_Time);
  PARAMETER(PAR.Claim_Entry_User);
  PARAMETER(PAR.Resale_Ship_to_Customer);
  PARAMETER(PAR.Resale_Purchase_Order_Nbr);
  PARAMETER(PAR.Sales_Approved_Date);
  PARAMETER(PAR.Sales_Approved_Time);
  PARAMETER(PAR.Sales_Approved_User);
  PARAMETER(PAR.Approved_Denied_Date);
  PARAMETER(PAR.Approved_Denied_Time);
  PARAMETER(PAR.Approved_Denied_User);
  PARAMETER(PAR.Memo_Created);
  PARAMETER(PAR.Memo_Created_Date);
  PARAMETER(PAR.Memo_Created_Time);
  PARAMETER(PAR.Memo_Created_User);
  PARAMETER(PAR.Memo_Post_Date);
  PARAMETER(PAR.Memo_Post_Time);
  ENDIF;

 }

 ENDIF;

}


