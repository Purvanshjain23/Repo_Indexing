// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPACSRR
// ?Date: 14.08.2025 Time: 03:39:43
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC DLY029 06/06/07  go to cust accrual for broker -its not in cust extnow
// Execute function SFL Fold/Drop  RPG    US.
EXECUTE FUNCTION(SFL Fold/Drop  RPG    US) TYPE(EXCUSRSRC) ('POBHUFU');
PARAMETER(8);
{
 ) find text=#SFLCTL
 ) insert
 A                                      SFLDROP(CF07)
 A* 07                                  SFLFOLD(CF07)
}


//?USER: Load subfile record from DBF record

CASE;

// IF DB1.Record Status is Active
IF DB1.Record_Status = 'A';

CASE;

// IF CTL.USR Name is Not Blank
IF CTL.USR_Name <> *BLANK;

// Call program CLC Call Qclscan       UP.
CALL PROGRAM(CLC Call Qclscan       UP) ('QCLSCAN');
PARAMETER(RCD.Customer_Name);
PARAMETER(30);
PARAMETER(1);
PARAMETER(CTL.USR_Name);
PARAMETER(30);
PARAMETER(1);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(WRK.USR_Qclscan_Result);

CASE;

// IF WRK.USR Qclscan Result ? is Does contain
IF WRK.USR_Qclscan_Result > 0;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

EXECUTE FUNCTION(Rtv Ship To Broker    RT) TYPE(RTVOBJ) FILE(OMHOREP)           AC1823996;
PARAMETER(CTL.Ship_To_Customer);
PARAMETER(LCL.Broker_Code);
PARAMETER(JOB.*Job_date);
{
 //?USER: Initialize routine

 //?RMC DLY029 5/24/07 New Routine to get Broker for an Order per ship to
 //?USER: Process Data record

 CASE;

 // IF DB1.Period Beginning Date LE PAR.Scheduled Ship Date
 IF DB1.Period_Beginning_Date <= PAR.Scheduled_Ship_Date;

 // AND DB1.Period Ending Date GE PAR.Scheduled Ship Date
 AND DB1.Period_Ending_Date >= PAR.Scheduled_Ship_Date;

 EXECUTE FUNCTION(RTV Accrual Desc,Type  RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1686089;
 PARAMETER(DB1.Accrual_Code);
 PARAMETER(LCL.Accrual_Description);
 PARAMETER(LCL.Accrual_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Accrual Type is Commission
 IF LCL.Accrual_Type = 'CM';

 // PAR.Broker Code = DB1.Broker Code
 PAR.Broker_Code = DB1.Broker_Code;

 QUIT;

 ENDIF;

 ENDIF;

}


//?Sel Customers without a broker ONLY
CASE;

// IF LCL.Broker Code is Entered
IF LCL.Broker_Code <> *BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

// PGM.*Scan limit = CND.999999
PGM.*Scan_limit = 999999;

//?USER: Process subfile control

CASE;

// IF CTL.USR Name NE WRK.USR Name
IF CTL.USR_Name <> WRK.USR_Name;

// Execute function CVT Str to Upper Alpha US.
EXECUTE FUNCTION(CVT Str to Upper Alpha US) TYPE(EXCUSRSRC) ('PDWEUFR');
PARAMETER(CTL.USR_Name);
PARAMETER(CTL.USR_Name);
{
 PDWEUFR:  PGM PARM(&STRIN &STROUT)

 CHGVAR VAR(&FLDOUT) VALUE('%XLATE(UPTEXT &STRIN)')
}


// WRK.USR Name = CTL.USR Name
WRK.USR_Name = CTL.USR_Name;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

