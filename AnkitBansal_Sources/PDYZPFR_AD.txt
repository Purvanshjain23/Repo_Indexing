// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYZPFR
// ?Date: 14.08.2025 Time: 12:04:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC DLY029 05/23/07 Db Changes - & print brkr on cust accrl line
// WRK.Record Found USR = CND.Record Found
WRK.Record_Found_USR = 'Y';

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


EXECUTE FUNCTION(RTV Default Co No App IF) TYPE(EXCINTFUN)                      AC1628378;
PARAMETER(LCL.Company_Number);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
 PARAMETER(JOB.*USER);
 PARAMETER(NLL.Allow_Multi_Company);
 PARAMETER(NLL.Default_Printer);
 PARAMETER(NLL.Salesperson_Code);
 PARAMETER(LCL.Company_Number);
 PARAMETER(PAR.User_Code_Model);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Number is Equal to zero
 IF LCL.Company_Number = *ZERO;

 CASE;

 // IF PAR.User Code Model is equal to blank
 IF PAR.User_Code_Model = *BLANK;

 EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
 PARAMETER(JOB.*USER);
 PARAMETER(PAR.Company_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
 PARAMETER(PAR.User_Code_Model);
 PARAMETER(PAR.Company_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Company Number = LCL.Company Number
 PAR.Company_Number = LCL.Company_Number;

 ENDIF;

}


//?USER: Record selection processing

//?Match accrual code
CASE;

// IF PAR.Accrual Code NE WRK.BLANK
IF PAR.Accrual_Code <> WRK.BLANK;

CASE;

// IF PAR.Accrual Code NE DB1.Accrual Code
IF PAR.Accrual_Code <> DB1.Accrual_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Match record status
CASE;

// IF PAR.Record Status NE WRK.BLANK
IF PAR.Record_Status <> WRK.BLANK;

CASE;

// IF PAR.Record Status NE DB1.Record Status
IF PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

//?Record status description
CASE;

// IF PAR.Record Status EQ WRK.BLANK
IF PAR.Record_Status = WRK.BLANK;

// 1PG.Status Description = CON.*BLANK
X1PG_Status_Description = *BLANK;

//?Record status description
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Status Description = Condition name of PAR.Record Status
X1PG_Status_Description = RTVCND(PAR.Record_Status);

ENDIF;

// 1PG.Accrual Code = PAR.Accrual Code
X1PG_Accrual_Code = PAR.Accrual_Code;

CASE;

// IF 1PG.Accrual Code is Entered
IF X1PG_Accrual_Code <> *BLANK;

EXECUTE FUNCTION(Accrual Description DRV) TYPE(DRVFLD)                          AC1706268;
PARAMETER(X1PG_Accrual_Description_DRV);
PARAMETER(X1PG_Accrual_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Accrual Descript   RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1285204;
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.Accrual_Description_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Accrual Description DRV = CON.All
X1PG_Accrual_Description_DRV = 'All';

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.Record Found USR = CND.Record Not Found
WRK.Record_Found_USR = 'N';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Dependnt Cust Accr PO
EXECUTE FUNCTION(PRT Cust Accrual Usage PO) TYPE(PRTOBJ);
PARAMETER(CUR.Accrual_Code);
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


//?Embedded PRTOBJ : PRT Dependent Itm Accr PO
EXECUTE FUNCTION(PRT Item Accrual Usage PO) TYPE(PRTOBJ);
PARAMETER(CUR.Accrual_Code);
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


//?Embedded PRTOBJ : PRT Blank Line         PO
EXECUTE FUNCTION(PRT Blank Line         PO) TYPE(PRTOBJ);
PARAMETER(LCL.Company_Number);
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


//?USER: Print required level totals

// SUPPRESSED PRINT Company Number totals format

