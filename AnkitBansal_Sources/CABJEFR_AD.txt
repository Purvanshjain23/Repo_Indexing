// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CABJEFR
// ?Date: 14.08.2025 Time: 03:26:14
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?R10184 JJH 04/24/17 - Calendar Updates for 961
//?- The Kill Day Status for 961 must be maintained by 440
//?- If Kill Day Status is changed for 440, set the Kill Day Status
//?  for 961 to the same value.
//?- Use CHG Calendar 440/961   CH to only affect this function.
//?- If 961, make the Kill Day Status field Output Only
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Printer Device = CON.*BLANK
PAR.PRT_Printer_Device = *BLANK;

//?USER: Initialize subfile header

// CTL.Accounting Company Number = PAR.Accounting Company Number
CTL.Company_Number = PAR.Company_Number;

//?USER: Initialize subfile record (existing record)

//?Only display if company matches selected company
CASE;

// IF CTL.Accounting Company Number is not equal to zero
IF CTL.Company_Number <> *ZERO;

CASE;

// IF RCD.Accounting Company Number NE CTL.Accounting Company Number
IF RCD.Company_Number <> CTL.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Validate subfile control

// PAR.Accounting Company Number = CTL.Accounting Company Number
PAR.Company_Number = CTL.Company_Number;

//?Process print request
CASE;

// IF CTL.*CMD key is *Print 21
IF CTL.*CMD_key = '21';

// PAR.Company Number Pass   USR = PAR.Accounting Company Number
PAR.Company_Number_Pass_USR = PAR.Company_Number;

// PAR.From Date Pass        USR = CTL.Plant Date of Last Order
PAR.From_Date_Pass_USR = CTL.Post_to_G_L_Date;

// PAR.Thru Date Pass        USR = CON.*ZERO
PAR.Thru_Date_Pass_USR = *ZERO;

// Call program PRT Prmt Co,Date Range UP.
CALL PROGRAM(PRT Prmt Co,Date Range UP) ('PDIGUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('C/A');
PARAMETER('CACLCLP');
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.From_Date_Pass_USR);
PARAMETER(PAR.Thru_Date_Pass_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER('Print Calendar');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Allow_Multi_Company);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print List has been submitted'
MESSAGE(USR1742 *INFO);

ENDIF;

ENDIF;

//?USER: Validate subfile record relations

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG Calendar 440/961   CH) TYPE(CHGOBJ) FILE(CAAFREP)          AC2136196;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Post_to_G_L_Date);
PARAMETER(RCD.Julian_Date);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Accounting_Period_Code);
PARAMETER(RCD.OM_Week);
PARAMETER(RCD.Day_of_Week);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.Public_Holiday_Status);
PARAMETER(RCD.Billing_Cycle);
PARAMETER(RCD.Payroll_Quarter);
PARAMETER(RCD.Kill_Day_Status);
PARAMETER(RCD.Production_Day_Status);
PARAMETER(RCD.Prodcution_Sch_Pln_Sts);
PARAMETER(RCD.HPS_PIC_Date);
PARAMETER(RCD.HPS_Calendar_Year);
PARAMETER(RCD.HPS_Calendar_Week);
PARAMETER(RCD.Number_of_Prod_Shifts);
PARAMETER(RCD.Calendar_Unused_Sts_2);
PARAMETER(RCD.Calendar_Unused_Date);
PARAMETER(RCD.Calendar_Unused_Date_2);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*Job_date);
{
 //?USER: Processing after Data update

 //?R10184 JJH 04/24/17 - If 440, update Kill Date Status for 961.
 CASE;

 // IF PAR.Company Number is Seaboard Triumph Foods
 IF PAR.Company_Number = 440;

 EXECUTE FUNCTION(CHG Kill Day Status   CH) TYPE(CHGOBJ) FILE(CAAFREP)           AC2136197;
 PARAMETER(961);
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(PAR.Kill_Day_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 ENDIF;

}


