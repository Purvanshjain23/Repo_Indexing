      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP141
      * TITLE:       REVISE CLOSED HOG GROUP
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     08/22/02
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO REVISE A FEW FIELDS ON A CLOSED HOG GROUP.
      *
      *           THIS PROGRAM IS CALLED FROM HP441 - WORK WITH
      *           CLOSED/VOIDED HOG GROUPS.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/03/04  LeAnne Fedor
      *           Made Group Type output only.
      *
      *           Average Days Old In is now input capable for NUR/GF groups with no
      *           restrictions. (We do not need logic to exclude BGF groups since 1) they
      *           are never Closed--only Voided and 2) this function does not allow you
      *           to Revise Voided Groups.)
      *
      *           If ADOI is changed, we will recalc Average Days Old Out.
      *
      *           Added Stocking Density to screen. It is input capable for WTF
      *           Nursery groups only.
      *
      * 01/16/06  LeAnne Fedor
      *           Removed HSP020-Building/Rooms from the program. It was not being used.
      *
      * 05/13/09  LeAnne Ramsey
      *           Added logic to retrieve the overrides that a user may have entered
      *           for a group for: Origin BGF and NUR Farm Sites. These are output only
      *           fields; we only display them; we do not update HSP034 with them.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd141    cf   e             workstn infds(iofeed)
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp017    if   e           k disk
      *    Feed group
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp019    if   e           k disk
      *    Farm buildings
      *
      *
     Fhsp025    if   e           k disk
      *    Group type
      *
      *
     Fhsp031    if   e           k disk
      *    Breed stock
      *
      *
     Fhsl034d   uf   e           k disk
      *    Hog group
      *
      *
     Fhsp056    if   e           k disk
      *  Sex
      *
      *
     Fhsp105    if   e           k disk
      *    Stocking density
      *
      *
     Fhsp130    if   e           k disk
      *    Group overrides
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D revise          c                   'REVISE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D update          c                   'UPDATE'
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control/flag fields
      *
     D chgadoifl       s              1
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Parm fields
      *
     D xxhgsn          s                   like(hghgsn)
     D xxdsdt          s                   like(hgdsdt)
     D xxadoi          s                   like(hgadoi)
     D xxadoo          s                   like(hgadoo)
      *
     D xxsdcd          s                   like(sdsdcd)
     D xxsdds          s                   like(sdsdds)
      *
     D xxsxcd          s                   like(sxsxcd)
     D xxsxds          s                   like(sxsxds)
      *
     D xxbscd          s                   like(bsbscd)
     D xxbsds          s                   like(bsbsds)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name msgfil must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   movel     set1          routne
      *
     C                   dow       *inlr = *off                                 Main do
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do
      /EJECT
      *----------------------------------------------------------------
      * Set environment for Screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Incoming mode is always Revise in this funtion. Retrieve database record.
      *
     C     xxhgsn        chain(n)  hsl034d                            92
     C                   if        *in92 = *off                                 If hit
     C                   movel     hgfsbo        d1fsbo
     C                   movel     hghgcd        d1hgcd
     C                   z-add     hghgsn        d1hgsn
     C                   z-add     hgfscd        d1fscd
     C                   movel     hgblcd        d1blcd
     C                   movel     hgrmcd        d1rmcd
     C                   movel     hgptcd        d1ptcd
     C                   movel     hgppcd        d1ppcd
     C                   movel     hggscd        d1gscd
     C                   movel     hggtcd        d1gtcd
     C                   movel     hgsdcd        d1sdcd
     C                   movel     hgbscd        d1bscd
     C                   movel     hggncd        d1gncd
     C                   movel     hgsxcd        d1sxcd
     C                   movel     hgfgcd        d1fgcd
     C                   z-add     hgobfs        d1obfs
     C                   z-add     hgonfs        d1onfs
     C                   z-add     hgadoi        d1adoi
     C                   z-add     hgadoo        d1adoo
      *
      * Retrieve "origin overrides" that the user may have entered.
      *
     C     hghgsn        chain     hsp130                             92
     C                   if        *in92 = *off
     C                   z-add     goobfs        d1obfs
     C                   z-add     goonfs        d1onfs
     C                   endif
      *
      * If this is a wean-to-finish Nursery groups, set on the indicator that
      * will allow user-entry on Stocking Density.
      *
     C                   if        hgppcd = 'NUR  ' and hggtcd = 'W'
     C                   seton                                        65
     C                   endif
      *
      * Execute the subroutine to retrieve various 'descriptions' for the screen.
      *
     C                   exsr      $desc1
      *
      * Flip the dates from CCYYMMDD to MMDDYY for display purposes
      *
      *
     C     *iso          test(d)                 hgcrdt                 92
     C                   if        *in92 = *off
     C                   move      hgcrdt        wkisodate
     C     *mdy          move      wkisodate     d1crmdy
     C                   endif
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off
     C                   move      hgopdt        wkisodate
     C     *mdy          move      wkisodate     d1opmdy
     C                   endif
      *
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *off
     C                   move      hgdsdt        wkisodate
     C     *mdy          move      wkisodate     d1dsmdy
     C                   endif
      *
     C     *iso          test(d)                 hgcldt                 92
     C                   if        *in92 = *off
     C                   move      hgcldt        wkisodate
     C     *mdy          move      wkisodate     d1clmdy
     C                   endif
      *
      * The hog group is not found
      *
     C                   else
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00262'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1hgcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
      *
      * Display the screen.
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for Screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write messages from arrays to message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     hp141k1
     C                   write     hp141ec
     C                   exfmt     hp141r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3=EXIT
     C                   movel     '03'          rtncd
     C                   movel     exit          routne
      *
     C                   when      *in04 = *on                                  F4=PROMPT
     C                   exsr      $f4s1
      *
     C                   when      *in12 = *on                                  F12-PREVIOUS
     C                   movel     '12'          rtncd
     C                   movel     exit          routne
      *
     C                   when      *in05 = *on                                  F5-REFRESH
     C                   movel     set1          routne
     C                   other
      *
      * User has pressed enter
      *
     C                   movel     edit1         routne
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit Screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) stocking density (conditionally for Nursery Wean-to-Finish groups only)
      *   2) breed stock code
      *   3) sex code
      *   4) average days old in
      *
      *
     C                   if        d1ppcd = 'NUR  ' and d1gtcd = 'W'
     C                   exsr      $sdcd
     C                   endif
      *
     C                   exsr      $bscd
     C                   exsr      $sxcd
     C                   exsr      $adoi
      *
      * If there are no errors, attempt the udpate; otherwise, redisplay the screen.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   movel     scrn1         routne
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Validate Stocking Density
      *--------------------------------------------------------------------------------------
      *
      * Stocking Density is only input capable for Nursery WTF groups. So, you will be in
      * this subroutine conditionally.
      *
     C     $sdcd         begsr
      *
     C                   move      *blank        d1sdds
      *
      * We are limiting the valid values to two of the 3 in the master file.
      * So, do some hardcoded checking.
      *
     C                   if        d1sdcd <> 'S' and d1sdcd <> 'D'              If not s/d
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00841'     mgid(e)
     C                   endif
     C                   else
      *
     C     d1sdcd        chain     hsp105                             92
     C                   if        *in92 = *off                                 If OK
     C                   move      sdsdds        d1sdds
     C                   endif                                                  If OK
     C                   endif                                                  If not s/d
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Breed Stock
      *----------------------------------------------------------------
      *
     C     $bscd         begsr
      *
     C                   move      *blank        d1bsds
      *
     C                   select
     C                   when      d1bscd = *blank
     C                   eval      *in36 = *on
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1bscd        chain     hsp031                             92
     C                   if        *in92 = *off                                 If OK
     C                   move      bsbsds        d1bsds
     C                   else
      *
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00251'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1bscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If OK
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate sex
      *----------------------------------------------------------------
      *
     C     $sxcd         begsr
      *
     C                   move      *blank        d1sxds
      *
     C                   select
     C                   when      d1sxcd = *blank
     C                   eval      *in39 = *on
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1sxcd        chain     hsp056                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      sxsxds        d1sxds
     C                   else
      *
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00209'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1sxcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------
      * Average days old in
      *------------------------------------------------------------------------------------
      *
      * We do not allow Average Days Old In for BGF groups. BUT, since:
      *     1) BGF groups are never closed--they can only be Voided and
      *     2) we do not allow the Revise option on Voided Groups
      * we do not expect to ever be in this subroutine for a BGF group! But,
      * we will put in some BGF 'safety' code just in case.
      *
     C     $adoi         begsr
      *
     C                   select                                                 Select 1
     C                   when      d1ppcd = 'BGF  ' and d1adoi <> 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00842'     mgid(e)
     C                   endif
      *
     C                   when      d1ppcd = 'NUR  ' or d1ppcd = 'GF   '
      *
     C                   select                                                 Select 2
     C                   when      d1adoi = 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1adoi < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl                                                  Select 2
      *
     C                   endsl                                                  Select 1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Update database record
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * Retrieve record and lock for update.
      *
     C                   if        error = 0                                    If no errors
     C     xxhgsn        chain     hsl034d                            92
     C                   if        *in92 = *on and error < maxmsg               If not found
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif                                                  If not found
     C                   endif                                                  If no errors
      *
      *--------------------------------------------------------------
      * If there are no errors, update record
      *--------------------------------------------------------------
      *
     C                   if        error = 0                                    If all ok
      *
      * Check if the user changed the Average Days Old In.
      *
     C                   if        d1adoi <> hgadoi
     C                   move      yes           chgadoifl
     C                   else
     C                   move      no            chgadoifl
     C                   endif
      *
      * Update record
     C                   move      d1gtcd        hggtcd
     C                   move      d1bscd        hgbscd
     C                   move      d1sxcd        hgsxcd
     C                   move      d1sdcd        hgsdcd
     C                   z-add     d1adoi        hgadoi
     C                   update    hgrec
      *
      * If the user changed the Average Days Old In, you must recalc the
      * Average Days Old Out.
      *
     C                   if        chgadoifl = yes                              If get adoo
     C     xxhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off                                 If hit
      *
     C                   call      'HPPAGE'
     C                   parm      hghgsn        xxhgsn
     C                   parm      hgdsdt        xxdsdt
     C     hgadoo        parm      0             xxadoo
     C                   parm      0             xxadoi
     C                   update    hgrec
      *
     C                   endif                                                  If hit
     C                   endif                                                  If get adoo
      *
     C                   endif                                                  If all ok
      *
      *  Redisplay the screen if there are errors.
      *  Otherwise, automatically exit the program.
      *
     C                   select
     C                   when      error > 0
     C                   movel     scrn1         routne
     C                   other
     C                   movel     exit          routne
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on Screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Stocking density (only promptable for Nursery Wean-to-Finish Groups)
      *
     C                   select
     C                   when      fld = 'D1SDCD' and d1ppcd = 'NUR  ' and
     C                                   d1gtcd = 'W'
     C                   call      'HP5024'
     C                   parm                    xxsdcd
     C                   parm                    xxsdds
     C                   seton                                        51
     C                   if        xxsdcd <> *blank
     C                   move      xxsdcd        d1sdcd
     C                   move      xxsdds        d1sdds
     C                   endif
      * Breed stock
     C                   when      fld = 'D1BSCD'
     C                   call      'HP516'
     C                   parm      *blank        xxbscd
     C                   parm      *blank        xxbsds
     C                   seton                                        56
     C                   if        xxbscd <> *blank
     C                   move      xxbscd        d1bscd
     C                   move      xxbsds        d1bsds
     C                   endif
      *
      * Sex
     C                   when      fld = 'D1SXCD'
     C                   call      'HP584'
     C                   parm      *blank        xxsxcd
     C                   parm      *blank        xxsxds
     C                   seton                                        59
     C                   if        xxsxcd <> *blank
     C                   move      xxsxcd        d1sxcd
     C                   move      xxsxds        d1sxds
     C                   endif
     C                   other
      *
      * F4 not valid for this field. Issue message.
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
     -/EJECT
      *---------------------------------------------------------------
      * Retrieve descriptions for screen 1 fields
      *---------------------------------------------------------------
      *
     C     $desc1        begsr
      *
      * Farm site name
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel     fsfsnm        d1fsnm
     C                   else
     C                   movel(p)  'Unknown'     d1fsnm
     C                   endif
      *
      * Building description
      *
     C     key01         chain     hsp019                             92
     C                   if        *in92 = *off
     C                   movel     fbblds        d1blds
     C                   else
     C                   movel(p)  'Unknown'     d1blds
     C                   endif
      *
      * Production Type Description
      *
     C     d1ptcd        chain     hsp010                             92
     C                   if        *in92 = *off
     C                   movel     ptptds        d1ptds
     C                   else
     C                   movel(p)  'Unknown'     d1ptds
     C                   endif
      *
      * Production Phase description
      *
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off
     C                   movel     ppppds        d1ppds
     C                   else
     C                   movel(p)  'Unknown'     d1ppds
     C                   endif
      *
      * Group Type Description
      *
     C                   if        d1gtcd <> *blank
     C     d1gtcd        chain     hsp025                             92
     C                   if        *in92 = *off
     C                   movel     gtgtds        d1gtds
     C                   else
     C                   movel(P)  'Unknown'     d1gtds
     C                   endif
     C                   endif
      *
      * Stocking Density Description
      *
     C                   if        d1sdcd <> *blank
     C     d1sdcd        chain     hsp105                             92
     C                   if        *in92 = *off
     C                   movel     sdsdds        d1sdds
     C                   else
     C                   movel(P)  'Unknown'     d1sdds
     C                   endif
     C                   endif
      *
      * Breed Stock description
      *
     C                   if        d1bscd <> *blank
     C     d1bscd        chain     hsp031                             92
     C                   if        *in92 = *off
     C                   move      bsbsds        d1bsds
     C                   else
     C                   movel(p)  'Unknown'     d1bsds
     C                   endif
     C                   endif
      *
      * Sex description
      *
     C                   if        d1sxcd <> *blank
     C     d1sxcd        chain     hsp056                             92
     C                   if        *in92 = *off
     C                   movel     sxsxds        d1sxds
     C                   else
     C                   movel(p)  'Unknown'     d1sxds
     C                   endif
     C                   endif
      *
      *
      * Feed Group descrption
      *
     C                   if        d1fgcd <> *blank
     C     d1fgcd        chain     hsp017                             92
     C                   if        *in92 = *off
     C                   move      fgfgds        d1fgds
     C                   else
     C                   movel(p)  'Unknown'     d1fgds
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF command key
      * record will be set on. So, redisplay the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zeros        error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF command key
      * record will be set on. So, redisplay the screen to the user.
      *
     C                   if        *IN43 = *ON
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Set on 'last record' and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
      *
     C                   seton                                        lr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    d1hgcd
     C                   parm                    xxhgsn
     C                   parm                    rtncd
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1fscd
     C                   kfld                    d1blcd
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
