// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMIVPFR
// ?Date: 14.08.2025 Time: 12:05:36
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History and Comments
//?RMC 02/28/11 E01342 Print Order nbr if load id=0 (not ld planned order)
//?RMC 02/11/11 E01340 Print USA in header for dailys remit to & address,
//?    and print Currency "USD" after total $
//?LJB 03/29/10 P000198  Fax/Emails are now stored in Cust Distri
//?   Entry file. Retrieve 1st fax in TOP section.
//?JRB 05/31/07 DLY029 Replaced case Produced By: with
//?SLM 06/25/07 DLY029 CUSTOM program for Daily's
//?             uses special form and overlays
//?PKD 08/31/07 DLY029 Added prtobj for Shipping dtl accrual to print
//?      at the item detail level and at the Invoice total level.
//?       And Add/sub the $ allowance/disc to the invoice total
//?JJH 07/08/14 E001901 Print Item Resource No in Desc Line 2
//?    LCL.Order Desc. Line Two used with F18 to allow printing
//?    or non-display of Desc line 2.
//?07/08/14 JJH E001901 Print Item Resource No in Desc Line 2
//?                     by Concatenating Resource Item Type Desc
//?                     with Resource Item Number.
//?JJH E4057 04/23/15 - Print Claim Number on Invoice
EXECUTE FUNCTION(RTV Info for Invc Prt  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1324121;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Type_Sales);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Ship_To_Name);
PARAMETER(PAR.Ship_To_Address_Line_1);
PARAMETER(PAR.Ship_To_Address_Line_2);
PARAMETER(PAR.Ship_To_Address_Line_3);
PARAMETER(PAR.Ship_To_City);
PARAMETER(PAR.Ship_To_State_Code);
PARAMETER(PAR.Ship_To_Zip_Postal_Code);
PARAMETER(PAR.Bill_to_Customer);
PARAMETER(PAR.Bill_to_Name);
PARAMETER(PAR.Bill_to_Address_Line_1);
PARAMETER(PAR.Bill_to_Address_Line_2);
PARAMETER(PAR.Bill_to_Address_Line_3);
PARAMETER(PAR.Bill_to_City);
PARAMETER(PAR.Bill_to_State_Code);
PARAMETER(PAR.Bill_to_Zip_Postal_Code);
PARAMETER(PAR.Customer_Purchase_Order_#);
PARAMETER(PAR.Order_Date);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Terms_Code);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Order_Value_Total);
PARAMETER(PAR.Order_Weight_Total);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Sales_Route_Code);
PARAMETER(PAR.Invoice_Number);
PARAMETER(PAR.Invoice_Date);
PARAMETER(PAR.Billing_Activity_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Ensure that there is an invoice date
CASE;

// IF PAR.Invoice Date EQ WRK.ZERO
IF PAR.Invoice_Date = WRK.ZERO;

// PAR.Invoice Date = JOB.*Job date
PAR.Invoice_Date = JOB.*Job_date;

ENDIF;

// PAR.USR Display field = CND.yes
PAR.USR_Display_field = 'Y';

EXECUTE FUNCTION(RTV Last Ord Seqs notX RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1502729;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Retrieve Field Security display flag. If it is "NO" then
//?** do not display selected fields. In this case, do not print
//?** dollar amount fields.                            2/3/2006 LJB
// Call program Rtv Field Security    XF.
CALL PROGRAM(Rtv Field Security    XF) ('PDL1XFR');
PARAMETER(WRK.Display_Flag);

//?USER: Record selection processing

CASE;

// IF PAR.Order Value Total is equal to zero
IF PAR.Order_Value_Total = *ZERO;

// AND PAR.Order Weight Total is Equal to zero
AND PAR.Order_Weight_Total = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

// TOP.Text USR 9 = CON.Remit to:
TOP_Text_USR_9 = 'Remit to:';

// LCL.Text USR 6 = CON.TOTALS
LCL.Text_USR_6 = 'TOTALS';

// LCL.Text USR 7 = CON.AMOUNT
LCL.Text_USR_7 = 'AMOUNT';

//?Get the Company name and address
EXECUTE FUNCTION(RTV Co Addr,Phone,CntryRT) TYPE(RTVOBJ) FILE(CAABREP)          AC1936785;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Telephone_Number_FF);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Country_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(LCL.Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(LCL.City);
PARAMETER(LCL.State_Code);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_21);
PARAMETER(TOP_USR_Compressed_Address_22);
PARAMETER(TOP_USR_Compressed_Address_23);
PARAMETER(TOP_USR_Compressed_Address_24);
PARAMETER(TOP_USR_Compressed_Address_25);
PARAMETER(TOP_USR_Compressed_Address_26);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


// LCL.USR Compressed Address 27 = CONCAT(CON.Tel,LCL.Telephone Number FF,CON.1)
LCL.USR_Compressed_Address_27 = 'Tel' + LCL.Telephone_Number_FF (1);

// LCL.USR Compressed Address 27 = CONCAT(LCL.USR Compressed Address 27,CON.Fax,CON.1)
LCL.USR_Compressed_Address_27 = LCL.USR_Compressed_Address_27 + 'Fax' (1);

// TOP.USR Compressed Address 27 = CONCAT(LCL.USR Compressed Address 27,LCL.Fax Number FF,CON.1)
TOP_USR_Compressed_Address_27 = LCL.USR_Compressed_Address_27 + LCL.Fax_Number_FF (1);

//?If Address 26 is blank
CASE;

// IF TOP.USR Compressed Address 26 is *blank
IF TOP_USR_Compressed_Address_26 = *BLANK;

// TOP.USR Compressed Address 26 = TOP.USR Compressed Address 27
TOP_USR_Compressed_Address_26 = TOP_USR_Compressed_Address_27;

// TOP.USR Compressed Address 27 = CON.*BLANK
TOP_USR_Compressed_Address_27 = *BLANK;

ENDIF;

//?Calculate Due Date.
CASE;

// IF PAR.Billing Activity Type is Credit or Debit Memo
IF PAR.Billing_Activity_Type = '2'/'3';

//?**** CR/DR Memos use the Invoice Date to calc the Due Date. ****
// Call program CLC Terms Values       XF.
CALL PROGRAM(CLC Terms Values       XF) ('CAC9XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Terms_Code);
PARAMETER(WRK.Discount_Due_Date);
PARAMETER(TOP_Due_Date);
PARAMETER(PAR.Invoice_Date);
PARAMETER(PAR.Order_Value_Total);
PARAMETER(WRK.Discount_Amount);

//?Calculate Due Date.
// IF *OTHERWISE
IF *OTHERWISE;

//?**** All others use the Actual Ship Date to calc the Due Date. ****
// Call program CLC Terms Values       XF.
CALL PROGRAM(CLC Terms Values       XF) ('CAC9XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Terms_Code);
PARAMETER(WRK.Discount_Due_Date);
PARAMETER(TOP_Due_Date);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Order_Value_Total);
PARAMETER(WRK.Discount_Amount);

ENDIF;

//?Ensure due date filled
CASE;

// IF TOP.Due Date EQ WRK.ZERO
IF TOP_Due_Date = WRK.ZERO;

// TOP.Due Date = PAR.Invoice Date
TOP_Due_Date = PAR.Invoice_Date;

ENDIF;

//?** Retrieve fax/email from new Cust Distr Entry file   P000198
//?** (this field is hidden on this invoice)
EXECUTE FUNCTION(RTV CDE 1st Fax only  IF) TYPE(EXCINTFUN)                      AC1981538;
PARAMETER(PAR.AR_Customer_Number);
PARAMETER('AR-INVOICE');
PARAMETER(*ZERO);
PARAMETER(WRK.CDE_Name);
PARAMETER(WRK.CDE_Destination);
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV CDE 1st Fax only  RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC1981532;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Distribution_Code);
 PARAMETER(PAR.CDE_Sequence_Number);
 PARAMETER(PAR.CDE_Name);
 PARAMETER(PAR.CDE_Destination);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?Return 1st active record with a fax number
  CASE;

  // IF DB1.CDE Destination Type is Fax
  IF DB1.CDE_Destination_Type = 'F';

  CASE;

  // IF DB1.Record Status is Active
  IF DB1.Record_Status = 'A';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

  ENDIF;

 }

}


//?** Print 1st fax number from Cust Distr Entry file    P000198
CASE;

// IF WRK.CDE Destination is Blanks
IF WRK.CDE_Destination = *BLANK;

// TOP.Credit Contact Fax Number = CND.Equal to blanks
TOP_Credit_Contact_Fax_Number = *BLANK;

//?** Print 1st fax number from Cust Distr Entry file    P000198
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Credit Contact Fax Number = WRK.CDE Destination
TOP_Credit_Contact_Fax_Number = WRK.CDE_Destination;

ENDIF;

// TOP.A/R Customer Number = PAR.A/R Customer Number
TOP_AR_Customer_Number = PAR.AR_Customer_Number;

// TOP.Order Number = PAR.Order Number
TOP_Order_Number = PAR.Order_Number;

// TOP.Load ID = PAR.Load ID
TOP_Load_ID = PAR.Load_ID;

// TOP.Text 3 Length USR = CON.*BLANK
TOP_Text_3_Length_USR = *BLANK;

CASE;

// IF TOP.Load ID is Blank
IF TOP_Load_ID = *ZERO;

// TOP.Load ID = TOP.Order Number
TOP_Load_ID = TOP_Order_Number;

// TOP.Text 3 Length USR = CON.OR#
TOP_Text_3_Length_USR = 'OR#';

ENDIF;

// TOP.Sales Route Code = PAR.Sales Route Code
TOP_Sales_Route_Code = PAR.Sales_Route_Code;

// TOP.Order Date = PAR.Order Date
TOP_Order_Date = PAR.Order_Date;

// TOP.Actual Shipped Date = PAR.Actual Shipped Date
TOP_Actual_Shipped_Date = PAR.Actual_Shipped_Date;

// TOP.Invoice Number = PAR.Invoice Number
TOP_Invoice_Number = PAR.Invoice_Number;

// TOP.Invoice Date = PAR.Invoice Date
TOP_Invoice_Date = PAR.Invoice_Date;

// TOP.Customer Purchase Order # = PAR.Customer Purchase Order #
TOP_Customer_Purchase_Order_# = PAR.Customer_Purchase_Order_#;

// TOP.Bill to Customer = DB1.Bill to Customer
TOP_Bill_to_Customer = DB1.Bill_to_Customer;

// TOP.Ship To Customer = DB1.Ship To Customer
TOP_Ship_To_Customer = DB1.Ship_To_Customer;

//?4/25/05 print carrier name starting with pos. 6 - dont print scac code
EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(PAR.Carrier_Code);
PARAMETER(WRK.Name);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function *Move-Right.
EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
PARAMETER(WRK.Text_1_USR);
PARAMETER(WRK.Name);
{
 C                     MOVE #IPANA    #OO9NA
}


// TOP.USR Carrier Short = WRK.Text 1 USR
TOP_USR_Carrier_Short = WRK.Text_1_USR;

EXECUTE FUNCTION(RTV Retrieve Terms     RT) TYPE(RTVOBJ) FILE(CAAOREP)          AC1255765;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Terms_Code);
PARAMETER(TOP_USR_Terms_Desc_Short);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?4/17/02 Use Bill to Remittance Flag, instead of Ship To
EXECUTE FUNCTION(RTV Alt Remittance Flg RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1348485;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Bill_to_Customer);
PARAMETER(PAR.Alt_Remittance_Flag);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Country Code       RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1395144;
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(LCL.Country_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(LCL.Country_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(PAR.Bill_to_Name);
PARAMETER(PAR.Bill_to_Address_Line_1);
PARAMETER(PAR.Bill_to_Address_Line_2);
PARAMETER(PAR.Bill_to_Address_Line_3);
PARAMETER(PAR.Bill_to_City);
PARAMETER(PAR.Bill_to_State_Code);
PARAMETER(PAR.Bill_to_Zip_Postal_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_1);
PARAMETER(TOP_USR_Compressed_Address_2);
PARAMETER(TOP_USR_Compressed_Address_3);
PARAMETER(TOP_USR_Compressed_Address_4);
PARAMETER(TOP_USR_Compressed_Address_5);
PARAMETER(TOP_USR_Compressed_Address_16);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


EXECUTE FUNCTION(RTV Country/ItemRefSts RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1631724;
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(LCL.Country_Code);
PARAMETER(LCL.Item_Reference_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(LCL.Country_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(PAR.Ship_To_Name);
PARAMETER(PAR.Ship_To_Address_Line_1);
PARAMETER(PAR.Ship_To_Address_Line_2);
PARAMETER(PAR.Ship_To_Address_Line_3);
PARAMETER(PAR.Ship_To_City);
PARAMETER(PAR.Ship_To_State_Code);
PARAMETER(PAR.Ship_To_Zip_Postal_Code);
PARAMETER(WRK.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_6);
PARAMETER(TOP_USR_Compressed_Address_7);
PARAMETER(TOP_USR_Compressed_Address_8);
PARAMETER(TOP_USR_Compressed_Address_9);
PARAMETER(TOP_USR_Compressed_Address_10);
PARAMETER(TOP_USR_Compressed_Address_17);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


EXECUTE FUNCTION(Rtv A/R Remittance    RT) TYPE(RTVOBJ) FILE(POA7REP)           AC1621765;
PARAMETER(PAR.Alt_Remittance_Flag);
PARAMETER(PAR.Name);
PARAMETER(PAR.Address_Line_1);
PARAMETER(PAR.Address_Line_2);
PARAMETER(PAR.Address_Line_3);
PARAMETER(PAR.City);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Zip_Postal_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Execute function RTV Comprs Nme/Add/CtryUS.
EXECUTE FUNCTION(RTV Comprs Nme/Add/CtryUS) TYPE(EXCUSRSRC) ('PDRYUFR');
PARAMETER(PAR.Name);
PARAMETER(PAR.Address_Line_1);
PARAMETER(PAR.Address_Line_2);
PARAMETER(PAR.Address_Line_3);
PARAMETER(PAR.City);
PARAMETER(PAR.State_Code);
PARAMETER(PAR.Zip_Postal_Code);
PARAMETER(LCL.Country_Description);
PARAMETER(TOP_USR_Compressed_Address_11);
PARAMETER(TOP_USR_Compressed_Address_12);
PARAMETER(TOP_USR_Compressed_Address_13);
PARAMETER(TOP_USR_Compressed_Address_14);
PARAMETER(TOP_USR_Compressed_Address_15);
PARAMETER(WRK.USR_Country_Description);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


// TOP.Billing Activity Desc = Condition name of PAR.Billing Activity Type
TOP_Billing_Activity_Desc = RTVCND(PAR.Billing_Activity_Type);

//?quit if order/weight total are zeros
CASE;

// IF PAR.Order Value Total is equal to zero
IF PAR.Order_Value_Total = *ZERO;

// AND PAR.Order Weight Total is Equal to zero
AND PAR.Order_Weight_Total = *ZERO;

QUIT;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

//?USER: On print of detail format

//?set attr. so fax number only prints on page 1
// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Invc/MemoHdrComCustPO
EXECUTE FUNCTION(PRT Inv/MemoHdrCommDly PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER('IN');
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


//?Embedded PRTOBJ : PRT Invc/MemoDtlCst8LPIPO
EXECUTE FUNCTION(PRT Inv/MemoDtlDly8LPI PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(CUR.Billing_Activity_Type);
PARAMETER(NXT.USR_Quantity);
PARAMETER(NXT.USR_Quantity_Shipped_102);
PARAMETER(NXT.USR_Weight_102);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(LCL.Item_Reference_Status);
{
 * Use this function to compress name/address information
 *
 E                    UAD         6 34               Name/Address
 *
 C                     MOVEL#IADTX    UUADTX           Name
 C                     MOVEL#IACNA    UUACNA           Address 1
 C                     MOVEL#IADNA    UUADNA           Address 2
 C                     MOVEL#IAENA    UUAENA           Address 3
 C                     MOVEL#IAJNA    UUAJNA           City
 C                     MOVEL#IEINA    UUEINA           State
 C                     MOVEL#IBTTX    UUBTTX           Zip
 C                     MOVEL#IDATX    UUDATX           Country
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C                     MOVELUAD,6     #OKSTX
 C           UJ1UF     BEGSR
 *============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
 *============================================================
 *
 C           *LIKE     DEFN #IADTX    UUADTX
 C           *LIKE     DEFN #IACNA    UUACNA
 C           *LIKE     DEFN #IADNA    UUADNA
 C           *LIKE     DEFN #IAENA    UUAENA
 C           *LIKE     DEFN #IAJNA    UUAJNA
 C           *LIKE     DEFN #IEINA    UUEINA
 C           *LIKE     DEFN #IBTTX    UUBTTX- 1
 C           *LIKE     DEFN #IDATX    UUDATX
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUUADTX    UAD,UX
 C                     ADD  1         UX
 C           UUACNA    IFNE *BLANK
 C                     MOVELUUACNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUADNA    IFNE *BLANK
 C                     MOVELUUADNA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UUAENA    IFNE *BLANK
 C                     MOVELUUAENA    UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UUCSTZ 34
 C                     MOVELUUAJNA    UUCST  23
 C                     MOVE UUEINA    UUCST
 C                     MOVELUUCST     UUCSTZ
 C                     MOVE UUBTTX    UUCSTZ
 C                     MOVELUUCSTZ    UAD,UX
 C           UUDATX    IFNE *BLANK
 C                     ADD  1         UX
 C                     MOVELUUDATX    UAD,UX
 C                     END
 C                     ENDSR
}


//?USER: Process after print of detail format

CASE;

// IF PAR.Printed Status is no
IF PAR.Printed_Status = 'N';

//?** Set Fax Invoice Flag so the wf record isn't
//?** deleted before it is faxed or emailed.             P000198
// PAR.Fax Invoice Flag = CND.Automatically Fax Invoice
PAR.Fax_Invoice_Flag = 'Y';

EXECUTE FUNCTION(CRT PD Invoice List Wk CR) TYPE(CRTOBJ) FILE(PDJ4CPP)          AC1339739;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(CUR.Order_Number);
PARAMETER(DB1.Order_Value_Total);
PARAMETER(DB1.Order_Weight_Total);
PARAMETER(DB1.Ship_To_Name);
PARAMETER(DB1.Bill_to_Name);
PARAMETER(PAR.Fax_Invoice_Flag);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Invoice_Number);
PARAMETER(DB1.Invoice_Suffix);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


ENDIF;

//?USER: Print required level totals

CASE;

IF NEW Company_Number;
//?Print Original Inv and Order if CM/DM      7/23/02
CASE;

// IF CUR.Billing Activity Type is Credit or Debit Memo
IF CUR.Billing_Activity_Type = '2'/'3';

//?Print Original Inv and Order if CM/DM      7/23/02
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

ENDIF;

// Print Accounting Company Number totals format
PRINT Accounting Company Number totals format;

//?Embedded PRTOBJ : Prt AddOn/Allow Total PO
EXECUTE FUNCTION(Prt AddOn/Allow Total PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER('IN');
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


// NXT.USR Quantity = CUR.USR Quantity
NXT.USR_Quantity = CUR.USR_Quantity;

// NXT.USR Quantity Shipped 10,2 = CUR.USR Quantity Shipped 10,2
NXT.USR_Quantity_Shipped_102 = CUR.USR_Quantity_Shipped_102;

// NXT.USR Weight 10,2 = CUR.USR Weight 10,2
NXT.USR_Weight_102 = CUR.USR_Weight_102;

ENDIF;

//?PRTOBJ calls before print of final totals format

//?Embedded PRTOBJ : PRT BrkOnInv/Cust      PO
EXECUTE FUNCTION(PRT Inv/MemoBrk Dly    PO) TYPE(PRTOBJ);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?USER: On print of final totals format

//?Invoice type
CASE;

// IF PAR.@Invoice Type is Customer
IF PAR.@Invoice_Type = 'CS';

// CUR.Description 21A Usr = CON.CUSTOMER COPY
CUR.Description_21A_Usr = 'CUSTOMER COPY';

//?Invoice type
// IF PAR.@Invoice Type is Office
IF PAR.@Invoice_Type = 'OF';

// CUR.Description 21A Usr = CON.OFFICE COPY
CUR.Description_21A_Usr = 'OFFICE COPY';

//?Invoice type
// IF PAR.@Invoice Type is Orignal
IF PAR.@Invoice_Type = 'OR';

// CUR.Description 21A Usr = CON.ORIGINAL COPY
CUR.Description_21A_Usr = 'ORIGINAL COPY';

ENDIF;

CASE;

// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// CUR.Order Value Total = CON.*ZERO - PAR.Order Value Total
CUR.Order_Value_Total = *ZERO - PAR.Order_Value_Total;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Order Value Total = PAR.Order Value Total
CUR.Order_Value_Total = PAR.Order_Value_Total;

ENDIF;

EXECUTE FUNCTION(Rtv Inv AddOn/Allow   RT) TYPE(RTVOBJ) FILE(OMHRCPP)           AC1844822;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.USR_Amount_Applied);
{
 //?USER: Initialize routine

 // PAR.USR Amount Applied = CON.*ZERO
 PAR.USR_Amount_Applied = *ZERO;

 //?USER: Process Data record

 // PAR.USR Amount Applied = PAR.USR Amount Applied + DB1.Extended Amount
 PAR.USR_Amount_Applied = PAR.USR_Amount_Applied + DB1.Extended_Amount;

}


// CUR.Order Value Total = CUR.Order Value Total + LCL.USR Amount Applied
CUR.Order_Value_Total = CUR.Order_Value_Total + LCL.USR_Amount_Applied;

// CUR.Currency USD = CON.USD
CUR.Currency_USD = 'USD';

// CUR.Text USR 6 = LCL.Text USR 6
CUR.Text_USR_6 = LCL.Text_USR_6;

// CUR.Text USR 7 = LCL.Text USR 7
CUR.Text_USR_7 = LCL.Text_USR_7;

//?USER: Process after print of final totals format

// LCL.Reprint Status USR = PAR.Printed Status
LCL.Reprint_Status_USR = PAR.Printed_Status;

CASE;

// IF LCL.Reprint Status USR is Reprint
IF LCL.Reprint_Status_USR = 'R';

EXECUTE FUNCTION(DLT PD Invoice List Wk DL) TYPE(DLTOBJ) FILE(PDJ4CPP)          AC1339741;
PARAMETER(PAR.Job_Name_CDE);
PARAMETER(PAR.Order_Number);

ENDIF;

RETURN;

