      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: GF Groups--Sow/Sire Summary
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/20/01
      *
      * FUNCTION:    This function builds the summarized sow/sire records for each
      *              grow finish group. So, at the end, the file holds 1 record for
      *              each unique combination of: group/origin farm/sire line
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/27/05  LeAnne Fedor
      *           Recompile only. Two new fields (sire line company, prime line)
      *           added to Sire Line file.
      *
      * 06/29/05  LeAnne Fedor
      *           Rewrote. The input files are now HSP353 and the new file HSP3312
      *           instead of HSP328 and HSP329.
      *
      * 03/05/08  LeAnne Ramsey
      *           Added "Origin BGF Cell" to file:
      *                HSP331   Grow Finish Groups--Sow Sire Summary
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsl3312a  if   e           k disk
      *  Workfile: GF Groups--Sow/sire detail
      *
      *
     Fhsp353    if   e           k disk
      *  BGF-to-GF Transfers--Sow/sire summary
      *
      *
     Fhsp331    uf a e           k disk
      *  Workfile: GF Groups--Sow/sire summary
      *
      *
     Fhsl331a   if   e           k disk    rename(w7rec:w7reca) prefix(p1)
      *  Workfile: GF Groups--Sow/sire summary
      *
      *
     Fhsl331b   uf   e           k disk    rename(w7rec:w7recb)
      *  Workfile: GF Groups--Sow/sire summary
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svhgsn          s                   like(w7hgsn)
     D svhgcd          s                   like(w7hgcd)
     D svfscd          s                   like(w7fscd)
     D svcell          s                   like(w7cell)
     D svppcd          s                   like(w7ppcd)
     D svorfscd        s                   like(w7orfscd)
     D svsicd          s                   like(w7sicd)
     D svgg0           s                   like(w7gg0)
      *
      *
      * Workfields
      *
     D wktotrchd       s                   like(whrchd)
     D wkrchd          s                   like(whrchd)
     D wkhd            s                   like(whrchd)
     D wkpr            s             15  8
     D wkrempr         s              5  2
     D wkcnt           s              3  0
     D wktotcnt        s              3  0
     D wksysdt         s              8  0
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      * Define parms for the generic movement program
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each record in the GF Group-Sow/Sire Detail file.
      *
     C                   exsr      $step1
      *
      * Process each record in the BGF-to-GF Transfers--Sow/Sire Summary file.
      *
     C                   exsr      $step2
      *
      * Account for all received head
      *
     C                   exsr      $step3
      *
      * Calculate dose percents
      *
     C                   exsr      $step4
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------
      * Step 1: Process GF Group-Sow/Sire Detail file
      *----------------------------------------------------------------
      *
     C     $step1        begsr
      *
     C     *loval        setll     hsl3312a
      *
     C                   dou       *in90 = *on                                  Step 1 loop
     C                   read      hsl3312a                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Break logic
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $sv3312
      *
     C                   when      whdnhgsn <> svhgsn or
     C                             whorfscd <> svorfscd or
     C                             whsicd   <> svsicd
     C                   exsr      $updwrt331
     C                   exsr      $sv3312
     C                   endsl
      *
      * Detail processing: Accumulate Received Head
      *
     C                   add       whrchd        wkrchd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 1 loop
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $updwrt331
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save fields from GF Group-Sow/Sire Detail file
      *----------------------------------------------------------------
      *
     C     $sv3312       begsr
      *
     C                   z-add     whdnhgsn      svhgsn
     C                   move      whdnhgcd      svhgcd
     C                   z-add     whdnfscd      svfscd
     C                   z-add     whdncell      svcell
     C                   move      whdnppcd      svppcd
      *
     C                   z-add     whorfscd      svorfscd
     C                   move      whsicd        svsicd
     C                   move      whgg0         svgg0
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Step 2: Process BGF-to-GF Transfer Sow/Sire Summary record
      *----------------------------------------------------------------
      *
     C     $step2        begsr
      *
     C     *loval        setll     hsp353
     C                   move      yes           first
     C                   z-add     0             wkrchd
      *
     C                   dou       *in91 = *on                                  Step 2 loop
     C                   read      hsp353                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Break logic
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $sv353
      *
     C                   when      wdhgsn <> svhgsn or
     C                             wdorfscd <> svorfscd or
     C                             wdsicd   <> svsicd
     C                   exsr      $updwrt331
     C                   exsr      $sv353
     C                   endsl
      *
      * Detail processing: Accumulate Received Head
      *
     C                   add       wdrchd        wkrchd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 1 loop
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $updwrt331
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save fields from BGF-to-GF Transfers--Sow/Sire Summary
      *----------------------------------------------------------------
      *
     C     $sv353        begsr
      *
     C                   z-add     wdhgsn        svhgsn
     C                   move      wdhgcd        svhgcd
     C                   z-add     wdfscd        svfscd
     C                   z-add     wdcell        svcell
     C                   move      wdppcd        svppcd
      *
     C                   z-add     wdorfscd      svorfscd
     C                   move      wdsicd        svsicd
     C                   move      wdgg0         svgg0
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Update/write a record to GF Groups--Sow/Sire Summary
      *----------------------------------------------------------------
      *
     C     $updwrt331    begsr
      *
      *
     C     key01         chain     hsp331                             92
     C                   if        *in92 = *on                                  If not found
      *
      * Retrieve Origin BGF Cell
      *
     C     svorfscd      chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        w7orcell
     C                   else
     C                   z-add     0             w7orcell
     C                   endif
      *
     C                   z-add     svhgsn        w7hgsn
     C                   move      svhgcd        w7hgcd
     C                   move      svppcd        w7ppcd
     C                   z-add     svfscd        w7fscd
     C                   z-add     svcell        w7cell
     C                   z-add     svorfscd      w7orfscd
     C                   move      svsicd        w7sicd
     C                   move      svgg0         w7gg0
     C                   z-add     wkrchd        w7rchd
     C                   write     w7rec
     C                   else
      *
     C                   add       wkrchd        w7rchd
     C                   update    w7rec
     C                   endif                                                  If not found
      *
     C                   z-add     0             wkrchd
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Step 3: Account for all Received Head
      *-------------------------------------------------------------------------------------
      *
      * To make our dose percents come out correctly in Step4, we need to account for
      * all the received head.
      *
     C     $step3        begsr
      *
     C                   move      yes           first
     C                   z-add     0             wkhd
     C     *loval        setll     hsl331a
      *
     C                   dou       *in91 = *on                                  Do step 3
     C                   read      hsl331a                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * New group
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $sv331a
      *
     C                   when      p1w7hgsn  <> svhgsn
     C                   exsr      $allhogs
     C                   endsl
      *
      * Detail processing
      *
     C                   add       p1w7rchd      wkhd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do step 3
      *
      * Last record processing for last group
      *
     C                   if        first = no
     C                   exsr      $allhogs
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save the control fields
      *----------------------------------------------------------------
      *
     C     $sv331a       begsr
      *
     C                   z-add     p1w7hgsn      svhgsn
     C                   move      p1w7hgcd      svhgcd
     C                   move      p1w7ppcd      svppcd
     C                   z-add     p1w7fscd      svfscd
     C                   z-add     p1w7cell      svcell
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Update Sow/Sire Detail records.
      *---------------------------------------------------------------------
      *
     C     $allhogs      begsr
      *
      * Retrieve the 'Total Head Received' into this group as of the system date.
      *
     C                   z-add     0             wkrchd
     C                   call      'HPMOVE'      plist01
     C     qinhd         add       rinhd         wkrchd
      *
      *
      * Compare the 'Total Head Received' and the Accumulated Received Head from
      * the sow/sire records just processed--we want to account for all received
      * head. If there is a difference, write/update a record. If they are equal.
      * go delete any records with zero head.
      *
     C                   select
     C                   when      wkrchd = wkhd
     C                   exsr      $dlt331
      *
     C                   when      wkrchd > wkhd
     C     wkrchd        sub       wkhd          wkrchd
     C                   move      'UNK??'       svsicd
     C                   move      'UNK??'       svgg0
     C                   z-add     0             svorfscd
     C                   exsr      $updwrt331
     C                   endsl
      *
      * Clear accumulator and save control fields
      *
     C                   z-add     0             wkhd
     C                   exsr      $sv331a
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------
      * If all hogs are accounted for, delete any records with zero head
      *---------------------------------------------------------------------------------
      *
     C     $dlt331       begsr
      *
     C     svhgsn        setll     hsp331
      *
     C                   dou       *in94 = *on                                  Do loop
     C     svhgsn        reade     hsp331                                 94
     C                   if        *in94 = *off and w7rchd = 0                  If not EOF
     C                   delete    w7rec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Step 4: Calculate the Dose Percent for each Summary record
      *----------------------------------------------------------------
      *
     C     $step4        begsr
      *
     C                   z-add     0             svhgsn
     C     *loval        setll     hsl331b
      *
     C                   dou       *in93 = *on                                  Step 4 loop
     C                   read      hsl331b                                93
     C                   if        *in93 = *off                                 If not EOF
      *
      * For each 'new' group, retrieve the total received head.
      *
     C                   if        w7hgsn <> svhgsn
     C                   exsr      $rchd
     C                   endif
      *
      * Calculate the percent of Total Received Head represented by this record.
      *
     C                   add       1             wkcnt
      *
     C                   select
     C                   when      w7rchd = 0
      *
     C                   when      wktotcnt = wkcnt
     C                   z-add     wkrempr       w7dopr
      *
     C                   when      wktotrchd <> 0
     C     w7rchd        div       wktotrchd     wkpr
     C     wkpr          mult(h)   100           w7dopr
     C                   sub       w7dopr        wkrempr
     C                   endsl
      *
      * Update
     C                   z-add     wktotcnt      w7sino
     C                   update    w7recb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 4 loop
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Accumulate Head Received into this group
      *----------------------------------------------------------------
      *
     C     $rchd         begsr
      *
     C                   z-add     0             wktotrchd
     C                   z-add     0             wkrchd
     C                   z-add     0             wktotcnt
     C                   z-add     0             wkcnt
     C                   z-add     100           wkrempr
      *
     C     w7hgsn        setll     hsl331a
      *
     C                   dou       *in94 = *on                                  Do loop
     C     w7hgsn        reade     hsl331a                                94
     C                   if        *in94 = *off                                 If not EOF
     C                   add       p1w7rchd      wktotrchd
     C                   add       1             wktotcnt
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   z-add     w7hgsn        svhgsn
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    svhgsn
     C                   parm                    wksysdt
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
     C     key01         klist
     C                   kfld                    svhgsn
     C                   kfld                    svsicd
     C                   kfld                    svorfscd
      *
      * Put system date into work field.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
      *
      *
     C                   endsr
      /EJECT
