     H/TITLE WW Product Avail-3Wks DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/23/10  Time  : 09:04:11
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPNLODFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Product Avail-3Wks DF  Display file
      *
     FPDKLREL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Company Item Avail Group  Retrieval index
      *
     FCAADRELBIF  E           K        DISK
      * RSQ : Warehouse                 AcctCo/Warehouse
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FPDNFREL1IF  E           K        DISK
      * RTV : Salesperson Electronic CM Retrieval index
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDKLREL3IF  E           K        DISK
      * RSQ : Company Item Avail Group  Co/Group/Item
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL6IF  E           K        DISK
      * RSQ : Warehouse                 Typ/Whs
      *
     FPDI8CPLCIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      *
     FOPBGWKLVIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAAFREL7IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Yr/Period/Week/Da
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FPDKNCPL5IF  E           K        DISK
      * RSQ : Order Detail Schedule     Co/Item/Whse/SchdDte
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FPOB5CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Itm/Whs/PDte/Ord
      *
     FOPBGWKLTIF  E           K        DISK
      * RSQ : Order Detail              Co/Item/Whse/SchdShpDt
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAAFRELBIF  E           K        DISK
      * RSQ : Calendar                  Co/Year/Week#/Date
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 051  5 0A
     E                    W0END   7 051  5 0A
     E                    W0NAM   7 051 10
      * Long constants
     E                    @CN#    1   3  6   @CN    25
     E                    YK01      100 12  D            PA Work Array f
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@KLREY4
      * Company Item Avail Group  Co/Group/Item
      * Renamed input format fields
     I              KLAIC3                          WCAIC3
     I              KLHGCD                          WCHGCD
     I              KLV4CD                          WCV4CD
     I              KLIDSQ                          WCIDSQ
     I              KLUVST                          WCUVST
     I              KLUWST                          WCUWST
     I              KLUXST                          WCUXST
     I              KLVSST                          WCVSST
     I              KLAATM                          WCAATM
     I              KLAYNA                          WCAYNA
     I              KLA0NA                          WCA0NA
     I              KLAXDT                          WCAXDT
      *
     I@ADREOJ
      * Warehouse                 Typ/Whs
      * Renamed input format fields
     I              ADAJCD                          WDAJCD
     I              ADF8NA                          WDF8NA
     I              ADACNA                          WDACNA
     I              ADADNA                          WDADNA
     I              ADAENA                          WDAENA
     I              ADAJNA                          WDAJNA
     I              ADBTTX                          WDBTTX
     I              ADAOCD                          WDAOCD
     I              ADBGCD                          WDBGCD
     I              ADVHST                          WDVHST
     I              ADMPNA                          WDMPNA
     I              ADWPST                          WDWPST
     I              ADXUST                          WDXUST
     I              ADT0ST                          WDT0ST
     I              ADT1ST                          WDT1ST
     I              ADDBNB                          WDDBNB
     I              ADT2ST                          WDT2ST
     I              ADT3ST                          WDT3ST
     I              ADT4ST                          WDT4ST
     I              ADT6ST                          WDT6ST
     I              ADBWC3                          WDBWC3
     I              ADBTC3                          WDBTC3
     I              ADBUC3                          WDBUC3
     I              ADBVC3                          WDBVC3
     I              ADFCAA                          WDFCAA
     I              ADRQSX                          WDRQSX
     I              ADRRSX                          WDRRSX
     I              ADRSSX                          WDRSSX
     I              ADRTSX                          WDRTSX
     I              ADT7ST                          WDT7ST
     I              ADT8ST                          WDT8ST
     I              ADRNSX                          WDRNSX
     I              ADROSX                          WDROSX
     I              ADRPSX                          WDRPSX
     I              ADUVST                          WDUVST
     I              ADUWST                          WDUWST
     I              ADUXST                          WDUXST
     I              ADVSST                          WDVSST
     I              ADAATM                          WDAATM
     I              ADAYNA                          WDAYNA
     I              ADA0NA                          WDA0NA
     I              ADAXDT                          WDAXDT
      *
     I@AFREQ0
      * Calendar                  RSQ Co/Yr/Period/Week/Da
      * Renamed input format fields
     I              AFAIC3                          WFAIC3
     I              AFBCDT                          WFBCDT
     I              AFCQNB                          WFCQNB
     I              AFESNB                          WFESNB
     I              AFETNB                          WFETNB
     I              AFBZNB                          WFBZNB
     I              AFA9ST                          WFA9ST
     I              AFEINB                          WFEINB
     I              AFC5ST                          WFC5ST
     I              AFAQNB                          WFAQNB
     I              AFCMST                          WFCMST
     I              AFV9ST                          WFV9ST
     I              AFWAST                          WFWAST
     I              AFX2ST                          WFX2ST
     I              AFOJDT                          WFOJDT
     I              AFNQNX                          WFNQNX
     I              AFNRNX                          WFNRNX
     I              AFI9SX                          WFI9SX
     I              AFJASX                          WFJASX
     I              AFOKDT                          WFOKDT
     I              AFOLDT                          WFOLDT
     I              AFUVST                          WFUVST
     I              AFUWST                          WFUWST
     I              AFUXST                          WFUXST
     I              AFAATM                          WFAATM
     I              AFAYNA                          WFAYNA
     I              AFA0NA                          WFA0NA
     I              AFAXDT                          WFAXDT
      *
     I@KNCPZ7
      * Order Detail Schedule     Co/Item/Whse/SchdDte
      * Renamed input format fields
     I              KNAIC3                          WGAIC3
     I              KNC4NB                          WGC4NB
     I              KNDPNB                          WGDPNB
     I              KNUENB                          WGUENB
     I              KNJGDT                          WGJGDT
     I              KNAODT                          WGAODT
     I              KNAJCD                          WGAJCD
     I              KNAYAA                          WGAYAA
     I              KNHGCD                          WGHGCD
     I              KNIGQT                          WGIGQT
     I              KNFLWG                          WGFLWG
     I              KNIUQT                          WGIUQT
     I              KNF3WG                          WGF3WG
     I              KNIVQT                          WGIVQT
     I              KNF4WG                          WGF4WG
     I              KNP7ST                          WGP7ST
     I              KNP8ST                          WGP8ST
     I              KNQAST                          WGQAST
     I              KNUVST                          WGUVST
     I              KNUWST                          WGUWST
     I              KNUXST                          WGUXST
     I              KNVSST                          WGVSST
     I              KNAATM                          WGAATM
     I              KNAYNA                          WGAYNA
     I              KNA0NA                          WGA0NA
     I              KNAXDT                          WGAXDT
      *
     I@I8CPXP
      * PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WHAIC3
     I              I8V5ST                          WHV5ST
     I              I8ELDT                          WHELDT
     I              I8HGCD                          WHHGCD
     I              I8AJCD                          WHAJCD
     I              I8GPDT                          WHGPDT
     I              I8WTSP                          WHWTSP
     I              I8QTSP                          WHQTSP
     I              I8DJPC                          WHDJPC
     I              I8F8WG                          WHF8WG
     I              I8WTIN                          WHWTIN
     I              I8D5NB                          WHD5NB
     I              I8DXWG                          WHDXWG
     I              I8B2NB                          WHB2NB
     I              I8WTCN                          WHWTCN
     I              I8PSCV                          WHPSCV
     I              I8SAWT                          WHSAWT
     I              I8B9NB                          WHB9NB
     I              I8D1WG                          WHD1WG
     I              I8CBNB                          WHCBNB
     I              I8EZWG                          WHEZWG
     I              I8CCNB                          WHCCNB
     I              I8E0WG                          WHE0WG
     I              I8D6NB                          WHD6NB
     I              I8OAWT                          WHOAWT
     I              I8CDNB                          WHCDNB
     I              I8UNW2                          WHUNW2
     I              I8CENB                          WHCENB
     I              I8F9WG                          WHF9WG
     I              I8BPNB                          WHBPNB
     I              I8GAWG                          WHGAWG
     I              I8BQNB                          WHBQNB
     I              I8GBWG                          WHGBWG
     I              I8BRNB                          WHBRNB
     I              I8GCWG                          WHGCWG
     I              I8BSNB                          WHBSNB
     I              I8GDWG                          WHGDWG
     I              I8BWNB                          WHBWNB
     I              I8GEWG                          WHGEWG
     I              I8PS6U                          WHPS6U
     I              I8WCST                          WHWCST
     I              I8WPST                          WHWPST
     I              I8B5ST                          WHB5ST
     I              I8TFST                          WHTFST
     I              I8TEST                          WHTEST
     I              I8THST                          WHTHST
     I              I8UDST                          WHUDST
     I              I8UFST                          WHUFST
     I              I8UGST                          WHUGST
     I              I8UHST                          WHUHST
     I              I8B6ST                          WHB6ST
     I              I8B7ST                          WHB7ST
     I              I8DVWG                          WHDVWG
     I              I8D7NB                          WHD7NB
     I              I8FCAD                          WHFCAD
     I              I8D9NB                          WHD9NB
     I              I8DWWG                          WHDWWG
     I              I8EANB                          WHEANB
     I              I8SHWT                          WHSHWT
     I              I8EBNB                          WHEBNB
     I              I8AVWT                          WHAVWT
     I              I8ECNB                          WHECNB
     I              I8WTON                          WHWTON
     I              I8EDNB                          WHEDNB
     I              I8FNWT                          WHFNWT
     I              I8EENB                          WHEENB
     I              I8QTAS                          WHQTAS
     I              I8EFNB                          WHEFNB
     I              I8WAIO                          WHWAIO
     I              I8EGNB                          WHEGNB
     I              I8R3CD                          WHR3CD
     I              I8RGNB                          WHRGNB
     I              I8RHNB                          WHRHNB
     I              I8RINB                          WHRINB
     I              I8XRCD                          WHXRCD
     I              I8UVST                          WHUVST
     I              I8UWST                          WHUWST
     I              I8UXST                          WHUXST
     I              I8VSST                          WHVSST
     I              I8AATM                          WHAATM
     I              I8AYNA                          WHAYNA
     I              I8A0NA                          WHA0NA
     I              I8AXDT                          WHAXDT
      *
     I@BGWKKG
      * Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      * Renamed input format fields
     I              OMAIC3                          WIAIC3
     I              OMC4NB                          WIC4NB
     I              OMDPNB                          WIDPNB
     I              OMUENB                          WIUENB
     I              OMHGCD                          WIHGCD
     I              OMAJCD                          WIAJCD
     I              OMBKC7                          WIBKC7
     I              OMCFC7                          WICFC7
     I              OMGMST                          WIGMST
     I              OMGNST                          WIGNST
     I              OMMAVA                          WIMAVA
     I              OMKDVA                          WIKDVA
     I              OML8VA                          WIL8VA
     I              OML9VA                          WIL9VA
     I              OMGTST                          WIGTST
     I              OMGVST                          WIGVST
     I              OMGUST                          WIGUST
     I              OMQFST                          WIQFST
     I              OMAYVA                          WIAYVA
     I              OMEXDT                          WIEXDT
     I              OMLQCD                          WILQCD
     I              OMRDCD                          WIRDCD
     I              OMQ7CD                          WIQ7CD
     I              OMBZPR                          WIBZPR
     I              OML6NB                          WIL6NB
     I              OMU1ST                          WIU1ST
     I              OMGIDT                          WIGIDT
     I              OMCRCD                          WICRCD
     I              OMAGCD                          WIAGCD
     I              OMRZST                          WIRZST
     I              OMR0ST                          WIR0ST
     I              OMR1ST                          WIR1ST
     I              OMG7NA                          WIG7NA
     I              OMG8NA                          WIG8NA
     I              OMRPCD                          WIRPCD
     I              OMVEST                          WIVEST
     I              OMVGST                          WIVGST
     I              OMAVST                          WIAVST
     I              OMU0ST                          WIU0ST
     I              OMRFCD                          WIRFCD
     I              OMFZST                          WIFZST
     I              OMR1NB                          WIR1NB
     I              OMAVQT                          WIAVQT
     I              OMD0WG                          WID0WG
     I              OMCCQT                          WICCQT
     I              OMAUWG                          WIAUWG
     I              OMCBQT                          WICBQT
     I              OMATWG                          WIATWG
     I              OMAQCS                          WIAQCS
     I              OMAGCS                          WIAGCS
     I              OMAKPR                          WIAKPR
     I              OMALPR                          WIALPR
     I              OMAUPR                          WIAUPR
     I              OMAVWG                          WIAVWG
     I              OMA4WG                          WIA4WG
     I              OMA5DT                          WIA5DT
     I              OMAODT                          WIAODT
     I              OMGNDT                          WIGNDT
     I              OMAMST                          WIAMST
     I              OMANST                          WIANST
     I              OMVAST                          WIVAST
     I              OMRGNB                          WIRGNB
     I              OMRHNB                          WIRHNB
     I              OMRINB                          WIRINB
     I              OMRBCD                          WIRBCD
     I              OMHICD                          WIHICD
     I              OMRNCD                          WIRNCD
     I              OMROCD                          WIROCD
     I              OMCXDT                          WICXDT
     I              OMAJVN                          WIAJVN
     I              OMKXCD                          WIKXCD
     I              OMJPCD                          WIJPCD
     I              OMCQCD                          WICQCD
     I              OMR4CD                          WIR4CD
     I              OMZ1ST                          WIZ1ST
     I              OMZ3ST                          WIZ3ST
     I              OMZ4ST                          WIZ4ST
     I              OMDUPR                          WIDUPR
     I              OMB6VL                          WIB6VL
     I              OMA1AA                          WIA1AA
     I              OMFZSX                          WIFZSX
     I              OMF0SX                          WIF0SX
     I              OMF1SX                          WIF1SX
     I              OMF2SX                          WIF2SX
     I              OMF3SX                          WIF3SX
     I              OMF4SX                          WIF4SX
     I              OMF5SX                          WIF5SX
     I              OMF6SX                          WIF6SX
     I              OMF7SX                          WIF7SX
     I              OMNTDT                          WINTDT
     I              OMNUDT                          WINUDT
     I              OMNVDT                          WINVDT
     I              OMNWDT                          WINWDT
     I              OMNXDT                          WINXDT
     I              OMBUTM                          WIBUTM
     I              OMBVTM                          WIBVTM
     I              OMBWTM                          WIBWTM
     I              OMBXTM                          WIBXTM
     I              OMBYTM                          WIBYTM
     I              OMH5NX                          WIH5NX
     I              OMH6NX                          WIH6NX
     I              OMH7NX                          WIH7NX
     I              OMH8NX                          WIH8NX
     I              OMH9NX                          WIH9NX
     I              OMDVPR                          WIDVPR
     I              OMDWPR                          WIDWPR
     I              OMDXPR                          WIDXPR
     I              OMDYPR                          WIDYPR
     I              OMDZPR                          WIDZPR
     I              OMGSPR                          WIGSPR
     I              OMGTPR                          WIGTPR
     I              OMGUPR                          WIGUPR
     I              OMHOST                          WIHOST
     I              OMHPST                          WIHPST
     I              OMIOST                          WIIOST
     I              OMPEWG                          WIPEWG
     I              OMRINY                          WIRINY
     I              OMTIDT                          WITIDT
     I              OMTJDT                          WITJDT
     I              OMH2ST                          WIH2ST
     I              OMH0ST                          WIH0ST
     I              OMH1ST                          WIH1ST
     I              OMTKDT                          WITKDT
     I              OMTLDT                          WITLDT
     I              OMTMDT                          WITMDT
     I              OMUVST                          WIUVST
     I              OMUWST                          WIUWST
     I              OMUXST                          WIUXST
     I              OMAATM                          WIAATM
     I              OMAYNA                          WIAYNA
     I              OMA0NA                          WIA0NA
     I              OMAXDT                          WIAXDT
      *
     I@BGWKVW
      * Order Detail              Co/Item/Whse/SchdShpDt
      * Renamed input format fields
     I              OMAIC3                          WJAIC3
     I              OMC4NB                          WJC4NB
     I              OMDPNB                          WJDPNB
     I              OMUENB                          WJUENB
     I              OMHGCD                          WJHGCD
     I              OMAJCD                          WJAJCD
     I              OMBKC7                          WJBKC7
     I              OMCFC7                          WJCFC7
     I              OMGMST                          WJGMST
     I              OMGNST                          WJGNST
     I              OMMAVA                          WJMAVA
     I              OMKDVA                          WJKDVA
     I              OML8VA                          WJL8VA
     I              OML9VA                          WJL9VA
     I              OMGTST                          WJGTST
     I              OMGVST                          WJGVST
     I              OMGUST                          WJGUST
     I              OMQFST                          WJQFST
     I              OMAYVA                          WJAYVA
     I              OMEXDT                          WJEXDT
     I              OMLQCD                          WJLQCD
     I              OMRDCD                          WJRDCD
     I              OMQ7CD                          WJQ7CD
     I              OMBZPR                          WJBZPR
     I              OML6NB                          WJL6NB
     I              OMU1ST                          WJU1ST
     I              OMGIDT                          WJGIDT
     I              OMCRCD                          WJCRCD
     I              OMAGCD                          WJAGCD
     I              OMRZST                          WJRZST
     I              OMR0ST                          WJR0ST
     I              OMR1ST                          WJR1ST
     I              OMG7NA                          WJG7NA
     I              OMG8NA                          WJG8NA
     I              OMRPCD                          WJRPCD
     I              OMVEST                          WJVEST
     I              OMVGST                          WJVGST
     I              OMAVST                          WJAVST
     I              OMU0ST                          WJU0ST
     I              OMRFCD                          WJRFCD
     I              OMFZST                          WJFZST
     I              OMR1NB                          WJR1NB
     I              OMAVQT                          WJAVQT
     I              OMD0WG                          WJD0WG
     I              OMCCQT                          WJCCQT
     I              OMAUWG                          WJAUWG
     I              OMCBQT                          WJCBQT
     I              OMATWG                          WJATWG
     I              OMAQCS                          WJAQCS
     I              OMAGCS                          WJAGCS
     I              OMAKPR                          WJAKPR
     I              OMALPR                          WJALPR
     I              OMAUPR                          WJAUPR
     I              OMAVWG                          WJAVWG
     I              OMA4WG                          WJA4WG
     I              OMA5DT                          WJA5DT
     I              OMAODT                          WJAODT
     I              OMGNDT                          WJGNDT
     I              OMAMST                          WJAMST
     I              OMANST                          WJANST
     I              OMVAST                          WJVAST
     I              OMRGNB                          WJRGNB
     I              OMRHNB                          WJRHNB
     I              OMRINB                          WJRINB
     I              OMRBCD                          WJRBCD
     I              OMHICD                          WJHICD
     I              OMRNCD                          WJRNCD
     I              OMROCD                          WJROCD
     I              OMCXDT                          WJCXDT
     I              OMAJVN                          WJAJVN
     I              OMKXCD                          WJKXCD
     I              OMJPCD                          WJJPCD
     I              OMCQCD                          WJCQCD
     I              OMR4CD                          WJR4CD
     I              OMZ1ST                          WJZ1ST
     I              OMZ3ST                          WJZ3ST
     I              OMZ4ST                          WJZ4ST
     I              OMDUPR                          WJDUPR
     I              OMB6VL                          WJB6VL
     I              OMA1AA                          WJA1AA
     I              OMFZSX                          WJFZSX
     I              OMF0SX                          WJF0SX
     I              OMF1SX                          WJF1SX
     I              OMF2SX                          WJF2SX
     I              OMF3SX                          WJF3SX
     I              OMF4SX                          WJF4SX
     I              OMF5SX                          WJF5SX
     I              OMF6SX                          WJF6SX
     I              OMF7SX                          WJF7SX
     I              OMNTDT                          WJNTDT
     I              OMNUDT                          WJNUDT
     I              OMNVDT                          WJNVDT
     I              OMNWDT                          WJNWDT
     I              OMNXDT                          WJNXDT
     I              OMBUTM                          WJBUTM
     I              OMBVTM                          WJBVTM
     I              OMBWTM                          WJBWTM
     I              OMBXTM                          WJBXTM
     I              OMBYTM                          WJBYTM
     I              OMH5NX                          WJH5NX
     I              OMH6NX                          WJH6NX
     I              OMH7NX                          WJH7NX
     I              OMH8NX                          WJH8NX
     I              OMH9NX                          WJH9NX
     I              OMDVPR                          WJDVPR
     I              OMDWPR                          WJDWPR
     I              OMDXPR                          WJDXPR
     I              OMDYPR                          WJDYPR
     I              OMDZPR                          WJDZPR
     I              OMGSPR                          WJGSPR
     I              OMGTPR                          WJGTPR
     I              OMGUPR                          WJGUPR
     I              OMHOST                          WJHOST
     I              OMHPST                          WJHPST
     I              OMIOST                          WJIOST
     I              OMPEWG                          WJPEWG
     I              OMRINY                          WJRINY
     I              OMTIDT                          WJTIDT
     I              OMTJDT                          WJTJDT
     I              OMH2ST                          WJH2ST
     I              OMH0ST                          WJH0ST
     I              OMH1ST                          WJH1ST
     I              OMTKDT                          WJTKDT
     I              OMTLDT                          WJTLDT
     I              OMTMDT                          WJTMDT
     I              OMUVST                          WJUVST
     I              OMUWST                          WJUWST
     I              OMUXST                          WJUXST
     I              OMAATM                          WJAATM
     I              OMAYNA                          WJAYNA
     I              OMA0NA                          WJA0NA
     I              OMAXDT                          WJAXDT
      *
     I@ADREWA
      * Warehouse                 ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WKAJCD
     I              ADF8NA                          WKF8NA
     I              ADACNA                          WKACNA
     I              ADADNA                          WKADNA
     I              ADAENA                          WKAENA
     I              ADAJNA                          WKAJNA
     I              ADBTTX                          WKBTTX
     I              ADAOCD                          WKAOCD
     I              ADBGCD                          WKBGCD
     I              ADVHST                          WKVHST
     I              ADMPNA                          WKMPNA
     I              ADWPST                          WKWPST
     I              ADXUST                          WKXUST
     I              ADT0ST                          WKT0ST
     I              ADT1ST                          WKT1ST
     I              ADDBNB                          WKDBNB
     I              ADT2ST                          WKT2ST
     I              ADT3ST                          WKT3ST
     I              ADT4ST                          WKT4ST
     I              ADT6ST                          WKT6ST
     I              ADBWC3                          WKBWC3
     I              ADBTC3                          WKBTC3
     I              ADBUC3                          WKBUC3
     I              ADBVC3                          WKBVC3
     I              ADFCAA                          WKFCAA
     I              ADRQSX                          WKRQSX
     I              ADRRSX                          WKRRSX
     I              ADRSSX                          WKRSSX
     I              ADRTSX                          WKRTSX
     I              ADT7ST                          WKT7ST
     I              ADT8ST                          WKT8ST
     I              ADRNSX                          WKRNSX
     I              ADROSX                          WKROSX
     I              ADRPSX                          WKRPSX
     I              ADUVST                          WKUVST
     I              ADUWST                          WKUWST
     I              ADUXST                          WKUXST
     I              ADVSST                          WKVSST
     I              ADAATM                          WKAATM
     I              ADAYNA                          WKAYNA
     I              ADA0NA                          WKA0NA
     I              ADAXDT                          WKAXDT
      *
     I@AFREH3
      * Calendar                  Co/Year/Week#/Date
      * Renamed input format fields
     I              AFAIC3                          WLAIC3
     I              AFBCDT                          WLBCDT
     I              AFCQNB                          WLCQNB
     I              AFESNB                          WLESNB
     I              AFETNB                          WLETNB
     I              AFBZNB                          WLBZNB
     I              AFA9ST                          WLA9ST
     I              AFEINB                          WLEINB
     I              AFC5ST                          WLC5ST
     I              AFAQNB                          WLAQNB
     I              AFCMST                          WLCMST
     I              AFV9ST                          WLV9ST
     I              AFWAST                          WLWAST
     I              AFX2ST                          WLX2ST
     I              AFOJDT                          WLOJDT
     I              AFNQNX                          WLNQNX
     I              AFNRNX                          WLNRNX
     I              AFI9SX                          WLI9SX
     I              AFJASX                          WLJASX
     I              AFOKDT                          WLOKDT
     I              AFOLDT                          WLOLDT
     I              AFUVST                          WLUVST
     I              AFUWST                          WLUWST
     I              AFUXST                          WLUXST
     I              AFAATM                          WLAATM
     I              AFAYNA                          WLAYNA
     I              AFA0NA                          WLA0NA
     I              AFAXDT                          WLAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IYD01        DS
     I                                        1   70YI0101
     I                                        8  120YI01
      *
     IYM01        DS                        100
     I                                        1   70WEJODT
     I                                        8  140WEGXDT
     I                                       15  201WEQINV
     I                                       21  261WEWPRD
     I                                       27  321WEQSSH
     I                                       33  381WEWSLS
     I                                       39  441WEQAVL
     I                                       45  45 WEG2SX
      *
     IYW01        DS
     I                                        1   70XAJODT
     I                                        8  140XAGXDT
     I                                       15  201XAQINV
     I                                       21  261XAWPRD
     I                                       27  321XAQSSH
     I                                       33  381XAWSLS
     I                                       39  441XAQAVL
     I                                       45  45 XAG2SX
      *
      * Outward parameters
     IPARC        DS                              3
      * KEY : Availability Group        Retrieval index
      * I : MAP Availability Group Code
     I                                        1   3 PAV4CD
      *
      * Outward parameters
     IPBRC        DS                             11
      * KEY : Company Item Avail Group  Co/Group/Item
      * I : RST Company Number
     I                                    P   1   20PBAIC3
      * I : RST Availability Group Code
     I                                        3   5 PBV4CD
      *
      * Outward parameters
     IPCRC        DS                             13
      * KEY : Order Detail Schedule     Co/Item/Whse/SchdDte
      * I : RST Company Number
     I                                    P   1   20PCAIC3
      * I : RST Item Code
     I                                    P   3   60PCHGCD
      * I : RST Warehouse Code
     I                                        7   9 PCAJCD
      *
      * Outward parameters
     IPDRC        DS                             27
      * KEY : Order Detail              CItm/PrWhs/SSD/Itm/DD+
      * I : RST Consumed Item Code
     I                                    P   1   40PDNUDT
      * I : RST Production Warehouse
     I                                        5   7 PDF6SX
      *
      * Outward parameters
     IPERC        DS                              6
      * KEY : Company Item              Retrieval index       NV
      * I : RST Company Number
     I                                    P   1   20PEAIC3
      * I : RST Item Code
     I                                    P   3   60PEHGCD
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item Avail Group
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * B :  Company Number
     I                                    P   4   50P2AIC3
      * N :  Application Code
     I                                        6  11 P2DNCD
      * N :  Enterprise Code 1
     I                                       12  15 P2DQCD
      * N :  Enterprise Code 2
     I                                       16  27 P2DRCD
      * N :  Salesperson Code
     I                                       28  30 P2BCCD
      * N :  System Date Format
     I                                       31  33 P2B8NA
      * N :  User Profile Name
     I                                       34  43 P2AJVN
      * N :  Allow Multi-Company
     I                                       44  44 P2I6ST
      * N :  Default Printer
     I                                       45  54 P2MPNA
      * N :  First Time Flag
     I                                       55  55 P2TAST
      * N :  Name
     I                                       56  85 P2ADTX
      * N :  System Value Alpha
     I                                       86 125 P2BXTX
      * N :  Access Denied (Y/N)
     I                                      126 126 P2WVST
     IP3PARM      DS
      * FLD: *Arrays
      * N :  PRT Printer Device
     I                                        1  10 P3WRST
      * N :  PRT Hold Output Sts
     I                                       11  14 P3WSST
      * N :  PRT Save Output Sts
     I                                       15  18 P3WTST
      * N :  PRT Number of Copies
     I                                       19  200P3DYNB
      * N :  PRT Night Queue Run Sts
     I                                       21  21 P3WUST
      * N :  PRT Night Queue
     I                                       22  31 P3BVVN
      * N :  Program name USR
     I                                       32  41 P3BMVN
      * N :  Program Name$ USR
     I                                       42  51 P3BWVN
      * N :  Display Prt Opt Pmt USR
     I                                       52  55 P3XFST
      * I :  Warehouse Code PASS   USR
     I                                       56  58 P3T3CD
     IP4PARM      DS
      * FLD: Calendar
      * N :  Week Number
     I                                    P   1   20P4EINB
     IP5PARM      DS
      * FLD: *Arrays
      * N :  Avail Ship Date 1 USR
     I                                    P   1   40P5H6DT
      * N :  Avail Ship Date 2 USR
     I                                    P   5   80P5H7DT
      * N :  Avail Ship Date 3 USR
     I                                    P   9  120P5H8DT
      * N :  Avail Ship Date 4 USR
     I                                    P  13  160P5H9DT
      * N :  Avail Ship Date 5 USR
     I                                    P  17  200P5IADT
      * N :  Avail Ship Date 6 USR
     I                                    P  21  240P5IBDT
      * N :  Avail Ship Date 7 USR
     I                                    P  25  280P5INDT
      * N :  Avail Ship Date 8 USR
     I                                    P  29  320P5IODT
      * N :  Avail Ship Date 9 USR
     I                                    P  33  360P5IPDT
      * N :  Avail Ship Date 10 USR
     I                                    P  37  400P5IQDT
      * N :  Avail Ship Date 11 USR
     I                                    P  41  440P5IRDT
      * N :  Avail Ship Date 12 USR
     I                                    P  45  480P5ISDT
      * N :  Avail Ship Date 13 USR
     I                                    P  49  520P5ITDT
      * N :  Avail Ship Date 14 USR
     I                                    P  53  560P5IUDT
      * N :  Avail Ship Date 15 USR
     I                                    P  57  600P5IVDT
      * N :  Avail Ship Date 16 USR
     I                                    P  61  640P5IWDT
      * N :  Avail Ship Date 17 USR
     I                                    P  65  680P5IXDT
      * N :  Avail Ship Date 18 USR
     I                                    P  69  720P5IYDT
      * N :  Avail Ship Date 19 USR
     I                                    P  73  760P5IZDT
      * N :  Avail Ship Date 20 USR
     I                                    P  77  800P5I0DT
      * N :  Avail Ship Date 21 USR
     I                                    P  81  840P5I1DT
      * N :  Day 1 Inventory USR
     I                                    P  85  881P5D1IN
      * N :  Day 2 Inventory USR
     I                                    P  89  921P5D2IN
      * N :  Day 3 Inventory USR
     I                                    P  93  961P5D3IN
      * N :  Day 4 Inventory USR
     I                                    P  97 1001P5D4IN
      * N :  Day 5 Inventory USR
     I                                    P 101 1041P5D5IN
      * N :  Day 6 Inventory USR
     I                                    P 105 1081P5D6IN
      * N :  Day 7 Inventory USR
     I                                    P 109 1121P5D7IN
      * N :  Day 8 Inventory USR
     I                                    P 113 1161P5GCNX
      * N :  Day 1 Availability USR
     I                                    P 117 1201P5D1AV
      * N :  Day 2 Availability USR
     I                                    P 121 1241P5D2AV
      * N :  Day 3 Availability USR
     I                                    P 125 1281P5D3AV
      * N :  Day 4 Availability USR
     I                                    P 129 1321P5D4AV
      * N :  Day 5 Availability USR
     I                                    P 133 1361P5D5AV
      * N :  Day 6 Availability USR
     I                                    P 137 1401P5D6AV
      * N :  Day 7 Availability USR
     I                                    P 141 1441P5D7AV
      * N :  Day 8 Availability USR
     I                                    P 145 1481P5D8AV
      * N :  Day 9 Availability USR
     I                                    P 149 1521P5D9AV
      * N :  Day 10 Availability USR
     I                                    P 153 1561P5D1AB
      * N :  Day 11 Availability USR
     I                                    P 157 1601P5D2AB
      * N :  Day 12 Availability USR
     I                                    P 161 1641P5D3AB
      * N :  Day 13 Availability USR
     I                                    P 165 1681P5D4AB
      * N :  Day 14 Availability USR
     I                                    P 169 1721P5D5AB
      * N :  Day 15 Availability USR
     I                                    P 173 1761P5D6AB
      * N :  Day 16 Availability USR
     I                                    P 177 1801P5D7AB
      * N :  Day 17 Availability USR
     I                                    P 181 1841P5D8AB
      * N :  Day 18 Availability USR
     I                                    P 185 1881P5D9AB
      * N :  Day 19 Availability USR
     I                                    P 189 1921P5D1AL
      * N :  Day 20 Availability USR
     I                                    P 193 1961P5D2AL
      * N :  Day 21 Availability USR
     I                                    P 197 2001P5D3AL
      * N :  Display Flag 1 USR
     I                                      201 201 P5DXSX
      * N :  Display Flag
     I                                      202 202 P5QKST
      * N :  Record Found USR
     I                                      203 203 P5WXST
      * N :  Day 1 ATS Qty USR
     I                                    P 204 2071P5D1AQ
      * N :  Day 2 ATS Qty USR
     I                                    P 208 2111P5D2AQ
      * N :  Day 3 ATS Qty USR
     I                                    P 212 2151P5D3AQ
      * N :  Day 4 ATS Qty USR
     I                                    P 216 2191P5D4AQ
      * N :  Day 5 ATS Qty USR
     I                                    P 220 2231P5D5AQ
      * N :  Day 6 ATS Qty USR
     I                                    P 224 2271P5D6AQ
      * N :  Day 7 ATS Qty USR
     I                                    P 228 2311P5D7AQ
      * N :  Day 8 ATS Qty USR
     I                                    P 232 2351P5D8AQ
      * N :  Day 9 ATS Qty USR
     I                                    P 236 2391P5D9AQ
      * N :  Day 10 ATS Qty USR
     I                                    P 240 2431P5D1AT
      * N :  Day 11 ATS Qty USR
     I                                    P 244 2471P5D2AT
      * N :  Day 12 ATS Qty USR
     I                                    P 248 2511P5D3AT
      * N :  Day 13 ATS Qty USR
     I                                    P 252 2551P5D4AT
      * N :  Day 14 ATS Qty USR
     I                                    P 256 2591P5D5AT
      * N :  Day 15 ATS Qty USR
     I                                    P 260 2631P5D6AT
      * N :  Day 16 ATS Qty USR
     I                                    P 264 2671P5D7AT
      * N :  Day 17 ATS Qty USR
     I                                    P 268 2711P5D9AT
      * N :  Day 18 ATS Qty USR
     I                                    P 272 2751P5D1AS
      * N :  Day 19 ATS Qty USR
     I                                    P 276 2791P5D2AS
      * N :  Day 20 ATS Qty USR
     I                                    P 280 2831P5D3AS
      * N :  Day 21 ATS Qty USR
     I                                    P 284 2871P5D4AS
     IP6PARM      DS
      * FLD: Company Item
      * N :  Base/Conv/Loss Item
     I                                        1   2 P6QZCD
      * N :  Piece Count Item
     I                                        3   3 P6PCCT
      * N :  Pieces Per Bag
     I                                    P   4   70P6BDNB
      * N :  Bags Per Unit
     I                                    P   8  110P6BJNB
     IP7PARM      DS
      * N :  Date Mon USR
     I                                    P   1   40P7JHDT
     IP8PARM      DS
      * FLD: *Arrays
      * N :  Day 1 Avail Total     USR
     I                                    P   1   41P8GINB
      * N :  Day 2 Avail Total     USR
     I                                    P   5   81P8GJNB
      * N :  Day 3 Avail Total     USR
     I                                    P   9  121P8GKNB
      * N :  Day 4 Avail Total     USR
     I                                    P  13  161P8GLNB
      * N :  Day 5 Avail Total     USR
     I                                    P  17  201P8GMNB
      * N :  Day 6 Avail Total     USR
     I                                    P  21  241P8GNNB
      * N :  Day 7 Avail Total     USR
     I                                    P  25  281P8GONB
      * N :  Day 8 Avail Total     USR
     I                                    P  29  321P8IANB
      * N :  Day 9 Avail Total     USR
     I                                    P  33  361P8IBNB
      * N :  Day 10 Avail Total    USR
     I                                    P  37  401P8ICNB
      * N :  Day 11 Avail Total    USR
     I                                    P  41  441P8IDNB
      * N :  Day 12 Avail Total    USR
     I                                    P  45  481P8IENB
      * N :  Day 13 Avail Total    USR
     I                                    P  49  521P8IFNB
      * N :  Day 14 Avail Total    USR
     I                                    P  53  561P8IGNB
      * N :  Day 15 Avail Total    USR
     I                                    P  57  601P8IHNB
      * N :  Day 16 Avail Total    USR
     I                                    P  61  641P8IINB
      * N :  Day 17 Avail Total    USR
     I                                    P  65  681P8IJNB
      * N :  Day 18 Avail Total    USR
     I                                    P  69  721P8IKNB
      * N :  Day 19 Avail Total    USR
     I                                    P  73  761P8INNB
      * N :  Day 20 Avail Total    USR
     I                                    P  77  801P8IPNB
      * N :  Day 21 Avail Total    USR
     I                                    P  81  841P8IQNB
     IP9PARM      DS
      * N :  Prod Date Alpha USR
     I                                        1   7 P9TOTX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Company Number Req'
      * Company Number
     I                                        1   3 ZA0001
      * Message data for 'Load Size Required'
      * Load Size USR
     I                                    P   1   40ZA0002
      * Message data for 'Warehouse Invalid for Co'
      * Warehouse Code
     I                                        1   3 ZA0003
      * Company Number
     I                                        4   6 ZA0004
      * Message data for 'Warehouse not found'
      * Message data for 'PS Prt Prod Availability'
      * PRT Printer Device
     I                                        1  10 ZA0005
      * PRT Hold Output Sts
     I                                       11  14 ZA0006
      * PRT Save Output Sts
     I                                       15  18 ZA0007
      * PRT Number of Copies
     I                                    P  19  200ZA0008
      * PRT Night Queue
     I                                       21  30 ZA0009
      * Program name USR
     I                                       31  40 ZA0010
      * Program Name$ USR
     I                                       41  50 ZA0011
      * Company Number
     I                                       51  53 ZA0012
      * Warehouse Code
     I                                       54  56 ZA0013
      * Warehouse Type
     I                                       57  58 ZA0014
      * Prod Date Alpha USR
     I                                       59  65 ZA0015
      * Primary/Load Sts USR
     I                                       66  66 ZA0016
      * Load Size USR
     I                                    P  67  700ZA0017
      * Availability Group Code
     I                                       71  73 ZA0018
      * Job Name
     I                                       74  83 ZA0019
      * Print Zeros USR
     I                                       84  84 ZA0020
      * Message data for 'Load Size Required'
      * Load Size USR
     I                                    P   1   40ZA0021
      * Message data for 'PS Prt Prod Availability'
      * PRT Printer Device
     I                                        1  10 ZA0022
      * PRT Hold Output Sts
     I                                       11  14 ZA0023
      * PRT Save Output Sts
     I                                       15  18 ZA0024
      * PRT Number of Copies
     I                                    P  19  200ZA0025
      * PRT Night Queue
     I                                       21  30 ZA0026
      * Program name USR
     I                                       31  40 ZA0027
      * Program Name$ USR
     I                                       41  50 ZA0028
      * Company Number
     I                                       51  53 ZA0029
      * Warehouse Code
     I                                       54  56 ZA0030
      * Warehouse Type
     I                                       57  58 ZA0031
      * Prod Date Alpha USR
     I                                       59  65 ZA0032
      * Primary/Load Sts USR
     I                                       66  66 ZA0033
      * Load Size USR
     I                                    P  67  700ZA0034
      * Availability Group Code
     I                                       71  73 ZA0035
      * Job Name
     I                                       74  83 ZA0036
      * Print Zeros USR
     I                                       84  84 ZA0037
      * Message data for 'PS Prt Item Orders'
      * PRT Printer Device
     I                                        1  10 ZA0038
      * PRT Hold Output Sts
     I                                       11  14 ZA0039
      * PRT Save Output Sts
     I                                       15  18 ZA0040
      * PRT Number of Copies
     I                                    P  19  200ZA0041
      * PRT Night Queue
     I                                       21  30 ZA0042
      * Program name USR
     I                                       31  40 ZA0043
      * Program Name$ USR
     I                                       41  50 ZA0044
      * Company Number
     I                                       51  53 ZA0045
      * Warehouse Code
     I                                       54  56 ZA0046
      * Warehouse Type
     I                                       57  58 ZA0047
      * Prod Date Alpha USR
     I                                       59  65 ZA0048
      * Availability Group Code
     I                                       66  68 ZA0049
      * Job Name
     I                                       69  78 ZA0050
      * Message data for 'Load Size Required'
      * Load Size USR
     I                                    P   1   40ZA0051
      * Message data for 'Warehouse Code Required'
      * Warehouse Code
     I                                        1   3 ZA0052
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0053
      * Application Code
     I                                       11  16 ZA0054
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0055
      * Application Code
     I                                       11  16 ZA0056
      * Message data for 'RTV WW Product Avail 1'
      * Message data for 'RTV WW Product Avail 2'
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P2AIC3    PARM P2AIC3    WP0001  30       Company Number
     C           P3T3CD    PARM           WP0002  3        Warehouse Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * First Time Processing
      * CASE: WRK.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       WUTAST           First Time Flag
     C                     MOVEL'L'       #CW4ST           Primary/Load St
     C                     MOVEL'N'       #CPTZR           Print Zeros USR
      * ** If Co# is passed in put it on the screen, if whse is passed
      * ** in, put it on the screen. Otherwise, default them to the
      * ** values from the user profile. Get warehouse name and type
      * ** from the warehouse file.                   09/01/06 LJB workin
      * ** Put par.co# on the screen, if zeros, use co# from user profile
      * CASE: PAR.Company Number is not equal to zero
     C           P2AIC3    IFNE *ZERO                      *IF
     C                     Z-ADDP2AIC3    #2AIC3           Company Number
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUAIC3    #2AIC3           Company Number
     C                     Z-ADDWUAIC3    P2AIC3           Company Number
     C                     END                             *FI
      * ** Put par whse on the screen, if blank, use whse from user profi
      * CASE: PAR.Warehouse Code PASS   USR is Warehouse Code not Blank
     C           P3T3CD    IFNE *BLANK                     *IF
     C                     MOVELP3T3CD    #CAJCD           Warehouse Code
     C                     MOVELP3T3CD    P2AJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.Company Number is not equal to zero
     C           #2AIC3    IFNE *ZERO                      *IF
      * Rtv Prd WHS w/AcctCo  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Accounting Comp
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #CAJCD    P      Production Ware
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CAJCD           Warehouse Code
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
      * ** Get Warehouse Description and type
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#CAJCD    WL0003    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #CF8NA    P      Warehouse Descr
     C                     MOVELWL0005    #CVHST    P      Lot Tracking Fl
     C                     MOVELWL0006    #CWPST    P      Warehouse Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     END                             *FI
      * C4455 use minimum truck pounds from 'T' record on Truck Size File
      * PER Judy Schaub    M Arensberg  5/22/98
      * 10/01/03 PKD The Max Truck weight is a Gross Weight and not Net.
      *              Scheduing we need the Net (Meat).
     C                     Z-ADD40500     #CLDSZ           Load Size USR
      * Rtv All Fields         RT - Salesperson Electronic CM  * 
     C                     EXSR SCRVGN
     C                     END                             *FI
      * INIT:  Availability Group
      * CASE: CTL.Availability Group Code is Blank
     C           #2V4CD    IFEQ *BLANK                     *IF
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     END                             *FI
      * ** Save par context co# if ctl co# changes         9/13/2006
      * CASE: PAR.Company Number NE CTL.Company Number
     C           P2AIC3    IFNE #2AIC3                     *IF
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     END                             *FI
      * ** Save par context whse code if ctl whse changes      9/13/2006
      * CASE: PAR.Warehouse Code NE CTL.Warehouse Code
     C           P2AJCD    IFNE #CAJCD                     *IF
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     END                             *FI
      * Rtv Group Description RT - Availability Group  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#2V4CD    WL0007    P      Availability Gr
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    #CNVNA    P      Availability Gr
      * Warehouse Description   and type
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#CAJCD    WL0003    P      Warehouse Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    #CF8NA    P      Warehouse Descr
     C                     MOVELWL0005    #CVHST    P      Lot Tracking Fl
     C                     MOVELWL0006    #CWPST    P      Warehouse Type
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#CAJCD    WL0009    P      Warehouse Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    #2AIC3           Shipping Compan
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     END                             *FI
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SFRVGN
     C                     MOVEL#CW4ST    WUW4ST           Primary/Load St
     C                     Z-ADD#CLDSZ    WULDSZ           Load Size USR
      * *Set Cursor: CTL.Item Code  (*Override=*YES)
     C                     Z-ADD*ZERO     W0RR0
     C                     Z-ADD011       W0ROW0
     C                     Z-ADD005       W0COL0
     C                     MOVEL'1'       W0OVR0           *YES
      * CTL.Warehouse Type Desc = Condition name of CTL.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM #CWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CNENA    PARM           W0CNNM 25        Warehouse Type
      *
     C                     MOVEL#CWPST    WUR6ST           Warehouse Type
      * Reload totals if F20 Display totals is on.
      * CASE: PAR.Display Flag 1 USR is yes
     C           P5DXSX    IFEQ 'Y'                        *IF
      * Rtv Avail Ttls for Grp RT - Company Item Avail Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0011           Company Number
     C                     MOVEL#2V4CD    WL0012    P      Availability Gr
     C                     Z-ADDP5H6DT    WL0013           Avail Ship Date
     C                     Z-ADDP5H7DT    WL0014           Avail Ship Date
     C                     Z-ADDP5H8DT    WL0015           Avail Ship Date
     C                     Z-ADDP5H9DT    WL0016           Avail Ship Date
     C                     Z-ADDP5IADT    WL0017           Avail Ship Date
     C                     Z-ADDP5IBDT    WL0018           Avail Ship Date
     C                     Z-ADDP5INDT    WL0019           Avail Ship Date
     C                     Z-ADDP5IODT    WL0020           Avail Ship Date
     C                     Z-ADDP5IPDT    WL0021           Avail Ship Date
     C                     Z-ADDP5IQDT    WL0022           Avail Ship Date
     C                     Z-ADDP5IRDT    WL0023           Avail Ship Date
     C                     Z-ADDP5ISDT    WL0024           Avail Ship Date
     C                     Z-ADDP5ITDT    WL0025           Avail Ship Date
     C                     Z-ADDP5IUDT    WL0026           Avail Ship Date
     C                     Z-ADDP5IVDT    WL0027           Avail Ship Date
     C                     Z-ADDP5IWDT    WL0028           Avail Ship Date
     C                     Z-ADDP5IXDT    WL0029           Avail Ship Date
     C                     Z-ADDP5IYDT    WL0030           Avail Ship Date
     C                     Z-ADDP5IZDT    WL0031           Avail Ship Date
     C                     Z-ADDP5I0DT    WL0032           Avail Ship Date
     C                     Z-ADDP5I1DT    WL0033           Avail Ship Date
     C                     Z-ADDP8GINB    WL0034           Day 1 Avail Tot
     C                     Z-ADDP8GJNB    WL0035           Day 2 Avail Tot
     C                     Z-ADDP8GKNB    WL0036           Day 3 Avail Tot
     C                     Z-ADDP8GLNB    WL0037           Day 4 Avail Tot
     C                     Z-ADDP8GMNB    WL0038           Day 5 Avail Tot
     C                     Z-ADDP8GNNB    WL0039           Day 6 Avail Tot
     C                     Z-ADDP8GONB    WL0040           Day 7 Avail Tot
     C                     Z-ADDP8IANB    WL0041           Day 8 Avail Tot
     C                     Z-ADDP8IBNB    WL0042           Day 9 Avail Tot
     C                     Z-ADDP8ICNB    WL0043           Day 10 Avail To
     C                     Z-ADDP8IDNB    WL0044           Day 11 Avail To
     C                     Z-ADDP8IENB    WL0045           Day 12 Avail To
     C                     Z-ADDP8IFNB    WL0046           Day 13 Avail To
     C                     Z-ADDP8IGNB    WL0047           Day 14 Avail To
     C                     Z-ADDP8IHNB    WL0048           Day 15 Avail To
     C                     Z-ADDP8IINB    WL0049           Day 16 Avail To
     C                     Z-ADDP8IJNB    WL0050           Day 17 Avail To
     C                     Z-ADDP8IKNB    WL0051           Day 18 Avail To
     C                     Z-ADDP8INNB    WL0052           Day 19 Avail To
     C                     Z-ADDP8IPNB    WL0053           Day 20 Avail To
     C                     Z-ADDP8IQNB    WL0054           Day 21 Avail To
     C                     MOVEL#CAJCD    WL0055    P      Warehouse Code
     C                     MOVEL#CWPST    WL0056    P      Warehouse Type
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    P8GINB           Day 1 Avail Tot
     C                     Z-ADDWL0035    P8GJNB           Day 2 Avail Tot
     C                     Z-ADDWL0036    P8GKNB           Day 3 Avail Tot
     C                     Z-ADDWL0037    P8GLNB           Day 4 Avail Tot
     C                     Z-ADDWL0038    P8GMNB           Day 5 Avail Tot
     C                     Z-ADDWL0039    P8GNNB           Day 6 Avail Tot
     C                     Z-ADDWL0040    P8GONB           Day 7 Avail Tot
     C                     Z-ADDWL0041    P8IANB           Day 8 Avail Tot
     C                     Z-ADDWL0042    P8IBNB           Day 9 Avail Tot
     C                     Z-ADDWL0043    P8ICNB           Day 10 Avail To
     C                     Z-ADDWL0044    P8IDNB           Day 11 Avail To
     C                     Z-ADDWL0045    P8IENB           Day 12 Avail To
     C                     Z-ADDWL0046    P8IFNB           Day 13 Avail To
     C                     Z-ADDWL0047    P8IGNB           Day 14 Avail To
     C                     Z-ADDWL0048    P8IHNB           Day 15 Avail To
     C                     Z-ADDWL0049    P8IINB           Day 16 Avail To
     C                     Z-ADDWL0050    P8IJNB           Day 17 Avail To
     C                     Z-ADDWL0051    P8IKNB           Day 18 Avail To
     C                     Z-ADDWL0052    P8INNB           Day 19 Avail To
     C                     Z-ADDWL0053    P8IPNB           Day 20 Avail To
     C                     Z-ADDWL0054    P8IQNB           Day 21 Avail To
     C                     END                             *FI
      * Save subfile position
      * CASE: LCL.Status Flag 17 Y/N is Yes
     C           YL0005    IFEQ 'Y'                        *IF
      * SFL Maintain Subfil PosUS - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           W1SFRC    IFGT *ZERO
     C                     Z-ADDW1SFRC    ##SFRC
     C                     Z-ADD##SFRC    @#SFRC
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     MOVEL'N'       YL0005           Status Flag 17
     C                     END                             *FI
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLHGCD           Item Code
     C                     KFLD           KLV4CD           Availability Gr
      * Setup key
     C                     Z-ADD#2AIC3    KLAIC3
     C                     Z-ADD#2HGCD    KLHGCD
     C                     MOVEL#2V4CD    KLV4CD
     C           KPOS      SETLL@KLREHH
     C                     READ @KLREHH                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2V4CD    WZV4CD
     C                     MOVEL#2V4CD    WZV4CD           Availability Gr
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@KLREHH                  90*
     C  N82                READ @KLREHH                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,39
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2HGCD    OREQ *ZERO                      Item Code
     C           #2V4CD    IFNE *BLANK                     Availability Gr
     C           KLV4CD    CABNE#2V4CD    BB020            Availability Gr
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           KLHGCD    CABLT#2HGCD    BB020            Item Code
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * RST:  Company Number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Company Number is not equal to zero
      *   |- c2    : CTL.Company Number NE DB1.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AIC3    IFNE *ZERO                      *IF
     C           #2AIC3    IFNE KLAIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST:  Availability Group
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Availability Group Code is NE Blank
      *   |- c2    : CTL.Availability Group Code NE DB1.Availability Grou
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2V4CD    IFNE *BLANK                     *IF
     C           #2V4CD    IFNE KLV4CD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Retreive Item information for calculating Availability.
      * Other values needed for display warehouse inquiry
      * RST: Warehouse code if entered
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * Val Item Bal Exist    RT - Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0237           Company Number
     C                     Z-ADD#1HGCD    WL0238           Item Code
     C                     MOVEL#CAJCD    WL0239    P      Warehouse Code
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0240    P5WXST    P      Record Found US
     C                     END                             *FI
      * Record is selected if not warehouse code restricted, or record is
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CTL.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Record Found USR is Record Found
      *   '-
     C           #CAJCD    IFEQ *BLANK                     *IF
     C           P5WXST    OREQ 'Y'                        *OR
      * Rtv Base Values PA    RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0057           Company Number
     C                     Z-ADD#1HGCD    WL0058           Item Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    #RGENA    P      Description Lin
     C                     MOVELWL0060    WUAWNA    P      Description Lin
     C                     MOVELWL0061    #RADCD    P      U/M - Primary
     C                     Z-ADDWL0062    #RAWPC           Conversion Fact
     C                     MOVELWL0063    #RLXST    P      Operation Facto
     C                     MOVELWL0064    #RAECD    P      U/M - Second
     C                     Z-ADDWL0065    #RAXPC           Conversion Fact
     C                     MOVELWL0066    #RLYST    P      Operation Facto
     C                     MOVELWL0067    #RAFCD    P      U/M - Third
     C                     MOVELWL0068    WUAICD    P      U/M - Pricing
     C                     Z-ADDWL0069    #RAIWG           Unit Weight
     C                     MOVELWL0070    #RFZST    P      Production Date
     C                     MOVELWL0071    #RAVST    P      Catch Weight St
     C                     Z-ADDWL0072    #RCHTM           Fresh Chilling
     C                     MOVELWL0073    P6QZCD    P      Base/Conv/Loss
     C                     MOVELWL0074    P6PCCT    P      Piece Count Ite
     C                     Z-ADDWL0075    P6BDNB           Pieces Per Bag
     C                     Z-ADDWL0076    P6BJNB           Bags Per Unit
     C                     MOVELWL0077    YL0006    P      Record Status
      * If item is a base mark with a "*".
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P6QZCD    IFEQ 'B'                        *IF
     C                     MOVEL'*'       #RYLCD           Item Code is Ba
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #RYLCD           Item Code is Ba
     C                     END                             *FI
      * SEL: Record Status
      * CASE: LCL.Record Status is Deleted & Inactive
     C           YL0006    IFEQ 'D'                        *IF
     C           YL0006    OREQ 'I'
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * SEL: Base
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Item Code is Base '*' USR is Select Base
      *   |- c2    : RCD.Item Code is Base '*' USR NE CTL.Item Code is Ba
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CYLCD    IFEQ '*'                        *IF
     C           #RYLCD    IFNE #CYLCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RTV:  Availability
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * Rtv PA Tot SD-21      RT - Warehouse  * 
     C                     EXSR TGRVGN
      * -----
      * 5/20/09 RMC FP1054 take inventory out of daily bucket and total f
     C                     SUB  P5D1IN    P5D1AV           Day 1 Availabil
     C                     SUB  P5D2IN    P5D2AV           Day 2 Availabil
     C                     SUB  P5D3IN    P5D3AV           Day 3 Availabil
     C                     SUB  P5D4IN    P5D4AV           Day 4 Availabil
     C                     SUB  P5D5IN    P5D5AV           Day 5 Availabil
     C                     SUB  P5D6IN    P5D6AV           Day 6 Availabil
     C                     SUB  P5D7IN    P5D7AV           Day 7 Availabil
      * Day 1 Availability USR < 0
      * CASE: PAR.Day 1 Availability USR is LT Zero
     C           P5D1AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D1AV           Day 1 Availabil
     C                     END                             *FI
      * Day 2 Availability USR < 0
      * CASE: PAR.Day 2 Availability USR is LT Zero
     C           P5D2AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D2AV           Day 2 Availabil
     C                     END                             *FI
      * Day 3 Availability USR < 0
      * CASE: PAR.Day 3 Availability USR is LT Zero
     C           P5D3AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D3AV           Day 3 Availabil
     C                     END                             *FI
      * Day 4 Availability USR < 0
      * CASE: PAR.Day 4 Availability USR is LT Zero
     C           P5D4AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D4AV           Day 4 Availabil
     C                     END                             *FI
      * Day 5 Availability USR < 0
      * CASE: PAR.Day 5 Availability USR is LT Zero
     C           P5D5AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D5AV           Day 5 Availabil
     C                     END                             *FI
      * Day 6 Availability USR < 0
      * CASE: PAR.Day 6 Availability USR is LT Zero
     C           P5D6AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D6AV           Day 6 Availabil
     C                     END                             *FI
      * Day 7 Availability USR < 0
      * CASE: PAR.Day 7 Availability USR is LT Zero
     C           P5D7AV    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     P5D7AV           Day 7 Availabil
     C                     END                             *FI
      * FP1054 Inventory Total
     C                     Z-ADDP5GCNX    #RGJNX           Day 8 Inventory
      * FP1054 Inventory Avail = inventory total - sales
      * Rtv Plan Prod Sts     XF - Company Item Ext  * 
     C                     CALL 'PNHKXFR'              90  Rtv Plan Prod S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ1378  30       Company Number
     C                     PARM #1HGCD    WQ1379  70       Item Code
     C           YL0010    PARM *BLANK    WQ1380  1        Plan Production
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNHKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * CASE: LCL.Plan Production Sts is No
     C           YL0010    IFEQ 'N'                        *IF
      * Rtv Sched Ship f/Itm  RT - Order Detail  * 
     C                     EXSR TLRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Ord Dtl Sch-AllDysRT - Order Detail Sched-Inv  * 
     C                     EXSR TMRVGN
     C                     END                             *FI
      * Chg INV from primary/load size
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CTL.Primary/Load Sts USR is Load Size
      *   |- c2    : CTL.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           YL0012    DIV  #CLDSZ    YL0015           OD Weight Unuse
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0011    YL0015           OD Weight Unuse
     C                     END                             *FI
     C           #RGJNX    SUB  YL0015    #RGCNX           Day 8 Inventory
      * -----
      * 4/11/07 PKD Include Sunday also
      * Setup fields according to week: 1=Current, 2=Next, 3=Third Week
      * CASE: PAR.Week Number is One
     C           P4EINB    IFEQ 1                          *IF
     C                     Z-ADDP5H6DT    #CH6DT           Avail Ship Date
     C                     Z-ADDP5H7DT    #CH7DT           Avail Ship Date
     C                     Z-ADDP5H8DT    #CH8DT           Avail Ship Date
     C                     Z-ADDP5H9DT    #CH9DT           Avail Ship Date
     C                     Z-ADDP5IADT    #CIADT           Avail Ship Date
     C                     Z-ADDP5IBDT    #CIBDT           Avail Ship Date
     C                     Z-ADDP5INDT    #CINDT           Avail Ship Date
     C                     Z-ADDP5D1AV    #RD1AV           Day 1 Availabil
     C                     Z-ADDP5D2AV    #RD2AV           Day 2 Availabil
     C                     Z-ADDP5D3AV    #RD3AV           Day 3 Availabil
     C                     Z-ADDP5D4AV    #RD4AV           Day 4 Availabil
     C                     Z-ADDP5D5AV    #RD5AV           Day 5 Availabil
     C                     Z-ADDP5D6AV    #RD6AV           Day 6 Availabil
     C                     Z-ADDP5D7AV    #RD7AV           Day 7 Availabil
     C                     Z-ADDP5D1AQ    #RD1AQ           Day 1 ATS Qty U
     C                     Z-ADDP5D2AQ    #RD2AQ           Day 2 ATS Qty U
     C                     Z-ADDP5D3AQ    #RD3AQ           Day 3 ATS Qty U
     C                     Z-ADDP5D4AQ    #RD4AQ           Day 4 ATS Qty U
     C                     Z-ADDP5D5AQ    #RD5AQ           Day 5 ATS Qty U
     C                     Z-ADDP5D6AQ    #RD6AQ           Day 6 ATS Qty U
     C                     Z-ADDP5D7AQ    #RD7AQ           Day 7 ATS Qty U
     C                     ELSE
      * CASE: PAR.Week Number is Two
     C           P4EINB    IFEQ 2                          *IF
     C                     Z-ADDP5IODT    #CH6DT           Avail Ship Date
     C                     Z-ADDP5IPDT    #CH7DT           Avail Ship Date
     C                     Z-ADDP5IQDT    #CH8DT           Avail Ship Date
     C                     Z-ADDP5IRDT    #CH9DT           Avail Ship Date
     C                     Z-ADDP5ISDT    #CIADT           Avail Ship Date
     C                     Z-ADDP5ITDT    #CIBDT           Avail Ship Date
     C                     Z-ADDP5IUDT    #CINDT           Avail Ship Date
     C                     Z-ADDP5D8AV    #RD1AV           Day 1 Availabil
     C                     Z-ADDP5D9AV    #RD2AV           Day 2 Availabil
     C                     Z-ADDP5D1AB    #RD3AV           Day 3 Availabil
     C                     Z-ADDP5D2AB    #RD4AV           Day 4 Availabil
     C                     Z-ADDP5D3AB    #RD5AV           Day 5 Availabil
     C                     Z-ADDP5D4AB    #RD6AV           Day 6 Availabil
     C                     Z-ADDP5D5AB    #RD7AV           Day 7 Availabil
     C                     Z-ADDP5D8AQ    #RD1AQ           Day 1 ATS Qty U
     C                     Z-ADDP5D9AQ    #RD2AQ           Day 2 ATS Qty U
     C                     Z-ADDP5D1AT    #RD3AQ           Day 3 ATS Qty U
     C                     Z-ADDP5D2AT    #RD4AQ           Day 4 ATS Qty U
     C                     Z-ADDP5D3AT    #RD5AQ           Day 5 ATS Qty U
     C                     Z-ADDP5D4AT    #RD6AQ           Day 6 ATS Qty U
     C                     Z-ADDP5D5AT    #RD7AQ           Day 7 ATS Qty U
     C                     ELSE
      * CASE: PAR.Week Number is Three
     C           P4EINB    IFEQ 3                          *IF
     C                     Z-ADDP5IVDT    #CH6DT           Avail Ship Date
     C                     Z-ADDP5IWDT    #CH7DT           Avail Ship Date
     C                     Z-ADDP5IXDT    #CH8DT           Avail Ship Date
     C                     Z-ADDP5IYDT    #CH9DT           Avail Ship Date
     C                     Z-ADDP5IZDT    #CIADT           Avail Ship Date
     C                     Z-ADDP5I0DT    #CIBDT           Avail Ship Date
     C                     Z-ADDP5I1DT    #CINDT           Avail Ship Date
     C                     Z-ADDP5D6AB    #RD1AV           Day 1 Availabil
     C                     Z-ADDP5D7AB    #RD2AV           Day 2 Availabil
     C                     Z-ADDP5D8AB    #RD3AV           Day 3 Availabil
     C                     Z-ADDP5D9AB    #RD4AV           Day 4 Availabil
     C                     Z-ADDP5D1AL    #RD5AV           Day 5 Availabil
     C                     Z-ADDP5D2AL    #RD6AV           Day 6 Availabil
     C                     Z-ADDP5D3AL    #RD7AV           Day 7 Availabil
     C                     Z-ADDP5D6AT    #RD1AQ           Day 1 ATS Qty U
     C                     Z-ADDP5D7AT    #RD2AQ           Day 2 ATS Qty U
     C                     Z-ADDP5D9AT    #RD3AQ           Day 3 ATS Qty U
     C                     Z-ADDP5D1AS    #RD4AQ           Day 4 ATS Qty U
     C                     Z-ADDP5D2AS    #RD5AQ           Day 5 ATS Qty U
     C                     Z-ADDP5D3AS    #RD6AQ           Day 6 ATS Qty U
     C                     Z-ADDP5D4AS    #RD7AQ           Day 7 ATS Qty U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * -----
      * 4/11/07 PKD The total is now Day 8
      * Total Available
      * RCD.Day 8 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : RCD.Day 1 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : RCD.Day 2 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : RCD.Day 3 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : RCD.Day 4 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : RCD.Day 5 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : RCD.Day 6 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : RCD.Day 7 Availability USR
     C           #RD1AV    ADD  #RD2AV    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  #RD3AV    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  #RD4AV    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  #RD5AV    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  #RD6AV    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  #RD7AV    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RD8AV           Day 8 Availabil
      * ADD Avail inv to total avail
     C                     ADD  #RGCNX    #RD8AV           Day 8 Availabil
      * -----
      * 6/24/09 FP1054 RMC show total ordered-schedule= on hold qty or lo
      * RTV Cur Wk Held Total  RT - Order Detail  * 
     C                     EXSR TNRVGN
      * Chg Held from primary/load size
      * CASE:
      *  - c1ANDc2
      *   |- c1    : CTL.Primary/Load Sts USR is Load Size
      *   |- c2    : CTL.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C           YL0017    DIV  #CLDSZ    #RFQNX           Day 8 Unsch Shp
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0016    #RFQNX           Day 8 Unsch Shp
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @KLREHH                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
      * Set SFLFOLD/SFLDROP from JOB.*Subfile mode
     C                     MOVE ZZSFM     *IN02
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Print Zeros USR
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#CPTZR    W0NSRQ  1        Print Zeros USR
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#CPTZR'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158374   Y2LSNO  70
     C           #CPTZR    PARM #CPTZR    W0EXVL 25        Print Zeros USR
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
      * Validate Warehouse Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CWPST'  IFEQ YPMTFD
      * Warehouse Type
     C                     MOVEL#CWPST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFWPST
     C                     SELEC
     C           W0INVL    WHEQ 'FZ'                       FZ
     C                     Z-ADD1         ZFWPST
     C           W0INVL    WHEQ 'FR'                       FR
     C                     Z-ADD2         ZFWPST
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD3         ZFWPST
     C                     ENDSL
     C                     EXFMTZEWPST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFWPST    WHEQ 1
     C                     MOVEL'FZ'      W0INVL           FZ
     C           ZFWPST    WHEQ 2
     C                     MOVEL'FR'      W0INVL           FR
     C           ZFWPST    WHEQ 3
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CWPST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZV4CD    CASNE#2V4CD    FBRQRL
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
     C                     MOVEL'N'       YL0005           Status Flag 17
      * F4=Prompt  (Company/Warehouse/PA Group)
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Company Number
     C           W0CFL     IFEQ 'V2AIC3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ1381  30       Company Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#CAJCD'                   *IF
      * SEL ShipCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PPHQSRR'              90  SEL ShipCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #CAJCD    PARM #CAJCD    WQ1382  3        Warehouse Code
     C                     PARM #2AIC3    WQ1383  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPHQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993431*
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Availability Group Code
     C           W0CFL     IFEQ '#2V4CD'                   *IF
      * SEL Avail Group        SR - Availability Group  * 
     C                     CALL 'PDDVSRR'              90  SEL Avail Group
     C                     PARM *BLANK    W0RTN   7
     C           #2V4CD    PARM #2V4CD    WQ1384  3        Availability Gr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDDVSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Reload Subfile
      * CASE: CTL.Primary/Load Sts USR NE WRK.Primary/Load Sts USR
     C           #CW4ST    IFNE WUW4ST                     *IF
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: CTL.Load Size USR NE WRK.Load Size USR
     C           #CLDSZ    IFNE WULDSZ                     *IF
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: CTL.Warehouse Type NE WRK.Warehouse Type USR
     C           #CWPST    IFNE WUR6ST                     *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#CAJCD    WL0009    P      Warehouse Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    #2AIC3           Shipping Compan
      * Val:  Company Number
      * CASE: CTL.Company Number is Equal to zero
     C           #2AIC3    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0001           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0001           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company Number Req'
     C                     MOVEL'USR2183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Val:  Load Size
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Primary/Load Sts USR is Load Size
      *   |- c2    : CTL.Load Size USR is Not Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     Z-ADD#CLDSZ    ZA0002           Load Size USR
      * Send message 'Load Size Required'
     C                     MOVEL'USR2017' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
      * Val:  Warehouse Code
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     ELSE
      * CASE: *OTHERWISE
      * VAL Shipping Co WHS   RT - Warehouse  * 
     C                     EXSR TORVGN
      * CASE: WRK.Warehouse Description is equal to blank
     C           WUF8NA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0003           Warehouse Code
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0004           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0004           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse Invalid for Co'
     C                     MOVEL'USR3404' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993431*
      *
     C                     END                             *FI
      * Rtv Warehouse/type Val RT - Warehouse  * 
     C                     EXSR TPRVGN
      * CASE: PAR.Record Found USR is Record Not Found
     C           P5WXST    IFEQ 'N'                        *IF
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Val:  Warehouse type
      * CASE: CTL.Warehouse Type NE WRK.BLANK 1               USR
     C           #CWPST    IFNE WUJ1TX                     *IF
      * CTL.Warehouse Type Desc = Condition name of CTL.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM #CWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CNENA    PARM           W0CNNM 25        Warehouse Type
      *
     C                     END                             *FI
      * Print PA               F21
      * CASE: CTL.*CMD key is *Print 21
     C           *IN21     IFEQ '1'                        *IF
      * PMT Prt Opt w/PSz SHR  PV - Print Options  * 
     C                     CALL 'PDV8PVR'              90  PMT Prt Opt w/P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,01    WQ1385 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ1386 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ1387  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ1388  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ1389  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ1390  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ1391 10        PRT Night Queue
     C                     PARM P2DNCD    WQ1392  6        Application Cod
     C                     PARM '2'       WQ1393  1        Paper Type USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Submit Print
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Set up start of print
      * CASE: CTL.Avail Ship Date 1 USR LE JOB.*Job date
     C           #CH6DT    IFLE ##JDT                      *IF
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
     C                     MOVEL##JDT     P9TOTX           Prod Date Alpha
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
     C                     MOVEL#CH6DT    P9TOTX           Prod Date Alpha
     C                     END                             *FI
      * Setup message data for message
     C                     MOVELP3WRST    ZA0005           PRT Printer Dev
     C                     MOVELP3WSST    ZA0006           PRT Hold Output
     C                     MOVELP3WTST    ZA0007           PRT Save Output
     C                     Z-ADDP3DYNB    ZA0008           PRT Number of C
     C                     MOVELP3BVVN    ZA0009           PRT Night Queue
     C                     MOVEL'PDKJPFR' ZA0010           Program name US
     C                     MOVEL'PDKJPFR$'ZA0011           Program Name$ U
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0012           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0012           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL#CAJCD    ZA0013           Warehouse Code
     C                     MOVEL#CWPST    ZA0014           Warehouse Type
     C                     MOVELP9TOTX    ZA0015           Prod Date Alpha
     C                     MOVEL#CW4ST    ZA0016           Primary/Load St
     C                     Z-ADD#CLDSZ    ZA0017           Load Size USR
     C                     MOVEL#2V4CD    ZA0018           Availability Gr
     C                     MOVEL@CN,02    ZA0019           Job Name
     C                     MOVEL#CPTZR    ZA0020           Print Zeros USR
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2254' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993134*
     C                     SETON                     363332*
     C                     SETON                     35    *
     C                     END
      *
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * Print PA Detail         F24
      * CASE: CTL.*CMD key is CF24
     C           *IN24     IFEQ '1'                        *IF
      * Load size is req for this print
      * CASE: CTL.Load Size USR is Not Entered
     C           #CLDSZ    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#CLDSZ    ZA0021           Load Size USR
      * Send message 'Load Size Required'
     C                     MOVEL'USR2017' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * PMT Prt Opt w/PSz SHR  PV - Print Options  * 
     C                     CALL 'PDV8PVR'              90  PMT Prt Opt w/P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,01    WQ1394 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ1395 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ1396  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ1397  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ1398  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ1399  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ1400 10        PRT Night Queue
     C                     PARM P2DNCD    WQ1401  6        Application Cod
     C                     PARM '2'       WQ1402  1        Paper Type USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Submit Print
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
     C                     MOVEL#CH6DT    P9TOTX           Prod Date Alpha
      * Setup message data for message
     C                     MOVELP3WRST    ZA0022           PRT Printer Dev
     C                     MOVELP3WSST    ZA0023           PRT Hold Output
     C                     MOVELP3WTST    ZA0024           PRT Save Output
     C                     Z-ADDP3DYNB    ZA0025           PRT Number of C
     C                     MOVELP3BVVN    ZA0026           PRT Night Queue
     C                     MOVEL'PDSFPFR' ZA0027           Program name US
     C                     MOVEL'PDSFPFR$'ZA0028           Program Name$ U
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0029           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0029           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL#CAJCD    ZA0030           Warehouse Code
     C                     MOVEL#CWPST    ZA0031           Warehouse Type
     C                     MOVELP9TOTX    ZA0032           Prod Date Alpha
     C                     MOVEL#CW4ST    ZA0033           Primary/Load St
     C                     Z-ADD#CLDSZ    ZA0034           Load Size USR
     C                     MOVEL#2V4CD    ZA0035           Availability Gr
     C                     MOVEL@CN,02    ZA0036           Job Name
     C                     MOVEL#CPTZR    ZA0037           Print Zeros USR
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2254' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993134*
     C                     SETON                     363332*
     C                     SETON                     35    *
     C                     END
      *
     C                     END                             *FI
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * Print Item Orders     F23
      * CASE: CTL.*CMD key is CF23
     C           *IN23     IFEQ '1'                        *IF
      * PMT Prt Opt w/PSz SHR  PV - Print Options  * 
     C                     CALL 'PDV8PVR'              90  PMT Prt Opt w/P
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,01    WQ1403 25        PRT Description
     C           P3WRST    PARM P3WRST    WQ1404 10        PRT Printer Dev
     C           P3WSST    PARM P3WSST    WQ1405  4        PRT Hold Output
     C           P3WTST    PARM P3WTST    WQ1406  4        PRT Save Output
     C           P3DYNB    PARM P3DYNB    WQ1407  20       PRT Number of C
     C           P3WUST    PARM P3WUST    WQ1408  1        PRT Night Queue
     C           P3BVVN    PARM P3BVVN    WQ1409 10        PRT Night Queue
     C                     PARM P2DNCD    WQ1410  6        Application Cod
     C                     PARM '2'       WQ1411  1        Paper Type USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Submit Print
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ 'Y2U9999'                  *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Set up start of print
      * CASE: CTL.Avail Ship Date 1 USR LE JOB.*Job date
     C           #CH6DT    IFLE ##JDT                      *IF
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
     C                     MOVEL##JDT     P9TOTX           Prod Date Alpha
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
     C                     MOVEL#CH6DT    P9TOTX           Prod Date Alpha
     C                     END                             *FI
      * Setup message data for message
     C                     MOVELP3WRST    ZA0038           PRT Printer Dev
     C                     MOVELP3WSST    ZA0039           PRT Hold Output
     C                     MOVELP3WTST    ZA0040           PRT Save Output
     C                     Z-ADDP3DYNB    ZA0041           PRT Number of C
     C                     MOVELP3BVVN    ZA0042           PRT Night Queue
     C                     MOVEL'PDQHPFR' ZA0043           Program name US
     C                     MOVEL'PDQHPFR$'ZA0044           Program Name$ U
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0045           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0045           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL#CAJCD    ZA0046           Warehouse Code
     C                     MOVEL#CWPST    ZA0047           Warehouse Type
     C                     MOVELP9TOTX    ZA0048           Prod Date Alpha
     C                     MOVEL#2V4CD    ZA0049           Availability Gr
     C                     MOVEL@CN,03    ZA0050           Job Name
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR2380' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0021' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993134*
     C                     SETON                     3632  *
     C                     END
      *
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * F10=Edit PA Group Items
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * CASE: CTL.Availability Group Code is ALL
     C           #2V4CD    IFEQ 'ALL'                      *IF
      * Send message 'Function key not allowed'
     C                     MOVEL'USR1833' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.Availability Group Code is NE Blank
     C           #2V4CD    IFNE *BLANK                     *IF
      * RTV Group Description  RT - Availability Group  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#2V4CD    WL0007    P      Availability Gr
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    #CNVNA    P      Availability Gr
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * EDT Availability Group E1 - Availability Group  * 
     C                     CLEARPARC
     C                     MOVEL#2V4CD    PAV4CD    P      Availability Gr
      *
     C                     CALL 'PDD3E1R'              90  EDT Availabilit
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Availabili
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDD3E1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
      * Edt Group Items       EF - Company Item Avail Group  * 
     C                     CLEARPBRC
     C                     Z-ADD#2AIC3    PBAIC3           Company Number
     C                     MOVEL#2V4CD    PBV4CD    P      Availability Gr
      *
     C                     CALL 'PDD8EFR'              90  Edt Group Items
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Company It
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDD8EFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * F5=Refresh
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F09=Dsp Item/Whse Inquiry DF
      * CASE: CTL.*CMD key is CF09
     C           *IN09     IFEQ '1'                        *IF
      * Dsp Item/Whse Inquiry DF - Item Balance  * 
     C                     CALL 'PDPVDFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDPVDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * F11=Primary/Load
      * CASE: CTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * CASE: CTL.Primary/Load Sts USR is Primary
     C           #CW4ST    IFEQ 'P'                        *IF
     C                     MOVEL'L'       #CW4ST           Primary/Load St
      * Val:  Load Size
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Primary/Load Sts USR is Load Size
      *   |- c2    : CTL.Load Size USR is Not Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     Z-ADD#CLDSZ    ZA0051           Load Size USR
      * Send message 'Load Size Required'
     C                     MOVEL'USR2017' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       #CW4ST           Primary/Load St
     C                     END                             *FI
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * F07=Previous Week
      * CASE: CTL.*CMD key is CF07
     C           *IN07     IFEQ '1'                        *IF
      * CASE: PAR.Week Number is Weeks 2 & 3
     C           P4EINB    IFGE 2                          *IF
     C           P4EINB    ANDLE3
     C                     SUB  1         P4EINB           Week Number
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'PA Not Avail for Previous'
     C                     MOVEL'USR2806' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * F08-Next Week
      * CASE: CTL.*CMD key is CF08
     C           *IN08     IFEQ '1'                        *IF
      * CASE: PAR.Week Number is Weeks 1 & 2
     C           P4EINB    IFGE 1                          *IF
     C           P4EINB    ANDLE2
     C                     ADD  1         P4EINB           Week Number
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'PA Not Avail for Next WK'
     C                     MOVEL'USR2807' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * F20=Display totals
      * CASE: CTL.*CMD key is CF20
     C           *IN20     IFEQ '1'                        *IF
      * CASE: PAR.Display Flag 1 USR is no
     C           P5DXSX    IFEQ 'N'                        *IF
     C                     MOVEL'Y'       P5DXSX           Display Flag 1
      * Rtv Avail Ttls for Grp RT - Company Item/Avail Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0011           Company Number
     C                     MOVEL#2V4CD    WL0012    P      Availability Gr
     C                     Z-ADDP5H6DT    WL0013           Avail Ship Date
     C                     Z-ADDP5H7DT    WL0014           Avail Ship Date
     C                     Z-ADDP5H8DT    WL0015           Avail Ship Date
     C                     Z-ADDP5H9DT    WL0016           Avail Ship Date
     C                     Z-ADDP5IADT    WL0017           Avail Ship Date
     C                     Z-ADDP5IBDT    WL0018           Avail Ship Date
     C                     Z-ADDP5INDT    WL0019           Avail Ship Date
     C                     Z-ADDP5IODT    WL0020           Avail Ship Date
     C                     Z-ADDP5IPDT    WL0021           Avail Ship Date
     C                     Z-ADDP5IQDT    WL0022           Avail Ship Date
     C                     Z-ADDP5IRDT    WL0023           Avail Ship Date
     C                     Z-ADDP5ISDT    WL0024           Avail Ship Date
     C                     Z-ADDP5ITDT    WL0025           Avail Ship Date
     C                     Z-ADDP5IUDT    WL0026           Avail Ship Date
     C                     Z-ADDP5IVDT    WL0027           Avail Ship Date
     C                     Z-ADDP5IWDT    WL0028           Avail Ship Date
     C                     Z-ADDP5IXDT    WL0029           Avail Ship Date
     C                     Z-ADDP5IYDT    WL0030           Avail Ship Date
     C                     Z-ADDP5IZDT    WL0031           Avail Ship Date
     C                     Z-ADDP5I0DT    WL0032           Avail Ship Date
     C                     Z-ADDP5I1DT    WL0033           Avail Ship Date
     C                     Z-ADDP8GINB    WL0034           Day 1 Avail Tot
     C                     Z-ADDP8GJNB    WL0035           Day 2 Avail Tot
     C                     Z-ADDP8GKNB    WL0036           Day 3 Avail Tot
     C                     Z-ADDP8GLNB    WL0037           Day 4 Avail Tot
     C                     Z-ADDP8GMNB    WL0038           Day 5 Avail Tot
     C                     Z-ADDP8GNNB    WL0039           Day 6 Avail Tot
     C                     Z-ADDP8GONB    WL0040           Day 7 Avail Tot
     C                     Z-ADDP8IANB    WL0041           Day 8 Avail Tot
     C                     Z-ADDP8IBNB    WL0042           Day 9 Avail Tot
     C                     Z-ADDP8ICNB    WL0043           Day 10 Avail To
     C                     Z-ADDP8IDNB    WL0044           Day 11 Avail To
     C                     Z-ADDP8IENB    WL0045           Day 12 Avail To
     C                     Z-ADDP8IFNB    WL0046           Day 13 Avail To
     C                     Z-ADDP8IGNB    WL0047           Day 14 Avail To
     C                     Z-ADDP8IHNB    WL0048           Day 15 Avail To
     C                     Z-ADDP8IINB    WL0049           Day 16 Avail To
     C                     Z-ADDP8IJNB    WL0050           Day 17 Avail To
     C                     Z-ADDP8IKNB    WL0051           Day 18 Avail To
     C                     Z-ADDP8INNB    WL0052           Day 19 Avail To
     C                     Z-ADDP8IPNB    WL0053           Day 20 Avail To
     C                     Z-ADDP8IQNB    WL0054           Day 21 Avail To
     C                     MOVEL#CAJCD    WL0055    P      Warehouse Code
     C                     MOVEL#CWPST    WL0056    P      Warehouse Type
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    P8GINB           Day 1 Avail Tot
     C                     Z-ADDWL0035    P8GJNB           Day 2 Avail Tot
     C                     Z-ADDWL0036    P8GKNB           Day 3 Avail Tot
     C                     Z-ADDWL0037    P8GLNB           Day 4 Avail Tot
     C                     Z-ADDWL0038    P8GMNB           Day 5 Avail Tot
     C                     Z-ADDWL0039    P8GNNB           Day 6 Avail Tot
     C                     Z-ADDWL0040    P8GONB           Day 7 Avail Tot
     C                     Z-ADDWL0041    P8IANB           Day 8 Avail Tot
     C                     Z-ADDWL0042    P8IBNB           Day 9 Avail Tot
     C                     Z-ADDWL0043    P8ICNB           Day 10 Avail To
     C                     Z-ADDWL0044    P8IDNB           Day 11 Avail To
     C                     Z-ADDWL0045    P8IENB           Day 12 Avail To
     C                     Z-ADDWL0046    P8IFNB           Day 13 Avail To
     C                     Z-ADDWL0047    P8IGNB           Day 14 Avail To
     C                     Z-ADDWL0048    P8IHNB           Day 15 Avail To
     C                     Z-ADDWL0049    P8IINB           Day 16 Avail To
     C                     Z-ADDWL0050    P8IJNB           Day 17 Avail To
     C                     Z-ADDWL0051    P8IKNB           Day 18 Avail To
     C                     Z-ADDWL0052    P8INNB           Day 19 Avail To
     C                     Z-ADDWL0053    P8IPNB           Day 20 Avail To
     C                     Z-ADDWL0054    P8IQNB           Day 21 Avail To
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       P5DXSX           Display Flag 1
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,39
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * Dsp:  PA Details (NEW)  Opt 5     = FP1054 commented
      * CASE: RCD.*SFLSEL is *5
     C           #1SEL     IFEQ '5'                        *IF
      * CASE: CTL.Load Size USR is Not Entered
     C           #CLDSZ    IFEQ *ZERO                      *IF
     C                     Z-ADD42000     #CLDSZ           Load Size USR
     C                     END                             *FI
      * Dsp Product Availblty D1 - Company Item  * 
     C                     CALL 'PDGND1R'              90  Dsp Product Ava
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ1412  30       Company Number
     C                     PARM #1HGCD    WQ1413  70       Item Code
     C                     PARM #CAPTX    WQ1414 30        Name
     C                     PARM #CAJCD    WQ1415  3        Warehouse Code
     C                     PARM #CF8NA    WQ1416 30        Warehouse Descr
     C                     PARM #CWPST    WQ1417  2        Warehouse Type
     C                     PARM 'P'       WQ1418  1        Primary/Load St
     C                     PARM #CLDSZ    WQ1419  70       Load Size USR
     C                     PARM #CH6DT    WQ1420  70       Avail Ship Date
     C                     PARM #CH7DT    WQ1421  70       Avail Ship Date
     C                     PARM #CH8DT    WQ1422  70       Avail Ship Date
     C                     PARM #CH9DT    WQ1423  70       Avail Ship Date
     C                     PARM #CIADT    WQ1424  70       Avail Ship Date
     C                     PARM #CIBDT    WQ1425  70       Avail Ship Date
     C                     PARM #CINDT    WQ1426  70       Avail Ship Date
     C           YL0018    PARM YL0018    WQ1427  20       Week Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGND1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983134*
     C                     SETON                     3633  *
     C                     END
     C                     Z-ADD#1HGCD    #2HGCD           Item Code
     C                     END                             *FI
      * Dsp:  Item Orders        opt 8
      * CASE: RCD.*SFLSEL is *8
     C           #1SEL     IFEQ '8'                        *IF
     C                     MOVEL'Y'       YL0019           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ1428  30       Company Number
     C                     PARM #1HGCD    WQ1429  70       Item Code
     C                     PARM ##JDT     WQ1430  70       Scheduled Ship
     C                     PARM #CAPTX    WQ1431 30        Name
     C                     PARM #CAJCD    WQ1432  3        Warehouse Code
     C           YL0019    PARM YL0019    WQ1433  1        *Initial call
     C                     PARM #CWPST    WQ1434  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983134*
     C                     SETON                     36    *
     C                     END
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * Dsp:  Item Warehouse Inquiry Detail
      * CASE: RCD.*SFLSEL is 9
     C           #1SEL     IFEQ '9'                        *IF
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0052           Warehouse Code
      * Send message 'Warehouse Code Required'
     C                     MOVEL'USR2015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0019           *Initial call
      * CASE: CTL.Lot Tracking Flag is yes
     C           #CVHST    IFEQ 'Y'                        *IF
      * Dsp Item Lot Locs     DF - Item Lot Location  * 
     C                     CALL 'PDH2DFR'              90  Dsp Item Lot Lo
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ1435  30       Company Number
     C                     PARM #1HGCD    WQ1436  70       Item Code
     C                     PARM #CAJCD    WQ1437  3        Warehouse Code
     C                     PARM *ZERO     WQ1438  70       Production Date
     C           YL0019    PARM YL0019    WQ1439  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDH2DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983134*
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ1440  30       Company Number
     C                     PARM #1HGCD    WQ1441  70       Item Code
     C                     PARM WUGENA    WQ1442 30        Description Lin
     C                     PARM #RADCD    WQ1443  2        U/M - Primary
     C                     PARM #RAWPC    WQ1444  94       Conversion Fact
     C                     PARM #RLXST    WQ1445  1        Operation Facto
     C                     PARM #RAECD    WQ1446  2        U/M - Second
     C                     PARM #RAXPC    WQ1447  94       Conversion Fact
     C                     PARM #RLYST    WQ1448  1        Operation Facto
     C                     PARM #RAFCD    WQ1449  2        U/M - Third
     C                     PARM #RAIWG    WQ1450 112       Unit Weight
     C                     PARM #RFZST    WQ1451  1        Production Date
     C                     PARM #RAVST    WQ1452  1        Catch Weight St
     C                     PARM #CAJCD    WQ1453  3        Warehouse Code
     C                     PARM #CF8NA    WQ1454 30        Warehouse Descr
     C                     PARM #CAPTX    WQ1455 30        Name
     C           YL0019    PARM YL0019    WQ1456  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983134*
     C                     END
     C                     END                             *FI
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * 10=Work With Inventory Availability
      * CASE: RCD.*SFLSEL is Option 10
     C           #1SEL     IFEQ '10'                       *IF
      * WW Inv Allocation     DF - Order Detail Schedule  * 
     C                     CLEARPCRC
     C                     Z-ADD#1AIC3    PCAIC3           Company Number
     C                     Z-ADD#1HGCD    PCHGCD           Item Code
     C                     MOVEL#CAJCD    PCAJCD    P      Warehouse Code
      *
     C                     CALL 'POP5DFR'              90  WW Inv Allocati
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PCRC             KEY: Order Deta
     C                     PARM *ZERO     WQ1457  70       Order Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP5DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9834  *
     C                     END
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * 11=Work With Order Production Schedule
      * CASE: RCD.*SFLSEL is Option 11
     C           #1SEL     IFEQ '11'                       *IF
      * CASE: RCD.Item Code is Base '*' USR is Select Base
     C           #RYLCD    IFEQ '*'                        *IF
     C                     Z-ADD#1HGCD    YL0020           Component Item
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv First Consumed Itm XF - Item Bill Of Material  * 
     C                     CALL 'POP1XFR'              90  Rtv First Consu
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ1458  30       Company Number
     C                     PARM #1HGCD    WQ1459  70       Item Code
     C           YL0020    PARM *ZERO     WQ1460  70       Component Item
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POP1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
      * Rtv Productin Whs     RT - Warehouse  * 
     C                     EXSR TQRVGN
      * WW OrdPrdSch Edit     DF - Order Detail  * 
     C                     CLEARPDRC
     C                     Z-ADDYL0020    PDNUDT           Consumed Item C
     C                     MOVELYL0021    PDF6SX    P      Production Ware
      *
     C                     CALL 'POQJDFR'              90  WW OrdPrdSch Ed
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PDRC             KEY: Order Deta
     C                     PARM #1HGCD    WQ1461  70       Item Code
     C                     PARM *BLANK    WQ1462132        Message USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
      * 15=Display Item Specification
      * CASE: RCD.*SFLSEL is Option 15
     C           #1SEL     IFEQ '15'                       *IF
      * Dps Item Specs        DR - Company Item  * 
     C                     CLEARPERC
     C                     Z-ADD#1AIC3    PEAIC3           Company Number
     C                     Z-ADD#1HGCD    PEHGCD           Item Code
      *
     C                     CALL 'POQMD1R'              90  Dsp Item Specs
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PERC             KEY: Company It
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQMD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       YL0005           Status Flag 17
      * SFL Save subfile pos   US - /UT User Source  * 
     C*   MAINTAIN SUBFILE POSITION WHERE POSSIBLE
     C           ##SFRC    IFGT *ZERO
     C                     Z-ADD##SFRC    W1SFRC  40
     C                     Z-ADD##SFRC    W0RR0
     C                     END
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN77
     C           #RD1AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           #RD2AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           #RD3AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           #RD4AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
     C                     MOVEL'0'       *IN73
     C           #RD5AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
     C                     MOVEL'0'       *IN72
     C           #RD6AV    IFLT *ZERO                      *IF
     C                     MOVEL'1'       *IN72
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2I6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           P5DXSX    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @KLREHH fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDKLAIC3    #1AIC3           Company Number
     C                     MOVELKLV4CD    #1V4CD           Availability Gr
     C                     Z-ADDKLIDSQ    #1IDSQ           Item Display Se
     C                     MOVELKLUVST    #1UVST           EDI Status 1
     C                     MOVELKLUWST    #1UWST           EDI Status 2
     C                     MOVELKLUXST    #1UXST           EDI Status 3
     C                     MOVELKLVSST    #1VSST           Record Status
     C                     Z-ADDKLAATM    #1AATM           Job Time
     C                     MOVELKLAYNA    #1AYNA           User Id
     C                     MOVELKLA0NA    #1A0NA           Job Name
     C                     Z-ADDKLAXDT    #1AXDT           Job Date
     C                     Z-ADDKLHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     #RAWPC           Conversion Fact
     C                     MOVEL*BLANK    #RLXST           Operation Facto
     C                     MOVEL*BLANK    #RAECD           U/M - Second
     C                     Z-ADD*ZERO     #RAXPC           Conversion Fact
     C                     MOVEL*BLANK    #RLYST           Operation Facto
     C                     MOVEL*BLANK    #RAFCD           U/M - Third
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     MOVEL*BLANK    #RFZST           Production Date
     C                     MOVEL*BLANK    #RAVST           Catch Weight St
     C                     Z-ADD*ZERO     #RD9AV           Day 9 Availabil
     C                     Z-ADD*ZERO     #RD1AB           Day 10 Availabi
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RYLCD           Item Code is Ba
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RGJNX           Day 8 Inventory
     C                     Z-ADD*ZERO     #RGCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     #RD1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     #RD2AV           Day 2 Availabil
     C                     Z-ADD*ZERO     #RD3AV           Day 3 Availabil
     C                     Z-ADD*ZERO     #RD4AV           Day 4 Availabil
     C                     Z-ADD*ZERO     #RD5AV           Day 5 Availabil
     C                     Z-ADD*ZERO     #RD6AV           Day 6 Availabil
     C                     Z-ADD*ZERO     #RD7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     #RD8AV           Day 8 Availabil
     C                     Z-ADD*ZERO     #RFQNX           Day 8 Unsch Shp
     C                     MOVEL*BLANK    #RGENA           Item Descriptio
     C                     Z-ADD*ZERO     #RD1AQ           Day 1 ATS Qty U
     C                     Z-ADD*ZERO     #RD2AQ           Day 2 ATS Qty U
     C                     Z-ADD*ZERO     #RD3AQ           Day 3 ATS Qty U
     C                     Z-ADD*ZERO     #RD4AQ           Day 4 ATS Qty U
     C                     Z-ADD*ZERO     #RD5AQ           Day 5 ATS Qty U
     C                     Z-ADD*ZERO     #RD6AQ           Day 6 ATS Qty U
     C                     Z-ADD*ZERO     #RD7AQ           Day 7 ATS Qty U
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     Z-ADD*ZERO     #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #CAPTX           Company Name
     C                     MOVEL*BLANK    #CW4ST           Primary/Load St
     C                     MOVEL*BLANK    #2V4CD           Availability Gr
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     Z-ADD*ZERO     #CLDSZ           Load Size USR
     C                     MOVEL*BLANK    #CAJCD           Warehouse Code
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CPTZR           Print Zeros USR
     C                     MOVEL*BLANK    #CWPST           Warehouse Type
     C                     MOVEL*BLANK    #CNENA           Warehouse Type
     C                     MOVEL*BLANK    #CMTTX           Field Descripti
     C                     Z-ADD*ZERO     #CGINB           Day 1 Avail Tot
     C                     Z-ADD*ZERO     #CGJNB           Day 2 Avail Tot
     C                     Z-ADD*ZERO     #CGKNB           Day 3 Avail Tot
     C                     Z-ADD*ZERO     #CGLNB           Day 4 Avail Tot
     C                     Z-ADD*ZERO     #CGMNB           Day 5 Avail Tot
     C                     Z-ADD*ZERO     #CGNNB           Day 6 Avail Tot
     C                     Z-ADD*ZERO     #CGONB           Day 7 Avail Tot
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVEL*BLANK    #CYLCD           Item Code is Ba
     C                     Z-ADD*ZERO     #CH6DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH6DT
     C                     Z-ADD*ZERO     #CH7DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH7DT
     C                     Z-ADD*ZERO     #CH8DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH8DT
     C                     Z-ADD*ZERO     #CH9DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH9DT
     C                     Z-ADD*ZERO     #CIADT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCIADT
     C                     Z-ADD*ZERO     #CIBDT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCIBDT
     C                     Z-ADD*ZERO     #CINDT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCINDT
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Avail Ship Date 1 USR to display format
      * Convert date
     C           1000000   ADD  #CH6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH6DT
      * Convert Avail Ship Date 2 USR to display format
      * Convert date
     C           1000000   ADD  #CH7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH7DT
      * Convert Avail Ship Date 3 USR to display format
      * Convert date
     C           1000000   ADD  #CH8DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH8DT
      * Convert Avail Ship Date 4 USR to display format
      * Convert date
     C           1000000   ADD  #CH9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH9DT
      * Convert Avail Ship Date 5 USR to display format
      * Convert date
     C           1000000   ADD  #CIADT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCIADT
      * Convert Avail Ship Date 6 USR to display format
      * Convert date
     C           1000000   ADD  #CIBDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCIBDT
      * Convert Avail Ship Date 7 USR to display format
      * Convert date
     C           1000000   ADD  #CINDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCINDT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Prd WHS w/AcctCo  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN ADBTC3    WQSA01           Accounting Comp
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Accounting Comp
      * Setup key
     C                     Z-ADDWL0001    WQSA01           Accounting Comp
      * Establish starting position
     C           KRSSA     SETLL@ADREHQ                    *
     C           KRSSA     READE@ADREHQ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Production Ware
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADAOCD    WL0002           Production Ware
     C                     GOTO SAEXIT                     *QUIT
     C           KRSSA     READE@ADREHQ                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0003    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSSB     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0004           Warehouse Descr
     C                     MOVEL*BLANK    WL0005           Lot Tracking Fl
     C                     MOVEL*BLANK    WL0006           Warehouse Type
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAF8NA    WL0004           Warehouse Descr
     C                     MOVELWAVHST    WL0005           Lot Tracking Fl
     C                     MOVELWAWPST    WL0006           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv All Fields         RT - Salesperson Electronic CM  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           NFBCCD           Salesperson Cod
      * Setup key
     C                     MOVELP2BCCD    NFBCCD           Salesperson Cod
      * Establish starting position
     C           KRSSC     CHAIN@NFREAW              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2882' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0001           Email Address
     C                     MOVEL*BLANK    #2V4CD           Availability Gr
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELNFUGTX    YL0001           Email Address
     C                     MOVELNFV4CD    #2V4CD           Availability Gr
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Group Description RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVELWL0007    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSD     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0008           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    WL0008           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0009    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0010           Shipping Compan
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBBWC3    WL0010           Shipping Compan
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSF     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAPTX           Name
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #CAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Avail Ttls for Grp RT - Company Item Avail Group  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0002  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0003  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0004  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0005  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0006  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0007  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0008  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0009  61       Day 9 Availabil
     C                     Z-ADD*ZERO     WN0010  61       Day 10 Availabi
     C                     Z-ADD*ZERO     WN0011  61       Day 11 Availabi
     C                     Z-ADD*ZERO     WN0012  61       Day 12 Availabi
     C                     Z-ADD*ZERO     WN0013  61       Day 13 Availabi
     C                     Z-ADD*ZERO     WN0014  61       Day 14 Availabi
     C                     Z-ADD*ZERO     WN0015  61       Day 15 Availabi
     C                     Z-ADD*ZERO     WN0016  61       Day 16 Availabi
     C                     Z-ADD*ZERO     WN0017  61       Day 17 Availabi
     C                     Z-ADD*ZERO     WN0018  61       Day 18 Availabi
     C                     Z-ADD*ZERO     WN0019  61       Day 19 Availabi
     C                     Z-ADD*ZERO     WN0020  61       Day 20 Availabi
     C                     Z-ADD*ZERO     WN0021  61       Day 21 Availabi
     C                     MOVEL*BLANK    WN0022  2        U/M - Primary
     C                     Z-ADD*ZERO     WN0023  94       Conversion Fact
     C                     MOVEL*BLANK    WN0024  1        Operation Facto
     C                     MOVEL*BLANK    WN0025  2        U/M - Second
     C                     Z-ADD*ZERO     WN0026  94       Conversion Fact
     C                     MOVEL*BLANK    WN0027  1        Operation Facto
     C                     MOVEL*BLANK    WN0028  2        U/M - Third
     C                     MOVEL*BLANK    WN0029  2        U/M - Pricing
     C                     Z-ADD*ZERO     WN0030 112       Unit Weight
     C                     Z-ADD*ZERO     WN0031  52       Fresh Chilling
     C                     MOVEL*BLANK    WN0032  2        Base/Conv/Loss
     C                     MOVEL*BLANK    WN0033  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0034  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0035  70       Bags Per Unit
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0001           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0002           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0003           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0004           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0005           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0006           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0007           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0008           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0009           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0010           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0011           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0012           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0013           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0014           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0015           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0016           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0017           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0018           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0019           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0020           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0021           Day 21 Availabi
     C                     Z-ADD*ZERO     WL0034           Day 1 Avail Tot
     C                     Z-ADD*ZERO     WL0035           Day 2 Avail Tot
     C                     Z-ADD*ZERO     WL0036           Day 3 Avail Tot
     C                     Z-ADD*ZERO     WL0037           Day 4 Avail Tot
     C                     Z-ADD*ZERO     WL0038           Day 5 Avail Tot
     C                     Z-ADD*ZERO     WL0039           Day 6 Avail Tot
     C                     Z-ADD*ZERO     WL0040           Day 7 Avail Tot
     C                     Z-ADD*ZERO     WL0041           Day 8 Avail Tot
     C                     Z-ADD*ZERO     WL0042           Day 9 Avail Tot
     C                     Z-ADD*ZERO     WL0043           Day 10 Avail To
     C                     Z-ADD*ZERO     WL0044           Day 11 Avail To
     C                     Z-ADD*ZERO     WL0045           Day 12 Avail To
     C                     Z-ADD*ZERO     WL0046           Day 13 Avail To
     C                     Z-ADD*ZERO     WL0047           Day 14 Avail To
     C                     Z-ADD*ZERO     WL0048           Day 15 Avail To
     C                     Z-ADD*ZERO     WL0049           Day 16 Avail To
     C                     Z-ADD*ZERO     WL0050           Day 17 Avail To
     C                     Z-ADD*ZERO     WL0051           Day 18 Avail To
     C                     Z-ADD*ZERO     WL0052           Day 19 Avail To
     C                     Z-ADD*ZERO     WL0053           Day 20 Avail To
     C                     Z-ADD*ZERO     WL0054           Day 21 Avail To
     C                     MOVEL*BLANK    WN0022           U/M - Primary
     C                     Z-ADD*ZERO     WN0023           Conversion Fact
     C                     MOVEL*BLANK    WN0024           Operation Facto
     C                     MOVEL*BLANK    WN0025           U/M - Second
     C                     Z-ADD*ZERO     WN0026           Conversion Fact
     C                     MOVEL*BLANK    WN0027           Operation Facto
     C                     MOVEL*BLANK    WN0028           U/M - Third
     C                     MOVEL*BLANK    WN0029           U/M - Pricing
     C                     Z-ADD*ZERO     WN0030           Unit Weight
     C                     Z-ADD*ZERO     WN0031           Fresh Chilling
     C                     MOVEL*BLANK    WN0032           Base/Conv/Loss
     C                     MOVEL*BLANK    WN0033           Piece Count Ite
     C                     Z-ADD*ZERO     WN0034           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0035           Bags Per Unit
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSG01           Company Number
     C           *LIKE     DEFN WCV4CD    WQSG02           Availability Gr
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Availability Gr
      * Setup key
     C                     Z-ADDWL0011    WQSG01           Company Number
     C                     MOVELWL0012    WQSG02           Availability Gr
      * Establish starting position
     C           KRSSG     SETLL@KLREY4                    *
     C           KRSSG     READE@KLREY4                  90*
      * Data record not found
     C   90                MOVEL'USR2217' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Base Values PA    RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0057           Company Number
     C                     Z-ADDWCHGCD    WL0058           Item Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0059    WUGENA    P      Description Lin
     C                     MOVELWL0060    WUAWNA    P      Description Lin
     C                     MOVELWL0061    WN0022    P      U/M - Primary
     C                     Z-ADDWL0062    WN0023           Conversion Fact
     C                     MOVELWL0063    WN0024    P      Operation Facto
     C                     MOVELWL0064    WN0025    P      U/M - Second
     C                     Z-ADDWL0065    WN0026           Conversion Fact
     C                     MOVELWL0066    WN0027    P      Operation Facto
     C                     MOVELWL0067    WN0028    P      U/M - Third
     C                     MOVELWL0068    WUAICD    P      U/M - Pricing
     C                     Z-ADDWL0069    WN0030           Unit Weight
     C                     MOVELWL0070    WUFZST    P      Production Date
     C                     MOVELWL0071    WUAVST    P      Catch Weight St
     C                     Z-ADDWL0072    WN0031           Fresh Chilling
     C                     MOVELWL0073    WN0032    P      Base/Conv/Loss
     C                     MOVELWL0074    WN0033    P      Piece Count Ite
     C                     Z-ADDWL0075    WN0034           Pieces Per Bag
     C                     Z-ADDWL0076    WN0035           Bags Per Unit
     C                     MOVELWL0077    WUVSST    P      Record Status
      * Rtv PA For 21 Days    RT - Warehouse  * 
     C                     EXSR SIRVGN
      * Add up totals
      * CASE: WRK.USR Work Field 1 CDE EQ WRK.USR Work Field 1 CDE
     C           WUYJCD    IFEQ WUYJCD                     *IF
     C                     ADD  WN0001    WL0034           Day 1 Avail Tot
     C                     ADD  WN0002    WL0035           Day 2 Avail Tot
     C                     ADD  WN0003    WL0036           Day 3 Avail Tot
     C                     ADD  WN0004    WL0037           Day 4 Avail Tot
     C                     ADD  WN0005    WL0038           Day 5 Avail Tot
     C                     ADD  WN0006    WL0039           Day 6 Avail Tot
     C                     ADD  WN0007    WL0040           Day 7 Avail Tot
     C                     ADD  WN0008    WL0041           Day 8 Avail Tot
     C                     ADD  WN0009    WL0042           Day 9 Avail Tot
     C                     ADD  WN0010    WL0043           Day 10 Avail To
     C                     ADD  WN0011    WL0044           Day 11 Avail To
     C                     ADD  WN0012    WL0045           Day 12 Avail To
     C                     ADD  WN0013    WL0046           Day 13 Avail To
     C                     ADD  WN0014    WL0047           Day 14 Avail To
     C                     ADD  WN0015    WL0048           Day 15 Avail To
     C                     ADD  WN0016    WL0049           Day 16 Avail To
     C                     ADD  WN0017    WL0050           Day 17 Avail To
     C                     ADD  WN0018    WL0051           Day 18 Avail To
     C                     ADD  WN0019    WL0052           Day 19 Avail To
     C                     ADD  WN0020    WL0053           Day 20 Avail To
     C                     ADD  WN0021    WL0054           Day 21 Avail To
     C                     END                             *FI
     C           KRSSG     READE@KLREY4                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Base Values PA    RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0057    BZAIC3           Company Number
     C                     Z-ADDWL0058    BZHGCD           Item Code
      * Establish starting position
     C           KRSSH     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0059           Description Lin
     C                     MOVEL*BLANK    WL0060           Description Lin
     C                     MOVEL*BLANK    WL0061           U/M - Primary
     C                     Z-ADD*ZERO     WL0062           Conversion Fact
     C                     MOVEL*BLANK    WL0063           Operation Facto
     C                     MOVEL*BLANK    WL0064           U/M - Second
     C                     Z-ADD*ZERO     WL0065           Conversion Fact
     C                     MOVEL*BLANK    WL0066           Operation Facto
     C                     MOVEL*BLANK    WL0067           U/M - Third
     C                     MOVEL*BLANK    WL0068           U/M - Pricing
     C                     Z-ADD*ZERO     WL0069           Unit Weight
     C                     MOVEL*BLANK    WL0070           Production Date
     C                     MOVEL*BLANK    WL0071           Catch Weight St
     C                     Z-ADD*ZERO     WL0072           Fresh Chilling
     C                     MOVEL*BLANK    WL0073           Base/Conv/Loss
     C                     MOVEL*BLANK    WL0074           Piece Count Ite
     C                     Z-ADD*ZERO     WL0075           Pieces Per Bag
     C                     Z-ADD*ZERO     WL0076           Bags Per Unit
     C                     MOVEL*BLANK    WL0077           Record Status
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0059           Description Lin
     C                     MOVELBZAWNA    WL0060           Description Lin
     C                     MOVELBZADCD    WL0061           U/M - Primary
     C                     Z-ADDBZAWPC    WL0062           Conversion Fact
     C                     MOVELBZLXST    WL0063           Operation Facto
     C                     MOVELBZAECD    WL0064           U/M - Second
     C                     Z-ADDBZAXPC    WL0065           Conversion Fact
     C                     MOVELBZLYST    WL0066           Operation Facto
     C                     MOVELBZAFCD    WL0067           U/M - Third
     C                     MOVELBZAICD    WL0068           U/M - Pricing
     C                     Z-ADDBZAIWG    WL0069           Unit Weight
     C                     MOVELBZFZST    WL0070           Production Date
     C                     MOVELBZAVST    WL0071           Catch Weight St
     C                     Z-ADDBZCHTM    WL0072           Fresh Chilling
     C                     MOVELBZQZCD    WL0073           Base/Conv/Loss
     C                     MOVELBZPCCT    WL0074           Piece Count Ite
     C                     Z-ADDBZBDNB    WL0075           Pieces Per Bag
     C                     Z-ADDBZBJNB    WL0076           Bags Per Unit
     C                     MOVELBZVSST    WL0077           Record Status
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv PA For 21 Days    RT - Warehouse  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0036  61       Day 1 Inventory
     C                     Z-ADD*ZERO     WN0037  61       Day 2 Inventory
     C                     Z-ADD*ZERO     WN0038  61       Day 3 Inventory
     C                     Z-ADD*ZERO     WN0039  61       Day 4 Inventory
     C                     Z-ADD*ZERO     WN0040  61       Day 5 Inventory
     C                     Z-ADD*ZERO     WN0041  61       Day 6 Inventory
     C                     Z-ADD*ZERO     WN0042  61       Day 7 Inventory
     C                     Z-ADD*ZERO     WN0043  61       Day 8 Inventory
     C                     Z-ADD*ZERO     WN0044  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0045  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0046  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0047  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0048  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0049  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0050  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0051  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0052  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0053  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0054  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0055  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0056  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0057  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0058  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0059  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0060  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0061  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0062  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0063  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0064  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0065  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0066  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0067  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0068  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0069  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0070  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0071  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0072  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0073  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0074  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0075  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0076  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0077  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0078  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0079  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0080  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0081  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0082  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0083  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0084  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0085  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0086  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0087  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0088  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0089  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0090  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0091  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0092  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0093  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0094  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0095  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0096  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0097  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0098  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0099  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0100  61       Day 9 Availabil
     C                     Z-ADD*ZERO     WN0101  61       Day 10 Availabi
     C                     Z-ADD*ZERO     WN0102  61       Day 11 Availabi
     C                     Z-ADD*ZERO     WN0103  61       Day 12 Availabi
     C                     Z-ADD*ZERO     WN0104  61       Day 13 Availabi
     C                     Z-ADD*ZERO     WN0105  61       Day 14 Availabi
     C                     Z-ADD*ZERO     WN0106  61       Day 15 Availabi
     C                     Z-ADD*ZERO     WN0107  61       Day 16 Availabi
     C                     Z-ADD*ZERO     WN0108  61       Day 17 Availabi
     C                     Z-ADD*ZERO     WN0109  61       Day 18 Availabi
     C                     Z-ADD*ZERO     WN0110  61       Day 19 Availabi
     C                     Z-ADD*ZERO     WN0111  61       Day 20 Availabi
     C                     Z-ADD*ZERO     WN0112  61       Day 21 Availabi
     C                     MOVEL*BLANK    WN0113  1        Status - Y or N
     C                     Z-ADD*ZERO     WN0114  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0115  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0116  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0117  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0118  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0119  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0120  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0121  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0122  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0123  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0124  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0125  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0126  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0127  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0128  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0129  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0130  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0131  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0132  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0133  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0134  61       Day 21 Sched Sh
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFFDT           USR Day 1
     C                     Z-ADD*ZERO     WUE1DT           USR Day 2
     C                     Z-ADD*ZERO     WUE2DT           USR Day 3
     C                     Z-ADD*ZERO     WUE3DT           USR Day 4
     C                     Z-ADD*ZERO     WUE4DT           USR Day 5
     C                     Z-ADD*ZERO     WUE5DT           USR Day 6
     C                     Z-ADD*ZERO     WUE6DT           USR Day 7
     C                     Z-ADD*ZERO     WUFKDT           USR Day 8
     C                     Z-ADD*ZERO     WUFLDT           USR Day 9
     C                     Z-ADD*ZERO     WUFGDT           USR Day 10
     C                     Z-ADD*ZERO     WUFHDT           USR Day 11
     C                     Z-ADD*ZERO     WUFIDT           USR Day 12
     C                     Z-ADD*ZERO     WUFJDT           USR Day 13
     C                     Z-ADD*ZERO     WUHPDT           USR Day 14
     C                     Z-ADD*ZERO     WUHQDT           USR Day 15
     C                     Z-ADD*ZERO     WUHRDT           USR Day 16
     C                     Z-ADD*ZERO     WUHSDT           USR Day 17
     C                     Z-ADD*ZERO     WUHTDT           USR Day 18
     C                     Z-ADD*ZERO     WUHUDT           USR Day 19
     C                     Z-ADD*ZERO     WUHVDT           USR Day 20
     C                     Z-ADD*ZERO     WUHWDT           USR Day 21
     C                     Z-ADD*ZERO     WN0036           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0037           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0038           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0039           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0040           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0041           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0042           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0043           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0044           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0045           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0046           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0047           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0048           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0049           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0050           Day 1 Productio
     C                     Z-ADD*ZERO     WN0051           Day 2 Productio
     C                     Z-ADD*ZERO     WN0052           Day 3 Productio
     C                     Z-ADD*ZERO     WN0053           Day 4 Productio
     C                     Z-ADD*ZERO     WN0054           Day 5 Productio
     C                     Z-ADD*ZERO     WN0055           Day 6 Productio
     C                     Z-ADD*ZERO     WN0056           Day 7 Productio
     C                     Z-ADD*ZERO     WN0057           Day 8 Productio
     C                     Z-ADD*ZERO     WN0058           Day 9 Productio
     C                     Z-ADD*ZERO     WN0059           Day 10 Producti
     C                     Z-ADD*ZERO     WN0060           Day 11 Producti
     C                     Z-ADD*ZERO     WN0061           Day 12 Producti
     C                     Z-ADD*ZERO     WN0062           Day 13 Producti
     C                     Z-ADD*ZERO     WN0063           Day 14 Producti
     C                     Z-ADD*ZERO     WN0064           Day 15 Producti
     C                     Z-ADD*ZERO     WN0065           Day 16 Producti
     C                     Z-ADD*ZERO     WN0066           Day 17 Producti
     C                     Z-ADD*ZERO     WN0067           Day 18 Producti
     C                     Z-ADD*ZERO     WN0068           Day 19 Producti
     C                     Z-ADD*ZERO     WN0069           Day 20 Producti
     C                     Z-ADD*ZERO     WN0070           Day 21 Producti
     C                     Z-ADD*ZERO     WN0071           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0072           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0073           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0074           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0075           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0076           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0077           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0078           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0079           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0080           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0081           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0082           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0083           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0084           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0085           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0086           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0087           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0088           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0089           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0090           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0091           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0092           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0093           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0094           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0095           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0096           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0097           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0098           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0099           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0100           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0101           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0102           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0103           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0104           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0105           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0106           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0107           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0108           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0109           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0110           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0111           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0112           Day 21 Availabi
     C                     MOVEL*BLANK    WN0113           Status - Y or N
     C                     Z-ADD*ZERO     WN0114           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0115           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0116           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0117           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0118           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0119           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0120           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0121           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0122           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0123           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0124           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0125           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0126           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0127           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0128           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0129           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0130           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0131           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0132           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0133           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0134           Day 21 Sched Sh
     C                     MOVEL*BLANK    WUGHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WUGISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WUGJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WUGKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WUGLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WUGMSX           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WUGNSX           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WUGOSX           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WUGPSX           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WUGQSX           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WUGRSX           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WUGSSX           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WUGTSX           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WUGUSX           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WUGVSX           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WUGWSX           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WUGXSX           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WUGYSX           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WUGZSX           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WUG0SX           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WUG1SX           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WUOHLO           Order Hold Over
     C                     Z-ADD*ZERO     WUC8NX           Order Hold Over
     C                     Z-ADD*ZERO     WUD1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     WUD2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     WUD3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     WUD4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     WUD5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     WUD6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     WUD7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     WUGCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WUGDNX           Day 9 Inventory
     C                     Z-ADD*ZERO     WUGENX           Day 10 Inventor
     C                     Z-ADD*ZERO     WUGFNX           Day 11 Inventor
     C                     Z-ADD*ZERO     WUGGNX           Day 12 Inventor
     C                     Z-ADD*ZERO     WUGHNX           Day 13 Inventor
     C                     Z-ADD*ZERO     WUGINX           Day 14 Inventor
     C                     Z-ADD*ZERO     WUD1PD           Day 1 Productio
     C                     Z-ADD*ZERO     WUD2PD           Day 2 Productio
     C                     Z-ADD*ZERO     WUD3PD           Day 3 Productio
     C                     Z-ADD*ZERO     WUD4PD           Day 4 Productio
     C                     Z-ADD*ZERO     WUD5PD           Day 5 Productio
     C                     Z-ADD*ZERO     WUD6PD           Day 6 Productio
     C                     Z-ADD*ZERO     WUD7PD           Day 7 Productio
     C                     Z-ADD*ZERO     WUD8PD           Day 8 Prod Tota
     C                     Z-ADD*ZERO     WUD9PD           Day 9 Prod Tota
     C                     Z-ADD*ZERO     WUD1PR           Day 10 Prod Tot
     C                     Z-ADD*ZERO     WUD2PR           Day 11 Prod Tot
     C                     Z-ADD*ZERO     WUD3PR           Day 12 Prod Tot
     C                     Z-ADD*ZERO     WUD4PR           Day 13 Prod Tot
     C                     Z-ADD*ZERO     WUD5PR           Day 14 Prod Tot
     C                     Z-ADD*ZERO     WUD6PR           Day 15 Prod Tot
     C                     Z-ADD*ZERO     WUD7PR           Day 16 Prod Tot
     C                     Z-ADD*ZERO     WUD8PR           Day 17 Prod Tot
     C                     Z-ADD*ZERO     WURKNB           Day 18 Prod Tot
     C                     Z-ADD*ZERO     WUD1PT           Day 19 Prod Tot
     C                     Z-ADD*ZERO     WUD2PT           Day 20 Prod Tot
     C                     Z-ADD*ZERO     WUD3PT           Day 21 Prod Tot
     C                     Z-ADD*ZERO     WUD1SL           Day 1 Sales Tot
     C                     Z-ADD*ZERO     WUD2SL           Day 2 Sales Tot
     C                     Z-ADD*ZERO     WUD3SL           Day 3 Sales Tot
     C                     Z-ADD*ZERO     WUD4SL           Day 4 Sales Tot
     C                     Z-ADD*ZERO     WUD5SL           Day 5 Sales Tot
     C                     Z-ADD*ZERO     WUD6SL           Day 6 Sales Tot
     C                     Z-ADD*ZERO     WUD7SL           Day 7 Sales Tot
     C                     Z-ADD*ZERO     WUZ5NB           Day 8 Sales Tot
     C                     Z-ADD*ZERO     WUD9SL           Day 9 Sales Tot
     C                     Z-ADD*ZERO     WUDSLS           Day 10 Sales To
     C                     Z-ADD*ZERO     WUD11S           Day 11 Sales To
     C                     Z-ADD*ZERO     WUD12S           Day 12 Sales To
     C                     Z-ADD*ZERO     WUD13S           Day 13 Sales To
     C                     Z-ADD*ZERO     WUD14S           Day 14 Sales To
     C                     Z-ADD*ZERO     WUD15S           Day 15 Sales To
     C                     Z-ADD*ZERO     WUD16S           Day 16 Sales To
     C                     Z-ADD*ZERO     WUD17S           Day 17 Sales To
     C                     Z-ADD*ZERO     WUD18S           Day 18 Sales To
     C                     Z-ADD*ZERO     WUD19S           Day 19 Sales To
     C                     Z-ADD*ZERO     WUD20S           Day 20 Sales To
     C                     Z-ADD*ZERO     WUD21S           Day 21 Sales To
     C                     Z-ADD*ZERO     WN0001           Day 1 Avail Tot
     C                     Z-ADD*ZERO     WN0002           Day 2 Avail Tot
     C                     Z-ADD*ZERO     WN0003           Day 3 Avail Tot
     C                     Z-ADD*ZERO     WN0004           Day 4 Avail Tot
     C                     Z-ADD*ZERO     WN0005           Day 5 Avail Tot
     C                     Z-ADD*ZERO     WN0006           Day 6 Avail Tot
     C                     Z-ADD*ZERO     WN0007           Day 7 Avail Tot
     C                     Z-ADD*ZERO     WN0008           Day 8 Avail Tot
     C                     Z-ADD*ZERO     WN0009           Day 9 Avail Tot
     C                     Z-ADD*ZERO     WN0010           Day 10 Avail To
     C                     Z-ADD*ZERO     WN0011           Day 11 Avail To
     C                     Z-ADD*ZERO     WN0012           Day 12 Avail To
     C                     Z-ADD*ZERO     WN0013           Day 13 Avail To
     C                     Z-ADD*ZERO     WN0014           Day 14 Avail To
     C                     Z-ADD*ZERO     WN0015           Day 15 Avail To
     C                     Z-ADD*ZERO     WN0016           Day 16 Avail To
     C                     Z-ADD*ZERO     WN0017           Day 17 Avail To
     C                     Z-ADD*ZERO     WN0018           Day 18 Avail To
     C                     Z-ADD*ZERO     WN0019           Day 19 Avail To
     C                     Z-ADD*ZERO     WN0020           Day 20 Avail To
     C                     Z-ADD*ZERO     WN0021           Day 21 Avail To
     C                     Z-ADD*ZERO     WUD1SS           Day 1 Schd Ship
     C                     Z-ADD*ZERO     WUD2SS           Day 2 Schd Ship
     C                     Z-ADD*ZERO     WUD3SS           Day 3 Schd Ship
     C                     Z-ADD*ZERO     WUVNNB           Day 4 Schd Ship
     C                     Z-ADD*ZERO     WUD5SS           Day 5 Schd Ship
     C                     Z-ADD*ZERO     WUVWNB           Day 6 Schd Ship
     C                     Z-ADD*ZERO     WUD7SS           Day 7 Schd Ship
     C                     Z-ADD*ZERO     WUD8SS           Day 8 Schd Ship
     C                     Z-ADD*ZERO     WUD9SS           Day 9 Schd Ship
     C                     Z-ADD*ZERO     WUD0SS           Day 10 SchdShip
     C                     Z-ADD*ZERO     WUD1SH           Day 11 SchdShip
     C                     Z-ADD*ZERO     WUD2SH           Day 12 SchdShip
     C                     Z-ADD*ZERO     WUD3SH           Day 13 SchdShip
     C                     Z-ADD*ZERO     WUD4SH           Day 14 SchdShip
     C                     Z-ADD*ZERO     WUD5SH           Day 15 SchdShip
     C                     Z-ADD*ZERO     WUD6SH           Day 16 SchdShip
     C                     Z-ADD*ZERO     WUD7SH           Day 17 SchdShip
     C                     Z-ADD*ZERO     WUI5NB           Day 18 SchdShip
     C                     Z-ADD*ZERO     WUD9SH           Day 19 SchdShip
     C                     Z-ADD*ZERO     WUD0SP           Day 20 SchdShip
     C                     Z-ADD*ZERO     WUD1SM           Day 21 SchdShip
     C                     MOVEL'N'       WN0113           Status - Y or N
      * Establish starting position
     C           *LOVAL    SETLL@ADREOJ                    *
     C                     READ @ADREOJ                  90*
      * Data record not found
     C   90                MOVEL'USR0007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Check for matching warehouse code and warehouse type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type is Equal blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0055    IFEQ *BLANK                     *IF
     C           WL0056    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *
     C                     MOVEL*BLANK    WN0135  3        Production Ware
     C                     MOVEL*BLANK    WN0136  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFFDT           USR Day 1
     C                     Z-ADD*ZERO     WUE1DT           USR Day 2
     C                     Z-ADD*ZERO     WUE2DT           USR Day 3
     C                     Z-ADD*ZERO     WUE3DT           USR Day 4
     C                     Z-ADD*ZERO     WUE4DT           USR Day 5
     C                     Z-ADD*ZERO     WUE5DT           USR Day 6
     C                     Z-ADD*ZERO     WUE6DT           USR Day 7
     C                     Z-ADD*ZERO     WUFKDT           USR Day 8
     C                     Z-ADD*ZERO     WUFLDT           USR Day 9
     C                     Z-ADD*ZERO     WUFGDT           USR Day 10
     C                     Z-ADD*ZERO     WUFHDT           USR Day 11
     C                     Z-ADD*ZERO     WUFIDT           USR Day 12
     C                     Z-ADD*ZERO     WUFJDT           USR Day 13
     C                     Z-ADD*ZERO     WUHPDT           USR Day 14
     C                     Z-ADD*ZERO     WUHQDT           USR Day 15
     C                     Z-ADD*ZERO     WUHRDT           USR Day 16
     C                     Z-ADD*ZERO     WUHSDT           USR Day 17
     C                     Z-ADD*ZERO     WUHTDT           USR Day 18
     C                     Z-ADD*ZERO     WUHUDT           USR Day 19
     C                     Z-ADD*ZERO     WUHVDT           USR Day 20
     C                     Z-ADD*ZERO     WUHWDT           USR Day 21
     C                     Z-ADD*ZERO     WN0036           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0037           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0038           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0039           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0040           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0041           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0042           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0043           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0044           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0045           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0046           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0047           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0048           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0049           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0050           Day 1 Productio
     C                     Z-ADD*ZERO     WN0051           Day 2 Productio
     C                     Z-ADD*ZERO     WN0052           Day 3 Productio
     C                     Z-ADD*ZERO     WN0053           Day 4 Productio
     C                     Z-ADD*ZERO     WN0054           Day 5 Productio
     C                     Z-ADD*ZERO     WN0055           Day 6 Productio
     C                     Z-ADD*ZERO     WN0056           Day 7 Productio
     C                     Z-ADD*ZERO     WN0057           Day 8 Productio
     C                     Z-ADD*ZERO     WN0058           Day 9 Productio
     C                     Z-ADD*ZERO     WN0059           Day 10 Producti
     C                     Z-ADD*ZERO     WN0060           Day 11 Producti
     C                     Z-ADD*ZERO     WN0061           Day 12 Producti
     C                     Z-ADD*ZERO     WN0062           Day 13 Producti
     C                     Z-ADD*ZERO     WN0063           Day 14 Producti
     C                     Z-ADD*ZERO     WN0064           Day 15 Producti
     C                     Z-ADD*ZERO     WN0065           Day 16 Producti
     C                     Z-ADD*ZERO     WN0066           Day 17 Producti
     C                     Z-ADD*ZERO     WN0067           Day 18 Producti
     C                     Z-ADD*ZERO     WN0068           Day 19 Producti
     C                     Z-ADD*ZERO     WN0069           Day 20 Producti
     C                     Z-ADD*ZERO     WN0070           Day 21 Producti
     C                     Z-ADD*ZERO     WN0071           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0072           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0073           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0074           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0075           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0076           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0077           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0078           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0079           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0080           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0081           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0082           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0083           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0084           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0085           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0086           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0087           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0088           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0089           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0090           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0091           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0092           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0093           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0094           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0095           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0096           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0097           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0098           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0099           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0100           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0101           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0102           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0103           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0104           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0105           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0106           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0107           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0108           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0109           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0110           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0111           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0112           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0114           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0115           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0116           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0117           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0118           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0119           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0120           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0121           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0122           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0123           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0124           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0125           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0126           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0127           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0128           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0129           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0130           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0131           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0132           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0133           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0134           Day 21 Sched Sh
     C                     MOVEL*BLANK    WUGHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WUGISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WUGJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WUGKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WUGLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WUGMSX           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WUGNSX           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WUGOSX           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WUGPSX           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WUGQSX           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WUGRSX           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WUGSSX           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WUGTSX           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WUGUSX           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WUGVSX           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WUGWSX           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WUGXSX           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WUGYSX           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WUGZSX           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WUG0SX           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WUG1SX           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WUOHLO           Order Hold Over
     C                     Z-ADD*ZERO     WUC8NX           Order Hold Over
     C                     MOVEL*BLANK    WN0135           Production Ware
     C                     MOVEL*BLANK    WN0136           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWDAJCD    WL0078    P      Warehouse Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0079    WN0135    P      Production Ware
     C                     MOVELWL0080    WN0136    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WCAIC3    WQ0001  30       Company Number
     C                     PARM WCHGCD    WQ0002  70       Item Code
     C                     PARM WDAJCD    WQ0003  3        Warehouse Code
     C                     PARM WN0030    WQ0004 112       Unit Weight
     C                     PARM WN0031    WQ0005  52       Fresh Chilling
     C                     PARM WN0033    WQ0006  1        Piece Count Ite
     C                     PARM WN0034    WQ0007  70       Pieces Per Bag
     C                     PARM WN0035    WQ0008  70       Bags Per Unit
     C                     PARM WL0013    WQ0009  70       Avail Ship Date
     C                     PARM WL0014    WQ0010  70       Avail Ship Date
     C                     PARM WL0015    WQ0011  70       Avail Ship Date
     C                     PARM WL0016    WQ0012  70       Avail Ship Date
     C                     PARM WL0017    WQ0013  70       Avail Ship Date
     C                     PARM WL0018    WQ0014  70       Avail Ship Date
     C                     PARM WL0019    WQ0015  70       Avail Ship Date
     C                     PARM WL0020    WQ0016  70       Avail Ship Date
     C                     PARM WL0021    WQ0017  70       Avail Ship Date
     C                     PARM WL0022    WQ0018  70       Avail Ship Date
     C                     PARM WL0023    WQ0019  70       Avail Ship Date
     C                     PARM WL0024    WQ0020  70       Avail Ship Date
     C                     PARM WL0025    WQ0021  70       Avail Ship Date
     C                     PARM WL0026    WQ0022  70       Avail Ship Date
     C           WN0036    PARM WN0036    WQ0023  61       Day 1 Inventory
     C           WN0037    PARM WN0037    WQ0024  61       Day 2 Inventory
     C           WN0038    PARM WN0038    WQ0025  61       Day 3 Inventory
     C           WN0039    PARM WN0039    WQ0026  61       Day 4 Inventory
     C           WN0040    PARM WN0040    WQ0027  61       Day 5 Inventory
     C           WN0041    PARM WN0041    WQ0028  61       Day 6 Inventory
     C           WN0042    PARM WN0042    WQ0029  61       Day 7 Inventory
     C           WN0043    PARM WN0043    WQ0030  61       Day 8 Inventory
     C           WN0044    PARM WN0044    WQ0031  61       Day 9 Inventory
     C           WN0045    PARM WN0045    WQ0032  61       Day 10 Inventor
     C           WN0046    PARM WN0046    WQ0033  61       Day 11 Inventor
     C           WN0047    PARM WN0047    WQ0034  61       Day 12 Inventor
     C           WN0048    PARM WN0048    WQ0035  61       Day 13 Inventor
     C           WN0049    PARM WN0049    WQ0036  61       Day 14 Inventor
     C           WN0071    PARM WN0071    WQ0037  61       Day 1 Sales USR
     C           WN0072    PARM WN0072    WQ0038  61       Day 2 Sales USR
     C           WN0073    PARM WN0073    WQ0039  61       Day 3 Sales USR
     C           WN0074    PARM WN0074    WQ0040  61       Day 4 Sales USR
     C           WN0075    PARM WN0075    WQ0041  61       Day 5 Sales USR
     C           WN0076    PARM WN0076    WQ0042  61       Day 6 Sales USR
     C           WN0077    PARM WN0077    WQ0043  61       Day 7 Sales USR
     C           WUOHLO    PARM WUOHLO    WQ0044  50       Order Hold Over
     C           WUC8NX    PARM WUC8NX    WQ0045  50       Order Hold Over
     C                     PARM WN0136    WQ0046  1        Lot Tracking Fl
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0081           Company Number
     C                     Z-ADDWCHGCD    WL0082           Item Code
     C                     MOVELWDAJCD    WL0083    P      Warehouse Code
     C                     Z-ADD##JDT     WL0084           PS Available Sh
     C                     Z-ADDWL0013    WL0085           Avail Ship Date
     C                     Z-ADDWL0014    WL0086           Avail Ship Date
     C                     Z-ADDWL0015    WL0087           Avail Ship Date
     C                     Z-ADDWL0016    WL0088           Avail Ship Date
     C                     Z-ADDWL0017    WL0089           Avail Ship Date
     C                     Z-ADDWL0018    WL0090           Avail Ship Date
     C                     Z-ADDWL0019    WL0091           Avail Ship Date
     C                     Z-ADDWL0020    WL0092           Avail Ship Date
     C                     Z-ADDWL0021    WL0093           Avail Ship Date
     C                     Z-ADDWL0022    WL0094           Avail Ship Date
     C                     Z-ADDWL0023    WL0095           Avail Ship Date
     C                     Z-ADDWL0024    WL0096           Avail Ship Date
     C                     Z-ADDWL0025    WL0097           Avail Ship Date
     C                     Z-ADDWL0026    WL0098           Avail Ship Date
     C                     Z-ADDWL0027    WL0099           Avail Ship Date
     C                     Z-ADDWL0028    WL0100           Avail Ship Date
     C                     Z-ADDWL0029    WL0101           Avail Ship Date
     C                     Z-ADDWL0030    WL0102           Avail Ship Date
     C                     Z-ADDWL0031    WL0103           Avail Ship Date
     C                     Z-ADDWL0032    WL0104           Avail Ship Date
     C                     Z-ADDWL0033    WL0105           Avail Ship Date
     C                     Z-ADDWN0050    WL0127           Day 1 Productio
     C                     Z-ADDWN0051    WL0128           Day 2 Productio
     C                     Z-ADDWN0052    WL0129           Day 3 Productio
     C                     Z-ADDWN0053    WL0130           Day 4 Productio
     C                     Z-ADDWN0054    WL0131           Day 5 Productio
     C                     Z-ADDWN0055    WL0132           Day 6 Productio
     C                     Z-ADDWN0056    WL0133           Day 7 Productio
     C                     Z-ADDWN0057    WL0134           Day 8 Productio
     C                     Z-ADDWN0058    WL0135           Day 9 Productio
     C                     Z-ADDWN0059    WL0136           Day 10 Producti
     C                     Z-ADDWN0060    WL0137           Day 11 Producti
     C                     Z-ADDWN0061    WL0138           Day 12 Producti
     C                     Z-ADDWN0062    WL0139           Day 13 Producti
     C                     Z-ADDWN0063    WL0140           Day 14 Producti
     C                     Z-ADDWN0064    WL0141           Day 15 Producti
     C                     Z-ADDWN0065    WL0142           Day 16 Producti
     C                     Z-ADDWN0066    WL0143           Day 17 Producti
     C                     Z-ADDWN0067    WL0144           Day 18 Producti
     C                     Z-ADDWN0068    WL0145           Day 19 Producti
     C                     Z-ADDWN0069    WL0146           Day 20 Producti
     C                     Z-ADDWN0070    WL0147           Day 21 Producti
     C                     Z-ADDWN0030    WL0148           Unit Weight
     C                     Z-ADDWN0031    WL0149           Fresh Chilling
     C                     MOVELWN0033    WL0150    P      Piece Count Ite
     C                     Z-ADDWN0034    WL0151           Pieces Per Bag
     C                     Z-ADDWN0035    WL0152           Bags Per Unit
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0106    WUFFDT           USR Day 1
     C                     Z-ADDWL0107    WUE1DT           USR Day 2
     C                     Z-ADDWL0108    WUE2DT           USR Day 3
     C                     Z-ADDWL0109    WUE3DT           USR Day 4
     C                     Z-ADDWL0110    WUE4DT           USR Day 5
     C                     Z-ADDWL0111    WUE5DT           USR Day 6
     C                     Z-ADDWL0112    WUE6DT           USR Day 7
     C                     Z-ADDWL0113    WUFKDT           USR Day 8
     C                     Z-ADDWL0114    WUFLDT           USR Day 9
     C                     Z-ADDWL0115    WUFGDT           USR Day 10
     C                     Z-ADDWL0116    WUFHDT           USR Day 11
     C                     Z-ADDWL0117    WUFIDT           USR Day 12
     C                     Z-ADDWL0118    WUFJDT           USR Day 13
     C                     Z-ADDWL0119    WUHPDT           USR Day 14
     C                     Z-ADDWL0120    WUHQDT           USR Day 15
     C                     Z-ADDWL0121    WUHRDT           USR Day 16
     C                     Z-ADDWL0122    WUHSDT           USR Day 17
     C                     Z-ADDWL0123    WUHTDT           USR Day 18
     C                     Z-ADDWL0124    WUHUDT           USR Day 19
     C                     Z-ADDWL0125    WUHVDT           USR Day 20
     C                     Z-ADDWL0126    WUHWDT           USR Day 21
     C                     Z-ADDWL0127    WN0050           Day 1 Productio
     C                     Z-ADDWL0128    WN0051           Day 2 Productio
     C                     Z-ADDWL0129    WN0052           Day 3 Productio
     C                     Z-ADDWL0130    WN0053           Day 4 Productio
     C                     Z-ADDWL0131    WN0054           Day 5 Productio
     C                     Z-ADDWL0132    WN0055           Day 6 Productio
     C                     Z-ADDWL0133    WN0056           Day 7 Productio
     C                     Z-ADDWL0134    WN0057           Day 8 Productio
     C                     Z-ADDWL0135    WN0058           Day 9 Productio
     C                     Z-ADDWL0136    WN0059           Day 10 Producti
     C                     Z-ADDWL0137    WN0060           Day 11 Producti
     C                     Z-ADDWL0138    WN0061           Day 12 Producti
     C                     Z-ADDWL0139    WN0062           Day 13 Producti
     C                     Z-ADDWL0140    WN0063           Day 14 Producti
     C                     Z-ADDWL0141    WN0064           Day 15 Producti
     C                     Z-ADDWL0142    WN0065           Day 16 Producti
     C                     Z-ADDWL0143    WN0066           Day 17 Producti
     C                     Z-ADDWL0144    WN0067           Day 18 Producti
     C                     Z-ADDWL0145    WN0068           Day 19 Producti
     C                     Z-ADDWL0146    WN0069           Day 20 Producti
     C                     Z-ADDWL0147    WN0070           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SLRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0036    ADD  WN0050    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0114    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0071    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0092           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0153           Avail Ship Date
     C                     Z-ADDWUFFDT    WL0154           Production Date
     C                     Z-ADDWN0036    WL0155           Quantity Invent
     C                     Z-ADDWN0050    WL0156           Quantity Produc
     C                     Z-ADDWN0114    WL0157           Quantity Sched
     C                     Z-ADDWN0071    WL0158           Quantity Sales
     C                     Z-ADDWN0092    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0037    ADD  WN0051    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0115    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0072    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0093           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0153           Avail Ship Date
     C                     Z-ADDWUE1DT    WL0154           Production Date
     C                     Z-ADDWN0037    WL0155           Quantity Invent
     C                     Z-ADDWN0051    WL0156           Quantity Produc
     C                     Z-ADDWN0115    WL0157           Quantity Sched
     C                     Z-ADDWN0072    WL0158           Quantity Sales
     C                     Z-ADDWN0093    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0038    ADD  WN0052    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0116    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0073    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0094           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0153           Avail Ship Date
     C                     Z-ADDWUE2DT    WL0154           Production Date
     C                     Z-ADDWN0038    WL0155           Quantity Invent
     C                     Z-ADDWN0052    WL0156           Quantity Produc
     C                     Z-ADDWN0116    WL0157           Quantity Sched
     C                     Z-ADDWN0073    WL0158           Quantity Sales
     C                     Z-ADDWN0094    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0039    ADD  WN0053    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0117    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0074    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0095           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0153           Avail Ship Date
     C                     Z-ADDWUE3DT    WL0154           Production Date
     C                     Z-ADDWN0039    WL0155           Quantity Invent
     C                     Z-ADDWN0053    WL0156           Quantity Produc
     C                     Z-ADDWN0117    WL0157           Quantity Sched
     C                     Z-ADDWN0074    WL0158           Quantity Sales
     C                     Z-ADDWN0095    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0040    ADD  WN0054    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0118    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0075    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0096           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0153           Avail Ship Date
     C                     Z-ADDWUE4DT    WL0154           Production Date
     C                     Z-ADDWN0040    WL0155           Quantity Invent
     C                     Z-ADDWN0054    WL0156           Quantity Produc
     C                     Z-ADDWN0118    WL0157           Quantity Sched
     C                     Z-ADDWN0075    WL0158           Quantity Sales
     C                     Z-ADDWN0096    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0041    ADD  WN0055    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0119    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0076    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0097           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0153           Avail Ship Date
     C                     Z-ADDWUE5DT    WL0154           Production Date
     C                     Z-ADDWN0041    WL0155           Quantity Invent
     C                     Z-ADDWN0055    WL0156           Quantity Produc
     C                     Z-ADDWN0119    WL0157           Quantity Sched
     C                     Z-ADDWN0076    WL0158           Quantity Sales
     C                     Z-ADDWN0097    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0042    ADD  WN0056    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0120    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0077    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0098           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0153           Avail Ship Date
     C                     Z-ADDWUE6DT    WL0154           Production Date
     C                     Z-ADDWN0042    WL0155           Quantity Invent
     C                     Z-ADDWN0056    WL0156           Quantity Produc
     C                     Z-ADDWN0120    WL0157           Quantity Sched
     C                     Z-ADDWN0077    WL0158           Quantity Sales
     C                     Z-ADDWN0098    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0057    SUB  WN0121    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0078    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0099           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0153           Avail Ship Date
     C                     Z-ADDWUFKDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0057    WL0156           Quantity Produc
     C                     Z-ADDWN0121    WL0157           Quantity Sched
     C                     Z-ADDWN0078    WL0158           Quantity Sales
     C                     Z-ADDWN0099    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0058    SUB  WN0122    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0079    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0100           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0153           Avail Ship Date
     C                     Z-ADDWUFLDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0058    WL0156           Quantity Produc
     C                     Z-ADDWN0122    WL0157           Quantity Sched
     C                     Z-ADDWN0079    WL0158           Quantity Sales
     C                     Z-ADDWN0100    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0059    SUB  WN0123    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0080    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0101           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0153           Avail Ship Date
     C                     Z-ADDWUFGDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0059    WL0156           Quantity Produc
     C                     Z-ADDWN0123    WL0157           Quantity Sched
     C                     Z-ADDWN0080    WL0158           Quantity Sales
     C                     Z-ADDWN0101    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0060    SUB  WN0124    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0081    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0102           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0153           Avail Ship Date
     C                     Z-ADDWUFHDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0060    WL0156           Quantity Produc
     C                     Z-ADDWN0124    WL0157           Quantity Sched
     C                     Z-ADDWN0081    WL0158           Quantity Sales
     C                     Z-ADDWN0102    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0061    SUB  WN0125    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0082    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0103           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0153           Avail Ship Date
     C                     Z-ADDWUFIDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0061    WL0156           Quantity Produc
     C                     Z-ADDWN0125    WL0157           Quantity Sched
     C                     Z-ADDWN0082    WL0158           Quantity Sales
     C                     Z-ADDWN0103    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0062    SUB  WN0126    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0083    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0104           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0153           Avail Ship Date
     C                     Z-ADDWUFJDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0062    WL0156           Quantity Produc
     C                     Z-ADDWN0126    WL0157           Quantity Sched
     C                     Z-ADDWN0083    WL0158           Quantity Sales
     C                     Z-ADDWN0104    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0063    SUB  WN0127    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0084    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0105           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0153           Avail Ship Date
     C                     Z-ADDWUHPDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0063    WL0156           Quantity Produc
     C                     Z-ADDWN0127    WL0157           Quantity Sched
     C                     Z-ADDWN0084    WL0158           Quantity Sales
     C                     Z-ADDWN0105    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0064    SUB  WN0128    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0085    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0106           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0153           Avail Ship Date
     C                     Z-ADDWUHQDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0064    WL0156           Quantity Produc
     C                     Z-ADDWN0128    WL0157           Quantity Sched
     C                     Z-ADDWN0085    WL0158           Quantity Sales
     C                     Z-ADDWN0106    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0065    SUB  WN0129    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0086    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0107           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0153           Avail Ship Date
     C                     Z-ADDWUHRDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0065    WL0156           Quantity Produc
     C                     Z-ADDWN0129    WL0157           Quantity Sched
     C                     Z-ADDWN0086    WL0158           Quantity Sales
     C                     Z-ADDWN0107    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0066    SUB  WN0130    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0087    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0108           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0153           Avail Ship Date
     C                     Z-ADDWUHSDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0066    WL0156           Quantity Produc
     C                     Z-ADDWN0130    WL0157           Quantity Sched
     C                     Z-ADDWN0087    WL0158           Quantity Sales
     C                     Z-ADDWN0108    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0067    SUB  WN0131    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0088    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0109           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0153           Avail Ship Date
     C                     Z-ADDWUHTDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0067    WL0156           Quantity Produc
     C                     Z-ADDWN0131    WL0157           Quantity Sched
     C                     Z-ADDWN0088    WL0158           Quantity Sales
     C                     Z-ADDWN0109    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0068    SUB  WN0132    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0089    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0110           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0153           Avail Ship Date
     C                     Z-ADDWUHUDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0068    WL0156           Quantity Produc
     C                     Z-ADDWN0132    WL0157           Quantity Sched
     C                     Z-ADDWN0089    WL0158           Quantity Sales
     C                     Z-ADDWN0110    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0069    SUB  WN0133    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0090    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0111           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0153           Avail Ship Date
     C                     Z-ADDWUHVDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0069    WL0156           Quantity Produc
     C                     Z-ADDWN0133    WL0157           Quantity Sched
     C                     Z-ADDWN0090    WL0158           Quantity Sales
     C                     Z-ADDWN0111    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0070    SUB  WN0134    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0091    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0112           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0153           Avail Ship Date
     C                     Z-ADDWUHWDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0070    WL0156           Quantity Produc
     C                     Z-ADDWN0134    WL0157           Quantity Sched
     C                     Z-ADDWN0091    WL0158           Quantity Sales
     C                     Z-ADDWN0112    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0161           Company Number
     C                     Z-ADDWUC4NB    WL0162           Order Number
     C                     Z-ADDWCHGCD    WL0163           Item Code
     C                     MOVELWDAJCD    WL0164    P      Warehouse Code
     C                     Z-ADD##JDT     WL0165           Scheduled Ship
     C                     Z-ADDWL0033    WL0166           Avail Ship Date
     C                     MOVELWN0135    WL0167    P      Production Ware
     C                     MOVELWN0136    WL0168    P      Lot Tracking Fl
     C                     EXSR SORVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0135    IFEQ WDAJCD                     *IF
     C           WN0135    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0227           Company Number
     C                     Z-ADDWCHGCD    WL0228           Item Code
     C                     MOVELWDAJCD    WL0229    P      Warehouse Code
     C                     Z-ADD##JDT     WL0230           Scheduled Ship
     C                     Z-ADDWL0033    WL0231           Avail Ship Date
     C                     EXSR TBRVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0114           Quantity Sched
     C                     Z-ADDWL0234    WN0071           Quantity Sales
     C                     Z-ADDWL0235    WN0092           Quantity Availa
     C                     MOVELWL0236    WUGHSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0115           Quantity Sched
     C                     Z-ADDWL0234    WN0072           Quantity Sales
     C                     Z-ADDWL0235    WN0093           Quantity Availa
     C                     MOVELWL0236    WUGISX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0116           Quantity Sched
     C                     Z-ADDWL0234    WN0073           Quantity Sales
     C                     Z-ADDWL0235    WN0094           Quantity Availa
     C                     MOVELWL0236    WUGJSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0117           Quantity Sched
     C                     Z-ADDWL0234    WN0074           Quantity Sales
     C                     Z-ADDWL0235    WN0095           Quantity Availa
     C                     MOVELWL0236    WUGKSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0118           Quantity Sched
     C                     Z-ADDWL0234    WN0075           Quantity Sales
     C                     Z-ADDWL0235    WN0096           Quantity Availa
     C                     MOVELWL0236    WUGLSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0119           Quantity Sched
     C                     Z-ADDWL0234    WN0076           Quantity Sales
     C                     Z-ADDWL0235    WN0097           Quantity Availa
     C                     MOVELWL0236    WUGMSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0120           Quantity Sched
     C                     Z-ADDWL0234    WN0077           Quantity Sales
     C                     Z-ADDWL0235    WN0098           Quantity Availa
     C                     MOVELWL0236    WUGNSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0121           Quantity Sched
     C                     Z-ADDWL0234    WN0078           Quantity Sales
     C                     Z-ADDWL0235    WN0099           Quantity Availa
     C                     MOVELWL0236    WUGOSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0122           Quantity Sched
     C                     Z-ADDWL0234    WN0079           Quantity Sales
     C                     Z-ADDWL0235    WN0100           Quantity Availa
     C                     MOVELWL0236    WUGPSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0123           Quantity Sched
     C                     Z-ADDWL0234    WN0080           Quantity Sales
     C                     Z-ADDWL0235    WN0101           Quantity Availa
     C                     MOVELWL0236    WUGQSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0124           Quantity Sched
     C                     Z-ADDWL0234    WN0081           Quantity Sales
     C                     Z-ADDWL0235    WN0102           Quantity Availa
     C                     MOVELWL0236    WUGRSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0125           Quantity Sched
     C                     Z-ADDWL0234    WN0082           Quantity Sales
     C                     Z-ADDWL0235    WN0103           Quantity Availa
     C                     MOVELWL0236    WUGSSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0126           Quantity Sched
     C                     Z-ADDWL0234    WN0083           Quantity Sales
     C                     Z-ADDWL0235    WN0104           Quantity Availa
     C                     MOVELWL0236    WUGTSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0127           Quantity Sched
     C                     Z-ADDWL0234    WN0084           Quantity Sales
     C                     Z-ADDWL0235    WN0105           Quantity Availa
     C                     MOVELWL0236    WUGUSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0128           Quantity Sched
     C                     Z-ADDWL0234    WN0085           Quantity Sales
     C                     Z-ADDWL0235    WN0106           Quantity Availa
     C                     MOVELWL0236    WUGVSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0129           Quantity Sched
     C                     Z-ADDWL0234    WN0086           Quantity Sales
     C                     Z-ADDWL0235    WN0107           Quantity Availa
     C                     MOVELWL0236    WUGWSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0130           Quantity Sched
     C                     Z-ADDWL0234    WN0087           Quantity Sales
     C                     Z-ADDWL0235    WN0108           Quantity Availa
     C                     MOVELWL0236    WUGXSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0131           Quantity Sched
     C                     Z-ADDWL0234    WN0088           Quantity Sales
     C                     Z-ADDWL0235    WN0109           Quantity Availa
     C                     MOVELWL0236    WUGYSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0132           Quantity Sched
     C                     Z-ADDWL0234    WN0089           Quantity Sales
     C                     Z-ADDWL0235    WN0110           Quantity Availa
     C                     MOVELWL0236    WUGZSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0133           Quantity Sched
     C                     Z-ADDWL0234    WN0090           Quantity Sales
     C                     Z-ADDWL0235    WN0111           Quantity Availa
     C                     MOVELWL0236    WUG0SX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0134           Quantity Sched
     C                     Z-ADDWL0234    WN0091           Quantity Sales
     C                     Z-ADDWL0235    WN0112           Quantity Availa
     C                     MOVELWL0236    WUG1SX    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0113           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * If whse code is blank & whse type isn't, calculate for that whse
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type EQ DB1.Warehouse Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0055    IFEQ *BLANK                     *IF
     C           WL0056    IFEQ WDWPST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WUGHSX' defaulted for 'Day 1 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGISX' defaulted for 'Day 2 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGJSX' defaulted for 'Day 3 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGKSX' defaulted for 'Day 4 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGLSX' defaulted for 'Day 5 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGMSX' defaulted for 'Day 6 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGNSX' defaulted for 'Day 7 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGOSX' defaulted for 'Day 8 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGPSX' defaulted for 'Day 9 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGQSX' defaulted for 'Day 10 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGRSX' defaulted for 'Day 11 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGSSX' defaulted for 'Day 12 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGTSX' defaulted for 'Day 13 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGUSX' defaulted for 'Day 14 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGVSX' defaulted for 'Day 15 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGWSX' defaulted for 'Day 16 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGXSX' defaulted for 'Day 17 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGYSX' defaulted for 'Day 18 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGZSX' defaulted for 'Day 19 Rsrv Other Whse Fl'.
      * Field '(PAR) WUG0SX' defaulted for 'Day 20 Rsrv Other Whse Fl'.
      * Field '(PAR) WUG1SX' defaulted for 'Day 21 Rsrv Other Whse Fl'.
      *
     C                     MOVEL*BLANK    WN0180  3        Production Ware
     C                     MOVEL*BLANK    WN0181  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFFDT           USR Day 1
     C                     Z-ADD*ZERO     WUE1DT           USR Day 2
     C                     Z-ADD*ZERO     WUE2DT           USR Day 3
     C                     Z-ADD*ZERO     WUE3DT           USR Day 4
     C                     Z-ADD*ZERO     WUE4DT           USR Day 5
     C                     Z-ADD*ZERO     WUE5DT           USR Day 6
     C                     Z-ADD*ZERO     WUE6DT           USR Day 7
     C                     Z-ADD*ZERO     WUFKDT           USR Day 8
     C                     Z-ADD*ZERO     WUFLDT           USR Day 9
     C                     Z-ADD*ZERO     WUFGDT           USR Day 10
     C                     Z-ADD*ZERO     WUFHDT           USR Day 11
     C                     Z-ADD*ZERO     WUFIDT           USR Day 12
     C                     Z-ADD*ZERO     WUFJDT           USR Day 13
     C                     Z-ADD*ZERO     WUHPDT           USR Day 14
     C                     Z-ADD*ZERO     WUHQDT           USR Day 15
     C                     Z-ADD*ZERO     WUHRDT           USR Day 16
     C                     Z-ADD*ZERO     WUHSDT           USR Day 17
     C                     Z-ADD*ZERO     WUHTDT           USR Day 18
     C                     Z-ADD*ZERO     WUHUDT           USR Day 19
     C                     Z-ADD*ZERO     WUHVDT           USR Day 20
     C                     Z-ADD*ZERO     WUHWDT           USR Day 21
     C                     Z-ADD*ZERO     WN0036           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0037           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0038           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0039           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0040           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0041           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0042           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0043           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0044           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0045           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0046           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0047           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0048           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0049           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0050           Day 1 Productio
     C                     Z-ADD*ZERO     WN0051           Day 2 Productio
     C                     Z-ADD*ZERO     WN0052           Day 3 Productio
     C                     Z-ADD*ZERO     WN0053           Day 4 Productio
     C                     Z-ADD*ZERO     WN0054           Day 5 Productio
     C                     Z-ADD*ZERO     WN0055           Day 6 Productio
     C                     Z-ADD*ZERO     WN0056           Day 7 Productio
     C                     Z-ADD*ZERO     WN0057           Day 8 Productio
     C                     Z-ADD*ZERO     WN0058           Day 9 Productio
     C                     Z-ADD*ZERO     WN0059           Day 10 Producti
     C                     Z-ADD*ZERO     WN0060           Day 11 Producti
     C                     Z-ADD*ZERO     WN0061           Day 12 Producti
     C                     Z-ADD*ZERO     WN0062           Day 13 Producti
     C                     Z-ADD*ZERO     WN0063           Day 14 Producti
     C                     Z-ADD*ZERO     WN0064           Day 15 Producti
     C                     Z-ADD*ZERO     WN0065           Day 16 Producti
     C                     Z-ADD*ZERO     WN0066           Day 17 Producti
     C                     Z-ADD*ZERO     WN0067           Day 18 Producti
     C                     Z-ADD*ZERO     WN0068           Day 19 Producti
     C                     Z-ADD*ZERO     WN0069           Day 20 Producti
     C                     Z-ADD*ZERO     WN0070           Day 21 Producti
     C                     Z-ADD*ZERO     WN0071           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0072           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0073           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0074           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0075           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0076           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0077           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0078           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0079           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0080           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0081           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0082           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0083           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0084           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0085           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0086           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0087           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0088           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0089           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0090           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0091           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0092           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0093           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0094           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0095           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0096           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0097           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0098           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0099           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0100           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0101           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0102           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0103           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0104           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0105           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0106           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0107           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0108           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0109           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0110           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0111           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0112           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0114           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0115           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0116           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0117           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0118           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0119           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0120           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0121           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0122           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0123           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0124           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0125           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0126           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0127           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0128           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0129           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0130           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0131           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0132           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0133           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0134           Day 21 Sched Sh
     C                     MOVEL*BLANK    WUGHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WUGISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WUGJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WUGKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WUGLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WUGMSX           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WUGNSX           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WUGOSX           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WUGPSX           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WUGQSX           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WUGRSX           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WUGSSX           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WUGTSX           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WUGUSX           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WUGVSX           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WUGWSX           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WUGXSX           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WUGYSX           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WUGZSX           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WUG0SX           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WUG1SX           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WUOHLO           Order Hold Over
     C                     Z-ADD*ZERO     WUC8NX           Order Hold Over
     C                     MOVEL*BLANK    WN0180           Production Ware
     C                     MOVEL*BLANK    WN0181           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWDAJCD    WL0078    P      Warehouse Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0079    WN0180    P      Production Ware
     C                     MOVELWL0080    WN0181    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WCAIC3    WQ0047  30       Company Number
     C                     PARM WCHGCD    WQ0048  70       Item Code
     C                     PARM WDAJCD    WQ0049  3        Warehouse Code
     C                     PARM WN0030    WQ0050 112       Unit Weight
     C                     PARM WN0031    WQ0051  52       Fresh Chilling
     C                     PARM WN0033    WQ0052  1        Piece Count Ite
     C                     PARM WN0034    WQ0053  70       Pieces Per Bag
     C                     PARM WN0035    WQ0054  70       Bags Per Unit
     C                     PARM WL0013    WQ0055  70       Avail Ship Date
     C                     PARM WL0014    WQ0056  70       Avail Ship Date
     C                     PARM WL0015    WQ0057  70       Avail Ship Date
     C                     PARM WL0016    WQ0058  70       Avail Ship Date
     C                     PARM WL0017    WQ0059  70       Avail Ship Date
     C                     PARM WL0018    WQ0060  70       Avail Ship Date
     C                     PARM WL0019    WQ0061  70       Avail Ship Date
     C                     PARM WL0020    WQ0062  70       Avail Ship Date
     C                     PARM WL0021    WQ0063  70       Avail Ship Date
     C                     PARM WL0022    WQ0064  70       Avail Ship Date
     C                     PARM WL0023    WQ0065  70       Avail Ship Date
     C                     PARM WL0024    WQ0066  70       Avail Ship Date
     C                     PARM WL0025    WQ0067  70       Avail Ship Date
     C                     PARM WL0026    WQ0068  70       Avail Ship Date
     C           WN0036    PARM WN0036    WQ0069  61       Day 1 Inventory
     C           WN0037    PARM WN0037    WQ0070  61       Day 2 Inventory
     C           WN0038    PARM WN0038    WQ0071  61       Day 3 Inventory
     C           WN0039    PARM WN0039    WQ0072  61       Day 4 Inventory
     C           WN0040    PARM WN0040    WQ0073  61       Day 5 Inventory
     C           WN0041    PARM WN0041    WQ0074  61       Day 6 Inventory
     C           WN0042    PARM WN0042    WQ0075  61       Day 7 Inventory
     C           WN0043    PARM WN0043    WQ0076  61       Day 8 Inventory
     C           WN0044    PARM WN0044    WQ0077  61       Day 9 Inventory
     C           WN0045    PARM WN0045    WQ0078  61       Day 10 Inventor
     C           WN0046    PARM WN0046    WQ0079  61       Day 11 Inventor
     C           WN0047    PARM WN0047    WQ0080  61       Day 12 Inventor
     C           WN0048    PARM WN0048    WQ0081  61       Day 13 Inventor
     C           WN0049    PARM WN0049    WQ0082  61       Day 14 Inventor
     C           WN0071    PARM WN0071    WQ0083  61       Day 1 Sales USR
     C           WN0072    PARM WN0072    WQ0084  61       Day 2 Sales USR
     C           WN0073    PARM WN0073    WQ0085  61       Day 3 Sales USR
     C           WN0074    PARM WN0074    WQ0086  61       Day 4 Sales USR
     C           WN0075    PARM WN0075    WQ0087  61       Day 5 Sales USR
     C           WN0076    PARM WN0076    WQ0088  61       Day 6 Sales USR
     C           WN0077    PARM WN0077    WQ0089  61       Day 7 Sales USR
     C           WUOHLO    PARM WUOHLO    WQ0090  50       Order Hold Over
     C           WUC8NX    PARM WUC8NX    WQ0091  50       Order Hold Over
     C                     PARM WN0181    WQ0092  1        Lot Tracking Fl
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0081           Company Number
     C                     Z-ADDWCHGCD    WL0082           Item Code
     C                     MOVELWDAJCD    WL0083    P      Warehouse Code
     C                     Z-ADD##JDT     WL0084           PS Available Sh
     C                     Z-ADDWL0013    WL0085           Avail Ship Date
     C                     Z-ADDWL0014    WL0086           Avail Ship Date
     C                     Z-ADDWL0015    WL0087           Avail Ship Date
     C                     Z-ADDWL0016    WL0088           Avail Ship Date
     C                     Z-ADDWL0017    WL0089           Avail Ship Date
     C                     Z-ADDWL0018    WL0090           Avail Ship Date
     C                     Z-ADDWL0019    WL0091           Avail Ship Date
     C                     Z-ADDWL0020    WL0092           Avail Ship Date
     C                     Z-ADDWL0021    WL0093           Avail Ship Date
     C                     Z-ADDWL0022    WL0094           Avail Ship Date
     C                     Z-ADDWL0023    WL0095           Avail Ship Date
     C                     Z-ADDWL0024    WL0096           Avail Ship Date
     C                     Z-ADDWL0025    WL0097           Avail Ship Date
     C                     Z-ADDWL0026    WL0098           Avail Ship Date
     C                     Z-ADDWL0027    WL0099           Avail Ship Date
     C                     Z-ADDWL0028    WL0100           Avail Ship Date
     C                     Z-ADDWL0029    WL0101           Avail Ship Date
     C                     Z-ADDWL0030    WL0102           Avail Ship Date
     C                     Z-ADDWL0031    WL0103           Avail Ship Date
     C                     Z-ADDWL0032    WL0104           Avail Ship Date
     C                     Z-ADDWL0033    WL0105           Avail Ship Date
     C                     Z-ADDWN0050    WL0127           Day 1 Productio
     C                     Z-ADDWN0051    WL0128           Day 2 Productio
     C                     Z-ADDWN0052    WL0129           Day 3 Productio
     C                     Z-ADDWN0053    WL0130           Day 4 Productio
     C                     Z-ADDWN0054    WL0131           Day 5 Productio
     C                     Z-ADDWN0055    WL0132           Day 6 Productio
     C                     Z-ADDWN0056    WL0133           Day 7 Productio
     C                     Z-ADDWN0057    WL0134           Day 8 Productio
     C                     Z-ADDWN0058    WL0135           Day 9 Productio
     C                     Z-ADDWN0059    WL0136           Day 10 Producti
     C                     Z-ADDWN0060    WL0137           Day 11 Producti
     C                     Z-ADDWN0061    WL0138           Day 12 Producti
     C                     Z-ADDWN0062    WL0139           Day 13 Producti
     C                     Z-ADDWN0063    WL0140           Day 14 Producti
     C                     Z-ADDWN0064    WL0141           Day 15 Producti
     C                     Z-ADDWN0065    WL0142           Day 16 Producti
     C                     Z-ADDWN0066    WL0143           Day 17 Producti
     C                     Z-ADDWN0067    WL0144           Day 18 Producti
     C                     Z-ADDWN0068    WL0145           Day 19 Producti
     C                     Z-ADDWN0069    WL0146           Day 20 Producti
     C                     Z-ADDWN0070    WL0147           Day 21 Producti
     C                     Z-ADDWN0030    WL0148           Unit Weight
     C                     Z-ADDWN0031    WL0149           Fresh Chilling
     C                     MOVELWN0033    WL0150    P      Piece Count Ite
     C                     Z-ADDWN0034    WL0151           Pieces Per Bag
     C                     Z-ADDWN0035    WL0152           Bags Per Unit
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0106    WUFFDT           USR Day 1
     C                     Z-ADDWL0107    WUE1DT           USR Day 2
     C                     Z-ADDWL0108    WUE2DT           USR Day 3
     C                     Z-ADDWL0109    WUE3DT           USR Day 4
     C                     Z-ADDWL0110    WUE4DT           USR Day 5
     C                     Z-ADDWL0111    WUE5DT           USR Day 6
     C                     Z-ADDWL0112    WUE6DT           USR Day 7
     C                     Z-ADDWL0113    WUFKDT           USR Day 8
     C                     Z-ADDWL0114    WUFLDT           USR Day 9
     C                     Z-ADDWL0115    WUFGDT           USR Day 10
     C                     Z-ADDWL0116    WUFHDT           USR Day 11
     C                     Z-ADDWL0117    WUFIDT           USR Day 12
     C                     Z-ADDWL0118    WUFJDT           USR Day 13
     C                     Z-ADDWL0119    WUHPDT           USR Day 14
     C                     Z-ADDWL0120    WUHQDT           USR Day 15
     C                     Z-ADDWL0121    WUHRDT           USR Day 16
     C                     Z-ADDWL0122    WUHSDT           USR Day 17
     C                     Z-ADDWL0123    WUHTDT           USR Day 18
     C                     Z-ADDWL0124    WUHUDT           USR Day 19
     C                     Z-ADDWL0125    WUHVDT           USR Day 20
     C                     Z-ADDWL0126    WUHWDT           USR Day 21
     C                     Z-ADDWL0127    WN0050           Day 1 Productio
     C                     Z-ADDWL0128    WN0051           Day 2 Productio
     C                     Z-ADDWL0129    WN0052           Day 3 Productio
     C                     Z-ADDWL0130    WN0053           Day 4 Productio
     C                     Z-ADDWL0131    WN0054           Day 5 Productio
     C                     Z-ADDWL0132    WN0055           Day 6 Productio
     C                     Z-ADDWL0133    WN0056           Day 7 Productio
     C                     Z-ADDWL0134    WN0057           Day 8 Productio
     C                     Z-ADDWL0135    WN0058           Day 9 Productio
     C                     Z-ADDWL0136    WN0059           Day 10 Producti
     C                     Z-ADDWL0137    WN0060           Day 11 Producti
     C                     Z-ADDWL0138    WN0061           Day 12 Producti
     C                     Z-ADDWL0139    WN0062           Day 13 Producti
     C                     Z-ADDWL0140    WN0063           Day 14 Producti
     C                     Z-ADDWL0141    WN0064           Day 15 Producti
     C                     Z-ADDWL0142    WN0065           Day 16 Producti
     C                     Z-ADDWL0143    WN0066           Day 17 Producti
     C                     Z-ADDWL0144    WN0067           Day 18 Producti
     C                     Z-ADDWL0145    WN0068           Day 19 Producti
     C                     Z-ADDWL0146    WN0069           Day 20 Producti
     C                     Z-ADDWL0147    WN0070           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SLRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0036    ADD  WN0050    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0114    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0071    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0092           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0153           Avail Ship Date
     C                     Z-ADDWUFFDT    WL0154           Production Date
     C                     Z-ADDWN0036    WL0155           Quantity Invent
     C                     Z-ADDWN0050    WL0156           Quantity Produc
     C                     Z-ADDWN0114    WL0157           Quantity Sched
     C                     Z-ADDWN0071    WL0158           Quantity Sales
     C                     Z-ADDWN0092    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0037    ADD  WN0051    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0115    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0072    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0093           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0153           Avail Ship Date
     C                     Z-ADDWUE1DT    WL0154           Production Date
     C                     Z-ADDWN0037    WL0155           Quantity Invent
     C                     Z-ADDWN0051    WL0156           Quantity Produc
     C                     Z-ADDWN0115    WL0157           Quantity Sched
     C                     Z-ADDWN0072    WL0158           Quantity Sales
     C                     Z-ADDWN0093    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0038    ADD  WN0052    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0116    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0073    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0094           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0153           Avail Ship Date
     C                     Z-ADDWUE2DT    WL0154           Production Date
     C                     Z-ADDWN0038    WL0155           Quantity Invent
     C                     Z-ADDWN0052    WL0156           Quantity Produc
     C                     Z-ADDWN0116    WL0157           Quantity Sched
     C                     Z-ADDWN0073    WL0158           Quantity Sales
     C                     Z-ADDWN0094    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0039    ADD  WN0053    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0117    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0074    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0095           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0153           Avail Ship Date
     C                     Z-ADDWUE3DT    WL0154           Production Date
     C                     Z-ADDWN0039    WL0155           Quantity Invent
     C                     Z-ADDWN0053    WL0156           Quantity Produc
     C                     Z-ADDWN0117    WL0157           Quantity Sched
     C                     Z-ADDWN0074    WL0158           Quantity Sales
     C                     Z-ADDWN0095    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0040    ADD  WN0054    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0118    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0075    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0096           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0153           Avail Ship Date
     C                     Z-ADDWUE4DT    WL0154           Production Date
     C                     Z-ADDWN0040    WL0155           Quantity Invent
     C                     Z-ADDWN0054    WL0156           Quantity Produc
     C                     Z-ADDWN0118    WL0157           Quantity Sched
     C                     Z-ADDWN0075    WL0158           Quantity Sales
     C                     Z-ADDWN0096    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0041    ADD  WN0055    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0119    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0076    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0097           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0153           Avail Ship Date
     C                     Z-ADDWUE5DT    WL0154           Production Date
     C                     Z-ADDWN0041    WL0155           Quantity Invent
     C                     Z-ADDWN0055    WL0156           Quantity Produc
     C                     Z-ADDWN0119    WL0157           Quantity Sched
     C                     Z-ADDWN0076    WL0158           Quantity Sales
     C                     Z-ADDWN0097    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0042    ADD  WN0056    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0120    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0077    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0098           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0153           Avail Ship Date
     C                     Z-ADDWUE6DT    WL0154           Production Date
     C                     Z-ADDWN0042    WL0155           Quantity Invent
     C                     Z-ADDWN0056    WL0156           Quantity Produc
     C                     Z-ADDWN0120    WL0157           Quantity Sched
     C                     Z-ADDWN0077    WL0158           Quantity Sales
     C                     Z-ADDWN0098    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0057    SUB  WN0121    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0078    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0099           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0153           Avail Ship Date
     C                     Z-ADDWUFKDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0057    WL0156           Quantity Produc
     C                     Z-ADDWN0121    WL0157           Quantity Sched
     C                     Z-ADDWN0078    WL0158           Quantity Sales
     C                     Z-ADDWN0099    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0058    SUB  WN0122    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0079    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0100           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0153           Avail Ship Date
     C                     Z-ADDWUFLDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0058    WL0156           Quantity Produc
     C                     Z-ADDWN0122    WL0157           Quantity Sched
     C                     Z-ADDWN0079    WL0158           Quantity Sales
     C                     Z-ADDWN0100    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0059    SUB  WN0123    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0080    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0101           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0153           Avail Ship Date
     C                     Z-ADDWUFGDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0059    WL0156           Quantity Produc
     C                     Z-ADDWN0123    WL0157           Quantity Sched
     C                     Z-ADDWN0080    WL0158           Quantity Sales
     C                     Z-ADDWN0101    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0060    SUB  WN0124    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0081    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0102           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0153           Avail Ship Date
     C                     Z-ADDWUFHDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0060    WL0156           Quantity Produc
     C                     Z-ADDWN0124    WL0157           Quantity Sched
     C                     Z-ADDWN0081    WL0158           Quantity Sales
     C                     Z-ADDWN0102    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0061    SUB  WN0125    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0082    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0103           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0153           Avail Ship Date
     C                     Z-ADDWUFIDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0061    WL0156           Quantity Produc
     C                     Z-ADDWN0125    WL0157           Quantity Sched
     C                     Z-ADDWN0082    WL0158           Quantity Sales
     C                     Z-ADDWN0103    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0062    SUB  WN0126    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0083    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0104           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0153           Avail Ship Date
     C                     Z-ADDWUFJDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0062    WL0156           Quantity Produc
     C                     Z-ADDWN0126    WL0157           Quantity Sched
     C                     Z-ADDWN0083    WL0158           Quantity Sales
     C                     Z-ADDWN0104    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0063    SUB  WN0127    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0084    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0105           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0153           Avail Ship Date
     C                     Z-ADDWUHPDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0063    WL0156           Quantity Produc
     C                     Z-ADDWN0127    WL0157           Quantity Sched
     C                     Z-ADDWN0084    WL0158           Quantity Sales
     C                     Z-ADDWN0105    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0064    SUB  WN0128    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0085    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0106           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0153           Avail Ship Date
     C                     Z-ADDWUHQDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0064    WL0156           Quantity Produc
     C                     Z-ADDWN0128    WL0157           Quantity Sched
     C                     Z-ADDWN0085    WL0158           Quantity Sales
     C                     Z-ADDWN0106    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0065    SUB  WN0129    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0086    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0107           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0153           Avail Ship Date
     C                     Z-ADDWUHRDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0065    WL0156           Quantity Produc
     C                     Z-ADDWN0129    WL0157           Quantity Sched
     C                     Z-ADDWN0086    WL0158           Quantity Sales
     C                     Z-ADDWN0107    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0066    SUB  WN0130    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0087    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0108           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0153           Avail Ship Date
     C                     Z-ADDWUHSDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0066    WL0156           Quantity Produc
     C                     Z-ADDWN0130    WL0157           Quantity Sched
     C                     Z-ADDWN0087    WL0158           Quantity Sales
     C                     Z-ADDWN0108    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0067    SUB  WN0131    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0088    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0109           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0153           Avail Ship Date
     C                     Z-ADDWUHTDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0067    WL0156           Quantity Produc
     C                     Z-ADDWN0131    WL0157           Quantity Sched
     C                     Z-ADDWN0088    WL0158           Quantity Sales
     C                     Z-ADDWN0109    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0068    SUB  WN0132    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0089    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0110           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0153           Avail Ship Date
     C                     Z-ADDWUHUDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0068    WL0156           Quantity Produc
     C                     Z-ADDWN0132    WL0157           Quantity Sched
     C                     Z-ADDWN0089    WL0158           Quantity Sales
     C                     Z-ADDWN0110    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0069    SUB  WN0133    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0090    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0111           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0153           Avail Ship Date
     C                     Z-ADDWUHVDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0069    WL0156           Quantity Produc
     C                     Z-ADDWN0133    WL0157           Quantity Sched
     C                     Z-ADDWN0090    WL0158           Quantity Sales
     C                     Z-ADDWN0111    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0070    SUB  WN0134    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0091    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0112           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0153           Avail Ship Date
     C                     Z-ADDWUHWDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0070    WL0156           Quantity Produc
     C                     Z-ADDWN0134    WL0157           Quantity Sched
     C                     Z-ADDWN0091    WL0158           Quantity Sales
     C                     Z-ADDWN0112    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0161           Company Number
     C                     Z-ADDWUC4NB    WL0162           Order Number
     C                     Z-ADDWCHGCD    WL0163           Item Code
     C                     MOVELWDAJCD    WL0164    P      Warehouse Code
     C                     Z-ADD##JDT     WL0165           Scheduled Ship
     C                     Z-ADDWL0033    WL0166           Avail Ship Date
     C                     MOVELWN0180    WL0167    P      Production Ware
     C                     MOVELWN0181    WL0168    P      Lot Tracking Fl
     C                     EXSR SORVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0180    IFEQ WDAJCD                     *IF
     C           WN0180    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0227           Company Number
     C                     Z-ADDWCHGCD    WL0228           Item Code
     C                     MOVELWDAJCD    WL0229    P      Warehouse Code
     C                     Z-ADD##JDT     WL0230           Scheduled Ship
     C                     Z-ADDWL0033    WL0231           Avail Ship Date
     C                     EXSR TBRVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0114           Quantity Sched
     C                     Z-ADDWL0234    WN0071           Quantity Sales
     C                     Z-ADDWL0235    WN0092           Quantity Availa
     C                     MOVELWL0236    WUGHSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0115           Quantity Sched
     C                     Z-ADDWL0234    WN0072           Quantity Sales
     C                     Z-ADDWL0235    WN0093           Quantity Availa
     C                     MOVELWL0236    WUGISX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0116           Quantity Sched
     C                     Z-ADDWL0234    WN0073           Quantity Sales
     C                     Z-ADDWL0235    WN0094           Quantity Availa
     C                     MOVELWL0236    WUGJSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0117           Quantity Sched
     C                     Z-ADDWL0234    WN0074           Quantity Sales
     C                     Z-ADDWL0235    WN0095           Quantity Availa
     C                     MOVELWL0236    WUGKSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0118           Quantity Sched
     C                     Z-ADDWL0234    WN0075           Quantity Sales
     C                     Z-ADDWL0235    WN0096           Quantity Availa
     C                     MOVELWL0236    WUGLSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0119           Quantity Sched
     C                     Z-ADDWL0234    WN0076           Quantity Sales
     C                     Z-ADDWL0235    WN0097           Quantity Availa
     C                     MOVELWL0236    WUGMSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0120           Quantity Sched
     C                     Z-ADDWL0234    WN0077           Quantity Sales
     C                     Z-ADDWL0235    WN0098           Quantity Availa
     C                     MOVELWL0236    WUGNSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0121           Quantity Sched
     C                     Z-ADDWL0234    WN0078           Quantity Sales
     C                     Z-ADDWL0235    WN0099           Quantity Availa
     C                     MOVELWL0236    WUGOSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0122           Quantity Sched
     C                     Z-ADDWL0234    WN0079           Quantity Sales
     C                     Z-ADDWL0235    WN0100           Quantity Availa
     C                     MOVELWL0236    WUGPSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0123           Quantity Sched
     C                     Z-ADDWL0234    WN0080           Quantity Sales
     C                     Z-ADDWL0235    WN0101           Quantity Availa
     C                     MOVELWL0236    WUGQSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0124           Quantity Sched
     C                     Z-ADDWL0234    WN0081           Quantity Sales
     C                     Z-ADDWL0235    WN0102           Quantity Availa
     C                     MOVELWL0236    WUGRSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0125           Quantity Sched
     C                     Z-ADDWL0234    WN0082           Quantity Sales
     C                     Z-ADDWL0235    WN0103           Quantity Availa
     C                     MOVELWL0236    WUGSSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0126           Quantity Sched
     C                     Z-ADDWL0234    WN0083           Quantity Sales
     C                     Z-ADDWL0235    WN0104           Quantity Availa
     C                     MOVELWL0236    WUGTSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0127           Quantity Sched
     C                     Z-ADDWL0234    WN0084           Quantity Sales
     C                     Z-ADDWL0235    WN0105           Quantity Availa
     C                     MOVELWL0236    WUGUSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0128           Quantity Sched
     C                     Z-ADDWL0234    WN0085           Quantity Sales
     C                     Z-ADDWL0235    WN0106           Quantity Availa
     C                     MOVELWL0236    WUGVSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0129           Quantity Sched
     C                     Z-ADDWL0234    WN0086           Quantity Sales
     C                     Z-ADDWL0235    WN0107           Quantity Availa
     C                     MOVELWL0236    WUGWSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0130           Quantity Sched
     C                     Z-ADDWL0234    WN0087           Quantity Sales
     C                     Z-ADDWL0235    WN0108           Quantity Availa
     C                     MOVELWL0236    WUGXSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0131           Quantity Sched
     C                     Z-ADDWL0234    WN0088           Quantity Sales
     C                     Z-ADDWL0235    WN0109           Quantity Availa
     C                     MOVELWL0236    WUGYSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0132           Quantity Sched
     C                     Z-ADDWL0234    WN0089           Quantity Sales
     C                     Z-ADDWL0235    WN0110           Quantity Availa
     C                     MOVELWL0236    WUGZSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0133           Quantity Sched
     C                     Z-ADDWL0234    WN0090           Quantity Sales
     C                     Z-ADDWL0235    WN0111           Quantity Availa
     C                     MOVELWL0236    WUG0SX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0134           Quantity Sched
     C                     Z-ADDWL0234    WN0091           Quantity Sales
     C                     Z-ADDWL0235    WN0112           Quantity Availa
     C                     MOVELWL0236    WUG1SX    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0113           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * If warehouse code is entered, calculate for that warehouse only
      * CASE: PAR.Warehouse Code EQ DB1.Warehouse Code
     C           WL0055    IFEQ WDAJCD                     *IF
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WUGHSX' defaulted for 'Day 1 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGISX' defaulted for 'Day 2 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGJSX' defaulted for 'Day 3 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGKSX' defaulted for 'Day 4 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGLSX' defaulted for 'Day 5 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGMSX' defaulted for 'Day 6 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGNSX' defaulted for 'Day 7 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGOSX' defaulted for 'Day 8 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGPSX' defaulted for 'Day 9 Rsrvd Other Whse Fl'.
      * Field '(PAR) WUGQSX' defaulted for 'Day 10 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGRSX' defaulted for 'Day 11 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGSSX' defaulted for 'Day 12 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGTSX' defaulted for 'Day 13 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGUSX' defaulted for 'Day 14 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGVSX' defaulted for 'Day 15 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGWSX' defaulted for 'Day 16 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGXSX' defaulted for 'Day 17 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGYSX' defaulted for 'Day 18 Rsrv Other Whse Fl'.
      * Field '(PAR) WUGZSX' defaulted for 'Day 19 Rsrv Other Whse Fl'.
      * Field '(PAR) WUG0SX' defaulted for 'Day 20 Rsrv Other Whse Fl'.
      * Field '(PAR) WUG1SX' defaulted for 'Day 21 Rsrv Other Whse Fl'.
      *
     C                     MOVEL*BLANK    WN0182  3        Production Ware
     C                     MOVEL*BLANK    WN0183  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFFDT           USR Day 1
     C                     Z-ADD*ZERO     WUE1DT           USR Day 2
     C                     Z-ADD*ZERO     WUE2DT           USR Day 3
     C                     Z-ADD*ZERO     WUE3DT           USR Day 4
     C                     Z-ADD*ZERO     WUE4DT           USR Day 5
     C                     Z-ADD*ZERO     WUE5DT           USR Day 6
     C                     Z-ADD*ZERO     WUE6DT           USR Day 7
     C                     Z-ADD*ZERO     WUFKDT           USR Day 8
     C                     Z-ADD*ZERO     WUFLDT           USR Day 9
     C                     Z-ADD*ZERO     WUFGDT           USR Day 10
     C                     Z-ADD*ZERO     WUFHDT           USR Day 11
     C                     Z-ADD*ZERO     WUFIDT           USR Day 12
     C                     Z-ADD*ZERO     WUFJDT           USR Day 13
     C                     Z-ADD*ZERO     WUHPDT           USR Day 14
     C                     Z-ADD*ZERO     WUHQDT           USR Day 15
     C                     Z-ADD*ZERO     WUHRDT           USR Day 16
     C                     Z-ADD*ZERO     WUHSDT           USR Day 17
     C                     Z-ADD*ZERO     WUHTDT           USR Day 18
     C                     Z-ADD*ZERO     WUHUDT           USR Day 19
     C                     Z-ADD*ZERO     WUHVDT           USR Day 20
     C                     Z-ADD*ZERO     WUHWDT           USR Day 21
     C                     Z-ADD*ZERO     WN0036           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0037           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0038           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0039           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0040           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0041           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0042           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0043           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0044           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0045           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0046           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0047           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0048           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0049           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0050           Day 1 Productio
     C                     Z-ADD*ZERO     WN0051           Day 2 Productio
     C                     Z-ADD*ZERO     WN0052           Day 3 Productio
     C                     Z-ADD*ZERO     WN0053           Day 4 Productio
     C                     Z-ADD*ZERO     WN0054           Day 5 Productio
     C                     Z-ADD*ZERO     WN0055           Day 6 Productio
     C                     Z-ADD*ZERO     WN0056           Day 7 Productio
     C                     Z-ADD*ZERO     WN0057           Day 8 Productio
     C                     Z-ADD*ZERO     WN0058           Day 9 Productio
     C                     Z-ADD*ZERO     WN0059           Day 10 Producti
     C                     Z-ADD*ZERO     WN0060           Day 11 Producti
     C                     Z-ADD*ZERO     WN0061           Day 12 Producti
     C                     Z-ADD*ZERO     WN0062           Day 13 Producti
     C                     Z-ADD*ZERO     WN0063           Day 14 Producti
     C                     Z-ADD*ZERO     WN0064           Day 15 Producti
     C                     Z-ADD*ZERO     WN0065           Day 16 Producti
     C                     Z-ADD*ZERO     WN0066           Day 17 Producti
     C                     Z-ADD*ZERO     WN0067           Day 18 Producti
     C                     Z-ADD*ZERO     WN0068           Day 19 Producti
     C                     Z-ADD*ZERO     WN0069           Day 20 Producti
     C                     Z-ADD*ZERO     WN0070           Day 21 Producti
     C                     Z-ADD*ZERO     WN0071           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0072           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0073           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0074           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0075           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0076           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0077           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0078           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0079           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0080           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0081           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0082           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0083           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0084           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0085           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0086           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0087           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0088           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0089           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0090           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0091           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0092           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0093           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0094           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0095           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0096           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0097           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0098           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0099           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0100           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0101           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0102           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0103           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0104           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0105           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0106           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0107           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0108           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0109           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0110           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0111           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0112           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0114           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0115           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0116           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0117           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0118           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0119           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0120           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0121           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0122           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0123           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0124           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0125           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0126           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0127           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0128           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0129           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0130           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0131           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0132           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0133           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0134           Day 21 Sched Sh
     C                     MOVEL*BLANK    WUGHSX           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WUGISX           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WUGJSX           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WUGKSX           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WUGLSX           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WUGMSX           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WUGNSX           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WUGOSX           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WUGPSX           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WUGQSX           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WUGRSX           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WUGSSX           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WUGTSX           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WUGUSX           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WUGVSX           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WUGWSX           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WUGXSX           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WUGYSX           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WUGZSX           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WUG0SX           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WUG1SX           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WUOHLO           Order Hold Over
     C                     Z-ADD*ZERO     WUC8NX           Order Hold Over
     C                     MOVEL*BLANK    WN0182           Production Ware
     C                     MOVEL*BLANK    WN0183           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWDAJCD    WL0078    P      Warehouse Code
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0079    WN0182    P      Production Ware
     C                     MOVELWL0080    WN0183    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WCAIC3    WQ0093  30       Company Number
     C                     PARM WCHGCD    WQ0094  70       Item Code
     C                     PARM WDAJCD    WQ0095  3        Warehouse Code
     C                     PARM WN0030    WQ0096 112       Unit Weight
     C                     PARM WN0031    WQ0097  52       Fresh Chilling
     C                     PARM WN0033    WQ0098  1        Piece Count Ite
     C                     PARM WN0034    WQ0099  70       Pieces Per Bag
     C                     PARM WN0035    WQ0100  70       Bags Per Unit
     C                     PARM WL0013    WQ0101  70       Avail Ship Date
     C                     PARM WL0014    WQ0102  70       Avail Ship Date
     C                     PARM WL0015    WQ0103  70       Avail Ship Date
     C                     PARM WL0016    WQ0104  70       Avail Ship Date
     C                     PARM WL0017    WQ0105  70       Avail Ship Date
     C                     PARM WL0018    WQ0106  70       Avail Ship Date
     C                     PARM WL0019    WQ0107  70       Avail Ship Date
     C                     PARM WL0020    WQ0108  70       Avail Ship Date
     C                     PARM WL0021    WQ0109  70       Avail Ship Date
     C                     PARM WL0022    WQ0110  70       Avail Ship Date
     C                     PARM WL0023    WQ0111  70       Avail Ship Date
     C                     PARM WL0024    WQ0112  70       Avail Ship Date
     C                     PARM WL0025    WQ0113  70       Avail Ship Date
     C                     PARM WL0026    WQ0114  70       Avail Ship Date
     C           WN0036    PARM WN0036    WQ0115  61       Day 1 Inventory
     C           WN0037    PARM WN0037    WQ0116  61       Day 2 Inventory
     C           WN0038    PARM WN0038    WQ0117  61       Day 3 Inventory
     C           WN0039    PARM WN0039    WQ0118  61       Day 4 Inventory
     C           WN0040    PARM WN0040    WQ0119  61       Day 5 Inventory
     C           WN0041    PARM WN0041    WQ0120  61       Day 6 Inventory
     C           WN0042    PARM WN0042    WQ0121  61       Day 7 Inventory
     C           WN0043    PARM WN0043    WQ0122  61       Day 8 Inventory
     C           WN0044    PARM WN0044    WQ0123  61       Day 9 Inventory
     C           WN0045    PARM WN0045    WQ0124  61       Day 10 Inventor
     C           WN0046    PARM WN0046    WQ0125  61       Day 11 Inventor
     C           WN0047    PARM WN0047    WQ0126  61       Day 12 Inventor
     C           WN0048    PARM WN0048    WQ0127  61       Day 13 Inventor
     C           WN0049    PARM WN0049    WQ0128  61       Day 14 Inventor
     C           WN0071    PARM WN0071    WQ0129  61       Day 1 Sales USR
     C           WN0072    PARM WN0072    WQ0130  61       Day 2 Sales USR
     C           WN0073    PARM WN0073    WQ0131  61       Day 3 Sales USR
     C           WN0074    PARM WN0074    WQ0132  61       Day 4 Sales USR
     C           WN0075    PARM WN0075    WQ0133  61       Day 5 Sales USR
     C           WN0076    PARM WN0076    WQ0134  61       Day 6 Sales USR
     C           WN0077    PARM WN0077    WQ0135  61       Day 7 Sales USR
     C           WUOHLO    PARM WUOHLO    WQ0136  50       Order Hold Over
     C           WUC8NX    PARM WUC8NX    WQ0137  50       Order Hold Over
     C                     PARM WN0183    WQ0138  1        Lot Tracking Fl
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0081           Company Number
     C                     Z-ADDWCHGCD    WL0082           Item Code
     C                     MOVELWDAJCD    WL0083    P      Warehouse Code
     C                     Z-ADD##JDT     WL0084           PS Available Sh
     C                     Z-ADDWL0013    WL0085           Avail Ship Date
     C                     Z-ADDWL0014    WL0086           Avail Ship Date
     C                     Z-ADDWL0015    WL0087           Avail Ship Date
     C                     Z-ADDWL0016    WL0088           Avail Ship Date
     C                     Z-ADDWL0017    WL0089           Avail Ship Date
     C                     Z-ADDWL0018    WL0090           Avail Ship Date
     C                     Z-ADDWL0019    WL0091           Avail Ship Date
     C                     Z-ADDWL0020    WL0092           Avail Ship Date
     C                     Z-ADDWL0021    WL0093           Avail Ship Date
     C                     Z-ADDWL0022    WL0094           Avail Ship Date
     C                     Z-ADDWL0023    WL0095           Avail Ship Date
     C                     Z-ADDWL0024    WL0096           Avail Ship Date
     C                     Z-ADDWL0025    WL0097           Avail Ship Date
     C                     Z-ADDWL0026    WL0098           Avail Ship Date
     C                     Z-ADDWL0027    WL0099           Avail Ship Date
     C                     Z-ADDWL0028    WL0100           Avail Ship Date
     C                     Z-ADDWL0029    WL0101           Avail Ship Date
     C                     Z-ADDWL0030    WL0102           Avail Ship Date
     C                     Z-ADDWL0031    WL0103           Avail Ship Date
     C                     Z-ADDWL0032    WL0104           Avail Ship Date
     C                     Z-ADDWL0033    WL0105           Avail Ship Date
     C                     Z-ADDWN0050    WL0127           Day 1 Productio
     C                     Z-ADDWN0051    WL0128           Day 2 Productio
     C                     Z-ADDWN0052    WL0129           Day 3 Productio
     C                     Z-ADDWN0053    WL0130           Day 4 Productio
     C                     Z-ADDWN0054    WL0131           Day 5 Productio
     C                     Z-ADDWN0055    WL0132           Day 6 Productio
     C                     Z-ADDWN0056    WL0133           Day 7 Productio
     C                     Z-ADDWN0057    WL0134           Day 8 Productio
     C                     Z-ADDWN0058    WL0135           Day 9 Productio
     C                     Z-ADDWN0059    WL0136           Day 10 Producti
     C                     Z-ADDWN0060    WL0137           Day 11 Producti
     C                     Z-ADDWN0061    WL0138           Day 12 Producti
     C                     Z-ADDWN0062    WL0139           Day 13 Producti
     C                     Z-ADDWN0063    WL0140           Day 14 Producti
     C                     Z-ADDWN0064    WL0141           Day 15 Producti
     C                     Z-ADDWN0065    WL0142           Day 16 Producti
     C                     Z-ADDWN0066    WL0143           Day 17 Producti
     C                     Z-ADDWN0067    WL0144           Day 18 Producti
     C                     Z-ADDWN0068    WL0145           Day 19 Producti
     C                     Z-ADDWN0069    WL0146           Day 20 Producti
     C                     Z-ADDWN0070    WL0147           Day 21 Producti
     C                     Z-ADDWN0030    WL0148           Unit Weight
     C                     Z-ADDWN0031    WL0149           Fresh Chilling
     C                     MOVELWN0033    WL0150    P      Piece Count Ite
     C                     Z-ADDWN0034    WL0151           Pieces Per Bag
     C                     Z-ADDWN0035    WL0152           Bags Per Unit
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0106    WUFFDT           USR Day 1
     C                     Z-ADDWL0107    WUE1DT           USR Day 2
     C                     Z-ADDWL0108    WUE2DT           USR Day 3
     C                     Z-ADDWL0109    WUE3DT           USR Day 4
     C                     Z-ADDWL0110    WUE4DT           USR Day 5
     C                     Z-ADDWL0111    WUE5DT           USR Day 6
     C                     Z-ADDWL0112    WUE6DT           USR Day 7
     C                     Z-ADDWL0113    WUFKDT           USR Day 8
     C                     Z-ADDWL0114    WUFLDT           USR Day 9
     C                     Z-ADDWL0115    WUFGDT           USR Day 10
     C                     Z-ADDWL0116    WUFHDT           USR Day 11
     C                     Z-ADDWL0117    WUFIDT           USR Day 12
     C                     Z-ADDWL0118    WUFJDT           USR Day 13
     C                     Z-ADDWL0119    WUHPDT           USR Day 14
     C                     Z-ADDWL0120    WUHQDT           USR Day 15
     C                     Z-ADDWL0121    WUHRDT           USR Day 16
     C                     Z-ADDWL0122    WUHSDT           USR Day 17
     C                     Z-ADDWL0123    WUHTDT           USR Day 18
     C                     Z-ADDWL0124    WUHUDT           USR Day 19
     C                     Z-ADDWL0125    WUHVDT           USR Day 20
     C                     Z-ADDWL0126    WUHWDT           USR Day 21
     C                     Z-ADDWL0127    WN0050           Day 1 Productio
     C                     Z-ADDWL0128    WN0051           Day 2 Productio
     C                     Z-ADDWL0129    WN0052           Day 3 Productio
     C                     Z-ADDWL0130    WN0053           Day 4 Productio
     C                     Z-ADDWL0131    WN0054           Day 5 Productio
     C                     Z-ADDWL0132    WN0055           Day 6 Productio
     C                     Z-ADDWL0133    WN0056           Day 7 Productio
     C                     Z-ADDWL0134    WN0057           Day 8 Productio
     C                     Z-ADDWL0135    WN0058           Day 9 Productio
     C                     Z-ADDWL0136    WN0059           Day 10 Producti
     C                     Z-ADDWL0137    WN0060           Day 11 Producti
     C                     Z-ADDWL0138    WN0061           Day 12 Producti
     C                     Z-ADDWL0139    WN0062           Day 13 Producti
     C                     Z-ADDWL0140    WN0063           Day 14 Producti
     C                     Z-ADDWL0141    WN0064           Day 15 Producti
     C                     Z-ADDWL0142    WN0065           Day 16 Producti
     C                     Z-ADDWL0143    WN0066           Day 17 Producti
     C                     Z-ADDWL0144    WN0067           Day 18 Producti
     C                     Z-ADDWL0145    WN0068           Day 19 Producti
     C                     Z-ADDWL0146    WN0069           Day 20 Producti
     C                     Z-ADDWL0147    WN0070           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SLRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0036    ADD  WN0050    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0114    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0071    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0092           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0153           Avail Ship Date
     C                     Z-ADDWUFFDT    WL0154           Production Date
     C                     Z-ADDWN0036    WL0155           Quantity Invent
     C                     Z-ADDWN0050    WL0156           Quantity Produc
     C                     Z-ADDWN0114    WL0157           Quantity Sched
     C                     Z-ADDWN0071    WL0158           Quantity Sales
     C                     Z-ADDWN0092    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0037    ADD  WN0051    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0115    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0072    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0093           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0153           Avail Ship Date
     C                     Z-ADDWUE1DT    WL0154           Production Date
     C                     Z-ADDWN0037    WL0155           Quantity Invent
     C                     Z-ADDWN0051    WL0156           Quantity Produc
     C                     Z-ADDWN0115    WL0157           Quantity Sched
     C                     Z-ADDWN0072    WL0158           Quantity Sales
     C                     Z-ADDWN0093    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0038    ADD  WN0052    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0116    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0073    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0094           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0153           Avail Ship Date
     C                     Z-ADDWUE2DT    WL0154           Production Date
     C                     Z-ADDWN0038    WL0155           Quantity Invent
     C                     Z-ADDWN0052    WL0156           Quantity Produc
     C                     Z-ADDWN0116    WL0157           Quantity Sched
     C                     Z-ADDWN0073    WL0158           Quantity Sales
     C                     Z-ADDWN0094    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0039    ADD  WN0053    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0117    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0074    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0095           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0153           Avail Ship Date
     C                     Z-ADDWUE3DT    WL0154           Production Date
     C                     Z-ADDWN0039    WL0155           Quantity Invent
     C                     Z-ADDWN0053    WL0156           Quantity Produc
     C                     Z-ADDWN0117    WL0157           Quantity Sched
     C                     Z-ADDWN0074    WL0158           Quantity Sales
     C                     Z-ADDWN0095    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0040    ADD  WN0054    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0118    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0075    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0096           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0153           Avail Ship Date
     C                     Z-ADDWUE4DT    WL0154           Production Date
     C                     Z-ADDWN0040    WL0155           Quantity Invent
     C                     Z-ADDWN0054    WL0156           Quantity Produc
     C                     Z-ADDWN0118    WL0157           Quantity Sched
     C                     Z-ADDWN0075    WL0158           Quantity Sales
     C                     Z-ADDWN0096    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0041    ADD  WN0055    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0119    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0076    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0097           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0153           Avail Ship Date
     C                     Z-ADDWUE5DT    WL0154           Production Date
     C                     Z-ADDWN0041    WL0155           Quantity Invent
     C                     Z-ADDWN0055    WL0156           Quantity Produc
     C                     Z-ADDWN0119    WL0157           Quantity Sched
     C                     Z-ADDWN0076    WL0158           Quantity Sales
     C                     Z-ADDWN0097    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0042    ADD  WN0056    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0120    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0077    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0098           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0153           Avail Ship Date
     C                     Z-ADDWUE6DT    WL0154           Production Date
     C                     Z-ADDWN0042    WL0155           Quantity Invent
     C                     Z-ADDWN0056    WL0156           Quantity Produc
     C                     Z-ADDWN0120    WL0157           Quantity Sched
     C                     Z-ADDWN0077    WL0158           Quantity Sales
     C                     Z-ADDWN0098    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0057    SUB  WN0121    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0078    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0099           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0153           Avail Ship Date
     C                     Z-ADDWUFKDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0057    WL0156           Quantity Produc
     C                     Z-ADDWN0121    WL0157           Quantity Sched
     C                     Z-ADDWN0078    WL0158           Quantity Sales
     C                     Z-ADDWN0099    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0058    SUB  WN0122    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0079    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0100           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0153           Avail Ship Date
     C                     Z-ADDWUFLDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0058    WL0156           Quantity Produc
     C                     Z-ADDWN0122    WL0157           Quantity Sched
     C                     Z-ADDWN0079    WL0158           Quantity Sales
     C                     Z-ADDWN0100    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0059    SUB  WN0123    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0080    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0101           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0153           Avail Ship Date
     C                     Z-ADDWUFGDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0059    WL0156           Quantity Produc
     C                     Z-ADDWN0123    WL0157           Quantity Sched
     C                     Z-ADDWN0080    WL0158           Quantity Sales
     C                     Z-ADDWN0101    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0060    SUB  WN0124    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0081    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0102           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0153           Avail Ship Date
     C                     Z-ADDWUFHDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0060    WL0156           Quantity Produc
     C                     Z-ADDWN0124    WL0157           Quantity Sched
     C                     Z-ADDWN0081    WL0158           Quantity Sales
     C                     Z-ADDWN0102    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0061    SUB  WN0125    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0082    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0103           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0153           Avail Ship Date
     C                     Z-ADDWUFIDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0061    WL0156           Quantity Produc
     C                     Z-ADDWN0125    WL0157           Quantity Sched
     C                     Z-ADDWN0082    WL0158           Quantity Sales
     C                     Z-ADDWN0103    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0062    SUB  WN0126    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0083    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0104           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0153           Avail Ship Date
     C                     Z-ADDWUFJDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0062    WL0156           Quantity Produc
     C                     Z-ADDWN0126    WL0157           Quantity Sched
     C                     Z-ADDWN0083    WL0158           Quantity Sales
     C                     Z-ADDWN0104    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0063    SUB  WN0127    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0084    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0105           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0153           Avail Ship Date
     C                     Z-ADDWUHPDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0063    WL0156           Quantity Produc
     C                     Z-ADDWN0127    WL0157           Quantity Sched
     C                     Z-ADDWN0084    WL0158           Quantity Sales
     C                     Z-ADDWN0105    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0064    SUB  WN0128    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0085    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0106           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0153           Avail Ship Date
     C                     Z-ADDWUHQDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0064    WL0156           Quantity Produc
     C                     Z-ADDWN0128    WL0157           Quantity Sched
     C                     Z-ADDWN0085    WL0158           Quantity Sales
     C                     Z-ADDWN0106    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0065    SUB  WN0129    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0086    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0107           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0153           Avail Ship Date
     C                     Z-ADDWUHRDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0065    WL0156           Quantity Produc
     C                     Z-ADDWN0129    WL0157           Quantity Sched
     C                     Z-ADDWN0086    WL0158           Quantity Sales
     C                     Z-ADDWN0107    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0066    SUB  WN0130    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0087    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0108           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0153           Avail Ship Date
     C                     Z-ADDWUHSDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0066    WL0156           Quantity Produc
     C                     Z-ADDWN0130    WL0157           Quantity Sched
     C                     Z-ADDWN0087    WL0158           Quantity Sales
     C                     Z-ADDWN0108    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0067    SUB  WN0131    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0088    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0109           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0153           Avail Ship Date
     C                     Z-ADDWUHTDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0067    WL0156           Quantity Produc
     C                     Z-ADDWN0131    WL0157           Quantity Sched
     C                     Z-ADDWN0088    WL0158           Quantity Sales
     C                     Z-ADDWN0109    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0068    SUB  WN0132    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0089    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0110           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0153           Avail Ship Date
     C                     Z-ADDWUHUDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0068    WL0156           Quantity Produc
     C                     Z-ADDWN0132    WL0157           Quantity Sched
     C                     Z-ADDWN0089    WL0158           Quantity Sales
     C                     Z-ADDWN0110    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0069    SUB  WN0133    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0090    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0111           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0153           Avail Ship Date
     C                     Z-ADDWUHVDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0069    WL0156           Quantity Produc
     C                     Z-ADDWN0133    WL0157           Quantity Sched
     C                     Z-ADDWN0090    WL0158           Quantity Sales
     C                     Z-ADDWN0111    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0070    SUB  WN0134    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0091    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0112           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0153           Avail Ship Date
     C                     Z-ADDWUHWDT    WL0154           Production Date
     C                     Z-ADDWUQINV    WL0155           Quantity Invent
     C                     Z-ADDWN0070    WL0156           Quantity Produc
     C                     Z-ADDWN0134    WL0157           Quantity Sched
     C                     Z-ADDWN0091    WL0158           Quantity Sales
     C                     Z-ADDWN0112    WL0159           Quantity Availa
     C                     MOVEL'N'       WL0160    P      Reserved for Ot
     C                     EXSR SNCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0161           Company Number
     C                     Z-ADDWUC4NB    WL0162           Order Number
     C                     Z-ADDWCHGCD    WL0163           Item Code
     C                     MOVELWDAJCD    WL0164    P      Warehouse Code
     C                     Z-ADD##JDT     WL0165           Scheduled Ship
     C                     Z-ADDWL0033    WL0166           Avail Ship Date
     C                     MOVELWN0182    WL0167    P      Production Ware
     C                     MOVELWN0183    WL0168    P      Lot Tracking Fl
     C                     EXSR SORVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0182    IFEQ WDAJCD                     *IF
     C           WN0182    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWCAIC3    WL0227           Company Number
     C                     Z-ADDWCHGCD    WL0228           Item Code
     C                     MOVELWDAJCD    WL0229    P      Warehouse Code
     C                     Z-ADD##JDT     WL0230           Scheduled Ship
     C                     Z-ADDWL0033    WL0231           Avail Ship Date
     C                     EXSR TBRVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0013    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0114           Quantity Sched
     C                     Z-ADDWL0234    WN0071           Quantity Sales
     C                     Z-ADDWL0235    WN0092           Quantity Availa
     C                     MOVELWL0236    WUGHSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0014    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0115           Quantity Sched
     C                     Z-ADDWL0234    WN0072           Quantity Sales
     C                     Z-ADDWL0235    WN0093           Quantity Availa
     C                     MOVELWL0236    WUGISX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0116           Quantity Sched
     C                     Z-ADDWL0234    WN0073           Quantity Sales
     C                     Z-ADDWL0235    WN0094           Quantity Availa
     C                     MOVELWL0236    WUGJSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0016    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0117           Quantity Sched
     C                     Z-ADDWL0234    WN0074           Quantity Sales
     C                     Z-ADDWL0235    WN0095           Quantity Availa
     C                     MOVELWL0236    WUGKSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0017    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0118           Quantity Sched
     C                     Z-ADDWL0234    WN0075           Quantity Sales
     C                     Z-ADDWL0235    WN0096           Quantity Availa
     C                     MOVELWL0236    WUGLSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0018    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0119           Quantity Sched
     C                     Z-ADDWL0234    WN0076           Quantity Sales
     C                     Z-ADDWL0235    WN0097           Quantity Availa
     C                     MOVELWL0236    WUGMSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0019    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0120           Quantity Sched
     C                     Z-ADDWL0234    WN0077           Quantity Sales
     C                     Z-ADDWL0235    WN0098           Quantity Availa
     C                     MOVELWL0236    WUGNSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0020    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0121           Quantity Sched
     C                     Z-ADDWL0234    WN0078           Quantity Sales
     C                     Z-ADDWL0235    WN0099           Quantity Availa
     C                     MOVELWL0236    WUGOSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0021    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0122           Quantity Sched
     C                     Z-ADDWL0234    WN0079           Quantity Sales
     C                     Z-ADDWL0235    WN0100           Quantity Availa
     C                     MOVELWL0236    WUGPSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0022    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0123           Quantity Sched
     C                     Z-ADDWL0234    WN0080           Quantity Sales
     C                     Z-ADDWL0235    WN0101           Quantity Availa
     C                     MOVELWL0236    WUGQSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0023    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0124           Quantity Sched
     C                     Z-ADDWL0234    WN0081           Quantity Sales
     C                     Z-ADDWL0235    WN0102           Quantity Availa
     C                     MOVELWL0236    WUGRSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0024    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0125           Quantity Sched
     C                     Z-ADDWL0234    WN0082           Quantity Sales
     C                     Z-ADDWL0235    WN0103           Quantity Availa
     C                     MOVELWL0236    WUGSSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0025    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0126           Quantity Sched
     C                     Z-ADDWL0234    WN0083           Quantity Sales
     C                     Z-ADDWL0235    WN0104           Quantity Availa
     C                     MOVELWL0236    WUGTSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0026    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0127           Quantity Sched
     C                     Z-ADDWL0234    WN0084           Quantity Sales
     C                     Z-ADDWL0235    WN0105           Quantity Availa
     C                     MOVELWL0236    WUGUSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0027    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0128           Quantity Sched
     C                     Z-ADDWL0234    WN0085           Quantity Sales
     C                     Z-ADDWL0235    WN0106           Quantity Availa
     C                     MOVELWL0236    WUGVSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0028    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0129           Quantity Sched
     C                     Z-ADDWL0234    WN0086           Quantity Sales
     C                     Z-ADDWL0235    WN0107           Quantity Availa
     C                     MOVELWL0236    WUGWSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0029    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0130           Quantity Sched
     C                     Z-ADDWL0234    WN0087           Quantity Sales
     C                     Z-ADDWL0235    WN0108           Quantity Availa
     C                     MOVELWL0236    WUGXSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0030    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0131           Quantity Sched
     C                     Z-ADDWL0234    WN0088           Quantity Sales
     C                     Z-ADDWL0235    WN0109           Quantity Availa
     C                     MOVELWL0236    WUGYSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0031    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0132           Quantity Sched
     C                     Z-ADDWL0234    WN0089           Quantity Sales
     C                     Z-ADDWL0235    WN0110           Quantity Availa
     C                     MOVELWL0236    WUGZSX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0032    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0133           Quantity Sched
     C                     Z-ADDWL0234    WN0090           Quantity Sales
     C                     Z-ADDWL0235    WN0111           Quantity Availa
     C                     MOVELWL0236    WUG0SX    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0033    WL0232           Avail Ship Date
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0233    WN0134           Quantity Sched
     C                     Z-ADDWL0234    WN0091           Quantity Sales
     C                     Z-ADDWL0235    WN0112           Quantity Availa
     C                     MOVELWL0236    WUG1SX    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0113           Status - Y or N
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If match found add up totals
      * CASE: PAR.Status - Y or N is yes
     C           WN0113    IFEQ 'Y'                        *IF
     C                     ADD  WN0036    WUD1IN           Day 1 Inventory
     C                     ADD  WN0037    WUD2IN           Day 2 Inventory
     C                     ADD  WN0038    WUD3IN           Day 3 Inventory
     C                     ADD  WN0039    WUD4IN           Day 4 Inventory
     C                     ADD  WN0040    WUD5IN           Day 5 Inventory
     C                     ADD  WN0041    WUD6IN           Day 6 Inventory
     C                     ADD  WN0042    WUD7IN           Day 7 Inventory
     C                     ADD  WN0043    WUGCNX           Day 8 Inventory
     C                     ADD  WN0044    WUGDNX           Day 9 Inventory
     C                     ADD  WN0045    WUGENX           Day 10 Inventor
     C                     ADD  WN0046    WUGFNX           Day 11 Inventor
     C                     ADD  WN0047    WUGGNX           Day 12 Inventor
     C                     ADD  WN0048    WUGHNX           Day 13 Inventor
     C                     ADD  WN0049    WUGINX           Day 14 Inventor
     C                     ADD  WN0050    WUD1PD           Day 1 Productio
     C                     ADD  WN0051    WUD2PD           Day 2 Productio
     C                     ADD  WN0052    WUD3PD           Day 3 Productio
     C                     ADD  WN0053    WUD4PD           Day 4 Productio
     C                     ADD  WN0054    WUD5PD           Day 5 Productio
     C                     ADD  WN0055    WUD6PD           Day 6 Productio
     C                     ADD  WN0056    WUD7PD           Day 7 Productio
     C                     ADD  WN0057    WUD8PD           Day 8 Prod Tota
     C                     ADD  WN0058    WUD9PD           Day 9 Prod Tota
     C                     ADD  WN0059    WUD1PR           Day 10 Prod Tot
     C                     ADD  WN0060    WUD2PR           Day 11 Prod Tot
     C                     ADD  WN0061    WUD3PR           Day 12 Prod Tot
     C                     ADD  WN0062    WUD4PR           Day 13 Prod Tot
     C                     ADD  WN0063    WUD5PR           Day 14 Prod Tot
     C                     ADD  WN0064    WUD6PR           Day 15 Prod Tot
     C                     ADD  WN0065    WUD7PR           Day 16 Prod Tot
     C                     ADD  WN0066    WUD8PR           Day 17 Prod Tot
     C                     ADD  WN0067    WURKNB           Day 18 Prod Tot
     C                     ADD  WN0068    WUD1PT           Day 19 Prod Tot
     C                     ADD  WN0069    WUD2PT           Day 20 Prod Tot
     C                     ADD  WN0070    WUD3PT           Day 21 Prod Tot
     C                     ADD  WN0114    WUD1SS           Day 1 Schd Ship
     C                     ADD  WN0115    WUD2SS           Day 2 Schd Ship
     C                     ADD  WN0116    WUD3SS           Day 3 Schd Ship
     C                     ADD  WN0117    WUVNNB           Day 4 Schd Ship
     C                     ADD  WN0118    WUD5SS           Day 5 Schd Ship
     C                     ADD  WN0119    WUVWNB           Day 6 Schd Ship
     C                     ADD  WN0120    WUD7SS           Day 7 Schd Ship
     C                     ADD  WN0121    WUD8SS           Day 8 Schd Ship
     C                     ADD  WN0122    WUD9SS           Day 9 Schd Ship
     C                     ADD  WN0123    WUD0SS           Day 10 SchdShip
     C                     ADD  WN0124    WUD1SH           Day 11 SchdShip
     C                     ADD  WN0125    WUD2SH           Day 12 SchdShip
     C                     ADD  WN0126    WUD3SH           Day 13 SchdShip
     C                     ADD  WN0127    WUD4SH           Day 14 SchdShip
     C                     ADD  WN0128    WUD5SH           Day 15 SchdShip
     C                     ADD  WN0129    WUD6SH           Day 16 SchdShip
     C                     ADD  WN0130    WUD7SH           Day 17 SchdShip
     C                     ADD  WN0131    WUI5NB           Day 18 SchdShip
     C                     ADD  WN0132    WUD9SH           Day 19 SchdShip
     C                     ADD  WN0133    WUD0SP           Day 20 SchdShip
     C                     ADD  WN0134    WUD1SM           Day 21 SchdShip
     C                     ADD  WN0071    WUD1SL           Day 1 Sales Tot
     C                     ADD  WN0072    WUD2SL           Day 2 Sales Tot
     C                     ADD  WN0073    WUD3SL           Day 3 Sales Tot
     C                     ADD  WN0074    WUD4SL           Day 4 Sales Tot
     C                     ADD  WN0075    WUD5SL           Day 5 Sales Tot
     C                     ADD  WN0076    WUD6SL           Day 6 Sales Tot
     C                     ADD  WN0077    WUD7SL           Day 7 Sales Tot
     C                     ADD  WN0078    WUZ5NB           Day 8 Sales Tot
     C                     ADD  WN0079    WUD9SL           Day 9 Sales Tot
     C                     ADD  WN0080    WUDSLS           Day 10 Sales To
     C                     ADD  WN0081    WUD11S           Day 11 Sales To
     C                     ADD  WN0082    WUD12S           Day 12 Sales To
     C                     ADD  WN0083    WUD13S           Day 13 Sales To
     C                     ADD  WN0084    WUD14S           Day 14 Sales To
     C                     ADD  WN0085    WUD15S           Day 15 Sales To
     C                     ADD  WN0086    WUD16S           Day 16 Sales To
     C                     ADD  WN0087    WUD17S           Day 17 Sales To
     C                     ADD  WN0088    WUD18S           Day 18 Sales To
     C                     ADD  WN0089    WUD19S           Day 19 Sales To
     C                     ADD  WN0090    WUD20S           Day 20 Sales To
     C                     ADD  WN0091    WUD21S           Day 21 Sales To
     C                     ADD  WN0092    WN0001           Day 1 Avail Tot
     C                     ADD  WN0093    WN0002           Day 2 Avail Tot
     C                     ADD  WN0094    WN0003           Day 3 Avail Tot
     C                     ADD  WN0095    WN0004           Day 4 Avail Tot
     C                     ADD  WN0096    WN0005           Day 5 Avail Tot
     C                     ADD  WN0097    WN0006           Day 6 Avail Tot
     C                     ADD  WN0098    WN0007           Day 7 Avail Tot
     C                     ADD  WN0099    WN0008           Day 8 Avail Tot
     C                     ADD  WN0100    WN0009           Day 9 Avail Tot
     C                     ADD  WN0101    WN0010           Day 10 Avail To
     C                     ADD  WN0102    WN0011           Day 11 Avail To
     C                     ADD  WN0103    WN0012           Day 12 Avail To
     C                     ADD  WN0104    WN0013           Day 13 Avail To
     C                     ADD  WN0105    WN0014           Day 14 Avail To
     C                     ADD  WN0106    WN0015           Day 15 Avail To
     C                     ADD  WN0107    WN0016           Day 16 Avail To
     C                     ADD  WN0108    WN0017           Day 17 Avail To
     C                     ADD  WN0109    WN0018           Day 18 Avail To
     C                     ADD  WN0110    WN0019           Day 19 Avail To
     C                     ADD  WN0111    WN0020           Day 20 Avail To
     C                     ADD  WN0112    WN0021           Day 21 Avail To
     C                     END                             *FI
     C                     MOVEL'N'       WN0113           Status - Y or N
     C                     READ @ADREOJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0078    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSJ     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0079           Production Ware
     C                     MOVEL*BLANK    WL0080           Lot Tracking Fl
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAOCD    WL0079           Production Ware
     C                     MOVELWBVHST    WL0080           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0137  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN I8AIC3    WQSK01           Company Number
     C           *LIKE     DEFN I8HGCD    WQSK02           Item Code
     C           *LIKE     DEFN I8AJCD    WQSK03           Warehouse Code
      * Define keylist
     C           KPSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
     C                     KFLD           I8GPDT           PS Available Sh
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0081    WQSK01           Company Number
     C                     Z-ADDWL0082    WQSK02           Item Code
     C                     MOVELWL0083    WQSK03           Warehouse Code
     C                     Z-ADDWL0084    I8GPDT           PS Available Sh
      * Establish starting position
     C           KPSSK     SETLL@I8CPDZ                    *
     C           KRSSK     READE@I8CPDZ                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Is it time to Quit ??
      * CASE: DB1.PS Available Ship Date GT PAR.Avail Ship Date 21 USR
     C           I8GPDT    IFGT WL0105                     *IF
     C                     GOTO SKEXIT                     *QUIT
     C                     END                             *FI
      * CASE: DB1.PA Available Ship Date GE JOB.*Job date
     C           I8GPDT    IFGE ##JDT                      *IF
      * Calculate Production based on Unit Weight or Pieces
      * CASE: (Unit Weight > 0  OR Piece count item
      *  - c2 OR c3
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C           WL0148    IFGT *ZERO                      *IF
     C           WL0150    OREQ 'Y'                        *OR
      * Retrieve production according to day
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PA Available Ship Date
     C           WL0085    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0085    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0085    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0127           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0127           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0127    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0127           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0106           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PA Available Ship Date
     C           WL0086    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0086    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0086    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0128           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0128           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0128    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0128           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0107           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PA Available Ship Date
     C           WL0087    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0087    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0087    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0129           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0129           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0129    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0129           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0108           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PA Available Ship Date
     C           WL0088    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0088    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0088    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0130           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0130           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0130    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0130           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0109           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PA Available Ship Date
     C           WL0089    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0089    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0089    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0131           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0131           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0131    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0131           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0110           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PA Available Ship Date
     C           WL0090    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0090    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0090    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0132           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0132           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0132    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0132           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0111           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PA Available Ship Date
     C           WL0091    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0091    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0091    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0133           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0133           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0133    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0133           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0112           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 8 USR EQ DB1.PA Available Ship Date
     C           WL0092    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0092    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0092    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0134           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0134           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0134    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0134           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0113           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 9 USR EQ DB1.PA Available Ship Date
     C           WL0093    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0093    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0093    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0135           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0135           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0135    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0135           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0114           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 10 USR EQ DB1.PA Available Ship Date
     C           WL0094    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0094    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0094    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0136           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0136           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0136    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0136           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0115           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 11 USR EQ DB1.PA Available Ship Date
     C           WL0095    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0095    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0095    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0137           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0137           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0137    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0137           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0116           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 12 USR EQ DB1.PA Available Ship Date
     C           WL0096    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0096    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0096    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0138           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0138           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0138    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0138           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0117           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 13 USR EQ DB1.PA Available Ship Date
     C           WL0097    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0097    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0097    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0139           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0139           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0139    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0139           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0118           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 14 USR EQ DB1.PA Available Ship Date
     C           WL0098    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0098    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0098    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0140           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0140           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0140    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0140           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0119           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 15 USR EQ DB1.PS Available Ship Date
     C           WL0099    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0099    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0099    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0141           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0141           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0141    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0141           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0120           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 16 USR EQ DB1.PS Available Ship Date
     C           WL0100    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0100    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0100    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0142           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0142           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0142    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0142           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0121           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 17 USR EQ DB1.PS Available Ship Date
     C           WL0101    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0101    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0101    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0143           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0143           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0143    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0143           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0122           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 18 USR EQ DB1.PS Available Ship Date
     C           WL0102    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0102    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0102    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0144           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0144           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0144    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0144           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0123           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 19 USR EQ DB1.PS Available Ship Date
     C           WL0103    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0103    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0103    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0145           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0145           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0145    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0145           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0124           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 20 USR EQ DB1.PS Available Ship Date
     C           WL0104    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0104    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0104    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0146           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0146           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0146    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0146           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0125           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 21 USR EQ DB1.PS Available Ship Date
     C           WL0105    IFEQ I8GPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFEQ ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0149    IFGT *ZERO                      *IF
     C           WL0105    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           I8V5ST    IFEQ 'P'                        *IF
     C           WL0149    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           I8ELDT    IFLT ##JDT                      *IF
     C           WL0105    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           I8V5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ *BLANK                     *IF
     C           WL0150    OREQ 'N'
     C           WL0148    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           I8DXWG    ADD  I8D1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  I8WTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  I8GAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0148    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0147           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0150    IFEQ 'Y'                        *IF
     C           WL0151    IFGT *ZERO                      *IF
     C           WL0152    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WD01           *Synon (17,7) w
     C           WL0151    MULT WL0152    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0147           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0147    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WL0147           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDI8ELDT    WL0126           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSK     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Del PA Work Array Roll RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * Del PA Work Array Roll DL - *Arrays  * 
     C                     EXSR SMDLRC
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMDLRC    BEGSR
      *================================================================
      * Del PA Work Array Roll DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWEJODT    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WEJODT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SMEXIT
     C                     ENDIF
     C                     ENDIF
      *
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLEYD01
     C                     SUB  1         YR01    50
     C                     ENDIF
      *
      * Initialize keys in array but retain index to MODS for later reuse
     C                     Z-ADDYI01      YISAV   50
     C                     MOVEL*LOVAL    YD01
     C                     Z-ADDYISAV     YI01
     C                     MOVELYD01      YK01,Y
      * Sort array to compress out deleted element
     C                     SORTAYK01
      * Adjust number of elements currently in array
     C                     SUB  1         YL01
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNCRRC    BEGSR
      *================================================================
      * CRT PA Work Array     CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAJODT           Avail Ship Date
     C                     Z-ADD*ZERO     XAGXDT           Production Date
     C                     Z-ADD*ZERO     XAQINV           Quantity Invent
     C                     Z-ADD*ZERO     XAWPRD           Quantity Produc
     C                     Z-ADD*ZERO     XAQSSH           Quantity Sched
     C                     Z-ADD*ZERO     XAWSLS           Quantity Sales
     C                     Z-ADD*ZERO     XAQAVL           Quantity Availa
     C                     MOVEL*BLANK    XAG2SX           Reserved for Ot
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0153    XAJODT           Avail Ship Date
     C                     Z-ADDWL0154    XAGXDT           Production Date
     C                     Z-ADDWL0155    XAQINV           Quantity Invent
     C                     Z-ADDWL0156    XAWPRD           Quantity Produc
     C                     Z-ADDWL0157    XAQSSH           Quantity Sched
     C                     Z-ADDWL0158    XAWSLS           Quantity Sales
     C                     Z-ADDWL0159    XAQAVL           Quantity Availa
     C                     MOVELWL0160    XAG2SX           Reserved for Ot
      *
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAJODT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *LOVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAJODT    WEJODT           Avail Ship Date
     C                     Z-ADDXAGXDT    WEGXDT           Production Date
     C                     Z-ADDXAQINV    WEQINV           Quantity Invent
     C                     Z-ADDXAWPRD    WEWPRD           Quantity Produc
     C                     Z-ADDXAQSSH    WEQSSH           Quantity Sched
     C                     Z-ADDXAWSLS    WEWSLS           Quantity Sales
     C                     Z-ADDXAQAVL    WEQAVL           Quantity Availa
     C                     MOVELXAG2SX    WEG2SX           Reserved for Ot
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0138  1        Header Status
     C                     Z-ADD*ZERO     WN0139  50       Aging Day
     C                     Z-ADD*ZERO     WN0140  70       Week End Date
     C                     Z-ADD*ZERO     WN0141 112       Qty Not Alloc o
     C                     Z-ADD*ZERO     WN0142 112       ATS Quantity Ne
     C                     Z-ADD*ZERO     WN0143  40       Accounting Year
     C                     Z-ADD*ZERO     WN0144  20       Accounting Peri
     C                     Z-ADD*ZERO     WN0145  20       Week Number
     C                     MOVEL*BLANK    WN0146  1        Production Type
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSO01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSO02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSO03           Warehouse Code
      * Define keylist
     C           KPSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0161    WQSO01           Company Number
     C                     Z-ADDWL0163    WQSO02           Item Code
     C                     MOVELWL0164    WQSO03           Warehouse Code
     C                     Z-ADDWL0165    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSO     SETLL@BGWKYG                    *
     C           KRSSO     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0169           Company Number
     C                     Z-ADDOMC4NB    WL0170           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    WN0138    P      Header Status
     C                     MOVELWL0172    YL0002    P      Billing Activit
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Header Status is Not Comp/Canc/Conf
      *   |- c2    : PAR.Order Number NE DB1.Order Number
      *   |- c3    : LCL.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0138    IFEQ 'L'                        *IF
     C           WN0138    OREQ 'A'
     C           WN0138    OREQ 'E'
     C           WN0138    OREQ 'H'
     C           WL0162    IFNE OMC4NB                     *IF
     C           YL0002    IFEQ '1'                        *IF
     C           YL0002    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           OMAODT    IFGT WL0166                     *IF
     C                     GOTO SOEXIT                     *QUIT
     C                     END                             *FI
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           OMAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0146           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0146           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0173           Company Number
     C                     MOVELWN0146    WL0174    P      Production Type
     C                     Z-ADDOMHGCD    WL0176           Item Code
     C                     MOVELOMAJCD    WL0177    P      Warehouse Code
     C                     Z-ADDOMAODT    WL0178           PS Available Sh
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0175    YL0003           Production Date
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0161    WL0179           Company Number
     C                     Z-ADD##JDT     WL0180           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0181    WUCQNB           Julian Date
     C                     Z-ADDWL0182    WN0143           Accounting Year
     C                     Z-ADDWL0183    WN0144           Accounting Peri
     C                     Z-ADDWL0184    WUBZNB           OM Week
     C                     MOVELWL0185    WUA9ST    P      Day of Week
     C                     Z-ADDWL0186    WN0145           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0161    WL0187           Company Number
     C                     Z-ADDWN0143    WL0189           Accounting Year
     C                     Z-ADDWN0144    WL0190           Accounting Peri
     C                     MOVEL'7'       WL0191    P      Day of Week
     C                     Z-ADDWN0145    WL0192           Week Number
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0188    WN0140           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UASUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           OMRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           OMRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           OMRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           OMRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           OMRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           OMRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           OMRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0139           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0139           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           OMAJCD    IFNE WL0167                     *IF
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0193           Company Number
     C                     Z-ADDOMC4NB    WL0194           Order Number
     C                     Z-ADDOMDPNB    WL0195           Order Sequence
     C                     Z-ADDOMUENB    WL0196           Order Secondary
     C                     Z-ADDWN0141    WL0197           OD Qty/Cnsmd Pi
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0197    WN0141           OD Qty/Cnsmd Pi
     C           OMCCQT    SUB  WN0141    WN0142           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           Qty Not Alloc o
     C                     Z-ADDOMCCQT    WN0142           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0198           Avail Ship Date
     C                     Z-ADDWN0139    WL0199           Aging Day
     C                     Z-ADDWN0140    WL0200           Week End Date
     C                     Z-ADDWN0141    WL0201           Qty Not Alloc o
     C                     Z-ADDWN0142    WL0202           ATS Quantity Ne
     C                     Z-ADDOMCCQT    WL0203           Quantity Schedu
     C                     Z-ADDOMAODT    WL0204           Scheduled Ship
     C                     MOVELWL0168    WL0205    P      Lot Tracking Fl
     C                     Z-ADDYL0003    WL0206           Production Date
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0199    WN0139           Aging Day
     C                     Z-ADDWL0201    WN0141           Qty Not Alloc o
     C                     Z-ADDWL0202    WN0142           ATS Quantity Ne
     C                     MOVELWL0207    YL0004    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0004    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0215           Avail Ship Date
     C                     Z-ADDOMCCQT    WL0216           Quantity Sched
     C                     EXSR SYRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UBSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           OMRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           OMRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           OMRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           OMRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           OMRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           OMRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           OMRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0139           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0139           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0217           Avail Ship Date
     C                     Z-ADDWN0139    WL0218           Aging Day
     C                     Z-ADDWN0140    WL0219           Week End Date
     C                     Z-ADDWN0141    WL0220           Qty Not Alloc o
     C                     Z-ADDWN0142    WL0221           ATS Quantity Ne
     C                     Z-ADDOMCCQT    WL0222           Quantity Schedu
     C                     Z-ADDOMAODT    WL0223           Scheduled Ship
     C                     MOVELWL0168    WL0224    P      Lot Tracking Fl
     C                     EXSR SZRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0218    WN0139           Aging Day
     C                     Z-ADDWL0220    WN0141           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0141    IFGT *ZERO                      *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0225           Avail Ship Date
     C                     Z-ADDWN0141    WL0226           Qty Not Alloc o
     C                     EXSR TARVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSO     READE@BGWKYG                  90*
     C                     ENDDO
      * USER: Exit processing
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           OMAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0146           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0146           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0173           Company Number
     C                     MOVELWN0146    WL0174    P      Production Type
     C                     Z-ADDOMHGCD    WL0176           Item Code
     C                     MOVELOMAJCD    WL0177    P      Warehouse Code
     C                     Z-ADDOMAODT    WL0178           PS Available Sh
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0175    YL0003           Production Date
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0161    WL0179           Company Number
     C                     Z-ADD##JDT     WL0180           Post to G/L Dat
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0181    WUCQNB           Julian Date
     C                     Z-ADDWL0182    WN0143           Accounting Year
     C                     Z-ADDWL0183    WN0144           Accounting Peri
     C                     Z-ADDWL0184    WUBZNB           OM Week
     C                     MOVELWL0185    WUA9ST    P      Day of Week
     C                     Z-ADDWL0186    WN0145           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0161    WL0187           Company Number
     C                     Z-ADDWN0143    WL0189           Accounting Year
     C                     Z-ADDWN0144    WL0190           Accounting Peri
     C                     MOVEL'7'       WL0191    P      Day of Week
     C                     Z-ADDWN0145    WL0192           Week Number
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0188    WN0140           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UCSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           OMRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           OMRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           OMRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           OMRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           OMRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           OMRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           OMRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0139           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0139           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           OMAJCD    IFNE WL0167                     *IF
      * Rtv Qty for Prod Whse  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0193           Company Number
     C                     Z-ADDOMC4NB    WL0194           Order Number
     C                     Z-ADDOMDPNB    WL0195           Order Sequence
     C                     Z-ADDOMUENB    WL0196           Order Secondary
     C                     Z-ADDWN0141    WL0197           OD Qty/Cnsmd Pi
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0197    WN0141           OD Qty/Cnsmd Pi
     C           OMCCQT    SUB  WN0141    WN0142           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           Qty Not Alloc o
     C                     Z-ADDOMCCQT    WN0142           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0198           Avail Ship Date
     C                     Z-ADDWN0139    WL0199           Aging Day
     C                     Z-ADDWN0140    WL0200           Week End Date
     C                     Z-ADDWN0141    WL0201           Qty Not Alloc o
     C                     Z-ADDWN0142    WL0202           ATS Quantity Ne
     C                     Z-ADDOMCCQT    WL0203           Quantity Schedu
     C                     Z-ADDOMAODT    WL0204           Scheduled Ship
     C                     MOVELWL0168    WL0205    P      Lot Tracking Fl
     C                     Z-ADDYL0003    WL0206           Production Date
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0199    WN0139           Aging Day
     C                     Z-ADDWL0201    WN0141           Qty Not Alloc o
     C                     Z-ADDWL0202    WN0142           ATS Quantity Ne
     C                     MOVELWL0207    YL0004    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0004    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0215           Avail Ship Date
     C                     Z-ADDOMCCQT    WL0216           Quantity Sched
     C                     EXSR SYRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UDSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           OMRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           OMRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           OMRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           OMRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           OMRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           OMRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0139           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           OMRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0139           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0139           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0217           Avail Ship Date
     C                     Z-ADDWN0139    WL0218           Aging Day
     C                     Z-ADDWN0140    WL0219           Week End Date
     C                     Z-ADDWN0141    WL0220           Qty Not Alloc o
     C                     Z-ADDWN0142    WL0221           ATS Quantity Ne
     C                     Z-ADDOMCCQT    WL0222           Quantity Schedu
     C                     Z-ADDOMAODT    WL0223           Scheduled Ship
     C                     MOVELWL0168    WL0224    P      Lot Tracking Fl
     C                     EXSR SZRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0218    WN0139           Aging Day
     C                     Z-ADDWL0220    WN0141           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0141    IFGT *ZERO                      *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAODT    WL0225           Avail Ship Date
     C                     Z-ADDWN0141    WL0226           Qty Not Alloc o
     C                     EXSR TARVGN
     C                     END                             *FI
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0169    BEAIC3           Company Number
     C                     Z-ADDWL0170    BEC4NB           Order Number
      * Establish starting position
     C           KRSSP     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0171           Header Status
     C                     MOVELBEOBST    WL0172           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN I8AIC3    WQSQ01           Company Number
     C           *LIKE     DEFN I8HGCD    WQSQ02           Item Code
     C           *LIKE     DEFN I8AJCD    WQSQ03           Warehouse Code
     C           *LIKE     DEFN I8GPDT    WQSQ04           PS Available Sh
     C           *LIKE     DEFN I8V5ST    WQSQ05           Production Type
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Item Code
     C                     KFLD           WQSQ03           Warehouse Code
     C                     KFLD           WQSQ04           PS Available Sh
     C                     KFLD           WQSQ05           Production Type
      * Setup key
     C                     Z-ADDWL0173    WQSQ01           Company Number
     C                     Z-ADDWL0176    WQSQ02           Item Code
     C                     MOVELWL0177    WQSQ03           Warehouse Code
     C                     Z-ADDWL0178    WQSQ04           PS Available Sh
     C                     MOVELWL0174    WQSQ05           Production Type
      * Establish starting position
     C           KRSSQ     SETLL@I8CPDZ                    *
     C           KRSSQ     READE@I8CPDZ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0175           Production Date
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDI8ELDT    WL0175           Production Date
     C                     GOTO SQEXIT                     *QUIT
     C           KRSSQ     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0179    AFAIC3           Company Number
     C                     Z-ADDWL0180    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSR     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0181           Julian Date
     C                     Z-ADD*ZERO     WL0182           Accounting Year
     C                     Z-ADD*ZERO     WL0183           Accounting Peri
     C                     Z-ADD*ZERO     WL0184           OM Week
     C                     MOVEL*BLANK    WL0185           Day of Week
     C                     Z-ADD*ZERO     WL0186           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFCQNB    WL0181           Julian Date
     C                     Z-ADDAFESNB    WL0182           Accounting Year
     C                     Z-ADDAFETNB    WL0183           Accounting Peri
     C                     Z-ADDAFBZNB    WL0184           OM Week
     C                     MOVELAFA9ST    WL0185           Day of Week
     C                     Z-ADDAFEINB    WL0186           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQSS01           Company Number
     C           *LIKE     DEFN WFESNB    WQSS02           Accounting Year
     C           *LIKE     DEFN WFETNB    WQSS03           Accounting Peri
     C           *LIKE     DEFN WFEINB    WQSS04           Week Number
     C           *LIKE     DEFN WFA9ST    WQSS05           Day of Week
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Accounting Year
     C                     KFLD           WQSS03           Accounting Peri
     C                     KFLD           WQSS04           Week Number
     C                     KFLD           WQSS05           Day of Week
      * Setup key
     C                     Z-ADDWL0187    WQSS01           Company Number
     C                     Z-ADDWL0189    WQSS02           Accounting Year
     C                     Z-ADDWL0190    WQSS03           Accounting Peri
     C                     Z-ADDWL0192    WQSS04           Week Number
     C                     MOVELWL0191    WQSS05           Day of Week
      * Establish starting position
     C           KRSSS     SETLL@AFREQ0                    *
     C           KRSSS     READE@AFREQ0                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWFBCDT    WL0188           Post to G/L Dat
     C           KRSSS     READE@AFREQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0197           OD Qty/Cnsmd Pi
      * Declare restrictor key work fields
     C           *LIKE     DEFN KNAIC3    WQST01           Company Number
     C           *LIKE     DEFN KNC4NB    WQST02           Order Number
     C           *LIKE     DEFN KNDPNB    WQST03           Order Sequence
     C           *LIKE     DEFN KNUENB    WQST04           Order Secondary
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           Company Number
     C                     KFLD           WQST02           Order Number
     C                     KFLD           WQST03           Order Sequence
     C                     KFLD           WQST04           Order Secondary
      * Setup key
     C                     Z-ADDWL0193    WQST01           Company Number
     C                     Z-ADDWL0194    WQST02           Order Number
     C                     Z-ADDWL0195    WQST03           Order Sequence
     C                     Z-ADDWL0196    WQST04           Order Secondary
      * Establish starting position
     C           KRSST     SETLL@KNCPHO                    *
     C           KRSST     READE@KNCPHO                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           KNAJCD    IFNE KNAYAA                     *IF
     C                     ADD  KNIGQT    WL0197           OD Qty/Cnsmd Pi
     C                     END                             *FI
     C           KRSST     READE@KNCPHO                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Clc Alloc Inv for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0147 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0148  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0149 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0150 112       Total Quantity
     C                     Z-ADD*ZERO     WN0151  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0152  81       Total Availabil
     C                     MOVEL*BLANK    WN0153  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WN0153           First Time Flag
     C                     MOVEL'N'       WL0207           Order Scheduled
     C                     Z-ADDWL0202    WN0148           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0198    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0147           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0199    IFEQ *ZERO                      *IF
     C           WN0148    ORLE *ZERO                      *OR
     C                     Z-ADDWN0148    WL0202           ATS Quantity Ne
      * CASE: PAR.First Time Flag is Yes
     C           WN0153    IFEQ 'Y'                        *IF
      * If ord ship is this day, updt Sched Ship/Avail
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WEJODT    IFEQ WL0204                     *IF
     C           WEQSSH    ADD  WL0203    WN0151           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0151    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WEWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0151    WL0209           Quantity Sched
     C                     Z-ADDWN0152    WL0210           Quantity Availa
     C                     EXSR SVCHRC
     C                     MOVEL'N'       WN0153           First Time Flag
     C                     MOVEL'Y'       WL0207           Order Scheduled
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO SUEXIT                     *QUIT
     C                     END                             *FI
      * Calc new avail with inv if current week, else calc with no inv
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Date LE PAR.Week End Date        USR
      *   |- c2    : PAR.Lot Tracking Flag is yes
      *   '-
     C           WL0206    IFLE WL0200                     *IF
     C           WL0205    OREQ 'Y'                        *OR
      * Avail with inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x1 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WEQINV    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WEWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0149           Quantity Availa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0149           Quantity Availa
     C                     END                             *FI
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0149    IFGT *ZERO                      *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0149    IFGE WN0148                     *IF
     C                     Z-ADDWN0148    WN0147           Quantity Alloca
     C                     Z-ADD*ZERO     WN0148           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0149    WN0147           Quantity Alloca
     C                     SUB  WN0149    WN0148           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WEJODT    IFEQ WL0204                     *IF
     C                     Z-ADDWEWSLS    WN0150           Total Quantity
     C           WEQSSH    ADD  WL0203    WN0151           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0151    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0150    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
     C                     EXSR SWCHRC
     C                     MOVEL'Y'       WL0207           Order Scheduled
     C                     ELSE
      * CASE: *OTHERWISE
     C           WEWSLS    ADD  WN0147    WN0150           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0150    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Total Availabil
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WEG2SX' defaulted for 'Reserved for Other Whse'.
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0211           Avail Ship Date
     C                     Z-ADDWN0150    WL0212           Quantity Sales
     C                     Z-ADDWN0152    WL0213           Quantity Availa
     C                     MOVELWEG2SX    WL0214    P      Reserved for Ot
     C                     EXSR SXCHRC
     C                     ADD  WN0147    WL0201           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0199           Aging Day
     C                     MOVEL'N'       WN0153           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      * USER: Exit processing
     C                     Z-ADDWN0148    WL0202           ATS Quantity Ne
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVCHRC    BEGSR
      *================================================================
      * Chg SchdShp/Avail      CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0154  70       Production Date
     C                     Z-ADD*ZERO     WN0155  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0156  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0157  61       Quantity Sales
     C                     MOVEL*BLANK    WN0158  1        Reserved for Ot
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0208    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0208
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0208    WEJODT           Avail Ship Date
     C                     Z-ADDWL0209    WEQSSH           Quantity Sched
     C                     Z-ADDWL0210    WEQAVL           Quantity Availa
      *
      *
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWCHRC    BEGSR
      *================================================================
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0159  70       Production Date
     C                     Z-ADD*ZERO     WN0160  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0161  61       Quantity Produc
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWEJODT    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WEJODT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWN0151    WEQSSH           Quantity Sched
     C                     Z-ADDWN0150    WEWSLS           Quantity Sales
     C                     Z-ADDWN0152    WEQAVL           Quantity Availa
      *
      *
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXCHRC    BEGSR
      *================================================================
      * Chg Alloc/Avail       CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0162  70       Production Date
     C                     Z-ADD*ZERO     WN0163  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0164  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0165  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0211    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0211
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SXEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0211    WEJODT           Avail Ship Date
     C                     Z-ADDWL0212    WEWSLS           Quantity Sales
     C                     Z-ADDWL0213    WEQAVL           Quantity Availa
     C                     MOVELWL0214    WEG2SX    P      Reserved for Ot
      *
      *
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Rtv Change Sched Ship  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0166  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0167  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0215    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0215
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WEQSSH    ADD  WL0216    WN0166           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0166    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WEWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0167           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0208           Avail Ship Date
     C                     Z-ADDWN0166    WL0209           Quantity Sched
     C                     Z-ADDWN0167    WL0210           Quantity Availa
     C                     EXSR SVCHRC
     C                     ENDIF
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * Clc Alloc Prod for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0168 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0169  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0170 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0171 112       Total Quantity
     C                     Z-ADD*ZERO     WN0172  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0173  81       Total Availabil
     C                     MOVEL*BLANK    WN0174  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWL0221    WN0169           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0217    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD*ZERO     WN0168           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0218    IFEQ *ZERO                      *IF
     C           WN0169    ORLE *ZERO                      *OR
     C                     GOTO SZEXIT                     *QUIT
     C                     END                             *FI
      * Avail with no inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x2 - x3 - x4)
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WEWPRD    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WEWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0170           Quantity Availa
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0170    IFGT *ZERO                      *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0170    IFGE WN0169                     *IF
     C                     Z-ADDWN0169    WN0168           Quantity Alloca
     C                     Z-ADD*ZERO     WN0169           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0170    WN0168           Quantity Alloca
     C                     SUB  WN0170    WN0169           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WEJODT    IFEQ WL0223                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C           WEWSLS    ADD  WN0168    WN0171           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0171    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0173           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0211           Avail Ship Date
     C                     Z-ADDWN0171    WL0212           Quantity Sales
     C                     Z-ADDWN0173    WL0213           Quantity Availa
     C                     MOVELWEG2SX    WL0214    P      Reserved for Ot
     C                     EXSR SXCHRC
     C                     ADD  WN0168    WL0220           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0218           Aging Day
     C                     MOVEL'N'       WN0174           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TARVGN    BEGSR
      *================================================================
      * Rtv Change Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0175 112       Total Quantity
     C                     Z-ADD*ZERO     WN0176  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0225    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0225
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WEWSLS    SUB  WL0226    WN0175           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0175    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0176           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0211           Avail Ship Date
     C                     Z-ADDWN0175    WL0212           Quantity Sales
     C                     Z-ADDWN0176    WL0213           Quantity Availa
     C                     MOVELWEG2SX    WL0214    P      Reserved for Ot
     C                     EXSR SXCHRC
     C                     ENDIF
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBRVGN    BEGSR
      *================================================================
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0177  1        Header Status
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGAIC3    WQTB01           Company Number
     C           *LIKE     DEFN WGHGCD    WQTB02           Item Code
     C           *LIKE     DEFN WGAJCD    WQTB03           Warehouse Code
      * Define keylist
     C           KPSTB     KLIST
     C                     KFLD           WQTB01           Company Number
     C                     KFLD           WQTB02           Item Code
     C                     KFLD           WQTB03           Warehouse Code
     C                     KFLD           WGAODT           Scheduled Ship
      * Define keylist
     C           KRSTB     KLIST
     C                     KFLD           WQTB01           Company Number
     C                     KFLD           WQTB02           Item Code
     C                     KFLD           WQTB03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0227    WQTB01           Company Number
     C                     Z-ADDWL0228    WQTB02           Item Code
     C                     MOVELWL0229    WQTB03           Warehouse Code
     C                     Z-ADDWL0230    WGAODT           Scheduled Ship
      * Establish starting position
     C           KPSTB     SETLL@KNCPZ7                    *
     C           KRSTB     READE@KNCPZ7                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Header Status      RT - PD Order Header  * 
     C                     EXSR TCRVGN
      * CASE: PAR.Header Status is Not Comp/Canc/Conf
     C           WN0177    IFEQ 'L'                        *IF
     C           WN0177    OREQ 'A'
     C           WN0177    OREQ 'E'
     C           WN0177    OREQ 'H'
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           WGAODT    IFGT WL0231                     *IF
     C                     GOTO TBEXIT                     *QUIT
     C                     END                             *FI
      * If warehouse ordered not equal to warehouse scheduled, then reser
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           WGAJCD    IFNE WGAYAA                     *IF
      * Rtv Add to Allocation  RT - *Arrays  * 
     C                     EXSR TDRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTB     READE@KNCPZ7                  90*
     C                     ENDDO
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * RTV Header Status      RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWGAIC3    BEAIC3           Company Number
     C                     Z-ADDWGC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSTC     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WN0177           Header Status
     C                     ENDIF
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDRVGN    BEGSR
      *================================================================
      * Rtv Add to Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0178 112       Total Quantity
     C                     Z-ADD*ZERO     WN0179  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWGAODT    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WGAODT
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WEWSLS    ADD  WGIGQT    WN0178           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WEQINV    ADD  WEWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WEQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0178    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0179           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEJODT    WL0211           Avail Ship Date
     C                     Z-ADDWN0178    WL0212           Quantity Sales
     C                     Z-ADDWN0179    WL0213           Quantity Availa
     C                     MOVEL'Y'       WL0214    P      Reserved for Ot
     C                     EXSR SXCHRC
     C                     ENDIF
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * Rtv PA Array for Roll RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0232    YI0101           Avail Ship Date
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0232
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0233           Quantity Sched
     C                     Z-ADD*ZERO     WL0234           Quantity Sales
     C                     Z-ADD*ZERO     WL0235           Quantity Availa
     C                     MOVEL*BLANK    WL0236           Reserved for Ot
     C                     GOTO TEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEQSSH    WL0233           Quantity Sched
     C                     Z-ADDWEWSLS    WL0234           Quantity Sales
     C                     Z-ADDWEQAVL    WL0235           Quantity Availa
     C                     MOVELWEG2SX    WL0236           Reserved for Ot
     C                     ENDIF
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFRVGN    BEGSR
      *================================================================
      * Val Item Bal Exist    RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTF     KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0237    B0AIC3           Company Number
     C                     Z-ADDWL0238    B0HGCD           Item Code
     C                     MOVELWL0239    B0AJCD           Warehouse Code
      * Establish starting position
     C           KRSTF     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0240           Record Found US
     C                     GOTO TFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0240           Record Found US
     C                     ENDIF
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * Rtv PA Tot SD-21      RT - Warehouse  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0184  70       USR Day 1
     C                     Z-ADD*ZERO     WN0185  70       USR Day 2
     C                     Z-ADD*ZERO     WN0186  70       USR Day 3
     C                     Z-ADD*ZERO     WN0187  70       USR Day 4
     C                     Z-ADD*ZERO     WN0188  70       USR Day 5
     C                     Z-ADD*ZERO     WN0189  70       USR Day 6
     C                     Z-ADD*ZERO     WN0190  70       USR Day 7
     C                     Z-ADD*ZERO     WN0191  70       USR Day 8
     C                     Z-ADD*ZERO     WN0192  70       USR Day 9
     C                     Z-ADD*ZERO     WN0193  70       USR Day 10
     C                     Z-ADD*ZERO     WN0194  70       USR Day 11
     C                     Z-ADD*ZERO     WN0195  70       USR Day 12
     C                     Z-ADD*ZERO     WN0196  70       USR Day 13
     C                     Z-ADD*ZERO     WN0197  70       USR Day 14
     C                     Z-ADD*ZERO     WN0198  70       USR Day 15
     C                     Z-ADD*ZERO     WN0199  70       USR Day 16
     C                     Z-ADD*ZERO     WN0200  70       USR Day 17
     C                     Z-ADD*ZERO     WN0201  70       USR Day 18
     C                     Z-ADD*ZERO     WN0202  70       USR Day 19
     C                     Z-ADD*ZERO     WN0203  70       USR Day 20
     C                     Z-ADD*ZERO     WN0204  70       USR Day 21
     C                     Z-ADD*ZERO     WN0205  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0206  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0207  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0208  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0209  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0210  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0211  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0212  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0213  61       Day 9 Availabil
     C                     Z-ADD*ZERO     WN0214  61       Day 10 Availabi
     C                     Z-ADD*ZERO     WN0215  61       Day 11 Availabi
     C                     Z-ADD*ZERO     WN0216  61       Day 12 Availabi
     C                     Z-ADD*ZERO     WN0217  61       Day 13 Availabi
     C                     Z-ADD*ZERO     WN0218  61       Day 14 Availabi
     C                     Z-ADD*ZERO     WN0219  61       Day 15 Availabi
     C                     Z-ADD*ZERO     WN0220  61       Day 16 Availabi
     C                     Z-ADD*ZERO     WN0221  61       Day 17 Availabi
     C                     Z-ADD*ZERO     WN0222  61       Day 18 Availabi
     C                     Z-ADD*ZERO     WN0223  61       Day 19 Availabi
     C                     Z-ADD*ZERO     WN0224  61       Day 20 Availabi
     C                     Z-ADD*ZERO     WN0225  61       Day 21 Availabi
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * FP1054 5/20/09  made inventory parms "B"oth, they werent anything
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0184           USR Day 1
     C                     Z-ADD*ZERO     WN0185           USR Day 2
     C                     Z-ADD*ZERO     WN0186           USR Day 3
     C                     Z-ADD*ZERO     WN0187           USR Day 4
     C                     Z-ADD*ZERO     WN0188           USR Day 5
     C                     Z-ADD*ZERO     WN0189           USR Day 6
     C                     Z-ADD*ZERO     WN0190           USR Day 7
     C                     Z-ADD*ZERO     WN0191           USR Day 8
     C                     Z-ADD*ZERO     WN0192           USR Day 9
     C                     Z-ADD*ZERO     WN0193           USR Day 10
     C                     Z-ADD*ZERO     WN0194           USR Day 11
     C                     Z-ADD*ZERO     WN0195           USR Day 12
     C                     Z-ADD*ZERO     WN0196           USR Day 13
     C                     Z-ADD*ZERO     WN0197           USR Day 14
     C                     Z-ADD*ZERO     WN0198           USR Day 15
     C                     Z-ADD*ZERO     WN0199           USR Day 16
     C                     Z-ADD*ZERO     WN0200           USR Day 17
     C                     Z-ADD*ZERO     WN0201           USR Day 18
     C                     Z-ADD*ZERO     WN0202           USR Day 19
     C                     Z-ADD*ZERO     WN0203           USR Day 20
     C                     Z-ADD*ZERO     WN0204           USR Day 21
     C                     Z-ADD*ZERO     P5D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P5D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P5D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P5D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P5D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P5D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P5D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P5GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0205           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0206           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0207           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0208           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0209           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0210           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0211           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0212           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0213           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0214           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0215           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0216           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0217           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0218           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0219           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0220           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0221           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0222           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0223           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0224           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0225           Day 21 Availabi
     C                     Z-ADD*ZERO     P5D1AQ           Day 1 ATS Qty U
     C                     Z-ADD*ZERO     P5D2AQ           Day 2 ATS Qty U
     C                     Z-ADD*ZERO     P5D3AQ           Day 3 ATS Qty U
     C                     Z-ADD*ZERO     P5D4AQ           Day 4 ATS Qty U
     C                     Z-ADD*ZERO     P5D5AQ           Day 5 ATS Qty U
     C                     Z-ADD*ZERO     P5D6AQ           Day 6 ATS Qty U
     C                     Z-ADD*ZERO     P5D7AQ           Day 7 ATS Qty U
     C                     Z-ADD*ZERO     P5D8AQ           Day 8 ATS Qty U
     C                     Z-ADD*ZERO     P5D9AQ           Day 9 ATS Qty U
     C                     Z-ADD*ZERO     P5D1AT           Day 10 ATS Qty
     C                     Z-ADD*ZERO     P5D2AT           Day 11 ATS Qty
     C                     Z-ADD*ZERO     P5D3AT           Day 12 ATS Qty
     C                     Z-ADD*ZERO     P5D4AT           Day 13 ATS Qty
     C                     Z-ADD*ZERO     P5D5AT           Day 14 ATS Qty
     C                     Z-ADD*ZERO     P5D6AT           Day 15 ATS Qty
     C                     Z-ADD*ZERO     P5D7AT           Day 16 ATS Qty
     C                     Z-ADD*ZERO     P5D9AT           Day 17 ATS Qty
     C                     Z-ADD*ZERO     P5D1AS           Day 18 ATS Qty
     C                     Z-ADD*ZERO     P5D2AS           Day 19 ATS Qty
     C                     Z-ADD*ZERO     P5D3AS           Day 20 ATS Qty
     C                     Z-ADD*ZERO     P5D4AS           Day 21 ATS Qty
     C                     Z-ADD*ZERO     P5D1AV           Day 1 Avail Tot
     C                     Z-ADD*ZERO     P5D2AV           Day 2 Avail Tot
     C                     Z-ADD*ZERO     P5D3AV           Day 3 Avail Tot
     C                     Z-ADD*ZERO     P5D4AV           Day 4 Avail Tot
     C                     Z-ADD*ZERO     P5D5AV           Day 5 Avail Tot
     C                     Z-ADD*ZERO     P5D6AV           Day 6 Avail Tot
     C                     Z-ADD*ZERO     P5D7AV           Day 7 Avail Tot
     C                     Z-ADD*ZERO     P5D8AV           Day 8 Avail Tot
     C                     Z-ADD*ZERO     P5D9AV           Day 9 Avail Tot
     C                     Z-ADD*ZERO     P5D1AB           Day 10 Avail To
     C                     Z-ADD*ZERO     P5D2AB           Day 11 Avail To
     C                     Z-ADD*ZERO     P5D3AB           Day 12 Avail To
     C                     Z-ADD*ZERO     P5D4AB           Day 13 Avail To
     C                     Z-ADD*ZERO     P5D5AB           Day 14 Avail To
     C                     Z-ADD*ZERO     P5D6AB           Day 15 Avail To
     C                     Z-ADD*ZERO     P5D7AB           Day 16 Avail To
     C                     Z-ADD*ZERO     P5D8AB           Day 17 Avail To
     C                     Z-ADD*ZERO     P5D9AB           Day 18 Avail To
     C                     Z-ADD*ZERO     P5D1AL           Day 19 Avail To
     C                     Z-ADD*ZERO     P5D2AL           Day 20 Avail To
     C                     Z-ADD*ZERO     P5D3AL           Day 21 Avail To
     C                     MOVEL'N'       YL0007           Status - Y or N
      * Establish starting position
     C           *LOVAL    SETLL@ADREOJ                    *
     C                     READ @ADREOJ                  90*
      * Data record not found
     C   90                MOVEL'USR0007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Check for matching warehouse code and warehouse type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type is Equal blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CAJCD    IFEQ *BLANK                     *IF
     C           #CWPST    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *
     C                     Z-ADD*ZERO     WN0226  70       USR Day 1
     C                     Z-ADD*ZERO     WN0227  70       USR Day 2
     C                     Z-ADD*ZERO     WN0228  70       USR Day 3
     C                     Z-ADD*ZERO     WN0229  70       USR Day 4
     C                     Z-ADD*ZERO     WN0230  70       USR Day 5
     C                     Z-ADD*ZERO     WN0231  70       USR Day 6
     C                     Z-ADD*ZERO     WN0232  70       USR Day 7
     C                     Z-ADD*ZERO     WN0233  70       USR Day 8
     C                     Z-ADD*ZERO     WN0234  70       USR Day 9
     C                     Z-ADD*ZERO     WN0235  70       USR Day 10
     C                     Z-ADD*ZERO     WN0236  70       USR Day 11
     C                     Z-ADD*ZERO     WN0237  70       USR Day 12
     C                     Z-ADD*ZERO     WN0238  70       USR Day 13
     C                     Z-ADD*ZERO     WN0239  70       USR Day 14
     C                     Z-ADD*ZERO     WN0240  70       USR Day 15
     C                     Z-ADD*ZERO     WN0241  70       USR Day 16
     C                     Z-ADD*ZERO     WN0242  70       USR Day 17
     C                     Z-ADD*ZERO     WN0243  70       USR Day 18
     C                     Z-ADD*ZERO     WN0244  70       USR Day 19
     C                     Z-ADD*ZERO     WN0245  70       USR Day 20
     C                     Z-ADD*ZERO     WN0246  70       USR Day 21
     C                     Z-ADD*ZERO     WN0247  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0248  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0249  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0250  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0251  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0252  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0253  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0254  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0255  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0256  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0257  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0258  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0259  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0260  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0261  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0262  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0263  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0264  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0265  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0266  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0267  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0268  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0269  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0270  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0271  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0272  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0273  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0274  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0275  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0276  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0277  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0278  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0279  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0280  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0281  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0282  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0283  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0284  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0285  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0286  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0287  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0288  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0289  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0290  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0291  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0292  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0293  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0294  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0295  61       Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0296  61       Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0297  61       Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0298  61       Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0299  61       Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0300  61       Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0301  61       Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0302  61       Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0303  61       Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0304  61       Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0305  61       Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0306  61       Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0307  61       Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0308  61       Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0309  61       Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0310  61       Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0311  61       Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0312  61       Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0313  61       Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0314  61       Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0315  61       Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0316  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0317  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0318  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0319  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0320  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0321  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0322  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0323  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0324  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0325  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0326  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0327  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0328  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0329  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0330  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0331  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0332  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0333  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0334  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0335  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0336  61       Day 21 Sched Sh
      *
      * RTV PA Tot SD-21      IF
      * FP1054 5/20/09 made inventory parms "B"oth, they were Neither
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0226           USR Day 1
     C                     Z-ADD*ZERO     WN0227           USR Day 2
     C                     Z-ADD*ZERO     WN0228           USR Day 3
     C                     Z-ADD*ZERO     WN0229           USR Day 4
     C                     Z-ADD*ZERO     WN0230           USR Day 5
     C                     Z-ADD*ZERO     WN0231           USR Day 6
     C                     Z-ADD*ZERO     WN0232           USR Day 7
     C                     Z-ADD*ZERO     WN0233           USR Day 8
     C                     Z-ADD*ZERO     WN0234           USR Day 9
     C                     Z-ADD*ZERO     WN0235           USR Day 10
     C                     Z-ADD*ZERO     WN0236           USR Day 11
     C                     Z-ADD*ZERO     WN0237           USR Day 12
     C                     Z-ADD*ZERO     WN0238           USR Day 13
     C                     Z-ADD*ZERO     WN0239           USR Day 14
     C                     Z-ADD*ZERO     WN0240           USR Day 15
     C                     Z-ADD*ZERO     WN0241           USR Day 16
     C                     Z-ADD*ZERO     WN0242           USR Day 17
     C                     Z-ADD*ZERO     WN0243           USR Day 18
     C                     Z-ADD*ZERO     WN0244           USR Day 19
     C                     Z-ADD*ZERO     WN0245           USR Day 20
     C                     Z-ADD*ZERO     WN0246           USR Day 21
     C                     Z-ADD*ZERO     P5D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P5D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P5D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P5D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P5D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P5D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P5D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P5GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0247           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0248           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0249           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0250           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0251           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0252           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0253           Day 1 Productio
     C                     Z-ADD*ZERO     WN0254           Day 2 Productio
     C                     Z-ADD*ZERO     WN0255           Day 3 Productio
     C                     Z-ADD*ZERO     WN0256           Day 4 Productio
     C                     Z-ADD*ZERO     WN0257           Day 5 Productio
     C                     Z-ADD*ZERO     WN0258           Day 6 Productio
     C                     Z-ADD*ZERO     WN0259           Day 7 Productio
     C                     Z-ADD*ZERO     WN0260           Day 8 Productio
     C                     Z-ADD*ZERO     WN0261           Day 9 Productio
     C                     Z-ADD*ZERO     WN0262           Day 10 Producti
     C                     Z-ADD*ZERO     WN0263           Day 11 Producti
     C                     Z-ADD*ZERO     WN0264           Day 12 Producti
     C                     Z-ADD*ZERO     WN0265           Day 13 Producti
     C                     Z-ADD*ZERO     WN0266           Day 14 Producti
     C                     Z-ADD*ZERO     WN0267           Day 15 Producti
     C                     Z-ADD*ZERO     WN0268           Day 16 Producti
     C                     Z-ADD*ZERO     WN0269           Day 17 Producti
     C                     Z-ADD*ZERO     WN0270           Day 18 Producti
     C                     Z-ADD*ZERO     WN0271           Day 19 Producti
     C                     Z-ADD*ZERO     WN0272           Day 20 Producti
     C                     Z-ADD*ZERO     WN0273           Day 21 Producti
     C                     Z-ADD*ZERO     WN0274           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0275           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0276           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0277           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0278           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0279           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0280           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0281           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0282           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0283           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0284           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0285           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0286           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0287           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0288           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0289           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0290           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0291           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0292           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0293           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0294           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0295           Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0296           Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0297           Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0298           Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0299           Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0300           Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0301           Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0302           Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0303           Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0304           Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0305           Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0306           Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0307           Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0308           Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0309           Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0310           Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0311           Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0312           Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0313           Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0314           Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0315           Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0205           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0206           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0207           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0208           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0209           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0210           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0211           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0212           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0213           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0214           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0215           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0216           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0217           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0218           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0219           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0220           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0221           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0222           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0223           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0224           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0225           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0316           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0317           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0318           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0319           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0320           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0321           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0322           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0323           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0324           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0325           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0326           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0327           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0328           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0329           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0330           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0331           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0332           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0333           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0334           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0335           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0336           Day 21 Sched Sh
      *
     C                     Z-ADD*ZERO     WN0337  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0338  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0339  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0340  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0341  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0342  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0343  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0344  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0345  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0346  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0347  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0348  92       PS Weight Sched
      *
      * Rtv PA In/Sh SD-6     IF
      * Retrieve Inventory and Scheduled Shipments
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0241           Company Number
     C                     MOVEL'S'       WL0242    P      Production Type
     C                     Z-ADD##JDT     WL0243           Production Date
     C                     Z-ADD#1HGCD    WL0244           Item Code
     C                     MOVELWDAJCD    WL0245    P      Warehouse Code
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0246    WN0337           PS Weight Inv O
     C                     Z-ADDWL0247    WN0338           PS Pieces Inv O
     C                     Z-ADDWL0248    WN0339           PS Weight Inv A
     C                     Z-ADDWL0249    WN0340           PS Pieces Inv A
     C                     Z-ADDWL0250    WN0341           PS Weight Ship
     C                     Z-ADDWL0251    WN0342           PS Pieces Ship
     C                     Z-ADDWL0252    WN0343           PS Weight Prod
     C                     Z-ADDWL0253    WN0344           PS Pieces Prod
     C                     Z-ADDWL0254    WN0345           PS Weight Inv A
     C                     Z-ADDWL0255    WN0346           PS Pieces Inv A
     C                     Z-ADDWL0256    WN0347           PS Weight Order
     C                     Z-ADDWL0257    WN0348           PS Weight Sched
      * Inventory / Sales if Chilling Time > 0
      * CASE: Primary
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #RAIWG    IFGT *ZERO                      *IF
     C           P6PCCT    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Unit Weight or Pieces
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0349 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0350 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0349    WL0262           Weight Schedule
     C                     Z-ADDWN0350    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0349           Weight Schedule
     C                     Z-ADDWL0263    WN0350           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0274           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0274           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0349    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0316           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0295    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0295           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0274           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0274           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0274    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0274           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0350    WN0316           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0295    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0295           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0295    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0274    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0351 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0352 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0351    WL0262           Weight Schedule
     C                     Z-ADDWN0352    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0351           Weight Schedule
     C                     Z-ADDWL0263    WN0352           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0275           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0275           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0351    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0317           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0296    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0296           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0275           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0275           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0275    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0275           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0352    WN0317           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0296    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0296           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0296    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0275    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0353 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0354 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0353    WL0262           Weight Schedule
     C                     Z-ADDWN0354    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0353           Weight Schedule
     C                     Z-ADDWL0263    WN0354           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0276           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0276           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0353    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0318           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0297    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0297           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0276           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0276           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0276    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0276           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0354    WN0318           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0297    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0297           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0297    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0276    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0355 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0356 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0355    WL0262           Weight Schedule
     C                     Z-ADDWN0356    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0355           Weight Schedule
     C                     Z-ADDWL0263    WN0356           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0277           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0277           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0355    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0319           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0298    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0298           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0277           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0277           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0277    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0277           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0356    WN0319           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0298    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0298           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0298    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0277    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0357 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0358 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0357    WL0262           Weight Schedule
     C                     Z-ADDWN0358    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0357           Weight Schedule
     C                     Z-ADDWL0263    WN0358           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0278           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0278           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0357    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0320           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0299    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0299           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0278           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0278           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0278    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0278           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0358    WN0320           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0299    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0299           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0299    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0278    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0359 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0360 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0359    WL0262           Weight Schedule
     C                     Z-ADDWN0360    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0359           Weight Schedule
     C                     Z-ADDWL0263    WN0360           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0279           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0279           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0359    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0321           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0300    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0300           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0279           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0279           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0279    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0279           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0360    WN0321           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0300    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0300           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0300    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0279    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0361 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0362 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0361    WL0262           Weight Schedule
     C                     Z-ADDWN0362    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0361           Weight Schedule
     C                     Z-ADDWL0263    WN0362           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0337    ADD  WN0339    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0280           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0343    ADD  WN0345    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0280           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0361    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0322           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0341    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0301    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0301           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0338    ADD  WN0340    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0280           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0345    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0280           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0344    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0280    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0280           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0362    WN0322           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0342    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0301    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0301           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0301    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0280    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0363 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0364 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0363    WL0262           Weight Schedule
     C                     Z-ADDWN0364    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0363           Weight Schedule
     C                     Z-ADDWL0263    WN0364           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0363    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0316           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D1IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0274           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0274           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0295    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0295           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0295    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0274    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0365 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0366 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0365    WL0262           Weight Schedule
     C                     Z-ADDWN0366    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0365           Weight Schedule
     C                     Z-ADDWL0263    WN0366           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0365    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0317           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D2IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0275           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0275           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0296    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0296           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0296    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0275    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0367 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0368 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0367    WL0262           Weight Schedule
     C                     Z-ADDWN0368    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0367           Weight Schedule
     C                     Z-ADDWL0263    WN0368           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0367    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0318           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D3IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0276           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0276           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0297    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0297           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0297    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0276    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0369 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0370 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0369    WL0262           Weight Schedule
     C                     Z-ADDWN0370    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0369           Weight Schedule
     C                     Z-ADDWL0263    WN0370           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0369    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0319           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D4IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0277           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0277           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0298    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0298           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0298    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0277    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0371 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0372 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0371    WL0262           Weight Schedule
     C                     Z-ADDWN0372    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0371           Weight Schedule
     C                     Z-ADDWL0263    WN0372           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0371    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0320           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D5IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0278           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0278           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0299    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0299           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0299    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0278    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0373 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0374 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0373    WL0262           Weight Schedule
     C                     Z-ADDWN0374    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0373           Weight Schedule
     C                     Z-ADDWL0263    WN0374           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0373    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0321           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D6IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0279           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0279           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0300    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0300           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0300    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0279    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0375 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0376 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0375    WL0262           Weight Schedule
     C                     Z-ADDWN0376    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0375           Weight Schedule
     C                     Z-ADDWL0263    WN0376           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0375    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0322           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0337    ADD  WN0339    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D7IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0280           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0345    ADD  WN0343    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0280           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0341    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0301    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0301           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0301    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0280    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Inventory
      * CASE: PAR.Avail Dsp/Prt Type USR is Display
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'T'
      * Total Inventory
      * PAR.Day 8 Inventory USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Inventory USR
     C           P5D1IN    ADD  P5D2IN    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  P5D3IN    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P5D4IN    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P5D5IN    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P5D6IN    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P5D7IN    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P5GCNX           Day 8 Inventory
     C                     END                             *FI
      * Rtv PA Dtl SD-21 WHS  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0264           Company Number
     C                     Z-ADD#1HGCD    WL0265           Item Code
     C                     MOVELWDAJCD    WL0266    P      Warehouse Code
     C                     Z-ADDP5H6DT    WL0267           PS Available Sh
     C                     Z-ADDP5H6DT    WL0268           Avail Ship Date
     C                     Z-ADDP5H7DT    WL0269           Avail Ship Date
     C                     Z-ADDP5H8DT    WL0270           Avail Ship Date
     C                     Z-ADDP5H9DT    WL0271           Avail Ship Date
     C                     Z-ADDP5IADT    WL0272           Avail Ship Date
     C                     Z-ADDP5IBDT    WL0273           Avail Ship Date
     C                     Z-ADDP5INDT    WL0274           Avail Ship Date
     C                     Z-ADDP5IODT    WL0275           Avail Ship Date
     C                     Z-ADDP5IPDT    WL0276           Avail Ship Date
     C                     Z-ADDP5IQDT    WL0277           Avail Ship Date
     C                     Z-ADDP5IRDT    WL0278           Avail Ship Date
     C                     Z-ADDP5ISDT    WL0279           Avail Ship Date
     C                     Z-ADDP5ITDT    WL0280           Avail Ship Date
     C                     Z-ADDP5IUDT    WL0281           Avail Ship Date
     C                     Z-ADDP5IVDT    WL0282           Avail Ship Date
     C                     Z-ADDP5IWDT    WL0283           Avail Ship Date
     C                     Z-ADDP5IXDT    WL0284           Avail Ship Date
     C                     Z-ADDP5IYDT    WL0285           Avail Ship Date
     C                     Z-ADDP5IZDT    WL0286           Avail Ship Date
     C                     Z-ADDP5I0DT    WL0287           Avail Ship Date
     C                     Z-ADDP5I1DT    WL0288           Avail Ship Date
     C                     Z-ADDP5D1IN    WL0310           Day 1 Inventory
     C                     Z-ADDP5D2IN    WL0311           Day 2 Inventory
     C                     Z-ADDP5D3IN    WL0312           Day 3 Inventory
     C                     Z-ADDP5D4IN    WL0313           Day 4 Inventory
     C                     Z-ADDP5D5IN    WL0314           Day 5 Inventory
     C                     Z-ADDP5D6IN    WL0315           Day 6 Inventory
     C                     Z-ADDWN0253    WL0316           Day 1 Productio
     C                     Z-ADDWN0254    WL0317           Day 2 Productio
     C                     Z-ADDWN0255    WL0318           Day 3 Productio
     C                     Z-ADDWN0256    WL0319           Day 4 Productio
     C                     Z-ADDWN0257    WL0320           Day 5 Productio
     C                     Z-ADDWN0258    WL0321           Day 6 Productio
     C                     Z-ADDWN0259    WL0322           Day 7 Productio
     C                     Z-ADDWN0260    WL0323           Day 8 Productio
     C                     Z-ADDWN0261    WL0324           Day 9 Productio
     C                     Z-ADDWN0262    WL0325           Day 10 Producti
     C                     Z-ADDWN0263    WL0326           Day 11 Producti
     C                     Z-ADDWN0264    WL0327           Day 12 Producti
     C                     Z-ADDWN0265    WL0328           Day 13 Producti
     C                     Z-ADDWN0266    WL0329           Day 14 Producti
     C                     Z-ADDWN0267    WL0330           Day 15 Producti
     C                     Z-ADDWN0268    WL0331           Day 16 Producti
     C                     Z-ADDWN0269    WL0332           Day 17 Producti
     C                     Z-ADDWN0270    WL0333           Day 18 Producti
     C                     Z-ADDWN0271    WL0334           Day 19 Producti
     C                     Z-ADDWN0272    WL0335           Day 20 Producti
     C                     Z-ADDWN0273    WL0336           Day 21 Producti
     C                     Z-ADDWN0274    WL0337           Day 1 Sales USR
     C                     Z-ADDWN0275    WL0338           Day 2 Sales USR
     C                     Z-ADDWN0276    WL0339           Day 3 Sales USR
     C                     Z-ADDWN0277    WL0340           Day 4 Sales USR
     C                     Z-ADDWN0278    WL0341           Day 5 Sales USR
     C                     Z-ADDWN0279    WL0342           Day 6 Sales USR
     C                     Z-ADDWN0280    WL0343           Day 7 Sales USR
     C                     Z-ADDWN0281    WL0344           Day 8 Sales USR
     C                     Z-ADDWN0282    WL0345           Day 9 Sales USR
     C                     Z-ADDWN0283    WL0346           Day 10 Sales US
     C                     Z-ADDWN0284    WL0347           Day 11 Sales US
     C                     Z-ADDWN0285    WL0348           Day 12 Sales US
     C                     Z-ADDWN0286    WL0349           Day 13 Sales US
     C                     Z-ADDWN0287    WL0350           Day 14 Sales US
     C                     Z-ADDWN0288    WL0351           Day 15 Sales US
     C                     Z-ADDWN0289    WL0352           Day 16 Sales US
     C                     Z-ADDWN0290    WL0353           Day 17 Sales US
     C                     Z-ADDWN0291    WL0354           Day 18 Sales US
     C                     Z-ADDWN0292    WL0355           Day 19 Sales US
     C                     Z-ADDWN0293    WL0356           Day 20 Sales US
     C                     Z-ADDWN0294    WL0357           Day 21 Sales US
     C                     Z-ADDWN0295    WL0358           Day 1 Adjustmen
     C                     Z-ADDWN0296    WL0359           Day 2 Adjustmen
     C                     Z-ADDWN0297    WL0360           Day 3 Adjustmen
     C                     Z-ADDWN0298    WL0361           Day 4 Adjustmen
     C                     Z-ADDWN0299    WL0362           Day 5 Adjustmen
     C                     Z-ADDWN0300    WL0363           Day 6 Adjustmen
     C                     Z-ADDWN0301    WL0364           Day 7 Adjustmen
     C                     Z-ADDWN0302    WL0365           Day 8 Adjustmen
     C                     Z-ADDWN0303    WL0366           Day 9 Adjustmen
     C                     Z-ADDWN0304    WL0367           Day 10 Adjustme
     C                     Z-ADDWN0305    WL0368           Day 11 Adjustme
     C                     Z-ADDWN0306    WL0369           Day 12 Adjustme
     C                     Z-ADDWN0307    WL0370           Day 13 Adjustme
     C                     Z-ADDWN0308    WL0371           Day 14 Adjustme
     C                     Z-ADDWN0309    WL0372           Day 15 Adjustme
     C                     Z-ADDWN0310    WL0373           Day 16 Adjustme
     C                     Z-ADDWN0311    WL0374           Day 17 Adjustme
     C                     Z-ADDWN0312    WL0375           Day 18 Adjustme
     C                     Z-ADDWN0313    WL0376           Day 19 Adjustme
     C                     Z-ADDWN0314    WL0377           Day 20 Adjustme
     C                     Z-ADDWN0315    WL0378           Day 21 Adjustme
     C                     Z-ADDWN0205    WL0379           Day 1 Availabil
     C                     Z-ADDWN0206    WL0380           Day 2 Availabil
     C                     Z-ADDWN0207    WL0381           Day 3 Availabil
     C                     Z-ADDWN0208    WL0382           Day 4 Availabil
     C                     Z-ADDWN0209    WL0383           Day 5 Availabil
     C                     Z-ADDWN0210    WL0384           Day 6 Availabil
     C                     Z-ADDWN0211    WL0385           Day 7 Availabil
     C                     Z-ADDWN0212    WL0386           Day 8 Availabil
     C                     Z-ADDWN0213    WL0387           Day 9 Availabil
     C                     Z-ADDWN0214    WL0388           Day 10 Availabi
     C                     Z-ADDWN0215    WL0389           Day 11 Availabi
     C                     Z-ADDWN0216    WL0390           Day 12 Availabi
     C                     Z-ADDWN0217    WL0391           Day 13 Availabi
     C                     Z-ADDWN0218    WL0392           Day 14 Availabi
     C                     Z-ADDWN0219    WL0393           Day 15 Availabi
     C                     Z-ADDWN0220    WL0394           Day 16 Availabi
     C                     Z-ADDWN0221    WL0395           Day 17 Availabi
     C                     Z-ADDWN0222    WL0396           Day 18 Availabi
     C                     Z-ADDWN0223    WL0397           Day 19 Availabi
     C                     Z-ADDWN0224    WL0398           Day 20 Availabi
     C                     Z-ADDWN0225    WL0399           Day 21 Availabi
     C                     MOVEL#CW4ST    WL0400    P      Primary/Load St
     C                     Z-ADD#CLDSZ    WL0401           Load Size USR
     C                     Z-ADDWN0316    WL0402           Day 1 Sched Shi
     C                     Z-ADDWN0317    WL0403           Day 2 Sched Shi
     C                     Z-ADDWN0318    WL0404           Day 3 Sched Shi
     C                     Z-ADDWN0319    WL0405           Day 4 Sched Shi
     C                     Z-ADDWN0320    WL0406           Day 5 Sched Shi
     C                     Z-ADDWN0321    WL0407           Day 6 Sched Shi
     C                     Z-ADDWN0322    WL0408           Day 7 Sched Shi
     C                     Z-ADDWN0323    WL0409           Day 8 Sched Shi
     C                     Z-ADDWN0324    WL0410           Day 9 Sched Shi
     C                     Z-ADDWN0325    WL0411           Day 10 Sched Sh
     C                     Z-ADDWN0326    WL0412           Day 11 Sched Sh
     C                     Z-ADDWN0327    WL0413           Day 12 Sched Sh
     C                     Z-ADDWN0328    WL0414           Day 13 Sched Sh
     C                     Z-ADDWN0329    WL0415           Day 14 Sched Sh
     C                     Z-ADDWN0330    WL0416           Day 15 Sched Sh
     C                     Z-ADDWN0331    WL0417           Day 16 Sched Sh
     C                     Z-ADDWN0332    WL0418           Day 17 Sched Sh
     C                     Z-ADDWN0333    WL0419           Day 18 Sched Sh
     C                     Z-ADDWN0334    WL0420           Day 19 Sched Sh
     C                     Z-ADDWN0335    WL0421           Day 20 Sched Sh
     C                     Z-ADDWN0336    WL0422           Day 21 Sched Sh
     C                     MOVEL'T'       WL0423    P      Avail Dsp/Prt T
     C                     MOVEL#RADCD    WL0424    P      U/M - Primary
     C                     Z-ADD#RAIWG    WL0425           Unit Weight
     C                     Z-ADD#RCHTM    WL0426           Fresh Chilling
     C                     MOVELP6PCCT    WL0427    P      Piece Count Ite
     C                     Z-ADDP6BDNB    WL0428           Pieces Per Bag
     C                     Z-ADDP6BJNB    WL0429           Bags Per Unit
     C                     EXSR TJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0289    WN0226           USR Day 1
     C                     Z-ADDWL0290    WN0227           USR Day 2
     C                     Z-ADDWL0291    WN0228           USR Day 3
     C                     Z-ADDWL0292    WN0229           USR Day 4
     C                     Z-ADDWL0293    WN0230           USR Day 5
     C                     Z-ADDWL0294    WN0231           USR Day 6
     C                     Z-ADDWL0295    WN0232           USR Day 7
     C                     Z-ADDWL0296    WN0233           USR Day 8
     C                     Z-ADDWL0297    WN0234           USR Day 9
     C                     Z-ADDWL0298    WN0235           USR Day 10
     C                     Z-ADDWL0299    WN0236           USR Day 11
     C                     Z-ADDWL0300    WN0237           USR Day 12
     C                     Z-ADDWL0301    WN0238           USR Day 13
     C                     Z-ADDWL0302    WN0239           USR Day 14
     C                     Z-ADDWL0303    WN0240           USR Day 15
     C                     Z-ADDWL0304    WN0241           USR Day 16
     C                     Z-ADDWL0305    WN0242           USR Day 17
     C                     Z-ADDWL0306    WN0243           USR Day 18
     C                     Z-ADDWL0307    WN0244           USR Day 19
     C                     Z-ADDWL0308    WN0245           USR Day 20
     C                     Z-ADDWL0309    WN0246           USR Day 21
     C                     Z-ADDWL0316    WN0253           Day 1 Productio
     C                     Z-ADDWL0317    WN0254           Day 2 Productio
     C                     Z-ADDWL0318    WN0255           Day 3 Productio
     C                     Z-ADDWL0319    WN0256           Day 4 Productio
     C                     Z-ADDWL0320    WN0257           Day 5 Productio
     C                     Z-ADDWL0321    WN0258           Day 6 Productio
     C                     Z-ADDWL0322    WN0259           Day 7 Productio
     C                     Z-ADDWL0323    WN0260           Day 8 Productio
     C                     Z-ADDWL0324    WN0261           Day 9 Productio
     C                     Z-ADDWL0325    WN0262           Day 10 Producti
     C                     Z-ADDWL0326    WN0263           Day 11 Producti
     C                     Z-ADDWL0327    WN0264           Day 12 Producti
     C                     Z-ADDWL0328    WN0265           Day 13 Producti
     C                     Z-ADDWL0329    WN0266           Day 14 Producti
     C                     Z-ADDWL0330    WN0267           Day 15 Producti
     C                     Z-ADDWL0331    WN0268           Day 16 Producti
     C                     Z-ADDWL0332    WN0269           Day 17 Producti
     C                     Z-ADDWL0333    WN0270           Day 18 Producti
     C                     Z-ADDWL0334    WN0271           Day 19 Producti
     C                     Z-ADDWL0335    WN0272           Day 20 Producti
     C                     Z-ADDWL0336    WN0273           Day 21 Producti
     C                     Z-ADDWL0337    WN0274           Day 1 Sales USR
     C                     Z-ADDWL0338    WN0275           Day 2 Sales USR
     C                     Z-ADDWL0339    WN0276           Day 3 Sales USR
     C                     Z-ADDWL0340    WN0277           Day 4 Sales USR
     C                     Z-ADDWL0341    WN0278           Day 5 Sales USR
     C                     Z-ADDWL0342    WN0279           Day 6 Sales USR
     C                     Z-ADDWL0343    WN0280           Day 7 Sales USR
     C                     Z-ADDWL0344    WN0281           Day 8 Sales USR
     C                     Z-ADDWL0345    WN0282           Day 9 Sales USR
     C                     Z-ADDWL0346    WN0283           Day 10 Sales US
     C                     Z-ADDWL0347    WN0284           Day 11 Sales US
     C                     Z-ADDWL0348    WN0285           Day 12 Sales US
     C                     Z-ADDWL0349    WN0286           Day 13 Sales US
     C                     Z-ADDWL0350    WN0287           Day 14 Sales US
     C                     Z-ADDWL0351    WN0288           Day 15 Sales US
     C                     Z-ADDWL0352    WN0289           Day 16 Sales US
     C                     Z-ADDWL0353    WN0290           Day 17 Sales US
     C                     Z-ADDWL0354    WN0291           Day 18 Sales US
     C                     Z-ADDWL0355    WN0292           Day 19 Sales US
     C                     Z-ADDWL0356    WN0293           Day 20 Sales US
     C                     Z-ADDWL0357    WN0294           Day 21 Sales US
     C                     Z-ADDWL0358    WN0295           Day 1 Adjustmen
     C                     Z-ADDWL0359    WN0296           Day 2 Adjustmen
     C                     Z-ADDWL0360    WN0297           Day 3 Adjustmen
     C                     Z-ADDWL0361    WN0298           Day 4 Adjustmen
     C                     Z-ADDWL0362    WN0299           Day 5 Adjustmen
     C                     Z-ADDWL0363    WN0300           Day 6 Adjustmen
     C                     Z-ADDWL0364    WN0301           Day 7 Adjustmen
     C                     Z-ADDWL0365    WN0302           Day 8 Adjustmen
     C                     Z-ADDWL0366    WN0303           Day 9 Adjustmen
     C                     Z-ADDWL0367    WN0304           Day 10 Adjustme
     C                     Z-ADDWL0368    WN0305           Day 11 Adjustme
     C                     Z-ADDWL0369    WN0306           Day 12 Adjustme
     C                     Z-ADDWL0370    WN0307           Day 13 Adjustme
     C                     Z-ADDWL0371    WN0308           Day 14 Adjustme
     C                     Z-ADDWL0372    WN0309           Day 15 Adjustme
     C                     Z-ADDWL0373    WN0310           Day 16 Adjustme
     C                     Z-ADDWL0374    WN0311           Day 17 Adjustme
     C                     Z-ADDWL0375    WN0312           Day 18 Adjustme
     C                     Z-ADDWL0376    WN0313           Day 19 Adjustme
     C                     Z-ADDWL0377    WN0314           Day 20 Adjustme
     C                     Z-ADDWL0378    WN0315           Day 21 Adjustme
     C                     Z-ADDWL0379    WN0205           Day 1 Availabil
     C                     Z-ADDWL0380    WN0206           Day 2 Availabil
     C                     Z-ADDWL0381    WN0207           Day 3 Availabil
     C                     Z-ADDWL0382    WN0208           Day 4 Availabil
     C                     Z-ADDWL0383    WN0209           Day 5 Availabil
     C                     Z-ADDWL0384    WN0210           Day 6 Availabil
     C                     Z-ADDWL0385    WN0211           Day 7 Availabil
     C                     Z-ADDWL0386    WN0212           Day 8 Availabil
     C                     Z-ADDWL0387    WN0213           Day 9 Availabil
     C                     Z-ADDWL0388    WN0214           Day 10 Availabi
     C                     Z-ADDWL0389    WN0215           Day 11 Availabi
     C                     Z-ADDWL0390    WN0216           Day 12 Availabi
     C                     Z-ADDWL0391    WN0217           Day 13 Availabi
     C                     Z-ADDWL0392    WN0218           Day 14 Availabi
     C                     Z-ADDWL0393    WN0219           Day 15 Availabi
     C                     Z-ADDWL0394    WN0220           Day 16 Availabi
     C                     Z-ADDWL0395    WN0221           Day 17 Availabi
     C                     Z-ADDWL0396    WN0222           Day 18 Availabi
     C                     Z-ADDWL0397    WN0223           Day 19 Availabi
     C                     Z-ADDWL0398    WN0224           Day 20 Availabi
     C                     Z-ADDWL0399    WN0225           Day 21 Availabi
     C                     Z-ADDWL0402    WN0316           Day 1 Sched Shi
     C                     Z-ADDWL0403    WN0317           Day 2 Sched Shi
     C                     Z-ADDWL0404    WN0318           Day 3 Sched Shi
     C                     Z-ADDWL0405    WN0319           Day 4 Sched Shi
     C                     Z-ADDWL0406    WN0320           Day 5 Sched Shi
     C                     Z-ADDWL0407    WN0321           Day 6 Sched Shi
     C                     Z-ADDWL0408    WN0322           Day 7 Sched Shi
     C                     Z-ADDWL0409    WN0323           Day 8 Sched Shi
     C                     Z-ADDWL0410    WN0324           Day 9 Sched Shi
     C                     Z-ADDWL0411    WN0325           Day 10 Sched Sh
     C                     Z-ADDWL0412    WN0326           Day 11 Sched Sh
     C                     Z-ADDWL0413    WN0327           Day 12 Sched Sh
     C                     Z-ADDWL0414    WN0328           Day 13 Sched Sh
     C                     Z-ADDWL0415    WN0329           Day 14 Sched Sh
     C                     Z-ADDWL0416    WN0330           Day 15 Sched Sh
     C                     Z-ADDWL0417    WN0331           Day 16 Sched Sh
     C                     Z-ADDWL0418    WN0332           Day 17 Sched Sh
     C                     Z-ADDWL0419    WN0333           Day 18 Sched Sh
     C                     Z-ADDWL0420    WN0334           Day 19 Sched Sh
     C                     Z-ADDWL0421    WN0335           Day 20 Sched Sh
     C                     Z-ADDWL0422    WN0336           Day 21 Sched Sh
     C                     MOVEL'Y'       YL0007           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type EQ DB1.Warehouse Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CAJCD    IFEQ *BLANK                     *IF
     C           #CWPST    IFEQ WDWPST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *
     C                     Z-ADD*ZERO     WN0400  70       USR Day 1
     C                     Z-ADD*ZERO     WN0401  70       USR Day 2
     C                     Z-ADD*ZERO     WN0402  70       USR Day 3
     C                     Z-ADD*ZERO     WN0403  70       USR Day 4
     C                     Z-ADD*ZERO     WN0404  70       USR Day 5
     C                     Z-ADD*ZERO     WN0405  70       USR Day 6
     C                     Z-ADD*ZERO     WN0406  70       USR Day 7
     C                     Z-ADD*ZERO     WN0407  70       USR Day 8
     C                     Z-ADD*ZERO     WN0408  70       USR Day 9
     C                     Z-ADD*ZERO     WN0409  70       USR Day 10
     C                     Z-ADD*ZERO     WN0410  70       USR Day 11
     C                     Z-ADD*ZERO     WN0411  70       USR Day 12
     C                     Z-ADD*ZERO     WN0412  70       USR Day 13
     C                     Z-ADD*ZERO     WN0413  70       USR Day 14
     C                     Z-ADD*ZERO     WN0414  70       USR Day 15
     C                     Z-ADD*ZERO     WN0415  70       USR Day 16
     C                     Z-ADD*ZERO     WN0416  70       USR Day 17
     C                     Z-ADD*ZERO     WN0417  70       USR Day 18
     C                     Z-ADD*ZERO     WN0418  70       USR Day 19
     C                     Z-ADD*ZERO     WN0419  70       USR Day 20
     C                     Z-ADD*ZERO     WN0420  70       USR Day 21
     C                     Z-ADD*ZERO     WN0421  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0422  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0423  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0424  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0425  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0426  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0427  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0428  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0429  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0430  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0431  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0432  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0433  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0434  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0435  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0436  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0437  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0438  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0439  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0440  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0441  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0442  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0443  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0444  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0445  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0446  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0447  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0448  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0449  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0450  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0451  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0452  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0453  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0454  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0455  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0456  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0457  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0458  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0459  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0460  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0461  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0462  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0463  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0464  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0465  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0466  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0467  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0468  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0469  61       Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0470  61       Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0471  61       Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0472  61       Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0473  61       Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0474  61       Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0475  61       Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0476  61       Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0477  61       Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0478  61       Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0479  61       Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0480  61       Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0481  61       Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0482  61       Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0483  61       Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0484  61       Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0485  61       Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0486  61       Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0487  61       Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0488  61       Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0489  61       Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0490  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0491  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0492  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0493  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0494  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0495  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0496  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0497  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0498  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0499  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0500  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0501  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0502  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0503  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0504  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0505  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0506  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0507  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0508  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0509  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0510  61       Day 21 Sched Sh
      *
      * RTV PA Tot SD-21      IF
      * FP1054 5/20/09 made inventory parms "B"oth, they were Neither
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0400           USR Day 1
     C                     Z-ADD*ZERO     WN0401           USR Day 2
     C                     Z-ADD*ZERO     WN0402           USR Day 3
     C                     Z-ADD*ZERO     WN0403           USR Day 4
     C                     Z-ADD*ZERO     WN0404           USR Day 5
     C                     Z-ADD*ZERO     WN0405           USR Day 6
     C                     Z-ADD*ZERO     WN0406           USR Day 7
     C                     Z-ADD*ZERO     WN0407           USR Day 8
     C                     Z-ADD*ZERO     WN0408           USR Day 9
     C                     Z-ADD*ZERO     WN0409           USR Day 10
     C                     Z-ADD*ZERO     WN0410           USR Day 11
     C                     Z-ADD*ZERO     WN0411           USR Day 12
     C                     Z-ADD*ZERO     WN0412           USR Day 13
     C                     Z-ADD*ZERO     WN0413           USR Day 14
     C                     Z-ADD*ZERO     WN0414           USR Day 15
     C                     Z-ADD*ZERO     WN0415           USR Day 16
     C                     Z-ADD*ZERO     WN0416           USR Day 17
     C                     Z-ADD*ZERO     WN0417           USR Day 18
     C                     Z-ADD*ZERO     WN0418           USR Day 19
     C                     Z-ADD*ZERO     WN0419           USR Day 20
     C                     Z-ADD*ZERO     WN0420           USR Day 21
     C                     Z-ADD*ZERO     P5D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P5D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P5D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P5D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P5D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P5D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P5D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P5GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0421           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0422           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0423           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0424           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0425           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0426           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0427           Day 1 Productio
     C                     Z-ADD*ZERO     WN0428           Day 2 Productio
     C                     Z-ADD*ZERO     WN0429           Day 3 Productio
     C                     Z-ADD*ZERO     WN0430           Day 4 Productio
     C                     Z-ADD*ZERO     WN0431           Day 5 Productio
     C                     Z-ADD*ZERO     WN0432           Day 6 Productio
     C                     Z-ADD*ZERO     WN0433           Day 7 Productio
     C                     Z-ADD*ZERO     WN0434           Day 8 Productio
     C                     Z-ADD*ZERO     WN0435           Day 9 Productio
     C                     Z-ADD*ZERO     WN0436           Day 10 Producti
     C                     Z-ADD*ZERO     WN0437           Day 11 Producti
     C                     Z-ADD*ZERO     WN0438           Day 12 Producti
     C                     Z-ADD*ZERO     WN0439           Day 13 Producti
     C                     Z-ADD*ZERO     WN0440           Day 14 Producti
     C                     Z-ADD*ZERO     WN0441           Day 15 Producti
     C                     Z-ADD*ZERO     WN0442           Day 16 Producti
     C                     Z-ADD*ZERO     WN0443           Day 17 Producti
     C                     Z-ADD*ZERO     WN0444           Day 18 Producti
     C                     Z-ADD*ZERO     WN0445           Day 19 Producti
     C                     Z-ADD*ZERO     WN0446           Day 20 Producti
     C                     Z-ADD*ZERO     WN0447           Day 21 Producti
     C                     Z-ADD*ZERO     WN0448           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0449           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0450           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0451           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0452           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0453           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0454           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0455           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0456           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0457           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0458           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0459           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0460           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0461           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0462           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0463           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0464           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0465           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0466           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0467           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0468           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0469           Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0470           Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0471           Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0472           Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0473           Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0474           Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0475           Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0476           Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0477           Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0478           Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0479           Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0480           Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0481           Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0482           Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0483           Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0484           Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0485           Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0486           Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0487           Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0488           Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0489           Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0205           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0206           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0207           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0208           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0209           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0210           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0211           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0212           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0213           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0214           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0215           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0216           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0217           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0218           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0219           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0220           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0221           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0222           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0223           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0224           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0225           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0490           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0491           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0492           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0493           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0494           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0495           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0496           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0497           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0498           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0499           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0500           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0501           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0502           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0503           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0504           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0505           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0506           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0507           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0508           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0509           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0510           Day 21 Sched Sh
      *
     C                     Z-ADD*ZERO     WN0511  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0512  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0513  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0514  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0515  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0516  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0517  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0518  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0519  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0520  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0521  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0522  92       PS Weight Sched
      *
      * Rtv PA In/Sh SD-6     IF
      * Retrieve Inventory and Scheduled Shipments
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0241           Company Number
     C                     MOVEL'S'       WL0242    P      Production Type
     C                     Z-ADD##JDT     WL0243           Production Date
     C                     Z-ADD#1HGCD    WL0244           Item Code
     C                     MOVELWDAJCD    WL0245    P      Warehouse Code
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0246    WN0511           PS Weight Inv O
     C                     Z-ADDWL0247    WN0512           PS Pieces Inv O
     C                     Z-ADDWL0248    WN0513           PS Weight Inv A
     C                     Z-ADDWL0249    WN0514           PS Pieces Inv A
     C                     Z-ADDWL0250    WN0515           PS Weight Ship
     C                     Z-ADDWL0251    WN0516           PS Pieces Ship
     C                     Z-ADDWL0252    WN0517           PS Weight Prod
     C                     Z-ADDWL0253    WN0518           PS Pieces Prod
     C                     Z-ADDWL0254    WN0519           PS Weight Inv A
     C                     Z-ADDWL0255    WN0520           PS Pieces Inv A
     C                     Z-ADDWL0256    WN0521           PS Weight Order
     C                     Z-ADDWL0257    WN0522           PS Weight Sched
      * Inventory / Sales if Chilling Time > 0
      * CASE: Primary
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #RAIWG    IFGT *ZERO                      *IF
     C           P6PCCT    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Unit Weight or Pieces
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0523 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0524 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0523    WL0262           Weight Schedule
     C                     Z-ADDWN0524    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0523           Weight Schedule
     C                     Z-ADDWL0263    WN0524           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0448           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0448           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0523    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0490           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0469    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0469           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0448           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0448           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0448    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0448           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0524    WN0490           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0469    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0469           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0469    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0448    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0525 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0526 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0525    WL0262           Weight Schedule
     C                     Z-ADDWN0526    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0525           Weight Schedule
     C                     Z-ADDWL0263    WN0526           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0449           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0449           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0525    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0491           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0470    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0470           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0449           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0449           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0449    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0449           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0526    WN0491           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0470    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0470           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0470    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0449    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0527 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0528 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0527    WL0262           Weight Schedule
     C                     Z-ADDWN0528    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0527           Weight Schedule
     C                     Z-ADDWL0263    WN0528           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0450           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0450           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0527    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0492           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0471    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0471           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0450           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0450           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0450    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0450           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0528    WN0492           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0471    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0471           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0471    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0450    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0529 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0530 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0529    WL0262           Weight Schedule
     C                     Z-ADDWN0530    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0529           Weight Schedule
     C                     Z-ADDWL0263    WN0530           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0451           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0451           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0529    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0493           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0472    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0472           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0451           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0451           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0451    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0451           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0530    WN0493           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0472    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0472           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0472    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0451    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0531 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0532 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0531    WL0262           Weight Schedule
     C                     Z-ADDWN0532    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0531           Weight Schedule
     C                     Z-ADDWL0263    WN0532           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0452           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0452           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0531    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0494           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0473    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0473           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0452           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0452           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0452    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0452           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0532    WN0494           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0473    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0473           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0473    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0452    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0533 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0534 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0533    WL0262           Weight Schedule
     C                     Z-ADDWN0534    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0533           Weight Schedule
     C                     Z-ADDWL0263    WN0534           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0453           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0453           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0533    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0495           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0474    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0474           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0453           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0453           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0453    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0453           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0534    WN0495           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0474    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0474           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0474    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0453    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0535 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0536 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0535    WL0262           Weight Schedule
     C                     Z-ADDWN0536    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0535           Weight Schedule
     C                     Z-ADDWL0263    WN0536           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0511    ADD  WN0513    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0454           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0517    ADD  WN0519    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0454           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0535    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0496           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0515    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0475    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0475           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0512    ADD  WN0514    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0454           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0519    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0454           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0518    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0454    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0454           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0536    WN0496           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0516    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0475    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0475           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0475    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0454    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0537 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0538 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0537    WL0262           Weight Schedule
     C                     Z-ADDWN0538    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0537           Weight Schedule
     C                     Z-ADDWL0263    WN0538           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0537    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0490           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D1IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0448           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0448           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0469    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0469           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0469    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0448    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0539 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0540 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0539    WL0262           Weight Schedule
     C                     Z-ADDWN0540    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0539           Weight Schedule
     C                     Z-ADDWL0263    WN0540           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0539    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0491           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D2IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0449           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0449           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0470    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0470           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0470    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0449    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0541 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0542 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0541    WL0262           Weight Schedule
     C                     Z-ADDWN0542    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0541           Weight Schedule
     C                     Z-ADDWL0263    WN0542           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0541    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0492           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D3IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0450           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0450           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0471    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0471           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0471    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0450    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0543 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0544 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0543    WL0262           Weight Schedule
     C                     Z-ADDWN0544    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0543           Weight Schedule
     C                     Z-ADDWL0263    WN0544           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0543    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0493           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D4IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0451           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0451           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0472    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0472           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0472    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0451    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0545 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0546 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0545    WL0262           Weight Schedule
     C                     Z-ADDWN0546    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0545           Weight Schedule
     C                     Z-ADDWL0263    WN0546           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0545    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0494           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D5IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0452           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0452           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0473    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0473           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0473    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0452    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0547 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0548 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0547    WL0262           Weight Schedule
     C                     Z-ADDWN0548    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0547           Weight Schedule
     C                     Z-ADDWL0263    WN0548           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0547    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0495           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D6IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0453           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0453           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0474    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0474           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0474    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0453    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0549 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0550 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0549    WL0262           Weight Schedule
     C                     Z-ADDWN0550    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0549           Weight Schedule
     C                     Z-ADDWL0263    WN0550           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0549    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0496           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0511    ADD  WN0513    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D7IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0454           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0519    ADD  WN0517    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0454           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0515    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0475    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0475           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0475    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0454    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Inventory
      * CASE: PAR.Avail Dsp/Prt Type USR is Display
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'T'
      * Total Inventory
      * PAR.Day 8 Inventory USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Inventory USR
     C           P5D1IN    ADD  P5D2IN    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  P5D3IN    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P5D4IN    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P5D5IN    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P5D6IN    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P5D7IN    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P5GCNX           Day 8 Inventory
     C                     END                             *FI
      * Rtv PA Dtl SD-21 WHS  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0264           Company Number
     C                     Z-ADD#1HGCD    WL0265           Item Code
     C                     MOVELWDAJCD    WL0266    P      Warehouse Code
     C                     Z-ADDP5H6DT    WL0267           PS Available Sh
     C                     Z-ADDP5H6DT    WL0268           Avail Ship Date
     C                     Z-ADDP5H7DT    WL0269           Avail Ship Date
     C                     Z-ADDP5H8DT    WL0270           Avail Ship Date
     C                     Z-ADDP5H9DT    WL0271           Avail Ship Date
     C                     Z-ADDP5IADT    WL0272           Avail Ship Date
     C                     Z-ADDP5IBDT    WL0273           Avail Ship Date
     C                     Z-ADDP5INDT    WL0274           Avail Ship Date
     C                     Z-ADDP5IODT    WL0275           Avail Ship Date
     C                     Z-ADDP5IPDT    WL0276           Avail Ship Date
     C                     Z-ADDP5IQDT    WL0277           Avail Ship Date
     C                     Z-ADDP5IRDT    WL0278           Avail Ship Date
     C                     Z-ADDP5ISDT    WL0279           Avail Ship Date
     C                     Z-ADDP5ITDT    WL0280           Avail Ship Date
     C                     Z-ADDP5IUDT    WL0281           Avail Ship Date
     C                     Z-ADDP5IVDT    WL0282           Avail Ship Date
     C                     Z-ADDP5IWDT    WL0283           Avail Ship Date
     C                     Z-ADDP5IXDT    WL0284           Avail Ship Date
     C                     Z-ADDP5IYDT    WL0285           Avail Ship Date
     C                     Z-ADDP5IZDT    WL0286           Avail Ship Date
     C                     Z-ADDP5I0DT    WL0287           Avail Ship Date
     C                     Z-ADDP5I1DT    WL0288           Avail Ship Date
     C                     Z-ADDP5D1IN    WL0310           Day 1 Inventory
     C                     Z-ADDP5D2IN    WL0311           Day 2 Inventory
     C                     Z-ADDP5D3IN    WL0312           Day 3 Inventory
     C                     Z-ADDP5D4IN    WL0313           Day 4 Inventory
     C                     Z-ADDP5D5IN    WL0314           Day 5 Inventory
     C                     Z-ADDP5D6IN    WL0315           Day 6 Inventory
     C                     Z-ADDWN0427    WL0316           Day 1 Productio
     C                     Z-ADDWN0428    WL0317           Day 2 Productio
     C                     Z-ADDWN0429    WL0318           Day 3 Productio
     C                     Z-ADDWN0430    WL0319           Day 4 Productio
     C                     Z-ADDWN0431    WL0320           Day 5 Productio
     C                     Z-ADDWN0432    WL0321           Day 6 Productio
     C                     Z-ADDWN0433    WL0322           Day 7 Productio
     C                     Z-ADDWN0434    WL0323           Day 8 Productio
     C                     Z-ADDWN0435    WL0324           Day 9 Productio
     C                     Z-ADDWN0436    WL0325           Day 10 Producti
     C                     Z-ADDWN0437    WL0326           Day 11 Producti
     C                     Z-ADDWN0438    WL0327           Day 12 Producti
     C                     Z-ADDWN0439    WL0328           Day 13 Producti
     C                     Z-ADDWN0440    WL0329           Day 14 Producti
     C                     Z-ADDWN0441    WL0330           Day 15 Producti
     C                     Z-ADDWN0442    WL0331           Day 16 Producti
     C                     Z-ADDWN0443    WL0332           Day 17 Producti
     C                     Z-ADDWN0444    WL0333           Day 18 Producti
     C                     Z-ADDWN0445    WL0334           Day 19 Producti
     C                     Z-ADDWN0446    WL0335           Day 20 Producti
     C                     Z-ADDWN0447    WL0336           Day 21 Producti
     C                     Z-ADDWN0448    WL0337           Day 1 Sales USR
     C                     Z-ADDWN0449    WL0338           Day 2 Sales USR
     C                     Z-ADDWN0450    WL0339           Day 3 Sales USR
     C                     Z-ADDWN0451    WL0340           Day 4 Sales USR
     C                     Z-ADDWN0452    WL0341           Day 5 Sales USR
     C                     Z-ADDWN0453    WL0342           Day 6 Sales USR
     C                     Z-ADDWN0454    WL0343           Day 7 Sales USR
     C                     Z-ADDWN0455    WL0344           Day 8 Sales USR
     C                     Z-ADDWN0456    WL0345           Day 9 Sales USR
     C                     Z-ADDWN0457    WL0346           Day 10 Sales US
     C                     Z-ADDWN0458    WL0347           Day 11 Sales US
     C                     Z-ADDWN0459    WL0348           Day 12 Sales US
     C                     Z-ADDWN0460    WL0349           Day 13 Sales US
     C                     Z-ADDWN0461    WL0350           Day 14 Sales US
     C                     Z-ADDWN0462    WL0351           Day 15 Sales US
     C                     Z-ADDWN0463    WL0352           Day 16 Sales US
     C                     Z-ADDWN0464    WL0353           Day 17 Sales US
     C                     Z-ADDWN0465    WL0354           Day 18 Sales US
     C                     Z-ADDWN0466    WL0355           Day 19 Sales US
     C                     Z-ADDWN0467    WL0356           Day 20 Sales US
     C                     Z-ADDWN0468    WL0357           Day 21 Sales US
     C                     Z-ADDWN0469    WL0358           Day 1 Adjustmen
     C                     Z-ADDWN0470    WL0359           Day 2 Adjustmen
     C                     Z-ADDWN0471    WL0360           Day 3 Adjustmen
     C                     Z-ADDWN0472    WL0361           Day 4 Adjustmen
     C                     Z-ADDWN0473    WL0362           Day 5 Adjustmen
     C                     Z-ADDWN0474    WL0363           Day 6 Adjustmen
     C                     Z-ADDWN0475    WL0364           Day 7 Adjustmen
     C                     Z-ADDWN0476    WL0365           Day 8 Adjustmen
     C                     Z-ADDWN0477    WL0366           Day 9 Adjustmen
     C                     Z-ADDWN0478    WL0367           Day 10 Adjustme
     C                     Z-ADDWN0479    WL0368           Day 11 Adjustme
     C                     Z-ADDWN0480    WL0369           Day 12 Adjustme
     C                     Z-ADDWN0481    WL0370           Day 13 Adjustme
     C                     Z-ADDWN0482    WL0371           Day 14 Adjustme
     C                     Z-ADDWN0483    WL0372           Day 15 Adjustme
     C                     Z-ADDWN0484    WL0373           Day 16 Adjustme
     C                     Z-ADDWN0485    WL0374           Day 17 Adjustme
     C                     Z-ADDWN0486    WL0375           Day 18 Adjustme
     C                     Z-ADDWN0487    WL0376           Day 19 Adjustme
     C                     Z-ADDWN0488    WL0377           Day 20 Adjustme
     C                     Z-ADDWN0489    WL0378           Day 21 Adjustme
     C                     Z-ADDWN0205    WL0379           Day 1 Availabil
     C                     Z-ADDWN0206    WL0380           Day 2 Availabil
     C                     Z-ADDWN0207    WL0381           Day 3 Availabil
     C                     Z-ADDWN0208    WL0382           Day 4 Availabil
     C                     Z-ADDWN0209    WL0383           Day 5 Availabil
     C                     Z-ADDWN0210    WL0384           Day 6 Availabil
     C                     Z-ADDWN0211    WL0385           Day 7 Availabil
     C                     Z-ADDWN0212    WL0386           Day 8 Availabil
     C                     Z-ADDWN0213    WL0387           Day 9 Availabil
     C                     Z-ADDWN0214    WL0388           Day 10 Availabi
     C                     Z-ADDWN0215    WL0389           Day 11 Availabi
     C                     Z-ADDWN0216    WL0390           Day 12 Availabi
     C                     Z-ADDWN0217    WL0391           Day 13 Availabi
     C                     Z-ADDWN0218    WL0392           Day 14 Availabi
     C                     Z-ADDWN0219    WL0393           Day 15 Availabi
     C                     Z-ADDWN0220    WL0394           Day 16 Availabi
     C                     Z-ADDWN0221    WL0395           Day 17 Availabi
     C                     Z-ADDWN0222    WL0396           Day 18 Availabi
     C                     Z-ADDWN0223    WL0397           Day 19 Availabi
     C                     Z-ADDWN0224    WL0398           Day 20 Availabi
     C                     Z-ADDWN0225    WL0399           Day 21 Availabi
     C                     MOVEL#CW4ST    WL0400    P      Primary/Load St
     C                     Z-ADD#CLDSZ    WL0401           Load Size USR
     C                     Z-ADDWN0490    WL0402           Day 1 Sched Shi
     C                     Z-ADDWN0491    WL0403           Day 2 Sched Shi
     C                     Z-ADDWN0492    WL0404           Day 3 Sched Shi
     C                     Z-ADDWN0493    WL0405           Day 4 Sched Shi
     C                     Z-ADDWN0494    WL0406           Day 5 Sched Shi
     C                     Z-ADDWN0495    WL0407           Day 6 Sched Shi
     C                     Z-ADDWN0496    WL0408           Day 7 Sched Shi
     C                     Z-ADDWN0497    WL0409           Day 8 Sched Shi
     C                     Z-ADDWN0498    WL0410           Day 9 Sched Shi
     C                     Z-ADDWN0499    WL0411           Day 10 Sched Sh
     C                     Z-ADDWN0500    WL0412           Day 11 Sched Sh
     C                     Z-ADDWN0501    WL0413           Day 12 Sched Sh
     C                     Z-ADDWN0502    WL0414           Day 13 Sched Sh
     C                     Z-ADDWN0503    WL0415           Day 14 Sched Sh
     C                     Z-ADDWN0504    WL0416           Day 15 Sched Sh
     C                     Z-ADDWN0505    WL0417           Day 16 Sched Sh
     C                     Z-ADDWN0506    WL0418           Day 17 Sched Sh
     C                     Z-ADDWN0507    WL0419           Day 18 Sched Sh
     C                     Z-ADDWN0508    WL0420           Day 19 Sched Sh
     C                     Z-ADDWN0509    WL0421           Day 20 Sched Sh
     C                     Z-ADDWN0510    WL0422           Day 21 Sched Sh
     C                     MOVEL'T'       WL0423    P      Avail Dsp/Prt T
     C                     MOVEL#RADCD    WL0424    P      U/M - Primary
     C                     Z-ADD#RAIWG    WL0425           Unit Weight
     C                     Z-ADD#RCHTM    WL0426           Fresh Chilling
     C                     MOVELP6PCCT    WL0427    P      Piece Count Ite
     C                     Z-ADDP6BDNB    WL0428           Pieces Per Bag
     C                     Z-ADDP6BJNB    WL0429           Bags Per Unit
     C                     EXSR TJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0289    WN0400           USR Day 1
     C                     Z-ADDWL0290    WN0401           USR Day 2
     C                     Z-ADDWL0291    WN0402           USR Day 3
     C                     Z-ADDWL0292    WN0403           USR Day 4
     C                     Z-ADDWL0293    WN0404           USR Day 5
     C                     Z-ADDWL0294    WN0405           USR Day 6
     C                     Z-ADDWL0295    WN0406           USR Day 7
     C                     Z-ADDWL0296    WN0407           USR Day 8
     C                     Z-ADDWL0297    WN0408           USR Day 9
     C                     Z-ADDWL0298    WN0409           USR Day 10
     C                     Z-ADDWL0299    WN0410           USR Day 11
     C                     Z-ADDWL0300    WN0411           USR Day 12
     C                     Z-ADDWL0301    WN0412           USR Day 13
     C                     Z-ADDWL0302    WN0413           USR Day 14
     C                     Z-ADDWL0303    WN0414           USR Day 15
     C                     Z-ADDWL0304    WN0415           USR Day 16
     C                     Z-ADDWL0305    WN0416           USR Day 17
     C                     Z-ADDWL0306    WN0417           USR Day 18
     C                     Z-ADDWL0307    WN0418           USR Day 19
     C                     Z-ADDWL0308    WN0419           USR Day 20
     C                     Z-ADDWL0309    WN0420           USR Day 21
     C                     Z-ADDWL0316    WN0427           Day 1 Productio
     C                     Z-ADDWL0317    WN0428           Day 2 Productio
     C                     Z-ADDWL0318    WN0429           Day 3 Productio
     C                     Z-ADDWL0319    WN0430           Day 4 Productio
     C                     Z-ADDWL0320    WN0431           Day 5 Productio
     C                     Z-ADDWL0321    WN0432           Day 6 Productio
     C                     Z-ADDWL0322    WN0433           Day 7 Productio
     C                     Z-ADDWL0323    WN0434           Day 8 Productio
     C                     Z-ADDWL0324    WN0435           Day 9 Productio
     C                     Z-ADDWL0325    WN0436           Day 10 Producti
     C                     Z-ADDWL0326    WN0437           Day 11 Producti
     C                     Z-ADDWL0327    WN0438           Day 12 Producti
     C                     Z-ADDWL0328    WN0439           Day 13 Producti
     C                     Z-ADDWL0329    WN0440           Day 14 Producti
     C                     Z-ADDWL0330    WN0441           Day 15 Producti
     C                     Z-ADDWL0331    WN0442           Day 16 Producti
     C                     Z-ADDWL0332    WN0443           Day 17 Producti
     C                     Z-ADDWL0333    WN0444           Day 18 Producti
     C                     Z-ADDWL0334    WN0445           Day 19 Producti
     C                     Z-ADDWL0335    WN0446           Day 20 Producti
     C                     Z-ADDWL0336    WN0447           Day 21 Producti
     C                     Z-ADDWL0337    WN0448           Day 1 Sales USR
     C                     Z-ADDWL0338    WN0449           Day 2 Sales USR
     C                     Z-ADDWL0339    WN0450           Day 3 Sales USR
     C                     Z-ADDWL0340    WN0451           Day 4 Sales USR
     C                     Z-ADDWL0341    WN0452           Day 5 Sales USR
     C                     Z-ADDWL0342    WN0453           Day 6 Sales USR
     C                     Z-ADDWL0343    WN0454           Day 7 Sales USR
     C                     Z-ADDWL0344    WN0455           Day 8 Sales USR
     C                     Z-ADDWL0345    WN0456           Day 9 Sales USR
     C                     Z-ADDWL0346    WN0457           Day 10 Sales US
     C                     Z-ADDWL0347    WN0458           Day 11 Sales US
     C                     Z-ADDWL0348    WN0459           Day 12 Sales US
     C                     Z-ADDWL0349    WN0460           Day 13 Sales US
     C                     Z-ADDWL0350    WN0461           Day 14 Sales US
     C                     Z-ADDWL0351    WN0462           Day 15 Sales US
     C                     Z-ADDWL0352    WN0463           Day 16 Sales US
     C                     Z-ADDWL0353    WN0464           Day 17 Sales US
     C                     Z-ADDWL0354    WN0465           Day 18 Sales US
     C                     Z-ADDWL0355    WN0466           Day 19 Sales US
     C                     Z-ADDWL0356    WN0467           Day 20 Sales US
     C                     Z-ADDWL0357    WN0468           Day 21 Sales US
     C                     Z-ADDWL0358    WN0469           Day 1 Adjustmen
     C                     Z-ADDWL0359    WN0470           Day 2 Adjustmen
     C                     Z-ADDWL0360    WN0471           Day 3 Adjustmen
     C                     Z-ADDWL0361    WN0472           Day 4 Adjustmen
     C                     Z-ADDWL0362    WN0473           Day 5 Adjustmen
     C                     Z-ADDWL0363    WN0474           Day 6 Adjustmen
     C                     Z-ADDWL0364    WN0475           Day 7 Adjustmen
     C                     Z-ADDWL0365    WN0476           Day 8 Adjustmen
     C                     Z-ADDWL0366    WN0477           Day 9 Adjustmen
     C                     Z-ADDWL0367    WN0478           Day 10 Adjustme
     C                     Z-ADDWL0368    WN0479           Day 11 Adjustme
     C                     Z-ADDWL0369    WN0480           Day 12 Adjustme
     C                     Z-ADDWL0370    WN0481           Day 13 Adjustme
     C                     Z-ADDWL0371    WN0482           Day 14 Adjustme
     C                     Z-ADDWL0372    WN0483           Day 15 Adjustme
     C                     Z-ADDWL0373    WN0484           Day 16 Adjustme
     C                     Z-ADDWL0374    WN0485           Day 17 Adjustme
     C                     Z-ADDWL0375    WN0486           Day 18 Adjustme
     C                     Z-ADDWL0376    WN0487           Day 19 Adjustme
     C                     Z-ADDWL0377    WN0488           Day 20 Adjustme
     C                     Z-ADDWL0378    WN0489           Day 21 Adjustme
     C                     Z-ADDWL0379    WN0205           Day 1 Availabil
     C                     Z-ADDWL0380    WN0206           Day 2 Availabil
     C                     Z-ADDWL0381    WN0207           Day 3 Availabil
     C                     Z-ADDWL0382    WN0208           Day 4 Availabil
     C                     Z-ADDWL0383    WN0209           Day 5 Availabil
     C                     Z-ADDWL0384    WN0210           Day 6 Availabil
     C                     Z-ADDWL0385    WN0211           Day 7 Availabil
     C                     Z-ADDWL0386    WN0212           Day 8 Availabil
     C                     Z-ADDWL0387    WN0213           Day 9 Availabil
     C                     Z-ADDWL0388    WN0214           Day 10 Availabi
     C                     Z-ADDWL0389    WN0215           Day 11 Availabi
     C                     Z-ADDWL0390    WN0216           Day 12 Availabi
     C                     Z-ADDWL0391    WN0217           Day 13 Availabi
     C                     Z-ADDWL0392    WN0218           Day 14 Availabi
     C                     Z-ADDWL0393    WN0219           Day 15 Availabi
     C                     Z-ADDWL0394    WN0220           Day 16 Availabi
     C                     Z-ADDWL0395    WN0221           Day 17 Availabi
     C                     Z-ADDWL0396    WN0222           Day 18 Availabi
     C                     Z-ADDWL0397    WN0223           Day 19 Availabi
     C                     Z-ADDWL0398    WN0224           Day 20 Availabi
     C                     Z-ADDWL0399    WN0225           Day 21 Availabi
     C                     Z-ADDWL0402    WN0490           Day 1 Sched Shi
     C                     Z-ADDWL0403    WN0491           Day 2 Sched Shi
     C                     Z-ADDWL0404    WN0492           Day 3 Sched Shi
     C                     Z-ADDWL0405    WN0493           Day 4 Sched Shi
     C                     Z-ADDWL0406    WN0494           Day 5 Sched Shi
     C                     Z-ADDWL0407    WN0495           Day 6 Sched Shi
     C                     Z-ADDWL0408    WN0496           Day 7 Sched Shi
     C                     Z-ADDWL0409    WN0497           Day 8 Sched Shi
     C                     Z-ADDWL0410    WN0498           Day 9 Sched Shi
     C                     Z-ADDWL0411    WN0499           Day 10 Sched Sh
     C                     Z-ADDWL0412    WN0500           Day 11 Sched Sh
     C                     Z-ADDWL0413    WN0501           Day 12 Sched Sh
     C                     Z-ADDWL0414    WN0502           Day 13 Sched Sh
     C                     Z-ADDWL0415    WN0503           Day 14 Sched Sh
     C                     Z-ADDWL0416    WN0504           Day 15 Sched Sh
     C                     Z-ADDWL0417    WN0505           Day 16 Sched Sh
     C                     Z-ADDWL0418    WN0506           Day 17 Sched Sh
     C                     Z-ADDWL0419    WN0507           Day 18 Sched Sh
     C                     Z-ADDWL0420    WN0508           Day 19 Sched Sh
     C                     Z-ADDWL0421    WN0509           Day 20 Sched Sh
     C                     Z-ADDWL0422    WN0510           Day 21 Sched Sh
     C                     MOVEL'Y'       YL0007           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Warehouse Code EQ DB1.Warehouse Code
     C           #CAJCD    IFEQ WDAJCD                     *IF
      *
     C                     Z-ADD*ZERO     WN0551  70       USR Day 1
     C                     Z-ADD*ZERO     WN0552  70       USR Day 2
     C                     Z-ADD*ZERO     WN0553  70       USR Day 3
     C                     Z-ADD*ZERO     WN0554  70       USR Day 4
     C                     Z-ADD*ZERO     WN0555  70       USR Day 5
     C                     Z-ADD*ZERO     WN0556  70       USR Day 6
     C                     Z-ADD*ZERO     WN0557  70       USR Day 7
     C                     Z-ADD*ZERO     WN0558  70       USR Day 8
     C                     Z-ADD*ZERO     WN0559  70       USR Day 9
     C                     Z-ADD*ZERO     WN0560  70       USR Day 10
     C                     Z-ADD*ZERO     WN0561  70       USR Day 11
     C                     Z-ADD*ZERO     WN0562  70       USR Day 12
     C                     Z-ADD*ZERO     WN0563  70       USR Day 13
     C                     Z-ADD*ZERO     WN0564  70       USR Day 14
     C                     Z-ADD*ZERO     WN0565  70       USR Day 15
     C                     Z-ADD*ZERO     WN0566  70       USR Day 16
     C                     Z-ADD*ZERO     WN0567  70       USR Day 17
     C                     Z-ADD*ZERO     WN0568  70       USR Day 18
     C                     Z-ADD*ZERO     WN0569  70       USR Day 19
     C                     Z-ADD*ZERO     WN0570  70       USR Day 20
     C                     Z-ADD*ZERO     WN0571  70       USR Day 21
     C                     Z-ADD*ZERO     WN0572  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0573  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0574  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0575  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0576  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0577  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0578  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0579  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0580  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0581  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0582  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0583  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0584  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0585  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0586  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0587  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0588  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0589  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0590  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0591  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0592  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0593  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0594  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0595  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0596  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0597  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0598  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0599  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0600  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0601  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0602  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0603  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0604  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0605  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0606  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0607  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0608  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0609  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0610  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0611  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0612  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0613  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0614  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0615  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0616  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0617  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0618  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0619  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0620  61       Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0621  61       Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0622  61       Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0623  61       Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0624  61       Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0625  61       Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0626  61       Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0627  61       Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0628  61       Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0629  61       Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0630  61       Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0631  61       Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0632  61       Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0633  61       Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0634  61       Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0635  61       Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0636  61       Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0637  61       Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0638  61       Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0639  61       Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0640  61       Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0641  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0642  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0643  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0644  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0645  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0646  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0647  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0648  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0649  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0650  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0651  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0652  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0653  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0654  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0655  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0656  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0657  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0658  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0659  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0660  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0661  61       Day 21 Sched Sh
      *
      * RTV PA Tot SD-21      IF
      * FP1054 5/20/09 made inventory parms "B"oth, they were Neither
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0551           USR Day 1
     C                     Z-ADD*ZERO     WN0552           USR Day 2
     C                     Z-ADD*ZERO     WN0553           USR Day 3
     C                     Z-ADD*ZERO     WN0554           USR Day 4
     C                     Z-ADD*ZERO     WN0555           USR Day 5
     C                     Z-ADD*ZERO     WN0556           USR Day 6
     C                     Z-ADD*ZERO     WN0557           USR Day 7
     C                     Z-ADD*ZERO     WN0558           USR Day 8
     C                     Z-ADD*ZERO     WN0559           USR Day 9
     C                     Z-ADD*ZERO     WN0560           USR Day 10
     C                     Z-ADD*ZERO     WN0561           USR Day 11
     C                     Z-ADD*ZERO     WN0562           USR Day 12
     C                     Z-ADD*ZERO     WN0563           USR Day 13
     C                     Z-ADD*ZERO     WN0564           USR Day 14
     C                     Z-ADD*ZERO     WN0565           USR Day 15
     C                     Z-ADD*ZERO     WN0566           USR Day 16
     C                     Z-ADD*ZERO     WN0567           USR Day 17
     C                     Z-ADD*ZERO     WN0568           USR Day 18
     C                     Z-ADD*ZERO     WN0569           USR Day 19
     C                     Z-ADD*ZERO     WN0570           USR Day 20
     C                     Z-ADD*ZERO     WN0571           USR Day 21
     C                     Z-ADD*ZERO     P5D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P5D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P5D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P5D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P5D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P5D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P5D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P5GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0572           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0573           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0574           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0575           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0576           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0577           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0578           Day 1 Productio
     C                     Z-ADD*ZERO     WN0579           Day 2 Productio
     C                     Z-ADD*ZERO     WN0580           Day 3 Productio
     C                     Z-ADD*ZERO     WN0581           Day 4 Productio
     C                     Z-ADD*ZERO     WN0582           Day 5 Productio
     C                     Z-ADD*ZERO     WN0583           Day 6 Productio
     C                     Z-ADD*ZERO     WN0584           Day 7 Productio
     C                     Z-ADD*ZERO     WN0585           Day 8 Productio
     C                     Z-ADD*ZERO     WN0586           Day 9 Productio
     C                     Z-ADD*ZERO     WN0587           Day 10 Producti
     C                     Z-ADD*ZERO     WN0588           Day 11 Producti
     C                     Z-ADD*ZERO     WN0589           Day 12 Producti
     C                     Z-ADD*ZERO     WN0590           Day 13 Producti
     C                     Z-ADD*ZERO     WN0591           Day 14 Producti
     C                     Z-ADD*ZERO     WN0592           Day 15 Producti
     C                     Z-ADD*ZERO     WN0593           Day 16 Producti
     C                     Z-ADD*ZERO     WN0594           Day 17 Producti
     C                     Z-ADD*ZERO     WN0595           Day 18 Producti
     C                     Z-ADD*ZERO     WN0596           Day 19 Producti
     C                     Z-ADD*ZERO     WN0597           Day 20 Producti
     C                     Z-ADD*ZERO     WN0598           Day 21 Producti
     C                     Z-ADD*ZERO     WN0599           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0600           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0601           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0602           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0603           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0604           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0605           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0606           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0607           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0608           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0609           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0610           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0611           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0612           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0613           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0614           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0615           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0616           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0617           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0618           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0619           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0620           Day 1 Adjustmen
     C                     Z-ADD*ZERO     WN0621           Day 2 Adjustmen
     C                     Z-ADD*ZERO     WN0622           Day 3 Adjustmen
     C                     Z-ADD*ZERO     WN0623           Day 4 Adjustmen
     C                     Z-ADD*ZERO     WN0624           Day 5 Adjustmen
     C                     Z-ADD*ZERO     WN0625           Day 6 Adjustmen
     C                     Z-ADD*ZERO     WN0626           Day 7 Adjustmen
     C                     Z-ADD*ZERO     WN0627           Day 8 Adjustmen
     C                     Z-ADD*ZERO     WN0628           Day 9 Adjustmen
     C                     Z-ADD*ZERO     WN0629           Day 10 Adjustme
     C                     Z-ADD*ZERO     WN0630           Day 11 Adjustme
     C                     Z-ADD*ZERO     WN0631           Day 12 Adjustme
     C                     Z-ADD*ZERO     WN0632           Day 13 Adjustme
     C                     Z-ADD*ZERO     WN0633           Day 14 Adjustme
     C                     Z-ADD*ZERO     WN0634           Day 15 Adjustme
     C                     Z-ADD*ZERO     WN0635           Day 16 Adjustme
     C                     Z-ADD*ZERO     WN0636           Day 17 Adjustme
     C                     Z-ADD*ZERO     WN0637           Day 18 Adjustme
     C                     Z-ADD*ZERO     WN0638           Day 19 Adjustme
     C                     Z-ADD*ZERO     WN0639           Day 20 Adjustme
     C                     Z-ADD*ZERO     WN0640           Day 21 Adjustme
     C                     Z-ADD*ZERO     WN0205           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0206           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0207           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0208           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0209           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0210           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0211           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0212           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0213           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0214           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0215           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0216           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0217           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0218           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0219           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0220           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0221           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0222           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0223           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0224           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0225           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0641           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0642           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0643           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0644           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0645           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0646           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0647           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0648           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0649           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0650           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0651           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0652           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0653           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0654           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0655           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0656           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0657           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0658           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0659           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0660           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0661           Day 21 Sched Sh
      *
     C                     Z-ADD*ZERO     WN0662  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0663  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0664  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0665  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0666  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0667  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0668  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0669  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0670  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0671  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0672  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0673  92       PS Weight Sched
      *
      * Rtv PA In/Sh SD-6     IF
      * Retrieve Inventory and Scheduled Shipments
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0241           Company Number
     C                     MOVEL'S'       WL0242    P      Production Type
     C                     Z-ADD##JDT     WL0243           Production Date
     C                     Z-ADD#1HGCD    WL0244           Item Code
     C                     MOVELWDAJCD    WL0245    P      Warehouse Code
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0246    WN0662           PS Weight Inv O
     C                     Z-ADDWL0247    WN0663           PS Pieces Inv O
     C                     Z-ADDWL0248    WN0664           PS Weight Inv A
     C                     Z-ADDWL0249    WN0665           PS Pieces Inv A
     C                     Z-ADDWL0250    WN0666           PS Weight Ship
     C                     Z-ADDWL0251    WN0667           PS Pieces Ship
     C                     Z-ADDWL0252    WN0668           PS Weight Prod
     C                     Z-ADDWL0253    WN0669           PS Pieces Prod
     C                     Z-ADDWL0254    WN0670           PS Weight Inv A
     C                     Z-ADDWL0255    WN0671           PS Pieces Inv A
     C                     Z-ADDWL0256    WN0672           PS Weight Order
     C                     Z-ADDWL0257    WN0673           PS Weight Sched
      * Inventory / Sales if Chilling Time > 0
      * CASE: Primary
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #RAIWG    IFGT *ZERO                      *IF
     C           P6PCCT    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Unit Weight or Pieces
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0674 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0675 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0674    WL0262           Weight Schedule
     C                     Z-ADDWN0675    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0674           Weight Schedule
     C                     Z-ADDWL0263    WN0675           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0599           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0599           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0674    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0641           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0620    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0620           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D1IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0599           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0599           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0599    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0599           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0675    WN0641           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0620    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0620           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0620    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0599    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0676 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0677 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0676    WL0262           Weight Schedule
     C                     Z-ADDWN0677    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0676           Weight Schedule
     C                     Z-ADDWL0263    WN0677           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0600           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0600           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0676    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0642           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0621    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0621           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D2IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0600           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0600           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0600    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0600           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0677    WN0642           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0621    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0621           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0621    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0600    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0678 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0679 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0678    WL0262           Weight Schedule
     C                     Z-ADDWN0679    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0678           Weight Schedule
     C                     Z-ADDWL0263    WN0679           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0601           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0601           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0678    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0643           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0622    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0622           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D3IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0601           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0601           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0601    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0601           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0679    WN0643           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0622    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0622           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0622    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0601    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0680 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0681 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0680    WL0262           Weight Schedule
     C                     Z-ADDWN0681    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0680           Weight Schedule
     C                     Z-ADDWL0263    WN0681           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0602           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0602           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0680    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0644           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0623    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0623           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D4IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0602           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0602           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0602    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0602           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0681    WN0644           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0623    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0623           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0623    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0602    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0682 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0683 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0682    WL0262           Weight Schedule
     C                     Z-ADDWN0683    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0682           Weight Schedule
     C                     Z-ADDWL0263    WN0683           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0603           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0603           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0682    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0645           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0624    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0624           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D5IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0603           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0603           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0603    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0603           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0683    WN0645           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0624    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0624           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0624    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0603    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0684 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0685 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0684    WL0262           Weight Schedule
     C                     Z-ADDWN0685    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0684           Weight Schedule
     C                     Z-ADDWL0263    WN0685           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0604           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0604           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0684    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0646           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0625    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0625           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D6IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0604           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0604           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0604    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0604           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0685    WN0646           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0625    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0625           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0625    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0604    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0686 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0687 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Unt Wgt IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0686    WL0262           Weight Schedule
     C                     Z-ADDWN0687    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0686           Weight Schedule
     C                     Z-ADDWL0263    WN0687           Quantity Schedu
     C                     END                             *FI
      * Calculate Inventory/Reserved/Shipments/Ship Cut Adjustment/Sales
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ *BLANK                     *IF
     C           P6PCCT    OREQ 'N'
     C           #RAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Moved calc for non-piece count here.
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0662    ADD  WN0664    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Fresh Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0605           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Reserved
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3 + x4) / x2)
      * x3    : PAR.PS Weight Prod Allocated
      * +     : PGM.*Synon (15,0) work field
      * x4    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0668    ADD  WN0670    W0WJ01           *Synon (15,0) w
     C           W0WJ01    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0605           Quantity Sales
     C                     END                             *FI
      * Sched Shipments (ie.SALE)
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0686    DIV  #RAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0647           Quantity Sched
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WN0666    DIV  #RAIWG    W0WJ01    H      *Synon (15,0) w
     C           WN0626    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0626           Quantity Adjust
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P6PCCT    IFEQ 'Y'                        *IF
     C           P6BDNB    IFGT *ZERO                      *IF
     C           P6BJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * 06/24/09 FP1054:  Calcualte Inventory by Pieces
      * Inventory On-Hand
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / (x2 * x4))
      * x1    : PAR.PS Pieces Inv On-Hand
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Inv Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x4    : PAR.Bags Per Unit
     C           WN0663    ADD  WN0665    W0WJ01           *Synon (15,0) w
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           W0WJ01    DIV  W0WD02    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    P5D7IN           Quantity Invent
      * Reserved (Sales)
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE ( x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0605           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Inv Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Unit Weight
     C           WN0670    DIV  #RAIWG    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0605           Quantity Sales
      * Inv Alloc + Prod Alloc
      * PAR.Quantity Sales USR =
      *    *COMPUTE (x4 + (x3 / (x2 * x1)))
      * x4    : PAR.Quantity Sales USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Allocated
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x1    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0669    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0605    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0605           Quantity Sales
     C                     END                             *FI
     C                     Z-ADDWN0687    WN0647           Quantity Sched
      * Comp:Ship Cut Adj(No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / (x4 * x5)))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.Bags Per Unit
     C           P6BDNB    MULT P6BJNB    W0WD02           *Synon (17,7) w
     C           WN0667    DIV  W0WD02    W0WJ01    H      *Synon (15,0) w
     C           WN0626    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0626           Quantity Adjust
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Quantity Avail
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0626    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0605    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CW4ST    IFEQ 'L'                        *IF
     C           #CLDSZ    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Quantity based on Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ JOB.*Job date
     C           P5H6DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0688 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0689 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0688    WL0262           Weight Schedule
     C                     Z-ADDWN0689    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0688           Weight Schedule
     C                     Z-ADDWL0263    WN0689           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0688    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0641           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D1IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0599           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0599           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0620    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0620           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D1IN    ADD  WN0620    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0599    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ JOB.*Job date
     C           P5H7DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0690 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0691 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0690    WL0262           Weight Schedule
     C                     Z-ADDWN0691    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0690           Weight Schedule
     C                     Z-ADDWL0263    WN0691           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0690    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0642           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D2IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0600           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0600           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0621    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0621           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D2IN    ADD  WN0621    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0600    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0206           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ JOB.*Job date
     C           P5H8DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0692 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0693 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0692    WL0262           Weight Schedule
     C                     Z-ADDWN0693    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0692           Weight Schedule
     C                     Z-ADDWL0263    WN0693           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0692    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0643           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D3IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0601           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0601           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0622    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0622           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D3IN    ADD  WN0622    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0601    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0207           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ JOB.*Job date
     C           P5H9DT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0694 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0695 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0694    WL0262           Weight Schedule
     C                     Z-ADDWN0695    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0694           Weight Schedule
     C                     Z-ADDWL0263    WN0695           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0694    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0644           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D4IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0602           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0602           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0623    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0623           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D4IN    ADD  WN0623    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0602    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0208           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ JOB.*Job date
     C           P5IADT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0696 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0697 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0696    WL0262           Weight Schedule
     C                     Z-ADDWN0697    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0696           Weight Schedule
     C                     Z-ADDWL0263    WN0697           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0696    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0645           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D5IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0603           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0603           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0624    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0624           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D5IN    ADD  WN0624    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0603    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0209           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ JOB.*Job date
     C           P5IBDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0698 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0699 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0698    WL0262           Weight Schedule
     C                     Z-ADDWN0699    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0698           Weight Schedule
     C                     Z-ADDWL0263    WN0699           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0698    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0646           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D6IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0604           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0604           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0625    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0625           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D6IN    ADD  WN0625    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0604    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0210           Quantity Availa
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ JOB.*Job date
     C           P5INDT    IFEQ ##JDT                      *IF
      *
     C                     Z-ADD*ZERO     WN0700 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0701 112       Quantity Schedu
      *
      * Clc Inv/Sls w/Load Sz IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Avail Dsp/Prt Type USR is Display Detail
      *   |- c2    : PAR.Avail Dsp/Prt Type USR is Print Detail
      *   '-
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'L'                        *OR
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0258           Company Number
     C                     Z-ADD#1HGCD    WL0259           Item Code
     C                     MOVELWDAJCD    WL0260    P      Warehouse Code
     C                     Z-ADD##JDT     WL0261           Scheduled Ship
     C                     Z-ADDWN0700    WL0262           Weight Schedule
     C                     Z-ADDWN0701    WL0263           Quantity Schedu
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0262    WN0700           Weight Schedule
     C                     Z-ADDWL0263    WN0701           Quantity Schedu
      * Scheduled Shipments
      * PAR.Quantity Sched Ship USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0700    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0647           Quantity Sched
     C                     END                             *FI
      * Inventory
      * PAR.Quantity Inventory USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv On-Hand
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Inv Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0662    ADD  WN0664    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    P5D7IN           Quantity Invent
      * Sales ----->  RESERVED
      * CASE: PAR.Chilling Time is GT Zero
     C           #RCHTM    IFGT *ZERO                      *IF
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x3) / x2)
      * x3    : PAR.PS Weight Inv Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0605           Quantity Sales
     C                     ELSE
      * CASE: *OTHERWISE
      * Sales
      * PAR.Quantity Sales USR =
      *    *COMPUTE ((x1 + x3) / x2)
      * x1    : PAR.PS Weight Inv Allocated
      * +     : PGM.*Synon (15,2) work field
      * x3    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.Load Size USR
     C           WN0670    ADD  WN0668    W0WA01           *Synon (15,2) w
     C           W0WA01    DIV  #CLDSZ    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0605           Quantity Sales
     C                     END                             *FI
      * Ship Cut Adj (No Dec)
      * PAR.Quantity Adjustment USR =
      *    *COMPUTE (x1 + (x2 / x4))
      * x1    : PAR.Quantity Adjustment USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Load Size USR
     C           WN0666    DIV  #CLDSZ    W0WJ01    H      *Synon (15,0) w
     C           WN0626    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0626           Quantity Adjust
      * Quantity Available
      * PAR.Quantity Available USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Quantity Adjustment USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity Sales USR
     C           P5D7IN    ADD  WN0626    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0605    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0211           Quantity Availa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Total Inventory
      * CASE: PAR.Avail Dsp/Prt Type USR is Display
     C           'T'       IFEQ 'D'                        *IF
     C           'T'       OREQ 'T'
      * Total Inventory
      * PAR.Day 8 Inventory USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.Day 7 Inventory USR
     C           P5D1IN    ADD  P5D2IN    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  P5D3IN    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P5D4IN    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P5D5IN    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P5D6IN    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P5D7IN    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P5GCNX           Day 8 Inventory
     C                     END                             *FI
      * Rtv PA Dtl SD-21 WHS  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0264           Company Number
     C                     Z-ADD#1HGCD    WL0265           Item Code
     C                     MOVELWDAJCD    WL0266    P      Warehouse Code
     C                     Z-ADDP5H6DT    WL0267           PS Available Sh
     C                     Z-ADDP5H6DT    WL0268           Avail Ship Date
     C                     Z-ADDP5H7DT    WL0269           Avail Ship Date
     C                     Z-ADDP5H8DT    WL0270           Avail Ship Date
     C                     Z-ADDP5H9DT    WL0271           Avail Ship Date
     C                     Z-ADDP5IADT    WL0272           Avail Ship Date
     C                     Z-ADDP5IBDT    WL0273           Avail Ship Date
     C                     Z-ADDP5INDT    WL0274           Avail Ship Date
     C                     Z-ADDP5IODT    WL0275           Avail Ship Date
     C                     Z-ADDP5IPDT    WL0276           Avail Ship Date
     C                     Z-ADDP5IQDT    WL0277           Avail Ship Date
     C                     Z-ADDP5IRDT    WL0278           Avail Ship Date
     C                     Z-ADDP5ISDT    WL0279           Avail Ship Date
     C                     Z-ADDP5ITDT    WL0280           Avail Ship Date
     C                     Z-ADDP5IUDT    WL0281           Avail Ship Date
     C                     Z-ADDP5IVDT    WL0282           Avail Ship Date
     C                     Z-ADDP5IWDT    WL0283           Avail Ship Date
     C                     Z-ADDP5IXDT    WL0284           Avail Ship Date
     C                     Z-ADDP5IYDT    WL0285           Avail Ship Date
     C                     Z-ADDP5IZDT    WL0286           Avail Ship Date
     C                     Z-ADDP5I0DT    WL0287           Avail Ship Date
     C                     Z-ADDP5I1DT    WL0288           Avail Ship Date
     C                     Z-ADDP5D1IN    WL0310           Day 1 Inventory
     C                     Z-ADDP5D2IN    WL0311           Day 2 Inventory
     C                     Z-ADDP5D3IN    WL0312           Day 3 Inventory
     C                     Z-ADDP5D4IN    WL0313           Day 4 Inventory
     C                     Z-ADDP5D5IN    WL0314           Day 5 Inventory
     C                     Z-ADDP5D6IN    WL0315           Day 6 Inventory
     C                     Z-ADDWN0578    WL0316           Day 1 Productio
     C                     Z-ADDWN0579    WL0317           Day 2 Productio
     C                     Z-ADDWN0580    WL0318           Day 3 Productio
     C                     Z-ADDWN0581    WL0319           Day 4 Productio
     C                     Z-ADDWN0582    WL0320           Day 5 Productio
     C                     Z-ADDWN0583    WL0321           Day 6 Productio
     C                     Z-ADDWN0584    WL0322           Day 7 Productio
     C                     Z-ADDWN0585    WL0323           Day 8 Productio
     C                     Z-ADDWN0586    WL0324           Day 9 Productio
     C                     Z-ADDWN0587    WL0325           Day 10 Producti
     C                     Z-ADDWN0588    WL0326           Day 11 Producti
     C                     Z-ADDWN0589    WL0327           Day 12 Producti
     C                     Z-ADDWN0590    WL0328           Day 13 Producti
     C                     Z-ADDWN0591    WL0329           Day 14 Producti
     C                     Z-ADDWN0592    WL0330           Day 15 Producti
     C                     Z-ADDWN0593    WL0331           Day 16 Producti
     C                     Z-ADDWN0594    WL0332           Day 17 Producti
     C                     Z-ADDWN0595    WL0333           Day 18 Producti
     C                     Z-ADDWN0596    WL0334           Day 19 Producti
     C                     Z-ADDWN0597    WL0335           Day 20 Producti
     C                     Z-ADDWN0598    WL0336           Day 21 Producti
     C                     Z-ADDWN0599    WL0337           Day 1 Sales USR
     C                     Z-ADDWN0600    WL0338           Day 2 Sales USR
     C                     Z-ADDWN0601    WL0339           Day 3 Sales USR
     C                     Z-ADDWN0602    WL0340           Day 4 Sales USR
     C                     Z-ADDWN0603    WL0341           Day 5 Sales USR
     C                     Z-ADDWN0604    WL0342           Day 6 Sales USR
     C                     Z-ADDWN0605    WL0343           Day 7 Sales USR
     C                     Z-ADDWN0606    WL0344           Day 8 Sales USR
     C                     Z-ADDWN0607    WL0345           Day 9 Sales USR
     C                     Z-ADDWN0608    WL0346           Day 10 Sales US
     C                     Z-ADDWN0609    WL0347           Day 11 Sales US
     C                     Z-ADDWN0610    WL0348           Day 12 Sales US
     C                     Z-ADDWN0611    WL0349           Day 13 Sales US
     C                     Z-ADDWN0612    WL0350           Day 14 Sales US
     C                     Z-ADDWN0613    WL0351           Day 15 Sales US
     C                     Z-ADDWN0614    WL0352           Day 16 Sales US
     C                     Z-ADDWN0615    WL0353           Day 17 Sales US
     C                     Z-ADDWN0616    WL0354           Day 18 Sales US
     C                     Z-ADDWN0617    WL0355           Day 19 Sales US
     C                     Z-ADDWN0618    WL0356           Day 20 Sales US
     C                     Z-ADDWN0619    WL0357           Day 21 Sales US
     C                     Z-ADDWN0620    WL0358           Day 1 Adjustmen
     C                     Z-ADDWN0621    WL0359           Day 2 Adjustmen
     C                     Z-ADDWN0622    WL0360           Day 3 Adjustmen
     C                     Z-ADDWN0623    WL0361           Day 4 Adjustmen
     C                     Z-ADDWN0624    WL0362           Day 5 Adjustmen
     C                     Z-ADDWN0625    WL0363           Day 6 Adjustmen
     C                     Z-ADDWN0626    WL0364           Day 7 Adjustmen
     C                     Z-ADDWN0627    WL0365           Day 8 Adjustmen
     C                     Z-ADDWN0628    WL0366           Day 9 Adjustmen
     C                     Z-ADDWN0629    WL0367           Day 10 Adjustme
     C                     Z-ADDWN0630    WL0368           Day 11 Adjustme
     C                     Z-ADDWN0631    WL0369           Day 12 Adjustme
     C                     Z-ADDWN0632    WL0370           Day 13 Adjustme
     C                     Z-ADDWN0633    WL0371           Day 14 Adjustme
     C                     Z-ADDWN0634    WL0372           Day 15 Adjustme
     C                     Z-ADDWN0635    WL0373           Day 16 Adjustme
     C                     Z-ADDWN0636    WL0374           Day 17 Adjustme
     C                     Z-ADDWN0637    WL0375           Day 18 Adjustme
     C                     Z-ADDWN0638    WL0376           Day 19 Adjustme
     C                     Z-ADDWN0639    WL0377           Day 20 Adjustme
     C                     Z-ADDWN0640    WL0378           Day 21 Adjustme
     C                     Z-ADDWN0205    WL0379           Day 1 Availabil
     C                     Z-ADDWN0206    WL0380           Day 2 Availabil
     C                     Z-ADDWN0207    WL0381           Day 3 Availabil
     C                     Z-ADDWN0208    WL0382           Day 4 Availabil
     C                     Z-ADDWN0209    WL0383           Day 5 Availabil
     C                     Z-ADDWN0210    WL0384           Day 6 Availabil
     C                     Z-ADDWN0211    WL0385           Day 7 Availabil
     C                     Z-ADDWN0212    WL0386           Day 8 Availabil
     C                     Z-ADDWN0213    WL0387           Day 9 Availabil
     C                     Z-ADDWN0214    WL0388           Day 10 Availabi
     C                     Z-ADDWN0215    WL0389           Day 11 Availabi
     C                     Z-ADDWN0216    WL0390           Day 12 Availabi
     C                     Z-ADDWN0217    WL0391           Day 13 Availabi
     C                     Z-ADDWN0218    WL0392           Day 14 Availabi
     C                     Z-ADDWN0219    WL0393           Day 15 Availabi
     C                     Z-ADDWN0220    WL0394           Day 16 Availabi
     C                     Z-ADDWN0221    WL0395           Day 17 Availabi
     C                     Z-ADDWN0222    WL0396           Day 18 Availabi
     C                     Z-ADDWN0223    WL0397           Day 19 Availabi
     C                     Z-ADDWN0224    WL0398           Day 20 Availabi
     C                     Z-ADDWN0225    WL0399           Day 21 Availabi
     C                     MOVEL#CW4ST    WL0400    P      Primary/Load St
     C                     Z-ADD#CLDSZ    WL0401           Load Size USR
     C                     Z-ADDWN0641    WL0402           Day 1 Sched Shi
     C                     Z-ADDWN0642    WL0403           Day 2 Sched Shi
     C                     Z-ADDWN0643    WL0404           Day 3 Sched Shi
     C                     Z-ADDWN0644    WL0405           Day 4 Sched Shi
     C                     Z-ADDWN0645    WL0406           Day 5 Sched Shi
     C                     Z-ADDWN0646    WL0407           Day 6 Sched Shi
     C                     Z-ADDWN0647    WL0408           Day 7 Sched Shi
     C                     Z-ADDWN0648    WL0409           Day 8 Sched Shi
     C                     Z-ADDWN0649    WL0410           Day 9 Sched Shi
     C                     Z-ADDWN0650    WL0411           Day 10 Sched Sh
     C                     Z-ADDWN0651    WL0412           Day 11 Sched Sh
     C                     Z-ADDWN0652    WL0413           Day 12 Sched Sh
     C                     Z-ADDWN0653    WL0414           Day 13 Sched Sh
     C                     Z-ADDWN0654    WL0415           Day 14 Sched Sh
     C                     Z-ADDWN0655    WL0416           Day 15 Sched Sh
     C                     Z-ADDWN0656    WL0417           Day 16 Sched Sh
     C                     Z-ADDWN0657    WL0418           Day 17 Sched Sh
     C                     Z-ADDWN0658    WL0419           Day 18 Sched Sh
     C                     Z-ADDWN0659    WL0420           Day 19 Sched Sh
     C                     Z-ADDWN0660    WL0421           Day 20 Sched Sh
     C                     Z-ADDWN0661    WL0422           Day 21 Sched Sh
     C                     MOVEL'T'       WL0423    P      Avail Dsp/Prt T
     C                     MOVEL#RADCD    WL0424    P      U/M - Primary
     C                     Z-ADD#RAIWG    WL0425           Unit Weight
     C                     Z-ADD#RCHTM    WL0426           Fresh Chilling
     C                     MOVELP6PCCT    WL0427    P      Piece Count Ite
     C                     Z-ADDP6BDNB    WL0428           Pieces Per Bag
     C                     Z-ADDP6BJNB    WL0429           Bags Per Unit
     C                     EXSR TJRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0289    WN0551           USR Day 1
     C                     Z-ADDWL0290    WN0552           USR Day 2
     C                     Z-ADDWL0291    WN0553           USR Day 3
     C                     Z-ADDWL0292    WN0554           USR Day 4
     C                     Z-ADDWL0293    WN0555           USR Day 5
     C                     Z-ADDWL0294    WN0556           USR Day 6
     C                     Z-ADDWL0295    WN0557           USR Day 7
     C                     Z-ADDWL0296    WN0558           USR Day 8
     C                     Z-ADDWL0297    WN0559           USR Day 9
     C                     Z-ADDWL0298    WN0560           USR Day 10
     C                     Z-ADDWL0299    WN0561           USR Day 11
     C                     Z-ADDWL0300    WN0562           USR Day 12
     C                     Z-ADDWL0301    WN0563           USR Day 13
     C                     Z-ADDWL0302    WN0564           USR Day 14
     C                     Z-ADDWL0303    WN0565           USR Day 15
     C                     Z-ADDWL0304    WN0566           USR Day 16
     C                     Z-ADDWL0305    WN0567           USR Day 17
     C                     Z-ADDWL0306    WN0568           USR Day 18
     C                     Z-ADDWL0307    WN0569           USR Day 19
     C                     Z-ADDWL0308    WN0570           USR Day 20
     C                     Z-ADDWL0309    WN0571           USR Day 21
     C                     Z-ADDWL0316    WN0578           Day 1 Productio
     C                     Z-ADDWL0317    WN0579           Day 2 Productio
     C                     Z-ADDWL0318    WN0580           Day 3 Productio
     C                     Z-ADDWL0319    WN0581           Day 4 Productio
     C                     Z-ADDWL0320    WN0582           Day 5 Productio
     C                     Z-ADDWL0321    WN0583           Day 6 Productio
     C                     Z-ADDWL0322    WN0584           Day 7 Productio
     C                     Z-ADDWL0323    WN0585           Day 8 Productio
     C                     Z-ADDWL0324    WN0586           Day 9 Productio
     C                     Z-ADDWL0325    WN0587           Day 10 Producti
     C                     Z-ADDWL0326    WN0588           Day 11 Producti
     C                     Z-ADDWL0327    WN0589           Day 12 Producti
     C                     Z-ADDWL0328    WN0590           Day 13 Producti
     C                     Z-ADDWL0329    WN0591           Day 14 Producti
     C                     Z-ADDWL0330    WN0592           Day 15 Producti
     C                     Z-ADDWL0331    WN0593           Day 16 Producti
     C                     Z-ADDWL0332    WN0594           Day 17 Producti
     C                     Z-ADDWL0333    WN0595           Day 18 Producti
     C                     Z-ADDWL0334    WN0596           Day 19 Producti
     C                     Z-ADDWL0335    WN0597           Day 20 Producti
     C                     Z-ADDWL0336    WN0598           Day 21 Producti
     C                     Z-ADDWL0337    WN0599           Day 1 Sales USR
     C                     Z-ADDWL0338    WN0600           Day 2 Sales USR
     C                     Z-ADDWL0339    WN0601           Day 3 Sales USR
     C                     Z-ADDWL0340    WN0602           Day 4 Sales USR
     C                     Z-ADDWL0341    WN0603           Day 5 Sales USR
     C                     Z-ADDWL0342    WN0604           Day 6 Sales USR
     C                     Z-ADDWL0343    WN0605           Day 7 Sales USR
     C                     Z-ADDWL0344    WN0606           Day 8 Sales USR
     C                     Z-ADDWL0345    WN0607           Day 9 Sales USR
     C                     Z-ADDWL0346    WN0608           Day 10 Sales US
     C                     Z-ADDWL0347    WN0609           Day 11 Sales US
     C                     Z-ADDWL0348    WN0610           Day 12 Sales US
     C                     Z-ADDWL0349    WN0611           Day 13 Sales US
     C                     Z-ADDWL0350    WN0612           Day 14 Sales US
     C                     Z-ADDWL0351    WN0613           Day 15 Sales US
     C                     Z-ADDWL0352    WN0614           Day 16 Sales US
     C                     Z-ADDWL0353    WN0615           Day 17 Sales US
     C                     Z-ADDWL0354    WN0616           Day 18 Sales US
     C                     Z-ADDWL0355    WN0617           Day 19 Sales US
     C                     Z-ADDWL0356    WN0618           Day 20 Sales US
     C                     Z-ADDWL0357    WN0619           Day 21 Sales US
     C                     Z-ADDWL0358    WN0620           Day 1 Adjustmen
     C                     Z-ADDWL0359    WN0621           Day 2 Adjustmen
     C                     Z-ADDWL0360    WN0622           Day 3 Adjustmen
     C                     Z-ADDWL0361    WN0623           Day 4 Adjustmen
     C                     Z-ADDWL0362    WN0624           Day 5 Adjustmen
     C                     Z-ADDWL0363    WN0625           Day 6 Adjustmen
     C                     Z-ADDWL0364    WN0626           Day 7 Adjustmen
     C                     Z-ADDWL0365    WN0627           Day 8 Adjustmen
     C                     Z-ADDWL0366    WN0628           Day 9 Adjustmen
     C                     Z-ADDWL0367    WN0629           Day 10 Adjustme
     C                     Z-ADDWL0368    WN0630           Day 11 Adjustme
     C                     Z-ADDWL0369    WN0631           Day 12 Adjustme
     C                     Z-ADDWL0370    WN0632           Day 13 Adjustme
     C                     Z-ADDWL0371    WN0633           Day 14 Adjustme
     C                     Z-ADDWL0372    WN0634           Day 15 Adjustme
     C                     Z-ADDWL0373    WN0635           Day 16 Adjustme
     C                     Z-ADDWL0374    WN0636           Day 17 Adjustme
     C                     Z-ADDWL0375    WN0637           Day 18 Adjustme
     C                     Z-ADDWL0376    WN0638           Day 19 Adjustme
     C                     Z-ADDWL0377    WN0639           Day 20 Adjustme
     C                     Z-ADDWL0378    WN0640           Day 21 Adjustme
     C                     Z-ADDWL0379    WN0205           Day 1 Availabil
     C                     Z-ADDWL0380    WN0206           Day 2 Availabil
     C                     Z-ADDWL0381    WN0207           Day 3 Availabil
     C                     Z-ADDWL0382    WN0208           Day 4 Availabil
     C                     Z-ADDWL0383    WN0209           Day 5 Availabil
     C                     Z-ADDWL0384    WN0210           Day 6 Availabil
     C                     Z-ADDWL0385    WN0211           Day 7 Availabil
     C                     Z-ADDWL0386    WN0212           Day 8 Availabil
     C                     Z-ADDWL0387    WN0213           Day 9 Availabil
     C                     Z-ADDWL0388    WN0214           Day 10 Availabi
     C                     Z-ADDWL0389    WN0215           Day 11 Availabi
     C                     Z-ADDWL0390    WN0216           Day 12 Availabi
     C                     Z-ADDWL0391    WN0217           Day 13 Availabi
     C                     Z-ADDWL0392    WN0218           Day 14 Availabi
     C                     Z-ADDWL0393    WN0219           Day 15 Availabi
     C                     Z-ADDWL0394    WN0220           Day 16 Availabi
     C                     Z-ADDWL0395    WN0221           Day 17 Availabi
     C                     Z-ADDWL0396    WN0222           Day 18 Availabi
     C                     Z-ADDWL0397    WN0223           Day 19 Availabi
     C                     Z-ADDWL0398    WN0224           Day 20 Availabi
     C                     Z-ADDWL0399    WN0225           Day 21 Availabi
     C                     Z-ADDWL0402    WN0641           Day 1 Sched Shi
     C                     Z-ADDWL0403    WN0642           Day 2 Sched Shi
     C                     Z-ADDWL0404    WN0643           Day 3 Sched Shi
     C                     Z-ADDWL0405    WN0644           Day 4 Sched Shi
     C                     Z-ADDWL0406    WN0645           Day 5 Sched Shi
     C                     Z-ADDWL0407    WN0646           Day 6 Sched Shi
     C                     Z-ADDWL0408    WN0647           Day 7 Sched Shi
     C                     Z-ADDWL0409    WN0648           Day 8 Sched Shi
     C                     Z-ADDWL0410    WN0649           Day 9 Sched Shi
     C                     Z-ADDWL0411    WN0650           Day 10 Sched Sh
     C                     Z-ADDWL0412    WN0651           Day 11 Sched Sh
     C                     Z-ADDWL0413    WN0652           Day 12 Sched Sh
     C                     Z-ADDWL0414    WN0653           Day 13 Sched Sh
     C                     Z-ADDWL0415    WN0654           Day 14 Sched Sh
     C                     Z-ADDWL0416    WN0655           Day 15 Sched Sh
     C                     Z-ADDWL0417    WN0656           Day 16 Sched Sh
     C                     Z-ADDWL0418    WN0657           Day 17 Sched Sh
     C                     Z-ADDWL0419    WN0658           Day 18 Sched Sh
     C                     Z-ADDWL0420    WN0659           Day 19 Sched Sh
     C                     Z-ADDWL0421    WN0660           Day 20 Sched Sh
     C                     Z-ADDWL0422    WN0661           Day 21 Sched Sh
     C                     MOVEL'Y'       YL0007           Status - Y or N
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Day 1 Availability USR < 0
      * CASE: PAR.Day 1 Availability USR is LT Zero
     C           WN0205    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0205           Day 1 Availabil
     C                     END                             *FI
      * Day 2 Availability USR < 0
      * CASE: PAR.Day 2 Availability USR is LT Zero
     C           WN0206    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0206           Day 2 Availabil
     C                     END                             *FI
      * Day 3 Availability USR < 0
      * CASE: PAR.Day 3 Availability USR is LT Zero
     C           WN0207    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0207           Day 3 Availabil
     C                     END                             *FI
      * Day 4 Availability USR < 0
      * CASE: PAR.Day 4 Availability USR is LT Zero
     C           WN0208    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0208           Day 4 Availabil
     C                     END                             *FI
      * Day 5 Availability USR < 0
      * CASE: PAR.Day 5 Availability USR is LT Zero
     C           WN0209    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0209           Day 5 Availabil
     C                     END                             *FI
      * Day 6 Availability USR < 0
      * CASE: PAR.Day 6 Availability USR is LT Zero
     C           WN0210    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0210           Day 6 Availabil
     C                     END                             *FI
      * Day 7 Availability USR < 0
      * CASE: PAR.Day 7 Availability USR is LT Zero
     C           WN0211    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0211           Day 7 Availabil
     C                     END                             *FI
      * Day 8 Availability USR < 0
      * CASE: PAR.Day 8 Availability USR is LT Zero
     C           WN0212    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0212           Day 8 Availabil
     C                     END                             *FI
      * Day 9 Availability USR < 0
      * CASE: PAR.Day 9 Availability USR is LT Zero
     C           WN0213    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0213           Day 9 Availabil
     C                     END                             *FI
      * Day 10 Availability USR < 0
      * CASE: PAR.Day 10 Availability USR is LT Zero
     C           WN0214    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0214           Day 10 Availabi
     C                     END                             *FI
      * Day 11 Availability USR < 0
      * CASE: PAR.Day 11 Availability USR is LT Zero
     C           WN0215    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0215           Day 11 Availabi
     C                     END                             *FI
      * Day 12 Availability USR < 0
      * CASE: PAR.Day 12 Availability USR is LT Zero
     C           WN0216    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0216           Day 12 Availabi
     C                     END                             *FI
      * Day 13 Availability USR < 0
      * CASE: PAR.Day 13 Availability USR is LT Zero
     C           WN0217    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0217           Day 13 Availabi
     C                     END                             *FI
      * Day 14 Availability USR < 0
      * CASE: PAR.Day 14 Availability USR is LT Zero
     C           WN0218    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0218           Day 14 Availabi
     C                     END                             *FI
      * Day 15 Availability USR < 0
      * CASE: PAR.Day 15 Availability USR is LT Zero
     C           WN0219    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0219           Day 15 Availabi
     C                     END                             *FI
      * Day 16 Availability USR < 0
      * CASE: PAR.Day 16 Availability USR is LT Zero
     C           WN0220    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0220           Day 16 Availabi
     C                     END                             *FI
      * Day 17 Availability USR < 0
      * CASE: PAR.Day 17 Availability USR is LT Zero
     C           WN0221    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0221           Day 17 Availabi
     C                     END                             *FI
      * Day 18 Availability USR < 0
      * CASE: PAR.Day 18 Availability USR is LT Zero
     C           WN0222    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0222           Day 18 Availabi
     C                     END                             *FI
      * Day 19 Availability USR < 0
      * CASE: PAR.Day 19 Availability USR is LT Zero
     C           WN0223    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0223           Day 19 Availabi
     C                     END                             *FI
      * Day 20 Availability USR < 0
      * CASE: PAR.Day 20 Availability USR is LT Zero
     C           WN0224    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0224           Day 20 Availabi
     C                     END                             *FI
      * Day 21 Availability USR < 0
      * CASE: PAR.Day 21 Availability USR is LT Zero
     C           WN0225    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0225           Day 21 Availabi
     C                     END                             *FI
      * Accumulate Availability
      * CASE: LCL.Status - Y or N is yes
     C           YL0007    IFEQ 'Y'                        *IF
     C                     ADD  WN0205    P5D1AV           Day 1 Avail Tot
     C                     ADD  WN0206    P5D2AV           Day 2 Avail Tot
     C                     ADD  WN0207    P5D3AV           Day 3 Avail Tot
     C                     ADD  WN0208    P5D4AV           Day 4 Avail Tot
     C                     ADD  WN0209    P5D5AV           Day 5 Avail Tot
     C                     ADD  WN0210    P5D6AV           Day 6 Avail Tot
     C                     ADD  WN0211    P5D7AV           Day 7 Avail Tot
     C                     ADD  WN0212    P5D8AV           Day 8 Avail Tot
     C                     ADD  WN0213    P5D9AV           Day 9 Avail Tot
     C                     ADD  WN0214    P5D1AB           Day 10 Avail To
     C                     ADD  WN0215    P5D2AB           Day 11 Avail To
     C                     ADD  WN0216    P5D3AB           Day 12 Avail To
     C                     ADD  WN0217    P5D4AB           Day 13 Avail To
     C                     ADD  WN0218    P5D5AB           Day 14 Avail To
     C                     ADD  WN0219    P5D6AB           Day 15 Avail To
     C                     ADD  WN0220    P5D7AB           Day 16 Avail To
     C                     ADD  WN0221    P5D8AB           Day 17 Avail To
     C                     ADD  WN0222    P5D9AB           Day 18 Avail To
     C                     ADD  WN0223    P5D1AL           Day 19 Avail To
     C                     ADD  WN0224    P5D2AL           Day 20 Avail To
     C                     ADD  WN0225    P5D3AL           Day 21 Avail To
     C                     END                             *FI
      * Cumulative Total
      * CASE: LCL.Status - Y or N is yes
     C           YL0007    IFEQ 'Y'                        *IF
     C                     Z-ADDWN0205    P5D1AQ           Day 1 ATS Qty U
     C           P5D1AQ    ADD  WN0206    P5D2AQ           Day 2 ATS Qty U
     C           P5D2AQ    ADD  WN0207    P5D3AQ           Day 3 ATS Qty U
     C           P5D3AQ    ADD  WN0208    P5D4AQ           Day 4 ATS Qty U
     C           P5D4AQ    ADD  WN0209    P5D5AQ           Day 5 ATS Qty U
     C           P5D5AQ    ADD  WN0210    P5D6AQ           Day 6 ATS Qty U
     C           P5D6AQ    ADD  WN0211    P5D7AQ           Day 7 ATS Qty U
     C           P5D7AQ    ADD  WN0212    P5D8AQ           Day 8 ATS Qty U
     C           P5D8AQ    ADD  WN0213    P5D9AQ           Day 9 ATS Qty U
     C           P5D9AQ    ADD  WN0214    P5D1AT           Day 10 ATS Qty
     C           P5D1AT    ADD  WN0215    P5D2AT           Day 11 ATS Qty
     C           P5D2AT    ADD  WN0216    P5D3AT           Day 12 ATS Qty
     C           P5D3AT    ADD  WN0217    P5D4AT           Day 13 ATS Qty
     C           P5D4AT    ADD  WN0218    P5D5AT           Day 14 ATS Qty
     C           P5D5AT    ADD  WN0219    P5D6AT           Day 15 ATS Qty
     C           P5D6AT    ADD  WN0220    P5D7AT           Day 16 ATS Qty
     C           P5D7AT    ADD  WN0221    P5D9AT           Day 17 ATS Qty
     C           P5D9AT    ADD  WN0222    P5D1AS           Day 18 ATS Qty
     C           P5D1AS    ADD  WN0223    P5D2AS           Day 19 ATS Qty
     C           P5D2AS    ADD  WN0224    P5D3AS           Day 20 ATS Qty
     C           P5D3AS    ADD  WN0225    P5D4AS           Day 21 ATS Qty
     C                     END                             *FI
     C                     MOVEL'N'       YL0007           Status - Y or N
     C                     READ @ADREOJ                  90*
     C                     ENDDO
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THRVGN    BEGSR
      *================================================================
      * Rtv PA In/Sh SD-6 WHS RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHAIC3    WQTH01           Company Number
     C           *LIKE     DEFN WHHGCD    WQTH02           Item Code
     C           *LIKE     DEFN WHAJCD    WQTH03           Warehouse Code
     C           *LIKE     DEFN WHELDT    WQTH04           Production Date
     C           *LIKE     DEFN WHV5ST    WQTH05           Production Type
      * Define keylist
     C           KRSTH     KLIST
     C                     KFLD           WQTH01           Company Number
     C                     KFLD           WQTH02           Item Code
     C                     KFLD           WQTH03           Warehouse Code
     C                     KFLD           WQTH04           Production Date
     C                     KFLD           WQTH05           Production Type
      * Setup key
     C                     Z-ADDWL0241    WQTH01           Company Number
     C                     Z-ADDWL0244    WQTH02           Item Code
     C                     MOVELWL0245    WQTH03           Warehouse Code
     C                     Z-ADDWL0243    WQTH04           Production Date
     C                     MOVELWL0242    WQTH05           Production Type
      * Establish starting position
     C           KRSTH     SETLL@I8CPXP                    *
     C           KRSTH     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0246           PS Weight Inv O
     C                     Z-ADD*ZERO     WL0247           PS Pieces Inv O
     C                     Z-ADD*ZERO     WL0248           PS Weight Inv A
     C                     Z-ADD*ZERO     WL0249           PS Pieces Inv A
     C                     Z-ADD*ZERO     WL0250           PS Weight Ship
     C                     Z-ADD*ZERO     WL0251           PS Pieces Ship
     C                     Z-ADD*ZERO     WL0252           PS Weight Prod
     C                     Z-ADD*ZERO     WL0253           PS Pieces Prod
     C                     Z-ADD*ZERO     WL0254           PS Weight Inv A
     C                     Z-ADD*ZERO     WL0255           PS Pieces Inv A
     C                     Z-ADD*ZERO     WL0256           PS Weight Order
     C                     Z-ADD*ZERO     WL0257           PS Weight Sched
     C                     GOTO THEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWHWTIN    WL0246           PS Weight Inv O
     C                     Z-ADDWHD5NB    WL0247           PS Pieces Inv O
     C                     Z-ADDWHEZWG    WL0248           PS Weight Inv A
     C                     Z-ADDWHCCNB    WL0249           PS Pieces Inv A
     C                     Z-ADDWHE0WG    WL0250           PS Weight Ship
     C                     Z-ADDWHD6NB    WL0251           PS Pieces Ship
     C                     Z-ADDWHOAWT    WL0252           PS Weight Prod
     C                     Z-ADDWHCDNB    WL0253           PS Pieces Prod
     C                     Z-ADDWHUNW2    WL0254           PS Weight Inv A
     C                     Z-ADDWHCENB    WL0255           PS Pieces Inv A
     C                     Z-ADDWHDVWG    WL0256           PS Weight Order
     C                     Z-ADDWHSHWT    WL0257           PS Weight Sched
     C           KRSTH     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TIRVGN    BEGSR
      *================================================================
      * Rtv Sch Shps Cur Dte  RT - PD Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0262           Weight Schedule
     C                     Z-ADD*ZERO     WL0263           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQTI01           Company Number
     C           *LIKE     DEFN WIHGCD    WQTI02           Item Code
     C           *LIKE     DEFN WIAJCD    WQTI03           Warehouse Code
      * Define keylist
     C           KPSTI     KLIST
     C                     KFLD           WQTI01           Company Number
     C                     KFLD           WQTI02           Item Code
     C                     KFLD           WQTI03           Warehouse Code
     C                     KFLD           WIAODT           Scheduled Ship
      * Define keylist
     C           KRSTI     KLIST
     C                     KFLD           WQTI01           Company Number
     C                     KFLD           WQTI02           Item Code
     C                     KFLD           WQTI03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0258    WQTI01           Company Number
     C                     Z-ADDWL0259    WQTI02           Item Code
     C                     MOVELWL0260    WQTI03           Warehouse Code
     C                     Z-ADDWL0261    WIAODT           Scheduled Ship
      * Establish starting position
     C           KPSTI     SETLL@BGWKKG                    *
     C           KRSTI     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0169           Company Number
     C                     Z-ADDWIC4NB    WL0170           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    WUGWST    P      Header Status
     C                     MOVELWL0172    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  WIAUWG    WL0262           Weight Schedule
     C                     ADD  WICCQT    WL0263           Quantity Schedu
     C                     END                             *FI
     C           KRSTI     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJRVGN    BEGSR
      *================================================================
      * Rtv PA Dtl SD-21 WHS  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0377  1        Status Flag 1
     C                     MOVEL*BLANK    WN0378  1        Status Flag 2
     C                     MOVEL*BLANK    WN0379  1        Status Flag 3
     C                     MOVEL*BLANK    WN0380  1        Status Flag 4
     C                     MOVEL*BLANK    WN0381  1        Status Flag 5
     C                     MOVEL*BLANK    WN0382  1        Status Flag 6
     C                     MOVEL*BLANK    WN0383  1        Status Flag 7
     C                     MOVEL*BLANK    WN0384  1        Status Flag 8
     C                     MOVEL*BLANK    WN0385  1        Status Flag 9
     C                     MOVEL*BLANK    WN0386  1        Status Flag 10
     C                     MOVEL*BLANK    WN0387  1        Status Flag 11
     C                     MOVEL*BLANK    WN0388  1        Status Flag 12
     C                     MOVEL*BLANK    WN0389  1        Status Flag 13
     C                     MOVEL*BLANK    WN0390  1        Status Flag 14
     C                     MOVEL*BLANK    WN0391  1        Status Flag 15
     C                     MOVEL*BLANK    WN0392  1        Status Flag 16
     C                     MOVEL*BLANK    WN0393  1        Status Flag 17
     C                     MOVEL*BLANK    WN0394  1        Status Flag 18
     C                     MOVEL*BLANK    WN0395  1        Status Flag 19
     C                     MOVEL*BLANK    WN0396  1        Status Flag 20
     C                     MOVEL*BLANK    WN0397  1        Status Flag 21
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * fp1054 4/28/09 include whse txfr in PROD calc
     C                     MOVEL'N'       WN0377           Status Flag 1
     C                     MOVEL'N'       WN0378           Status Flag 2
     C                     MOVEL'N'       WN0379           Status Flag 3
     C                     MOVEL'N'       WN0380           Status Flag 4
     C                     MOVEL'N'       WN0381           Status Flag 5
     C                     MOVEL'N'       WN0382           Status Flag 6
     C                     MOVEL'N'       WN0383           Status Flag 7
     C                     MOVEL'N'       WN0384           Status Flag 8
     C                     MOVEL'N'       WN0385           Status Flag 9
     C                     MOVEL'N'       WN0386           Status Flag 10
     C                     MOVEL'N'       WN0387           Status Flag 11
     C                     MOVEL'N'       WN0388           Status Flag 12
     C                     MOVEL'N'       WN0389           Status Flag 13
     C                     MOVEL'N'       WN0390           Status Flag 14
     C                     MOVEL'N'       WN0391           Status Flag 15
     C                     MOVEL'N'       WN0392           Status Flag 16
     C                     MOVEL'N'       WN0393           Status Flag 17
     C                     MOVEL'N'       WN0394           Status Flag 18
     C                     MOVEL'N'       WN0395           Status Flag 19
     C                     MOVEL'N'       WN0396           Status Flag 20
     C                     MOVEL'N'       WN0397           Status Flag 21
      * Declare restrictor key work fields
     C           *LIKE     DEFN I8AIC3    WQTJ01           Company Number
     C           *LIKE     DEFN I8HGCD    WQTJ02           Item Code
     C           *LIKE     DEFN I8AJCD    WQTJ03           Warehouse Code
      * Define keylist
     C           KPSTJ     KLIST
     C                     KFLD           WQTJ01           Company Number
     C                     KFLD           WQTJ02           Item Code
     C                     KFLD           WQTJ03           Warehouse Code
     C                     KFLD           I8GPDT           PS Available Sh
      * Define keylist
     C           KRSTJ     KLIST
     C                     KFLD           WQTJ01           Company Number
     C                     KFLD           WQTJ02           Item Code
     C                     KFLD           WQTJ03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0264    WQTJ01           Company Number
     C                     Z-ADDWL0265    WQTJ02           Item Code
     C                     MOVELWL0266    WQTJ03           Warehouse Code
     C                     Z-ADDWL0267    I8GPDT           PS Available Sh
      * Establish starting position
     C           KPSTJ     SETLL@I8CPDZ                    *
     C           KRSTJ     READE@I8CPDZ                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Quit:  Available Ship Date > Day 21
      * CASE: DB1.PS Available Ship Date GT PAR.Avail Ship Date 21 USR
     C           I8GPDT    IFGT WL0288                     *IF
      *
     C                     MOVEL*BLANK    WN0398  1        Ord/Sch Sts USR
      *
      * Rtv PA Ship Only-21  IF
     C                     MOVEL'S'       WN0398           Ord/Sch Sts USR
      * day 1
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 1 USR is Entered
      *   |- c2    : PAR.Status Flag 1  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0268    IFNE *ZERO                      *IF
     C           WN0377    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0268    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 1
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0402           Day 1 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0402           Day 1 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0402           Day 1 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 2
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 2 USR is Entered
      *   |- c2    : PAR.Status Flag 2  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0269    IFNE *ZERO                      *IF
     C           WN0378    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0269    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 2
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0403           Day 2 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0403           Day 2 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0403           Day 2 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 3
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 3 USR is Entered
      *   |- c2    : PAR.Status Flag 3  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0270    IFNE *ZERO                      *IF
     C           WN0379    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0270    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 3
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0404           Day 3 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0404           Day 3 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0404           Day 3 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 4
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 4 USR is Entered
      *   |- c2    : PAR.Status Flag 4  Y/N is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0271    IFNE *ZERO                      *IF
     C           WN0380    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0271    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 4
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0405           Day 4 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0405           Day 4 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0405           Day 4 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 5
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 5 USR is Entered
      *   |- c2    : PAR.Status Flag 5  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0272    IFNE *ZERO                      *IF
     C           WN0381    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0272    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 5
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0406           Day 5 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0406           Day 5 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0406           Day 5 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 6 USR is Entered
      *   |- c2    : PAR.Status Flag 6  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0273    IFNE *ZERO                      *IF
     C           WN0382    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0273    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 6
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0407           Day 6 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0407           Day 6 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0407           Day 6 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 7
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 7 USR is Entered
      *   |- c2    : PAR.Status Flag 7  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0274    IFNE *ZERO                      *IF
     C           WN0383    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0274    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 7
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0408           Day 7 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0408           Day 7 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0408           Day 7 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 8
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 8 USR is Entered
      *   |- c2    : PAR.Status Flag 8  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0275    IFNE *ZERO                      *IF
     C           WN0384    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0275    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 8
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0409           Day 8 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0409           Day 8 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0409           Day 8 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 9
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 9 USR is Entered
      *   |- c2    : PAR.Status Flag 9  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0276    IFNE *ZERO                      *IF
     C           WN0385    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0276    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 9
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0410           Day 9 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0410           Day 9 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0410           Day 9 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 10
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 10 USR is Entered
      *   |- c2    : PAR.Status Flag 10 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0277    IFNE *ZERO                      *IF
     C           WN0386    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0277    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 10
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0411           Day 10 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0411           Day 10 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0411           Day 10 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 11
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 11 USR is Entered
      *   |- c2    : PAR.Status Flag 11 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0278    IFNE *ZERO                      *IF
     C           WN0387    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0278    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 11
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0412           Day 11 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0412           Day 11 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0412           Day 11 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 12
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 12 USR is Entered
      *   |- c2    : PAR.Status Flag 12 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0279    IFNE *ZERO                      *IF
     C           WN0388    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0279    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 12
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0413           Day 12 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0413           Day 12 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0413           Day 12 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 13
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 13 USR is Entered
      *   |- c2    : PAR.Status Flag 13 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0280    IFNE *ZERO                      *IF
     C           WN0389    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0280    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 13
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0414           Day 13 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0414           Day 13 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0414           Day 13 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 14
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 14 USR is Entered
      *   |- c2    : PAR.Status Flag 14 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0281    IFNE *ZERO                      *IF
     C           WN0390    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0281    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 14
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0415           Day 14 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0415           Day 14 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0415           Day 14 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 15
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 15 USR is Entered
      *   |- c2    : PAR.Status Flag 15 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFNE *ZERO                      *IF
     C           WN0391    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0282    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 15
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0416           Day 15 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0416           Day 15 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0416           Day 15 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 16
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 16 USR is Entered
      *   |- c2    : PAR.Status Flag 16 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFNE *ZERO                      *IF
     C           WN0392    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0283    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 16
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0417           Day 16 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0417           Day 16 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0417           Day 16 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 17
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 17 USR is Entered
      *   |- c2    : PAR.Status Flag 17 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0284    IFNE *ZERO                      *IF
     C           WN0393    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0284    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 17
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0418           Day 17 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0418           Day 17 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0418           Day 17 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 18
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 18 USR is Entered
      *   |- c2    : PAR.Status Flag 18 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0285    IFNE *ZERO                      *IF
     C           WN0394    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0285    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 18
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0419           Day 18 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0419           Day 18 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0419           Day 18 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 19
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 19 USR is Entered
      *   |- c2    : PAR.Status Flag 19 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0286    IFNE *ZERO                      *IF
     C           WN0395    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0286    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 19
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0420           Day 19 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0420           Day 19 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0420           Day 19 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 20
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 20 USR is Entered
      *   |- c2    : PAR.Status Flag 20 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0287    IFNE *ZERO                      *IF
     C           WN0396    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0287    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 20
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0421           Day 20 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0421           Day 20 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0421           Day 20 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 21
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 21 USR is Entered
      *   |- c2    : PAR.Status Flag 21 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0288    IFNE *ZERO                      *IF
     C           WN0397    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0288    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0398    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 21
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0422           Day 21 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0422           Day 21 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0422           Day 21 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO TJEXIT                     *QUIT
     C                     END                             *FI
      * CASE: DB1.PS Available Ship Date GE JOB.*Job date
     C           I8GPDT    IFGE ##JDT                      *IF
      * Calculate Availability
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calcualte PA w/Unit Weight
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PS Available Ship Date
     C           WL0268    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0268    WQ0139  70       Avail Ship Date
     C           WL0289    PARM *ZERO     WQ0140  70       Production Date
     C                     PARM WL0310    WQ0141  61       Quantity Invent
     C           WL0316    PARM WL0316    WQ0142  61       Quantity Produc
     C           WL0337    PARM WL0337    WQ0143  61       Quantity Sales
     C           WL0358    PARM WL0358    WQ0144  61       Quantity Adjust
     C           WL0379    PARM WL0379    WQ0145  61       Quantity Availa
     C           WL0402    PARM WL0402    WQ0146  61       Quantity Sched
     C                     PARM I8AIC3    WQ0147  30       Company Number
     C                     PARM I8V5ST    WQ0148  1        Production Type
     C                     PARM I8ELDT    WQ0149  70       Production Date
     C                     PARM I8HGCD    WQ0150  70       Item Code
     C                     PARM I8AJCD    WQ0151  3        Warehouse Code
     C                     PARM I8DXWG    WQ0152  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0153  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0154  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0155  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0156  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0157  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0158  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0159  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0160  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0161  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0162  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0163 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0164  92       PS Weight Order
     C                     PARM I8QTAS    WQ0165  92       PS Weight Sched
     C                     PARM WL0424    WQ0166  2        U/M - Primary
     C                     PARM WL0425    WQ0167 112       Unit Weight
     C                     PARM WL0426    WQ0168  52       Fresh Chilling
     C                     PARM WL0427    WQ0169  1        Piece Count Ite
     C                     PARM WL0428    WQ0170  70       Pieces Per Bag
     C                     PARM WL0429    WQ0171  70       Bags Per Unit
     C                     PARM WL0423    WQ0172  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0377           Status Flag 1
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PS Available Ship Date
     C           WL0269    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0269    WQ0173  70       Avail Ship Date
     C           WL0290    PARM *ZERO     WQ0174  70       Production Date
     C                     PARM WL0311    WQ0175  61       Quantity Invent
     C           WL0317    PARM WL0317    WQ0176  61       Quantity Produc
     C           WL0338    PARM WL0338    WQ0177  61       Quantity Sales
     C           WL0359    PARM WL0359    WQ0178  61       Quantity Adjust
     C           WL0380    PARM WL0380    WQ0179  61       Quantity Availa
     C           WL0403    PARM WL0403    WQ0180  61       Quantity Sched
     C                     PARM I8AIC3    WQ0181  30       Company Number
     C                     PARM I8V5ST    WQ0182  1        Production Type
     C                     PARM I8ELDT    WQ0183  70       Production Date
     C                     PARM I8HGCD    WQ0184  70       Item Code
     C                     PARM I8AJCD    WQ0185  3        Warehouse Code
     C                     PARM I8DXWG    WQ0186  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0187  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0188  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0189  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0190  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0191  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0192  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0193  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0194  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0195  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0196  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0197 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0198  92       PS Weight Order
     C                     PARM I8QTAS    WQ0199  92       PS Weight Sched
     C                     PARM WL0424    WQ0200  2        U/M - Primary
     C                     PARM WL0425    WQ0201 112       Unit Weight
     C                     PARM WL0426    WQ0202  52       Fresh Chilling
     C                     PARM WL0427    WQ0203  1        Piece Count Ite
     C                     PARM WL0428    WQ0204  70       Pieces Per Bag
     C                     PARM WL0429    WQ0205  70       Bags Per Unit
     C                     PARM WL0423    WQ0206  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0378           Status Flag 2
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PS Available Ship Date
     C           WL0270    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0270    WQ0207  70       Avail Ship Date
     C           WL0291    PARM *ZERO     WQ0208  70       Production Date
     C                     PARM WL0312    WQ0209  61       Quantity Invent
     C           WL0318    PARM WL0318    WQ0210  61       Quantity Produc
     C           WL0339    PARM WL0339    WQ0211  61       Quantity Sales
     C           WL0360    PARM WL0360    WQ0212  61       Quantity Adjust
     C           WL0381    PARM WL0381    WQ0213  61       Quantity Availa
     C           WL0404    PARM WL0404    WQ0214  61       Quantity Sched
     C                     PARM I8AIC3    WQ0215  30       Company Number
     C                     PARM I8V5ST    WQ0216  1        Production Type
     C                     PARM I8ELDT    WQ0217  70       Production Date
     C                     PARM I8HGCD    WQ0218  70       Item Code
     C                     PARM I8AJCD    WQ0219  3        Warehouse Code
     C                     PARM I8DXWG    WQ0220  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0221  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0222  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0223  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0224  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0225  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0226  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0227  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0228  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0229  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0230  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0231 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0232  92       PS Weight Order
     C                     PARM I8QTAS    WQ0233  92       PS Weight Sched
     C                     PARM WL0424    WQ0234  2        U/M - Primary
     C                     PARM WL0425    WQ0235 112       Unit Weight
     C                     PARM WL0426    WQ0236  52       Fresh Chilling
     C                     PARM WL0427    WQ0237  1        Piece Count Ite
     C                     PARM WL0428    WQ0238  70       Pieces Per Bag
     C                     PARM WL0429    WQ0239  70       Bags Per Unit
     C                     PARM WL0423    WQ0240  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0379           Status Flag 3
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PS Available Ship Date
     C           WL0271    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0271    WQ0241  70       Avail Ship Date
     C           WL0292    PARM *ZERO     WQ0242  70       Production Date
     C                     PARM WL0313    WQ0243  61       Quantity Invent
     C           WL0319    PARM WL0319    WQ0244  61       Quantity Produc
     C           WL0340    PARM WL0340    WQ0245  61       Quantity Sales
     C           WL0361    PARM WL0361    WQ0246  61       Quantity Adjust
     C           WL0382    PARM WL0382    WQ0247  61       Quantity Availa
     C           WL0405    PARM WL0405    WQ0248  61       Quantity Sched
     C                     PARM I8AIC3    WQ0249  30       Company Number
     C                     PARM I8V5ST    WQ0250  1        Production Type
     C                     PARM I8ELDT    WQ0251  70       Production Date
     C                     PARM I8HGCD    WQ0252  70       Item Code
     C                     PARM I8AJCD    WQ0253  3        Warehouse Code
     C                     PARM I8DXWG    WQ0254  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0255  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0256  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0257  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0258  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0259  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0260  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0261  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0262  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0263  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0264  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0265 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0266  92       PS Weight Order
     C                     PARM I8QTAS    WQ0267  92       PS Weight Sched
     C                     PARM WL0424    WQ0268  2        U/M - Primary
     C                     PARM WL0425    WQ0269 112       Unit Weight
     C                     PARM WL0426    WQ0270  52       Fresh Chilling
     C                     PARM WL0427    WQ0271  1        Piece Count Ite
     C                     PARM WL0428    WQ0272  70       Pieces Per Bag
     C                     PARM WL0429    WQ0273  70       Bags Per Unit
     C                     PARM WL0423    WQ0274  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0380           Status Flag 4
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PS Available Ship Date
     C           WL0272    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0272    WQ0275  70       Avail Ship Date
     C           WL0293    PARM *ZERO     WQ0276  70       Production Date
     C                     PARM WL0314    WQ0277  61       Quantity Invent
     C           WL0320    PARM WL0320    WQ0278  61       Quantity Produc
     C           WL0341    PARM WL0341    WQ0279  61       Quantity Sales
     C           WL0362    PARM WL0362    WQ0280  61       Quantity Adjust
     C           WL0383    PARM WL0383    WQ0281  61       Quantity Availa
     C           WL0406    PARM WL0406    WQ0282  61       Quantity Sched
     C                     PARM I8AIC3    WQ0283  30       Company Number
     C                     PARM I8V5ST    WQ0284  1        Production Type
     C                     PARM I8ELDT    WQ0285  70       Production Date
     C                     PARM I8HGCD    WQ0286  70       Item Code
     C                     PARM I8AJCD    WQ0287  3        Warehouse Code
     C                     PARM I8DXWG    WQ0288  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0289  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0290  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0291  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0292  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0293  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0294  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0295  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0296  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0297  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0298  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0299 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0300  92       PS Weight Order
     C                     PARM I8QTAS    WQ0301  92       PS Weight Sched
     C                     PARM WL0424    WQ0302  2        U/M - Primary
     C                     PARM WL0425    WQ0303 112       Unit Weight
     C                     PARM WL0426    WQ0304  52       Fresh Chilling
     C                     PARM WL0427    WQ0305  1        Piece Count Ite
     C                     PARM WL0428    WQ0306  70       Pieces Per Bag
     C                     PARM WL0429    WQ0307  70       Bags Per Unit
     C                     PARM WL0423    WQ0308  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0381           Status Flag 5
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PS Available Ship Date
     C           WL0273    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0273    WQ0309  70       Avail Ship Date
     C           WL0294    PARM *ZERO     WQ0310  70       Production Date
     C                     PARM WL0315    WQ0311  61       Quantity Invent
     C           WL0321    PARM WL0321    WQ0312  61       Quantity Produc
     C           WL0342    PARM WL0342    WQ0313  61       Quantity Sales
     C           WL0363    PARM WL0363    WQ0314  61       Quantity Adjust
     C           WL0384    PARM WL0384    WQ0315  61       Quantity Availa
     C           WL0407    PARM WL0407    WQ0316  61       Quantity Sched
     C                     PARM I8AIC3    WQ0317  30       Company Number
     C                     PARM I8V5ST    WQ0318  1        Production Type
     C                     PARM I8ELDT    WQ0319  70       Production Date
     C                     PARM I8HGCD    WQ0320  70       Item Code
     C                     PARM I8AJCD    WQ0321  3        Warehouse Code
     C                     PARM I8DXWG    WQ0322  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0323  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0324  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0325  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0326  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0327  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0328  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0329  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0330  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0331  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0332  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0333 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0334  92       PS Weight Order
     C                     PARM I8QTAS    WQ0335  92       PS Weight Sched
     C                     PARM WL0424    WQ0336  2        U/M - Primary
     C                     PARM WL0425    WQ0337 112       Unit Weight
     C                     PARM WL0426    WQ0338  52       Fresh Chilling
     C                     PARM WL0427    WQ0339  1        Piece Count Ite
     C                     PARM WL0428    WQ0340  70       Pieces Per Bag
     C                     PARM WL0429    WQ0341  70       Bags Per Unit
     C                     PARM WL0423    WQ0342  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0382           Status Flag 6
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PS Available Ship Date
     C           WL0274    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0274    WQ0343  70       Avail Ship Date
     C           WL0295    PARM *ZERO     WQ0344  70       Production Date
     C                     PARM WUQINV    WQ0345  61       Quantity Invent
     C           WL0322    PARM WL0322    WQ0346  61       Quantity Produc
     C           WL0343    PARM WL0343    WQ0347  61       Quantity Sales
     C           WL0364    PARM WL0364    WQ0348  61       Quantity Adjust
     C           WL0385    PARM WL0385    WQ0349  61       Quantity Availa
     C           WL0408    PARM WL0408    WQ0350  61       Quantity Sched
     C                     PARM I8AIC3    WQ0351  30       Company Number
     C                     PARM I8V5ST    WQ0352  1        Production Type
     C                     PARM I8ELDT    WQ0353  70       Production Date
     C                     PARM I8HGCD    WQ0354  70       Item Code
     C                     PARM I8AJCD    WQ0355  3        Warehouse Code
     C                     PARM I8DXWG    WQ0356  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0357  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0358  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0359  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0360  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0361  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0362  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0363  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0364  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0365  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0366  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0367 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0368  92       PS Weight Order
     C                     PARM I8QTAS    WQ0369  92       PS Weight Sched
     C                     PARM WL0424    WQ0370  2        U/M - Primary
     C                     PARM WL0425    WQ0371 112       Unit Weight
     C                     PARM WL0426    WQ0372  52       Fresh Chilling
     C                     PARM WL0427    WQ0373  1        Piece Count Ite
     C                     PARM WL0428    WQ0374  70       Pieces Per Bag
     C                     PARM WL0429    WQ0375  70       Bags Per Unit
     C                     PARM WL0423    WQ0376  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0383           Status Flag 7
     C                     ELSE
      * CASE: PAR.Avail Ship Date 8 USR EQ DB1.PS Available Ship Date
     C           WL0275    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0275    WQ0377  70       Avail Ship Date
     C           WL0296    PARM *ZERO     WQ0378  70       Production Date
     C                     PARM WUQINV    WQ0379  61       Quantity Invent
     C           WL0323    PARM WL0323    WQ0380  61       Quantity Produc
     C           WL0344    PARM WL0344    WQ0381  61       Quantity Sales
     C           WL0365    PARM WL0365    WQ0382  61       Quantity Adjust
     C           WL0386    PARM WL0386    WQ0383  61       Quantity Availa
     C           WL0409    PARM WL0409    WQ0384  61       Quantity Sched
     C                     PARM I8AIC3    WQ0385  30       Company Number
     C                     PARM I8V5ST    WQ0386  1        Production Type
     C                     PARM I8ELDT    WQ0387  70       Production Date
     C                     PARM I8HGCD    WQ0388  70       Item Code
     C                     PARM I8AJCD    WQ0389  3        Warehouse Code
     C                     PARM I8DXWG    WQ0390  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0391  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0392  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0393  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0394  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0395  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0396  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0397  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0398  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0399  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0400  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0401 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0402  92       PS Weight Order
     C                     PARM I8QTAS    WQ0403  92       PS Weight Sched
     C                     PARM WL0424    WQ0404  2        U/M - Primary
     C                     PARM WL0425    WQ0405 112       Unit Weight
     C                     PARM WL0426    WQ0406  52       Fresh Chilling
     C                     PARM WL0427    WQ0407  1        Piece Count Ite
     C                     PARM WL0428    WQ0408  70       Pieces Per Bag
     C                     PARM WL0429    WQ0409  70       Bags Per Unit
     C                     PARM WL0423    WQ0410  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0384           Status Flag 8
     C                     ELSE
      * CASE: PAR.Avail Ship Date 9 USR EQ DB1.PS Available Ship Date
     C           WL0276    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0276    WQ0411  70       Avail Ship Date
     C           WL0297    PARM *ZERO     WQ0412  70       Production Date
     C                     PARM WUQINV    WQ0413  61       Quantity Invent
     C           WL0324    PARM WL0324    WQ0414  61       Quantity Produc
     C           WL0345    PARM WL0345    WQ0415  61       Quantity Sales
     C           WL0366    PARM WL0366    WQ0416  61       Quantity Adjust
     C           WL0387    PARM WL0387    WQ0417  61       Quantity Availa
     C           WL0410    PARM WL0410    WQ0418  61       Quantity Sched
     C                     PARM I8AIC3    WQ0419  30       Company Number
     C                     PARM I8V5ST    WQ0420  1        Production Type
     C                     PARM I8ELDT    WQ0421  70       Production Date
     C                     PARM I8HGCD    WQ0422  70       Item Code
     C                     PARM I8AJCD    WQ0423  3        Warehouse Code
     C                     PARM I8DXWG    WQ0424  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0425  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0426  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0427  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0428  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0429  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0430  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0431  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0432  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0433  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0434  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0435 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0436  92       PS Weight Order
     C                     PARM I8QTAS    WQ0437  92       PS Weight Sched
     C                     PARM WL0424    WQ0438  2        U/M - Primary
     C                     PARM WL0425    WQ0439 112       Unit Weight
     C                     PARM WL0426    WQ0440  52       Fresh Chilling
     C                     PARM WL0427    WQ0441  1        Piece Count Ite
     C                     PARM WL0428    WQ0442  70       Pieces Per Bag
     C                     PARM WL0429    WQ0443  70       Bags Per Unit
     C                     PARM WL0423    WQ0444  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0385           Status Flag 9
     C                     ELSE
      * CASE: PAR.Avail Ship Date 10 USR EQ DB1.PS Available Ship Date
     C           WL0277    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0277    WQ0445  70       Avail Ship Date
     C           WL0298    PARM *ZERO     WQ0446  70       Production Date
     C                     PARM WUQINV    WQ0447  61       Quantity Invent
     C           WL0325    PARM WL0325    WQ0448  61       Quantity Produc
     C           WL0346    PARM WL0346    WQ0449  61       Quantity Sales
     C           WL0367    PARM WL0367    WQ0450  61       Quantity Adjust
     C           WL0388    PARM WL0388    WQ0451  61       Quantity Availa
     C           WL0411    PARM WL0411    WQ0452  61       Quantity Sched
     C                     PARM I8AIC3    WQ0453  30       Company Number
     C                     PARM I8V5ST    WQ0454  1        Production Type
     C                     PARM I8ELDT    WQ0455  70       Production Date
     C                     PARM I8HGCD    WQ0456  70       Item Code
     C                     PARM I8AJCD    WQ0457  3        Warehouse Code
     C                     PARM I8DXWG    WQ0458  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0459  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0460  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0461  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0462  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0463  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0464  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0465  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0466  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0467  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0468  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0469 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0470  92       PS Weight Order
     C                     PARM I8QTAS    WQ0471  92       PS Weight Sched
     C                     PARM WL0424    WQ0472  2        U/M - Primary
     C                     PARM WL0425    WQ0473 112       Unit Weight
     C                     PARM WL0426    WQ0474  52       Fresh Chilling
     C                     PARM WL0427    WQ0475  1        Piece Count Ite
     C                     PARM WL0428    WQ0476  70       Pieces Per Bag
     C                     PARM WL0429    WQ0477  70       Bags Per Unit
     C                     PARM WL0423    WQ0478  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0386           Status Flag 10
     C                     ELSE
      * CASE: PAR.Avail Ship Date 11 USR EQ DB1.PS Available Ship Date
     C           WL0278    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0278    WQ0479  70       Avail Ship Date
     C           WL0299    PARM *ZERO     WQ0480  70       Production Date
     C                     PARM WUQINV    WQ0481  61       Quantity Invent
     C           WL0326    PARM WL0326    WQ0482  61       Quantity Produc
     C           WL0347    PARM WL0347    WQ0483  61       Quantity Sales
     C           WL0368    PARM WL0368    WQ0484  61       Quantity Adjust
     C           WL0389    PARM WL0389    WQ0485  61       Quantity Availa
     C           WL0412    PARM WL0412    WQ0486  61       Quantity Sched
     C                     PARM I8AIC3    WQ0487  30       Company Number
     C                     PARM I8V5ST    WQ0488  1        Production Type
     C                     PARM I8ELDT    WQ0489  70       Production Date
     C                     PARM I8HGCD    WQ0490  70       Item Code
     C                     PARM I8AJCD    WQ0491  3        Warehouse Code
     C                     PARM I8DXWG    WQ0492  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0493  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0494  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0495  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0496  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0497  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0498  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0499  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0500  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0501  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0502  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0503 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0504  92       PS Weight Order
     C                     PARM I8QTAS    WQ0505  92       PS Weight Sched
     C                     PARM WL0424    WQ0506  2        U/M - Primary
     C                     PARM WL0425    WQ0507 112       Unit Weight
     C                     PARM WL0426    WQ0508  52       Fresh Chilling
     C                     PARM WL0427    WQ0509  1        Piece Count Ite
     C                     PARM WL0428    WQ0510  70       Pieces Per Bag
     C                     PARM WL0429    WQ0511  70       Bags Per Unit
     C                     PARM WL0423    WQ0512  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0387           Status Flag 11
     C                     ELSE
      * CASE: PAR.Avail Ship Date 12 USR EQ DB1.PS Available Ship Date
     C           WL0279    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0279    WQ0513  70       Avail Ship Date
     C           WL0300    PARM *ZERO     WQ0514  70       Production Date
     C                     PARM WUQINV    WQ0515  61       Quantity Invent
     C           WL0327    PARM WL0327    WQ0516  61       Quantity Produc
     C           WL0348    PARM WL0348    WQ0517  61       Quantity Sales
     C           WL0369    PARM WL0369    WQ0518  61       Quantity Adjust
     C           WL0390    PARM WL0390    WQ0519  61       Quantity Availa
     C           WL0413    PARM WL0413    WQ0520  61       Quantity Sched
     C                     PARM I8AIC3    WQ0521  30       Company Number
     C                     PARM I8V5ST    WQ0522  1        Production Type
     C                     PARM I8ELDT    WQ0523  70       Production Date
     C                     PARM I8HGCD    WQ0524  70       Item Code
     C                     PARM I8AJCD    WQ0525  3        Warehouse Code
     C                     PARM I8DXWG    WQ0526  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0527  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0528  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0529  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0530  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0531  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0532  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0533  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0534  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0535  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0536  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0537 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0538  92       PS Weight Order
     C                     PARM I8QTAS    WQ0539  92       PS Weight Sched
     C                     PARM WL0424    WQ0540  2        U/M - Primary
     C                     PARM WL0425    WQ0541 112       Unit Weight
     C                     PARM WL0426    WQ0542  52       Fresh Chilling
     C                     PARM WL0427    WQ0543  1        Piece Count Ite
     C                     PARM WL0428    WQ0544  70       Pieces Per Bag
     C                     PARM WL0429    WQ0545  70       Bags Per Unit
     C                     PARM WL0423    WQ0546  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0388           Status Flag 12
     C                     ELSE
      * CASE: PAR.Avail Ship Date 13 USR EQ DB1.PS Available Ship Date
     C           WL0280    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0280    WQ0547  70       Avail Ship Date
     C           WL0301    PARM *ZERO     WQ0548  70       Production Date
     C                     PARM WUQINV    WQ0549  61       Quantity Invent
     C           WL0328    PARM WL0328    WQ0550  61       Quantity Produc
     C           WL0349    PARM WL0349    WQ0551  61       Quantity Sales
     C           WL0370    PARM WL0370    WQ0552  61       Quantity Adjust
     C           WL0391    PARM WL0391    WQ0553  61       Quantity Availa
     C           WL0414    PARM WL0414    WQ0554  61       Quantity Sched
     C                     PARM I8AIC3    WQ0555  30       Company Number
     C                     PARM I8V5ST    WQ0556  1        Production Type
     C                     PARM I8ELDT    WQ0557  70       Production Date
     C                     PARM I8HGCD    WQ0558  70       Item Code
     C                     PARM I8AJCD    WQ0559  3        Warehouse Code
     C                     PARM I8DXWG    WQ0560  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0561  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0562  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0563  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0564  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0565  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0566  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0567  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0568  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0569  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0570  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0571 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0572  92       PS Weight Order
     C                     PARM I8QTAS    WQ0573  92       PS Weight Sched
     C                     PARM WL0424    WQ0574  2        U/M - Primary
     C                     PARM WL0425    WQ0575 112       Unit Weight
     C                     PARM WL0426    WQ0576  52       Fresh Chilling
     C                     PARM WL0427    WQ0577  1        Piece Count Ite
     C                     PARM WL0428    WQ0578  70       Pieces Per Bag
     C                     PARM WL0429    WQ0579  70       Bags Per Unit
     C                     PARM WL0423    WQ0580  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0389           Status Flag 13
     C                     ELSE
      * CASE: PAR.Avail Ship Date 14 USR EQ DB1.PS Available Ship Date
     C           WL0281    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0281    WQ0581  70       Avail Ship Date
     C           WL0302    PARM *ZERO     WQ0582  70       Production Date
     C                     PARM WUQINV    WQ0583  61       Quantity Invent
     C           WL0329    PARM WL0329    WQ0584  61       Quantity Produc
     C           WL0350    PARM WL0350    WQ0585  61       Quantity Sales
     C           WL0371    PARM WL0371    WQ0586  61       Quantity Adjust
     C           WL0392    PARM WL0392    WQ0587  61       Quantity Availa
     C           WL0415    PARM WL0415    WQ0588  61       Quantity Sched
     C                     PARM I8AIC3    WQ0589  30       Company Number
     C                     PARM I8V5ST    WQ0590  1        Production Type
     C                     PARM I8ELDT    WQ0591  70       Production Date
     C                     PARM I8HGCD    WQ0592  70       Item Code
     C                     PARM I8AJCD    WQ0593  3        Warehouse Code
     C                     PARM I8DXWG    WQ0594  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0595  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0596  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0597  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0598  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0599  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0600  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0601  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0602  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0603  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0604  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0605 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0606  92       PS Weight Order
     C                     PARM I8QTAS    WQ0607  92       PS Weight Sched
     C                     PARM WL0424    WQ0608  2        U/M - Primary
     C                     PARM WL0425    WQ0609 112       Unit Weight
     C                     PARM WL0426    WQ0610  52       Fresh Chilling
     C                     PARM WL0427    WQ0611  1        Piece Count Ite
     C                     PARM WL0428    WQ0612  70       Pieces Per Bag
     C                     PARM WL0429    WQ0613  70       Bags Per Unit
     C                     PARM WL0423    WQ0614  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0390           Status Flag 14
     C                     ELSE
      * CASE: PAR.Avail Ship Date 15 USR EQ DB1.PS Available Ship Date
     C           WL0282    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0282    WQ0615  70       Avail Ship Date
     C           WL0303    PARM *ZERO     WQ0616  70       Production Date
     C                     PARM WUQINV    WQ0617  61       Quantity Invent
     C           WL0330    PARM WL0330    WQ0618  61       Quantity Produc
     C           WL0351    PARM WL0351    WQ0619  61       Quantity Sales
     C           WL0372    PARM WL0372    WQ0620  61       Quantity Adjust
     C           WL0393    PARM WL0393    WQ0621  61       Quantity Availa
     C           WL0416    PARM WL0416    WQ0622  61       Quantity Sched
     C                     PARM I8AIC3    WQ0623  30       Company Number
     C                     PARM I8V5ST    WQ0624  1        Production Type
     C                     PARM I8ELDT    WQ0625  70       Production Date
     C                     PARM I8HGCD    WQ0626  70       Item Code
     C                     PARM I8AJCD    WQ0627  3        Warehouse Code
     C                     PARM I8DXWG    WQ0628  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0629  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0630  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0631  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0632  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0633  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0634  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0635  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0636  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0637  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0638  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0639 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0640  92       PS Weight Order
     C                     PARM I8QTAS    WQ0641  92       PS Weight Sched
     C                     PARM WL0424    WQ0642  2        U/M - Primary
     C                     PARM WL0425    WQ0643 112       Unit Weight
     C                     PARM WL0426    WQ0644  52       Fresh Chilling
     C                     PARM WL0427    WQ0645  1        Piece Count Ite
     C                     PARM WL0428    WQ0646  70       Pieces Per Bag
     C                     PARM WL0429    WQ0647  70       Bags Per Unit
     C                     PARM WL0423    WQ0648  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0391           Status Flag 15
     C                     ELSE
      * CASE: PAR.Avail Ship Date 16 USR EQ DB1.PS Available Ship Date
     C           WL0283    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0283    WQ0649  70       Avail Ship Date
     C           WL0304    PARM *ZERO     WQ0650  70       Production Date
     C                     PARM WUQINV    WQ0651  61       Quantity Invent
     C           WL0331    PARM WL0331    WQ0652  61       Quantity Produc
     C           WL0352    PARM WL0352    WQ0653  61       Quantity Sales
     C           WL0373    PARM WL0373    WQ0654  61       Quantity Adjust
     C           WL0394    PARM WL0394    WQ0655  61       Quantity Availa
     C           WL0417    PARM WL0417    WQ0656  61       Quantity Sched
     C                     PARM I8AIC3    WQ0657  30       Company Number
     C                     PARM I8V5ST    WQ0658  1        Production Type
     C                     PARM I8ELDT    WQ0659  70       Production Date
     C                     PARM I8HGCD    WQ0660  70       Item Code
     C                     PARM I8AJCD    WQ0661  3        Warehouse Code
     C                     PARM I8DXWG    WQ0662  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0663  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0664  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0665  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0666  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0667  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0668  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0669  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0670  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0671  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0672  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0673 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0674  92       PS Weight Order
     C                     PARM I8QTAS    WQ0675  92       PS Weight Sched
     C                     PARM WL0424    WQ0676  2        U/M - Primary
     C                     PARM WL0425    WQ0677 112       Unit Weight
     C                     PARM WL0426    WQ0678  52       Fresh Chilling
     C                     PARM WL0427    WQ0679  1        Piece Count Ite
     C                     PARM WL0428    WQ0680  70       Pieces Per Bag
     C                     PARM WL0429    WQ0681  70       Bags Per Unit
     C                     PARM WL0423    WQ0682  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0392           Status Flag 16
     C                     ELSE
      * CASE: PAR.Avail Ship Date 17 USR EQ DB1.PS Available Ship Date
     C           WL0284    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0284    WQ0683  70       Avail Ship Date
     C           WL0305    PARM *ZERO     WQ0684  70       Production Date
     C                     PARM WUQINV    WQ0685  61       Quantity Invent
     C           WL0332    PARM WL0332    WQ0686  61       Quantity Produc
     C           WL0353    PARM WL0353    WQ0687  61       Quantity Sales
     C           WL0374    PARM WL0374    WQ0688  61       Quantity Adjust
     C           WL0395    PARM WL0395    WQ0689  61       Quantity Availa
     C           WL0418    PARM WL0418    WQ0690  61       Quantity Sched
     C                     PARM I8AIC3    WQ0691  30       Company Number
     C                     PARM I8V5ST    WQ0692  1        Production Type
     C                     PARM I8ELDT    WQ0693  70       Production Date
     C                     PARM I8HGCD    WQ0694  70       Item Code
     C                     PARM I8AJCD    WQ0695  3        Warehouse Code
     C                     PARM I8DXWG    WQ0696  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0697  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0698  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0699  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0700  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0701  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0702  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0703  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0704  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0705  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0706  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0707 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0708  92       PS Weight Order
     C                     PARM I8QTAS    WQ0709  92       PS Weight Sched
     C                     PARM WL0424    WQ0710  2        U/M - Primary
     C                     PARM WL0425    WQ0711 112       Unit Weight
     C                     PARM WL0426    WQ0712  52       Fresh Chilling
     C                     PARM WL0427    WQ0713  1        Piece Count Ite
     C                     PARM WL0428    WQ0714  70       Pieces Per Bag
     C                     PARM WL0429    WQ0715  70       Bags Per Unit
     C                     PARM WL0423    WQ0716  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0393           Status Flag 17
     C                     ELSE
      * CASE: PAR.Avail Ship Date 18 USR EQ DB1.PS Available Ship Date
     C           WL0285    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0285    WQ0717  70       Avail Ship Date
     C           WL0306    PARM *ZERO     WQ0718  70       Production Date
     C                     PARM WUQINV    WQ0719  61       Quantity Invent
     C           WL0333    PARM WL0333    WQ0720  61       Quantity Produc
     C           WL0354    PARM WL0354    WQ0721  61       Quantity Sales
     C           WL0375    PARM WL0375    WQ0722  61       Quantity Adjust
     C           WL0396    PARM WL0396    WQ0723  61       Quantity Availa
     C           WL0419    PARM WL0419    WQ0724  61       Quantity Sched
     C                     PARM I8AIC3    WQ0725  30       Company Number
     C                     PARM I8V5ST    WQ0726  1        Production Type
     C                     PARM I8ELDT    WQ0727  70       Production Date
     C                     PARM I8HGCD    WQ0728  70       Item Code
     C                     PARM I8AJCD    WQ0729  3        Warehouse Code
     C                     PARM I8DXWG    WQ0730  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0731  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0732  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0733  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0734  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0735  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0736  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0737  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0738  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0739  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0740  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0741 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0742  92       PS Weight Order
     C                     PARM I8QTAS    WQ0743  92       PS Weight Sched
     C                     PARM WL0424    WQ0744  2        U/M - Primary
     C                     PARM WL0425    WQ0745 112       Unit Weight
     C                     PARM WL0426    WQ0746  52       Fresh Chilling
     C                     PARM WL0427    WQ0747  1        Piece Count Ite
     C                     PARM WL0428    WQ0748  70       Pieces Per Bag
     C                     PARM WL0429    WQ0749  70       Bags Per Unit
     C                     PARM WL0423    WQ0750  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0394           Status Flag 18
     C                     ELSE
      * CASE: PAR.Avail Ship Date 19 USR EQ DB1.PS Available Ship Date
     C           WL0286    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0286    WQ0751  70       Avail Ship Date
     C           WL0307    PARM *ZERO     WQ0752  70       Production Date
     C                     PARM WUQINV    WQ0753  61       Quantity Invent
     C           WL0334    PARM WL0334    WQ0754  61       Quantity Produc
     C           WL0355    PARM WL0355    WQ0755  61       Quantity Sales
     C           WL0376    PARM WL0376    WQ0756  61       Quantity Adjust
     C           WL0397    PARM WL0397    WQ0757  61       Quantity Availa
     C           WL0420    PARM WL0420    WQ0758  61       Quantity Sched
     C                     PARM I8AIC3    WQ0759  30       Company Number
     C                     PARM I8V5ST    WQ0760  1        Production Type
     C                     PARM I8ELDT    WQ0761  70       Production Date
     C                     PARM I8HGCD    WQ0762  70       Item Code
     C                     PARM I8AJCD    WQ0763  3        Warehouse Code
     C                     PARM I8DXWG    WQ0764  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0765  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0766  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0767  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0768  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0769  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0770  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0771  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0772  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0773  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0774  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0775 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0776  92       PS Weight Order
     C                     PARM I8QTAS    WQ0777  92       PS Weight Sched
     C                     PARM WL0424    WQ0778  2        U/M - Primary
     C                     PARM WL0425    WQ0779 112       Unit Weight
     C                     PARM WL0426    WQ0780  52       Fresh Chilling
     C                     PARM WL0427    WQ0781  1        Piece Count Ite
     C                     PARM WL0428    WQ0782  70       Pieces Per Bag
     C                     PARM WL0429    WQ0783  70       Bags Per Unit
     C                     PARM WL0423    WQ0784  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0395           Status Flag 19
     C                     ELSE
      * CASE: PAR.Avail Ship Date 20 USR EQ DB1.PS Available Ship Date
     C           WL0287    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0287    WQ0785  70       Avail Ship Date
     C           WL0308    PARM *ZERO     WQ0786  70       Production Date
     C                     PARM WUQINV    WQ0787  61       Quantity Invent
     C           WL0335    PARM WL0335    WQ0788  61       Quantity Produc
     C           WL0356    PARM WL0356    WQ0789  61       Quantity Sales
     C           WL0377    PARM WL0377    WQ0790  61       Quantity Adjust
     C           WL0398    PARM WL0398    WQ0791  61       Quantity Availa
     C           WL0421    PARM WL0421    WQ0792  61       Quantity Sched
     C                     PARM I8AIC3    WQ0793  30       Company Number
     C                     PARM I8V5ST    WQ0794  1        Production Type
     C                     PARM I8ELDT    WQ0795  70       Production Date
     C                     PARM I8HGCD    WQ0796  70       Item Code
     C                     PARM I8AJCD    WQ0797  3        Warehouse Code
     C                     PARM I8DXWG    WQ0798  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0799  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0800  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0801  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0802  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0803  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0804  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0805  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0806  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0807  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0808  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0809 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0810  92       PS Weight Order
     C                     PARM I8QTAS    WQ0811  92       PS Weight Sched
     C                     PARM WL0424    WQ0812  2        U/M - Primary
     C                     PARM WL0425    WQ0813 112       Unit Weight
     C                     PARM WL0426    WQ0814  52       Fresh Chilling
     C                     PARM WL0427    WQ0815  1        Piece Count Ite
     C                     PARM WL0428    WQ0816  70       Pieces Per Bag
     C                     PARM WL0429    WQ0817  70       Bags Per Unit
     C                     PARM WL0423    WQ0818  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0396           Status Flag 20
     C                     ELSE
      * CASE: PAR.Avail Ship Date 21 USR EQ DB1.PS Available Ship Date
     C           WL0288    IFEQ I8GPDT                     *IF
      * Clc PA w/Unit Weight  XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYEXFR'              90  Clc PA w/Unit W
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0288    WQ0819  70       Avail Ship Date
     C           WL0309    PARM *ZERO     WQ0820  70       Production Date
     C                     PARM WUQINV    WQ0821  61       Quantity Invent
     C           WL0336    PARM WL0336    WQ0822  61       Quantity Produc
     C           WL0357    PARM WL0357    WQ0823  61       Quantity Sales
     C           WL0378    PARM WL0378    WQ0824  61       Quantity Adjust
     C           WL0399    PARM WL0399    WQ0825  61       Quantity Availa
     C           WL0422    PARM WL0422    WQ0826  61       Quantity Sched
     C                     PARM I8AIC3    WQ0827  30       Company Number
     C                     PARM I8V5ST    WQ0828  1        Production Type
     C                     PARM I8ELDT    WQ0829  70       Production Date
     C                     PARM I8HGCD    WQ0830  70       Item Code
     C                     PARM I8AJCD    WQ0831  3        Warehouse Code
     C                     PARM I8DXWG    WQ0832  92       PS Weight Stand
     C                     PARM I8B2NB    WQ0833  70       PS Pieces Stand
     C                     PARM I8WTCN    WQ0834  92       PS Weight Conve
     C                     PARM I8PSCV    WQ0835  70       PS Pieces Conve
     C                     PARM I8SAWT    WQ0836  92       PS Weight Shipp
     C                     PARM I8B9NB    WQ0837  70       PS Pieces Shipp
     C                     PARM I8D1WG    WQ0838  92       PS Weight Prod
     C                     PARM I8CBNB    WQ0839  70       PS Pieces Prod
     C                     PARM I8OAWT    WQ0840  92       PS Weight Prod
     C                     PARM I8CDNB    WQ0841  70       PS Pieces Prod
     C                     PARM I8BPNB    WQ0842  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0843 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0844  92       PS Weight Order
     C                     PARM I8QTAS    WQ0845  92       PS Weight Sched
     C                     PARM WL0424    WQ0846  2        U/M - Primary
     C                     PARM WL0425    WQ0847 112       Unit Weight
     C                     PARM WL0426    WQ0848  52       Fresh Chilling
     C                     PARM WL0427    WQ0849  1        Piece Count Ite
     C                     PARM WL0428    WQ0850  70       Pieces Per Bag
     C                     PARM WL0429    WQ0851  70       Bags Per Unit
     C                     PARM WL0423    WQ0852  1        Avail Dsp/Prt T
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYEXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       WN0397           Status Flag 21
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate PA w/ Load Size
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PS Available Ship Date
     C           WL0268    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0268    WQ0853  70       Avail Ship Date
     C           WL0289    PARM *ZERO     WQ0854  70       Production Date
     C                     PARM WL0310    WQ0855  61       Quantity Invent
     C           WL0316    PARM WL0316    WQ0856  61       Quantity Produc
     C           WL0337    PARM WL0337    WQ0857  61       Quantity Sales
     C           WL0358    PARM WL0358    WQ0858  61       Quantity Adjust
     C           WL0379    PARM WL0379    WQ0859  61       Quantity Availa
     C           WL0402    PARM WL0402    WQ0860  61       Quantity Sched
     C                     PARM I8AIC3    WQ0861  30       Company Number
     C                     PARM I8V5ST    WQ0862  1        Production Type
     C                     PARM I8ELDT    WQ0863  70       Production Date
     C                     PARM I8HGCD    WQ0864  70       Item Code
     C                     PARM I8AJCD    WQ0865  3        Warehouse Code
     C                     PARM I8DXWG    WQ0866  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0867  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0868  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0869  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0870  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0871  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0872 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0873  92       PS Weight Order
     C                     PARM I8QTAS    WQ0874  92       PS Weight Sched
     C                     PARM WL0401    WQ0875  70       Load Size USR
     C                     PARM WL0423    WQ0876  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ0877  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0377           Status Flag 1
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PS Available Ship Date
     C           WL0269    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0269    WQ0878  70       Avail Ship Date
     C           WL0290    PARM *ZERO     WQ0879  70       Production Date
     C                     PARM WL0311    WQ0880  61       Quantity Invent
     C           WL0317    PARM WL0317    WQ0881  61       Quantity Produc
     C           WL0338    PARM WL0338    WQ0882  61       Quantity Sales
     C           WL0359    PARM WL0359    WQ0883  61       Quantity Adjust
     C           WL0380    PARM WL0380    WQ0884  61       Quantity Availa
     C           WL0403    PARM WL0403    WQ0885  61       Quantity Sched
     C                     PARM I8AIC3    WQ0886  30       Company Number
     C                     PARM I8V5ST    WQ0887  1        Production Type
     C                     PARM I8ELDT    WQ0888  70       Production Date
     C                     PARM I8HGCD    WQ0889  70       Item Code
     C                     PARM I8AJCD    WQ0890  3        Warehouse Code
     C                     PARM I8DXWG    WQ0891  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0892  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0893  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0894  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0895  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0896  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0897 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0898  92       PS Weight Order
     C                     PARM I8QTAS    WQ0899  92       PS Weight Sched
     C                     PARM WL0401    WQ0900  70       Load Size USR
     C                     PARM WL0423    WQ0901  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ0902  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0378           Status Flag 2
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PS Available Ship Date
     C           WL0270    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0270    WQ0903  70       Avail Ship Date
     C           WL0291    PARM *ZERO     WQ0904  70       Production Date
     C                     PARM WL0312    WQ0905  61       Quantity Invent
     C           WL0318    PARM WL0318    WQ0906  61       Quantity Produc
     C           WL0339    PARM WL0339    WQ0907  61       Quantity Sales
     C           WL0360    PARM WL0360    WQ0908  61       Quantity Adjust
     C           WL0381    PARM WL0381    WQ0909  61       Quantity Availa
     C           WL0404    PARM WL0404    WQ0910  61       Quantity Sched
     C                     PARM I8AIC3    WQ0911  30       Company Number
     C                     PARM I8V5ST    WQ0912  1        Production Type
     C                     PARM I8ELDT    WQ0913  70       Production Date
     C                     PARM I8HGCD    WQ0914  70       Item Code
     C                     PARM I8AJCD    WQ0915  3        Warehouse Code
     C                     PARM I8DXWG    WQ0916  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0917  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0918  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0919  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0920  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0921  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0922 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0923  92       PS Weight Order
     C                     PARM I8QTAS    WQ0924  92       PS Weight Sched
     C                     PARM WL0401    WQ0925  70       Load Size USR
     C                     PARM WL0423    WQ0926  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ0927  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0379           Status Flag 3
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PS Available Ship Date
     C           WL0271    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0271    WQ0928  70       Avail Ship Date
     C           WL0292    PARM *ZERO     WQ0929  70       Production Date
     C                     PARM WL0313    WQ0930  61       Quantity Invent
     C           WL0319    PARM WL0319    WQ0931  61       Quantity Produc
     C           WL0340    PARM WL0340    WQ0932  61       Quantity Sales
     C           WL0361    PARM WL0361    WQ0933  61       Quantity Adjust
     C           WL0382    PARM WL0382    WQ0934  61       Quantity Availa
     C           WL0405    PARM WL0405    WQ0935  61       Quantity Sched
     C                     PARM I8AIC3    WQ0936  30       Company Number
     C                     PARM I8V5ST    WQ0937  1        Production Type
     C                     PARM I8ELDT    WQ0938  70       Production Date
     C                     PARM I8HGCD    WQ0939  70       Item Code
     C                     PARM I8AJCD    WQ0940  3        Warehouse Code
     C                     PARM I8DXWG    WQ0941  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0942  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0943  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0944  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0945  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0946  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0947 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0948  92       PS Weight Order
     C                     PARM I8QTAS    WQ0949  92       PS Weight Sched
     C                     PARM WL0401    WQ0950  70       Load Size USR
     C                     PARM WL0423    WQ0951  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ0952  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0380           Status Flag 4
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PS Available Ship Date
     C           WL0272    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0272    WQ0953  70       Avail Ship Date
     C           WL0293    PARM *ZERO     WQ0954  70       Production Date
     C                     PARM WL0314    WQ0955  61       Quantity Invent
     C           WL0320    PARM WL0320    WQ0956  61       Quantity Produc
     C           WL0341    PARM WL0341    WQ0957  61       Quantity Sales
     C           WL0362    PARM WL0362    WQ0958  61       Quantity Adjust
     C           WL0383    PARM WL0383    WQ0959  61       Quantity Availa
     C           WL0406    PARM WL0406    WQ0960  61       Quantity Sched
     C                     PARM I8AIC3    WQ0961  30       Company Number
     C                     PARM I8V5ST    WQ0962  1        Production Type
     C                     PARM I8ELDT    WQ0963  70       Production Date
     C                     PARM I8HGCD    WQ0964  70       Item Code
     C                     PARM I8AJCD    WQ0965  3        Warehouse Code
     C                     PARM I8DXWG    WQ0966  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0967  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0968  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0969  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0970  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0971  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0972 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0973  92       PS Weight Order
     C                     PARM I8QTAS    WQ0974  92       PS Weight Sched
     C                     PARM WL0401    WQ0975  70       Load Size USR
     C                     PARM WL0423    WQ0976  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ0977  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0381           Status Flag 5
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PS Available Ship Date
     C           WL0273    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0273    WQ0978  70       Avail Ship Date
     C           WL0294    PARM *ZERO     WQ0979  70       Production Date
     C                     PARM WL0315    WQ0980  61       Quantity Invent
     C           WL0321    PARM WL0321    WQ0981  61       Quantity Produc
     C           WL0342    PARM WL0342    WQ0982  61       Quantity Sales
     C           WL0363    PARM WL0363    WQ0983  61       Quantity Adjust
     C           WL0384    PARM WL0384    WQ0984  61       Quantity Availa
     C           WL0407    PARM WL0407    WQ0985  61       Quantity Sched
     C                     PARM I8AIC3    WQ0986  30       Company Number
     C                     PARM I8V5ST    WQ0987  1        Production Type
     C                     PARM I8ELDT    WQ0988  70       Production Date
     C                     PARM I8HGCD    WQ0989  70       Item Code
     C                     PARM I8AJCD    WQ0990  3        Warehouse Code
     C                     PARM I8DXWG    WQ0991  92       PS Weight Stand
     C                     PARM I8WTCN    WQ0992  92       PS Weight Conve
     C                     PARM I8SAWT    WQ0993  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ0994  92       PS Weight Prod
     C                     PARM I8OAWT    WQ0995  92       PS Weight Prod
     C                     PARM I8BPNB    WQ0996  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ0997 112       PS Weight Whse
     C                     PARM I8DVWG    WQ0998  92       PS Weight Order
     C                     PARM I8QTAS    WQ0999  92       PS Weight Sched
     C                     PARM WL0401    WQ1000  70       Load Size USR
     C                     PARM WL0423    WQ1001  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1002  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0382           Status Flag 6
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PS Available Ship Date
     C           WL0274    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0274    WQ1003  70       Avail Ship Date
     C           WL0295    PARM *ZERO     WQ1004  70       Production Date
     C                     PARM WUQINV    WQ1005  61       Quantity Invent
     C           WL0322    PARM WL0322    WQ1006  61       Quantity Produc
     C           WL0343    PARM WL0343    WQ1007  61       Quantity Sales
     C           WL0364    PARM WL0364    WQ1008  61       Quantity Adjust
     C           WL0385    PARM WL0385    WQ1009  61       Quantity Availa
     C           WL0408    PARM WL0408    WQ1010  61       Quantity Sched
     C                     PARM I8AIC3    WQ1011  30       Company Number
     C                     PARM I8V5ST    WQ1012  1        Production Type
     C                     PARM I8ELDT    WQ1013  70       Production Date
     C                     PARM I8HGCD    WQ1014  70       Item Code
     C                     PARM I8AJCD    WQ1015  3        Warehouse Code
     C                     PARM I8DXWG    WQ1016  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1017  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1018  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1019  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1020  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1021  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1022 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1023  92       PS Weight Order
     C                     PARM I8QTAS    WQ1024  92       PS Weight Sched
     C                     PARM WL0401    WQ1025  70       Load Size USR
     C                     PARM WL0423    WQ1026  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1027  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0383           Status Flag 7
     C                     ELSE
      * CASE: PAR.Avail Ship Date 8 USR EQ DB1.PS Available Ship Date
     C           WL0275    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0275    WQ1028  70       Avail Ship Date
     C           WL0296    PARM *ZERO     WQ1029  70       Production Date
     C                     PARM WUQINV    WQ1030  61       Quantity Invent
     C           WL0323    PARM WL0323    WQ1031  61       Quantity Produc
     C           WL0344    PARM WL0344    WQ1032  61       Quantity Sales
     C           WL0365    PARM WL0365    WQ1033  61       Quantity Adjust
     C           WL0386    PARM WL0386    WQ1034  61       Quantity Availa
     C           WL0409    PARM WL0409    WQ1035  61       Quantity Sched
     C                     PARM I8AIC3    WQ1036  30       Company Number
     C                     PARM I8V5ST    WQ1037  1        Production Type
     C                     PARM I8ELDT    WQ1038  70       Production Date
     C                     PARM I8HGCD    WQ1039  70       Item Code
     C                     PARM I8AJCD    WQ1040  3        Warehouse Code
     C                     PARM I8DXWG    WQ1041  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1042  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1043  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1044  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1045  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1046  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1047 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1048  92       PS Weight Order
     C                     PARM I8QTAS    WQ1049  92       PS Weight Sched
     C                     PARM WL0401    WQ1050  70       Load Size USR
     C                     PARM WL0423    WQ1051  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1052  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0384           Status Flag 8
     C                     ELSE
      * CASE: PAR.Avail Ship Date 9 USR EQ DB1.PS Available Ship Date
     C           WL0276    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0276    WQ1053  70       Avail Ship Date
     C           WL0297    PARM *ZERO     WQ1054  70       Production Date
     C                     PARM WUQINV    WQ1055  61       Quantity Invent
     C           WL0324    PARM WL0324    WQ1056  61       Quantity Produc
     C           WL0345    PARM WL0345    WQ1057  61       Quantity Sales
     C           WL0366    PARM WL0366    WQ1058  61       Quantity Adjust
     C           WL0387    PARM WL0387    WQ1059  61       Quantity Availa
     C           WL0410    PARM WL0410    WQ1060  61       Quantity Sched
     C                     PARM I8AIC3    WQ1061  30       Company Number
     C                     PARM I8V5ST    WQ1062  1        Production Type
     C                     PARM I8ELDT    WQ1063  70       Production Date
     C                     PARM I8HGCD    WQ1064  70       Item Code
     C                     PARM I8AJCD    WQ1065  3        Warehouse Code
     C                     PARM I8DXWG    WQ1066  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1067  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1068  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1069  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1070  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1071  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1072 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1073  92       PS Weight Order
     C                     PARM I8QTAS    WQ1074  92       PS Weight Sched
     C                     PARM WL0401    WQ1075  70       Load Size USR
     C                     PARM WL0423    WQ1076  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1077  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0385           Status Flag 9
     C                     ELSE
      * CASE: PAR.Avail Ship Date 10 USR EQ DB1.PS Available Ship Date
     C           WL0277    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0277    WQ1078  70       Avail Ship Date
     C           WL0298    PARM *ZERO     WQ1079  70       Production Date
     C                     PARM WUQINV    WQ1080  61       Quantity Invent
     C           WL0325    PARM WL0325    WQ1081  61       Quantity Produc
     C           WL0346    PARM WL0346    WQ1082  61       Quantity Sales
     C           WL0367    PARM WL0367    WQ1083  61       Quantity Adjust
     C           WL0388    PARM WL0388    WQ1084  61       Quantity Availa
     C           WL0411    PARM WL0411    WQ1085  61       Quantity Sched
     C                     PARM I8AIC3    WQ1086  30       Company Number
     C                     PARM I8V5ST    WQ1087  1        Production Type
     C                     PARM I8ELDT    WQ1088  70       Production Date
     C                     PARM I8HGCD    WQ1089  70       Item Code
     C                     PARM I8AJCD    WQ1090  3        Warehouse Code
     C                     PARM I8DXWG    WQ1091  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1092  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1093  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1094  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1095  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1096  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1097 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1098  92       PS Weight Order
     C                     PARM I8QTAS    WQ1099  92       PS Weight Sched
     C                     PARM WL0401    WQ1100  70       Load Size USR
     C                     PARM WL0423    WQ1101  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1102  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0386           Status Flag 10
     C                     ELSE
      * CASE: PAR.Avail Ship Date 11 USR EQ DB1.PS Available Ship Date
     C           WL0278    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0278    WQ1103  70       Avail Ship Date
     C           WL0299    PARM *ZERO     WQ1104  70       Production Date
     C                     PARM WUQINV    WQ1105  61       Quantity Invent
     C           WL0326    PARM WL0326    WQ1106  61       Quantity Produc
     C           WL0347    PARM WL0347    WQ1107  61       Quantity Sales
     C           WL0368    PARM WL0368    WQ1108  61       Quantity Adjust
     C           WL0389    PARM WL0389    WQ1109  61       Quantity Availa
     C           WL0412    PARM WL0412    WQ1110  61       Quantity Sched
     C                     PARM I8AIC3    WQ1111  30       Company Number
     C                     PARM I8V5ST    WQ1112  1        Production Type
     C                     PARM I8ELDT    WQ1113  70       Production Date
     C                     PARM I8HGCD    WQ1114  70       Item Code
     C                     PARM I8AJCD    WQ1115  3        Warehouse Code
     C                     PARM I8DXWG    WQ1116  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1117  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1118  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1119  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1120  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1121  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1122 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1123  92       PS Weight Order
     C                     PARM I8QTAS    WQ1124  92       PS Weight Sched
     C                     PARM WL0401    WQ1125  70       Load Size USR
     C                     PARM WL0423    WQ1126  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1127  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0387           Status Flag 11
     C                     ELSE
      * CASE: PAR.Avail Ship Date 12 USR EQ DB1.PS Available Ship Date
     C           WL0279    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0279    WQ1128  70       Avail Ship Date
     C           WL0300    PARM *ZERO     WQ1129  70       Production Date
     C                     PARM WUQINV    WQ1130  61       Quantity Invent
     C           WL0327    PARM WL0327    WQ1131  61       Quantity Produc
     C           WL0348    PARM WL0348    WQ1132  61       Quantity Sales
     C           WL0369    PARM WL0369    WQ1133  61       Quantity Adjust
     C           WL0390    PARM WL0390    WQ1134  61       Quantity Availa
     C           WL0413    PARM WL0413    WQ1135  61       Quantity Sched
     C                     PARM I8AIC3    WQ1136  30       Company Number
     C                     PARM I8V5ST    WQ1137  1        Production Type
     C                     PARM I8ELDT    WQ1138  70       Production Date
     C                     PARM I8HGCD    WQ1139  70       Item Code
     C                     PARM I8AJCD    WQ1140  3        Warehouse Code
     C                     PARM I8DXWG    WQ1141  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1142  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1143  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1144  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1145  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1146  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1147 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1148  92       PS Weight Order
     C                     PARM I8QTAS    WQ1149  92       PS Weight Sched
     C                     PARM WL0401    WQ1150  70       Load Size USR
     C                     PARM WL0423    WQ1151  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1152  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0388           Status Flag 12
     C                     ELSE
      * CASE: PAR.Avail Ship Date 13 USR EQ DB1.PS Available Ship Date
     C           WL0280    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0280    WQ1153  70       Avail Ship Date
     C           WL0301    PARM *ZERO     WQ1154  70       Production Date
     C                     PARM WUQINV    WQ1155  61       Quantity Invent
     C           WL0328    PARM WL0328    WQ1156  61       Quantity Produc
     C           WL0349    PARM WL0349    WQ1157  61       Quantity Sales
     C           WL0370    PARM WL0370    WQ1158  61       Quantity Adjust
     C           WL0391    PARM WL0391    WQ1159  61       Quantity Availa
     C           WL0414    PARM WL0414    WQ1160  61       Quantity Sched
     C                     PARM I8AIC3    WQ1161  30       Company Number
     C                     PARM I8V5ST    WQ1162  1        Production Type
     C                     PARM I8ELDT    WQ1163  70       Production Date
     C                     PARM I8HGCD    WQ1164  70       Item Code
     C                     PARM I8AJCD    WQ1165  3        Warehouse Code
     C                     PARM I8DXWG    WQ1166  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1167  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1168  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1169  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1170  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1171  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1172 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1173  92       PS Weight Order
     C                     PARM I8QTAS    WQ1174  92       PS Weight Sched
     C                     PARM WL0401    WQ1175  70       Load Size USR
     C                     PARM WL0423    WQ1176  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1177  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0389           Status Flag 13
     C                     ELSE
      * CASE: PAR.Avail Ship Date 14 USR EQ DB1.PS Available Ship Date
     C           WL0281    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0281    WQ1178  70       Avail Ship Date
     C           WL0302    PARM *ZERO     WQ1179  70       Production Date
     C                     PARM WUQINV    WQ1180  61       Quantity Invent
     C           WL0329    PARM WL0329    WQ1181  61       Quantity Produc
     C           WL0350    PARM WL0350    WQ1182  61       Quantity Sales
     C           WL0371    PARM WL0371    WQ1183  61       Quantity Adjust
     C           WL0392    PARM WL0392    WQ1184  61       Quantity Availa
     C           WL0415    PARM WL0415    WQ1185  61       Quantity Sched
     C                     PARM I8AIC3    WQ1186  30       Company Number
     C                     PARM I8V5ST    WQ1187  1        Production Type
     C                     PARM I8ELDT    WQ1188  70       Production Date
     C                     PARM I8HGCD    WQ1189  70       Item Code
     C                     PARM I8AJCD    WQ1190  3        Warehouse Code
     C                     PARM I8DXWG    WQ1191  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1192  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1193  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1194  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1195  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1196  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1197 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1198  92       PS Weight Order
     C                     PARM I8QTAS    WQ1199  92       PS Weight Sched
     C                     PARM WL0401    WQ1200  70       Load Size USR
     C                     PARM WL0423    WQ1201  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1202  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0390           Status Flag 14
     C                     ELSE
      * CASE: PAR.Avail Ship Date 15 USR EQ DB1.PS Available Ship Date
     C           WL0282    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0282    WQ1203  70       Avail Ship Date
     C           WL0303    PARM *ZERO     WQ1204  70       Production Date
     C                     PARM WUQINV    WQ1205  61       Quantity Invent
     C           WL0330    PARM WL0330    WQ1206  61       Quantity Produc
     C           WL0351    PARM WL0351    WQ1207  61       Quantity Sales
     C           WL0372    PARM WL0372    WQ1208  61       Quantity Adjust
     C           WL0393    PARM WL0393    WQ1209  61       Quantity Availa
     C           WL0416    PARM WL0416    WQ1210  61       Quantity Sched
     C                     PARM I8AIC3    WQ1211  30       Company Number
     C                     PARM I8V5ST    WQ1212  1        Production Type
     C                     PARM I8ELDT    WQ1213  70       Production Date
     C                     PARM I8HGCD    WQ1214  70       Item Code
     C                     PARM I8AJCD    WQ1215  3        Warehouse Code
     C                     PARM I8DXWG    WQ1216  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1217  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1218  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1219  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1220  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1221  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1222 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1223  92       PS Weight Order
     C                     PARM I8QTAS    WQ1224  92       PS Weight Sched
     C                     PARM WL0401    WQ1225  70       Load Size USR
     C                     PARM WL0423    WQ1226  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1227  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0391           Status Flag 15
     C                     ELSE
      * CASE: PAR.Avail Ship Date 16 USR EQ DB1.PS Available Ship Date
     C           WL0283    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0283    WQ1228  70       Avail Ship Date
     C           WL0304    PARM *ZERO     WQ1229  70       Production Date
     C                     PARM WUQINV    WQ1230  61       Quantity Invent
     C           WL0331    PARM WL0331    WQ1231  61       Quantity Produc
     C           WL0352    PARM WL0352    WQ1232  61       Quantity Sales
     C           WL0373    PARM WL0373    WQ1233  61       Quantity Adjust
     C           WL0394    PARM WL0394    WQ1234  61       Quantity Availa
     C           WL0417    PARM WL0417    WQ1235  61       Quantity Sched
     C                     PARM I8AIC3    WQ1236  30       Company Number
     C                     PARM I8V5ST    WQ1237  1        Production Type
     C                     PARM I8ELDT    WQ1238  70       Production Date
     C                     PARM I8HGCD    WQ1239  70       Item Code
     C                     PARM I8AJCD    WQ1240  3        Warehouse Code
     C                     PARM I8DXWG    WQ1241  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1242  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1243  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1244  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1245  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1246  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1247 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1248  92       PS Weight Order
     C                     PARM I8QTAS    WQ1249  92       PS Weight Sched
     C                     PARM WL0401    WQ1250  70       Load Size USR
     C                     PARM WL0423    WQ1251  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1252  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0392           Status Flag 16
     C                     ELSE
      * CASE: PAR.Avail Ship Date 17 USR EQ DB1.PS Available Ship Date
     C           WL0284    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0284    WQ1253  70       Avail Ship Date
     C           WL0305    PARM *ZERO     WQ1254  70       Production Date
     C                     PARM WUQINV    WQ1255  61       Quantity Invent
     C           WL0332    PARM WL0332    WQ1256  61       Quantity Produc
     C           WL0353    PARM WL0353    WQ1257  61       Quantity Sales
     C           WL0374    PARM WL0374    WQ1258  61       Quantity Adjust
     C           WL0395    PARM WL0395    WQ1259  61       Quantity Availa
     C           WL0418    PARM WL0418    WQ1260  61       Quantity Sched
     C                     PARM I8AIC3    WQ1261  30       Company Number
     C                     PARM I8V5ST    WQ1262  1        Production Type
     C                     PARM I8ELDT    WQ1263  70       Production Date
     C                     PARM I8HGCD    WQ1264  70       Item Code
     C                     PARM I8AJCD    WQ1265  3        Warehouse Code
     C                     PARM I8DXWG    WQ1266  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1267  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1268  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1269  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1270  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1271  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1272 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1273  92       PS Weight Order
     C                     PARM I8QTAS    WQ1274  92       PS Weight Sched
     C                     PARM WL0401    WQ1275  70       Load Size USR
     C                     PARM WL0423    WQ1276  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1277  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0393           Status Flag 17
     C                     ELSE
      * CASE: PAR.Avail Ship Date 18 USR EQ DB1.PS Available Ship Date
     C           WL0285    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0285    WQ1278  70       Avail Ship Date
     C           WL0306    PARM *ZERO     WQ1279  70       Production Date
     C                     PARM WUQINV    WQ1280  61       Quantity Invent
     C           WL0333    PARM WL0333    WQ1281  61       Quantity Produc
     C           WL0354    PARM WL0354    WQ1282  61       Quantity Sales
     C           WL0375    PARM WL0375    WQ1283  61       Quantity Adjust
     C           WL0396    PARM WL0396    WQ1284  61       Quantity Availa
     C           WL0419    PARM WL0419    WQ1285  61       Quantity Sched
     C                     PARM I8AIC3    WQ1286  30       Company Number
     C                     PARM I8V5ST    WQ1287  1        Production Type
     C                     PARM I8ELDT    WQ1288  70       Production Date
     C                     PARM I8HGCD    WQ1289  70       Item Code
     C                     PARM I8AJCD    WQ1290  3        Warehouse Code
     C                     PARM I8DXWG    WQ1291  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1292  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1293  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1294  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1295  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1296  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1297 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1298  92       PS Weight Order
     C                     PARM I8QTAS    WQ1299  92       PS Weight Sched
     C                     PARM WL0401    WQ1300  70       Load Size USR
     C                     PARM WL0423    WQ1301  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1302  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0394           Status Flag 18
     C                     ELSE
      * CASE: PAR.Avail Ship Date 19 USR EQ DB1.PS Available Ship Date
     C           WL0286    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0286    WQ1303  70       Avail Ship Date
     C           WL0307    PARM *ZERO     WQ1304  70       Production Date
     C                     PARM WUQINV    WQ1305  61       Quantity Invent
     C           WL0334    PARM WL0334    WQ1306  61       Quantity Produc
     C           WL0355    PARM WL0355    WQ1307  61       Quantity Sales
     C           WL0376    PARM WL0376    WQ1308  61       Quantity Adjust
     C           WL0397    PARM WL0397    WQ1309  61       Quantity Availa
     C           WL0420    PARM WL0420    WQ1310  61       Quantity Sched
     C                     PARM I8AIC3    WQ1311  30       Company Number
     C                     PARM I8V5ST    WQ1312  1        Production Type
     C                     PARM I8ELDT    WQ1313  70       Production Date
     C                     PARM I8HGCD    WQ1314  70       Item Code
     C                     PARM I8AJCD    WQ1315  3        Warehouse Code
     C                     PARM I8DXWG    WQ1316  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1317  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1318  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1319  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1320  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1321  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1322 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1323  92       PS Weight Order
     C                     PARM I8QTAS    WQ1324  92       PS Weight Sched
     C                     PARM WL0401    WQ1325  70       Load Size USR
     C                     PARM WL0423    WQ1326  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1327  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0395           Status Flag 19
     C                     ELSE
      * CASE: PAR.Avail Ship Date 20 USR EQ DB1.PS Available Ship Date
     C           WL0287    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0287    WQ1328  70       Avail Ship Date
     C           WL0308    PARM *ZERO     WQ1329  70       Production Date
     C                     PARM WUQINV    WQ1330  61       Quantity Invent
     C           WL0335    PARM WL0335    WQ1331  61       Quantity Produc
     C           WL0356    PARM WL0356    WQ1332  61       Quantity Sales
     C           WL0377    PARM WL0377    WQ1333  61       Quantity Adjust
     C           WL0398    PARM WL0398    WQ1334  61       Quantity Availa
     C           WL0421    PARM WL0421    WQ1335  61       Quantity Sched
     C                     PARM I8AIC3    WQ1336  30       Company Number
     C                     PARM I8V5ST    WQ1337  1        Production Type
     C                     PARM I8ELDT    WQ1338  70       Production Date
     C                     PARM I8HGCD    WQ1339  70       Item Code
     C                     PARM I8AJCD    WQ1340  3        Warehouse Code
     C                     PARM I8DXWG    WQ1341  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1342  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1343  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1344  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1345  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1346  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1347 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1348  92       PS Weight Order
     C                     PARM I8QTAS    WQ1349  92       PS Weight Sched
     C                     PARM WL0401    WQ1350  70       Load Size USR
     C                     PARM WL0423    WQ1351  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1352  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0396           Status Flag 20
     C                     ELSE
      * CASE: PAR.Avail Ship Date 21 USR EQ DB1.PS Available Ship Date
     C           WL0288    IFEQ I8GPDT                     *IF
      * Clc PA w/Load Size    XF - PS Prod Item Schedule  * 
     C                     CALL 'PDYDXFR'              90  Clc PA w/Load S
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0288    WQ1353  70       Avail Ship Date
     C           WL0309    PARM *ZERO     WQ1354  70       Production Date
     C                     PARM WUQINV    WQ1355  61       Quantity Invent
     C           WL0336    PARM WL0336    WQ1356  61       Quantity Produc
     C           WL0357    PARM WL0357    WQ1357  61       Quantity Sales
     C           WL0378    PARM WL0378    WQ1358  61       Quantity Adjust
     C           WL0399    PARM WL0399    WQ1359  61       Quantity Availa
     C           WL0422    PARM WL0422    WQ1360  61       Quantity Sched
     C                     PARM I8AIC3    WQ1361  30       Company Number
     C                     PARM I8V5ST    WQ1362  1        Production Type
     C                     PARM I8ELDT    WQ1363  70       Production Date
     C                     PARM I8HGCD    WQ1364  70       Item Code
     C                     PARM I8AJCD    WQ1365  3        Warehouse Code
     C                     PARM I8DXWG    WQ1366  92       PS Weight Stand
     C                     PARM I8WTCN    WQ1367  92       PS Weight Conve
     C                     PARM I8SAWT    WQ1368  92       PS Weight Shipp
     C                     PARM I8D1WG    WQ1369  92       PS Weight Prod
     C                     PARM I8OAWT    WQ1370  92       PS Weight Prod
     C                     PARM I8BPNB    WQ1371  70       PS Pieces Whse
     C                     PARM I8GAWG    WQ1372 112       PS Weight Whse
     C                     PARM I8DVWG    WQ1373  92       PS Weight Order
     C                     PARM I8QTAS    WQ1374  92       PS Weight Sched
     C                     PARM WL0401    WQ1375  70       Load Size USR
     C                     PARM WL0423    WQ1376  1        Avail Dsp/Prt T
     C                     PARM WL0426    WQ1377  52       Fresh Chilling
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDYDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     MOVEL'Y'       WN0397           Status Flag 21
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTJ     READE@I8CPDZ                  90*
     C                     ENDDO
      * USER: Exit processing
      *
     C                     MOVEL*BLANK    WN0399  1        Ord/Sch Sts USR
      *
      * Rtv PA Ship Only-21  IF
     C                     MOVEL'S'       WN0399           Ord/Sch Sts USR
      * day 1
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 1 USR is Entered
      *   |- c2    : PAR.Status Flag 1  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0268    IFNE *ZERO                      *IF
     C           WN0377    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0268    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 1
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0402           Day 1 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0402           Day 1 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 1 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0402           Day 1 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 2
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 2 USR is Entered
      *   |- c2    : PAR.Status Flag 2  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0269    IFNE *ZERO                      *IF
     C           WN0378    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0269    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 2
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0403           Day 2 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0403           Day 2 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 2 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0403           Day 2 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 3
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 3 USR is Entered
      *   |- c2    : PAR.Status Flag 3  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0270    IFNE *ZERO                      *IF
     C           WN0379    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0270    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 3
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0404           Day 3 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0404           Day 3 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 3 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0404           Day 3 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 4
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 4 USR is Entered
      *   |- c2    : PAR.Status Flag 4  Y/N is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0271    IFNE *ZERO                      *IF
     C           WN0380    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0271    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 4
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0405           Day 4 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0405           Day 4 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 4 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0405           Day 4 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 5
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 5 USR is Entered
      *   |- c2    : PAR.Status Flag 5  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0272    IFNE *ZERO                      *IF
     C           WN0381    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0272    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 5
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0406           Day 5 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0406           Day 5 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 5 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0406           Day 5 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 6 USR is Entered
      *   |- c2    : PAR.Status Flag 6  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0273    IFNE *ZERO                      *IF
     C           WN0382    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0273    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 6
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0407           Day 6 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0407           Day 6 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 6 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0407           Day 6 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 7
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 7 USR is Entered
      *   |- c2    : PAR.Status Flag 7  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0274    IFNE *ZERO                      *IF
     C           WN0383    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0274    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 7
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0408           Day 7 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0408           Day 7 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 7 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0408           Day 7 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 8
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 8 USR is Entered
      *   |- c2    : PAR.Status Flag 8  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0275    IFNE *ZERO                      *IF
     C           WN0384    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0275    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 8
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0409           Day 8 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0409           Day 8 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 8 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0409           Day 8 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 9
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 9 USR is Entered
      *   |- c2    : PAR.Status Flag 9  Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0276    IFNE *ZERO                      *IF
     C           WN0385    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0276    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 9
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0410           Day 9 Sched Shi
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0410           Day 9 Sched Shi
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 9 Sched Shipments USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0410           Day 9 Sched Shi
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 10
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 10 USR is Entered
      *   |- c2    : PAR.Status Flag 10 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0277    IFNE *ZERO                      *IF
     C           WN0386    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0277    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 10
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0411           Day 10 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0411           Day 10 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 10 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0411           Day 10 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 11
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 11 USR is Entered
      *   |- c2    : PAR.Status Flag 11 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0278    IFNE *ZERO                      *IF
     C           WN0387    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0278    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 11
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0412           Day 11 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0412           Day 11 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 11 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0412           Day 11 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 12
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 12 USR is Entered
      *   |- c2    : PAR.Status Flag 12 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0279    IFNE *ZERO                      *IF
     C           WN0388    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0279    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 12
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0413           Day 12 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0413           Day 12 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 12 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0413           Day 12 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 13
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 13 USR is Entered
      *   |- c2    : PAR.Status Flag 13 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0280    IFNE *ZERO                      *IF
     C           WN0389    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0280    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 13
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0414           Day 13 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0414           Day 13 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 13 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0414           Day 13 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 14
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 14 USR is Entered
      *   |- c2    : PAR.Status Flag 14 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0281    IFNE *ZERO                      *IF
     C           WN0390    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0281    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 14
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0415           Day 14 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0415           Day 14 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 14 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0415           Day 14 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 15
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 15 USR is Entered
      *   |- c2    : PAR.Status Flag 15 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFNE *ZERO                      *IF
     C           WN0391    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0282    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 15
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0416           Day 15 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0416           Day 15 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 15 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0416           Day 15 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 16
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 16 USR is Entered
      *   |- c2    : PAR.Status Flag 16 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFNE *ZERO                      *IF
     C           WN0392    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0283    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 16
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0417           Day 16 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0417           Day 16 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 16 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0417           Day 16 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 17
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 17 USR is Entered
      *   |- c2    : PAR.Status Flag 17 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0284    IFNE *ZERO                      *IF
     C           WN0393    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0284    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 17
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0418           Day 17 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0418           Day 17 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 17 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0418           Day 17 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 18
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 18 USR is Entered
      *   |- c2    : PAR.Status Flag 18 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0285    IFNE *ZERO                      *IF
     C           WN0394    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0285    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 18
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0419           Day 18 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0419           Day 18 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 18 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0419           Day 18 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 19
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 19 USR is Entered
      *   |- c2    : PAR.Status Flag 19 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0286    IFNE *ZERO                      *IF
     C           WN0395    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0286    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 19
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0420           Day 19 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0420           Day 19 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 19 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0420           Day 19 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 20
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 20 USR is Entered
      *   |- c2    : PAR.Status Flag 20 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0287    IFNE *ZERO                      *IF
     C           WN0396    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0287    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 20
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0421           Day 20 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0421           Day 20 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 20 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0421           Day 20 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * day 21
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Avail Ship Date 21 USR is Entered
      *   |- c2    : PAR.Status Flag 21 Y/N is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0288    IFNE *ZERO                      *IF
     C           WN0397    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0264    WL0430           Company Number
     C                     Z-ADDWL0265    WL0431           Item Code
     C                     MOVELWL0266    WL0432    P      Warehouse Code
     C                     Z-ADDWL0288    WL0433           Scheduled Ship
     C                     Z-ADDYL0008    WL0434           Weight Schedule
     C                     Z-ADDYL0009    WL0435           Quantity Schedu
     C                     MOVELWN0399    WL0436    P      Ord/Sch Sts USR
     C                     EXSR TKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0434    YL0008           Weight Schedule
     C                     Z-ADDWL0435    YL0009           Quantity Schedu
      * Calculate Sales Quantity 21
      * CASE: Primary UM & (Unit Weight > 0 or piece count item)
      *  - c1 AND (c2 OR c3)
      *   |- c1    : PAR.Primary/Load Sts USR is Primary
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'P'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WL0425    IFGT *ZERO                      *IF
     C           WL0427    OREQ 'Y'                        *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ***Calculate Sales with Unit Weight
      * CASE: PAR.Piece Count Item is yes
     C           WL0427    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0009    WL0422           Day 21 Sched Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * Sched Shipments (No Dec)
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           YL0008    DIV  WL0425    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0422           Day 21 Sched Sh
     C                     END                             *FI
     C                     ELSE
      * CASE: Load Size UM and Load Size > 0
      *  - c1 AND c2
      *   |- c1    : PAR.Primary/Load Sts USR is Load Size
      *   |- c2    : PAR.Load Size USR is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0400    IFEQ 'L'                        *IF
     C           WL0401    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Scheduled Shipments
      * PAR.Day 21 Sched Shipment USR =
      *    *COMPUTE ((x2 / x4))
      * x2    : LCL.Weight Scheduled SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x4    : PAR.Load Size USR
     C           YL0008    DIV  WL0401    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0422           Day 21 Sched Sh
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0434           Weight Schedule
     C                     Z-ADD*ZERO     WL0435           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQTK01           Company Number
     C           *LIKE     DEFN WIHGCD    WQTK02           Item Code
     C           *LIKE     DEFN WIAJCD    WQTK03           Warehouse Code
     C           *LIKE     DEFN WIAODT    WQTK04           Scheduled Ship
      * Define keylist
     C           KRSTK     KLIST
     C                     KFLD           WQTK01           Company Number
     C                     KFLD           WQTK02           Item Code
     C                     KFLD           WQTK03           Warehouse Code
     C                     KFLD           WQTK04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0430    WQTK01           Company Number
     C                     Z-ADDWL0431    WQTK02           Item Code
     C                     MOVELWL0432    WQTK03           Warehouse Code
     C                     Z-ADDWL0433    WQTK04           Scheduled Ship
      * Establish starting position
     C           KRSTK     SETLL@BGWKKG                    *
     C           KRSTK     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0169           Company Number
     C                     Z-ADDWIC4NB    WL0170           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    WUGWST    P      Header Status
     C                     MOVELWL0172    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0436    IFEQ 'S'                        *IF
     C                     ADD  WIAUWG    WL0434           Weight Schedule
     C                     ADD  WICCQT    WL0435           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0436    IFEQ 'O'                        *IF
     C                     ADD  WID0WG    WL0434           Weight Schedule
     C                     ADD  WIAVQT    WL0435           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTK     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship f/Itm  RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0011           OD Quantity Inv
     C                     Z-ADD*ZERO     YL0012           OD Weight Inv S
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQTL01           Company Number
     C           *LIKE     DEFN OMHGCD    WQTL02           Item Code
     C           *LIKE     DEFN OMAJCD    WQTL03           Warehouse Code
      * Define keylist
     C           KPSTL     KLIST
     C                     KFLD           WQTL01           Company Number
     C                     KFLD           WQTL02           Item Code
     C                     KFLD           WQTL03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSTL     KLIST
     C                     KFLD           WQTL01           Company Number
     C                     KFLD           WQTL02           Item Code
     C                     KFLD           WQTL03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQTL01           Company Number
     C                     Z-ADD#1HGCD    WQTL02           Item Code
     C                     MOVEL#CAJCD    WQTL03           Warehouse Code
     C                     Z-ADD##JDT     OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSTL     SETLL@BGWKYG                    *
     C           KRSTL     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0169           Company Number
     C                     Z-ADDOMC4NB    WL0170           Order Number
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    YL0013    P      Header Status
     C                     MOVELWL0172    YL0014    P      Billing Activit
      * CASE:
      *  - c1 AND c3
      *   |- c1    : LCL.Header Status is Not Comp/Canc/Conf
      *   |- c3    : LCL.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0013    IFEQ 'L'                        *IF
     C           YL0013    OREQ 'A'
     C           YL0013    OREQ 'E'
     C           YL0013    OREQ 'H'
     C           YL0014    IFEQ '1'                        *IF
     C           YL0014    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  OMCCQT    YL0011           OD Quantity Inv
     C                     ADD  OMAUWG    YL0012           OD Weight Inv S
     C                     END                             *FI
     C           KRSTL     READE@BGWKYG                  90*
     C                     ENDDO
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMRVGN    BEGSR
      *================================================================
      * Rtv Ord Dtl Sch-AllDysRT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0011           OD Quantity Inv
     C                     Z-ADD*ZERO     YL0012           OD Weight Inv S
      * Declare restrictor key work fields
     C           *LIKE     DEFN B5AIC3    WQTM01           Company Number
     C           *LIKE     DEFN B5HGCD    WQTM02           Item Code
     C           *LIKE     DEFN B5AJCD    WQTM03           Warehouse Code
      * Define keylist
     C           KRSTM     KLIST
     C                     KFLD           WQTM01           Company Number
     C                     KFLD           WQTM02           Item Code
     C                     KFLD           WQTM03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQTM01           Company Number
     C                     Z-ADD#1HGCD    WQTM02           Item Code
     C                     MOVEL#CAJCD    WQTM03           Warehouse Code
      * Establish starting position
     C           KRSTM     SETLL@B5CPM4                    *
     C           KRSTM     READE@B5CPM4                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B5IUQT    YL0011           OD Quantity Inv
     C                     ADD  B5F3WG    YL0012           OD Weight Inv S
     C           KRSTM     READE@B5CPM4                  90*
     C                     ENDDO
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNRVGN    BEGSR
      *================================================================
      * RTV Cur Wk Held Total  RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0016           Quantity on Hol
     C                     Z-ADD*ZERO     YL0017           Weight Total Ne
      * Declare restrictor key work fields
     C           *LIKE     DEFN WJAIC3    WQTN01           Company Number
     C           *LIKE     DEFN WJHGCD    WQTN02           Item Code
     C           *LIKE     DEFN WJAJCD    WQTN03           Warehouse Code
      * Define keylist
     C           KPSTN     KLIST
     C                     KFLD           WQTN01           Company Number
     C                     KFLD           WQTN02           Item Code
     C                     KFLD           WQTN03           Warehouse Code
     C                     KFLD           WJAODT           Scheduled Ship
      * Define keylist
     C           KRSTN     KLIST
     C                     KFLD           WQTN01           Company Number
     C                     KFLD           WQTN02           Item Code
     C                     KFLD           WQTN03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQTN01           Company Number
     C                     Z-ADD#1HGCD    WQTN02           Item Code
     C                     MOVEL#CAJCD    WQTN03           Warehouse Code
     C                     Z-ADD#CH6DT    WJAODT           Scheduled Ship
      * Establish starting position
     C           KPSTN     SETLL@BGWKVW                    *
     C           KRSTN     READE@BGWKVW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
     C                     GOTO TNEXIT                     *QUIT
     C                     GOTO TNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Scheduled Ship Date GT PAR.Week End Date
     C           WJAODT    IFGT #CINDT                     *IF
     C                     GOTO TNEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Detail Line Status is Avail/Entered/Held
     C           WJGMST    IFEQ 'A'                        *IF
     C           WJGMST    OREQ 'E'
     C           WJGMST    OREQ 'H'
      * Compute:Qty on hold
      * PAR.Quantity on Hold     USR =
      *    *COMPUTE ((x1 - x2) + x3)
      * x1    : DB1.Quantity Ordered
      * -     : PGM.*Synon (15,2) work field
      * x2    : DB1.Quantity Scheduled
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Quantity on Hold     USR
     C           WJAVQT    SUB  WJCCQT    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  YL0016    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    YL0016           Quantity on Hol
      * Compute:Wgt on hold
      * PAR.Weight Total Need USR =
      *    *COMPUTE ((x1 - x2) + x3)
      * x1    : DB1.Weight Ordered
      * -     : PGM.*Synon (15,2) work field
      * x2    : DB1.Weight Scheduled
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Weight Total Need USR
     C           WJD0WG    SUB  WJAUWG    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  YL0017    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    YL0017           Weight Total Ne
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTN     READE@BGWKVW                  90*
     C                     ENDDO
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * VAL Shipping Co WHS   RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WKBWC3    WQTO01           Shipping Compan
     C           *LIKE     DEFN WKAJCD    WQTO02           Warehouse Code
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           WQTO01           Shipping Compan
     C                     KFLD           WQTO02           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQTO01           Shipping Compan
     C                     MOVEL#CAJCD    WQTO02           Warehouse Code
      * Establish starting position
     C           KRSTO     SETLL@ADREWA                    *
     C           KRSTO     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUF8NA           Warehouse Descr
     C                     GOTO TOEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWKF8NA    WUF8NA           Warehouse Descr
     C           KRSTO     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPRVGN    BEGSR
      *================================================================
      * Rtv Warehouse/type Val RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTP     KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSTP     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       P5WXST           Record Found US
     C                     GOTO TPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       P5WXST           Record Found US
     C                     MOVELWAWPST    #CWPST           Warehouse Type
     C                     GOTO TPEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQRVGN    BEGSR
      *================================================================
      * Rtv Productin Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTQ     KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSTQ     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0021           Production Ware
     C                     Z-ADD*ZERO     YL0022           Accounting Comp
     C                     GOTO TQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAOCD    YL0021           Production Ware
     C                     Z-ADDWABTC3    YL0022           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         TRRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTR     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0702    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSTR     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0023           Company Number
     C                     MOVELDRBUVN    WN0703           User Code Model
     C                     ENDIF
      *================================================================
     CSR         TREXIT    ENDSR
      /EJECT
     CSR         TSRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTS     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0437    DTAJVN           User Profile Na
     C                     MOVELWL0438    DTDNCD           Application Cod
      * Establish starting position
     C           KRSTS     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0439           Company Number
     C                     MOVELDTAJCD    WL0440           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         TSEXIT    ENDSR
      /EJECT
     CSR         TTRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQTT01           Application Cod
      * Define keylist
     C           KRSTT     KLIST
     C                     KFLD           WQTT01           Application Cod
      * Setup key
     C                     MOVELP2DNCD    WQTT01           Application Cod
      * Establish starting position
     C           KRSTT     SETLL@DNRESF                    *
     C           KRSTT     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR TURVGN
     C                     END                             *FI
     C           KRSTT     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         TTEXIT    ENDSR
      /EJECT
     CSR         TURVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQTU01           Application Cod
      * Define keylist
     C           KRSTU     KLIST
     C                     KFLD           WQTU01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQTU01           Application Cod
      * Establish starting position
     C           KRSTU     SETLL@DNRESF                    *
     C           KRSTU     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TUEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSTU     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         TUEXIT    ENDSR
      /EJECT
     CSR         TVRVGN    BEGSR
      *================================================================
      * Rtv Week Number       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTV     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0441    AFAIC3           Company Number
     C                     Z-ADDWL0442    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSTV     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0443           Accounting Year
     C                     Z-ADD*ZERO     WL0444           Week Number
     C                     GOTO TVEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFESNB    WL0443           Accounting Year
     C                     Z-ADDAFEINB    WL0444           Week Number
     C                     ENDIF
      *================================================================
     CSR         TVEXIT    ENDSR
      /EJECT
     CSR         TWRVGN    BEGSR
      *================================================================
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * CASE: PAR.First Time Flag is Yes
     C           WL0455    IFEQ 'Y'                        *IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0448           Date Mon USR
     C                     Z-ADD*ZERO     WL0449           Date Tue USR
     C                     Z-ADD*ZERO     WL0450           Date Wed USR
     C                     Z-ADD*ZERO     WL0451           Date Thu USR
     C                     Z-ADD*ZERO     WL0452           Date Fri USR
     C                     Z-ADD*ZERO     WL0453           Date Sat USR
     C                     Z-ADD*ZERO     WL0454           Date Sun USR
     C                     END                             *FI
      * Declare restrictor key work fields
     C           *LIKE     DEFN WLAIC3    WQTW01           Company Number
     C           *LIKE     DEFN WLESNB    WQTW02           Accounting Year
     C           *LIKE     DEFN WLEINB    WQTW03           Week Number
      * Define keylist
     C           KRSTW     KLIST
     C                     KFLD           WQTW01           Company Number
     C                     KFLD           WQTW02           Accounting Year
     C                     KFLD           WQTW03           Week Number
      * Setup key
     C                     Z-ADDWL0445    WQTW01           Company Number
     C                     Z-ADDWL0446    WQTW02           Accounting Year
     C                     Z-ADDWL0447    WQTW03           Week Number
      * Establish starting position
     C           KRSTW     SETLL@AFREH3                    *
     C           KRSTW     READE@AFREH3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0448           Date Mon USR
     C                     Z-ADD*ZERO     WL0449           Date Tue USR
     C                     Z-ADD*ZERO     WL0450           Date Wed USR
     C                     Z-ADD*ZERO     WL0451           Date Thu USR
     C                     Z-ADD*ZERO     WL0452           Date Fri USR
     C                     Z-ADD*ZERO     WL0453           Date Sat USR
     C                     Z-ADD*ZERO     WL0454           Date Sun USR
     C                     GOTO TWEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Day of Week is Sunday
     C           WLA9ST    IFEQ '1'                        *IF
     C                     Z-ADDWLBCDT    WL0454           Date Sun USR
     C                     ELSE
      * CASE: DB1.Day of Week is Monday
     C           WLA9ST    IFEQ '2'                        *IF
     C                     Z-ADDWLBCDT    WL0448           Date Mon USR
     C                     ELSE
      * CASE: DB1.Day of Week is Tuesday
     C           WLA9ST    IFEQ '3'                        *IF
     C                     Z-ADDWLBCDT    WL0449           Date Tue USR
     C                     ELSE
      * CASE: DB1.Day of Week is Wednesday
     C           WLA9ST    IFEQ '4'                        *IF
     C                     Z-ADDWLBCDT    WL0450           Date Wed USR
     C                     ELSE
      * CASE: DB1.Day of Week is Thursday
     C           WLA9ST    IFEQ '5'                        *IF
     C                     Z-ADDWLBCDT    WL0451           Date Thu USR
     C                     ELSE
      * CASE: DB1.Day of Week is Friday
     C           WLA9ST    IFEQ '6'                        *IF
     C                     Z-ADDWLBCDT    WL0452           Date Fri USR
     C                     ELSE
      * CASE: DB1.Day of Week is Saturday
     C           WLA9ST    IFEQ '7'                        *IF
     C                     Z-ADDWLBCDT    WL0453           Date Sat USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTW     READE@AFREH3                  90*
     C                     ENDDO
      *================================================================
     CSR         TWEXIT    ENDSR
      /EJECT
     CSR         TXRVGN    BEGSR
      *================================================================
      * Rtv Ats ShpDte-21+Sun RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQTX01           Company Number
      * Define keylist
     C           KPSTX     KLIST
     C                     KFLD           WQTX01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSTX     KLIST
     C                     KFLD           WQTX01           Company Number
      * Setup key
     C                     Z-ADDP2AIC3    WQTX01           Company Number
     C                     Z-ADDP7JHDT    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTX     SETLL@AFREBE                    *
     C           KRSTX     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR is GT 21
     C           WUCNTU    IFGT 21                         *IF
     C                     GOTO TXEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Date
      * CASE: WRK.Count USR is One
     C           WUCNTU    IFEQ 1                          *IF
     C                     Z-ADDAFBCDT    P5H6DT           USR Day 1
      * WRK.Condition Desc. 1  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUCNTU    IFEQ 2                          *IF
     C                     Z-ADDAFBCDT    P5H7DT           USR Day 2
      * WRK.Condition Desc. 2  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUCNTU    IFEQ 3                          *IF
     C                     Z-ADDAFBCDT    P5H8DT           USR Day 3
      * WRK.Condition Desc. 3  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUCNTU    IFEQ 4                          *IF
     C                     Z-ADDAFBCDT    P5H9DT           USR Day 4
      * WRK.Condition Desc. 4  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHOTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUCNTU    IFEQ 5                          *IF
     C                     Z-ADDAFBCDT    P5IADT           USR Day 5
      * WRK.Condition Desc. 5  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHPTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUCNTU    IFEQ 6                          *IF
     C                     Z-ADDAFBCDT    P5IBDT           USR Day 6
      * WRK.Condition Desc. 6  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHQTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUCNTU    IFEQ 7                          *IF
     C                     Z-ADDAFBCDT    P5INDT           USR Day 7
      * WRK.Condition Desc. 7  USR = Condition name of DB1.Day of Week
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1159101   Y2LSNO  70       List number
     C                     PARM AFA9ST    W0INVL 25        Day of Week
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           WUHRTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUCNTU    IFEQ 8                          *IF
     C                     Z-ADDAFBCDT    P5IODT           USR Day 8
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUCNTU    IFEQ 9                          *IF
     C                     Z-ADDAFBCDT    P5IPDT           USR Day 9
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUCNTU    IFEQ 10                         *IF
     C                     Z-ADDAFBCDT    P5IQDT           USR Day 10
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUCNTU    IFEQ 11                         *IF
     C                     Z-ADDAFBCDT    P5IRDT           USR Day 11
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUCNTU    IFEQ 12                         *IF
     C                     Z-ADDAFBCDT    P5ISDT           USR Day 12
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUCNTU    IFEQ 13                         *IF
     C                     Z-ADDAFBCDT    P5ITDT           USR Day 13
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUCNTU    IFEQ 14                         *IF
     C                     Z-ADDAFBCDT    P5IUDT           USR Day 14
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUCNTU    IFEQ 15                         *IF
     C                     Z-ADDAFBCDT    P5IVDT           USR Day 15
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUCNTU    IFEQ 16                         *IF
     C                     Z-ADDAFBCDT    P5IWDT           USR Day 16
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUCNTU    IFEQ 17                         *IF
     C                     Z-ADDAFBCDT    P5IXDT           USR Day 17
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUCNTU    IFEQ 18                         *IF
     C                     Z-ADDAFBCDT    P5IYDT           USR Day 18
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUCNTU    IFEQ 19                         *IF
     C                     Z-ADDAFBCDT    P5IZDT           USR Day 19
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUCNTU    IFEQ 20                         *IF
     C                     Z-ADDAFBCDT    P5I0DT           USR Day 20
     C                     ELSE
      * CASE: WRK.Count USR is Twenty One
     C           WUCNTU    IFEQ 21                         *IF
     C                     Z-ADDAFBCDT    P5I1DT           USR Day 21
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSTX     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TXEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03072
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  12        W0CSRR  50
     C           ZZSFM     IFEQ '0'
     C                     DIV  02        W0CSRR
     C                     MVR            ZINPOS
     C                     ELSE
     C                     Z-ADD0         ZINPOS
     C                     ENDIF
     C                     ADD  12        ZINPOS
     C                     MULT 256       ZINPOS
     C                     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD12        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C           ZZSFM     IFEQ '0'
     C                     Z-ADD2         ZHRLEN  40
     C                     ELSE
     C                     Z-ADD1         ZHRLEN
     C                     ENDIF
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 005
     C           ZHCSCL    ANDEQ083
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CPTZR'  YPMTFD           Print Zeros USR
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDGE019
     C           ZHCSCL    ANDLE020
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CWPST'  YPMTFD           Warehouse Type
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2DQCD           Enterprise Code
     C                     MOVEL*BLANK    P2DRCD           Enterprise Code
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     MOVEL*BLANK    P2ADTX           Name
     C                     MOVEL*BLANK    P2BXTX           System Value Al
     C                     MOVEL*BLANK    P2WVST           Access Denied (
     C                     MOVEL*BLANK    P3WRST           PRT Printer Dev
     C                     MOVEL*BLANK    P3WSST           PRT Hold Output
     C                     MOVEL*BLANK    P3WTST           PRT Save Output
     C                     Z-ADD*ZERO     P3DYNB           PRT Number of C
     C                     MOVEL*BLANK    P3WUST           PRT Night Queue
     C                     MOVEL*BLANK    P3BVVN           PRT Night Queue
     C                     MOVEL*BLANK    P3BMVN           Program name US
     C                     MOVEL*BLANK    P3BWVN           Program Name$ U
     C                     MOVEL*BLANK    P3XFST           Display Prt Opt
     C                     Z-ADD*ZERO     P4EINB           Week Number
     C                     Z-ADD*ZERO     P5H6DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5H7DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5H8DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5H9DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IADT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IBDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5INDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IODT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IPDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IQDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IRDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5ISDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5ITDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IUDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IVDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IWDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IXDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IYDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5IZDT           Avail Ship Date
     C                     Z-ADD*ZERO     P5I0DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5I1DT           Avail Ship Date
     C                     Z-ADD*ZERO     P5D1IN           Day 1 Inventory
     C                     Z-ADD*ZERO     P5D2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     P5D3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     P5D4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     P5D5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     P5D6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     P5D7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     P5GCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     P5D1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     P5D2AV           Day 2 Availabil
     C                     Z-ADD*ZERO     P5D3AV           Day 3 Availabil
     C                     Z-ADD*ZERO     P5D4AV           Day 4 Availabil
     C                     Z-ADD*ZERO     P5D5AV           Day 5 Availabil
     C                     Z-ADD*ZERO     P5D6AV           Day 6 Availabil
     C                     Z-ADD*ZERO     P5D7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     P5D8AV           Day 8 Availabil
     C                     Z-ADD*ZERO     P5D9AV           Day 9 Availabil
     C                     Z-ADD*ZERO     P5D1AB           Day 10 Availabi
     C                     Z-ADD*ZERO     P5D2AB           Day 11 Availabi
     C                     Z-ADD*ZERO     P5D3AB           Day 12 Availabi
     C                     Z-ADD*ZERO     P5D4AB           Day 13 Availabi
     C                     Z-ADD*ZERO     P5D5AB           Day 14 Availabi
     C                     Z-ADD*ZERO     P5D6AB           Day 15 Availabi
     C                     Z-ADD*ZERO     P5D7AB           Day 16 Availabi
     C                     Z-ADD*ZERO     P5D8AB           Day 17 Availabi
     C                     Z-ADD*ZERO     P5D9AB           Day 18 Availabi
     C                     Z-ADD*ZERO     P5D1AL           Day 19 Availabi
     C                     Z-ADD*ZERO     P5D2AL           Day 20 Availabi
     C                     Z-ADD*ZERO     P5D3AL           Day 21 Availabi
     C                     MOVEL*BLANK    P5DXSX           Display Flag 1
     C                     MOVEL*BLANK    P5QKST           Display Flag
     C                     MOVEL*BLANK    P5WXST           Record Found US
     C                     Z-ADD*ZERO     P5D1AQ           Day 1 ATS Qty U
     C                     Z-ADD*ZERO     P5D2AQ           Day 2 ATS Qty U
     C                     Z-ADD*ZERO     P5D3AQ           Day 3 ATS Qty U
     C                     Z-ADD*ZERO     P5D4AQ           Day 4 ATS Qty U
     C                     Z-ADD*ZERO     P5D5AQ           Day 5 ATS Qty U
     C                     Z-ADD*ZERO     P5D6AQ           Day 6 ATS Qty U
     C                     Z-ADD*ZERO     P5D7AQ           Day 7 ATS Qty U
     C                     Z-ADD*ZERO     P5D8AQ           Day 8 ATS Qty U
     C                     Z-ADD*ZERO     P5D9AQ           Day 9 ATS Qty U
     C                     Z-ADD*ZERO     P5D1AT           Day 10 ATS Qty
     C                     Z-ADD*ZERO     P5D2AT           Day 11 ATS Qty
     C                     Z-ADD*ZERO     P5D3AT           Day 12 ATS Qty
     C                     Z-ADD*ZERO     P5D4AT           Day 13 ATS Qty
     C                     Z-ADD*ZERO     P5D5AT           Day 14 ATS Qty
     C                     Z-ADD*ZERO     P5D6AT           Day 15 ATS Qty
     C                     Z-ADD*ZERO     P5D7AT           Day 16 ATS Qty
     C                     Z-ADD*ZERO     P5D9AT           Day 17 ATS Qty
     C                     Z-ADD*ZERO     P5D1AS           Day 18 ATS Qty
     C                     Z-ADD*ZERO     P5D2AS           Day 19 ATS Qty
     C                     Z-ADD*ZERO     P5D3AS           Day 20 ATS Qty
     C                     Z-ADD*ZERO     P5D4AS           Day 21 ATS Qty
     C                     MOVEL*BLANK    P6QZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    P6PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P6BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P6BJNB           Bags Per Unit
     C                     Z-ADD*ZERO     P7JHDT           Date Mon USR
     C                     Z-ADD*ZERO     P8GINB           Day 1 Avail Tot
     C                     Z-ADD*ZERO     P8GJNB           Day 2 Avail Tot
     C                     Z-ADD*ZERO     P8GKNB           Day 3 Avail Tot
     C                     Z-ADD*ZERO     P8GLNB           Day 4 Avail Tot
     C                     Z-ADD*ZERO     P8GMNB           Day 5 Avail Tot
     C                     Z-ADD*ZERO     P8GNNB           Day 6 Avail Tot
     C                     Z-ADD*ZERO     P8GONB           Day 7 Avail Tot
     C                     Z-ADD*ZERO     P8IANB           Day 8 Avail Tot
     C                     Z-ADD*ZERO     P8IBNB           Day 9 Avail Tot
     C                     Z-ADD*ZERO     P8ICNB           Day 10 Avail To
     C                     Z-ADD*ZERO     P8IDNB           Day 11 Avail To
     C                     Z-ADD*ZERO     P8IENB           Day 12 Avail To
     C                     Z-ADD*ZERO     P8IFNB           Day 13 Avail To
     C                     Z-ADD*ZERO     P8IGNB           Day 14 Avail To
     C                     Z-ADD*ZERO     P8IHNB           Day 15 Avail To
     C                     Z-ADD*ZERO     P8IINB           Day 16 Avail To
     C                     Z-ADD*ZERO     P8IJNB           Day 17 Avail To
     C                     Z-ADD*ZERO     P8IKNB           Day 18 Avail To
     C                     Z-ADD*ZERO     P8INNB           Day 19 Avail To
     C                     Z-ADD*ZERO     P8IPNB           Day 20 Avail To
     C                     Z-ADD*ZERO     P8IQNB           Day 21 Avail To
     C                     MOVEL*BLANK    P9TOTX           Prod Date Alpha
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WABVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Primary/Load Sts USR
     C                     MOVEL*BLANK    WUW4ST  1
      * Define work field Load Size USR
     C                     Z-ADD*ZERO     WULDSZ  70
      * Define work field Warehouse Type USR
     C                     MOVEL*BLANK    WUR6ST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCIDSQ           Item Display Se
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Item Description
     C                     MOVEL*BLANK    WUGENA 30
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Pricing
     C                     MOVEL*BLANK    WUAICD  2
      * Define work field Production Date Control
     C                     MOVEL*BLANK    WUFZST  1
      * Define work field Catch Weight Status
     C                     MOVEL*BLANK    WUAVST  1
      * Define work field Record Status
     C                     MOVEL*BLANK    WUVSST  1
      * Define work field USR Day 1
     C                     Z-ADD*ZERO     WUFFDT  70
      * Define work field USR Day 2
     C                     Z-ADD*ZERO     WUE1DT  70
      * Define work field USR Day 3
     C                     Z-ADD*ZERO     WUE2DT  70
      * Define work field USR Day 4
     C                     Z-ADD*ZERO     WUE3DT  70
      * Define work field USR Day 5
     C                     Z-ADD*ZERO     WUE4DT  70
      * Define work field USR Day 6
     C                     Z-ADD*ZERO     WUE5DT  70
      * Define work field USR Day 7
     C                     Z-ADD*ZERO     WUE6DT  70
      * Define work field USR Day 8
     C                     Z-ADD*ZERO     WUFKDT  70
      * Define work field USR Day 9
     C                     Z-ADD*ZERO     WUFLDT  70
      * Define work field USR Day 10
     C                     Z-ADD*ZERO     WUFGDT  70
      * Define work field USR Day 11
     C                     Z-ADD*ZERO     WUFHDT  70
      * Define work field USR Day 12
     C                     Z-ADD*ZERO     WUFIDT  70
      * Define work field USR Day 13
     C                     Z-ADD*ZERO     WUFJDT  70
      * Define work field USR Day 14
     C                     Z-ADD*ZERO     WUHPDT  70
      * Define work field USR Day 15
     C                     Z-ADD*ZERO     WUHQDT  70
      * Define work field USR Day 16
     C                     Z-ADD*ZERO     WUHRDT  70
      * Define work field USR Day 17
     C                     Z-ADD*ZERO     WUHSDT  70
      * Define work field USR Day 18
     C                     Z-ADD*ZERO     WUHTDT  70
      * Define work field USR Day 19
     C                     Z-ADD*ZERO     WUHUDT  70
      * Define work field USR Day 20
     C                     Z-ADD*ZERO     WUHVDT  70
      * Define work field USR Day 21
     C                     Z-ADD*ZERO     WUHWDT  70
      * Define work field Day 1 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGHSX  1
      * Define work field Day 2 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGISX  1
      * Define work field Day 3 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGJSX  1
      * Define work field Day 4 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGKSX  1
      * Define work field Day 5 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGLSX  1
      * Define work field Day 6 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGMSX  1
      * Define work field Day 7 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGNSX  1
      * Define work field Day 8 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGOSX  1
      * Define work field Day 9 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGPSX  1
      * Define work field Day 10 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGQSX  1
      * Define work field Day 11 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGRSX  1
      * Define work field Day 12 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGSSX  1
      * Define work field Day 13 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGTSX  1
      * Define work field Day 14 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGUSX  1
      * Define work field Day 15 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGVSX  1
      * Define work field Day 16 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGWSX  1
      * Define work field Day 17 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGXSX  1
      * Define work field Day 18 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGYSX  1
      * Define work field Day 19 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGZSX  1
      * Define work field Day 20 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUG0SX  1
      * Define work field Day 21 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUG1SX  1
      * Define work field Order Hold Over  USR
     C                     Z-ADD*ZERO     WUOHLO  50
      * Define work field Order Hold Over Alloc USR
     C                     Z-ADD*ZERO     WUC8NX  50
      * Define work field Day 1 Inventory USR
     C                     Z-ADD*ZERO     WUD1IN  61
      * Define work field Day 2 Inventory USR
     C                     Z-ADD*ZERO     WUD2IN  61
      * Define work field Day 3 Inventory USR
     C                     Z-ADD*ZERO     WUD3IN  61
      * Define work field Day 4 Inventory USR
     C                     Z-ADD*ZERO     WUD4IN  61
      * Define work field Day 5 Inventory USR
     C                     Z-ADD*ZERO     WUD5IN  61
      * Define work field Day 6 Inventory USR
     C                     Z-ADD*ZERO     WUD6IN  61
      * Define work field Day 7 Inventory USR
     C                     Z-ADD*ZERO     WUD7IN  61
      * Define work field Day 8 Inventory USR
     C                     Z-ADD*ZERO     WUGCNX  61
      * Define work field Day 9 Inventory USR
     C                     Z-ADD*ZERO     WUGDNX  61
      * Define work field Day 10 Inventory USR
     C                     Z-ADD*ZERO     WUGENX  61
      * Define work field Day 11 Inventory USR
     C                     Z-ADD*ZERO     WUGFNX  61
      * Define work field Day 12 Inventory USR
     C                     Z-ADD*ZERO     WUGGNX  61
      * Define work field Day 13 Inventory USR
     C                     Z-ADD*ZERO     WUGHNX  61
      * Define work field Day 14 Inventory USR
     C                     Z-ADD*ZERO     WUGINX  61
      * Define work field Day 1 Production USR
     C                     Z-ADD*ZERO     WUD1PD  61
      * Define work field Day 2 Production USR
     C                     Z-ADD*ZERO     WUD2PD  61
      * Define work field Day 3 Production USR
     C                     Z-ADD*ZERO     WUD3PD  61
      * Define work field Day 4 Production USR
     C                     Z-ADD*ZERO     WUD4PD  61
      * Define work field Day 5 Production USR
     C                     Z-ADD*ZERO     WUD5PD  61
      * Define work field Day 6 Production USR
     C                     Z-ADD*ZERO     WUD6PD  61
      * Define work field Day 7 Production USR
     C                     Z-ADD*ZERO     WUD7PD  61
      * Define work field Day 8 Production USR
     C                     Z-ADD*ZERO     WUD8PD  61
      * Define work field Day 9 Production USR
     C                     Z-ADD*ZERO     WUD9PD  61
      * Define work field Day 10 Production USR
     C                     Z-ADD*ZERO     WUD1PR  61
      * Define work field Day 11 Production USR
     C                     Z-ADD*ZERO     WUD2PR  61
      * Define work field Day 12 Production USR
     C                     Z-ADD*ZERO     WUD3PR  61
      * Define work field Day 13 Production USR
     C                     Z-ADD*ZERO     WUD4PR  61
      * Define work field Day 14 Production USR
     C                     Z-ADD*ZERO     WUD5PR  61
      * Define work field Day 15 Production USR
     C                     Z-ADD*ZERO     WUD6PR  61
      * Define work field Day 16 Production USR
     C                     Z-ADD*ZERO     WUD7PR  61
      * Define work field Day 17 Production USR
     C                     Z-ADD*ZERO     WUD8PR  61
      * Define work field Day 18 Production USR
     C                     Z-ADD*ZERO     WURKNB  61
      * Define work field Day 19 Production USR
     C                     Z-ADD*ZERO     WUD1PT  61
      * Define work field Day 20 Production USR
     C                     Z-ADD*ZERO     WUD2PT  61
      * Define work field Day 21 Production USR
     C                     Z-ADD*ZERO     WUD3PT  61
      * Define work field Day 1 Sales USR
     C                     Z-ADD*ZERO     WUD1SL  61
      * Define work field Day 2 Sales USR
     C                     Z-ADD*ZERO     WUD2SL  61
      * Define work field Day 3 Sales USR
     C                     Z-ADD*ZERO     WUD3SL  61
      * Define work field Day 4 Sales USR
     C                     Z-ADD*ZERO     WUD4SL  61
      * Define work field Day 5 Sales USR
     C                     Z-ADD*ZERO     WUD5SL  61
      * Define work field Day 6 Sales USR
     C                     Z-ADD*ZERO     WUD6SL  61
      * Define work field Day 7 Sales USR
     C                     Z-ADD*ZERO     WUD7SL  61
      * Define work field Day 8 Sales USR
     C                     Z-ADD*ZERO     WUZ5NB  61
      * Define work field Day 9 Sales USR
     C                     Z-ADD*ZERO     WUD9SL  61
      * Define work field Day 10 Sales USR
     C                     Z-ADD*ZERO     WUDSLS  61
      * Define work field Day 11 Sales USR
     C                     Z-ADD*ZERO     WUD11S  61
      * Define work field Day 12 Sales USR
     C                     Z-ADD*ZERO     WUD12S  61
      * Define work field Day 13 Sales USR
     C                     Z-ADD*ZERO     WUD13S  61
      * Define work field Day 14 Sales USR
     C                     Z-ADD*ZERO     WUD14S  61
      * Define work field Day 15 Sales USR
     C                     Z-ADD*ZERO     WUD15S  61
      * Define work field Day 16 Sales USR
     C                     Z-ADD*ZERO     WUD16S  61
      * Define work field Day 17 Sales USR
     C                     Z-ADD*ZERO     WUD17S  61
      * Define work field Day 18 Sales USR
     C                     Z-ADD*ZERO     WUD18S  61
      * Define work field Day 19 Sales USR
     C                     Z-ADD*ZERO     WUD19S  61
      * Define work field Day 20 Sales USR
     C                     Z-ADD*ZERO     WUD20S  61
      * Define work field Day 21 Sales USR
     C                     Z-ADD*ZERO     WUD21S  61
      * Define work field Day 1 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD1SS  61
      * Define work field Day 2 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD2SS  61
      * Define work field Day 3 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD3SS  61
      * Define work field Day 4 Sched Shipments USR
     C                     Z-ADD*ZERO     WUVNNB  61
      * Define work field Day 5 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD5SS  61
      * Define work field Day 6 Sched Shipments USR
     C                     Z-ADD*ZERO     WUVWNB  61
      * Define work field Day 7 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD7SS  61
      * Define work field Day 8 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD8SS  61
      * Define work field Day 9 Sched Shipments USR
     C                     Z-ADD*ZERO     WUD9SS  61
      * Define work field Day 10 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD0SS  61
      * Define work field Day 11 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD1SH  61
      * Define work field Day 12 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD2SH  61
      * Define work field Day 13 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD3SH  61
      * Define work field Day 14 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD4SH  61
      * Define work field Day 15 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD5SH  61
      * Define work field Day 16 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD6SH  61
      * Define work field Day 17 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD7SH  61
      * Define work field Day 18 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI5NB  61
      * Define work field Day 19 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD9SH  61
      * Define work field Day 20 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD0SP  61
      * Define work field Day 21 Sched Shipment USR
     C                     Z-ADD*ZERO     WUD1SM  61
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*LOVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Quantity Inventory USR
     C                     Z-ADD*ZERO     WUQINV  61
      * Define work field Order Number
     C                     Z-ADD*ZERO     WUC4NB  70
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field OM Week
     C                     Z-ADD*ZERO     WUBZNB  30
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAIC3           Company Number
     C                     Z-ADD*ZERO     WFBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WFCQNB           Julian Date
     C                     Z-ADD*ZERO     WFESNB           Accounting Year
     C                     Z-ADD*ZERO     WFETNB           Accounting Peri
     C                     Z-ADD*ZERO     WFBZNB           OM Week
     C                     Z-ADD*ZERO     WFEINB           Week Number
     C                     Z-ADD*ZERO     WFAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WFOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WFNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WFNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WFOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WFOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGC4NB           Order Number
     C                     Z-ADD*ZERO     WGDPNB           Order Sequence
     C                     Z-ADD*ZERO     WGUENB           Order Secondary
     C                     Z-ADD*ZERO     WGJGDT           OD Production D
     C                     Z-ADD*ZERO     WGAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WGHGCD           Item Code
     C                     Z-ADD*ZERO     WGIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WGFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WGIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WGF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WGIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WGF4WG           OD Weight Unuse
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Define work field USR Work Field 1 CDE
     C                     MOVEL*BLANK    WUYJCD  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHAIC3           Company Number
     C                     Z-ADD*ZERO     WHELDT           Production Date
     C                     Z-ADD*ZERO     WHHGCD           Item Code
     C                     Z-ADD*ZERO     WHGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WHWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WHQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WHDJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WHF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WHWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WHD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WHDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WHB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WHWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WHPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WHSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WHB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WHD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WHCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WHEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WHCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WHE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WHD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WHOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WHCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WHUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WHCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WHF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WHBPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WHGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WHBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WHGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WHBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WHGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WHBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WHGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WHBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WHGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WHPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WHDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WHD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WHFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WHD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WHDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WHEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WHSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WHEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WHAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WHECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WHWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WHEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WHFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WHEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WHQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WHEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WHWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WHEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WHRGNB           Item Structure
     C                     Z-ADD*ZERO     WHRHNB           Item Structure
     C                     Z-ADD*ZERO     WHRINB           Item Structure
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WIAIC3           Company Number
     C                     Z-ADD*ZERO     WIC4NB           Order Number
     C                     Z-ADD*ZERO     WIDPNB           Order Sequence
     C                     Z-ADD*ZERO     WIUENB           Order Secondary
     C                     Z-ADD*ZERO     WIHGCD           Item Code
     C                     Z-ADD*ZERO     WIBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WICFC7           Order Group Cod
     C                     Z-ADD*ZERO     WIMAVA           Billing Detail
     C                     Z-ADD*ZERO     WIKDVA           Billing Detail
     C                     Z-ADD*ZERO     WIL8VA           Billing Detail
     C                     Z-ADD*ZERO     WIL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WIAYVA           Extended Amount
     C                     Z-ADD*ZERO     WIEXDT           Market Pricing
     C                     Z-ADD*ZERO     WIBZPR           Price Overage O
     C                     Z-ADD*ZERO     WIL6NB           Contract Number
     C                     Z-ADD*ZERO     WIGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WIR1NB           Rated Freight
     C                     Z-ADD*ZERO     WIAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WID0WG           Weight Ordered
     C                     Z-ADD*ZERO     WICCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WIAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WICBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WIATWG           Weight Shipped
     C                     Z-ADD*ZERO     WIAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WIAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WIAKPR           Unit Price
     C                     Z-ADD*ZERO     WIALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WIAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WIAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WIA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WIA5DT           Requested Ship
     C                     Z-ADD*ZERO     WIAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WIGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WIRGNB           Item Structure
     C                     Z-ADD*ZERO     WIRHNB           Item Structure
     C                     Z-ADD*ZERO     WIRINB           Item Structure
     C                     Z-ADD*ZERO     WICXDT           Date of Origina
     C                     Z-ADD*ZERO     WIDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WIB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WIA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WINTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WINUDT           Consumed Item C
     C                     Z-ADD*ZERO     WINVDT           Deadline Depart
     C                     Z-ADD*ZERO     WINWDT           OD Price Type R
     C                     Z-ADD*ZERO     WINXDT           OD Unused Date
     C                     Z-ADD*ZERO     WIBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WIBVTM           Price Code
     C                     Z-ADD*ZERO     WIBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WIBXTM           Substitution Li
     C                     Z-ADD*ZERO     WIBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WIH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WIH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WIH7NX           OD Item Target
     C                     Z-ADD*ZERO     WIH8NX           OD Minimum Unit
     C                     Z-ADD*ZERO     WIH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WIDVPR           Order Gate Pric
     C                     Z-ADD*ZERO     WIDWPR           OD Base MKT Ovr
     C                     Z-ADD*ZERO     WIDXPR           OD Unused Prc 3
     C                     Z-ADD*ZERO     WIDYPR           OD Unused Prc 4
     C                     Z-ADD*ZERO     WIDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WIGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WIGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WIGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WIPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WIRINY           Delv Ageing Day
     C                     Z-ADD*ZERO     WITIDT           Production Ovr
     C                     Z-ADD*ZERO     WITJDT           Production Ovr
     C                     Z-ADD*ZERO     WITKDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WITLDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WITMDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WIAATM           Job Time
     C                     Z-ADD*ZERO     WIAXDT           Job Date
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Warehouse Description
     C                     MOVEL*BLANK    WUF8NA 30
      * Define work field BLANK 1               USR
     C                     MOVEL*BLANK    WUJ1TX 25
      * Define work field Warehouse Code
     C                     MOVEL*BLANK    WUAJCD  3
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Week Number
     C                     Z-ADD*ZERO     WUEINB  20
      * Define work field Date Tue USR
     C                     Z-ADD*ZERO     WUJIDT  70
      * Define work field Date Wed USR
     C                     Z-ADD*ZERO     WUJJDT  70
      * Define work field Date Thu USR
     C                     Z-ADD*ZERO     WUJKDT  70
      * Define work field Date Fri USR
     C                     Z-ADD*ZERO     WUJLDT  70
      * Define work field Date Sat USR
     C                     Z-ADD*ZERO     WUJMDT  70
      * Define work field Date Sun USR
     C                     Z-ADD*ZERO     WUJNDT  70
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Define work field Condition Desc. 1  USR
     C                     MOVEL*BLANK    WUHLTX 25
      * Define work field Condition Desc. 2  USR
     C                     MOVEL*BLANK    WUHMTX 25
      * Define work field Condition Desc. 3  USR
     C                     MOVEL*BLANK    WUHNTX 25
      * Define work field Condition Desc. 4  USR
     C                     MOVEL*BLANK    WUHOTX 25
      * Define work field Condition Desc. 5  USR
     C                     MOVEL*BLANK    WUHPTX 25
      * Define work field Condition Desc. 6  USR
     C                     MOVEL*BLANK    WUHQTX 25
      * Define work field Condition Desc. 7  USR
     C                     MOVEL*BLANK    WUHRTX 25
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002  3
      * Define local variables for subroutine SBRVGN.
     C                     MOVEL*BLANK    WL0003  3
     C                     MOVEL*BLANK    WL0004 30
     C                     MOVEL*BLANK    WL0005  1
     C                     MOVEL*BLANK    WL0006  2
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0007  3
     C                     MOVEL*BLANK    WL0008 30
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0009  3
     C                     Z-ADD*ZERO     WL0010  30
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0011  30
     C                     MOVEL*BLANK    WL0012  3
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014  70
     C                     Z-ADD*ZERO     WL0015  70
     C                     Z-ADD*ZERO     WL0016  70
     C                     Z-ADD*ZERO     WL0017  70
     C                     Z-ADD*ZERO     WL0018  70
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020  70
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     Z-ADD*ZERO     WL0023  70
     C                     Z-ADD*ZERO     WL0024  70
     C                     Z-ADD*ZERO     WL0025  70
     C                     Z-ADD*ZERO     WL0026  70
     C                     Z-ADD*ZERO     WL0027  70
     C                     Z-ADD*ZERO     WL0028  70
     C                     Z-ADD*ZERO     WL0029  70
     C                     Z-ADD*ZERO     WL0030  70
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032  70
     C                     Z-ADD*ZERO     WL0033  70
     C                     Z-ADD*ZERO     WL0034  61
     C                     Z-ADD*ZERO     WL0035  61
     C                     Z-ADD*ZERO     WL0036  61
     C                     Z-ADD*ZERO     WL0037  61
     C                     Z-ADD*ZERO     WL0038  61
     C                     Z-ADD*ZERO     WL0039  61
     C                     Z-ADD*ZERO     WL0040  61
     C                     Z-ADD*ZERO     WL0041  61
     C                     Z-ADD*ZERO     WL0042  61
     C                     Z-ADD*ZERO     WL0043  61
     C                     Z-ADD*ZERO     WL0044  61
     C                     Z-ADD*ZERO     WL0045  61
     C                     Z-ADD*ZERO     WL0046  61
     C                     Z-ADD*ZERO     WL0047  61
     C                     Z-ADD*ZERO     WL0048  61
     C                     Z-ADD*ZERO     WL0049  61
     C                     Z-ADD*ZERO     WL0050  61
     C                     Z-ADD*ZERO     WL0051  61
     C                     Z-ADD*ZERO     WL0052  61
     C                     Z-ADD*ZERO     WL0053  61
     C                     Z-ADD*ZERO     WL0054  61
     C                     MOVEL*BLANK    WL0055  3
     C                     MOVEL*BLANK    WL0056  2
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0057  30
     C                     Z-ADD*ZERO     WL0058  70
     C                     MOVEL*BLANK    WL0059 30
     C                     MOVEL*BLANK    WL0060 30
     C                     MOVEL*BLANK    WL0061  2
     C                     Z-ADD*ZERO     WL0062  94
     C                     MOVEL*BLANK    WL0063  1
     C                     MOVEL*BLANK    WL0064  2
     C                     Z-ADD*ZERO     WL0065  94
     C                     MOVEL*BLANK    WL0066  1
     C                     MOVEL*BLANK    WL0067  2
     C                     MOVEL*BLANK    WL0068  2
     C                     Z-ADD*ZERO     WL0069 112
     C                     MOVEL*BLANK    WL0070  1
     C                     MOVEL*BLANK    WL0071  1
     C                     Z-ADD*ZERO     WL0072  52
     C                     MOVEL*BLANK    WL0073  2
     C                     MOVEL*BLANK    WL0074  1
     C                     Z-ADD*ZERO     WL0075  70
     C                     Z-ADD*ZERO     WL0076  70
     C                     MOVEL*BLANK    WL0077  1
      * Define local variables for subroutine SJRVGN.
     C                     MOVEL*BLANK    WL0078  3
     C                     MOVEL*BLANK    WL0079  3
     C                     MOVEL*BLANK    WL0080  1
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0081  30
     C                     Z-ADD*ZERO     WL0082  70
     C                     MOVEL*BLANK    WL0083  3
     C                     Z-ADD*ZERO     WL0084  70
     C                     Z-ADD*ZERO     WL0085  70
     C                     Z-ADD*ZERO     WL0086  70
     C                     Z-ADD*ZERO     WL0087  70
     C                     Z-ADD*ZERO     WL0088  70
     C                     Z-ADD*ZERO     WL0089  70
     C                     Z-ADD*ZERO     WL0090  70
     C                     Z-ADD*ZERO     WL0091  70
     C                     Z-ADD*ZERO     WL0092  70
     C                     Z-ADD*ZERO     WL0093  70
     C                     Z-ADD*ZERO     WL0094  70
     C                     Z-ADD*ZERO     WL0095  70
     C                     Z-ADD*ZERO     WL0096  70
     C                     Z-ADD*ZERO     WL0097  70
     C                     Z-ADD*ZERO     WL0098  70
     C                     Z-ADD*ZERO     WL0099  70
     C                     Z-ADD*ZERO     WL0100  70
     C                     Z-ADD*ZERO     WL0101  70
     C                     Z-ADD*ZERO     WL0102  70
     C                     Z-ADD*ZERO     WL0103  70
     C                     Z-ADD*ZERO     WL0104  70
     C                     Z-ADD*ZERO     WL0105  70
     C                     Z-ADD*ZERO     WL0106  70
     C                     Z-ADD*ZERO     WL0107  70
     C                     Z-ADD*ZERO     WL0108  70
     C                     Z-ADD*ZERO     WL0109  70
     C                     Z-ADD*ZERO     WL0110  70
     C                     Z-ADD*ZERO     WL0111  70
     C                     Z-ADD*ZERO     WL0112  70
     C                     Z-ADD*ZERO     WL0113  70
     C                     Z-ADD*ZERO     WL0114  70
     C                     Z-ADD*ZERO     WL0115  70
     C                     Z-ADD*ZERO     WL0116  70
     C                     Z-ADD*ZERO     WL0117  70
     C                     Z-ADD*ZERO     WL0118  70
     C                     Z-ADD*ZERO     WL0119  70
     C                     Z-ADD*ZERO     WL0120  70
     C                     Z-ADD*ZERO     WL0121  70
     C                     Z-ADD*ZERO     WL0122  70
     C                     Z-ADD*ZERO     WL0123  70
     C                     Z-ADD*ZERO     WL0124  70
     C                     Z-ADD*ZERO     WL0125  70
     C                     Z-ADD*ZERO     WL0126  70
     C                     Z-ADD*ZERO     WL0127  61
     C                     Z-ADD*ZERO     WL0128  61
     C                     Z-ADD*ZERO     WL0129  61
     C                     Z-ADD*ZERO     WL0130  61
     C                     Z-ADD*ZERO     WL0131  61
     C                     Z-ADD*ZERO     WL0132  61
     C                     Z-ADD*ZERO     WL0133  61
     C                     Z-ADD*ZERO     WL0134  61
     C                     Z-ADD*ZERO     WL0135  61
     C                     Z-ADD*ZERO     WL0136  61
     C                     Z-ADD*ZERO     WL0137  61
     C                     Z-ADD*ZERO     WL0138  61
     C                     Z-ADD*ZERO     WL0139  61
     C                     Z-ADD*ZERO     WL0140  61
     C                     Z-ADD*ZERO     WL0141  61
     C                     Z-ADD*ZERO     WL0142  61
     C                     Z-ADD*ZERO     WL0143  61
     C                     Z-ADD*ZERO     WL0144  61
     C                     Z-ADD*ZERO     WL0145  61
     C                     Z-ADD*ZERO     WL0146  61
     C                     Z-ADD*ZERO     WL0147  61
     C                     Z-ADD*ZERO     WL0148 112
     C                     Z-ADD*ZERO     WL0149  52
     C                     MOVEL*BLANK    WL0150  1
     C                     Z-ADD*ZERO     WL0151  70
     C                     Z-ADD*ZERO     WL0152  70
      * Define local variables for subroutine SNCRRC.
     C                     Z-ADD*ZERO     WL0153  70
     C                     Z-ADD*ZERO     WL0154  70
     C                     Z-ADD*ZERO     WL0155  61
     C                     Z-ADD*ZERO     WL0156  61
     C                     Z-ADD*ZERO     WL0157  61
     C                     Z-ADD*ZERO     WL0158  61
     C                     Z-ADD*ZERO     WL0159  61
     C                     MOVEL*BLANK    WL0160  1
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0161  30
     C                     Z-ADD*ZERO     WL0162  70
     C                     Z-ADD*ZERO     WL0163  70
     C                     MOVEL*BLANK    WL0164  3
     C                     Z-ADD*ZERO     WL0165  70
     C                     Z-ADD*ZERO     WL0166  70
     C                     MOVEL*BLANK    WL0167  3
     C                     MOVEL*BLANK    WL0168  1
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0169  30
     C                     Z-ADD*ZERO     WL0170  70
     C                     MOVEL*BLANK    WL0171  1
     C                     MOVEL*BLANK    WL0172  1
      * Define local variables for subroutine SQRVGN.
     C                     Z-ADD*ZERO     WL0173  30
     C                     MOVEL*BLANK    WL0174  1
     C                     Z-ADD*ZERO     WL0175  70
     C                     Z-ADD*ZERO     WL0176  70
     C                     MOVEL*BLANK    WL0177  3
     C                     Z-ADD*ZERO     WL0178  70
      * Define local variables for subroutine SRRVGN.
     C                     Z-ADD*ZERO     WL0179  30
     C                     Z-ADD*ZERO     WL0180  70
     C                     Z-ADD*ZERO     WL0181  50
     C                     Z-ADD*ZERO     WL0182  40
     C                     Z-ADD*ZERO     WL0183  20
     C                     Z-ADD*ZERO     WL0184  30
     C                     MOVEL*BLANK    WL0185  1
     C                     Z-ADD*ZERO     WL0186  20
      * Define local variables for subroutine SSRVGN.
     C                     Z-ADD*ZERO     WL0187  30
     C                     Z-ADD*ZERO     WL0188  70
     C                     Z-ADD*ZERO     WL0189  40
     C                     Z-ADD*ZERO     WL0190  20
     C                     MOVEL*BLANK    WL0191  1
     C                     Z-ADD*ZERO     WL0192  20
      * Define local variables for subroutine STRVGN.
     C                     Z-ADD*ZERO     WL0193  30
     C                     Z-ADD*ZERO     WL0194  70
     C                     Z-ADD*ZERO     WL0195  30
     C                     Z-ADD*ZERO     WL0196  30
     C                     Z-ADD*ZERO     WL0197 112
      * Define local variables for subroutine SURVGN.
     C                     Z-ADD*ZERO     WL0198  70
     C                     Z-ADD*ZERO     WL0199  50
     C                     Z-ADD*ZERO     WL0200  70
     C                     Z-ADD*ZERO     WL0201 112
     C                     Z-ADD*ZERO     WL0202 112
     C                     Z-ADD*ZERO     WL0203 112
     C                     Z-ADD*ZERO     WL0204  70
     C                     MOVEL*BLANK    WL0205  1
     C                     Z-ADD*ZERO     WL0206  70
     C                     MOVEL*BLANK    WL0207  1
      * Define local variables for subroutine SVCHRC.
     C                     Z-ADD*ZERO     WL0208  70
     C                     Z-ADD*ZERO     WL0209  61
     C                     Z-ADD*ZERO     WL0210  61
      * Define local variables for subroutine SXCHRC.
     C                     Z-ADD*ZERO     WL0211  70
     C                     Z-ADD*ZERO     WL0212  61
     C                     Z-ADD*ZERO     WL0213  61
     C                     MOVEL*BLANK    WL0214  1
      * Define local variables for subroutine SYRVGN.
     C                     Z-ADD*ZERO     WL0215  70
     C                     Z-ADD*ZERO     WL0216  70
      * Define local variables for subroutine SZRVGN.
     C                     Z-ADD*ZERO     WL0217  70
     C                     Z-ADD*ZERO     WL0218  50
     C                     Z-ADD*ZERO     WL0219  70
     C                     Z-ADD*ZERO     WL0220 112
     C                     Z-ADD*ZERO     WL0221 112
     C                     Z-ADD*ZERO     WL0222 112
     C                     Z-ADD*ZERO     WL0223  70
     C                     MOVEL*BLANK    WL0224  1
      * Define local variables for subroutine TARVGN.
     C                     Z-ADD*ZERO     WL0225  70
     C                     Z-ADD*ZERO     WL0226 112
      * Define local variables for subroutine TBRVGN.
     C                     Z-ADD*ZERO     WL0227  30
     C                     Z-ADD*ZERO     WL0228  70
     C                     MOVEL*BLANK    WL0229  3
     C                     Z-ADD*ZERO     WL0230  70
     C                     Z-ADD*ZERO     WL0231  70
      * Define local variables for subroutine TERVGN.
     C                     Z-ADD*ZERO     WL0232  70
     C                     Z-ADD*ZERO     WL0233  61
     C                     Z-ADD*ZERO     WL0234  61
     C                     Z-ADD*ZERO     WL0235  61
     C                     MOVEL*BLANK    WL0236  1
      * Define local variables for subroutine TFRVGN.
     C                     Z-ADD*ZERO     WL0237  30
     C                     Z-ADD*ZERO     WL0238  70
     C                     MOVEL*BLANK    WL0239  3
     C                     MOVEL*BLANK    WL0240  1
      * Define local variables for subroutine THRVGN.
     C                     Z-ADD*ZERO     WL0241  30
     C                     MOVEL*BLANK    WL0242  1
     C                     Z-ADD*ZERO     WL0243  70
     C                     Z-ADD*ZERO     WL0244  70
     C                     MOVEL*BLANK    WL0245  3
     C                     Z-ADD*ZERO     WL0246  92
     C                     Z-ADD*ZERO     WL0247  70
     C                     Z-ADD*ZERO     WL0248  92
     C                     Z-ADD*ZERO     WL0249  70
     C                     Z-ADD*ZERO     WL0250  92
     C                     Z-ADD*ZERO     WL0251  70
     C                     Z-ADD*ZERO     WL0252  92
     C                     Z-ADD*ZERO     WL0253  70
     C                     Z-ADD*ZERO     WL0254  92
     C                     Z-ADD*ZERO     WL0255  70
     C                     Z-ADD*ZERO     WL0256  92
     C                     Z-ADD*ZERO     WL0257  92
      * Define local variables for subroutine TIRVGN.
     C                     Z-ADD*ZERO     WL0258  30
     C                     Z-ADD*ZERO     WL0259  70
     C                     MOVEL*BLANK    WL0260  3
     C                     Z-ADD*ZERO     WL0261  70
     C                     Z-ADD*ZERO     WL0262 112
     C                     Z-ADD*ZERO     WL0263 112
      * Define local variables for subroutine TJRVGN.
     C                     Z-ADD*ZERO     WL0264  30
     C                     Z-ADD*ZERO     WL0265  70
     C                     MOVEL*BLANK    WL0266  3
     C                     Z-ADD*ZERO     WL0267  70
     C                     Z-ADD*ZERO     WL0268  70
     C                     Z-ADD*ZERO     WL0269  70
     C                     Z-ADD*ZERO     WL0270  70
     C                     Z-ADD*ZERO     WL0271  70
     C                     Z-ADD*ZERO     WL0272  70
     C                     Z-ADD*ZERO     WL0273  70
     C                     Z-ADD*ZERO     WL0274  70
     C                     Z-ADD*ZERO     WL0275  70
     C                     Z-ADD*ZERO     WL0276  70
     C                     Z-ADD*ZERO     WL0277  70
     C                     Z-ADD*ZERO     WL0278  70
     C                     Z-ADD*ZERO     WL0279  70
     C                     Z-ADD*ZERO     WL0280  70
     C                     Z-ADD*ZERO     WL0281  70
     C                     Z-ADD*ZERO     WL0282  70
     C                     Z-ADD*ZERO     WL0283  70
     C                     Z-ADD*ZERO     WL0284  70
     C                     Z-ADD*ZERO     WL0285  70
     C                     Z-ADD*ZERO     WL0286  70
     C                     Z-ADD*ZERO     WL0287  70
     C                     Z-ADD*ZERO     WL0288  70
     C                     Z-ADD*ZERO     WL0289  70
     C                     Z-ADD*ZERO     WL0290  70
     C                     Z-ADD*ZERO     WL0291  70
     C                     Z-ADD*ZERO     WL0292  70
     C                     Z-ADD*ZERO     WL0293  70
     C                     Z-ADD*ZERO     WL0294  70
     C                     Z-ADD*ZERO     WL0295  70
     C                     Z-ADD*ZERO     WL0296  70
     C                     Z-ADD*ZERO     WL0297  70
     C                     Z-ADD*ZERO     WL0298  70
     C                     Z-ADD*ZERO     WL0299  70
     C                     Z-ADD*ZERO     WL0300  70
     C                     Z-ADD*ZERO     WL0301  70
     C                     Z-ADD*ZERO     WL0302  70
     C                     Z-ADD*ZERO     WL0303  70
     C                     Z-ADD*ZERO     WL0304  70
     C                     Z-ADD*ZERO     WL0305  70
     C                     Z-ADD*ZERO     WL0306  70
     C                     Z-ADD*ZERO     WL0307  70
     C                     Z-ADD*ZERO     WL0308  70
     C                     Z-ADD*ZERO     WL0309  70
     C                     Z-ADD*ZERO     WL0310  61
     C                     Z-ADD*ZERO     WL0311  61
     C                     Z-ADD*ZERO     WL0312  61
     C                     Z-ADD*ZERO     WL0313  61
     C                     Z-ADD*ZERO     WL0314  61
     C                     Z-ADD*ZERO     WL0315  61
     C                     Z-ADD*ZERO     WL0316  61
     C                     Z-ADD*ZERO     WL0317  61
     C                     Z-ADD*ZERO     WL0318  61
     C                     Z-ADD*ZERO     WL0319  61
     C                     Z-ADD*ZERO     WL0320  61
     C                     Z-ADD*ZERO     WL0321  61
     C                     Z-ADD*ZERO     WL0322  61
     C                     Z-ADD*ZERO     WL0323  61
     C                     Z-ADD*ZERO     WL0324  61
     C                     Z-ADD*ZERO     WL0325  61
     C                     Z-ADD*ZERO     WL0326  61
     C                     Z-ADD*ZERO     WL0327  61
     C                     Z-ADD*ZERO     WL0328  61
     C                     Z-ADD*ZERO     WL0329  61
     C                     Z-ADD*ZERO     WL0330  61
     C                     Z-ADD*ZERO     WL0331  61
     C                     Z-ADD*ZERO     WL0332  61
     C                     Z-ADD*ZERO     WL0333  61
     C                     Z-ADD*ZERO     WL0334  61
     C                     Z-ADD*ZERO     WL0335  61
     C                     Z-ADD*ZERO     WL0336  61
     C                     Z-ADD*ZERO     WL0337  61
     C                     Z-ADD*ZERO     WL0338  61
     C                     Z-ADD*ZERO     WL0339  61
     C                     Z-ADD*ZERO     WL0340  61
     C                     Z-ADD*ZERO     WL0341  61
     C                     Z-ADD*ZERO     WL0342  61
     C                     Z-ADD*ZERO     WL0343  61
     C                     Z-ADD*ZERO     WL0344  61
     C                     Z-ADD*ZERO     WL0345  61
     C                     Z-ADD*ZERO     WL0346  61
     C                     Z-ADD*ZERO     WL0347  61
     C                     Z-ADD*ZERO     WL0348  61
     C                     Z-ADD*ZERO     WL0349  61
     C                     Z-ADD*ZERO     WL0350  61
     C                     Z-ADD*ZERO     WL0351  61
     C                     Z-ADD*ZERO     WL0352  61
     C                     Z-ADD*ZERO     WL0353  61
     C                     Z-ADD*ZERO     WL0354  61
     C                     Z-ADD*ZERO     WL0355  61
     C                     Z-ADD*ZERO     WL0356  61
     C                     Z-ADD*ZERO     WL0357  61
     C                     Z-ADD*ZERO     WL0358  61
     C                     Z-ADD*ZERO     WL0359  61
     C                     Z-ADD*ZERO     WL0360  61
     C                     Z-ADD*ZERO     WL0361  61
     C                     Z-ADD*ZERO     WL0362  61
     C                     Z-ADD*ZERO     WL0363  61
     C                     Z-ADD*ZERO     WL0364  61
     C                     Z-ADD*ZERO     WL0365  61
     C                     Z-ADD*ZERO     WL0366  61
     C                     Z-ADD*ZERO     WL0367  61
     C                     Z-ADD*ZERO     WL0368  61
     C                     Z-ADD*ZERO     WL0369  61
     C                     Z-ADD*ZERO     WL0370  61
     C                     Z-ADD*ZERO     WL0371  61
     C                     Z-ADD*ZERO     WL0372  61
     C                     Z-ADD*ZERO     WL0373  61
     C                     Z-ADD*ZERO     WL0374  61
     C                     Z-ADD*ZERO     WL0375  61
     C                     Z-ADD*ZERO     WL0376  61
     C                     Z-ADD*ZERO     WL0377  61
     C                     Z-ADD*ZERO     WL0378  61
     C                     Z-ADD*ZERO     WL0379  61
     C                     Z-ADD*ZERO     WL0380  61
     C                     Z-ADD*ZERO     WL0381  61
     C                     Z-ADD*ZERO     WL0382  61
     C                     Z-ADD*ZERO     WL0383  61
     C                     Z-ADD*ZERO     WL0384  61
     C                     Z-ADD*ZERO     WL0385  61
     C                     Z-ADD*ZERO     WL0386  61
     C                     Z-ADD*ZERO     WL0387  61
     C                     Z-ADD*ZERO     WL0388  61
     C                     Z-ADD*ZERO     WL0389  61
     C                     Z-ADD*ZERO     WL0390  61
     C                     Z-ADD*ZERO     WL0391  61
     C                     Z-ADD*ZERO     WL0392  61
     C                     Z-ADD*ZERO     WL0393  61
     C                     Z-ADD*ZERO     WL0394  61
     C                     Z-ADD*ZERO     WL0395  61
     C                     Z-ADD*ZERO     WL0396  61
     C                     Z-ADD*ZERO     WL0397  61
     C                     Z-ADD*ZERO     WL0398  61
     C                     Z-ADD*ZERO     WL0399  61
     C                     MOVEL*BLANK    WL0400  1
     C                     Z-ADD*ZERO     WL0401  70
     C                     Z-ADD*ZERO     WL0402  61
     C                     Z-ADD*ZERO     WL0403  61
     C                     Z-ADD*ZERO     WL0404  61
     C                     Z-ADD*ZERO     WL0405  61
     C                     Z-ADD*ZERO     WL0406  61
     C                     Z-ADD*ZERO     WL0407  61
     C                     Z-ADD*ZERO     WL0408  61
     C                     Z-ADD*ZERO     WL0409  61
     C                     Z-ADD*ZERO     WL0410  61
     C                     Z-ADD*ZERO     WL0411  61
     C                     Z-ADD*ZERO     WL0412  61
     C                     Z-ADD*ZERO     WL0413  61
     C                     Z-ADD*ZERO     WL0414  61
     C                     Z-ADD*ZERO     WL0415  61
     C                     Z-ADD*ZERO     WL0416  61
     C                     Z-ADD*ZERO     WL0417  61
     C                     Z-ADD*ZERO     WL0418  61
     C                     Z-ADD*ZERO     WL0419  61
     C                     Z-ADD*ZERO     WL0420  61
     C                     Z-ADD*ZERO     WL0421  61
     C                     Z-ADD*ZERO     WL0422  61
     C                     MOVEL*BLANK    WL0423  1
     C                     MOVEL*BLANK    WL0424  2
     C                     Z-ADD*ZERO     WL0425 112
     C                     Z-ADD*ZERO     WL0426  52
     C                     MOVEL*BLANK    WL0427  1
     C                     Z-ADD*ZERO     WL0428  70
     C                     Z-ADD*ZERO     WL0429  70
      * Define local variables for subroutine TKRVGN.
     C                     Z-ADD*ZERO     WL0430  30
     C                     Z-ADD*ZERO     WL0431  70
     C                     MOVEL*BLANK    WL0432  3
     C                     Z-ADD*ZERO     WL0433  70
     C                     Z-ADD*ZERO     WL0434 112
     C                     Z-ADD*ZERO     WL0435 112
     C                     MOVEL*BLANK    WL0436  1
      * Define local variables for subroutine TSRVGN.
     C                     MOVEL*BLANK    WL0437 10
     C                     MOVEL*BLANK    WL0438  6
     C                     Z-ADD*ZERO     WL0439  30
     C                     MOVEL*BLANK    WL0440  3
      * Define local variables for subroutine TVRVGN.
     C                     Z-ADD*ZERO     WL0441  30
     C                     Z-ADD*ZERO     WL0442  70
     C                     Z-ADD*ZERO     WL0443  40
     C                     Z-ADD*ZERO     WL0444  20
      * Define local variables for subroutine TWRVGN.
     C                     Z-ADD*ZERO     WL0445  30
     C                     Z-ADD*ZERO     WL0446  40
     C                     Z-ADD*ZERO     WL0447  20
     C                     Z-ADD*ZERO     WL0448  70
     C                     Z-ADD*ZERO     WL0449  70
     C                     Z-ADD*ZERO     WL0450  70
     C                     Z-ADD*ZERO     WL0451  70
     C                     Z-ADD*ZERO     WL0452  70
     C                     Z-ADD*ZERO     WL0453  70
     C                     Z-ADD*ZERO     WL0454  70
     C                     MOVEL*BLANK    WL0455  1
      * Define local work field Email Address
     C                     MOVEL*BLANK    YL0001 50
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0003  70
      * Define local work field Order Scheduled Today USR
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Status Flag 17 Y/N
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Status - Y or N
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     YL0008 112
      * Define local work field Quantity Scheduled SUM
     C                     Z-ADD*ZERO     YL0009 112
      * Define local work field Plan Production Sts
     C                     MOVEL*BLANK    YL0010  1
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0011 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0012 112
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0013  1
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0014  1
      * Define local work field OD Weight Unused 1
     C                     Z-ADD*ZERO     YL0015 112
      * Define local work field Quantity on Hold     USR
     C                     Z-ADD*ZERO     YL0016 112
      * Define local work field Weight Total Need USR
     C                     Z-ADD*ZERO     YL0017  92
      * Define local work field Week Number
     C                     Z-ADD*ZERO     YL0018  20
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0019  1
      * Define local work field Component Item Code
     C                     Z-ADD*ZERO     YL0020  70
      * Define local work field Production Warehouse
     C                     MOVEL*BLANK    YL0021  3
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0022  30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0023  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0024  3
      * Define local work field Accounting Year Code
     C                     Z-ADD*ZERO     YL0025  40
      * Define local work field CMDKEY Line 1 130 Char
     C                     MOVEL*BLANK    YL0026130
      * Define local work field CMDKEY Line 2 130 Char
     C                     MOVEL*BLANK    YL0027130
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD12        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
     C                     Z-ADD9999999   W0SLM            *Scan limit
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL'P/S'     P2DNCD           Application Cod
      *
     C                     MOVEL*BLANK    WN0702 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0702           User Profile Na
      *
     C                     MOVEL*BLANK    WN0703 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR TRRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0702    ZA0053           User Profile Na
     C                     MOVELP2DNCD    ZA0054           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0703    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0702    WL0437    P      User Profile Na
     C                     MOVELP2DNCD    WL0438    P      Application Cod
     C                     EXSR TSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0439    WUAIC3           Company Number
     C                     MOVELWL0440    YL0024    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0703    WL0437    P      User Profile Na
     C                     MOVELP2DNCD    WL0438    P      Application Cod
     C                     EXSR TSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0439    WUAIC3           Company Number
     C                     MOVELWL0440    YL0024    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0024    WUAJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0702    ZA0055           User Profile Na
     C                     MOVELP2DNCD    ZA0056           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0023    IFNE *ZERO                      *IF
     C                     Z-ADDYL0023    WUAIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0024    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           WUAJCD    PARM *BLANK    WQ1463  3        Warehouse Code
     C                     PARM YL0023    WQ1464  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR TTRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * ** Put par.co# on the screen, if zeros, use co# from user profile
      * CASE: PAR.Company Number is not equal to zero
     C           P2AIC3    IFNE *ZERO                      *IF
     C                     Z-ADDP2AIC3    #2AIC3           Company Number
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUAIC3    #2AIC3           Company Number
     C                     Z-ADDWUAIC3    P2AIC3           Company Number
     C                     END                             *FI
      * ** Put par whse on the screen, if blank, use whse from user profi
      * CASE: PAR.Warehouse Code PASS   USR is Warehouse Code not Blank
     C           P3T3CD    IFNE *BLANK                     *IF
     C                     MOVELP3T3CD    #CAJCD           Warehouse Code
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * ** get whse code using co# or else from security parms
      * CASE: CTL.Company Number is not equal to zero
     C           #2AIC3    IFNE *ZERO                      *IF
      * Rtv Prd WHS w/AcctCo  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Accounting Comp
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #CAJCD    P      Production Ware
     C                     MOVEL#CAJCD    P2AJCD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP2AJCD    #CAJCD           Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     MOVEL'N'       P3WUST           PRT Night Queue
     C                     Z-ADD1         P4EINB           Week Number
      * RTV Mon-Sat Dates      IF
      * Rtv Week Number       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0441           Company Number
     C                     Z-ADD##JDT     WL0442           Post to G/L Dat
     C                     EXSR TVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0443    YL0025           Accounting Year
     C                     Z-ADDWL0444    WUEINB           Week Number
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0445           Company Number
     C                     Z-ADDYL0025    WL0446           Accounting Year
     C                     Z-ADDWUEINB    WL0447           Week Number
     C                     MOVEL'Y'       WL0455    P      First Time Flag
     C                     EXSR TWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0448    P7JHDT           Date Mon USR
     C                     Z-ADDWL0449    WUJIDT           Date Tue USR
     C                     Z-ADDWL0450    WUJJDT           Date Wed USR
     C                     Z-ADDWL0451    WUJKDT           Date Thu USR
     C                     Z-ADDWL0452    WUJLDT           Date Fri USR
     C                     Z-ADDWL0453    WUJMDT           Date Sat USR
     C                     Z-ADDWL0454    WUJNDT           Date Sun USR
      * CASE: If any of the dates are zero
      *  - c1 OR c2 OR c3 OR c4 OR c5 OR c6
      *   |- c1    : PAR.Date Mon USR EQ WRK.ZERO
      *   |- c2    : PAR.Date Tue USR EQ WRK.ZERO
      *   |- c3    : PAR.Date Wed USR EQ WRK.ZERO
      *   |- c4    : PAR.Date Thu USR EQ WRK.ZERO
      *   |- c5    : PAR.Date Fri USR EQ WRK.ZERO
      *   |- c6    : PAR.Date Sat USR EQ WRK.ZERO
      *   '-
     C           P7JHDT    IFEQ WUW0NB                     *IF
     C           WUJIDT    OREQ WUW0NB                     *OR
     C           WUJJDT    OREQ WUW0NB                     *OR
     C           WUJKDT    OREQ WUW0NB                     *OR
     C           WUJLDT    OREQ WUW0NB                     *OR
     C           WUJMDT    OREQ WUW0NB                     *OR
      * And the Week is 52 or 53
      * CASE: PAR.Week Number is Year End
     C           WUEINB    IFGE 52                         *IF
     C           WUEINB    ANDLE53
     C                     ADD  1         YL0025           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0445           Company Number
     C                     Z-ADDYL0025    WL0446           Accounting Year
     C                     Z-ADD1         WL0447           Week Number
     C                     MOVEL'N'       WL0455    P      First Time Flag
     C                     EXSR TWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0448    P7JHDT           Date Mon USR
     C                     Z-ADDWL0449    WUJIDT           Date Tue USR
     C                     Z-ADDWL0450    WUJJDT           Date Wed USR
     C                     Z-ADDWL0451    WUJKDT           Date Thu USR
     C                     Z-ADDWL0452    WUJLDT           Date Fri USR
     C                     Z-ADDWL0453    WUJMDT           Date Sat USR
     C                     Z-ADDWL0454    WUJNDT           Date Sun USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  -1        YL0025           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP2AIC3    WL0445           Company Number
     C                     Z-ADDYL0025    WL0446           Accounting Year
     C                     Z-ADD53        WL0447           Week Number
     C                     MOVEL'N'       WL0455    P      First Time Flag
     C                     EXSR TWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0448    P7JHDT           Date Mon USR
     C                     Z-ADDWL0449    WUJIDT           Date Tue USR
     C                     Z-ADDWL0450    WUJJDT           Date Wed USR
     C                     Z-ADDWL0451    WUJKDT           Date Thu USR
     C                     Z-ADDWL0452    WUJLDT           Date Fri USR
     C                     Z-ADDWL0453    WUJMDT           Date Sat USR
     C                     Z-ADDWL0454    WUJNDT           Date Sun USR
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Ats ShpDte-21+Sun RT - Calendar  * 
     C                     EXSR TXRVGN
     C                     MOVEL'N'       P5DXSX           Display Flag 1
     C                     MOVEL'1'       ZZSFM            *Subfile mode
      * Format Command Key Text
      * Setup message data for message
      * Retrieve message RTV WW Product Avail 1
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR4140' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           YL0026    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Setup message data for message
      * Retrieve message RTV WW Product Avail 2
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR4141' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C           YL0027    PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      * Screen 132 Wide 2 CMDLN - *Standard header/footer  * 
     C                     MOVELYL0026    ##VIT1
     C                     MOVELYL0027    ##VJT1
      * ** Change log and comments
      * ** 07/24/09  FP1054   if plan prod is NO, get inv sched from OD
      * ** 05/20/09  FP1054   show inventory in its own bucket, dont have
      *     inventory included in the avail daily buckets;show invent ava
      * ** 04/07/09  FP1054   longer cmd key test line , diff header/foot
      *  Save Subfile position when Fnn are hit: scan for Status Flag 17
      * ** 02/16/09  FP1054    comment option 5=Dsp Detail call to PDGND1
      * ** 09/01/2006 LJB workin
      * ** Change entry parms: Make Co# input/output & whse input.
      * ** If Co# is passed in put it on the screen, if whse is passed
      * ** in, put it on the screen. Otherwise, default them to the
      * ** values from the user profile.
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** W0BEG
00787007930085101043010490110701299
01305013630155501561023300234602356
02366023760238602396024060282102829
02858028680287802888028980290802918
03074030770308503087030920310303114
03124031340314403154031640317403183
03193033390337003380033900340003410
0342003430
** W0END
00789008220085101045010780111301301
01334013630155601590023440235302363
02373023830239302403024130282702829
02865028750288502895029050291502925
03075030830308503088030990311003121
03131031410315103161031710318103190
03200033680337703387033970340703417
0342703437
** W0NAM
V2AIC3    #CAPTX    #CW4ST    #2V4CD    #CNVNA    #CLDSZ    #CAJCD
#CF8NA    #CPTZR    #CWPST    #CNENA    #CMTTX    #CGINB    #CGJNB
#CGKNB    #CGLNB    #CGMNB    #CGNNB    #CGONB    V2HGCD    #CYLCD
VCH6DT    VCH7DT    VCH8DT    VCH9DT    VCIADT    VCIBDT    VCINDT
#1SEL     V1HGCD    #RYLCD    #RADCD    #RGJNX    #RGCNX    #RD1AV
#RD2AV    #RD3AV    #RD4AV    #RD5AV    #RD6AV    #RD7AV    #RD8AV
#RFQNX    #RGENA    #RD1AQ    #RD2AQ    #RD3AQ    #RD4AQ    #RD5AQ
#RD6AQ    #RD7AQ
** @CN
00001 Product Availability
00002 PRTPRDAVL
00003 PRTITMORDS
