// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPIYE1R
// ?Date: 14.08.2025 Time: 03:40:47
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC DLY029 5/23/07 Broker to 6A, broker type as output
EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize detail screen (existing record)

// DTL.Description 21A Usr = Condition name of DTL.Broker Fax/Email Inv
DTL.Description_21A_Usr = RTVCND(DTL.Broker_Fax_Email_Inv);

// DTL.Description. . . . . . . = Condition name of DTL.Record Status
DTL.Description = RTVCND(DTL.Record_Status);

// DTL.Condition Desc. 1  USR = Condition name of DTL.Payee Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Payee_Type);

// DTL.Text USR 20 = CON.*BLANK
DTL.Text_USR_20 = *BLANK;

//?Val Record Status Change
CASE;

// IF DTL.Record Status is Inactive
IF DTL.Record_Status = 'I';

// LCL.Record Status = CND.Inactive
LCL.Record_Status = 'I';

// Call program Del Verification      XF.
CALL PROGRAM(Del Verification      XF) ('PPIVXFR');
PARAMETER(DTL.Broker_Code);
PARAMETER(LCL.Record_Status);

CASE;

// IF LCL.Record Status is Inactive
IF LCL.Record_Status = 'I';

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Text USR 20 = CON.Record Sts must ="A"
DTL.Text_USR_20 = 'Record Sts must ="A"';

ENDIF;

ENDIF;

//?USER: Validate detail screen fields

// DTL.Description 21A Usr = Condition name of DTL.Broker Fax/Email Inv
DTL.Description_21A_Usr = RTVCND(DTL.Broker_Fax_Email_Inv);

// DTL.Description. . . . . . . = Condition name of DTL.Record Status
DTL.Description = RTVCND(DTL.Record_Status);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Broker            CH) TYPE(CHGOBJ) FILE(POC5REP)           AC1675584;
PARAMETER(DTL.Broker_Code);
PARAMETER(DTL.Broker_Name);
PARAMETER(DTL.Broker_Address_Line_1);
PARAMETER(DTL.Broker_Address_Line_2);
PARAMETER(DTL.Broker_City);
PARAMETER(DTL.Broker_State);
PARAMETER(DTL.Broker_Zip);
PARAMETER(DTL.Broker_Office_Manager);
PARAMETER(DTL.Broker_Telephone_Number);
PARAMETER(DTL.Broker_Fax_Number);
PARAMETER(DTL.Broker_Email_Address);
PARAMETER(DTL.Broker_G_L_Vendor_Number);
PARAMETER(DTL.Broker_unused_txt_1);
PARAMETER(DTL.Broker_M3_Supplier);
PARAMETER(DTL.Broker_EDI_Trade_Partner);
PARAMETER(DTL.Broker_Fax_Email_Inv);
PARAMETER(DTL.Broker_Fax_Email_Prc_Sht);
PARAMETER(DTL.Payee_Type);
PARAMETER(DTL.Broker_unused_sts_4);
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


