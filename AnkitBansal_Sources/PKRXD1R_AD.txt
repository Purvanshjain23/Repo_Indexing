// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRXD1R
// ?Date: 14.08.2025 Time: 02:50:21
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

//?CALC: Detail screen function fields

//?Calculate Net Head
// DTL.Net Head Usr = DTL.TH Head Received - DTL.TH Yard Deads
DTL.Net_Head_Usr = DTL.TH_Head_Received - DTL.TH_Yard_Deads;

// DTL.Net Head Usr = DTL.Net Head Usr - DTL.TH Head Condemned
DTL.Net_Head_Usr = DTL.Net_Head_Usr - DTL.TH_Head_Condemned;

//?Calculate Adj Live Weight
CASE;

// IF DTL.TH Head Received EQ DTL.Net Head Usr
IF DTL.TH_Head_Received = DTL.Net_Head_Usr;

// *MO.VE             1183529*Bu = ilt. in functions
DTL.Adj_Live_Weight_Usr = DTL.TH_Live_Wgt;

//?Calculate Adj Live Weight
// IF *OTHERWISE
IF *OTHERWISE;

//?This was change per correction on val bal to kill
//?the Yard + comdends = head adjusted
// WRK.Net Head Adjusted Usr = DTL.TH Head Condemned + DTL.TH Yard Deads
WRK.Net_Head_Adjusted_Usr = DTL.TH_Head_Condemned + DTL.TH_Yard_Deads;

// WRK.*Synon (15,2) work field = WRK.Net Head Adjusted Usr * DTL.TH Avg Live Wgt *
WRK.*Synon_152_work_field = WRK.Net_Head_Adjusted_Usr * DTL.TH_Avg_Live_Wgt;

// DTL.Adj Live Weight Usr = DTL.TH Live Wgt - WRK.*Synon (15,2) work field
DTL.Adj_Live_Weight_Usr = DTL.TH_Live_Wgt - WRK.*Synon_152_work_field;

ENDIF;

//?Calculate Adj Actual Yield
DO;

CASE;

// IF DTL.Adj Live Weight Usr NE WRK.Zero USR
IF DTL.Adj_Live_Weight_Usr <> WRK.Zero_USR;

//?actual yield percent: hot w / live wgt * 100
// Adj Actual Yield
DTL.Adj_Actual_Yield_Usr = ( DTL.TH_Hot_Wgt / DTL.Adj_Live_Weight_Usr ) * 100;

ENDIF;

ENDDO;

// LCL.Calculate All Usr = CND.Yes
LCL.Calculate_All_Usr = 'Y';

// Call program Clc Inch to MM/Lean%FOM.
CALL PROGRAM(Clc Inch to MM/Lean%FOM) ('PKINMMLP');
PARAMETER(*ZERO);
PARAMETER(DTL.TH_Avg_Backfat);
PARAMETER(DTL.TH_Avg_Loin_Eye_Depth);
PARAMETER(*ZERO);
PARAMETER(DTL.CD_Backfat_Thickness_MM);
PARAMETER(DTL.CD_Loin_Eye_Depth_MM);
PARAMETER(WRK.CD_Light_Reflectance_MM);
PARAMETER(WRK.CD_Lean_Percent_MM);
PARAMETER(LCL.Calculate_All_Usr);

