// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POR6XFR
// ?Date: 14.08.2025 Time: 03:38:52
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV default Company    IF) TYPE(EXCINTFUN)                     AC1592222;
PARAMETER(LCL.Company_Number);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Profile Model     RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1445577;
 PARAMETER(JOB.*USER);
 PARAMETER(PAR.User_Code_Model);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.User Code Model is equal to blank
 IF PAR.User_Code_Model = *BLANK;

 EXECUTE FUNCTION(RTV Appl. Default Co   RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143068;
 PARAMETER(JOB.*USER);
 PARAMETER('P/S');
 PARAMETER(PAR.Company_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Appl. Default Co   RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143068;
 PARAMETER(PAR.User_Code_Model);
 PARAMETER('P/S');
 PARAMETER(PAR.Company_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

}


EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(LCL.Company_Number);
PARAMETER('PPSDFTMTX');
PARAMETER(LCL.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.Cutout Matrix Code = SUBSTRING(LCL.System Value Alpha,CON.1,CON.6)
LCL.Cutout_Matrix_Code = SUBSTRING(LCL.System_Value_Alpha:1:6);

// LCL.Text USR 4 = SUBSTRING(LCL.System Value Alpha,CON.7,CON.4)
LCL.Text_USR_4 = SUBSTRING(LCL.System_Value_Alpha:7:4);

// LCL.Effective Month/Day = CVTVAR(LCL.Text USR 4)
LCL.Effective_Month_Day = CVTVAR(LCL.Text_USR_4);

EXECUTE FUNCTION(RTV Kill Dt w/Prd Dt   RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1301549;
PARAMETER(LCL.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(LCL.Kill_Date);
{
 //?USER: Initialize routine

 // WRK.First Time Flag = CND.Yes
 WRK.First_Time_Flag = 'Y';

 //?USER: Process Data record

 CASE;

 // IF WRK.First Time Flag is Yes
 IF WRK.First_Time_Flag = 'Y';

 // WRK.First Time Flag = CND.NO
 WRK.First_Time_Flag = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Kill Day Status is yes
 IF DB1.Kill_Day_Status = 'Y';

 // PAR.Kill Date = DB1.Plant Date of Last Order
 PAR.Kill_Date = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

 ENDIF;

}


//?**
// Call program Rtv Hog Volume  2 HPE XF.
CALL PROGRAM(Rtv Hog Volume  2 HPE XF) ('PKQIXFR');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Kill_Date);
PARAMETER(LCL.Hog_Volume);

//?Calculate Hog Population % in the Cutout Matrix.
DO;

// Hog Volume + 10%
LCL.Hog_Volume_+_10_USR = + LCL.Hog_Volume ( LCL.Hog_Volume * .10 );

// Hog Volume - 10%
LCL.Hog_Volume_10_USR = LCL.Hog_Volume - ( LCL.Hog_Volume * .10 );

//?Retrieve the Number of Carcass Uploaded.
// Call program Rtv # Head Killed HPE XF.
CALL PROGRAM(Rtv # Head Killed HPE XF) ('PKMSXFR');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Kill_Date);
PARAMETER(LCL.Count_USR);

//?Create Hog Population
CASE;

// IF LCL.Count USR LE LCL.Hog Volume + 10% USR
IF LCL.Count_USR <= LCL.Hog_Volume_+_10_USR;

// AND LCL.Count USR GE LCL.Hog Volume - 10% USR
AND LCL.Count_USR >= LCL.Hog_Volume_10_USR;

EXECUTE FUNCTION(Rtv Init Pop Head     RT) TYPE(RTVOBJ) FILE(PDIZREP)           AC1651821;
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Cutout_Matrix_Code);
PARAMETER(LCL.Effective_Month_Day);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Pop Head & %     CH) TYPE(CHGOBJ) FILE(PDIZREP)            AC1653864;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Cutout_Matrix_Code);
 PARAMETER(DB1.Effective_Month_Day);
 PARAMETER(DB1.Min_Carcass_Weight);
 PARAMETER(DB1.Max_Carcass_Weight);
 PARAMETER(DB1.Lean_Percent);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
}


// Call program Upd Pop Head     2HPE PF.
CALL PROGRAM(Upd Pop Head     2HPE PF) ('PKY2PFR');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Kill_Date);
PARAMETER(LCL.Cutout_Matrix_Code);
PARAMETER(LCL.Effective_Month_Day);
PARAMETER(LCL.Head_Killed_USR);

EXECUTE FUNCTION(Clc Population %      RT) TYPE(RTVOBJ) FILE(PDIZREP)           AC1651833;
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Cutout_Matrix_Code);
PARAMETER(LCL.Effective_Month_Day);
PARAMETER(LCL.Head_Killed_USR);
{
 //?USER: Process Data record

 // LCL.Population Percent =       *
 LCL.Population_Percent = ( DB1.Population_Head / PAR.Head_Killed_USR 'H' ) * 100;

 EXECUTE FUNCTION(Chg Population %      CH) TYPE(CHGOBJ) FILE(PDIZREP)           AC1651839;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Cutout_Matrix_Code);
 PARAMETER(DB1.Effective_Month_Day);
 PARAMETER(DB1.Min_Carcass_Weight);
 PARAMETER(DB1.Max_Carcass_Weight);
 PARAMETER(DB1.Lean_Percent);
 PARAMETER(LCL.Population_Percent);
}


ENDIF;

ENDDO;

