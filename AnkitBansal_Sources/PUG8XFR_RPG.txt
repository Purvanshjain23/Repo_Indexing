     H/TITLE Cnv Crt Pckg Item     XF  Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 05/15/18  Time  : 10:24:18
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     Fpckgitm   if   e           k disk                                         Pckg Item Raw Data
     FPOARREL1  IF   E           K DISK
      * RTV : Packaging Item            Retrieval index
      *
     FPOARREL0  IF A E           K DISK
      * UPD : Packaging Item            Update index
      *
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPOAR1        E DS                  EXTNAME(POARREL0)
      * UPD : Packaging Item            Update index
      * Renamed input format fields
     D  WBAIC3       E                     EXTFLD(ARAIC3)
     D  WBBRAA       E                     EXTFLD(ARBRAA)
     D  WBXITX       E                     EXTFLD(ARXITX)
     D  WBNONX       E                     EXTFLD(ARNONX)
     D  WBEAAA       E                     EXTFLD(AREAAA)
     D  WBI5SX       E                     EXTFLD(ARI5SX)
     D  WBHGCD       E                     EXTFLD(ARHGCD)
     D  WBBICS       E                     EXTFLD(ARBICS)
     D  WBIIWG       E                     EXTFLD(ARIIWG)
     D  WBD8AA       E                     EXTFLD(ARD8AA)
     D  WBM3SX       E                     EXTFLD(ARM3SX)
     D  WBM1SX       E                     EXTFLD(ARM1SX)
     D  WBNGSX       E                     EXTFLD(ARNGSX)
     D  WBM2SX       E                     EXTFLD(ARM2SX)
     D  WBNHSX       E                     EXTFLD(ARNHSX)
     D  WBNISX       E                     EXTFLD(ARNISX)
     D  WBNJSX       E                     EXTFLD(ARNJSX)
     D  WBNKSX       E                     EXTFLD(ARNKSX)
     D  WBNLSX       E                     EXTFLD(ARNLSX)
     D  WBNMSX       E                     EXTFLD(ARNMSX)
     D  WBNNSX       E                     EXTFLD(ARNNSX)
     D  WBEBAA       E                     EXTFLD(AREBAA)
     D  WBVSST       E                     EXTFLD(ARVSST)
     D  WBMJDT       E                     EXTFLD(ARMJDT)
     D  WBBETM       E                     EXTFLD(ARBETM)
     D  WBCCVN       E                     EXTFLD(ARCCVN)
     D  WBCDVN       E                     EXTFLD(ARCDVN)
     D  WBMKDT       E                     EXTFLD(ARMKDT)
     D  WBBFTM       E                     EXTFLD(ARBFTM)
     D  WBCEVN       E                     EXTFLD(ARCEVN)
     D  WBCFVN       E                     EXTFLD(ARCFVN)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YL0001         S              2
     D  YL0002         S              1
     D  YL0003         S              1
     D  YL0004         S              1
     D  YL0005         S              2
     D  YL0006         S              2
     D  YL0007         S              2
     D  YL0008         S              2
     D  YL0009         S              2
     D  YL0010         S              6
     D  WN0001         S              7  0
     D  WN0002         S              6  0
     D  WN0003         S             10
     D  WN0004         S             10
     D  WN0005         S              7  0
     D  WN0006         S              6  0
     D  WN0007         S             10
     D  WN0008         S             10
     D  ZADFMF         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: Packaging Item
      * N :  Company Number
     D  P1AIC3                 1      2P 0
      * N :  Packaging Item Code
     D  P1BRAA                 3     27
      * N :  Pckg Item Description
     D  P1XITX                28     77
      * N :  Pckg Type Class
     D  P1EAAA                78     80
      * N :  Pckg Item Type
     D  P1I5SX                81     82
      * N :  Item Code
     D  P1HGCD                83     86P 0
      * N :  Pckg Reporting Group
     D  P1D8AA                87     91
      * N :  Pckg Group Category
     D  P1M3SX                92     96
     D                 DS
     D  ZAMSDA                 1    132
     I@ARREGL
      * Packaging Item            Retrieval index
      * Renamed input format fields
     I              ARAIC3                      WAAIC3
     I              ARBRAA                      WABRAA
     I              ARXITX                      WAXITX
     I              ARNONX                      WANONX
     I              AREAAA                      WAEAAA
     I              ARI5SX                      WAI5SX
     I              ARHGCD                      WAHGCD
     I              ARBICS                      WABICS
     I              ARIIWG                      WAIIWG
     I              ARD8AA                      WAD8AA
     I              ARM3SX                      WAM3SX
     I              ARM1SX                      WAM1SX
     I              ARNGSX                      WANGSX
     I              ARM2SX                      WAM2SX
     I              ARNHSX                      WANHSX
     I              ARNISX                      WANISX
     I              ARNJSX                      WANJSX
     I              ARNKSX                      WANKSX
     I              ARNLSX                      WANLSX
     I              ARNMSX                      WANMSX
     I              ARNNSX                      WANNSX
     I              AREBAA                      WAEBAA
     I              ARVSST                      WAVSST
     I              ARMJDT                      WAMJDT
     I              ARBETM                      WABETM
     I              ARCCVN                      WACCVN
     I              ARCDVN                      WACDVN
     I              ARMKDT                      WAMKDT
     I              ARBFTM                      WABFTM
     I              ARCEVN                      WACEVN
     I              ARCFVN                      WACFVN
      *
     I@ARREGK
      * Packaging Item            Update index
      * Renamed input format fields
     I              ARAIC3                      WBAIC3
     I              ARBRAA                      WBBRAA
     I              ARXITX                      WBXITX
     I              ARNONX                      WBNONX
     I              AREAAA                      WBEAAA
     I              ARI5SX                      WBI5SX
     I              ARHGCD                      WBHGCD
     I              ARBICS                      WBBICS
     I              ARIIWG                      WBIIWG
     I              ARD8AA                      WBD8AA
     I              ARM3SX                      WBM3SX
     I              ARM1SX                      WBM1SX
     I              ARNGSX                      WBNGSX
     I              ARM2SX                      WBM2SX
     I              ARNHSX                      WBNHSX
     I              ARNISX                      WBNISX
     I              ARNJSX                      WBNJSX
     I              ARNKSX                      WBNKSX
     I              ARNLSX                      WBNLSX
     I              ARNMSX                      WBNMSX
     I              ARNNSX                      WBNNSX
     I              AREBAA                      WBEBAA
     I              ARVSST                      WBVSST
     I              ARMJDT                      WBMJDT
     I              ARBETM                      WBBETM
     I              ARCCVN                      WBCCVN
     I              ARCDVN                      WBCDVN
     I              ARMKDT                      WBMKDT
     I              ARBFTM                      WBBFTM
     I              ARCEVN                      WBCEVN
     I              ARCFVN                      WBCFVN
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Cnv Crt Pckg Item     XF
      * Cnv Read PCKGITM      US - Packaging Item  * 
      *
      *
     C                   dow       not %eof(pckgitm)
     C                   read      pckgitm
      *
     C                   eval      P1AIC3 = PITCMP                              Company Number
     C                   eval      P1BRAA = PITITC                              Packaging Item Code
     C                   eval      P1XITX = PITITD                              Pckg Item Desc
     C                   eval      P1EAAA = PITPTC                              Pckg Type Class
     C                   eval      P1I5SX = PITPIT                              Pckg Item Type
     C                   eval      P1HGCD = PITITM                              Item Code
     C                   eval      P1D8AA = PITPRG                              Pckg Reporting Group
     C                   eval      P1M3SX = PITPGC                              Pckg Group Catg
      *
      * Re-Create Packaging Item for Company 960.
      * Cnv Crt Pckg Item     RT - Packaging Item  * 
     C                   EXSR      SARVGN
      * Cnv EndDo             US - Packaging Item  * 
      *
     C                   enddo                                                  dow not %eof
      *
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Cnv Crt Pckg Item     RT - Packaging Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WABRAA                         Packaging Item
      * Setup key
     C                   Z-ADD     P1AIC3        WAAIC3                         Company Number
     C                   MOVEL     P1BRAA        WABRAA                         Packaging Item
      * Establish starting position
     C     KRSSA         CHAIN     @ARREGL                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2982'     W0RTN
      * USER: Processing if Data record not found
      * Cnv Crt Pckg Item     CR - Packaging Item  * 
     C                   EXSR      SBCRRC
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBCRRC        BEGSR
      *================================================================
      * Cnv Crt Pckg Item     CR - Packaging Item  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0001                         Create Date
     C                   Z-ADD     *ZERO         WN0002                         Create Time
     C                   EVAL      WN0003 = ' '                                 Create User
     C                   EVAL      WN0004 = ' '                                 Create Program
     C                   Z-ADD     *ZERO         WN0005                         Change Date
     C                   Z-ADD     *ZERO         WN0006                         Change Time
     C                   EVAL      WN0007 = ' '                                 Change User
     C                   EVAL      WN0008 = ' '                                 Change Program
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @ARREGK
     C                   Z-ADD     P1AIC3        WBAIC3                         Company Number
     C                   MOVEL     P1BRAA        WBBRAA                         Packaging Item
     C                   MOVEL     P1XITX        WBXITX                         Pckg Item Descr
     C                   Z-ADD     0             WBNONX                         Pckg List Seque
     C                   MOVEL     P1EAAA        WBEAAA                         Pckg Type Class
     C                   MOVEL     P1I5SX        WBI5SX                         Pckg Item Type
     C                   Z-ADD     P1HGCD        WBHGCD                         Item Code
     C                   Z-ADD     0             WBBICS                         Pckg Unit Cost
     C                   Z-ADD     0             WBIIWG                         Pckg Tare Weigh
     C                   MOVEL     P1D8AA        WBD8AA                         Pckg Reporting
     C                   MOVEL     P1M3SX        WBM3SX                         Pckg Group Cate
     C                   EVAL      WBM1SX = ' '                                 Pckg Modified W
     C                   MOVEL     YL0001        WBNGSX                         Pckg Unused Sta
     C                   MOVEL     YL0002        WBM2SX                         Pckg Unused Sts
     C                   MOVEL     YL0003        WBNHSX                         Pre-printed Bag
     C                   MOVEL     YL0004        WBNISX                         Pckg Unused Sta
     C                   MOVEL     YL0005        WBNJSX                         Pckg Unused Sta
     C                   MOVEL     YL0006        WBNKSX                         Pckg Unused Sta
     C                   MOVEL     YL0007        WBNLSX                         Pckg Unused Sta
     C                   MOVEL     YL0008        WBNMSX                         Pckg Unused Sta
     C                   MOVEL     YL0009        WBNNSX                         Pckg Unused Sta
     C                   MOVEL     YL0010        WBEBAA                         Pckg Unused Cod
     C                   MOVEL     'A'           WBVSST                         Record Status
      *
      * USER: Processing before Data update
      * Set Crt Date/Time 2    IF
      * *** Set CREATE fields. ***
     C                   Z-ADD     ##JDT         WBMJDT                         Create Date
     C                   Z-ADD     ##JTM         WBBETM                         Create Time
     C                   MOVEL     ##USR         WBCCVN                         Create User
     C                   MOVEL     ##PGM         WBCDVN                         Create Program
      * *** Set CHANGE fields. ***
     C                   Z-ADD     0             WBMKDT                         Change Date
     C                   Z-ADD     0             WBBFTM                         Change Time
     C                   EVAL      WBCEVN = ' '                                 Change User
     C                   EVAL      WBCFVN = ' '                                 Change Program
     C     KLCRSB        KLIST
     C                   KFLD                    WBAIC3                         Company Number
     C                   KFLD                    WBBRAA                         Packaging Item
      * Check for duplicate primary key
     C     KLCRSB        SETLL     @ARREGK                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR2983'     W0RTN
      * Send message 'Packaging Item         EX'
     C                   MOVEL     'USR2983'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
     C                   WRITE     @ARREGK                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   Z-ADD     *ZERO         P1AIC3                         Company Number
     C                   EVAL      P1BRAA = ' '                                 Packaging Item
     C                   EVAL      P1XITX = ' '                                 Pckg Item Descr
     C                   EVAL      P1EAAA = ' '                                 Pckg Type Class
     C                   EVAL      P1I5SX = ' '                                 Pckg Item Type
     C                   Z-ADD     *ZERO         P1HGCD                         Item Code
     C                   EVAL      P1D8AA = ' '                                 Pckg Reporting
     C                   EVAL      P1M3SX = ' '                                 Pckg Group Cate
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WANONX                         Pckg List Seque
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WABICS                         Pckg Unit Cost
     C                   Z-ADD     *ZERO         WAIIWG                         Pckg Tare Weigh
     C                   Z-ADD     *ZERO         WAMJDT                         Create Date
     C                   Z-ADD     *ZERO         WABETM                         Create Time
     C                   Z-ADD     *ZERO         WAMKDT                         Change Date
     C                   Z-ADD     *ZERO         WABFTM                         Change Time
      * Clear all neither parameters
      * Cnv Crt Pckg Item     CR - Packaging Item  * 
     C                   Z-ADD     *ZERO         WBMJDT                         Create Date
     C                   Z-ADD     *ZERO         WBBETM                         Create Time
     C                   Z-ADD     *ZERO         WBMKDT                         Change Date
     C                   Z-ADD     *ZERO         WBBFTM                         Change Time
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
     C                   MOVEL     'N'           W0PMT
      * Define local work field Pckg Unused Status 3
     C                   EVAL      YL0001 = ' '
      * Define local work field Pckg Unused Sts 2
     C                   EVAL      YL0002 = ' '
      * Define local work field Pre-printed Bag Sts
     C                   EVAL      YL0003 = ' '
      * Define local work field Pckg Unused Status 5
     C                   EVAL      YL0004 = ' '
      * Define local work field Pckg Unused Status 6
     C                   EVAL      YL0005 = ' '
      * Define local work field Pckg Unused Status 7
     C                   EVAL      YL0006 = ' '
      * Define local work field Pckg Unused Status 8
     C                   EVAL      YL0007 = ' '
      * Define local work field Pckg Unused Status 9
     C                   EVAL      YL0008 = ' '
      * Define local work field Pckg Unused Status 10
     C                   EVAL      YL0009 = ' '
      * Define local work field Pckg Unused Code
     C                   EVAL      YL0010 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
