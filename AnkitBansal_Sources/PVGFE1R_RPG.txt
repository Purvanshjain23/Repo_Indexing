     H/TITLE Edt Security Control   ER Edit record(1 screen)
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Edit record(1 screen)
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSPATI
     H* Date          : 10/30/24  Time  : 11:07:35
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPVGFE1R#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Edt Security Control   ER Edit record(1 screen)
      *
     FPVCFCPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : SPA Security Control Prcs Retrieval index
      *
     FPVCGREL1  IF   E           K DISK
      * RTV : SPA Security Enc/Decr Key Retrieval index
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPVCFCPL0  UF A E           K DISK
      * UPD : SPA Security Control Prcs Update index
      *
     FPVCGREL0  UF A E           K DISK
      * UPD : SPA Security Enc/Decr Key Update index
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
     D @1DBRC        E DS                  EXTNAME(PVCFCPL0)
      * UPD : SPA Security Control Prcs Update index
      * Current/previous master file format fields for change control
      *
     D #1DBRC          DS           621
      * Stored master file format fields
     D  #1DB1                  1      1
      *
     D QPVCG1        E DS                  EXTNAME(PVCGREL0)
      * UPD : SPA Security Enc/Decr Key Update index
      * Renamed input format fields
     D  WAE8AB       E                     EXTFLD(CGE8AB)
     D  WAE9AB       E                     EXTFLD(CGE9AB)
     D  WAFFAB       E                     EXTFLD(CGFFAB)
     D  WAVSST       E                     EXTFLD(CGVSST)
     D  WABGTS       E                     EXTFLD(CGBGTS)
     D  WARUU1       E                     EXTFLD(CGRUU1)
     D  WARVU1       E                     EXTFLD(CGRVU1)
     D  WABHTS       E                     EXTFLD(CGBHTS)
     D  WARWU1       E                     EXTFLD(CGRWU1)
     D  WARXU1       E                     EXTFLD(CGRXU1)
      *
     D YARDCS          DS           239
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
     D YBRDCS          DS           621
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0BYP          S              1
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  W0GRP          S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0PMD          S              3
     D  ZADFMF         S             10
     D  ZQ             S              5  0
     D  YN0001         S              1
     D  XDTSDL         S             26
     D  YN0002         S             26
     D  YN0003         S             50
     D  YN0004         S             15
     D  YN0005         S             26
     D  YN0006         S             50
     D  YN0007         S             15
     D  YL0001         S             20
     D  WQ0001         S              1
     D  WQ0002         S             20
     D  WQ0003         S             30
     D  WQ0004         S             20
     D  W0CLPG         S             10
     D  W0DCF          S              1
     D  W0INVL         S             25
     D  Y0CX01         S              1
     D  Y0CX02         S              1
     D  YL0002         S              1
     D  YL0003         S             20
     D  WQ0005         S              1
     D  WQ0006         S             20
     D  WQ0007         S             30
     D  WQ0008         S             20
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  WN0001         S             26
     D  WN0002         S             50
     D  WN0003         S             15
     D  WN0004         S             50
     D  WN0005         S             15
     D  ##TMS          S             26
     D  WL0001         S             20
     D  WL0002         S              6
     D  WL0003         S             30
     D  WL0004         S              1
     D  WL0005         S             26
     D  WL0006         S             50
     D  WL0007         S             15
     D  WL0008         S             26
     D  WL0009         S             50
     D  WL0010         S             15
     D  WN0006         S             26
     D  WN0007         S             50
     D  WN0008         S             15
     D  WN0009         S             50
     D  WN0010         S             15
     D  WN0011         S             26
     D  WN0012         S             50
     D  WN0013         S             15
     D  WN0014         S             26
     D  WN0015         S             50
     D  WN0016         S             15
     D  YARDC          S              1
     D  WN0017         S             26
     D  WN0018         S             50
     D  WN0019         S             15
     D  WN0020         S             26
     D  WN0021         S             50
     D  WN0022         S             15
     D  YBRDC          S              1
     D  W0RPT          S              1
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  WUAUNA         S             30
     D  WQSG01         S                   LIKE(DNDNCD)
     D  WQSH01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     dl_UpCase_Start   S              2  0 inz(0)
     dl_Upcase_scan    S              2  0 inz(0)
     dl_upcase_string  S             26    inz(' ')
     dl_upcase_char    S              1    inz(' ')
     dl_upcase_count   S              2  0 inz(1)

     dl_LwCase_Start   S              2  0 inz(0)
     dl_Lwcase_scan    S              2  0 inz(0)
     dl_Lwcase_string  S             26    inz(' ')
     dl_Lwcase_char    S              1    inz(' ')
     dl_Lwcase_count   S              2  0 inz(1)

     dl_Num_Start      S              2  0 inz(0)
     dl_Num_scan       S              2  0 inz(0)
     dl_Num_string     S             10    inz(' ')
     dl_Num_char       S              1    inz(' ')
     dl_Num_count      S              2  0 inz(1)

     dl_space          S              1    inz(' ')
     dl_space_Count    S              2  0 inz(0)

     dl_Spc_Start      S              2  0 inz(0)
     dl_Spc_scan       S              2  0 inz(0)
     dl_Spc_string     S             30    inz(' ')
     dl_Spc_char       S              1    inz(' ')
     dl_Spc_count      S              2  0 inz(1)

     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS            26
      * KEY: SPA Security Control Prcs Retrieval index
      * I : RST SPA Authorization Process
     D  P1E8AB                 1     20
      * I : RST SPA Process Environment
     D  P1E9AB                21     26
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Encr/Decr key is blank'
      * SPA Encr/Decr key
     D  ZA0001                 1     30
      * Message data for 'Password Invalid'
      * Web Password
     D  ZA0002                 1     10
      * Message data for 'Password Blank Space Issu'
      * SPA Password
     D  ZA0003                 1     20
      * Message data for 'Password Length issue'
      * SPA Password
     D  ZA0004                 1     20
      * Message data for 'Password LowerCase Issue'
      * SPA Password
     D  ZA0005                 1     20
      * Message data for 'Password Special Char Iss'
      * SPA Password
     D  ZA0006                 1     20
      * Message data for 'Password UpperCase Issue'
      * SPA Password
     D  ZA0007                 1     20
      * Message data for 'Password Numeric Issue'
      * SPA Password
     D  ZA0008                 1     20
     I@CGREVM
      * SPA Security Enc/Decr Key Update index
      * Renamed input format fields
     I              CGE8AB                      WAE8AB
     I              CGE9AB                      WAE9AB
     I              CGFFAB                      WAFFAB
     I              CGVSST                      WAVSST
     I              CGBGTS                      WABGTS
     I              CGRUU1                      WARUU1
     I              CGRVU1                      WARVU1
     I              CGBHTS                      WABHTS
     I              CGRWU1                      WARWU1
     I              CGRXU1                      WARXU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: SPA Securi
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Check passed parameters
     C                   EXSR      FACKPM
      * Perform once if all passed, else repeat
      * Display and process key screen
     C                   DOU       W0RPT = 'N'
     C                   EXSR      BADSKY
     C                   END
      * Terminate program
     C                   EXSR      ZXEXPG
      *****************************************************************
      /EJECT
     CSR   BADSKY        BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                   MOVEL     'Y'           W0BYP
      * Initialize key screen
     C                   EXSR      MDIZ#K
      * Signal start of transaction
     C                   MOVEL     'Y'           W0TRN
      * Ensure transaction continues (if reset)
     C                   DOW       W0TRN = 'Y' OR
     C                             W0TRN = 'K'
     C                   MOVEL     'Y'           W0TRN
      * Conduct screen conversation
      * Is bypass key screen still viable?
     C                   DOW       W0TRN = 'Y'
     C                   IF        W0BYP = 'Y'
      * One or more key fields is blank
      * HOME: Reset screen fields
     C                   IF        #1E8AB = ' ' OR
     C                             #1E9AB = ' ' OR
     C                             *IN30
     C                   MOVEL     'N'           W0BYP
     C                   END
     C                   END
      * Bypass key screen
      * Display key screen
     C                   IF        W0BYP = 'N'
     C                   EXSR      BBEXFM
     C                   END
      * Cancel key screen bypass
     C                   MOVEL     'N'           W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09              CAS                     BCCHMD
      * HOME: Reset screen fields
     C   30              CAS                     BDHMKY
      * Process key screen input
     C                   CAS                     BEPRKY
     C                   END
     C                   DOW       W0TRN = 'R'
     C                   MOVEL     'Y'           W0TRN
     C                   EXSR      BEPRKY
     C                   END
      *
     C                   END
     C                   END
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBEXFM        BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSAK
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     'K'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDKEY
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   BCCHMD        BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'CHG'         W0PMD
     C                   ELSE
     C                   MOVEL     'ADD'         W0PMD
     C                   END
      *================================================================
     CSR   BCEXIT        ENDSR
      /EJECT
     CSR   BDHMKY        BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                   MOVEL     'N'           W0TRN
      *================================================================
     CSR   BDEXIT        ENDSR
      /EJECT
     CSR   BEPRKY        BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                   EXSR      MAIZ#1
      * Validate key fields
     C                   EXSR      BFVLKY
     C     *IN99         CABEQ     '1'           BEEXIT
     C     YPMTFD        CABNE     *BLANKS       BEEXIT
      * Check for existing record
     C     KRTV          KLIST
     C                   KFLD                    CFE8AB                         SPA Authorizati
     C                   KFLD                    CFE9AB                         SPA Process Env
      * Setup key
     C                   MOVEL     #1E8AB        CFE8AB
     C                   MOVEL     #1E9AB        CFE9AB
     C     KRTV          CHAIN     @CFCPVK                            9091      *
      * Record locked
     C                   IF        *IN91
     C                   SETON                                        993132    *
     C                   GOTO      BEEXIT
     C                   END                                                    FI 91
      *
      * Verify record existence against program mode
      * If record does not exist, error
     C                   IF        W0PMD <> 'ADD'
     C                   IF        *IN90
     C                   SETON                                        993132    *
      * Send message 'SPA Security Control P NF'
     C                   MOVEL     'USR5492'     ZAMSID
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   EXSR      MBFL#1
      * USER: Initialize detail screen (existing record)
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFGAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     51            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFHAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     101           ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFIAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     151           ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFJAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     201           ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFKAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     50            YRSW00
     C                   Z-ADD     251           ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00300 OR
     C                             ZQ > 00300
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  #1FAAB:ZQ     #DFLAB                 90      Authorization C
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * RTV All Secu Encr/Decr RT - SPA Security Enc/Decr Key  * 
     C                   EXSR      SARVGN
      * Get Decrypted Password
      * CASE: DTL.SPA Password is Entered
     C                   IF        #1FDAB <> ' '
     C                   MOVEL     #1FDAB        YL0001                         SPA Encry Passw
     C                   EVAL      #1FDAB = ' '                                 SPA Password
      * Paswrd Encrypt/Decrypt UP - SPA Security Control Prcs  * 
     C                   CALL      'PVGIUPR'                            90      Paswrd Encrypt/
     C                   PARM      'D'           WQ0001                         Encryp/Decryp M
     C                   PARM      YL0001        WQ0002                         SPA Password
     C                   PARM      #DFFAB        WQ0003                         SPA Encr/Decr k
     C     #1FDAB        PARM      *BLANK        WQ0004                         SPA Encry Passw
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVGIUPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        994039    *
     C                   END
     C                   END                                                    *FI
     C                   MOVEL     #1FEAB        #DFRAB                         SPA IP Address
     C                   END
      *
     C                   ELSE
      * If record already exists, error
     C                   IF        NOT *IN90
     C                   SETON                                        993132    *
      * Send message 'SPA Security Control P EX'
     C                   MOVEL     'USR5493'     ZAMSID
     C                   EXSR      ZASNMS
     C                   ELSE
      * USER: Initialize detail screen (new record)
     C                   MOVEL     'A'           #1VSST                         Record Status
     C                   END
     C                   END
      *..................................................
     C   99              GOTO      BEEXIT
      *
      * No error: Display and process details
     C                   IF        YPMTFD = ' '
     C                   EXSR      CADSDA
     C                   END
      *
      *================================================================
     CSR   BEEXIT        ENDSR
      /EJECT
     CSR   BFVLKY        BEGSR
      *================================================================
      * Validate key fields
      *================================================================
     C                   IF        W0PMD <> 'ADD' OR
     C                             YPMTFD <> ' '
     C                   END
      * SPA Authorization Process required
     C                   IF        #1E8AB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * SPA Process Environment required
     C                   IF        #1E9AB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9932      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   BFEXIT        ENDSR
      /EJECT
     CSR   CADSDA        BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
      * Display detail screen
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Redisplay previous screen
     C   12              CAS                     CCDSPV
      * HOME: Reset screen fields
     C   30              CAS                     CCDSPV
      * Process detail screen input
     C                   CAS                     CFPRSC
     C                   END
     C                   IF        W0TRN = 'R'
     C                   IF        W0PMD = 'ADD'
     C                   EXSR      MAIZ#1
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   CBEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     '1'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y1SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CBEXIT        ENDSR
      /EJECT
     CSR   CCDSPV        BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30              MOVEL     'R'           W0TRN
     C   12              MOVEL     'K'           W0TRN
      *================================================================
     CSR   CCEXIT        ENDSR
      /EJECT
     CSR   CFPRSC        BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate details
     C                   EXSR      DCVLDL
      * QUIT if error:
     C   99              GOTO      CFEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           CFEXIT
      * Prompt for confirmation
     C                   EXSR      EAPMCF
      * Quit if not confirmed
     C                   IF        *IN99
     C                   SETOFF                                       99
     C                   GOTO      CFEXIT
     C                   END
      * No error: update record
     C                   EXSR      EBPR##
      *================================================================
     CSR   CFEXIT        ENDSR
      /EJECT
     CSR   DCVLDL        BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate Record Status
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Record Status
     C                   IF        '#1VSST' = YPMTFD
     C                   MOVEL     #1VSST        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHVSST
     C                   SELECT
     C                   WHEN      W0INVL = 'A'                                 A
     C                   Z-ADD     1             ZHVSST
     C                   WHEN      W0INVL = 'I'                                 I
     C                   Z-ADD     2             ZHVSST
     C                   ENDSL
     C                   EXFMT     ZGVSST
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHVSST = 1
     C                   MOVEL     'A'           W0INVL                         A
     C                   WHEN      ZHVSST = 2
     C                   MOVEL     'I'           W0INVL                         I
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1VSST
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * USER: Validate detail screen fields
      * Concatenate Cmd Text   US - SPA Security Control Prcs  * 
     C                   IF        YPMTFD = ' '
      /free
         #1FAAB = #DFGAB + #DFHAB + #DFIAB + #DFJAB + #DFKAB + #DFLAB ;
      /end-free
      * User ID, Password are entered and Encryption Key is blank
      * CASE:
      *  - (c1 OR c2) AND c3
      *   |- c1    : DTL.SPA User ID is Entered
      *   |- c2    : DTL.SPA Password is Entered
      *   |- c3    : DTL.SPA Encr/Decr key is Not Entered
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   MOVEL     '0'           Y0CX02
     C                   IF        #1FCAB <> ' ' OR
     C                             #1FDAB <> ' '
     C                   MOVEL     '1'           Y0CX02
     C                   END                                                    *FI
     C                   IF        Y0CX02 = '1'
     C                   IF        #DFFAB = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #DFFAB        ZA0001                         SPA Encr/Decr k
      * Send message 'Encr/Decr key is blank'
     C                   MOVEL     'USR5499'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9940      *
      *
     C                   GOTO      DCEXIT                                       *QUIT
     C                   END                                                    *FI
      * Password is Blan and Encryption Key is Entered
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.SPA Password is *Not Entered
      *   |- c2    : DTL.SPA Encr/Decr key is Entered
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1FDAB = ' '
     C                   IF        #DFFAB <> ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #1FDAB        ZA0002                         SPA Password
      * Send message 'Password Invalid'
     C                   MOVEL     'USR3254'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   GOTO      DCEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Password      US - SPA Security Control Prcs  * 
      /free

          YL0002 = *Blanks ;

         // Check for 15 character length
          If %subst(#1FDAB : 15 : 1) = *Blanks ;
             YL0002 = 'L';
          Else;
         // Check for empty spaces
             l_space_Count = 1;
             Dow l_space_Count < 15 ;
                 If %subst(#1FDAB : l_space_Count : 1) = *Blanks ;
                    YL0002 = 'B';
                    leave;
                 Endif;
                 l_space_Count = l_space_Count + 1;
             Enddo;
          Endif;

         // Check for Uppercase letter
          If YL0002 = ' ';
             l_upcase_string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
             l_UpCase_Start = 1;
             l_upcase_char = %subst(l_upcase_string : l_UpCase_Start : 1);
             l_upcase_count = 0 ;

             Dow l_upcase_count < 26;
                 l_upcase_scan = %scan(l_upcase_char : #1FDAB);
                 If l_upcase_scan > 0;
                    YL0002 = ' ';
                    leave;
                 Else;
                    YL0002 = 'U';
                 Endif;
                 l_UpCase_Start = l_UpCase_Start + 1;
                 l_upcase_count = l_upcase_count + 1;
                 If l_UpCase_Start > 26 ;
                    leave;
                 Endif;
                 l_Upcase_char = %subst(l_Upcase_string : l_UpCase_Start : 1);
             Enddo;
          Endif;

         // Check for Lowercase letter
          If YL0002 = ' ';
             l_Lwcase_string = 'abcdefghijklmnopqrstuvwxyz';
             l_LwCase_Start = 1;
             l_Lwcase_char = %subst(l_Lwcase_string : l_LwCase_Start : 1);
             l_Lwcase_count = 0;

             Dow l_Lwcase_count < 26;
                 l_Lwcase_scan = %scan(l_Lwcase_char : #1FDAB);
                 If l_Lwcase_scan > 0;
                    YL0002 = ' ';
                    leave;
                 Else;
                    YL0002 = 'l';
                 Endif;
                 l_LwCase_Start = l_LwCase_Start + 1;
                 l_Lwcase_count = l_Lwcase_count + 1;
                 If l_LwCase_Start > 26 ;
                    leave;
                 Endif;
                 l_Lwcase_char = %subst(l_Lwcase_string : l_LwCase_Start : 1);
             Enddo;
          Endif;

         // Check for Numeric value
          If YL0002 = ' ';
             l_num_string = '0123456789';
             l_num_Start = 1;
             l_num_char = %subst(l_num_string : l_num_Start : 1);
             l_num_count = 0;

             Dow l_num_count < 10;
                 l_num_scan = %scan(l_num_char : #1FDAB);
                 If l_num_scan > 0;
                    YL0002 = ' ';
                    leave;
                 Else;
                    YL0002 = 'N';
                 Endif;
                 l_num_Start = l_num_Start + 1;
                 l_num_count = l_num_count + 1;
                 If l_num_Start > 10 ;
                    leave;
                 Endif;
                 l_Num_char = %subst(l_Num_string : l_Num_Start : 1);
             Enddo;
          Endif;

         // Check for Special Character
          If YL0002 = ' ';
             l_Spc_string = '~!@#$%^&*()_-+={[}]|\:;"<,>.?/';
             l_Spc_Start = 1;
             l_Spc_char = %subst(l_Spc_string : l_Spc_Start : 1);
             l_Spc_count = 0;

             Dow l_Spc_count < 30;
                 l_Spc_scan = %scan(l_Spc_char : #1FDAB);
                 If l_Spc_scan > 0;
                    YL0002 = ' ';
                    leave;
                 Else;
                    YL0002 = 'S';
                 Endif;
                 l_Spc_Start = l_Spc_Start + 1;
                 l_Spc_count = l_Spc_count + 1;
                 If l_Spc_Start > 30 ;
                    leave;
                 Endif;
                 l_Spc_char = %subst(l_Spc_string : l_Spc_Start : 1);
             Enddo;
          Endif;
      /end-free
      * Password Length error
      * CASE: LCL.Pswd Validation Sts   USR is Blank Space Error
      * Setup message data for message
     C                   IF        YL0002 = 'B'
     C                   MOVEL     #1FDAB        ZA0003                         SPA Password
      * Send message 'Password Blank Space Issu'
     C                   MOVEL     'USR5518'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   ELSE
      * CASE: LCL.Pswd Validation Sts   USR is Length Error
      * Setup message data for message
     C                   IF        YL0002 = 'L'
     C                   MOVEL     #1FDAB        ZA0004                         SPA Password
      * Send message 'Password Length issue'
     C                   MOVEL     'USR5515'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   ELSE
      * CASE: LCL.Pswd Validation Sts   USR is LowerCase Error
      * Setup message data for message
     C                   IF        YL0002 = 'l'
     C                   MOVEL     #1FDAB        ZA0005                         SPA Password
      * Send message 'Password LowerCase Issue'
     C                   MOVEL     'USR5519'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   ELSE
      * CASE: LCL.Pswd Validation Sts   USR is Special Character Error
      * Setup message data for message
     C                   IF        YL0002 = 'S'
     C                   MOVEL     #1FDAB        ZA0006                         SPA Password
      * Send message 'Password Special Char Iss'
     C                   MOVEL     'USR5521'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   ELSE
      * CASE: LCL.Pswd Validation Sts   USR is UpperCase Error
      * Setup message data for message
     C                   IF        YL0002 = 'U'
     C                   MOVEL     #1FDAB        ZA0007                         SPA Password
      * Send message 'Password UpperCase Issue'
     C                   MOVEL     'USR5520'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   ELSE
      * CASE: LCL.Pswd Validation Sts   USR is Numeric Error
      * Setup message data for message
     C                   IF        YL0002 = 'N'
     C                   MOVEL     #1FDAB        ZA0008                         SPA Password
      * Send message 'Password Numeric Issue'
     C                   MOVEL     'USR5522'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9939      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Encrypt Password
      * CASE: DTL.SPA Password is Entered
      * Paswrd Encrypt/Decrypt UP - SPA Security Control Prcs  * 
     C                   IF        #1FDAB <> ' '
     C                   CALL      'PVGIUPR'                            90      Paswrd Encrypt/
     C                   PARM      'E'           WQ0005                         Encryp/Decryp M
     C                   PARM      #1FDAB        WQ0006                         SPA Password
     C                   PARM      #DFFAB        WQ0007                         SPA Encr/Decr k
     C     YL0003        PARM      *BLANK        WQ0008                         SPA Encry Passw
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVGIUPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        993940    *
     C                   END
     C                   END                                                    *FI
     C                   END
      * Authorization Command Ln1 required
     C                   IF        #DFGAB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * SPA Command Type required
     C                   IF        #1FBAB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9937      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   EAPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      EAEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   EAEXIT        ENDSR
      /EJECT
     CSR   EBPR##        BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C     W0PMD         CASEQ     'ADD'         ECADRQ
      * Process update request
     C     W0PMD         CASNE     'ADD'         EECHRQ
     C                   END
     C                   IF        W0RTN = ' '
      * Exit after successful add
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'N'           W0RPT
     C                   END
      * Restart program for next record
     C                   MOVEL     'N'           W0TRN
     C                   END
      *================================================================
     CSR   EBEXIT        ENDSR
      /EJECT
     CSR   ECADRQ        BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create SPA Security Contr - SPA Security Control Prcs  * 
     C                   EXSR      SBCRRC
      * Send message '*Record added'
     C                   IF        W0RTN = ' '
     C                   MOVEL     'Y2U0011'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
      *================================================================
     CSR   ECEXIT        ENDSR
      /EJECT
     CSR   EECHRQ        BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Change SPA Security Contr - SPA Security Control Prcs  * 
     C                   EXSR      SFCHRC
      * Data update error
      * Reset screen fields if changed record
     C                   IF        W0RTN <> ' '
     C     W0RTN         CASEQ     'Y2U0007'     MBFL#1
     C                   END
     C                   ELSE
      * Send message '*Record changed'
     C                   IF        YBRDC = 'Y'
     C                   MOVEL     'Y2U0012'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *================================================================
     CSR   EEEXIT        ENDSR
      /EJECT
     CSR   FACKPM        BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
      * Not every key field passed - loop program
     C                   IF        P1E8AB = ' ' OR
     C                             P1E9AB = ' '
     C                   MOVEL     'Y'           W0RPT
     C                   ELSE
      * Full key passed, so single shot program
     C                   MOVEL     'N'           W0RPT
     C                   END
      *================================================================
     CSR   FAEXIT        ENDSR
      /EJECT
     CSR   GADSAK        BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   GBDSAD        BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      * Protect key fields on detail screen
     C                   SETON                                        88        *
      * Disable key screen - not applicable
     C                   IF        W0RPT = 'N'
     C                   SETOFF                                       87        *
     C                   ELSE
      * Enable key screen
     C                   SETON                                        87        *
     C                   END
      *================================================================
     CSR   GBEXIT        ENDSR
      /EJECT
     CSR   MAIZ#1        BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                   EVAL      #1FAAB = ' '                                 SPA Authorizati
     C                   EVAL      #1FEAB = ' '                                 SPA IP Address
     C                   MOVEL     XDTSDL        #1BGTS                         Create Date Tim
     C                   EVAL      #1RUU1 = ' '                                 Create User ID
     C                   EVAL      #1RVU1 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        #1BHTS                         Update Date Tim
     C                   EVAL      #1RWU1 = ' '                                 Update User Id
     C                   EVAL      #1RXU1 = ' '                                 Update Program
     C                   EVAL      #DFGAB = ' '                                 Authorization C
     C                   EVAL      #DFHAB = ' '                                 Authorization C
     C                   EVAL      #DFIAB = ' '                                 Authorization C
     C                   EVAL      #DFJAB = ' '                                 Authorization C
     C                   EVAL      #DFKAB = ' '                                 Authorization C
     C                   EVAL      #DFLAB = ' '                                 Authorization C
     C                   EVAL      #1FBAB = ' '                                 SPA Command Typ
     C                   EVAL      #1FCAB = ' '                                 SPA User ID
     C                   EVAL      #1FDAB = ' '                                 SPA Password
     C                   EVAL      #DFFAB = ' '                                 SPA Encr/Decr k
     C                   EVAL      #DFRAB = ' '                                 SPA IP Address
     C                   EVAL      #1VSST = ' '                                 Record Status
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @CFCPVK fields to screen
      *================================================================
     C                   MOVEL     CFFAAB        #1FAAB                         SPA Authorizati
     C                   MOVEL     CFFEAB        #1FEAB                         SPA IP Address
     C                   MOVEL     CFBGTS        #1BGTS                         Create Date Tim
     C                   MOVEL     CFRUU1        #1RUU1                         Create User ID
     C                   MOVEL     CFRVU1        #1RVU1                         Create Program
     C                   MOVEL     CFBHTS        #1BHTS                         Update Date Tim
     C                   MOVEL     CFRWU1        #1RWU1                         Update User Id
     C                   MOVEL     CFRXU1        #1RXU1                         Update Program
     C                   MOVEL     CFE8AB        #1E8AB                         SPA Authorizati
     C                   MOVEL     CFE9AB        #1E9AB                         SPA Process Env
     C                   MOVEL     CFFBAB        #1FBAB                         SPA Command Typ
     C                   MOVEL     CFFCAB        #1FCAB                         SPA User ID
     C                   MOVEL     CFFDAB        #1FDAB                         SPA Password
     C                   MOVEL     CFVSST        #1VSST                         Record Status
      * Hold existing record image
     C                   MOVEL     @1DBRC        #1DBRC
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MDIZ#K        BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                   MOVEL     P1E8AB        #1E8AB                         SPA Authorizati
     C                   MOVEL     P1E9AB        #1E9AB                         SPA Process Env
      *================================================================
     CSR   MDEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV All Secu Encr/Decr RT - SPA Security Enc/Decr Key  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      #DFFAB = ' '                                 SPA Encr/Decr k
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    CGE8AB                         SPA Authorizati
     C                   KFLD                    CGE9AB                         SPA Process Env
      * Setup key
     C                   MOVEL     CFE8AB        CGE8AB                         SPA Authorizati
     C                   MOVEL     CFE9AB        CGE9AB                         SPA Process Env
      * Establish starting position
     C     KRSSA         CHAIN     @CGREVN                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR5494'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     CGFFAB        #DFFAB                         SPA Encr/Decr k
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBCRRC        BEGSR
      *================================================================
      * Create SPA Security Contr - SPA Security Control Prcs  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0001                         Create Date Tim
     C                   EVAL      WN0002 = ' '                                 Create User ID
     C                   EVAL      WN0003 = ' '                                 Create Program
     C                   EVAL      WN0004 = ' '                                 Update User Id
     C                   EVAL      WN0005 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @CFCPVJ
     C                   MOVEL     #1E8AB        CFE8AB                         SPA Authorizati
     C                   MOVEL     #1E9AB        CFE9AB                         SPA Process Env
     C                   MOVEL     #1FAAB        CFFAAB                         SPA Authorizati
     C                   MOVEL     #1FBAB        CFFBAB                         SPA Command Typ
     C                   MOVEL     #1FCAB        CFFCAB                         SPA User ID
     C                   MOVEL     YL0003        CFFDAB                         SPA Password
     C                   MOVEL     #DFRAB        CFFEAB                         SPA IP Address
     C                   MOVEL     #1VSST        CFVSST                         Record Status
     C                   MOVEL     #1BHTS        CFBHTS                         Update Date Tim
      *
      * USER: Processing before Data update
      * Set Crt Time Stamp DDL IF
      * *** Set CREATE Time Stamp Info.
      * PAR.Create Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         CFBGTS                         Create Date Tim
     C                   EVAL      CFRUU1 = ' '                                 Create User ID
     C                   MOVEL     ##USR         CFRUU1                         Create User ID
     C                   EVAL      CFRVU1 = ' '                                 Create Program
     C                   MOVEL     ##PGM         CFRVU1                         Create Program
      * *** Set CHANGE Time Stamp Info.
      * Cannot set Update Date TS here, will error.
     C                   EVAL      CFRWU1 = ' '                                 Update User Id
     C                   EVAL      CFRXU1 = ' '                                 Update Program
     C     KLCRSB        KLIST
     C                   KFLD                    CFE8AB                         SPA Authorizati
     C                   KFLD                    CFE9AB                         SPA Process Env
      * Check for duplicate primary key
     C     KLCRSB        SETLL     @CFCPVJ                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5493'     W0RTN
      * Send message 'SPA Security Control P EX'
     C                   MOVEL     'USR5493'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
     C                   WRITE     @CFCPVJ                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      * USER: Processing after Data update
      * Crt/Chg Secu Ecn/Decr  RT - SPA Security Enc/Decr Key  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  CFE8AB        WL0001                         SPA Authorizati
     C                   MOVEL(P)  CFE9AB        WL0002                         SPA Process Env
     C                   MOVEL(P)  #DFFAB        WL0003                         SPA Encr/Decr k
     C                   MOVEL(P)  CFVSST        WL0004                         Record Status
     C                   MOVEL(P)  CFBGTS        WL0005                         Create Date Tim
     C                   MOVEL(P)  CFRUU1        WL0006                         Create User ID
     C                   MOVEL(P)  CFRVU1        WL0007                         Create Program
     C                   MOVEL(P)  CFBHTS        WL0008                         Update Date Tim
     C                   MOVEL(P)  CFRWU1        WL0009                         Update User Id
     C                   MOVEL(P)  CFRXU1        WL0010                         Update Program
     C                   EXSR      SCRVGN
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * Crt/Chg Secu Ecn/Decr  RT - SPA Security Enc/Decr Key  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    CGE8AB                         SPA Authorizati
     C                   KFLD                    CGE9AB                         SPA Process Env
      * Setup key
     C                   MOVEL     WL0001        CGE8AB                         SPA Authorizati
     C                   MOVEL     WL0002        CGE9AB                         SPA Process Env
      * Establish starting position
     C     KRSSC         CHAIN     @CGREVN                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR5494'     W0RTN
      * USER: Processing if Data record not found
      * CASE: PAR.SPA Encr/Decr key is Entered
      * Create SPA Security Enc/D - SPA Security Enc/Decr Key  * 
     C                   IF        WL0003 <> ' '
     C                   EXSR      SDCRRC
     C                   END                                                    *FI
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * CASE: PAR.SPA Encr/Decr key NE DB1.SPA Encr/Decr key
     C                   IF        NOT *IN90
      * Change SPA Security Enc/D - SPA Security Enc/Decr Key  * 
     C                   IF        WL0003 <> CGFFAB
     C                   EXSR      SECHRC
     C                   END                                                    *FI
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDCRRC        BEGSR
      *================================================================
      * Create SPA Security Enc/D - SPA Security Enc/Decr Key  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0006                         Create Date Tim
     C                   EVAL      WN0007 = ' '                                 Create User ID
     C                   EVAL      WN0008 = ' '                                 Create Program
     C                   EVAL      WN0009 = ' '                                 Update User Id
     C                   EVAL      WN0010 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @CGREVM
     C                   MOVEL     WL0001        WAE8AB                         SPA Authorizati
     C                   MOVEL     WL0002        WAE9AB                         SPA Process Env
     C                   MOVEL     WL0003        WAFFAB                         SPA Encr/Decr k
     C                   MOVEL     WL0004        WAVSST                         Record Status
     C                   MOVEL     WL0008        WABHTS                         Update Date Tim
      *
      * USER: Processing before Data update
      * Set Crt Time Stamp DDL IF
      * *** Set CREATE Time Stamp Info.
      * PAR.Create Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WABGTS                         Create Date Tim
     C                   EVAL      WARUU1 = ' '                                 Create User ID
     C                   MOVEL     ##USR         WARUU1                         Create User ID
     C                   EVAL      WARVU1 = ' '                                 Create Program
     C                   MOVEL     ##PGM         WARVU1                         Create Program
      * *** Set CHANGE Time Stamp Info.
      * Cannot set Update Date TS here, will error.
     C                   EVAL      WARWU1 = ' '                                 Update User Id
     C                   EVAL      WARXU1 = ' '                                 Update Program
     C     KLCRSD        KLIST
     C                   KFLD                    WAE8AB                         SPA Authorizati
     C                   KFLD                    WAE9AB                         SPA Process Env
      * Check for duplicate primary key
     C     KLCRSD        SETLL     @CGREVM                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5495'     W0RTN
      * Send message 'SPA Security Enc/Decr  EX'
     C                   MOVEL     'USR5495'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
     C                   WRITE     @CGREVM                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SECHRC        BEGSR
      *================================================================
      * Change SPA Security Enc/D - SPA Security Enc/Decr Key  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0011                         Create Date Tim
     C                   EVAL      WN0012 = ' '                                 Create User ID
     C                   EVAL      WN0013 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0014                         Update Date Tim
     C                   EVAL      WN0015 = ' '                                 Update User Id
     C                   EVAL      WN0016 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @CGREVM
     C                   MOVEL(P)  CGE8AB        WAE8AB                         SPA Authorizati
     C                   MOVEL(P)  CGE9AB        WAE9AB                         SPA Process Env
      *
     C     KLCHSE        KLIST
     C                   KFLD                    WAE8AB                         SPA Authorizati
     C                   KFLD                    WAE9AB                         SPA Process Env
     C     KLCHSE        CHAIN     @CGREVM                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PVCGREL0'    MDACP
     C                   MOVEL     '@CGREVM'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPVCG1        YARDCS
      * Move non-key fields to @CGREVM
     C                   MOVEL(P)  WL0003        WAFFAB                         SPA Encr/Decr k
     C                   MOVEL(P)  CGVSST        WAVSST                         Record Status
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVCG1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WABHTS                         Update Date Tim
     C                   EVAL      WARWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         WARWU1                         Update User Id
     C                   EVAL      WARXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         WARXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVCG1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @CGREVM                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PVCGREL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFCHRC        BEGSR
      *================================================================
      * Change SPA Security Contr - SPA Security Control Prcs  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0017                         Create Date Tim
     C                   EVAL      WN0018 = ' '                                 Create User ID
     C                   EVAL      WN0019 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0020                         Update Date Tim
     C                   EVAL      WN0021 = ' '                                 Update User Id
     C                   EVAL      WN0022 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YBRDC = ' '
      *
      * Move key fields to @CFCPVJ
     C                   MOVEL(P)  #1E8AB        CFE8AB                         SPA Authorizati
     C                   MOVEL(P)  #1E9AB        CFE9AB                         SPA Process Env
      *
     C     KLCHSF        KLIST
     C                   KFLD                    CFE8AB                         SPA Authorizati
     C                   KFLD                    CFE9AB                         SPA Process Env
     C     KLCHSF        CHAIN     @CFCPVJ                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PVCFCPL0'    MDACP
     C                   MOVEL     '@CFCPVJ'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL002.
     C                   MOVEL     'LBL002'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Check for changed record
     C                   IF        #1DBRC <> @1DBRC
     C                   MOVEL     'Y2U0007'     W0RTN
      * Send message '*Update not accepted'
     C                   MOVEL     'Y2U0007'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
      * Release record lock
     C                   UNLOCK    PVCFCPL0                             91      *
     C                   GOTO      SFEXIT
     C                   ENDIF                                                  FI #1DBRC
      * Store record data for null update check
     C                   MOVE      @1DBRC        YBRDCS
      * Move non-key fields to @CFCPVJ
     C                   MOVEL(P)  #1FAAB        CFFAAB                         SPA Authorizati
     C                   MOVEL(P)  #1FBAB        CFFBAB                         SPA Command Typ
     C                   MOVEL(P)  #1FCAB        CFFCAB                         SPA User ID
     C                   MOVEL(P)  YL0003        CFFDAB                         SPA Password
     C                   MOVEL(P)  #DFRAB        CFFEAB                         SPA IP Address
     C                   MOVEL(P)  #1VSST        CFVSST                         Record Status
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         CFBHTS                         Update Date Tim
     C                   EVAL      CFRWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         CFRWU1                         Update User Id
     C                   EVAL      CFRXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         CFRXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YBRDC = 'Y'
     C                   UPDATE    @CFCPVJ                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PVCFCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * Update saved record image
     C                   MOVEL     @1DBRC        #1DBRC
      * DBF change successful
      * USER: Processing after Data update
      * Crt/Chg Secu Ecn/Decr  RT - SPA Security Enc/Decr Key  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  CFE8AB        WL0001                         SPA Authorizati
     C                   MOVEL(P)  CFE9AB        WL0002                         SPA Process Env
     C                   MOVEL(P)  #DFFAB        WL0003                         SPA Encr/Decr k
     C                   MOVEL(P)  #1VSST        WL0004                         Record Status
     C                   MOVEL(P)  CFBGTS        WL0005                         Create Date Tim
     C                   MOVEL(P)  CFRUU1        WL0006                         Create User ID
     C                   MOVEL(P)  CFRVU1        WL0007                         Create Program
     C                   MOVEL(P)  CFBHTS        WL0008                         Update Date Tim
     C                   MOVEL(P)  CFRWU1        WL0009                         Update User Id
     C                   MOVEL(P)  CFRXU1        WL0010                         Update Program
     C                   EXSR      SCRVGN
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         Application Cod
      * Setup key
     C                   EVALR     WQSG01 = ' '                                 Application Cod
     C                   MOVEL     'C/S'         WQSG01                         Application Cod
      * Establish starting position
     C     KRSSG         SETLL     @DNRESF                                      *
     C     KRSSG         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SHRVGN
     C                   END                                                    *FI
     C     KRSSG         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WQSH01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSH01                         Application Cod
      * Establish starting position
     C     KRSSH         SETLL     @DNRESF                                      *
     C     KRSSH         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SHEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSH         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y1SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y1EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
      * KEY Screen
     C                   IF        @#DFMT = '#RCDKEY'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      * DETAIL Screen
     C                   IF        @#DFMT = '#RCDDTL1'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
     C                   IF        ZHCSRW = 019 AND
     C                             ZHCSCL = 020 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1VSST'      YPMTFD                         Record Status
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      1             YYLGCT                         # of grps
     C                   PARM      W0GRP         YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
      * Clear all neither parameters
      * Create SPA Security Contr - SPA Security Control Prcs  * 
     C                   MOVEL     XDTSDL        CFBGTS                         Create Date Tim
      * Initialize renamed input format fields
     C                   MOVEL     XDTSDL        WABGTS                         Create Date Tim
     C                   MOVEL     XDTSDL        WABHTS                         Update Date Tim
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SCRVGN.
     C                   EVAL      WL0001 = ' '
     C                   EVAL      WL0002 = ' '
     C                   EVAL      WL0003 = ' '
     C                   EVAL      WL0004 = ' '
     C                   MOVEL     XDTSDL        WL0005
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
     C                   MOVEL     XDTSDL        WL0008
     C                   EVAL      WL0009 = ' '
     C                   EVAL      WL0010 = ' '
      * Define null work field Record Status
     C                   EVAL      YN0001 = ' '
      * Define null work field Create Date Timestamp
     C                   MOVEL     XDTSDL        YN0002
      * Define null work field Create User ID
     C                   EVAL      YN0003 = ' '
      * Define null work field Create Program Name
     C                   EVAL      YN0004 = ' '
      * Define null work field Update Date Timestamp
     C                   MOVEL     XDTSDL        YN0005
      * Define null work field Update User Id
     C                   EVAL      YN0006 = ' '
      * Define null work field Update Program Name
     C                   EVAL      YN0007 = ' '
      * Define local work field SPA Encry Password    USR
     C                   EVAL      YL0001 = ' '
      * Define local work field Pswd Validation Sts   USR
     C                   EVAL      YL0002 = ' '
      * Define local work field SPA Password
     C                   EVAL      YL0003 = ' '
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   MOVEL     'CHG'         W0PMD
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SGRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
