// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWL5PVR
// ?Date: 14.08.2025 Time: 02:56:54
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 5/04/2021 JBB F17058 - Tattoo Repayments by Business User
//?                        Function created. Prompt Repayment Listing
//?                        selection criteria.
ENDDO;

//?USER: Load screen

// DTL.CC Company Number = PAR.CC Company Number
DTL.CC_Company_Number = PAR.CC_Company_Number;

// DTL.Include Comments Y/N = CND.No
DTL.Include_Comments_Y_N = 'N';

//?USER: Validate relations

//?Validate either Repayment ID entered or Date Range entered
CASE;

// IF DTL.TRH Repayment ID is EQ Zero
IF DTL.TRH_Repayment_ID = *ZERO;

// AND DTL.Date 2 USR is Not entered
AND DTL.Date_2_USR = *ZERO;

// AND DTL.TRH Payment Date is Not entered
AND DTL.TRH_Payment_Date = *ZERO;

// Send error message - 'Enter Repay ID or Dates'
ERROR(PRK1582);
MSGPARM(DTL.TRH_Repayment_ID);
MSGPARM(DTL.Date_2_USR);
MSGPARM(DTL.TRH_Payment_Date);

ENDIF;

//?Validate Repayment ID if entered
CASE;

// IF DTL.TRH Repayment ID is Entered
IF DTL.TRH_Repayment_ID <> *ZERO;

EXECUTE FUNCTION(Rtv Tattoo Repay Hdr  RT) TYPE(RTVOBJ) FILE(PWAWCPP)           AB1367208;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(DTL.TRH_Repayment_Status);
PARAMETER(NLL.TRH_Date_Start);
PARAMETER(NLL.TRH_Time_Start);
PARAMETER(NLL.TRH_Date_Complete);
PARAMETER(NLL.TRH_Time_Complete);
PARAMETER(NLL.TRH_Payment_Date);
PARAMETER(NLL.TRH_Payment_Step);
PARAMETER(NLL.TRH_Backup_File_Prefix);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?If record not found, send error message
CASE;

// IF NOT PGM.*Return code is *Normal
IF ! PGM.*Return_code = *BLANK;

// Send error message - 'Tattoo Repayment Header not found.'
ERROR(PRK1583);
MSGPARM(LCL.CC_Company_Number);
MSGPARM(DTL.TRH_Repayment_ID);

ENDIF;

ENDIF;

//?Validate From and To Dates
CASE;

// IF DTL.Date 2 USR is NE 0
IF DTL.Date_2_USR <> 0;

// AND DTL.TRH Payment Date is Entered
AND DTL.TRH_Payment_Date <> *ZERO;

//?To Date cannot be *LT From Date
CASE;

// IF DTL.TRH Payment Date LT DTL.Date 2 USR
IF DTL.TRH_Payment_Date < DTL.Date_2_USR;

// Send error message - 'From date cannot be later than to date.'
ERROR(PRK1450);
MSGPARM(DTL.TRH_Payment_Date);
MSGPARM(DTL.Date_2_USR);

ENDIF;

ENDIF;

//?USER: User defined action

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER(PAR.PRT_Description);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);

//?If F3 not pressed, print report
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Call program Prt Repayment Listing CL.
CALL PROGRAM(Prt Repayment Listing CL) ('PWMHUPC');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Date_2_USR);
PARAMETER(DTL.TRH_Payment_Date);
PARAMETER(DTL.@Status_Detail_Summary);
PARAMETER(DTL.TRH_Repayment_ID);
PARAMETER(DTL.TRH_Repayment_Status);
PARAMETER(DTL.Include_Comments_Y_N);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);

ENDIF;

