// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLV4XFR
// ?Date: 14.08.2025 Time: 02:55:35
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(Upd Auth Ent ViolationRT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1322038;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOL_Kill_Date);
PARAMETER(PAR.Truck_Auth_Entry_Time_USR);
{
 //?USER: Initialize routine

 //?E3503 JJH 10/28/14 - Get Control Value HPETRKTME
 //?Truck Authorized Entry Time
 DO;

 //?NOTE:  Company Value field will not allow Zero.  Therefore, 360
 //?was set to 00.0001, and it is being reset to 0 Minutes.
 // Call program Rtv Company Value Nbr XF.
 CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
 PARAMETER(WRK.BOH_Company_Number);
 PARAMETER('HPETRKTME');
 PARAMETER(LCL.System_Value_Numeric_USR);

 CASE;

 // IF LCL.System Value Numeric  USR is Less Than 1
 IF LCL.System_Value_Numeric_USR < 1;

 // LCL.Truck Auth Entry Time USR = CND.Zero
 LCL.Truck_Auth_Entry_Time_USR = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Truck Auth Entry Time USR = LCL.System Value Numeric  USR
 LCL.Truck_Auth_Entry_Time_USR = LCL.System_Value_Numeric_USR;

 ENDIF;

 ENDDO;

 //?USER: Process Data record

 // LCL.BOL Violated Auth Tme Sts = DB1.BOL Violated Auth Tme Sts
 LCL.BOL_Violated_Auth_Tme_Sts = DB1.BOL_Violated_Auth_Tme_Sts;

 EXECUTE FUNCTION(Chg Auth Ent ViolationIF) TYPE(EXCINTFUN)                      AB1321784;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.BOL_Truck_Scale_Weigh_Sts);
 PARAMETER(LCL.BOL_Violated_Auth_Tme_Sts);
 PARAMETER(DB1.BOL_Auth_Gate_Entry_Time);
 PARAMETER(DB1.BOL_Auth_Gate_Entry_Date);
 PARAMETER(LCL.Truck_Auth_Entry_Time_USR);
 PARAMETER(NLL.Dsp_Auth_Ent_ViolationUSR);
 {
  //?Execute internal function

  //?The purpose of this function is to determine if the Buy Order
  //?Load is in Violation of the Authorized Entry Date/Time.  If yes,
  //?this function will set the BOL Violated Auth Tme Sts = V and
  //?set display RED "V" on the Work With Delivery Receving scren.
  //?This function will add a Buy Order Load Comment indicating that
  //?BOL Violated Auth Tme Sts is in Violation.
  //?This logic will only be used if the Truck Auth Entry Time USR is
  //?GT Zero.
  CASE;

  // IF PAR.Truck Auth Entry Time USR is GT Zero
  IF PAR.Truck_Auth_Entry_Time_USR > *ZERO;

  //?Initialize Return Parameters
  // PAR.Dsp Auth Ent ViolationUSR = CND.No
  PAR.Dsp_Auth_Ent_ViolationUSR = 'N';

  // LCL.Auth Dt/Tm Violated USR = CND.No
  LCL.Auth_Dt_Tm_Violated_USR = 'N';

  //?Get System Date / Time
  // Call program Rtv System Date       UP.
  CALL PROGRAM(Rtv System Date       UP) ('PKPSUPR');
  PARAMETER(LCL.Current_Date_USR);

  // Execute function Rtv Current Time      US.
  EXECUTE FUNCTION(Rtv Current Time      US) TYPE(EXCUSRSRC) ('PKM1UFR');
  PARAMETER(LCL.*Job_time);
  {
   C                     TIME           #OA1TM
  }

  CASE;

  // IF PAR.BOL Truck Scale Weigh Sts is Arrival
  IF PAR.BOL_Truck_Scale_Weigh_Sts = 'A';

  CASE;

  // IF PAR.BOL Auth Gate Entry Date is Zero
  IF PAR.BOL_Auth_Gate_Entry_Date = *ZERO;

  // OR PAR.BOL Auth Gate Entry Date LT LCL.Current Date USR
  OR PAR.BOL_Auth_Gate_Entry_Date < LCL.Current_Date_USR;

  // LCL.Auth Dt/Tm Violated USR = CND.Yes
  LCL.Auth_Dt_Tm_Violated_USR = 'Y';

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Determine if Authorized Entry Time is Violated
  //?Adjust Current Date and Time
  // LCL.Truck Auth Entry Time USR = PAR.Truck Auth Entry Time USR * CON.100 *
  LCL.Truck_Auth_Entry_Time_USR = PAR.Truck_Auth_Entry_Time_USR * 100;

  // LCL.Current Time USR = LCL.*Job time + LCL.Truck Auth Entry Time USR
  LCL.Current_Time_USR = LCL.*Job_time + LCL.Truck_Auth_Entry_Time_USR;

  CASE;

  // IF LCL.Current Time USR LT LCL.Truck Auth Entry Time USR
  IF LCL.Current_Time_USR < LCL.Truck_Auth_Entry_Time_USR;

  // LCL.Current Date USR = LCL.Current Date USR + CON.1 *DAYS
  LCL.Current_Date_USR = DATEINCR(LCL.Current_Date_USR 1 'DY' 1111111 'NONE' 'N' 1);

  ENDIF;

  CASE;

  // IF LCL.Current Date USR EQ PAR.BOL Auth Gate Entry Date
  IF LCL.Current_Date_USR = PAR.BOL_Auth_Gate_Entry_Date;

  CASE;

  // IF LCL.Current Time USR GT PAR.BOL Auth Gate Entry Time
  IF LCL.Current_Time_USR > PAR.BOL_Auth_Gate_Entry_Time;

  // LCL.Auth Dt/Tm Violated USR = CND.Yes
  LCL.Auth_Dt_Tm_Violated_USR = 'Y';

  ENDIF;

  ENDIF;

  ENDIF;

  //?Update BOL Violated Auth Tme Sts = Violated
  CASE;

  // IF LCL.Auth Dt/Tm Violated USR is Yes
  IF LCL.Auth_Dt_Tm_Violated_USR = 'Y';

  CASE;

  // IF PAR.BOL Violated Auth Tme Sts is No Violations
  IF PAR.BOL_Violated_Auth_Tme_Sts = *BLANK;

  EXECUTE FUNCTION(Chg BOL Auth Time Sts CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1321787;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER('V');
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // Call program Crt BOL System Comment XF.
  CALL PROGRAM(Crt BOL System Comment XF) ('PLVZXFR');
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER('Truck Violated Authorized');
  PARAMETER(' Gate Entry Time');
  PARAMETER('N');
  PARAMETER(PAR.Truck_Auth_Entry_Time_USR);

  ENDIF;

  //?Display V=Violated in RED
  // PAR.Dsp Auth Ent ViolationUSR = CND.Yes
  PAR.Dsp_Auth_Ent_ViolationUSR = 'Y';

  // PAR.BOL Violated Auth Tme Sts = CND.Violated
  PAR.BOL_Violated_Auth_Tme_Sts = 'V';

  ENDIF;

  ENDIF;

  ENDIF;

 }

}


