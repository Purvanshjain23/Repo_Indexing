     H/TITLE WW Cust/DevDt Inq O.E. DF Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSPATI
     H* Date          : 04/26/24  Time  : 06:10:13
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVE9DFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: WW Cust/DevDt Inq O.E. DF Display file
      *
     FOPBFCPNO  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RSQ : Order Header TRG          Co/Del Dt
      *
     FCAABREL1  IF   E           K DISK
      * RTV : Company Name and Address  Retrieval index       V
      *
      * Days in month for date validation
     D @XD             S              2  0 DIM(12)CTDATA PERRCD(12)
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDOFF           DS
      * Cut-off year
     D  XOFF                   1      4  0
     D  XOFFYY                 3      4  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  WZAIC3         S                   LIKE(#2AIC3)
     D  WZBKC7         S                   LIKE(#2BKC7)
     D  WZGNDT         S                   LIKE(#2GNDT)
     D  WZA0DT         S                   LIKE(#2A0DT)
     D  WZEIDT         S                   LIKE(#2EIDT)
     D  WZC4NB         S                   LIKE(#2C4NB)
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  XDWK1          S              8  0
     D  XDDTFM         S              3
     D  WUI3ST         S              1
     D  WUEOCD         S              7
     D  ZADFMF         S             10
     D  WQ0001         S              3  0
     D  W0CLPG         S             10
     D  WUDMCD         S              3
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D J7              S              1    DIM(7)
     D K7              S              1    DIM(7)
     D #L7             S              1    DIM(7)
     D #L3             S              1    DIM(3)
      /EJECT
      * Parameter declarations
     D P1PARM          DS             6
      * KEY: Order Header TRG          Co/Del Dt
      * I : RST Company Number
     D  P1AIC3                 1      2P 0
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'CD7 Non numeric data'
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: Order Head
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEEIDT                         Requested Deliv
      * Setup key
     C                   Z-ADD     #2AIC3        BEAIC3
     C                   Z-ADD     #2EIDT        BEEIDT
     C     KPOS          SETLL     @BFCPKO
     C     KRST          KLIST
     C                   KFLD                    BEAIC3                         Company Number
      * Setup key
     C                   Z-ADD     #2AIC3        BEAIC3
     C     KRST          READE     @BFCPKO                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2AIC3        WZAIC3                         Company Number
     C                   MOVEL     #2BKC7        WZBKC7                         Ship To Custome
     C                   MOVEL     #2GNDT        WZGNDT                         Actual Shipped
     C                   MOVEL     #2A0DT        WZA0DT                         Order Date
     C                   MOVEL     #2EIDT        WZEIDT                         Requested Deliv
     C                   MOVEL     #2C4NB        WZC4NB                         Order Number
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @BFCPKO                                90    *
     C  N82              READ      @BFCPKO                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(33)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2BKC7 <> *ZERO
     C     BEBKC7        CABNE     #2BKC7        BB020                          Ship To Custome
     C                   END
     C                   IF        #2GNDT <> *ZERO
     C     BEGNDT        CABNE     #2GNDT        BB020                          Actual Shipped
     C                   END
     C                   IF        #2A0DT <> *ZERO
     C     BEA0DT        CABNE     #2A0DT        BB020                          Order Date
     C                   END
     C                   IF        #2C4NB <> *ZERO
     C     BEC4NB        CABNE     #2C4NB        BB020                          Order Number
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
     C                   MOVEL     'Y'           W0RSL
      * Allow for possible *Set Cursor processing
     C                   ADD       1             ##RR
      * USER: Initialize subfile record from DBF record
     C                   SUB       1             ##RR
      * DBF record not selected
     C     W0RSL         CABNE     'Y'           BB020
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C     KRST          READE     @BFCPKO                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30
     CANN27              EXSR      MOCV#2
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate Requested Delivery Date
      * External date
     C                   Z-ADD     V2EIDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9931      *
     C                   END
     C                   Z-ADD     XDINDT        #2EIDT
      * Validate Order Number and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V2C4NB        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V2C4NB        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(001)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #2C4NB                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #2C4NB                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      *................................................................
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZEIDT        CASNE     #2EIDT        FBRQRL
     C     WZC4NB        CASNE     #2C4NB        FBRQRL
     C                   END
     C     DATAG1        TAG
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @BFCPKO fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   MOVEL     BEJNCD        #1JNCD                         Order Type_Sale
     C                   Z-ADD     BEANC7        #1ANC7                         AR Customer Num
     C                   MOVEL     BEHMNA        #1HMNA                         Ship To Address
     C                   MOVEL     BEHONA        #1HONA                         Ship To Address
     C                   MOVEL     BEHPNA        #1HPNA                         Ship To Address
     C                   MOVEL     BEHNNA        #1HNNA                         Ship To City
     C                   MOVEL     BEDBCD        #1DBCD                         Ship To State C
     C                   MOVEL     BECKTX        #1CKTX                         Ship To Zip_Pos
     C                   Z-ADD     BEB0C7        #1B0C7                         Bill to Custome
     C                   MOVEL     BEAETX        #1AETX                         Bill to Name
     C                   MOVEL     BEB1NA        #1B1NA                         Bill to Address
     C                   MOVEL     BEB3NA        #1B3NA                         Bill to Address
     C                   MOVEL     BEB4NA        #1B4NA                         Bill to Address
     C                   MOVEL     BEB2NA        #1B2NA                         Bill to City
     C                   MOVEL     BEBHCD        #1BHCD                         Bill to State C
     C                   MOVEL     BEC8TX        #1C8TX                         Bill to Zip_Pos
     C                   MOVEL     BEBCNA        #1BCNA                         Customer Purcha
     C                   Z-ADD     BEA5DT        #1A5DT                         Requested Ship
     C                   Z-ADD     BEGNDT        #1GNDT                         Actual Shipped
     C                   Z-ADD     BEACDT        #1ACDT                         Cancel Date
     C                   MOVEL     BEAQCD        #1AQCD                         Terms Code
     C                   MOVEL     BEB6NA        #1B6NA                         Special Instruc
     C                   MOVEL     BEBYNA        #1BYNA                         Special Instruc
     C                   MOVEL     BEBZNA        #1BZNA                         Carrier Code
     C                   MOVEL     BEGTST        #1GTST                         Comment Print A
     C                   MOVEL     BEGVST        #1GVST                         Comment Print I
     C                   MOVEL     BEGUST        #1GUST                         Comment Print P
     C                   MOVEL     BEQFST        #1QFST                         Comment Print S
     C                   MOVEL     BECQCD        #1CQCD                         Reason Code
     C                   MOVEL     BEGJST        #1GJST                         Order in Use
     C                   MOVEL     BEGWST        #1GWST                         Header Status
     C                   MOVEL     BEGXST        #1GXST                         Header Status L
     C                   MOVEL     BEGYST        #1GYST                         Order Type Prin
     C                   Z-ADD     BEAODT        #1AODT                         Scheduled Ship
     C                   MOVEL     BEAIVN        #1AIVN                         User Original E
     C                   Z-ADD     BECXDT        #1CXDT                         Date of Origina
     C                   Z-ADD     BEJZVA        #1JZVA                         Order Value Tot
     C                   Z-ADD     BEA1WG        #1A1WG                         Order Weight To
     C                   MOVEL     BEXIST        #1XIST                         Credit Hold
     C                   MOVEL     BEXJST        #1XJST                         Production Hold
     C                   MOVEL     BEXKST        #1XKST                         New Customer Ho
     C                   Z-ADD     BEAFTM        #1AFTM                         Requested Deliv
     C                   MOVEL     BEE8CD        #1E8CD                         Accounts Receiv
     C                   MOVEL     BEE9CD        #1E9CD                         Accounts Receiv
     C                   Z-ADD     BERMNB        #1RMNB                         Load ID
     C                   Z-ADD     BETBNB        #1TBNB                         Absorbed Freigh
     C                   Z-ADD     BER1NB        #1R1NB                         Rated Freight
     C                   MOVEL     BEPJST        #1PJST                         LTL Flag
     C                   MOVEL     BEU0ST        #1U0ST                         Price Audit
     C                   MOVEL     BEU1ST        #1U1ST                         Price Status
     C                   MOVEL     BEQ2CD        #1Q2CD                         Shipping Method
     C                   MOVEL     BEU2ST        #1U2ST                         Export Status
     C                   MOVEL     BEVEST        #1VEST                         Palletize
     C                   MOVEL     BEVFST        #1VFST                         Shrink Wrap
     C                   MOVEL     BEVGST        #1VGST                         Slip Sheet
     C                   MOVEL     BERPCD        #1RPCD                         Age Code
     C                   Z-ADD     BERNNB        #1RNNB                         Reefer Temperat
     C                   MOVEL     BEVDST        #1VDST                         Load Type
     C                   Z-ADD     BEATIN        #1ATIN                         Attach to Invoi
     C                   MOVEL     BEU4ST        #1U4ST                         Load Plan Order
     C                   MOVEL     BEU5ST        #1U5ST                         Print Pick Slip
     C                   Z-ADD     BERSRN        #1RSRN                         Resell Referenc
     C                   MOVEL     BEMHNA        #1MHNA                         Special Comment
     C                   MOVEL     BEMINA        #1MINA                         Special Comment
     C                   MOVEL     BEWBST        #1WBST                         Affect Auto Acc
     C                   MOVEL     BER4CD        #1R4CD                         Sales Route Cod
     C                   MOVEL     BEBFCD        #1BFCD                         Manager Level C
     C                   MOVEL     BEQ4CD        #1Q4CD                         VP Level Code
     C                   Z-ADD     BET3NB        #1T3NB                         Attach to Order
     C                   MOVEL     BESICD        #1SICD                         Reason for Pric
     C                   Z-ADD     BECONB        #1CONB                         Invoice Number
     C                   MOVEL     BECEST        #1CEST                         Invoice Suffix
     C                   Z-ADD     BEAWDT        #1AWDT                         Invoice Date
     C                   MOVEL     BEJPCD        #1JPCD                         Event Code
     C                   MOVEL     BEXUST        #1XUST                         Trans Contol AS
     C                   MOVEL     BEZ1ST        #1Z1ST                         Modified Flag
     C                   Z-ADD     BEVRVA        #1VRVA                         A_R order Value
     C                   MOVEL     BEOBST        #1OBST                         Billing Activit
     C                   MOVEL     BEBCST        #1BCST                         Block Order Fla
     C                   MOVEL     BEBDST        #1BDST                         Order Certifica
     C                   Z-ADD     BEB7VL        #1B7VL                         Invoice Order V
     C                   MOVEL     BEGASX        #1GASX                         Process Sts for
     C                   MOVEL     BEGBSX        #1GBSX                         Order Conf Fax
     C                   MOVEL     BEGCSX        #1GCSX                         Manifest Fax St
     C                   MOVEL     BEGDSX        #1GDSX                         Invoice Fax Sts
     C                   MOVEL     BEFNSX        #1FNSX                         Transfer in Sto
     C                   MOVEL     BEFOSX        #1FOSX                         Email Cust On O
     C                   MOVEL     BEFPSX        #1FPSX                         Order Emailed
     C                   MOVEL     BEFQSX        #1FQSX                         Export Docs Go
     C                   MOVEL     BEFRSX        #1FRSX                         Shipping Temp C
     C                   MOVEL     BEFSSX        #1FSSX                         Broker Order St
     C                   MOVEL     BEFTSX        #1FTSX                         Air Freight Ord
     C                   MOVEL     BEFUSX        #1FUSX                         Order Requires
     C                   MOVEL     BEFVSX        #1FVSX                         OH Load Plan Re
     C                   MOVEL     BEFWSX        #1FWSX                         Export USDA App
     C                   MOVEL     BEFXSX        #1FXSX                         HPB Ship to War
     C                   MOVEL     BEFYSX        #1FYSX                         OH TF Exempt Co
     C                   Z-ADD     BENODT        #1NODT                         OH Appt Confirm
     C                   Z-ADD     BENPDT        #1NPDT                         JPN Invoice Iss
     C                   Z-ADD     BENQDT        #1NQDT                         Load Actual Shi
     C                   Z-ADD     BENRDT        #1NRDT                         Load BOL Comple
     C                   Z-ADD     BENSDT        #1NSDT                         Load Truck Depa
     C                   Z-ADD     BEBPTM        #1BPTM                         Maximum Gross W
     C                   Z-ADD     BEBQTM        #1BQTM                         Time of Origina
     C                   Z-ADD     BEBRTM        #1BRTM                         OH Appt Confirm
     C                   Z-ADD     BEBSTM        #1BSTM                         Load BOL Comple
     C                   Z-ADD     BEBTTM        #1BTTM                         Load Truck Depa
     C                   Z-ADD     BEH0NX        #1H0NX                         Act Frt Referen
     C                   Z-ADD     BEH1NX        #1H1NX                         Act Non_Ref Frt
     C                   Z-ADD     BEH2NX        #1H2NX                         OH Fuel Surchar
     C                   Z-ADD     BEH3NX        #1H3NX                         OH Total Non_Re
     C                   Z-ADD     BEH4NX        #1H4NX                         OH Total Ref Fr
     C                   Z-ADD     BEC0C7        #1C0C7                         Claim Number
     C                   MOVEL     BEUVST        #1UVST                         EDI Status 1
     C                   MOVEL     BEUWST        #1UWST                         EDI Status 2
     C                   MOVEL     BEUXST        #1UXST                         EDI Status 3
     C                   Z-ADD     BEAATM        #1AATM                         Job Time
     C                   MOVEL     BEAYNA        #1AYNA                         User Id
     C                   MOVEL     BEA0NA        #1A0NA                         Job Name
     C                   Z-ADD     BEAXDT        #1AXDT                         Job Date
     C                   Z-ADD     BEEIDT        #1EIDT                         Requested Deliv
      * Clear external version also
     C                   Z-ADD     *ZERO         V1EIDT
     C                   Z-ADD     BEC4NB        #1C4NB                         Order Number
      * Clear external version also
     C                   EVAL      V1C4NB = ' '
     C                   Z-ADD     BEAIC3        #1AIC3                         Company Number
      * Clear external version also
     C                   EVAL      V1AIC3 = ' '
     C                   Z-ADD     BEA0DT        #1A0DT                         Order Date
      * Clear external version also
     C                   Z-ADD     *ZERO         V1A0DT
     C                   Z-ADD     BEBKC7        #1BKC7                         Ship To Custome
      * Clear external version also
     C                   EVAL      V1BKC7 = ' '
     C                   MOVEL     BEBRTX        #1BRTX                         Ship To Name
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   Z-ADD     P1AIC3        #2AIC3                         Company Number
     C                   Z-ADD     *ZERO         #2BKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         #2GNDT                         Actual Shipped
     C                   Z-ADD     *ZERO         #2A0DT                         Order Date
     C                   Z-ADD     *ZERO         #2EIDT                         Requested Deliv
      * Clear external version also
     C                   Z-ADD     *ZERO         V2EIDT
     C                   Z-ADD     *ZERO         #2C4NB                         Order Number
      * Clear external version also
     C                   EVAL      V2C4NB = ' '
      * Check restriction within
     C                   EXSR      VACKRL
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Requested Delivery Date to display format
      * Convert date
     C     1000000       ADD       #1EIDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1EIDT
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C4NB <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C4NB        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C4NB                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C4NB = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1AIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1AIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Order Date to display format
      * Convert date
     C     1000000       ADD       #1A0DT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1A0DT
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1BKC7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1BKC7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1BKC7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1BKC7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   MOCV#2        BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Requested Delivery Date to display format
      * Convert date
     C     1000000       ADD       #2EIDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V2EIDT
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #2C4NB <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #2C4NB        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V2C4NB                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V2C4NB = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
     C                   IF        YPMTFD = '#2AIC3'
     C                   CALL      'PDL7SRR'                            90      SEL Co - Rtn 0
     C                   PARM      *BLANK        W0RTN
     C     #2AIC3        PARM      #2AIC3        WQ0001                         Company Number
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDL7SRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #2AIC3 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VA999
     C                   END
     C                   END
      *................................................................
      *
     C     KLVAAB        KLIST
     C                   KFLD                    ABAIC3                         Company Number
      * Setup key
     C                   Z-ADD     #2AIC3        ABAIC3
     C     KLVAAB        CHAIN     @ABREAK                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
     C     VA999         TAG
      * Restrictor relation not satisfied
      * Send message 'Company Name and Addre NF'
     C                   MOVEL     'USR0003'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR0003'     P0RTN
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   XDCK2         BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                   MOVEL     *BLANK        W0RTN
     C                   Z-ADD     *ZERO         XDINDT
      * If external date is zero, do not check
     C     XDEXDT        CABEQ     *ZERO         XDCK2E
      *................................................................
      * Map external to internal according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDEX02        XDINDD                         DD
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDEX02        XDINMM                         MM
     C                   Z-ADD     XDEX03        XDINDD                         DD
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDEX02        XDINYY                         YY
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINDD                         DD
     C                   END
     C                   END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C                   IF        XDINYY < XOFFYY
     C                   ADD       100           XDINYY
     C                   END
     C     YPMTFD        CABNE     *BLANK        XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C     XDINMM        CABLT     1             XDCK2M
     C     XDINMM        CABGT     12            XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C     XDINDD        CABLT     1             XDCK2M
     C     XDINDD        CABGT     @XD(XDINMM)   XDCK2M
      *................................................................
      * Special case: leap year
     C                   IF        XDINMM = 2
     C                   IF        XDINYY <> *ZERO AND
     C                             XDINYY <> 200
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   ELSE
     C                   Z-ADD     1             XDWK1
     C                   END
      * Year is not leap
     C                   IF        XDWK1 <> *ZERO
     C     XDINDD        CABGT     28            XDCK2M
     C                   END
     C                   END
     C                   GOTO      XDCK2E
      *................................................................
      * Send error message
     C     XDCK2M        TAG
      * Send message '*Invalid date'
     C                   MOVEL     'Y2U0006'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   MOVEL     'Y2U0006'     W0RTN
      * Disable time portion if timestamp is validated
     C                   Z-ADD     *ZERO         XTTIM
      *================================================================
     CSR   XDCK2E        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     9             ZHSTRW
     C                   Z-ADD     21            ZHNDRW
     C                   Z-ADD     1             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define work field USR First Position
     C                   EVAL      WUI3ST = ' '
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C     *DTAARA       DEFINE    Y2CTOFF       XOFF
     C                   IN        XOFF
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     13            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
** @XD
312931303130313130313031
** @CN
00001 USR0752
